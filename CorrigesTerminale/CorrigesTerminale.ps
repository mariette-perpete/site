%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesTerminale.dvi
%%CreationDate: Wed Sep 18 13:09:46 2024
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Letters-Italic
%%+ Utopia-Italic Fourier-Math-Symbols Fourier-Math-BlackBoard LINE10
%%+ EURM10 Fourier-Math-Letters Fourier-Math-Extension Fourier-Math-Cal
%%+ FontAwesome5Free-Solid fourier-orns
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesTerminale.ps
%+ CorrigesTerminale.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.09.18:1509
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: fa5free1.enc 0 0
/fa5free1 [
/dice-two
/digital-tachograph
/directions
/divide
/dizzy
/dna
/dog
/dollar-sign
/dolly
/dolly-flatbed
/donate
/door-closed
/door-open
/dot-circle
/dove
/download
/drafting-compass
/dragon
/draw-polygon
/drum
/drum-steelpan
/drumstick-bite
/dumbbell
/dumpster
/dumpster-fire
/dungeon
/edit
/egg
/eject
/ellipsis-h
/ellipsis-v
/envelope
/envelope-open
/envelope-open-text
/envelope-square
/equals
/eraser
/ethernet
/euro-sign
/exchange-alt
/exclamation
/exclamation-circle
/exclamation-triangle
/expand
/expand-alt
/expand-arrows-alt
/external-link-alt
/external-link-square-alt
/eye
/eye-dropper
/eye-slash
/fan
/fast-backward
/fast-forward
/fax
/feather
/feather-alt
/female
/fighter-jet
/file
/file-alt
/file-archive
/file-audio
/file-code
/file-contract
/file-csv
/file-download
/file-excel
/file-export
/file-image
/file-import
/file-invoice
/file-invoice-dollar
/file-medical
/file-medical-alt
/file-pdf
/file-powerpoint
/file-prescription
/file-signature
/file-upload
/file-video
/file-word
/fill
/fill-drip
/film
/filter
/fingerprint
/fire
/fire-alt
/fire-extinguisher
/first-aid
/fish
/fist-raised
/flag
/flag-checkered
/flag-usa
/flask
/flushed
/folder
/folder-minus
/folder-open
/folder-plus
/font
/football-ball
/forward
/frog
/frown
/frown-open
/funnel-dollar
/futbol
/gamepad
/gas-pump
/gavel
/gem
/genderless
/ghost
/gift
/gifts
/glass-cheers
/glasses
/glass-martini
/glass-martini-alt
/glass-whiskey
/globe
/globe-africa
/globe-americas
/globe-asia
/globe-europe
/golf-ball
/gopuram
/graduation-cap
/greater-than
/greater-than-equal
/grimace
/grin
/grin-alt
/grin-beam
/grin-beam-sweat
/grin-hearts
/grin-squint
/grin-squint-tears
/grin-stars
/grin-tears
/grin-tongue
/grin-tongue-squint
/grin-tongue-wink
/grin-wink
/grip-horizontal
/grip-lines
/grip-lines-vertical
/grip-vertical
/guitar
/hamburger
/hammer
/hamsa
/hand-holding
/hand-holding-heart
/hand-holding-usd
/hand-lizard
/hand-middle-finger
/hand-paper
/hand-peace
/hand-point-down
/hand-pointer
/hand-point-left
/hand-point-right
/hand-point-up
/hand-rock
/hands
/hand-scissors
/handshake
/hands-helping
/hand-spock
/hanukiah
/hard-hat
/hashtag
/hat-cowboy
/hat-cowboy-side
/hat-wizard
/hdd
/heading
/headphones
/headphones-alt
/headset
/heart
/heartbeat
/heart-broken
/helicopter
/highlighter
/hiking
/hippo
/history
/hockey-puck
/holly-berry
/home
/horse
/horse-head
/hospital
/hospital-alt
/hospital-symbol
/hotdog
/hotel
/hot-tub
/hourglass
/hourglass-end
/hourglass-half
/hourglass-start
/house-damage
/hryvnia
/h-square
/ice-cream
/icicles
/icons
/i-cursor
/id-badge
/id-card
/id-card-alt
/igloo
/image
/images
/inbox
/indent
/industry
/infinity
/info
/info-circle
/italic
/jedi
/joint
/journal-whills
/kaaba
/key
/keyboard
/khanda
/kiss
/kiss-beam
/kiss-wink-heart
/kiwi-bird
/landmark
/language
/laptop
/laptop-code
/laptop-medical
/laugh
/laugh-beam
/laugh-squint
/laugh-wink
/layer-group
/leaf
/lemon
/less-than
/less-than-equal
/level-down-alt
/level-up-alt
/life-ring
/lightbulb
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 112 /radicalbig put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 161 /parenleftbig put
dup 162 /parenrightbig put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
dup 181 /parenleftbigg put
dup 182 /parenrightbigg put
dup 189 /braceleftbigg put
dup 190 /bracerightbigg put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B286886CE534D6C5FD912099
3A92B663224BA680BB6D7ADA2F0D0A2E70E3B183C5952EFD288BB1F787B9E558
AAC41DEDA6E48A8951959336D5914E24F5CD5535C3E56A8EB5794980739133DF
DC62B7FCB563829ADE6CC1D269EB8BF7FB2277C78855BF64EC9BF694D1E7BA89
629CD8492171048BBC3627CC127B35D443B9E4987D71518DB6784756393CE1C1
B41B3B7C3CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E0D47F4F435F098D34
6360D280B813A8BEA26BEBE94936A45983041115DB80EE611AE48CE6F570493D
30555065F649FE81E6B3B1E8D0ECC21206BB80BCFF3FD6C2207B1A429577D5D9
D66A0F8268D4AAEB28AE27AC8CBABF042A6A15F0CB3762DD40053E9184BE0525
A583A918D339C1DFB90CED5EB0FC05B94A2511D90C2E6ADCEB16B34EE0E57E0C
D0B4B58826FFC9A9F913B55BE28FC0D53E3BF53C3E0DB82FB939FC108E176023
84952BE904C3104E28F1BC92975FD6E11FD00743FEDE965259A3EC5847D3E6BC
72CEB25F3D0BC0DB85EB2013C9C2682963466334F43E19D35D09615E22540705
8E642B3F3829CF75DF161C16CFEFB149CB67410C30C1F0203646F53CDDEC1DE5
2420B6D9F5E6FA1855513B7131C7A04B00038E4A5A5B78A7962FCC1435C2643A
529351200BF30403E054946ABE4EBCAE4B083210967C9F4EE52F4B02A5C1A72B
89E3A4939C152ACE83E912CB7AD280F09997BA0169E6CDA2C46A1574A39B61A5
EBD0D519ADA5800005616C82DF89CFD601A78D58CF2BFBC4B1D57993B062E922
30E836BCE0075438EB5C1DC0E7194022C27F7FC4E23576F354A66710A4674F99
EDFA00C510884E0CA14DA5BD9E017D60FC01124BABE23FF62E75FCA39CB4B127
A1AA28CEDF94849373C0028330F91062E5CA71E803F077572234B5E42D053482
045F9AF9790A718974079E36D67129C17A6FCC288B9CB288231E10BDA8AC0BAF
795333376EB4C186DD1A8504330449B18F8D429B95D709D9A2531462945084D8
BF715E80C7F3215AF7DB5BBD83B5342D6226AFC6BA27D325DF0F6E326CB050D5
8F8A7F8780AF8CC5CAA2870BA9C8FBB4DFAC1E5D9A3FABC113E84E6AF98F2181
34496CA419FA91186F15358CA6C8C48F7238152D8E65C278CB5D598E827C70EE
AE32FDF008D5BBB3BBC356931D45C34C4E0A6D5C41063BC6AFF8D52422BEAABF
0D8B3545CF7B15D967021693D0C6EB456BDE47D6F9DAD18BE663D23DC9313A5E
09A7E5587037719EAEA1438E1BE86C1ED63D988D09C35E695D0B6657BB1E3797
C15A9DA853D611AE282C0A756894556D001BE29D0EBFA4DF0100F197D5138022
0C3DE8D9B0E816D222E7B418FDE1175870A3E4803C73D2CEA521B6F472427FF6
B7CA53D4AF685B08ED9A273000E1FB00B97A0646ABADD1EA8271A6A4F5BE81BD
09B9971ED0882CC89E6B2F2C94A9F3E25A66E844EB9E03E0A1BFDE8CCF883516
6FF41A3571E1FB0886600821FB5480293BD8980074A6AA0B038B4C7B0219E944
AFAF86D2A89526B7A62315FAD299B30ADE7D40C5F66EF2CF96C9A37B53F0EC2C
B34B28B1F62DD4E33FD69CCEABA456C6BF3D66B6DCF5FA89B1358B1FB1A232CF
C698D0B13F9F6342F4B4A1F59CB6709180D378C1C89CF6A231F6162D53C04DD4
1A6D157B8AFC79B955BD5781EEFA14BBEB50C437FE91B6445BBCC5EBFE8CF353
7B6B9823ABA610B184390F90897B36CF03EB65DA44D6191B32E84C734EE6854F
587344D7BA70D21F1A93FF8B97842FAB53C30F3AE2A25DE31DEEA18ADE3B4B2E
B8C926DB23BAC350B602375D9247DCF441606CD95AF818BF68E74DEA5DE9CEBF
434494BEA8D24D30756937DE64860B7BD8F65557C89796A26564C6CCB48A8A14
2A62DA13D60DABB9205FEAA950B66856BE8357D320FC771547F7D21C7ADE26DB
AC4C6C888EE2C962FF21E19D92B5B5361764AAF8F44FACE8FD12730354EC5B1B
5007ACF5E7BA2F799616D0730856B9368FC3C94337DD9E7761A6E3CAAAF498AC
088B71A2FE5805185B7E785B61D09E1EEC2996B5B07C38E0735FE751A27BB435
7005FCF168D1E91761B161CB1A3AD3A1B71312B9A9C51FA3A062B80877693926
71487DE976D30872AA2C53C7E194E3A937AA55B6C7D82F47C84D6442EDE9D8CA
437B5594EE654D82C77B463F9233DBEF58EDAFDF6F7F0929598F7F16F0E9000E
1F4A0A28914B2CBBE84BF31A900DB7B155563E3CCDAF8BD2390AB44B906EB62A
531EC13E7E70AA55D60F293339C61C7975DD097D545D1F3248AB70A68748FD67
C56D624E2A55583814170CFCD9404B8FA70E0023782096F65EB54D32454A1898
78C38CE527AA86807EC3E1227B7CE847509DBD81B3B43A0B847A8F1241B81EC7
72A046C247FF1DAB189A48D8C6DAE82FBB17657C49BE55C12F771C8EAC3DE259
E89C609D07B967FFBA362178217848EBADC28AA3F631DDFC94047886D5F41E60
EEA98FFA72164F794B6F26447E8511BFA3F658404B3A0B1B7B67018F93332ABB
66FFA107FCCCC865973CB271D828FA0C406076FD2C9CE908ACD9CA586B3D62AC
746B36DA94C3ED21A9D7DC05C8E6492D65AAB17BCE39262842030383F571C71B
3B860FCB20BA0E8ADAF316CF943B7C5822412ADCF6087B3744E51EC4DCA7C9B1
126555F6EA78423C42D7923EFF8A69F2B57F56EC41CFE904B955F5196E0A2FA6
FC66706575512F883664D5AF934BDE9F2D987115D600A098E0AD03F73A6E168B
6831F40E0447A54B8AD8EBE9F28C2B8DFE8E8A52C773EF0F5D0445DCEDFC1C0B
FFF7A5221AABCC2117B580B7385763D90DADE05878D533A573F29328F843B5FD
4A9A66DFE3F43DE701B315A4509EE27965ADC99DC8589A95A12A45964DC375DE
A96038330E9E5386F041DA39E5966394081A07894D3054CCF04C3F1A0873BD31
9415EC16083AFE821CE3E05D9B8646AB9BA965B2F4A77EE8CC94E4B82862B9E2
8EFDCB5561BFB049F939E67948A147F36C55A41834E161159B0D92554A96E750
E7D55D2F850C91159DAE7476A56BDF0327CF3796BB5E8A5D626008E54B0C352A
E043585E057DAE12AFBF8342D6915BE12CFA504D593D0C24691720A66A58F4C0
89E1D719A89B6D8BF526E4E8C6A13A84EDA58BEE5E65A727EDCB3B15139540DA
83416EF5AC0F39F3611C7665F4A2171660122BE459A56A04217CCE29860CC7CD
9BEB1D6A7C31C4676D7C7E42612F5A0150BD9463F18C63DD7DFD6A88A60DD12D
69B26D86099A1B6878C28EF6CADB9925697ED3C8BD1433C33D57D9888C52B20A
F52F18A570A8F5C3E016C96EA238C7A76F8C015D37F0F3311CB72B8A13FCDF93
1EF83C2296D1CE6BAED373E14572F34D0B85E811403480481062D094AE169A24
F2778B1E6E29B90D4169D57DF0580E8CAC746C14CD2867342A7E7926CF87EA02
ABD5928797E1D1B1C665E2CCF8565F2A01805C495812DA6230F08AACE83CE521
DED10B9995E620DAEE00AA267B6F5D30C265551ABF1FD290A98416C5C2626EF4
B8DDD5C8D75937895E60B0BE042C9BF4CBCEBF13FECD84260FA94E6BB446C158
9AC8BC2FAA4AC4F4581629366FC237631A0E31A8273163A3F4837FE5B3267BD4
717E8D7F3DC4E77A202101D2A211BA4530A9B51C676DD5D68A56819C81822093
29B84138B96865A4DAB6BAA6E4F3F9DEB6662CC0A0D3CF5ADCD163AC97D24EA9
123D065597CADEEBDAA6128B8066FED61775A0D55FC7AF5A04112D6218C7FACE
B1CF2791EADD1F4679E8B46CCBC4E444FDB5568DB1B78A930C3663FFA59E6522
A86984A41EDA800AEF17C122547EC7FFA9C513FBB3838E3ED9D485CB7A906247
AECA34B26230E280D833093003221B3904DD57FEA0F603B8C490A2B17158E253
E5DB87A29AEDE288DA7E6C5572F90BF267D6978F14F1215B3D1BA35A9B24701D
8CE8DFDB5BB4AFAC9916DC7EA4CBCF43FA6CBAD07819A197A652E7F33A562CED
F322415E1107A7503674E8A41BDB85E6D7E7A94FEDADA12B922FE1936AF10F82
21ABB0A1DD02D74EBF9529A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7CAA00F8
69C9D899C80FDAA551B57BDFD7BFDFE5BE081D0AE6FC30D89B49C43AB5C8F923
13C1E770F0905663C6B7FF3B02723580D7B1E8C0DAA19968884E622821BC174E
58859FA90DF4D140C225017AE82F1C01CF0FE1952AC0CBFDB2B2AE148026C116
8E9D2D51BEECF04E3D194C3B62EBBA84552E741659DB3BEA3EB1887DDF2FF5EC
E616B5DDDF84603216ABD3CC62CCF91FCF4BBA041DB075C2A7DEFCE18F39B173
F296A12AE1CDD8B0C1DAD85E3F73F5D378EF9B3E44241869EF76C09CDA729288
046DC05F6A8281F31175DF235627E657CD3BACEF2AD0B700ACD6976C54D0B1E1
803BAB50CC45C5102647D7D2B835491465DD1A2507761E496334D370804A5E4A
5F1481C6A20C9AAECEBA628202ECD441DDECAAE92151F47AB7999A2290E4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters
%!PS-AdobeFont-1.0: Fourier-Math-Letters 001.004
%%CreationDate: Sat Oct 30 17:27:29 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 162 /Delta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -247 972 755} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
72A7B8AEA5D41576411085046EB76258673C5CF40021E812997FA677D59CE155
7C55D36F8B6501F00808AEE2A8934EF6E7DF27A6D20490B6AD5EE97365B26935
6D798248ACD56BE774DE447B7979B08E595DB252D6EAC137A081AB9E002A195F
08D19ABEE28C95E9EB56094AACD6A73761A3E376674258165DCB3565F51AAE71
E9E3BEA4BB485DF2A75CD2A4335B926A3CFA77EC6765989F03A680DA1A20D708
470FD9A1DB35B2C937E5FD9AA6266283CD76E05138D55F0932678F1088EF5E7D
EFA66BBBECD836DE750970D76D32957258C0B88132232100F446B1885E4E29EA
B8959844D652017B77C98E7ED6D7FC65E1A01EB35DC733347DA3B63F9ACE67A6
975D81865DC92F610E531602C57AF9FCAB91E2EB7A5A39DD2EF594A1E2E5570B
896D14CC26EB1A42F74F76F2231DD03A6824AA2D1005943DDAF2910597A36559
E4BD2F9380A95F7FE63996A81EBBD94329601C7B1DC913319E879728A46CC916
CCC5A010A86E5C572AB48BC20494C889CCAA475A1782731922CAB36A7EE9AFD9
7CEA3215DD9F8FC10F8D4C3F94311A56C45FFD85FB0A91F315F33490242094D2
1996C1071EAEBA4792B29201666254BF49CB393ED233BC236B6BD7617A918696
D74A776613FB94DBD590A7893CA7FE1606C576DEB3E4D7DF25A7A5FE84A8DFD0
9BF199780DBAA1832D07BFBACCB7B8E9DDA897665613728537094E1E8933F961
EBB5ED1BFA4EE2856B8982377719ECF1D7B187015A90CA694AE0ECB4E32BB9E6
AB395207397C971034AD10D252B419D2C1D8841ED02492B3F2A9D73EFF9C12AE
9F92D8858A5ACAB071F8E0ADBE0794A62FB244F098A3940C82C391F0326B9F50
39B18EBFD2C105167F452AF2841C1AA728F941530ECE5D9C861EC8569D27AEC9
D0C19F35A3BDA17F09D2293012310B114FF0BD4D1B99A685BA61CD6E4D63D45B
C47199D41B4DE8F7C00C0F17D72EF41B22A92D559DF471E29954893E6FFE85B2
98AC23152C26ED5EDD43DAC6F23F9D3D0E28D770CA6093A1AEB5365720153023
8DBF05303D4B957B2DA2159F8EC25CB9E26D04C079FFEFD11379918708B95247
E9E48D274C2C4566841020BB7935F900E86709518E7A133B75F878084B0AA054
D2A472488B698A5701C5C909102CBA7CD5812333B254F9648A0F4C33016DAE9F
BC9D19EC7A14960514496FDE776F1A4C73BAC8A050A858127B9B71DCCAEE03E0
BB66A003687A85186CA83B34625B87D53E08A6417BFDDA19AAF3806BDC0272BD
188187ED61E72D8DEC992FA4596F4201DF5D1B5462A22CA111C970E138EF3F13
A7B70573C4356BBF79D344223C3C5FFCC2BFFEA3E1E78D794FD29324B3239D9C
6B11B2EF293012F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 55 /mapstochar put
dup 59 /emptysetstress put
dup 106 /bar put
dup 112 /radicallow put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 169 /circleplus put
dup 170 /circleminus put
dup 184 /greaterequal put
dup 188 /approxequal put
dup 197 /plus put
dup 198 /equal put
dup 199 /less put
dup 200 /greater put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735F731DA07EF3D6E818628
AF05166460DA5B83052A083336C23DE3F4916E3E60E10509910166E063832CE3
29E5DF2FDFD0AA1DC9F1C99A95FC477BF7F113B2CF4626600B1B5DFF712EB302
AFCB86EEF4DD29EA456833CF29BC0C5CC42C0BB09735A0A83143A0560B03DF25
B27B0B383BD641B85E8F6790F6ACFA6A03C77D60425F8B515C48893EE05FFD60
CB40D1B9185FCF7D27FAE0616B15007FBA17D23DBE9347515CC3A932A96246E1
85C477A9D6665D4F5D8F374CF4C0F4CDE76C57C8F7BD4A66071AF94604FBA047
80C65D0357949E03600E099BFE0ECAEBC6E6A636BCFEFC0A9035532476354B49
DFC61218068C10E8103BFF464394C6A73A86807D46452EFE438C9A865EBF1508
A3CBC9CA192F06D1F80500BDD24FD5CE8E953CC1455159716000EA28F54B552B
5725BC7E41FD059A5EE85B98159B8BFA2E1A2E01B57A2D5A74D1764621FAB127
B6288482A723C23521432C3F7817F515164B62B3DBECD0DBC527EA39F4FFF28B
173432D2A21C5B7E7B22E8A3CF60F1A0244B4E71537C44B0B62A13C5827E110A
99F70FBA8CA06FB06816BEBCBBFC2C73BB7074A7951972EAA4266A6E54AD93C2
51761EA0E9B454D38CF02C4208B2060A8E7208E7F0640A0DAED2AC25FEA43AAC
94063057F0118325D9E1BA72F558CCDEADA25988CF2A00F21105B0BBD4C63108
61A3BD3895A3D2B0C02822AB0C693DCF7D16BF035446EC993B6EC2D9D45199F1
99C8E734476CC7A74BCCC56C27DADDCBC88DD3C0BC7E872CF2EB41B417F7840A
FFA4DE36D64C73D90A850D272E0995B7DE218E61A242327291B49AACD8226010
4EE0C1F6BE39F41F08A8724A09294B81B1B8005F3293015D7655D5D15A471721
74CA3E164D78776B2B11499AB4803C44C1EBA2872D2B91974AD73E8A8E4E0B62
34C5F4C6F3CE87FAC2A1D49611474C707CC01835A6542E88318D9D45EE22F271
2AC38B0809ADDBD24CE9B033AC2B92B08A3DD2861F782B47FF0E3CF636734612
02A006945A0805F1FA1013ACA28626021CFE42680AF2C14F025F433E8BFEED34
A62CF6C08FF0FA99D4F94040333DCE9807259410681184D288B33BA3A0EE1F08
1A60622980D07E0DE406C175E83A12F4ED9B61355554D3085E06216412B24C75
DD2E721F767C48CC5FC39C5D1520C58FA1618098DF225BB84F6421FC7CA03774
EB9260DCF29EBF376FF50DBB1F7BD11F67D6C9E5DD31C7CB60610F9A3DC327BF
764B7FCE66C28F2C69B1B08C1F90FF015A1817A6855FF70C34A86BDE7D628050
899EE9A23257B6B0BBA2DBB47A9D03B97F81BEC678FE9A2CA51DD04AFAAF0195
0F14228B62C51E2CAD41847EAECEB7848D88D2FA7BB53F3827638CE1909AAC4B
4AB626A147211890F0F34C6311528E35C26BE4D579FF1830B12A499805CE5DCC
1E153307ABFF49D619D855CAB29D97288E5AD459C79E8E295C06CA1F982DEA7F
E8C91CE4C27D1CB91D04CF9B9EF61AB729EC07B6CDD9DA825D7E80700F25A407
9DA16EAF25552DCCC404139052B6AB2D617D1D4F1141DAB19B3AE2210F90B265
DBDC17E280579CD3AB04D3A19CB6360EBC74ED68A362399F35BAC584BEBF3F16
6D92E1193F5446C874A460C456B26B4F5ABEAB71D954A88B7BDEA816C7D6D8AB
ECDBB631E8B7A6923ABF33F0740F8F5FC57146BDC829E17E98DECA796956372C
B67ECB0631E5782BC1F0816BA299613F31D557D0E83C3B54ADCE91CCB1EFEA3A
0EC73E9C3BDA8A7DB7E08BFA6D8AD638887D09BB8E4CE96C51DD008383DFEE7C
FFBE998793AC2E3B3C9CA41F4DA83755F45B0405EBCE06DA56F52FF9D01F281C
61AC8823D83FD5727298E60F746A82EF2435C525CAF310E4DD4A99FFD2225FFC
D37EA6A0303D7610F6CF9CE428717DB87EF67DA53F07E8D301DBC5903122A819
E9FD40F5EF21C4E0FE4FCDC6F6D55DAA8E6DEBB4E18FC3420EA689DAC8414B8E
D71CAC029A94C3A884BEB3F68580FCC11C62F6F4F0E3153A1370A84CB9422B5E
6623679669ADC58F2FB20A7839B47380D714FBEFBC5A3319CAAD09E37FBF8F6C
494841369704FE3AD36984C7749D2BED415F1D4B8FE72D8FE79B519C5FCC6F2D
6B75AAB8DA60ABDB9B1C9045D3283A7D2BD1EEDF567D21EA715A8E3DB7D1D11F
C42E1A4507A1291E22CC01D7D4ED4B566A57C43FB2D85B7C295D9463A42E5FE7
0D16FE0F13323F508E3A08AF3671FABA55BFA36FF3F0F45C30F4492E83E58138
675E59908479D09733E3C2AFC208396F328D60CC706BBF5C4ED46D21E0B4D8AB
470FD7F3BBF31A4B688E33AA7B172D4710DA78A243C855A84F73CD111D79F4F3
7004576529B6793788A5AB1499C6D5661BDECD76A7F714A310B23C98ABC3D31F
F187F12CBF136C26D5B11680C0409BB47D6B73BD7ECFA1F339C718980EECD75D
795922463D99A1B725E7E776425ED117D9A20690E8720673372FF8F466CAFC94
1E0E2F58D077BE98458BD3D8A5E4EB21D990D75C1CBFE73DDAA2CB1C34B73B1B
BD66AD14045AFA9950AAE32F551FD6D3012BB58B1CBF83A2122DB87F66E0DF4E
1BAFC6FEC65041E63529BBA8CD102AC1F3E281AFEC1239F266F2C977FB8E2091
3ED58A07D3D4E3BEBDB73FD0F9373A386B2064AF09DDAF7F2920B3796BA41708
F79A0F37418A5B4FEE589D46634E9DBD58C75EFCFEB5FEBA033C0D51506DA8E5
1D69B916A3E1015168926C1D01DA9D5239F02D1A7C85BDC448074315FEC5F8F6
1AA99A8C1D22AF5F76576ADF8FA6AAEA66D71B7B72BB2D5F4FFF16FCD98B1842
354D3D4F4281E97C751D246AC61F718746B5FA6181715C1AFABF1A492B7B61CB
7EC6BB74B3C893DCAB00698B198E6807634B54084C88429C84F07CF732BFC879
D8D6A94658CD08D3F8713C92F818E8CD696BB2B226538D2402E7340B84D5EE66
68816416324B5201C18C79E5EC58ED467A869B5329EC6C948C4A177400F671B6
24BD5C676D22CF758591BE0FE5F4B313A6118C202B361263BED136214283131D
44D3CD96831F23CD5D9E920D7B408D0E9DA530950F7BF771D834283B73CDD26C
4DB3DAB712B507D28A4B3CF8672FE3D40A85F8A04D102635E665917199E03209
D6A45C9816EE9F5F9D07EC24584FE03529156773C73AAEA40AB170F8140CF327
7C22FBB5D46662E70D7C8A11F267FE00E301635C61F59A8B22EB1769C29F86AF
F045F99382FEBB232FFF5585C72CBD7D3C0B6A039A42F6BCED907C5E506B113D
80AC82F7C6825E9B58F65AB03058A41DA234FC0C9CA076E576809007C80BB887
1DE6425214D6B32257464EBAFA1AAB4C374E5F025B1F47D48D7FF18BB2899A70
82ED92C0F958879C4351BFE86A7BE920420D18D5AC5BF96502587342C1613584
3D072E500C25CA62DC278769F9E6CCC9EAD9D8B354B3012FAD691FBF43698DDF
827CEA365164B6EE377C293814B4F43A0D795F6DC234C3CF16B1DF7A665805FF
D3669576DF1ABFB492A68051A3EB77D71AE04A00A1B0B36C97C197AA37564D85

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: FontAwesome5Free-Solid
%!PS-AdobeFont-1.0: FontAwesome5Free-Solid 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Solid def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Solid) readonly def
/FamilyName (Font Awesome 5 Free Solid) readonly def
/Weight (Solid) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -127 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC24EA5C6A66D5FB86DEA0D82
A1117C000C5353B2F32B7DF144A69030C8EE0F6971BA336C4C33911E390912FE
FBA5EB88AA67FBD2C8AF8DA2B0A0CCA150F57B850632A58E909DF61D04D76B71
0786C246898D6969AF821D21463B5D770D11D97904922845C026679D889AF774
20B847060B20FA78E265C44C994B20AA9A4749F76E07EFD1CF7C2AB3A433EE2D
A07495342763E2716751093DDA622377EB0C70DF28FCF95DABFAB8884E12E40C
1235BEB723F81A20EAE69E8CE0BE778A97C9D5C1AF3170E6855510853C8C4FCF
CF0D2CE4C6C0710B9584B928C9AC5C465C74B9178A153A434B3F87F01214A69D
4429BFFD0A8DA733179F25B6C15391579ECF0E8725DCF53BCAB814DD38EC0F29
8C225618FA305C623812A1D694E883AF184A0ECF699C9308B3F28A3723530EBB
FAA9CD28A1829FEA371AEA5F8B54D11BF76E15C00CA32DF229892701A4475A6A
734F01EA4438C7E68F17ED1D48D80DA35279189F2FB603FE8F79BC05000007A7
084F12572B7EA09BEBF580B44E76F45650E9E93430AB22AD4292B47B5FB861B8
C20EA254C175EFF7C7CE33228E608FEEE1D9CF299CBA5F727FB11FCD01180520
E9C7510457A9256815BE73930FA7186312B1F1ACF157C44C9BEAE51EBB523877
0086CECA8C6FCFEAE9C0F8156A3FE9B991EDC0CB72C5852F7169A8B98FB8F29B
5A58DBBC136A1E8D1B1A79929E88BCD3886D355A191967C791EADB7A9700D0EF
F276C337E561338D7D02F664A69A127D56BDD67D63C1DF32A80D732FE753B297
08EDF2A1CC7E4617933B49C02A92BD986BB13E68435FB97E81DB37BF578B3AF8
2417947930EEB8A75189696D79615D68BC4BA9238AB9428860AD23E7D8219844
0C741FB72F30CF733FA111B43F33E1D26F464F5999FEBC0888B5E4D8B0E07567
9D90551CDBEB05F9A30F43F45B5210A3007E4D03DD5E05805D3AE898FD752841
54198CDB67A5AABDF7C9F2BE384A98DD9AFFF4E8CCC98FCF480830FA681BF215
3CB11265AB89ADCF53BE360B58DC3621D580F2C7227882B61D155B79B2B43266
4329231C7269A3F30930859BF0A4D5D2CEBA01BB4059A587C6C785E009F19C15
CA40C512E9F5030743BEDD5606CB1C540D829DAF394E13CD4A008EE7F9F1CFFA
95B5C8109B0A8685FDF03A978954D1325F66AF1265829E29C353B84A33388574
B4F73E25F490B88AC3AB2F544988D5CD8459AF56C77885DB50B673602CA70AED
778E4E15F24CEE13A730F1E29D1ED0B74B2F8486AF729E2F0490DD6E2F55F3A7
B4ED7133B02DE4581066B984FE6EDF491454E6CCE895A8A75E0F8E0AF33A7359
E5EB03B1EC74E1885C81F49D2E77939ABD2C66725FA5415CD9265AACA265041C
E228BAB08EDACF4E0AB86D340F5C6FADC65653CBBB25190AB307D29C6FD44AD7
341A399CEBC01967EA5C42552AD19A3DD1DD1BAFCFCA4777528AF5E958E68450
4F95880E2E5594A3FB0D0624D7AFF119981EECFEECA15866AF76B47D283F238B
9D4E9AE5F8549417968001184CE886C1D6AA8396C25E0840EA447F0C2586B021
81A4ED566DE0666A9AB45924378D008A62C2E63BF5394EC9B051E293C9224645
DE121EBBF97E9E1BD85868308FC8186F9BEDDC40357AE239B4F02F00158B87DB
8F9947BDF037FE0532D15D61B38C2EA75CBE50D3330B105E913A071443887BCD
CD7448FB9E03CBA4D711EC4C4CEA1E80D648BA01D3BB41BE8BC9482B0C2A4653
748459A474EE5871E4182A2C14E0D2049F6BCA02129D8B1EA98379E7E8BAF0DB
C2115FC8DE189423A6CF96F3B624FD11C23CA4DAF3293F3FC3B9419FDD02BFE2
01E26AD64F64C6845E0CE09E122DF40D6908B9B6F873A6B8359FD44A37AD1EAC
E2F4E3DC35B12328553CD5FDB59309C317BF49D9A819AD1ACA97D248D8E02DBE
D74AF4F10C41DFE0D90932FADC7ED477550A79F5303533BAC12475EF8D0D1AC2
13E5D5A8A57901118F637BCCBD9AF21516578DCFBF8165AC8C9AA3A601A52A91
EA1B72EF8D4858694D1A5C7C04D68947034889EBB9BC0F6F720F1EAE6D8A8ABE
296B0861C666C1369BDC7BBA46457D3A99A66D975E7F5D1C6DD77CF0A057BF12
7F001A096FC339820E946F636CA2F5D39E4EAC88B2148C5219B1616C53425AF1
1E4A708EC4C3A7928EAB51AF51978FAFFFB2FCCBB6ECBFF8252554B3FDEE05DF
74CA5CFD7B1FB53CFE9E0DCDDCEB8C07F41D8185B10E4287CDBEC9521030B0A7
E706F1865B67C03D749F36AE2F831F159E38017AE2A5D914C676AD9942323C37
95B25E6B0144E78BA5B588222CFF13A2EA3BED7266F79A1074E5DCDBD3BD0AF0
9E1C44241438B8F9FEF51A803D8B74307A3ABC05066687C6800FA1DF62767E92
83811DD10C7A8F6ABFEA1995C317DE4196273C3392DBD9D660030FEECBA7702C
F79AE7F1045B750E199689646466844787CE5559A86835FA39CAD7468662E6FC
B83F6AF669B77400B0511D4510ECD44638EF26170432230E05C2C3DBA6F004F5
F628A1EB008CCAAF16C1B7B759F2A1D0269E4365D98318B0590C62BC52EF9840
999A057D495B8E319EE95C7BD3610F8627E11056A3771AA7458DFDC0443B9054
FE4029D89CE1B04B586869A9C6122D3921EF880C85269AB7635AEC1B6ED1AB71
EC2D8EEFE718975C8F5AD9D1310F764975FD37AB2C30068F8A47BF90C52CB9E3
5496507D403C747874F039959F2B78994EE9090692D1A94BEF2699D17D1F332F
3E93B264B70F73A7340CA8D266EE7799C16443AC8BD2A467493362041E0E3533
26D45985A13FF7B254242BC110A7BC98A9C4645A1BC4EDD802F0639789249100
CE1C557C43EDE5F78AD7D2E36F1107FD8520E12376757500671332190D93976C
C114BCBB0F6B6CD17EC199F588E24327FAF21F0DB8BF26E6808F50DEE9104E34
5D0489346C5A8665A33DCD4401036768758EB25A6609D0088FE1BB01599D8E7B
2FC035268BBA5D1A29EC35C44B1677FECA73E372EF928ED8B67077EC4C55274C
CA4118EFFBE7DD150F7F44E95AD1409C79838CD93764A09AF78BCB2EB79D6AA8
64B7CD3321789D289486659947AB54B4B63DAE783754FCC5FBA74AFA3B0FD4BF
8EBD939A31AC63434F225EF6C99022E39B85A30905EE0EF94F3AFD23DE7299E6
F276EDC265AD00768F3D384F17C236D4555C8D4AB34CC356D96CC4C3ADC1DDE1
7CFC0D7F17C55984B8FCFC72FD93755E84060C2D0E434BF17BCEB50A19790442
09EDC8A058CD39B5CA2E94FB163B4D769E88853C0500373E41EED4EF76557E4E
37BFB3F46B102B250350DBC55F85C82DBF62927C152BE84C76DEBFDA3D795F4F
790A61617F84CA29117B37470E41712F26DEF812CEF41D9D8691532EB72D0E1D
9EF04F8DBF54CA6D66609A0C7B2FCD14BE8F36414462D75F21B572C52EC09EC6
3E7DDCEC847CC6D3EFA2D7E270D930B74376BB0BA82AF94210D51D8204B74FB7
EE69654ACE4577EA85945CFA37EFF0DC5E7BCDAC54CB217B4836CB34BD71DC33
DFD45D383D10779643FF5D0F34B27AF365FC93D94196498468DF8F322E83462B
651C3EDB9C6EED0DFDEBF1BC061ABC48ACA527396B848EA31010DD1995CC4D17
9B4280FBF081B3B3ECECFF24FBA611612ABA11799B791BE95C8905F1CD1B36DE
4FA2573A8587834B9E7004B5F9D768E0AEB93EBE828619524A495E471F42AF6F
82571AE77D7817392A34217C36626D61F75CEE8A5D7C283DFC0BDEACC56560D2
FBBDF51BE7935248B80D4C72A7D75B511E0073A6BF271D440B7F0C63983E4228
92727C7ADA9E27436AA13D9D59E6CB9826C28125E4F9767C3BCC9830F846A2A7
435D5EBE8C5328444CD5B411CBAE3F63171DE32E73D8406A0FEBA498C4E7CBE9
C60B9180545CD51AA4366A849927DE7B83C38F9742E2395538EE29F0A18888C8
FCF0821DE468042FA2FE0C58AD907E93996D94F11F35CDCB7CD14973B7C807BB
1A6CA60883A1D74C3D5F8B26698ECEF7F9B307A9B85FFC3544A0A4093DA00841
0B68FC6B485775BFEC07AA0088CB2D95B1DC37E2437B7A0B13F8BE2FC74B7A24
071B1DB55D67609244BFB5E1887A10C711F0E3D981D7B9024509DA0C14700B6B
3B945FED849189EAD0BB511D7462BE2346D3BA172008B648F1E75DE5B7EA9818
DC9BAA070E04E84DFBEEB8B24D7391FF2FA09F28479007D6FCB926C75C5744E6
1BFFE5904C904C845ADC1DBEDD8DC9CA3A8707D86580C01618776D11D2E86B00
51EBC700B8EDDBD37F78B4B616EE8F3AF2A642B42A13FE5DF058495D1BBB8F01
D7B201219F99DF9ECAB7137F91911E33BEE00B5569886D97F3213D239DD049ED
6A815EF2B9C9C7F76283C21D44BB92897A206BA348EDE2FEDA5621B98650389E
9815E33A17D7DB25EAE6B73230607EF4320A5F03B65BA29AFEB1E609D9090D2B
C12E2ACE102818CEB577840F6A5D09A026F49CC9C67C271BAD106CEA4393C4F6
8F4D7DF0745B3BCBB34E27F41AD6DE6188FF19570280EA1E4950A0E57D0B80CA
4DC1EF8DA79E34D72DDECE2F2D5668B7C5D8B045753B93F43138DC03291DA92D
80EBC10BCFC2E4A4F1D6298650A753B7752DCBE3871343C697C30727022D3347
9434F81CA244113293094802F0B1D3937A7262039981801E3EB72660231A374A
85994B597B17D7D1EA184F04E2973E9674CE5A5B59E5D7C601D8A8A75C2884DD
77917F8FD492E9AB9328EF8E0901DCAB65112CC98E753385111906ECE632B09F
C6E4286156CFCF39F47BF88EF729EE261B767023B0433B9467DCE6B319E84225
E8E9E069D5E80CAC68864456745F608AD7F1DB2A7057A4B60C01E3B48B4F0FC0
A57E6F7D70F0B3099D68828CEF3EB08DD085A46F6AEB847A082D5EE078CA7B10
CCC4335309E6FE477EB7936ADD7770BA3562A4CFAB546D823B7A7685B098DCB5
465959409262902DFF5443B6961E262DB52A34A69D9DBC915D1D979F2D09E8CC
67956FAFE2735096C69A00AA6C9C1421BAF69E1B8F89CF67E5250C659A7D4A19
AE45B58749B3073662F947E7F5BF97A4823DA48BEFE6A643A56D558A474C4055
E9834136244EA39AFDDB3B9BA2B301853A589B355A9B86904D328BF2A61BE758
B1842235C4A4EEE260976EF1644167C2F4070EBDD0B73478C1BF2719880425CC
E4CBFA670CC1E1C6A8BDB75E7B524F977A90FB269661AE8B7C7A351AC33164DF
69839EF4CCC948B1971BDECC3EE24CA73AFC338206AEA78EA76288728ED74CA4
08020B80A53BF23DB3B68F3D0F58E2C7BE658851767A4CAC46F14215BD461B56
DA6E3BBF5DED4486FB1D6C2F60660F14709295FD7B6B4402FAF6EE84EC0E5FCA
8D53CE5CE1FADECA9A7E610105FA17C45AEA5831EC20510FF2330B331C40914C
36F29FEC53C83BCDDE52A40C1DC2C833298BA9C66845C68C0B47D6DEBFFE3F95
A90BA074E34D5AB46ADD2ED15125C4382A1C95B5F9412BCE7B2DEA273664C0F8
4C7788C6F3ACD041B16C9A99A6254FB9B899782664A7ACE087EBA0D48EA7C7F5
D84E04C04694D7ED240C57F885F794BFBD31E89BA753ECF83F6AE705F410368C
0B5213BD561B753676339F0B9FE90C60F82E180F7AA4A9EC783AB037D2F6F2ED
337D854B81D02F2E65C6A913100B8839695517D60FA5B6A125B952B64A1142C6
F39428D8D2B8FF4F1CA15C3E282A1EA0FDDEFCF0434C4123173E38AF82040A4C
F077A335C829D8626D775E72B5502F3769AE6FE8FAA616B8441E702567E898A2
DA6AAC3A314D5DCC26C3721108036A248AF16FD36E00AFC5AC22773740AAD22C
44F44CE2A9EC5A1378354D0EF515DBC0B835738955AD76891B054759FBEAE7F4
717A6118DF303BB77FB7C261E2C91715BBE32E595BFEF8219927C96E0EA2990E
8D729C3D9DABDD29ABD05C1FB213FA9C410C78ADAAC2F16EA19B997E5CF8EEEC
CB2C21340919244745429ADF41BCD1506CB773E28FADF673D70A791711AFFCB0
7D8DB4849837336C3D6DCE6264555AFDCA900E3DF683E54048E01613116C2784
94E20DD2EB17AA2B5CC304906188199CF23D9D54D3DFDF55EDE035DD3563EFB2
74CC50F61FD3428C83F24809D0AD1646380585D0E5D5F28A9353F6784D3CC671
B0FA6F59F3A0347D547C728623FD39A54642E669657AE1E0362D4838EF8177AC
838E414CBAAB3D568D946FE8CA8C25DA2D751FF514A92199AC13F78FEAC5D4FD
0CA34ECE58A8FA8E722FF4625129815E150EC18AAD461DC2DA8C1E6C552D5002
8AE2476F9084AC04C97D6FD5D963A652ED4EF778D021ECAA36830D54A5F9858E
0733034D1F5BFDC20AB2E4902FC4D523AFB607A1A4217F2378650ADC04162F20
8865D6456CD006527E6EF77735F91EA6049E418B901F10FC0A3EF112641C95B8
56F0D87D1389546906D15D9BB1C1A9A946E7EEF8D198562366FC4A89D1C27D33
6133D5488E21C16CB8B66D003CDC73EAE1E5D9EE754660EDF4F9491192A438DB
FD51CA5C5169A2D621134EAD387D472B72A00E3FCDAA121A5A6B5F8D8D6564F9
2339FF8F8305D0970C33AED35D2365BBD9AD50C43666B33ECCCF9754363F3D5E
83EDC43FD61B93DBB81A89763FD4520AF4792C4DCEBB76AA9AC44DFDC4FBB142
0298A665045BCDA5C148E123AFFF96CFD61EEB9C900A19314829CFFC11DB597F
7C55A8A7CC1D8C1245CFD89E7D66E63D1FC972D86D80FA11FA9DAB4BC9968770
BC41B17717A55E5D8A8F06F8378F03A9D9D83E683BBED9AB71BE8C8E5C24E53A
5AFC5DF3401222F292CD0FBAB7F36A7A2E4C582CD4B7ADC254E87493576F75AA
AB9DA284490B1A014F5A9DA7B45CA4D070D83F5BA00415F599E0D7FA55CAD906
0919527012138A4EB36CC9176966B8D949F5A945E578C8DD29FF20796AC3D0E2
9B043E8D6A88357867F8BC52A5786A474539D5B40C1FD85C8B2BEE6A4AB398F3
5D2E5457EEAC9330C8D80DB42EB766C43EA8EFE81CCD0BD4C498F6F335E234DB
1B602BB51593039FC9C7CBC249D24FFBE824F874DD9A9DA5141D56AF49EDE3FE
8AF0EA8374D52E32FB981A846E5CDD5A826B3A045427E0BA44142C86AA0CA4FF
8EB79622F7434C700922343340368914BF3C97314045FAB692C18BE004A54A0D
C17540E09C4D4F7048EBFB72CFF1B8A6BE5957291D85E8E79BEACD319A591395
C24BF2254B6B858806C7F6FF7AE573D9DEC395D0D0BD89089D9F09ACC83B7CDF
14790E32BA259FC90B5F90519129630E8147BF358A241C0B5B747F90A6155BCF
5027AA45F3F4FE9839783DB864303A459B38498E54683FCE2AAF594FAFA55EC7
652A8E2200F6478A32041974E7C35B751D3B44CC09D9B296B9201F559528B2F7
8DB6B4AA145976701D841CCA2AACAC1B034423EFDFEFBC6A6A9FFAEBB5C4DC13
B8286EBD2D676392312ED6600DB29CC209ABA7F639067B4B1CE7085F7B9D4C72
E4D71B98FF280BA80D25A1577850F3499817B2070697128FBBD0A56138DE470F
057B6789C3CA5FF9D0E0CD879B9C6F349DB1C94389DF02CAC58C1BEF50462DA9
55FBCC0A0E08E38B8146A5E7B7BA4CEE53316002B4885791CA91048469BC4A60
5E72E3E66F8396CF70657039EC1F69DC64D101441A9B77C83B02CB02A1E2036E
8FEF19FC1BD465E57001C2E1A15A802D91C6A20594D080499A4022C1D3BEB7E7
D9112A5E43DC89976E25C5915DEF943C94AD63822A22A7B4ED36340CD545E40F
B5E2EB5B3293F7EB028437E6B65EF3B49B13A74F86261ED0DD89B284E3195972
BF1EA09C2A21BA853B97379AE23EA9BEC8CF1A8F2E2F40DF97D528ADB4433BCF
0140105C5C914E4E2855E8225778C99A8EB4E7DC515EC43774D24BF2F6C8339D
E464A4FCB1BA37E4A11BC3DE5341C798FC8F00B52C0BF8E15EF7FB0206DFC143
519DDAF6BEA9D87462EDDE8B7549862397DDA42CA372BBCD52E389508C28BB27
3115A2A7C612DAB4F2055DC28C1B3EB1B8EDD899E447AB390772C8D454F05184
D7097717D07A139EE76D616C62D15514B0723C63BE265DFD1A3C384BBCDAA2A2
D9878F2C88449813611CD5BE08DB0683B8AEADE7A834103F9E3DC40386FD6255
DC95744ACD3E49DE5F8D0EE1112BC82CB6BA92129B71295D0F02753A2401D10D
268FA3FE78059077CED5E9EC069458DFD0A6ABB56271E95CE1072E5DA1DA7493
CDD16835D4FB9AEF269964187C6D1E62EA82E677234B5580DFF90A4CED161B4D
632BEEFDD0551C21B90162AFFCE12FA933F66E78D8E4BF41B10E863AED452B22
7E06B1076D2AFE5EC6669051B7E8C66C5FD2463DCC6888004C4B387E2B20ECB3
AAF343616B6E8D4CF21253C9B5DF4EEE0E806A19A16343A3643952BD6868FB2F
1DCF2F9B22D78DADCDA0D30A14316833C7F6182DC2272D5E2F7C00666AA1E916
BF3EF46514D8CAD04C413DDD96A30F98E77807D237221AD66BD532B72DD234DC
8DDC6539051D46D10DB88C739D0A9DE30ADC5EC9D817AA6FD0908CE41AF4FA67
5DCA02137BFB577074602721FC90FEED3CE2467C5244B1776D9849429E10BE73
D108FD03AC3E1CC9D388CC774652FBB6F5F2AC95FA798E2322A0F7C51E49E5D5
ACA29393E391272BF4E3DAE83CD2AF1693BFF98EA8C41A396DA599FDEA8564EA
0FCECED4315C18416A5868D5AD62874829DEAE23A9233657B89F8CC494ABAE2B
6586369557A61C6EE7C99004DF07E91C93861593C532C2216C3CB06026F8CC76
1026825D5087E615F28843666490116F2754ED287D17A58FC461B2CD4F4046BB
97A8436A5FFF934281C694F5BDA0A1F22FFB37C8070350FD6B69BB70A53ADA83
83B8FECCC1536FA9A2BF1D0B9CF95E2B7D1C2675195E1F91535C9BB75F55E1FD
FE2BAE1F505C95388ACDAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7414179A76BEB45D64F98101
3705AB6F7A67D8551E4BC879A6461046CD604D79E621DD382967329A7EF603C5
0A96E000463F8247D7CF06FE08AEB09A6A8F4B0CB143A6C10B1412E1AD8276E4
A5A5219AECB4DD34412429A21E2A5209AEC889B4F6866F253445C88F41CF25DA
60A179B44F4CEB366A028D673EDC34DC2C6159ED9E284CCD6B34405C76ED44A0
341DAF52E65C1FB38B5301B2116C44955C2915D4B7B798E25A751E3F95B9158E
480257B3D8DE09668BC0E0C89032CF57B92D032B79403597185A78357377ED04
7D4387CC8327609532DEDF15400F35F789FFA040283ABD9B08630AD51B3E4D3D
38BCFD0A94E815B399C2439DB0ADF6152327F76EBD2DBA3976D9E1728F408B8E
C29EBAB733108E0A5CADD280D58F1AF1544E5A4D7642235392766C1F7AC9E31F
EC9717679ABA8C356C365DC35EF11EF0CDF28573B596FE57C97EB0DAF50B8A5C
F69B108D8678E9172B031D8B7F9C0DCE3619013BA44CFAAC55DEE70CC5523654
42CFEA7B93B63A76967445BAA85754EDDFACD00A2049924C2796F80122B3ADCC
0E79E4EEED18A99CE066A9080D458DCE7E8A42EDF647251781DFF83E7AF220D2
9611A8915063460CF17342B3EC70B0FEDD062F3BA8699448540C4BABEF2C617F
59015594C697B288FEF77EC8BF4B0258CA9A813FDB8225F281D32B52893DA64A
7E11F8E45D5A2095DD7245E5D0CD32FD2264C2CFE9DC579A864F4CFC5415AA63
3837679232AA3FD697C2D0050C709C5C99FA0BE0D06CB3BDDE0E1B0915F1363A
3B75B1AB6BDC4CD8968F5CD9827AB244D7E362EF7B7465A43095F7F0BFBC9CAB
9ACB87B3A954CA245099A7E340D504BE0FD861E3A8381E4D29502EEAEF83ACC2
BC51A8ED14C5957E64833D60F3F765FDE8E73577313FC232B447602A97D3DEDC
DCB167D8021C5DC37D8E95406BA3612090F755F51C5C9B5C425B02E9DDACB67A
D31ECA1FCA99ED238CCC15F46C943126D437360D84909F10F83B15A6C6B7E24F
A0CE2BA5B91FE62A193F3DF237AE38C98C41C8DBB69077637D06D331DEC18580
0FECFD0D46852DDE95A29D15BB66578CCD084ECD50A713871C3249B958A7B737
73E9CA23226AA948300B45EA843F7FCB8DF38C7A842C8F42C93446B55D59F051
9010F2266673E3452250234B9B7BE0BE1A2242356119D340C1CE4C85949A481D
6A115D03D115A056B1B9971F2E3ABDC31230550B0BA4F7A4CB29D4D9F47002EF
A44EB2B07168DBB1B888469DF34ACE1A24D0017875DCA5474B703D96C48E68FC
2C73A16F8B4611962B97ED6782147EC99D47D407E0FEED9677D05A349A5792AD
15CDC53B1037462C3DC344DD34FFD7C09E743B0CB70FD7803A84C48E182C3D56
3DC03EB6C3C948C14D165005F22A80A08D3E15036134A07E773E22B1C7D9075D
2E4C8B744EAB8587031174CB020D26B242ACC6F2DF489BC11A7CC3D6C7DAC12E
DE49FA322DD3D8F9F426A5881D1E6F9ADFDDDA7A4AFE6F069F95671646AE8B5B
CDBF6DE354296319AB0F57D9F484780D9073703D7D1894E8900D791FA2B52FCF
A2329B76FD691B26229E1875693640AC18766D0E55447FDC494BBE76EE9F2180
1517D254F6FBEC19260181A6B4645113AA5648770476B0D680B0F31CEBC94E97
FE3F1F7F8F93BB3B8E0E2ED53665299229EF08F41864437F7263EC2870392B13
10739D320EF35D0AF2F277B9241F2B92A318A88C8822C67791D0E68426A174EC
B3172F519217A4CE8C480CE9C04152715178BC73218607845C7DD90366DA8886
E9CC715784F50DC8A2CBBEB9F1349BF2411A99F879232E98F9CD910099477D1A
755F65AECF45ABB3684025A72145BA0A951D2A3036B74B1B0A47FD3D6C102B6A
747D6E7EF6D2178A227F6B0CB5FEE16E3D296CAAB4BF045606725652E7A19B3B
67BBB31989A85865145746A839CB826F40A532E52965534EF270ED5D83BD7FA9
66C2794E533DF9C0D1DC74A3BB72A06A03C9255B0C6C6A8CDB1A3C16FCC1BAC1
F57FF91EA2A006EC963BFB0F2CDF2FDF2432F31CF8D876DC1E45F102F08BA9EB
F200299CF08572348D49198C3940B45A84580DFE3D104FBD57BCA7A9DFE37E5F
34BA610B4495833C44D313A25F3A0E2545BA7BA59C0208D33DC3B826CFC39B76
5BB942E94BE88FC69A1218140804D73C814C4A58600D51FB7F200A68082FF8F5
56A92CD7255CC1C1A7E2011784A5240EDE64765B80F98607A45721DF8F6A2C56
3F6E375209EA22E6BB43C6E40235971C94FA28058DE70A0A1A82EDC3B936E570
939CD9378E02083F4B5EDDA33FD073B346B7708BEF7D426640589F5542F1C500
109924E3C06F2774EE2A88D42E7F09B4206A992B4F59EE9D23C7EEF0B0E2FBB2
9906CF143253BE14E1EC4C31D3FB49905C323B04DD5B022349F5355020D7A314
294C0824F4B9D8B0130AAEED1AE826866C1A135FDC321715A20FF7F33763B913
988006CA5FD9BFA0F5CF51A67E93218F721781A1192C83A4E6EBF2C55C94E4D9
8F16625CE302DCF573A87A19E5DA25F0B657C203B47280C942817660CC2552CF
26EEBE2617123196DB7FE8AFE4E72572DB70CD57ADB81BEED14B2F523ACA85F6
DFAD88E2A1732B362EE32CA361D04AEDFC00501BEA3952BEF715061E1D50E1AF
073D9C0B0D233256F95AB78C7A6252F69D4232D87780F02549891E58DFD05307
FB84CD8757EB205AE1FC9F7AC2D42F6AB082556CF135716A7E887F8FC0C466AC
B0093296827534175DFD21F5D42E59FEA066ABEA6C1D3BBD22D3D13C1BE4BEBC
A8AC0BD0A5F531CD017AA8608B2E9567386DA805F709EFC2F9C6B79025C1CA73
F8D785AA51B692CDC63347B40B8B42D04F2A4240DA33CBD3E07FA1D55842B653
B9E909C64019611CC672794B6EA84BE72B39A9D23E272EAB8A51C07A0CBF6324
2201444DE0216F40A9F47D14E425164A9843955BBFDED2745418BEF879DD3CEC
ECA3675882369863B8EC236C1FE9964D881ED5F8F8A90F41914AEFCABE3F66CE
8EE2BFE7B05EA2906CAA1C9B46230F3F2F59283A312FE70F5091641A9BD4DD9D
E5D233991B1A04499E59215A540A6427C42F7622B31AE3FB464844F9D6A68DCA
C3E2A3DCF2F6F77B4CBF12F26C898830723EF4D030FDC6532FCA815E416EFD5C
26AFF6938C0E68D49D6127487B375BD1B3833C1422A747DEDDA4A18028181EAB
622A755BAA44C1DD91B8C6FDF28654505C7F4D9E2B15FEDB0F79FD551F3C6B4D
ABD706FF6272ECB9505606DEDD1DDFB4B9C21FE6F6A674D56637B407554EF59D
717620EBD531F529CA0A23CBAF554ECBE4A5C32EC8E7C53882F4CA94D7F12A35
5C3872CD092F45560883B5A3B09BE0711D115F5934C235D3B273A66B8851762D
BCD7B8BE30D03448BDD4E20EAEE63CA2659CF5DBE572B6BEEF185DB8F85CF190
1A7B506626EEDF2D8A778073CB95D048387DDF0B4C0C5CB3807EC89466DEE887
E36B3CEE1089F70045630436BCC3F89F3DC45C64A4540B3B934AC168C711B58F
D6F8BBDF9E8AB8931F1C9472767A0F1792E66A1C991A3B0CEDCCDE81D66ACE45
6FA8DA053814FB07F7C8B4778CD3C3B969DD821155C6BBCD1D311D000ACC2FE5
A47F2B1DEF43CF2298F0EBB30A0D81911AA0AE12786688C1E711AE61D7EA7724
E5D6B7382D3A8864FE513626830220FC9A8BFFB4EBB1CF9B4CBC2ADDA778B1E5
0BC385C9DEE25CBB8873551715929384D4EFBFC63A3364578A27324A51DF93BF
9392973197C59257053072FF7B29CDC48A757628A595EE125B11AC8F5C149E95
FBE8891D68A761D9A8C9923CFD870C5BBAD18B95F03104208DE3B01B61F0C604
5130FC7806E446612825DA902F04027970FD43BD3E95A888D6447A160AE2CF65
68C9A57E7B274A1682AA043814459F04F4FA78553B7E768B5F92C8441EBAFEC5
7D3FA9B845CE8E6E9A840DE28BDFCF6687F2A4776A59359BCC3D11A56D1CB965
E650C23CB51EE06DF8ACD35E94282085CAB4EEFFF7F19AFFA965925CAAABAD7E
46DA7E04966555DBC8523016DD6362F11A5276B4F0AA7B403148569D9741715F
F22CBC93250825FB149E8EDB19D33A4379586D721284DF66C119187DD75292F5
8DF3E244ADDBF4E2DD7AAA550E93CF18D3A55B0E16B42652C3F19B527DD5EBE1
55667B716C61B849F7197A5F864CA8B1ACC2822D61D9FD8AF7C59AE91B0AE8CF
59CD7EAE81E2E8425204F3689196C63EDF1353370C671A4E268BBADA772F7C16
F53928A3060FA22C09596BBD1008CCD083EB1202EFBB239172CB830DEC2D5108
9F1DEDD57F8B4881FEE3DAD535E6E27038960D1A81DF8466450C56D5E3728EDF
CC5F0CB90470BA75701FC77B5C6D7843E22ADB1B7390B1BED5E39C9D23532888
0F9C43CDBEC565290341D033AA16A67354C6F2A5E94B0856CE64D71B2EADB5EC
0433086F44EA140CDECA487AC35BAE98CC6628E51EBF4C99751A0D48B5A48AE1
0F19464241610D53AE6A18FDEFAADF05FC20E3C3615CA7AF846F3526B5BCF139
EEC109DC6BDDF9F6674B508B50A18AC8C48F723817830CFA2F3BAF24926D8C31
F6EA95CF14177FB453C9494D760E98955B94B36FB58D6D2A93D9997F399B5606
8626DF6F81CD1BB7DDD2AC5E0C090F324FA5E2D3B7419C06401825974400A8C2
642175961827750F08D5D1A186A0AA4328B6891DDC5350E16B2E995F9304C86A
24D80DD4ECD3D6D1F0B06737E1E7436FBE5D62D3DC0E2210D12B1435EE885780
EC6219758FF05167411E20111B5CB79420CA64CC1B063C84FC653EAE2E324602
56ED1D6DAC3C9DA8A357B19EB9A6BE50571710556D79D5CDAE7AAB17B53D5897
121E180BCB0A7809B84BF1E66E8CA741E46AD71C3E1D345964D7EC4F60FBC765
18C8785F87B04DFBED3D2BE056D20AEC2FC4033A451DED8B6A6F25C04968AAB2
910DF1314D1C0F0F3C95A9ECF1744DC1F4A7326701969CECE3555AE70FDE2CE8
A01926C40D56F36B7B15813F788E17320DE2FACF2FB58A5EC2183F1CB765617A
CE96E533B01C9F66998BCB458C965A593B9D9D8EE270B1C416FFDA8B87B0FF75
5BB11D15A49B6E46EA4AC7004C28C4F65362B68E0E1210622EB5330B3CFB6559
57F1D1D4A1B39FEEFE9E83111F001E47319403AAFDF0A13E39CB4E1AFC9058F3
5442A20674F5253F728AB67AA3ACC6D1987627AA68C167EDCF79DD479BBF5417
7F19A5D74920DE4C60AD2CF226A3AB8E36611A9C173F501BDE816A2091DB5F06
BB7AE920C158366371735299FB6EA4779A9C8C0D176F3154E8757A2EFF093521
05928A173333A9CCFF49CDA64277E23F40EE3C5B8B6C85C8503A4B14A4444BEC
32F0B58CA838F219950F42B509468FD152BFC12C99498946CAB6ECD814EAFBE8
8DA9F3EB20F738F371ACDB08D469FAA3AAD8D28FA0AE0F557AA9B5695994B5B7
257141A520A1B83D37D272B500B0AA796FD9B2410664A97DA3B42A479732DB16
42595C2D528C24496B5D0E7C1D53D29740C6D9FF8F2690392A6F97A0694C0884
FBE6912992BC817E704A07C805EB5A7677B5D3154D1B4B68A25BACE80C844846
DED91816D789F17B61ADD5E311B4ADB0555C4F6B0D047532E096A42169315824
D0A6890252808F6AEEDF5E7241644A2AC8E070FEEA26489BBE70C02F2AD0DA1D
DFEFECA01E06094B0C91DCA11016690D1F50D08DDAE9AFBD91CAD97BFD4E208E
B28D61FA5DE6B9329172099A8972CF88E46EFB2EBF78CDC8E075529DB5BC70BB
F1042F098256A7F5F78B3611603BEA4173B131D90E501BF043EB82BEC7BB8F1C
2F53B07F96CD7B0AE6FE30E2D986199A9AB7892E683881910C957106EF6EBFB0
11C9AB9C152ACE83E912F94822CCEF7FB0A04AFF9F5B45276BABF3E4989AC3BF
AAD1ECAA2A38848379ADBB14223889CBC27A6CC73EAFD059468E3E8154446533
356ABA56D5637DA0A2361CA16F2E2F8B18CDA90042462B94A596001FAC3C2612
9CB619B50754EEBC2591D763AFCB2B2C0C8798A92982A084E9C741D39DF2AF4B
DF15481CAD9938AC6B74F6B4620EFA2A3682F2F6CFE3429757D2C24C9376E4B2
B5C0EAC1CE54359D250E4E60500901B25812C5AB16B32D0DF74A8BD64969C10C
1301986811B7C75BCC095B22141AF0969357A2DAEC61DC7ABC388F450BF0B3F3
342C6C81EF71B301D9178313B7B7844ABB3D2E6E8CBD8C85A4A08630233CD5EA
E8FD8460B5BB137DF75A468CE747ECAE63636A69B1A4E64F58210DDE5183DAA9
D88551F61B37D20A5D93C9C96C42A905DFC3ED33A6A88117AD776BDA3C877A0E
650CAA6E799EADEB641E165441223D331554D110CF60A7C266196A9726917A19
D72EA2C4C4AB206549D049F420266F313881605DC0245BA268EC0E9196866C05
04DCAE2E92BFBA593CE34AB74199A7EB273F554667CFAFF8A425C675E4537954
1626039A8D3685EFF4DE11AB022E019A9D22859D14E4E59A2A0BFF6CDEA61461
32313338C02C4D84CA61D1870247029538766C1A7C54F22370CDAB8AAC408CE8
581B08E331349F60313880362BB4FFFE101EDBBB8A01FCDA204B126D5CF9F291
5415784D200A0A48273CF6674EEB2C86C4D2E8EC7B5FE0304DC92A25B84E1EDD
DB809BAF9B9B8219128B170D85D6EB6A1411D0A677845FBD86FE601800B0175C
5AE0F8C80B693FB984F5377ACBCFD6F39AED664E710AFBC1AAE14543E672DE05
B7584E6107086772F4BE1C88DE2BB999F2EEB64487293D953BD70AF44BB32F9C
2F750FC0A519E4195C00E06E15B475262EF6C5B60BEADB59314AE0F8AB4EB2DB
497307B463726D5A5E637266C882C0AAB74C28A51835E8C8FA66ED47A40323EA
6EEC67C00576C281873F92DBEF037D638FBA8E28AAFC1D86D9F1B3ECD0B7B369
0FF8EC86B6A87C01B60029A64AEFC7C46651D99C9B738189C7C6E04FC4B67642
27AACBD16084556C0476BF06D08F24A9A10550507865735190BCFB554F1F22F7
29D55FBB8B03B7DC06810D5E546CE1A4FE3F10AA42A9095E080EF09EEA1306BA
16CFC5E6BA25574158AE9629BDD33205F7D9E1A04ABB0CA57674CD82871D7B80
D04C8559F2B443169EEDC8322CC426B7D59B0D869D9F68354587F7F4CC8370B0
277793EE246543D47BA0E30635494D4290FC54BB19612984EEF0CF90ABAEC6F2
8C2EE0009E431F53CE092883366382D3DA0AD7EBFBBD56FABAA53D279DE479B0
D330FE9E137CEC5C6A1835C82D9DD117B681820D3CAA8B81E1158EFF51CEECB4
304977DE1B1F6EC9BB8A4687BD9D405F2E298DEF3FB862F9A95BB000EDA84B41
34A70115B6AE76F58EFEE4E191CB43D7AAC3D113193ABD049D81D9B032084BCC
36C875E1106E7E814D434C7E49EEF89C2443D776142AE7C3106BF69131C7B6CE
6099358DB63422AB4C6527726A6EA8CA1FAC2C0265C38ED54ECE7B5F4C0AECB2
31EDCE702BFA3D99DEF0EE5601B24A03A6D7D4C602DCE1964FB4C12E9D925744
18BA3C1BFB33C34A61A1E786FF10E2C088CD07DD165E3BFC58CB3607003E439B
E1A5583DBB33FF93C653FE0D9D34F7C5D910CA46D6766FA01198F88EDEC7578C
9CD3B56774E35E6A9E4FAD3BE5343F616C04DAD3DA73277B725BC8459B520D1D
09B698842C66CCBF9FB7332EB0FB51D0925CA1C459C4979CD0A399430D3DC3FF
156B5828234242D859AFA10C3165E4C035D2303AA65F51A4A78FC2B50BD9B928
D13EF9AB2E76628DCEB39128E2DD1BE581D496963504B2F80D65C79709531ED5
E653F3876022F31622843E989909B44CC8AC84464E13F0A7CE3A22082DB05169
4EAB53619B7E0C2C4555E13DA0B4D818EB8614DDDB927F5B3BF9B315C9F68139
686D99FC6C149538F6615D460B5AA814A25CC7FBE5464EF414EACB1766230A00
5D9CAC57566163CE8CB54B37655D99F5A4AADBB4670469FDEA0CEB1E16ABCE86
C6EDC75A1ECCA281F2E9BDD00765D8ABF6C9EFFB1B3DB781B79B72A1D710B5D7
F5CABDCDA675F45E59C89F1706F1BEB6622AF8560D6864C2C0E240976A750A2B
0BFEF3C54BC4CD46657AD1267FC4B53A9028A7521C46E41606D673924D7D7695
1457552073B58853D80DB0604B27CD487B978FD53F16CE6BD0EE35612ED730EA
4608769D75D61902FFF971DBE1A9D19A045BC627211A10245BAE9EAAEDC6323B
D29DC4CAAB49396ABB2AAF5C5BF98B459A1DBC8C8FC708FEC29C56A8F90B74BC
C88BFB2CC0E2036A6C1753B63B16D6CB9E31B4CC79194ED2AD8838FE0F67AB86
78F3DF4E9002FACC284EA58A74739A82D0E3131A9FE757A5C20B8D3DCFEF9EAF
DD33E4D98BCAF77C463F3AD882EC2ECAF74228D9CE818F2502A292F7E1337694
9D9F399FB66B3AA2D5AAEBFCE9C79ED529A5A4B82969DEBAC3BC0AF38B219ACB
E4D9CBF583EA68BBA0F69C64A315422C6DA9D1EB5497B9FC530D0826E5489BC6
8ED56C0BF82379048B15D3BEECF6126B8344F1138D9F42DC999D42CDB3428DD2
1C502BE11EED406DE854CD593E2F747377BB827DAB108D4632581946AAF3B7A1
39E9727476F327351B20B7D80BADD94B45A07F977EA038218FDDA99B6B04E473
811F852865AC646F6211BB5DBE6F08D69F8EC2D65CA44E199DC1E401E4DE643F
4290FC54BB196129864096DBEF14636A857627BBD49BD191D7ADE548FCA50896
B78BAE24917193045923906134B72ECF11678A75163654E368690B927A03B3A5
F2BE36A84A8188BD04C80F9AC28DFDB14365B551D57A1B6E99B217744D831220
8952D45B7877077E4213A0C9D17543DA820B688117269B06CE8816AA5C60503F
4DD682DCBC9C1FC65A5073BC31BED19F4F1ABEA2412B084C042C424253E17D08
B848A0BD023E32A55F2633C0055740E59D064C5C06EBC729280E8DF8D728E5F1
CC96E65C452297C5276F3D88E0721BF6B14C2F007EB3C42AA357923F96477311
BC556F43AEDEA439C95A2D5CEE2F4049093D8C103A3900030A594987275D300F
F4BA03000177E74B55210BB65185FBD5035EA3B088ADF551EBCF31E7367D33C6
817225F503D3A7C823906A6310FE64844F154F70EE986AFF342DFBB22A3BB67E
8A210BE063A41F1511AABD44046D11F54FC3D07D1BFA4F63CF87D99E56378B04
8A811626E6E8E9B62E0FBCE6CACFC93D546623433B3E083DD369302B31B0F8D5
2491BCA3D3C7A5B4ECCF2A7C5967128027BB6540AF22FEC5AC02B58CAEADA114
DC3FB3E204CF2F99B5E3759853E632808C06C928783AE7D1F2FD32C072BC215A
8A6B53F4CADF4E6AD3AADA6F16F6FA29859AB7E6A3FEAFF361F388423B0723D1
54BDD3E3F35F69F6113F316B31776BE00C3E85EEAE4A64293EEB77F36656DBC9
12B3D83B447A9AE2CF9E7A623BC76254AB826F818EF624F1E40CA6064EE8F08F
252CECA0DC5E9D355618B8706D0EAEEDB91D55A00B77285AF53F0C054762580C
F9591A5D9F1C5DEB4D442F3FE5093AB358A40B2812488CB1AF94FEA1B81A3266
FD266DC42754E67FF405A5DC274046416EB22F0BDACDBF2E7F794CB806E648AE
DCC780D03E906123F909FD5DCF52EF6EBCB4AFEC62E6E0243EC1D5D82DA20A67
E234B91CB64DF71DE473758F3ECAB31291C0CFED965040E062278471AC97E545
526EE9F36DA09B8F597953634A1F9F22D2B10CEC6010BC32C823B819D9EC4224
F95B8059B66E462F6B622EB7A6208AE1975B25B80A1501AC7DB88445DCAFF0FD
51C3B4FDED938E882A58A894148AC5ECFB624F11AFA930F69827B043C12B72AF
85B272CD32D8933A45784EFB9894BF840AFE537D10CE477A7F62ADF9780E9630
28ED2EF87877D7DE7C0CC63F8C46531D96010536B0D6D72D0C96FF799BE367C9
F24A5159EA83A922286C98CEA8A91B9D085A7DE2EE5EB14C7F30883D4460F5B8
EAF3D4F8338E181809C0F498DE245FB8EB0A56D39594DA116953F1416C46A416
2D45B2BD4799C38DC963AEC004137C706B0CC239EF68C04731646A8B72F6CDAB
02F3B0CDACFC962A4B859EF6A3FAA8B678DF16A11944A726191A8CF68EE0032B
195A7BA45CBA4B1CE4D1AAA15C54B4E1794020155BE6F22A73519094BB608D6D
26BE7C8B5E0F1641F668814CE93C5A09A5920B51946B3F852B509A8DEF613225
A410791D8613AA281713CA24503374192298A6A03CE48EF3F53D2B761AF4C558
5C31DA3FA756326DE413BE8BE0ACB7EF64889647B411DF2A9B3AD6996B3C2AF3
876202622263FCBFAEDB827957FCB8D33421051960DA49BE097447E46C5FF057
8713AAFB998EEEA48BCFE3599F62B0286AB1CC9D10E15DD0772F9880FDE727EF
CE5B4B300C0D39BA7299F9F9A70BC378B5907B740AD75836F5266ADA8BFA1EE0
81811FD8CCF17D84AB38E80A4EAD1B7F7BF679F38029737C4E5ACA940C114EF3
CA1AEA9B9EA11DD13F1A89B816B49F1B1DD7A167D79D03C8142AC6DBCAC492AD
7CD5469D10816D1851460C182CD8BDA6BCEB6C7027C2EEFE39188DD939F05DA6
175ACAD1AB7F466603A20818ECF3B1FDE84D13998B3D02B04C0EAE0F92D23B58
6C0197214481C1E485E365AF758B3BBE067303669101C639A25CD432466FB4F4
BDDBFF1DCC92B8A401382D452C210D293B423587135104D9A004F3ADF4F2EC84
C8DEA328EB6923689B1CD10DAA7DCF673C2A65349E68D44A74AD20DABA81C9A9
FB2CB032C4A4CAA57B3553DE76670ADF9D6054B21F1EB0FB9D2CD508B81DDDF3
5367960C84235B58E0BBD553D9457C1A974B8C30335C16D7870E7542FA0963BA
6A1CBB2D4F3A686D4B71A90DF57039D0DD6DF1B68734C4FDDA4B20C2B8A2A234
4ADB9136DDD36DDA285A6C8A7A863D5964CA556A2AD75EBABA754AD94901E7D1
91497781832A923EDA0CB287562F2CF4AC10E1EADDE6B5271457FEF67C6D1A51
47FB70AE323AF83F9ED7280945632FDE2F8ADCF2BA8EBC8F0022E643C0715ECD
16DB11B034E364B6279EC2C1F853F1EFFBD47454F069592D54F4C9C39ADF1F36
36A2B94B7A9DF5CF6D4BF8208584AA8E08C178B9CF687F5ADC394324393A2029
9301F4543ED72038BB3E6B4BF5EFEAAA4C9EE94AFF4D1D3FEAF566B2EE653CDD
B99CE9EAA6F6EFFBE823578AC4CE5463049488C39B6B680564058E0559305C7A
2A9D391864DF9B406DA3EFAACEAF236F9DA20E344807E046113BDE623F786CFB
C87D4369DB538CD761EB572FBFF15A9FBC701AB49582C3E16629ABEBA5FEE1EB
BF156308B4E94F46BB839B24E18E37E72D710F6C782E3298C0CA86A73AEEB561
0D97C2EA40A2E273FAD6F51A172D2FF2C93F2661518DABF03FD065C58CA8DEEA
37CAABBEDFA359A0CF417AED16EDC2E2D3AD1B581C49E67350F2017445B3710C
21346C17D2A82AB72357ECEEF1C6ABEDC02676970CA89DE41EB9F482ECA58F26
7622B31AE3FB464844F9D6A68DCAC3E2A3DCF018B4D40548D6AD65E574B571CC
7AF25886EACBFF2BC2FC5A3508038858F08F66F98E6F537FBF95D2C47F9BEE98
716CE0D6E8D0A68AD0556A1A09ED71175C55935C92B42B374B0BDA09DA303974
F987EA0B5681AD82F06F7DDE16845659FB0FCE479F70FE4BB33261751AE6213E
F1DC66240A32DF82A2E0A1C826EF824CC701D625500D2C02802E7B683E65197F
F85E3CAE997164C0D03F331230576AD3C4E47C45461D9FDDA1BB38B369713876
F08332B97C5F79B80DA0DB5D11EA84B4D975920C2EC7B381695BB10DC043CE7D
D31D0A44AEAE2F545205D47CDD535063C9BB17A557240DF8F67B12BB4C8597F9
E0D0BDD119B6A6A31E5FAE5BBC2924D7EABD1250D8FE49510FEFB1D29EEE4733
2636A03B79E6017D78F0129E2377F5D33A4278E3750C09528DDF1BC659FB1AD3
0FAFCDF752A36C01D95C813004BA89D16D4DE17D3CDF428CCC53282871A2C0C5
4AF85A99DD9B6425E39E2E13B3371E1F741A8AED0A385C36E2C5B7BF665BE143
86E84045A169D8A9CD4C32B386AB3787C9DBF718619B1352524B5F54DC2F30B7
A0E813E386B3072D6B032B9837D57B0BB8856CD4FB1A44A04DA2757709E09F66
23C37DAF093B55A94F8E5381872F693579FD3053FE0DA9DC0E3A39EC579094DD
7139F018998F2358CE2D559E70FA9FCE47F94FD8CBFEF0515A62DB268A44B5D7
79D7D5E059D026A5A2D984BBABDDF515601B8774F0A875CDE26BE84489840747
97CCCA4FE1A5253ADB8B5D9D8C0C3B82E182ED7DD32AC3EEC08560247946F1EB
1B7B1AE95C8152EAB8E097030A3F759ED7EB547613EA29E27CF1D824F15B153B
8C71EFD0E88EB98FA02861A4586338B24E64004E8136A6C4DAFC1B8FBE3969FA
14B909CD4C42228E0F6AE05C2C1945FFEBDA309C5C180762C45E76D9AA5ECB28
0E0AB6102CBB5778637D3C050A1F0C3EBD8C1D2FE89C8F087A24C9751F69DAB0
A8F7823FB5E9C9ABE51587CF4CB1954C2C49B197DCFC2C15259AB5835BC8B3B4
03BD8D92C858142B0BA558A68662DB3A1E59E601AB45C66B98F247BD2691F5A2
B65A4F33012BC7DC6E17A84280E247DF912947388EFF3027615E064C4306DE72
BEA52DDCF28ABB41A2DC6450F4BDAECE16CD3AB2BC2ADC83341F5013C867884C
E06248CA09B0E7CC7B3DC991A94F0CAB84450B6DDF13513917DE4F80C74A575D
3F48899AA55AC6D9E0A45306631387C736417982D49C03C97FAF58037629114A
27E6E221474F5F14896F8E27027F25A807B9CAB533E769C72DA685308D877FD1
3E5D3B0C7D953405B23B9BE2DE1076461859FC1EB2F47E9730183F32749C6086
8E364986DD6769F0E87386A046D27D8CC41BC9AA4CB23062C225FBB32EE5428C
76A3150F5AEE7C46A959372654ACDC29FB46420353776A4A375A6DF6D972CA45
44DCB68E9CF21AE6930E407C519BABA466B94C7F503412BDAB5922F579ECCE7C
C31E8E62324F29CE139846509E6CFE89ACBCCD12A40CB9A63FB47C5837EB19A0
5177B906369F595E1610B3526BDBC499203BD4C6777B18A7BFF098DE02D57014
2ACC9839CC0F525FBFC914B07F64078B313E13F4046C19CA9191124C351152A7
AAB81C227A7AE6182477EE5B8CD20F729EA2034347F9F99BEB0CEB9DB5870129
71DE4BB2FC34042A26D8368AEEEDF418EBA2A2922E14FFC61D0C1BCDE1C3AF32
8987F89CA5E2A040ACFAA7660FA02A7621B49C4AA9EBE19100C3A8746E82A455
9099E67C041F97B7C71102F9D6CC28BDFCAF4932B31AD9445426F3181B52C028
BAF4E9E276671590FF67F8EB232CD6228ACC155EB42A2D729E5A36C744A4EA26
B32E2F52CA3C865E3A562C630448B5C2CF771B44A36661056ED2F00A89829412
7ACE271DDB8EE91B1D4AB1164D257B94F94B0C0989396C3F25A90E136F157ED6
5E3541EC554F1BA72ACD3C435B89CBDE9E498E97E6BEC06CB4AD8699E9150D79
C48BD089367F2E61052102D30E27079D4EBA3BE3961431B9DB9CF3E0DF3DB789
DB0DB867CAB6B9069A6E37FCF064D40A10D2DAF3CEC02BE2F10B2375A3A763AA
B27CE42EB4F09ED303D002A6B19A9CBF808D1CA8C01E31004EBF5CF22FC40839
4776A49C5AA38CEA84454D337E609863417EBC5E6A80449A1455628B3A04BEEE
4EF9296B22C31EC9C221DF2B38091BD3816450CE13B728877AA4A48D4C5C4B47
C2B36396AFB19D834D03E15BE17465D5AD7E2C8A378BB0CFE56312B6A53A8079
939A78731C7DA62330FF8A7EDA12BAEFCDA1A1D67A02D544FB70D8342FCD98D4
77E5F5810929EBC169DDEBA1DFB5B20B8F7FA04ABA7708CB05C70FF578A08F60
3FDF3EE6008BFCAFC000646F899AB68B59EC79F77A4E2D47F48F25BF58165691
783CEBB982F5E053550F84D5846011D3BFC82DF1638216DB691EA45B37BDD26F
C93B066BB35A9D4A28A8C3FFC4C39D93CD077ACEFFBDD3DB50203C1182B94752
E7A751A9C9FB4E1A475174E601FCD64ADA47B7170D6351F9EEAD7FEB3835783D
8E5A6CF25F67BFF58A5BF5658976D90AB4881C7F6942FDC82CEAA5E1E02247A7
A0A8E7600E489B578A6AC66D5F1B55C1464A6C118003FD15244F7DB2FEE689D6
C0DEF70F34066C80013CD99DE37D7AF7F6F358E61ED1D8565C9E6665CE1769C5
E8008F1563F3ABB57477A6A52AE12742864A4D2F600F42574750C44E58FD9D8D
37D71C6C9DC72861555B4137B87D54174A836E466B6BBA867CBB1CEBA01FCC75
AF02A6EF755D5BC905967BAE000910D15CEEFF6619037ADE65929F142ECD5AC5
23037323C7FA74F4BBDDF3B072C3140C5A80F04A70D238D29DCCCEDCBC078139
68CE160D7EFE27CD1328010CCF44D6AD0ED117649BACD9ED9E97CAD054E1A76C
861D48AAE2E93C5D6E9418633716D5C5515987009BB5BA01C6F7A6A36489E871
4502DFDFC2F15866AA56D8EC8236DA45F1A55B455A878A8A9DFAAC2E7570FA74
000EEC4FEE51FD3DB0808AB004A99239851898B07EA44F5C4EBCD77DB53A94FC
CAA8688E2EB457B31F845C21532F1CF7B07E6BCCA8E838944C4C5DCDA11FADCF
BD8CF4E6A1A2EAC546610B0F0F8212F58D9F93445DB10650E6FF1A0535876AEF
53A21C3C1692A40BC6F69600581A3A41356BC67034555155E81A84E51271CBDB
EE7F35D8C9A743151C604FA2D7C9968DA4E54D46E87256FFCA78D9B65365E500
03C44FC38844AEAD72AC2BE1300AE117605483E5B9F18165FD2F70252BADEF12
9143CE3C083F291FDBF95C95B7A93317E8EE262C777606B03816746FD49FEB2B
F8B55D14EAE30F5E3558C2D229A7AF1380C201656AA6F8698090D6B42E66BD19
ECEC32C4ABC3BA3139930674EDFD57973A598DFAAD1585D27DDFBDC64BBFEAD5
0790B96EA6ACFD73C23C3DFF68865D7C0D8A9B4CD981ED785BF56F3A545BD66C
DBE8562185829D8FAAC2CAAA9D69B556B5D93FBA612F1A0E6D2076DDEE9E3229
A14629D712A2D87E7C7CA70E8AFFF1FB2DD0100D714AB1988BA5B1D7A1BEEE0E
906C1182B3A89FCA24071B3633549B948D5F0B3B0EBC354501D04A86CA3C5629
83665B02C4C2DE668470A2D5EB18E5079F869FD6FADBF342589C97400590804C
AB6FA79178AA7A51DCA93F717CC1CC018C1A11FF9F79ED928E7CE7910DCE6FAA
1A238FB54B3CB634059689D06EAC40FDDC1CE06A1064C6CF17B0C71BE3AE29D7
E064B273042B613E2F2DB954799017E7BC14A4E61512FF5B6137530F21E17AA8
A4DEF783419CA20EF10B666C42DB43FDEEA550142A5EEA16DB4964D30308C3A6
53DD28EE5CF1F68628923326F7FEF77C386A8ED5C90D0D1938CCECEFF28FCA3B
77E2F8995236F3E8F96BB599FFB354559EAA3891A9A9DF3FACBC23EDF24B2B20
51A7D11D099FB149F47FE099443B63AE0D1E96ECD1D1C7C82197B4BC15AC1CDD
F68337C7D1C913625752A035AE82A40BF4E5897FD5749EC6CA25B51255CD1468
9A17AC3598DE5EBE0E711A91B56CF9A9B492B2EBC5F56C39579A61EF262BCD20
C4583664679C211E430B5CB89CF7F1673374498E4E38C8EC01637DE98840CE24
536CB9E06E3EEA0010F9FD515A6C0B875A579FE865E2E01C6F178938D40F8D61
A9207B9AA33D128DA8090795FC49BEEAE18567968BBCBE304E03256AFF71D11B
4CFDDF38580C8865AA9FE0115FB072407683AD822AD956A228C8AED0EC8ACE86
B1624F3586A8FADF9E8FD45D4826253228690E87D29DBA04CE034577FE5958D3
70C256C9263548BE55259C10C8E91B6703301EC6744C88F82F891E57F83B0CB7
8163C7F18654FAF8A230E45F75085DE3AF3B630075586E02A159D2EE16DA725E
E9699FCD59F47278F6E2F6553286E85E25FF47A0CC3DF613E10DCE14445596C1
63119382C165BAA681EF5B5967ABA0DB0E7BE3871F3E7C32699B3DE97D05C1C1
D2733B5BA337FDAE653ED118EFD5B3E163A32A0E63C7C58A2E66653F3494AD06
AD431CAC44583D55C7F42EB7C2538211069CC5AFF351974E91629A1A844FCEAA
A42F7F95C2DB2DD7C7F3DD1264B1628448F118A60EBA3367D5A945EDFAFC0B37
9F34E7AAE0D7292318AC911D5DF5650B5C1898C7108E6A2A09814C43297E4051
B12B263C433646D8555F45C0B380F639A5A2B5E307C67E6B4208970FB2F32CB0
D495CBC1A6D78B36524C444FDEA1286022EEC44210FC4ABCE3B8E8BD7DC9A57E
5CF409205B78672AD1052E23813AC24D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 181 /theta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC466A669A15614813CCF13D5DACCEFC0044612E8DA68D16BD1CD44FAC85B
77D4EC8E51FAB737E69A5BF653B8E6BFDCFE4783C4DF6C06F669EED412848DB1
C2BFD00F84455918F6F7B0125E9AD62A8D51C0DB9E7286A8A2312B11DE4D3837
1E5D5E2FBDDB3EE8368C068CA768739C7B57E06AA6F782FD61F4CD0197B54D1F
72CC1A4B453BD8AD2A79E22212442BE535E01859C46C6A00E00209115AE10C86
D4134C8C541EE0C702938B25160E5A62B7732F7787340F7F9D4C92B73D7AD9ED
D191BE3DCEAEC1D7C3A7FBD6F0F547CC59147D8CBC53A9E22F5D33CE76831A6D
845622BF19DFD8D42867D6F6ECB19E89B929ACB23D13BF25308EE4FDF59A541D
B128D9AFDB38805BCDFB03D969C18B5844A1ED79F95B9D82667118283CF25192
6F70487C9DD8CA15F3B101C25767B0DE20FD7442D59F5B935C4725696F5B057E
7F10C5A6FF7460ECE5CE83C3F562C102815620A54D45EFCE0A8C6DAB6DE40F00
300473792015B8E4EFB32067910F770C8A9C9C9AF1DFD4B9C6D35507731A2C06
9EAF72A51D9EDEFC4CBD532117CBFA12D963753D7A869DF17AA2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7C8BE8F7D3062E20E83FA6AF45A0C932B5E6EFB4DBB928
E4511768F708A03FA8BEA26BEBE94936A426DB77A8E800BF093CF53914B71382
019AC58ACA79B9DF64946EA241C84569F2A13CE8AEC335F6B5DE8C00317AC6EE
983987246EB7659537AD0F945CEB9EAC541E02AE257377258E81CFE33CB66A9B
EB514F04CA9AB516CCAFE56EB0324AB192EBDDA61E0792EC1857BCC062666338
0089C3A9FDEB405DCF235A497AC316B132B3476551DCEBA0560C18F1BF84F1E0
1467DE59252B169861541BD6774161EA8F9035787CA842050E2089AAEED6F37B
2D12BCF5E67293A1F71DF87589FD22D5F72B9C91CCF4019F97356DEBC9B82C93
BD0040BBCEB10CF8F607E0F7863C43D7F6A91917EBD66730DBD642DAB8769849
47384FFFB4994ECF216FFA8140397695EE5AD63F1156720A01BBFB15AA24FDB8
2F2A8F541C7FC860E03F5E4DE80BCF6891263C142159D5879CA0A1883A9B6C50
CBDA9CF0C97E761E354C39527F070E680B42E6732896B10E6A7600184B156ACF
57BD9A98F613FC166F47C3D1C4E5E02BAB648D74B078EE3F0D8148D981451BD3
918C71284E6154BEDF8D66BA1261A7459F64F133445F9BE19A2C48B1FE1D06B1
845AB18E2E5C17B77C48FBAE7AA98424BA0F90F689216F31EFABC25D4EC37767
C5A4BD9210AB9F0D3385717E8980C7F6C021061CC213ECEDD34548605F3FF29F
B92FEF1C849AFF8AD297F7A4259C35B7B9B679A509FB97F10F2BA3521085B1D5
104D43AFAED420272E0DB15AAF65567BAB2B030932584E4DE6150645266166F9
0B4254E51CEBB8AF1DF197332712C1CC25F4C90694E0A0062BC15C19C34ED8BE
EE6370E093DC61E10F0D21D131383155AA57EF3F1EC3BFE4945DCDAED151A00A
04E5D912729296F062120371843F314B657231B7CF6FC06B2A8B51B22B3D70DB
35304CBEBE59C2179D17F62B1EE25D68446270CB6EAECAEB45B3598BC094C41A
4D40F4706DB41E9274E5831F514E4CAC1BFFFB8EE79D8569D409F1D01FDD7B75
A18DB9B18325DFD559D8CABC65EC82F51AD87E4DBA547A683DFFE0652F3C4865
D9976699955A25C171EFF92D0D809443067F25110B5DBEF8F6D2103C6684E59E
EFFC5B79E844F77579B2C40B8F3B84928A6BDF989D2A564050C8E934363E291B
F1578CB5A8717162AAE4B14DB92CC9CF991FFF370B006B496FCB64AC49A3C48F
0C0424303A7A7951A233333A3BE94FA1259DBDBE4C114CA55F4FBCF553F70268
296E341B8D3B1DB27ABBAEB637F0D5127A02509E3232C1145ED3E5D1F0F33BDA
FB319C324214056FEAFA2691274EDA6302837A4528B62F334A3E257B19DC3CF4
1DF8AB287F29230804417B4C9C3DE04DB6BFC647E37352B5134F39960274324A
1E98BBA740CAD477ABAAB1E8935DBA230B5285BB6F66D4761A0633973109E5F8
4F913F01A6939634D73C59C95ED966B91961D9189194B93C9DA0185314F8AFB2
0A70CA505559295B76127E01C40437523B608EA7C54D9CFB9F4B4E5C5C4AF793
0FEC736561223912A079C015C8E07FCA0EA41A48B3396CB564A6516415F1BA1F
C2B4613E75A878A64E9138EAF4304358046B630CF2DEE8B50EA2E4C4E7A8CC76
0748063211379C4B88C50DF02D59EB390801ADE951FC4F15022F60E826BC6C58
C10F14C5CD9EB6BDE47FA3E3BE7FE3F6AD329CD822073C06EAE9324B434810D2
4D64C555BE8CA29616E9C7C6ECDCF1B4B122171E49088B1D46E567FEE4D90ADB
A13E7B78FCD7FC3EE8E37989054109B83262FA4BBC8B80F1EC34DEA70AB890C1
DF5531307FA0CEF5A6B0C1A0DFB650FBDA5C05B0237DC06CD89BA8AF57F16349
AC966728C238F5E73270F35D9809BBD8B6452FC109BF2C2D60953F8D5F46312C
A9E6D3905C7A313D4EF29669BC8FABF1714CC0D53560A50FB38D96B055748E13
562FDB4015FDA6400C57C5841B2398A1B186CB7CA9757AFB867B901B10B85C89
C479A058709557B773C62DE51D6F8FB638267D4DB29C1D03E2D3F1AA6B197C59
EC4E3E837470F53C7B7C58D17E951615D63037A0B69DCD7880744EEF8C3EE046
B437E576845E86176CF8F9DBD1BD2BEE9E584C8A969848587EF0FB3A602291AA
1CDE5366884AB74A138F54BB9B5FC9A1121CF0365A2F231A53AEDADD6D76FDA4
92539AF42062890A65E315F2A2519EB6359E93BC5A32C23BA90B8849FC2EA4BD
68A223C67B2E6FF0327BF4BFA65B6322CF2F5D6E13C859CAE6E9128CAAE22A97
1E9E557639F284563D515BD35316286D0A1D33ACDBF56351984A761286C08254
88EB3148BE7D1A54BA73C8F65EAA469B9BEA0C4AF001903CC59D581F41B2E3B2
87F68DE6B93AFA6EEAA534EC71B2456741DB1C87568C99860C48F0D3C48B2144
172B830249593DF508EA3FAFA05D785AF4837021895B063EF75D086194833BAF
4B22B26ECE38D325FAC47579B6A2FD005EEB9C6336F2FFF46556D23F6931E274
A9A853BE474ACE3E01C310714D3DD291F5D1D54BFAB44507A0AA0AE714490ADB
5201110AD6324023F62F8F9FB32537901627C5D5627A380A78F76C430B23D3C0
579D9C9D7194D5F4ECADC6B14670E9ABFAFD8D32D63579A555057A2993AA3BB0
6FEED0BCC4106B4069D7F9E5F0CDC9D0ADE512A83C26AB714C62E0C2F990F78C
AEDACFD7980DF598C0B55B5E67214DEE2066BAD70F7501F17E4BE828B179F936
C68AE6610C9D4D546ECF5073AAF792B34437BFCBB2F1727191699F2059441674
5215395E87C9629B0B0152DDE9ED10F2D878748961B34E59621449F73FB22E12
793A48DD85702BA6E6908560B3EDF5E101DE33412131142308FB71923233F1CE
C0A5D3FFA3757E3F76B2AE7A4E4187FB1F44173FAD7AF97AECFB0A51592540BD
4A349FBE52FB3915AB87E8E08BA4DFCFED4DA27AB0623FDA5564D3822074ED99
FF60DA83307B079CD0F664D76F926369E2F8396C3DF2AB61195863F591292683
25FB2D363BC00F85AAEFA77BC50EC0DB9F2D828553AF3D505D27D874B761A235
E81017D32A267D0C5D958C4FD037C2A4020415B921AA707257585130FAEDD0C9
6AD68DAB440F5DCBA28CD7E94391ECA2F02DFBE21875BF10B3A46419101B7144
E8168C8211581FE0F47E8AEA88859EB2AB5D6C2F29B3D6C6B7B1AC0733E14FF3
9E35B8A4E533EE00260B5006B17C1BEF0E2551F54E20E1B20EEFDD36D10CEFCA
D3A9533B536C7862012470FA2A9EEA5FC99224D8865DC33E73E7856DBAFC050D
9777270F84C3A17879673EC9C2BC8408AF0D599695F534610302FCE65FB1B150
3B53C1E2321B9CB25F5F8AA0D711D82F6160D8DC441575CC285B6F9AC74B7DA9
E85C1E7ADE2724FBA0A97D310E74AAB1158E5DFC3F4F643110349BB4A18C14F4
D0B0532BCF40A53E84D2B2B3037A60F2095E989A01C1463ADEB681D9695F0AAF
C824A221794B75C882292D6376AE80E0EA6C08DDADBACD95228E1F6EEF5240E3
0D31CCA3C89ED4C51F956B459526E5CD2B812AE22E171E292B06563AD9106F5F
94BDCD5EF1E095D43077DF17882C1388EC38236316987620C908FFA9F766E4BC
8A34FBA19CED50E2D20CE8CD317805B00CE59344335385D0EBEC5911149BE2AA
4AEE77B6C6D7307CFD6B9838BCA455BC1900FA6A88444E3A47EB8FF9E03E3E2C
D5DE1AE4349E7C91EE7A1009A44D1CE19E46C61A02618B4034B4D71A1B74C8ED
497EC528504709D2AF04D99202015BC85D7A354BFFCBFDC6D7657597F65AE0A8
77648B99659D6DF5A8F2719DC9EBD70FA5B1F3D83DD3D4A3CC1FC21E7EB279B6
B240D724FE74BFA58D5B9DA9D2F1E9FB4790D93320E591CCB5EED23ECA17338F
BF87C9A4EADA6F8711032781EA36BDAF7857DB8392057BC23828A5D10E567486
14177A0D5390EC053B973AAC1698A68D3515FE8EB84814B83D107C57FED304B4
7A9E2CE831B3630006A297517EF7FB7485AEAC9A285879EF3856E90FA37E7228
AB16EC0A6CB66B02CC2D1E9DA509737DE5211974DB59DE2C4D514ADDA887AB77
B22EC578A02BB064F601A247FDB071F5430022619DB0F684C6F00680161D8F00
E363EEF2BFE65E6C285617B0D434C8EBD5E0364A0528CB5C85025EF63D2A1D71
374C187376748C350ADBD7CBFFC2425C597DF595922BD78084B4DC8F23BC2363
0C8B1B97E47AA009F30562D10EE8AB088F1F6DA3C61241A02CCE58811F6B3FA0
BD229C7F2CFD2FF2ECFAD1C3FB2C41BBD7F756679298AAE27640C9286D069ED5
CF4DF0B0E2E51C174C26DD97D4506BE4E3D2EB5464F184A49A9F65D4A52A060D
1725F05CFB99D6DDFD9974332E794193D57E5A6E99FCCD7CEEF8BB478549CF30
67DEA78F67F1C1BC9FC17542526F5EE3F77F4852397CCE0C1BE1AD139BC25022
46F86A96B4EDFCEF13FCD6B80D22A1C42E70F0A05D53F95820148E1D3D3F1504
380C4F96CCFDDEA14161917076226B6D1C4CA5F05D9CA67101F1C68576FB44E1
23505A75EFF87AB4C7AB3FD6367E753211F538CCA249606EFA33AA7E36A2E4A6
F34E470FFCFFC9708743538B488FBD88B965BEC1A8B10062D2E3DFD19A3C3D61
C68EEA7F6DD4AA05C100CE300C919C9284F519FFA64CEF6CD33B3240C8670350
8D1146E96C974417FD6CE1A9932FD6AA996F4CECA9D408236DAFE0AF978F5841
8465126559BFF85288F1BED90F03DC4316C7BDE383B4BA38AFF2C2A1EDF171B5
975715353EBF18BE88B7B41C9C4626AF53DB2BA5F584410A54FC2AC5C68916FE
17DFCD830E4BDCCF9D1925BFC9594A97AD739C2156363C7D94E07F4B4DD8CBB3
2CEEF28A858D18A152F9CB26045C637BAB17542B6F1A289C1403465D88343760
0207A25DD024213A0FB22206D9705E4E3F8E5CEBD011E29C56A0E7FDF5AB6F3C
877462BB83B343609E4A713FCEC8A8F7CE1AD17B776C43AC4D3CC48972DEC5E2
6C2128BBCE02EE393000CEB19548D2B9C2EA398FE8475B8C568B6005F5AA4EAF
9537010B0D8A6EE5C6CE051361997B367E27D9DFC6FFC26057B47835DA9F83CF
9EC50CD4ABC417C19292843AEEA15785666DF3E90CA2B13634F55E967DF98C1B
17BA3C6535FDCC74F203959269241F65387BE8E85B7916A3899C5ACE98D02160
B286C97EB43BED1BEB95A8CDDC23EF545CF333545B800AF66B44347D6FBE690A
6787F6B5EF8CA9E4624271DB221ECCFA17E33F0B75634EAEAB17D591C58552FA
90B55181711AB819B07306C44AD4A30CB42583D6F55EA100ED376B0EAD9A7C3C
70599DC2F356BB7E8579F9F9259E4DEEF90CA8E188BDF76BD441F282F7CA26CA
6070F3F10AA65D3DCA20970874AFBB26A96D24C7EB2FB795565EEE35A7F1FC8B
86C061DA0084A9E8C5AD303FF87062E3F50166F444E1D31FF780085F19FD7BF5
B14E6759B875A2AAE500A8573260412808176DE8455DA887CB00A1CE8C185D2E
4BEF5862182874433C98144F768535EC2DD30B98956F5EC28ED22213D3B8C09F
8BEC92834531D91B8718AC30EFB2F1566FBDE37BFBA6D0703DD7A91898234F24
9D08F7EC9005D7504F626A4AEAD5BC47336EBBE20F78DC73FAC34D4D372D68B5
C88DA086E468E1B6E8372D8DF63481256D20AEC80007EF874A7CB45FED1E15FC
146FDC42E338BEE383BCB287A5A6EDB91D55A00B77285AF53F0C054762580CF9
5AC5D0FBF7A0CE2679369FAE640729DF1AE4BADFF86F39D36C9E35EF64C65BE7
017223DE8BB22089247B9F41849B068E23FAD7C59B116F1632A71D06278E80D3
FE45E193B58E38DED6A5D94668AC792C2E450B9BF52168AA8ACCE4435332D3D8
0C97C44149235790239A400EA8E04BF772BBA4BAC2FB745BD36C91B34553F2C1
A8FC8A93449AB8A0F318B7334DC8A7A6688008E2CB91BBD728AC3AEE83A494FA
A20E9D7D74C7A2BBC64DC6E8027352984B2624925CBEE74A1FBCBA022552BB68
138EC12FC09C5B497B45B3EAA86B6EC144DE2F35DB44E39D43EF2EBB03A332CA
6127939404CE3F29F02B1BF0A0CDD8747745A81FDC253703ACA50578F5C5B928
8B697A832BC98689D002BE87D4EFA0BD65C68239D2E6091B2D536B30D75D3462
D9983EEA44D362699812514DB82C5BE31DCDEBF74C7D2DD24979B3BC0EA61C6F
8B323F5F42771C2E91CB96B2FEDC321C756B636A91C46645ECA22D415F21FA3B
54A2E80DE0D9F4860461CF631D7051C54716D2443EC74769E497F26912C415CC
C182F47C14B4B93BAD0331C628021C67817BE86513768CB0F44B1F08930AFE62
0F8C4CFFC095F0EF108893E5C2782659F1F50EB74339C799EA83D6C489F2A463
EE1D373CA4F7999E6CACB70C5FA5B9639FFE946CDFC033F6BC88619CEB8BA315
2DEA4677C0E910C483F53475007F00EF2005566BAB9535BCEC10D8B4DAC6B7B5
B214A96AFBA73D0C4E9DF81B2CF214ABE0AB193BCBF6C5D12CB95D3DF0552F7F
63440B9D654492CF3EA85BDA40053AC06819E3C86A6D4BC4D515E109392D39AD
1AB2CAC1ACA70D25766949D3616CDFB194A29F713C50F0448EAC709F6900589D
DDD7C112535CF417A9DC659D83263F3BC0CEC5B24B93A22C1A1FEE986AF342CE
6B0DDCFC5D23945A2563ED597AED497A91994C1D163595A8C8CD1E4325717061
7AF44D2770B4489B967DE26F93EB7C22C7B88872E9AE68BD3922F81DC1CB72B9
9D5B72F577B51608D3FEC5AA93A3486B5DD4F26057EB4CD1DEC3545B8A2B4821
8E6BF10954A112DF54BA19904BE3EBC41817579619F2A4277AB0789F323F271A
6643342D7A63899555D5D61F32ACDF7557F9B33C8FDC27D64C5179A1F263964B
479D99F84CC718A376FF6FDE5448C16C3980A76063398F2172834FC002C39ED8
3FB4429D777D6C653CAB4CC17246AD45F95D8D5E51D99488474B7611AA8C982F
B15434A3FF831B3FF7FF114C337ADEA7201CDFE7B31BA3CC349EA8006F34EF3C
0ECD6A5EEC8E9AB1D32DACB9F1B641FB9237FE0FAD8B5F057AADC1CE95936AD1
4BF0FA6B690A7BE8A031B5DA798010F76FBB2117C69ED632271192BFFEDBE544
9BBD49EEFBEB6D12D116EBF5FD69430DD48A16B17605A534DDDB4A6D30545940
554B948B45C2A83664143C32E53BD00CF72E8798BB4A7A14527988DEDEDC5282
A308782851C10EFCB56018CC75C5964EC24364FAF6E8D4EA877B0E32D88C883D
B9753C531D23DBC3036805A64A1AFA48E9E139D75EEB4C69C554F21DA9C2328B
A271A63DAE1F63960B850A764ADDFBAF8CCA05967CC58A0CE61B6CFAB7BECB7C
7235F4C22A9D5DA3B062B6D732AE463982708DC47B1DDD73C4C95CF29052245B
9BCB8890903FCF00A0803C43228D5891C3C31C6F2FCDBFE4589E367260EEC280
BB4A46413D6F2ADD8103447074E98ADDEBE52F18EEC78153E9C5533E2AC5484F
B0E9D44FC016DF8ED9DDA1590A6EA831636D920A9FA279AD35205A2B60195FB5
DC829278B112388B03F0B16A43CE71C657B1E67FA2C431ED3DEFC714AC2D98DE
543B6285F3005AFC5DCF2E56A4D6C306C9A4C737E5A4B9B8FCB5338ED7125F77
E281FF269C7CD93331FF30003067E4740EF72E3B9E964F6762BDC096004C09C4
D8C48998A567EDDFD661083C7F8D02CB3F258D2B99BBAB9F32442EDAB4BCA4BB
45C49782EB6C88467D82474C1F103C264C602D062693DF8E220E7FF0ADAE13A3
131CEF722C22B889A7BDEAB2D32A5C98E09AD2608CE7525EAFA57B8CB3957E1B
8A795D4003093961B820A1862E6EA96ADD48CBBF52BBA65954C8BDFD4CDBC2EB
B53BDDB1BD7A6E0680A282DE91D20330348BA6A370E512AD151A1F3C2BB97058
D75871C9FB9D51F16E8A761937811AFE2066512271376EB6739AFF3A84E8A335
44FC4D4F442CE10CCA9C839BEAAD27B64B2894E7CE019B09A87C7482059E9600
67F35145019FE686A233B0F0C78D7B483016A8A2F48D2C7625531F18470657C4
BC2ABA068DCD98C4F74B0464AC3A888A542A96D5AB72D9D04A7D6DE968A45159
2D99335D261FF7699387CFDF8B3A0557ACA6F8665972346D2997DD406000E96C
64A52004D4B25822F947575D798471F63C83D0DDFF21D61302508A8A17707A90
074D8BB4F52C21B5AEA0DC9F3254B4430AAA0E5F63A01E223E4E2A7033D75060
175AD4579FCD08B10711097932D828429DD1F2C02DC19C2B400A0C4FC8288498
21A921FE4AB2BC1E4A5EB289DCA797D86FE7116458BC6714B93761D8B1F54148
24E7D3D1DCB5388CB16DA3E0A2FBEFAD8AE1776A4C522ADACEA0C005E141DD5D
A8D22B13C2B07192B4FF738649308757D72B28EF629176A58B058FBE8DA854A2
C2B491F39D11EA0E2C0B4C1AAED2202727D9E1AA2D99606E14E77D49FD347A40
79A62DE222DF53916E9F69BD3FF8AE324D3B49F7FBAF3FD61FD4EB267492DFC1
64E5CB7987DE273F2294CB656CA1DEB82F921D404772D24115FA827B01BA263A
008D77A83F6F756CBB50ED21E2496831F2DE0147FE0DADB766EA4D2CAFA5A8DF
C6DE85C53CDF9ED2553620670727DA86222C1EADD7526A5AB67D71B492DCA2D6
73B740C302DD8FBB7205C0C56F740E184F6707CAF05B23403A27D6946B1056C8
48B804F3832721CA2F98297AC691711FF4A5A6599C4C03422E5EC4844108E1DD
FA45C92FFDC31409A688D98D6B490423F91B90F0F6E2B69FE0F17D9823D13546
D7BCA70A4B90BFA52B4ACD6DB2DECA6969A65F5E5BE91AAB3398704A584EE8A8
27D9FA94C769A5FE3B24C83C697231646048CF0B97BD5F68765E2E05A59C2BB5
DEDC9C2A2AC0957DE9B21FA55AB15E7A530FF9C41CB2BA5C7BD3C9648A2CCE9D
96FB4CD268E67E8F8EC4660730F39DC246F64DFC7D6E2085F526DB29D0AAB8AE
2961FFD032A234F38B586027D49746D87A3160D59D38CB43243C1E29E1E2EE65
F2BD3F6E4BB3A96AA3A4CB22342C9156CC0B03C17560B4222F9DCA2F59697988
110AA8E04BF772BBA4BAC2FB745BD36C91B34553F11560F2CA3E5CDE3077ED49
2E2AE042771838754752B736CBCD9AD99FFC402C8F83B2A871E11795F290D74A
AA9F3CB67EBC2E6782677EE4DB93DDE11F8EFA8AF5F66DBDF24BDF743D4BDE12
CE2BB10A52CCFBC52B92438D328E4724491976675D4FEBB19B7B01DCC25452BB
D18663E0962CBD408BB101B92921F859348B9BC587760C62B0022FA2AF3CBB47
C1B9C61FDB89E28A7C3F9A5B5ED8E69241A828FEB8E7897EDDAE4BDAC0923848
C234108CE6151D15B8059EEF3A2AE42461595E9A2D5D6F7BB8E67379FC74104A
ADCF79777F2963BBB00932108E5A1800C49C23D55A96A03235162076551F2E73
2E79BBB279BFC867E9B09F33E7843794ED138DE60A45794196D2904B71358FE3
89932F5F23A572719847700EF3D8DCD1FC69F83BBA1D6A347A4D9CDE40A2F71B
B183FC77B66AF4ADDD127743E91E27D89AEBEA9D19EE8175E878DD5C996A3367
E5294D3C60ED6BBD7ECDCCABF1B788E4E711644FCEFCE685348B29369C03E52D
7F314F142A4E6389492881873233EA06B0AC298FBF897DFD6C16AF1223684A33
0678D2E2327850A517E7103005F9F15197F3A23AC6BED7954E7B967298D535E3
5D638F83F667318C3D7221DE7F992590BA34E6A59924F84BE64E2DCA45B0480D
CE889DBA6D98C475A069ED3C9DE615A1CA5F3339D1B867651C54C71FA0CB19F9
6396B4F86A4553161A718768721F087C1C19E66047656882C3BD2E8BC584C632
82B98CFA800C056DCEA83A5892C7B35AC7D6DD755737BA5394AE29F72038562A
7F1FBDD18E69B10F8C4F9A9EA447D988BB0B635E081D05BA7931ED8645F787A1
533DB0EDA642AB8A8AE6A5B8159DF67C114722F1E1973A312E4BF2DE11183CE2
BA4E584D17187F0F90F4767BA28EDEF337B50598AB5A88367C9AEF6B2D30540C
F93EAEE0AD39D3AC926FB7082E7DE4AC7D2ECDB0326172364A0F4EE4343A7DFC
D683B8920B1ACCCA8808DA1E0E545FC6D8E52BA86FA20A2B949B4104B1D40E5D
CC2BCD8F4100ABC87634DD3DE61F3DBA3418ABEE9F0171A00653F01704F89609
808E57CB966B7A302F7472A960F5B1B8A39CF9104703DCE124638603B07AC228
E279A41181C8F84B241D0F7603F2AFE51FC76C626791670400C35D995691D131
165C9065DA6121A1EAD35032AFD9BFDFC8F6A90D7978D20943DB358C04C71DA1
FD013369BAA34B916DC4473BCE5D316821D278F3590BFC7D9AB0AFC6E007BD6F
831D0E9E64AF59EBA30A54D32B095322C82E62AE2FB3576BD854CB2695C460DC
A797AFE85F39B09C8375B1269939BE70A2E7544DCC25E6765FD929CE8BE711ED
7AA7B273C6F91B5D08F666FB5D79C29A51D6956F4C85DD693D1576F01A945E61
4A1A15CA4D299261569ADA9B099166BBC1A53CDE5C5CBEFFEAD7BDED4E9E51B8
3ABCB09B8A5DA99036BA0F5DD23353449B3A0A804F5E1B857BC0CBD7E0390E74
44514573110E7698D67A1F3D5558C0E4C71791F89E2C131EEA9A4B548A017A7F
6ED118CBCC6CF5CF7FDB6C45B5800D0BE037BBA0EBB4121AF688114B93AAEB9B
C08472DE4766A8666999499FA819BA0F206F3D3C24FC980659108561AFD3D311
E173408F12F02CB8DF4FB3EA2C40AAEBCFAA9575FED8D8B8AD91D3BC29C18C4B
B4813D910086BD43A2D35BCEB6FDFCD6A88BD020527464A55868033A40846896
930D7F83494A330286738EAD933652B27B2291F69F98A9405727BE064C9F9DB8
AC1137CBF74CA9068A365DD2BB6E3D3FD454354480B09AA1AB81158A5779A680
2E2CC5CDB6B4DEE7EDB633D45D541597F02EA8C5CE7C5B194A09674022DF0E98
11B79F1D790369694C5B8EF5D6E9D1E2191AB75DC5E6BA25574158AE944848F7
EA6EABCC4C07B2BF962D42E97B8A634FB7A4B0D2A4AF091B311C72972E05FD4B
9E75D664F4E4266899B65F541B528F76AA5C271B2714FA114867B9AF49EF6786
5CBF31E7795A0183A5A38F36C03BE8F10A37A3FCAE379FBADD009EEC7088418F
CF911854B9E608791458DA4F76546D2DD4BA6A393504DB04B298FB07EAD9ECFF
2EAD20D1FF27680D5548E972EE164F6BD22073756CCDAEAC9C93D1AB4BF94169
64615013A81B03E26616B172F1C3F7AF02A722D0B4990F28942A614D1A24B5AB
CEF7FC721F5790918A1EA774EA712E9E878FB8377D42EE941EC1B9311E524EA9
1E4621575F712148834537A15D9191BD9734B232A7C0ECCDFBB1207A970C443B
CF03AFCE671A2317836AFD2C39A496A2C0FA9A99EC7DE20230DBBF444C0C4FE8
886ACA9C57458D00DB0DF90C5D43BAF0931BD0D13CAA129D16028D349C2C7B39
8D2E7617468D5DBECA20C359B64A3AEB842CF39AE54A4D59809E84F2C2DF0D79
A8693E865C7C8B5FFC7EDAD7BF6A733941FC57A5F1C206AD986980C83477E84B
2DB5EC28B5176F4681C093EF589095403F49D60AD7A35861EAC05CF9A964CDE2
D3D0E60AF74C3333F3DE2D27E7E0635FEB908835C78DBE3E6FBF809FB89E7DB1
42F2E391413139D6A7F20D6FCFE4C05C80C73998F00025DB3E4EB85F4904B600
9B4F7AB26FA3C4A10C0DFB925D5272EB60B9DAB42B2C466E48AACCB26C94D3E2
ED1DC42E8CB90C905D3B7A57DE5FC527B4B01F6969ABFD49E8140AD5D81C6294
3378B5745594CAE8158F0E8611FAFEB846A1A4905C3FAA7602D7A00F108D6D26
886A85DE7363879B75A37C9ADE366C068CA0949AB90DD5A8616AE543569FA45D
23D7BA3F8AC590E7F25E52B1A1F4B7260F487598D6162D9CA10C814748171C3D
511D068D708941CE4F478E134BB12B1AE0B254335EE3B769014EB777D0082639
D8BF382442C8D9EEBC2008C546E9A01A591E915436137CB6ECF1105ED0991D51
588494AB3108D3BCF31F9E043EED65F87AA485261A2C5D23445C634C43441311
4BB2B06A38C6927DCFDF35583250DA5C7B1BFAFBFB3942FE3B526557259F2BCB
211639B11F8C1C9F478F51398DB1EF607D12F488C9D8476DE8E214BDB1319295
E78B61B2EAEFC011D68F7F1C0AC30CF008451DB0EA2EC41D22571AF7D17CC180
39645643E15D177D87188FE352025E20A58FB6F41EF45E7241D4FAC179898DE5
4B5F2B9FAAE4C4C1EF743275DB9332BDCFCC2FFAB6CE45BCF8EFBC2729A4BF64
485B76AA4F2768C2988B90A5265E122AB065C22E9A397D51E20C0A9400547CBA
23513DEFB31D399CCC1D555503833FCD25C61D9D138D2FE5E102EB9499F09C5D
5263E1096C8BDD5DCC992478D62CF4712371A6C4C33D45DB703DCA9A594AB5B2
5348F05AB3D3DA1EDF3152C317438AC76DBDA7945426E17D701601D1A1F6EC84
3781309A83CA4DEB9ABD0BDCDEDD85B3B4FDFFC81475AFA86971A02588E52910
8C25F0B0912E20BF09446BB1FC8EDA81788D8F1B954211AF0A0A6587B52BDA26
1CF108F4EE321C3B02C1E625BA9567C79542D8F78182BFCC8481E1E12D2D9D24
AD98EED540AF801B48FB7E132E9E698F4A0B1D7593F7598C3D8E2131C00B2EAE
7BF294246C8C0E32B96BE69BF5E995CDB72E88BCD7E3E4AC04335E39A6FD5A64
D6903C94021083A3F5EEE267243EFD320E1C74C825AFE8B3472C8214205AA0FF
DE654522B62AF9D4759E5B655B9C2186EBDA36BA6D7D5F962A905384ABEAE244
9F0DAD80933CB4FB537768ACFD7A415BDDAC01F4B64E5F3F99305BD578C2E0CA
61D0D91EF4EF34A278BAAC6E01E19C42D3B3F410B283E03EA02F399D15C5FCDD
1864A29234CDB59A512E9CF8CA1ED2323525054A3840BFADE2A241E74D4D12BE
524B1F28FD25F9ECD788883813DD0489ED33256B64C036B653DC44FAEA2BAC44
ED6AA63FDB68BD776EEE1CC5C43A335DABAAE14B8C4057F77B35234AC8C98E9F
58581A54243D48C850B284C2774A85920122B34F0F190BCCC2BA3F76E486210D
35A54F7B27CCEF36850A805CDEFD7CF4573CB2164AA3649D19505D46D5AAB8C7
09B9D9B7C9F5BEDE27AF86BDF36C49AE91A49D3F4584DEDEECFCD5E0AA7DA7B7
FA37D36D7C8A184C8CE0489527A3B41AAE02268466EA32B0D9F277CE7A7AEC22
8C04F2B0B0447A57AE5B8BC439BABD7CC5D1DF71C76E7C887FBD082F59B6F665
4C38E2AB1316DA2070280AFE28DF4E72E87DF2869D10090961FB7FFB8345F0E8
2E09E0325504F5D40D5B45E9F3520CDFF688D9D10EFA234A2AB301C4F2DDF20B
B1BC364AEF7C9361C7FE5916DB028AC2C20F07DB6484323289936A5DFA050D05
110A522A89EC7B2E20FFF22D5E1050D7133F01A94B4F28882C74557B6E807E3D
3BCD2A30D22978364840E2B9BF71F89E3E65829E52CF16386DDDC090DA827BF8
D400A5B5B119C67AEDA1FE45117A0C419EA8D3BB4E949EB08626A6CD831A87E0
87CD75D04A497C8809CB1A0399740A44722CBC72EED4F18AAA61928BB0429D33
D4D3A30E348EA60512975B1078BF52FCC4A173FFB20B4AE446388E7AE123CD71
EEDF6488DB214B643A36A44518EC8C218F8C86A177EFB6E87CFD78B62A14BC18
A3DC495614FAA438118D0C66787A53011131EF29BCF55D7EFE6D72B9D4452D2D
217D8812279F4E449942B29A2DFC22C5DBF5985AA829A26F7424DC74906F3A0E
DA80098DCB9D920306CD3C8BE90C7547267FFD6AD454D683577A6E2C5EE145AB
39906AC36223A3B17B1CB1A4D76D54CAFCD8562ACCDD70F9F3355F7442690BC8
2FA4698EEDBD94147F07C2E313894CCB0E5026D8055561C7F729EF8F433A1C71
86F5BA22D0A7B44E4FD4FB37D66BFD1A04D7BCAE9397951D6C4AD51952A414F0
BE73E8B4CEB4FBF4971BCDEE77EC6F4C1708FC9D021C8B4E7F28A15F914C5CF5
3A7A6710F8229F797E793D372BACEFB764EC0DCD58D09A4CD4AF0290BBB946BE
47EB515F73F86721AB4448F4FF020607F2CA8327E079A196E220B3299A0E2267
B983327319A296CF25CF5F142BD114E11DEA0A3EAEB4C63B59CD91F804C71BBA
489B78A8214ABCFA52BB499070A16100DFFC2B0B00E96E8010629B2927CB634D
8427F84025A2A96D3094C5DB4D8D7B9DC5BF98B15B3AD83CA1303AFF7FC029C2
9E6D3CB5C12B40DD1B385F859FA935BE5213F167FF75E5D242452F85A81261E2
0E3C8D1682CCD818B276D7DF579BE5F1B343289F3F8B32AD2379DFA94A648B39
4F00AEE4A557F0A67B51E17F118E7942C3B7B7EE581930A3C319551BD26F4ECF
A106271029E3285854498F71885FAD881E25360F35D8962DD372299648054E90
2BF778A5580EAE1848F7ED3E6510BD4C51A2079B1EEE771FCB124D4D72FCC159
AB07D5B742191AE474DCB6F52F210A301D92C4D8EE592CB622D371FE2A815D21
2539DF21265D74D08957950A1914161379CEEB46906D08F09DFAD14AD1E2E7A9
47AC482EA9F8B893051BEED6627FAA68EBE49A2C5E5B9926B61AE18385088E2A
471442280231C3587E384C3075E6E8F21FD079DA3728341F99FF1EE62ACC3C66
08B4D75FD5EB0C930A4848457A42151D42420673401070819D896633594DCBBD
5A6B19E2284DF12884CD5596FCF1944F586C65DF108BD1C17B387DD72E243D7F
28ED966775335C75C6492BA5A2E68AF0E6340BB0502B32FECE6B2CB1628A417F
45C5A92E5B052E591715B52AF04530708DD1EA453EA99622FFD1841E0EA74A90
387AB002706A2E73C03C44EC877FCB22303F0275C56C0C8BBDE3DDB300902ADB
606B249D0E86FD9133D41A1D77A8773ED6AB71D66B141DE09A8B647EA9874EB9
35FE9C89FC527BB895173103DA1769046740E850451C550EE77C2A55C866EB0D
BCA9F65F310BA2629FB588D148CEF6189F14118075EE2FCC25D28E26476DD71A
C8E116AA0593AD1811F2A53264B6C6ACFE88539CB20F05FDBDCE7DF4DEF2E307
C7A31F5CB6891963FD0D0A1A3355B80BAD84A8A723BCFE94F930ADDB3E5AB0DD
3AD14834575702695D3713B9C79E58D079348A928BEBBFD243DC0167B40150C3
306892C8288790965C2C34C427A53EBF53D8D28012E8AC2AEBF18891E3DD790E
EE57056F3745582FCB7D06EBD40789A81629B39B9E4DD91B1BC769557A433527
E47DAFDF438B0EEDE11F9E31F998DFA54676F40665BEA7F34D5CB91AE7D909E0
54074ED8DCE6AD145F61A7C3436068CC051BAFED6B3F5947785C3CA85D11D302
2EEEE06A2EC370ED603DCAAF57607985AE20DA8403CFC4E498F9D9FD72270D13
88726956C8DCCC3FBC8FA672DE485A14B25A565953C6F3624166B2C89D2D4538
B44F0CD6F1B0AEC7A890318C5C96074824C88B8BD87722FF1501C6E70FBE0F84
3ACF2F88AE8380D010C3C09C6D6EC36FB07ECD2FF14B2ADFA191B9057A2B5D40
7C42C7E3D0D4178AA99C64772693194C8A05ED92BE9564E07F3C26C649D68754
ACA02092C04A703552819EBA93F7CA449BDD2C3D1967A51D8D3CF4E4B2584D65
0E7DC73C4336A4FCC1D9582B0B62EE7BFA87F4E883D7B6ED665FABEA8031C7BF
4A21BB6D86C4ED692D66EA9058884A41110319160AEB8C7073B306A5523C20BA
81BD5CC6F8DF9C72D199D6BFDD8549C0E778FE806624C9D5BB9EA56E7C000C57
FCD9F423FA74B25E481C017AEB2A50CA8985D069D42C01CE2668970A934BBF54
81220BD8C2A88DA73B595F93B946BEE679F35AD6979172F4D4B86CA671977AF9
BBFC342C65735D3C05A4F3ED9B9341875D120DF5D53A4E72AFFB1FF10D55C068
7421CCAABA7F5C0634E8CD7DAFFB72DF4CC3A9AFABBAD2ADB7E709E6D4ECE0D1
2F154DC1C18B7C11960ECC1F35F6E2536D7117185EB96C8AEC4ED972C2CECAF6
BE176838383908A1D1E46F93F5786F749350AB509CE129AC2F70FCEDDBB6D083
6C6BC8D1601CB5506B342FD2E58102686F960986C2D1EA7E5D2D4C24CB892E61
16DBF10F246BDA9CA9C5DDFA6ADC2548484B20AB18D6577A07C019441AE2AA68
4E8B74A8A6441FD136BFA02395D1E6491BF877577496C34987FB34B0701A46EA
4B37D0878B0AE4243DC235D3C8FE68FF06A2D5079CE2C8BCFF932C9C0202AFA3
5C39A12B3E198EFA9A33E48E8376F83913FE7E7F54B60BDC0639EFCB2B792D33
522D4E31AA2A7257A6A6541615681B5803EF7BF4EE271EEDB2A668B45A074A4A
EC88C6891CDB7043EB6837F7F1A5998716D195333363C722CE51886BD9318D5F
ACA3289550075641D005D2263600BEF71E194FC8D7113B9ABC7E5ED29A0A474D
7515A2730EB2BF05517C255A406CE602628B20866BFB991FD2B49134EDBF554C
45A842F305B61593BD30F2262030D4D89D717F1970DDFCA57BA4D2CEDE0A840D
AFD05C7D0BEA0857E563FB5F8908091043C4B3EECC5DBED84DDCAB407020E4D8
1D0708AB1C92A7EBC2D9F342569B770838F4A248228A8CFE2A776DD3565DDAE0
FC3E02C1EB5C3F137DD843B198E47512D187BDCC823CE7DA35C4425E41A5D2E8
3F97E9F39D3564F1BA2D1CFF102F260B1E9E05BDBA630EBB2878B485AB271D68
C5D0EDC10A14B62DBAA2342E75E59640D94CDF2F5D224DB0E00AED12A695C449
7213750319498EC6423699E1B5218B49C0C89E48FE87119277EE2D3EED476777
9A534D4F9ADF157093419C9DD8BAC4E3DB5C65017F77309F0E9A2A740ACE2FD4
6D64AD36DC9037690695B279E069E356ED000628CA412C455F2AE78CE156632B
20E8603BE3FD8C87632E7C53E69A3B29FB77CDC7E6C3C0D6E43304850038C350
B6F01941AA9E1E2621E28F0527ABD5329D915DC59DE9EA69CB17B28E85AFF272
994A122ABCC222F6DE2147770D18630EAFDC50D959C13DCFE5CCD3E1DEE7E32C
901F47C4598CE8AB6F94AB53AD23625E8F5B9FDD6C60DDE0C1D812B7BC3A3AA9
BD9B353A8058D927E94CFC3398F39830420240E4E5916E6E0FE5952FD3AEF878
CF172563AB6C577E64D4449B0C448826C7ADBBE3EE4FC00B151A7BFCB477B174
9709D25AF3F667DFDAF020CEE71AEDB87C115A9260ED9CEBDA81C510CC2738C5
15032A704E6C3E6E000D72AD97195E6921067F4DB096BB1748D7503791FA6576
6A9D8FA43BF32AC6FD082B29A74A21C155937C70C82A82BBF7C396BCE8FC2B1C
D5E2A2B417BA7C11ECD064F820DF028EBE04E7BD75A8D257324577272DC55359
C07E68FF9A4592733E0A489F68762BA67782EA8697C05A78FE9E032A1F6A7F51
ECAF26B575E23D6BD799F8374BAE45BD72051C09CE440F23F85D79DF5EA85E10
C5F5080D9252A901B5903D952C7D88C788B28203EC042332AA5D2643B8C235F3
FEE5A9D227847709F92CCF917DEDD06AEC7DA9B68EA5535491F1A6C6E2393CEB
503ECE2A35045B95B06CA39A0B0E8D89483F67718C074CC61D854C9E70B0D3BD
24EC063CDE72C81E11D3B26E5B02ABBFC322B1B14EFD9B5C2DFE3417F86EEE4E
E72180B3D56D036768E54EC4D08EE00F8197F704DF8B82768644A390515E3FB4
F322D1FAAF6D697D01C5D90CA859A6CC1BAC84079C6C41A0879CE6540C27D983
FD7FDD93EBEA83C69C50715D7B5A1E6C583DEC630DC9607667B10E3E4C158E5C
DC40106199B8AE6239CC4F32ADB61F973981365730A252D397DB2EB8BA3BD9D8
176330596FD7A8FCD86B659000994E4B1FA11E1D0F24AAAB941F39B47200E233
EA9AFE8E6E924E4D039D4D4CBEF68E7A7D4FAAC8D8FB119507AA7E3204043168
4978586F86E4B5A6CF870B2AEA3FEE1AA155BD9BEE7CDEF8C8F6F5857BF6204E
3EAD98ADD4B424387FECBB1D78D93AFF3FD6F957AA6E82890251AC45F5BDD572
52B6059030ECE9A258E2A9BB244596750BE134A9DA8CBF71DE31C7054CB29AF0
C783E0037C18A29136E19D0CF1C54822AD836F93FA1544821B7A87E017C14004
F452E667B7F08D883564F8B14C1478519E4273FB8B1B9AE7985F40BF6E2B2853
DD180E6C69D6E7578C539DE9F8249D5902E5FE51D68692326E81DF7E76A09474
7DFA9B5FD4B26EE1F7C9441AEF0C4ED4AE5FB33BCC57C2C8A626C0B5AEEA1F74
4C3C9C27EEB8C0C3D813E33314E6A0359464A7083E6CA443718E675BBB8810CA
80131673B181F8AF69D016836B27A9DDC56A17D1182EA3426FAA397725DC527C
4D518AB6C5FDBFF655A8B0DFBCB283E0B559AD3993344C566B75719762FBBCB2
F8048BDF5BACCEF671F9B5AD4A415AF52A0A6A0611B677A6446922BCED49E0FC
2FA4146D3F7B814778BA94861FA22CB8435EA35A663317D3442C8260F7857D72
B0111A6F9D06A5492189D2806AC9B833E4F3C35FE6116616840291960F5787A1
D37A47CA75B34355A254701DAB67709E85F831D949965F1804A8BB9514546E3B
8F4620BF5B5668F9C1B8E8D1784D5DA776AB1E9C39533AE5BC317168D0B62F6D
FB5B355C7347308F1936027631B94E2548253544DA71A4893AD9ACE74E7C83D6
D868BA2AA26EB48E2A7A1C1DA0BBF1C1ACF0C04E772864FE1BB300DFF57D6D37
EC3BB858D6B7CB52804F1D74F37A8F417322CB1B8BEAB86345461D99F3F31AB0
52BC85869B19361B34ACE13ACC9F7CA71BED471675FB2CD25A925FA63D942A8B
9498670FD30A2042CE10BAE0F0E21970D9C3A3D8B8E01056C45DC9D9DFEA85CF
663409D4340D8B09782B0FFD761D45E10B2BA761F9418E15C9CFE83A9E06AA21
0BDE84F0B57C8093FA5B5DC57CE22CF965461796734232593BAFA78983F4162C
E1E86A0A14B789E59E41CA8C4116B42E7F44D18A84C4D5B5389B44225FC248D5
81C2534CCAE1779F3796B61C186577999814C9EBAD436A6FD39926743119B830
F8DFFFF5B5786F6B07E4DE4830B2D0E44109697FC203879FC5A3A66A616B8CE0
BE7686FA5C0FC16C21284488B3EC437B4100B5254CBFE97C80F2C6232F4A036A
0110FC7A904EAF7A45BEBACA59B26C511273E61AD34768CBD885EC5127BD33AD
DCBB504AE14043E722B6CB64AE6EA03AF79AE5149B7D53ABEB964A4D5BD69ECD
243C2A769634949E4A0241A812BD889B66B43D21BA6A6372324D58A065692D4F
924DA404B8B27BAC936205A365DB7C8270C9F5BCC61BE14D3EF0C12577CEDB59
C2E5C2630D8AD193517FC99702F73780C20E08B2D54D7437F0F122BE60148BEF
0EB9170878EB65D2E0FBEE25ADBC17BE4488D8B964EFC6AE2309A71C21113F61
C2D1023AB24B746F1B091A2580752DF0D4637A8947681A29EA5A366C9F4E5EC3
7509090E8BE94F0AEF158ECD9A852DCE78FCAFA8446128DB684195E36B1C85D8
B5D3E285A83509C736CBA67C06B388451123FC051B37148169350F5FDDAE17A6
536F522123C318A741E5BB6B771DABE1384E063726DFDAAA335E1DDD265623DD
9A5BA68BCECD6AC8C3F9F7EB56D0797486CC7E8923ACC5121BD3AD376C37AAD0
22B2A571D16B491741B59DA4034A24C7B96B0D8F65C51678FDFC281E62093578
F27130D55F4F7F009CD177B53322C6145CEF5D688D5B1958DB0AD9FF6F060FE0
935E428F5EAE64F04D21B72AFC0A1973C7A3CB8EEC4112A09961F8D6557FEA49
2A2D3B853DE0F1AB5F0BA35382BACD462A3004E3969A2D6D5EA18D3C2DED0A0A
9FE72B45522C2C4B88B49537BDFCCD8048AB22A2AA2D4D72DBFC09554BC096EB
3D15161E475D2CEB1B95EFE9B2CBFCD9AD53FAAD2EF955C8C396E5B0C6014CFE
69EFD9E2A0520D9BCADD0FB158242B757B0AD6686800E1B7FA9725FCD2FFA3B6
0A86E2C15AB0031FB929ADE1E34D7483F91346FEA5484217B6A7C6B520EA0A91
59D58A9E504B3FC81C71DB26F28D98F337BD7E443967479883BB685BE59C8BCE
CF28CC322EC271ACFC566E9735F42902DC4E1A618EB110B958D02C4D36474A22
BDE9C416D0A9BAE94FF63417407C0AB45D3BA7E8298C59789760F35305D794AF
175E0501E41848783FCE6806B7EE535F9C0F0A96FD0F231C230FC9A491310A05
A2533473F64489756F5B312F6384386570B9FD35E880833327E7FA508A64852C
F453F51B1D9AD7730BA929DBD49F490ECF0CC6EBA211CD8817606F9400940CD1
B89CA212CC1B695B47A12B32D9FD1BEA33B6A4F3F5D3E6872481E64C57ADD622
83C482AF52146E258B58B727EB5B6CE04F846FC8A3813D954D9D3AE74FBD32D0
957E447E435E662E97A86CAE3409616B8E71239EE59572B6355B25FAA469EE4B
D6FB47703747A54EA1315F7C0CD3DFD678A686CF60EBF5E8561E6554C2A97611
C83788183CAB169929F956E37C772E9BE05A67A7E0BD43132E9E0FD993E80E01
35C11368463944032D3B58DEF1F7B542FAD0B798AB93675894C1484C55EA5C87
F80612A191FFA2C9BF8A1887549E06644A59A2C14EFDD36B340F17CC430EBEC9
C6DC119F6ADD81813D26C2320E301F2B0F49F3FE63F8FF6BBDA309EE77EA8125
E3F23C2B7505EBCE7D72EE3F32166D7179C51711042D2E47204F08F4070DC315
0C71BBBE57F0E8F117431E75EC7EFDD8489E799DFD076B39D77EAAD035B795BB
1606E54CF6E25AB4172C31E227CFAC7C6AFD94193DC1E65D2C02D757E2C075F1
C63DC233A9ABE2820C1987AB2D13A00167C908694943A02BAF6624C79A188A36
AC0A4F7B16C934F6806EAC365F7B3003408A507B0186DE870235A11C3E0CAA62
0DC2999A2097333BAEA2F56323F5C50CC5D424FFC9A808682304AFC9468C6770
14EE56DE990752728B4CC320E9CDD7284D060F41EAABF575A5B74C898ECED486
4B5CAB36EFA9245D8B1A03FE7CAEF171F82B32CE5569DB78FB0EED9956B3E32E
B6FFBEDFC2AEEF7AE2EDDFBC88CE2BC4A72408EB2D94467A2F0864B67443B790
556FC73CB47F3B8BDAF0C2A1F5FC36A70E93B0C9460FB2BA51E5341667F18CC3
7B942A0D292B0DAACFB32AB866DF61C28AF96FFC5B81DDA75171D62460CF8BC6
EAB641E8BB513DD1E1D8F53333233C2D085B63C6624592097E1CA63BA046A91B
6020D900B5EAD1DC79274000DE0C5B4CF925CB82BE0C426DD2B581AE29B2544A
546B98B088B467B5D0A193949B4B5AD6240D9476DB1A9C4DE06ADDEBCBE856FD
7BEB8266B5EBC174C5BD76291C21BD2CB80BC5233240F5A5A24A8516E5E9906F
96BBC0B040A5194230C7BB57B83C6FCE396C8604A9DEEA8CE0A2E843804664A4
DEF366D3CD97F00CAC994B874E77DC18C47F8804DD1416607A9904B2CC185334
4C6852F71C40C177DE32C9C477BC6DFD61A8A3C31D99C15FB8B97B345D76A9D2
722A58830E87E11C0CEF7D972CAD8DF7E88AD2E99A6CB057D5200CDCC81604B6
C30D3D060D90175054F9A47F9DAF4DDAA5EF2DC609CDC593568EC7D1906D20CC
0283D4812F7156FAE6AA0888C52FADA388A4CBCC3C8152BEDE7A19D93781E91C
DB35EBF6A5E52025F791D1FA47D487B2D13EF65EDEBCDC47B9854AE42FA9F801
7E9A300155D108AAC2AE5FBE19E3201DCE493DC43ABFDDB838F9387E4BBE4069
E198E1F5316BAB5CC4519B60EA0179AD2F15FCBC6ECCEB09B59868C8DF9EBBD6
5B4EA3164E12C282C4A91A97A3D38AFB9BF4AB584793D415F4DA38A75DDEE557
0E3B34619BD76D9C60352C65D0608353625CFFB1FAD51278FC0D63D082283FF7
2965E3D5D309230C367AE60100789B392158B6C61F067135CD437A0E9353D575
16E2F22883B9FC094B72A982D955860FDBAC390797842D2B5A0AC603272AAF84
9B8314C22137ADDE273B4E55EC7FE4D7495807730AFFD6F2D04D68F842881B57
050AB444A7607D7E3580CAAB35A1C946158415A6FCE9C5F0A40FF5580124B790
AA9AF27C097E505BB2477EB5BC064FA2683DC588F55A233FE0EC0FCEF9D4E08B
54E9E93741DC69CF428BF670A79BC652B4370BE31A9F90AAE9D1F24131EA28DA
D16556F37B6299E7EB966210A92A79CCDD45A3F06881DBB3F7C755E758AFFED9
2DDDFE2BEBD7FCD704AE26CE4C6E03A54200323C2D13D426951D2F094FB04A24
4C2B4754731854C10B2CB83B25E332283E03C38D434FD8BC37694309A17ABB3D
F970A78D5727B1ECEE51CDBD94CE99AFB242BCC451498D1FC9A568B87A567E5C
0741873F59D9DA5CDEC64A9BEB1EEAE539A2C4AEDF7521402C87A923CC98D1A5
909EC1304E731C79A54E91D4BEA6B1B4589D0A4C82581429B84B8DBAA07EDBA8
D4B6DD4BB6BD8091D39F09D0097FD96C7141456E411D42455F5CCBC3FBE0A3A8
D509F0C4173931AF8D9D20FB27182017D79F84DF81E68DFD7A99FF8A7B38ABCA
D3829CBBDB29D45511DE810AAB631276E6A3DFD08B83F2CA7742E9BFC3F80ADA
200AE565AE62CA522EDE560D48772DE3BD80BE9AEE9D238D9C928CB950EFCD06
2A84C2D69F369F40D60533A2454A31FC0B300B870BC54B3D823B3A8878E582D5
CFC274C3F7524E21C012718C3493240A2ADFEBB8D5311680B5C3D336BAF2F3C4
390068CCAC771A4C3576DA05F21E912D08A78C7D9F1BA809717807E16DD35CB5
FFA74DD5CB92EA8EE5BE8675CA06273AC72E3449C0FCEE17A3FEC7C1BA0D1075
A61B318678257A08C67F73D1BFEF6E20A841CEC90457A254B2A002365BB8DBB7
D80AE141D9BDA4B74E5B7D7CE5BC496B64F7A59BB5292A6FA4A855DB93B56262
ADFA6B0F4A894EFEE9AE9A161EC99FB8428F7A7A00FA582559665002249FCF35
AF7DB04CDA872CA07B3CCC58FA56F3D5FBC6B74AF9B63C8F91C7CADEF449A0C5
05DAD765CA4DC375C74C48C52871D5E1FF59AB8A12CB1CED91381C9A1960E37F
7960A35CF58B0023B9A409CEE3BA162885F2A34F88A111CFE1A38529E5D03276
DF19CEE9D75262E7D82E31493189A6E4546F35CEBFB0910FF7FA2178EF8B1D13
C0B10C3745183807B4909566EDFC9AD27B0FD21C06F5EE6DE8D4889711AE4E70
B72014962809F5BAA7B9C39BD779159A95EB77D4D4E136E96E55EDCC03A3A316
1BC71B681F755609423BC291988322E34A31BD52BF524CA1FF75475E47942343
6D4BB76D7B316BF4C6C428ECAB40EA13E7D59C5235D6D4D3EE57CE505DDBE074
CBF20124B1871F290B04DFDF36BBEE779A60F1C8B34EFB81D9FA9E1A42300887
944C6BD75FEA9C7165261B6195E3BFC0F193984DCF8A11292B1EACC97E444F26
CF9E1395C3EACED2F66DE8FA1584DC242624D4280C35537E7801986F80A2093B
0F16DA210D61712AC9314700FC1949CF4C07E6CE35D0BDFF0D49119F2BECC52C
EF0444A46A36688F15FB24A04EFADFDB997E8A89705295409D92AF2F19122F77
496CFD0E3C6518C6F7830A99EFB37EED50C52061677F90BB0594C6CA6B5D7799
D9879A523CDBEDF2163E80DDD93B42257A30B68619A35C8374671654CC33998B
8A2B8C698F03FB583C0FD3EF1850681E84442A7714A1A1BF7C8C99044C7DF2FA
A43E2D77B88A93C27236DB5AE6F3A6452F148F92284CA02FCA61903F0AF85A51
7E3D947621EB6A03F535DBC5239DC1F9A81BE4127C5EF97DF66CF0A025136A7C
3B468ACF47BE376CFD75345A30A04A24453B305A655F37779035A790D159E3F7
E09974DC7864A8A196BF7B4219ECA8F1463A2AAB56985C132060782C8A8F1272
B486C4E561BFBBDF9DA80DD8ADDA4C39B8560FD6F4FE07D1D379108ECBE7F41D
2C6AF5A5A7AA1079DB64329BB63F6A25C3D5552FD061AB6D9C2E815AE3A9A5CB
9F48054B2B8BFF0AB6EE8E422A222A049EC2B48E17B55D37DC36B55EC30A4D00
12097DC8FDF9AB74F681C6AA020288D9B9AD339845F3A51CD061375705180C9B
D5A27A42D50994FDA4087B9F19827444FBF0EE3771AD484342A8968A29730B5E
394C09E59AE1CE8425226165C942A1A1A59E1CB0ECE30582BE76BB136C974C1B
6627930BF51326A25CA0F1455EA3D506C1D3ED8C58BF3828A6DAB76C265E0991
619E22671C94AF72AC8FABCEB85F3542916C353E05E3A430E6D24628D75E99C7
BCA3004E0FB02A1E9E02A6D1DC5DE687D9FE299D4BCB22E51ACD0621812E0931
5F29708553DBF4B46D483BEF944D61E8F0E199A1B1251E8B1FDE7CEDC251DC6C
B4733A661C5487FB6385C672483FD902D25308290B3242861F37E0BC95E11C09
034ED667F45276FFD47BBE28A479071BDF525775905F92AEAE4159B99800EDE8
507B05FED23B34CF61FC90D265805057B87D4049421BB1298812EAD395FF5169
E916AA66C8903DD9144694127733931C27C4F9300B6CDF0E353F731525BF0432
3C8C98B8BD611EF572906F958959B3151D3E8913E4DF2D61E132543723310A34
BC0D66401FD0BDDAE437C60734BFE620714A4425929946EE213E8D7EA72469D7
8F7CFFA5EB8D38A5ED3F930C32EF916D99384C90844A1F3C95ADFD41952CE667
68357F8149C3D7B9A1A71C04EB847F8DAFE0288D133EB8E634417A7A75633ACB
71798150B6769B9595D07EBD3469610A5CFE23FB10F5D81B73326F0FF7F01481
46BFB0C61C324F2ECBF73570CB2D330DBB545008B1F7C4FDCEB9605640394793
EF8D120639976B845FA1F4839CA655C80DE44B3D46CAA45C5E0437CD4947F182
B524BDB9396DE3C9B587F1A4D8B529CFF87DF04844869C672AC20495445C1493
E1A32E2BF8A633840A1EB923E9F7542A6E5D9C698525E7C1AB505445EEDD0A71
729173799FD9DC2F9A0F37886BE6A558EDEF0EF5C41D865545672B86DD3588C2
A8F59955E62B21AB9CD6D3C8BF56DB8175266296038F374A4825FDE52D2FCC0C
CFB58D47DF6E61F6DFE3E88E25D9E3191B3F9B6E55266F0A5DA4180D14A31CB9
AE94ECF555D9B69663E31E5BCF0CE0E1DBBC046980AB94A4EC266C2F0357D8FB
E408EBF92BA2187CAC57AECFF0A3E7669A6C090F458A764BB403F1C29603E33C
9739AE22531EB30A2BDE096AC70AD0C141A1FC4EABBC706A73A44201A2963EC1
CCA90CE7890C4EF096A4306BC311D74198032741D67438AF4E57239E7DFDFAF0
3E12FEDFA37E900B309D3228410962BB02BAD3248A57C4CC8AC5D73552926875
420860C124673E80BFDC66FA40E896E6D7A246BE6D787D4039429C589AFDF64D
94DED7D974F57BA84C3283DEBBF57FF16EB33C2B1C8681FA2FE9FEA6E0C85FF6
B779E41566CDFF55283021FA091F0E69DF01494E682DF5E879D42C0ADDB3274C
644E5A52DB1B975C9BA79640B4D21E77A2A467935554C99884990360F7F6B69B
D04EBB5BE9AAE0D980549D9D10EC31828F34BAE278414866284EDC973F56F654
462D09D861FF9A2193A375ECC44FCE3B0AD18F29F24EDBE4CF97B707A4CEE8E4
15887757E3A29244E32B20AF5F24952EDE78EBB438133843E1113E94C2D2EF4A
D37679B2790AAD9E4B64E1A63A680977C9CA764FE0BD9435C6EC9B50FBF2BFC7
95BFDA57ED2DC7A693D70FABE9FAAC3BF99B3F0B68703FBC3AFA27E3E751F3A5
94FE1D782806F96922CE353B84A7756F699615D347F45D394A791079E5C2B9D7
83DD712E97B54E9BF5FAAB2D09A273C646CE27A0E1C5010CD9427755BEF418D0
5B643D83D3F80922732197CD62268879B175E9E509EEC643908B0A6D1EEECFE2
09273D6036300EEE1E5F72BF1F4532DA5F05E482A3D0A70006FC06011ABCE054
358D4690A28561419C8AB8D4179427A6215EF9C1632B16F756FE0822843DCA54
80319F02C5D05B37EF952996824D518934354A2AF028DD2761AD83EDE0811C81
E13B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB2578337771A93B1617F5419CBF89D2FCCF53FF8496A
2F09540CD2E6BACA74151E5CB66BCC1F03B3C9BA42AF2F157AF42FDB1930D18B
1F2033DF50F61ECB986B1525001E64CFD5D0474EA22D69564FD4E82BFB949356
37F6D5E4612D2E019908A2BD371AE4DA568C7C21E83D0FA04C337BD72876E7BB
C0B5D32A5CDF70F0F3DB72F6C89262B31EBE459BCEED8D80A2C7B3B71C87296C
2F199B482B8EB8CC030F72CD01FC6002116930281482E05C9EC0288EF5BAE22D
3660A6668B44B636727D1556D2724B109961E3D1E6C9E9BB62E0EC1D4BA23F17
429739E5204DDD6F3712026FAC9B40B592E8B482081C4C2E462E0C570624BC2C
E7871FD9CDE68B8A0AFD45C7F5C596161F7B921BED16DFA6E584333C38C76240
DEAF34C1C1A3BAC53475B595D21CB37C99462C333DA14A6E47CB5CD00EBC7607
EC75EC3DD97B543314EBA01F6298242DDCFB5BA1F2CFA784EB19907E23E34786
9452091EFA188BDBED24B33D2C3EE3DB6B5FF22F1D18282391E9CAD49E9631B6
CBDAEF1A53B1295DDA586F99168BA671B0FDF9B94F0D3C205CEB32AFD7EC8B67
E6C73F49AA4048628260A88581F21DB4FC13EA4507F3903E1FDAFA7FF188C5C4
55A6398D7F3FB00EE330BB8605E18466C60CD8679CF2B600CD78093637901C93
56CDD3C93C1655AAB1FBCD29DF30BECD3BE0E687C03A2DD1CE4DFC913657FC9B
2871CA2F9FA4B8DAE1C38E02889999CF6AA1A17D9588DA60A80125F7D7C6D44B
93E60F2B1E6293D771DC3FEE7BDCC0A431CD7BD111B6B1A601C11EE59C4A77E2
BCC6D804A00AC0581C08640C77A1A62B40C60B13642E12265FF9BAE6D788B827
35C92505D4E5771BB789FF827C9E1E3501BF90F00AC0C43C8DB2CD1663AADC4A
6EB84AE87094F6906FB3F4B3DA84FA98DAA11AB822DFACE554A1BE9C8AA18995
3BF1A2C1CFF614723A80DE6C041B932307B957C55BCDDBE2D07055C45F515E5B
0152F3EAC944D970B22DD762BC15EDEA4AC46A3B124549D4D2988B64327B9BA6
9328B79DF267A46265AB1349B43F76E486132D4CAE5310B256F7A838B6547314
8441C374C2E9FA51041E99019ADC3D52BF3636ED201011C48CE48EBB53928008
53650B14414FAC37B3A34E2C1CA5A4367C59D0239F0F3E3DBD5820C99145AA4C
D398E8FBE9127BDA8CCB9C0E8DBD6E533D154F91B19A68DC6FC74B95B717A5FB
0375B8BF78326613097E8C3E049AE16F7D0560BB4CB1406BBFF2B1DB79FDA940
7779E5F1226CCB5129BBAC6DF9A9B0B92DA606264741A633FC8E95BDC869ACED
530EBFE82BEBCFE64DC0C06E66E0DD16801EC290AB5A1A976B852A16F2E6069A
4B374BAA39124EC3E26E18D21398BE71251FDC89B48E1A26592F2F19EDA4BF4E
119E30EB552F572771A4A225D90262DFB9F2A1D5D688A97BCD8909E60497274A
FB8FE87CB5FD773FC45D63D32493F4B5C06CC9282503EC4E5FBA2C4795D26AF0
00D40078848CD9B0790D8E833DCAFEDC59C847DA6595EDD1A68BA4E71332E95E
D68C264657478652D416A5EAD0CC0002900E8654E122789E5838624260CE99DB
D76E402797CF2A25C5A6A76662123D48126EC28B86F24C577C8D6486D4389A2F
54758ACF192DB3EFE5D98D0A9A0FEBBB8944053EBFF22F98B71048B8BCAFB1E8
4837C8DF4476D32E6D8DE725D533798181BB19927F2B1BFABC0964A2142A532E
CB19FF523038D977823C02104886F868EDACF57239AD483C233809F392156948
9CFD9323A72926E2A9FEF854CD620A208FBB70137EBB73C4EC4731AA4067CB0F
39A81F346CDA9DE42B465CE349797B6E7ACB7D3C7E8FB1B90656F584706F4B7B
12570AAD54201518E0EDA23940E249DEDCA4AC944CA2CABE64E4B9A72BA7F660
4FF7C03DB5227741DC08808F4B3E81FED05C0F165D34184E5B741E37ADD32459
D101E8FA7C0936BF1F37EF92F6BD7B6E7F528CD8DE0D64677CAEA045F7E3176A
F41C0E7F6AB97509F346E567FEE4D90AD6A13AD189B586A88A8B381FEF51F267
6A6A9A904B0DCEB70242A9A713A005746C4B0257E5CF5B7E826F513305200C2D
BD76C6A2507119E7B929856F457DD153896CC8064881C5EB194843F8C156628D
378DF6A08DAFA5A2BFBF051397CAC095FBF074392D4EBF23D34FDC16F7CAFAF6
ED7DE6AAE26AF1BD5E5772C9CCB0F46E31A8451634796CC48277263AFFA3D162
D5E80DA19A051BBE3D282FEEFFF3E9C313ABD7F917F8F4E4C61132A5F4EC997E
02BCC5B48E2BECBD0006D25B49DF3913DEB54B46BAB0F614889A270622DAB445
F2B55BD98FCB72001B9D0C724F976D630DC6F2532EC9AF54218EBF2D9DF1620C
80B4F0FF94DD8F13016A4DFBE5AA7D8A3A0A470A7B89B75656091DA3D7014E48
E4AAA1B283123A877B81EBEBEC33431C1EC5CCD80AF416C079AD2DC5A21D6235
5B0434645AD290F446B1ACCC064A7F5C668B4550CD80D23B99D098F7163E6740
D4216762145899D1F13CE4ADDF8FCD6E289C2B710498752E19BD0DE236652811
2F72051FCB9B24E3C1B352595ED32716EBBB56A720886E4FF6A9F8F6DD76A9C5
5F64CCC5D48CF495C1422C72B64493E504048EAC8F6969FA394235CAC02F77F2
CFD2CC7BA41FE2672D5A6EC1128842BCA8EDC0BA0C3CBF690D5A6D70EAEFF2DC
F0078A951563EEC302D5E1F82A5D77304F083AC6179548E8346C26BF40AA07A0
71D513F3D2A8CFA1276F91920769531DB9A8BE338503B9119979A8EE5E0528B3
671D50820CB8EE1183116E19A103C3DBACD21613127A4120EAF21AB8F22FDA8E
FDC9424E0FA65EC40C8FA0EE345992D92216AFE4760B0C7A7811DFF2F57C704C
472E65251B350630CBD27D95C4B6401ACB51B108F11708722437378139559654
B5B6A625C6A749C3666829BC9D9DAF825C4C1EDF35D2B3B7C856F14CF9522FFD
9458F3871F9F8CD1C3D6EF4602B3EDC0DCD19B1874E0119A774B9835DF080030
75C522598853720D35A16BC7E76C2FA5A4E53930BBDB54F89BA6630E74845861
9DAD4E9226853CC710141A10921765CD19CAB0FAD3B555B32E0FB01AB54EE1CE
32887BD4A04494319E7EA7F3238E6D9BB8E9664CFA5C84838452A6F184774675
4690D24870F1256E6DDD5283CF4C308C9E0CE1B189CEEA9332ED353FFC3E2F61
4A4A57FD12E9F3DEC934588B54A63AE9CC7B6087C9C1C52E192282EE69976EE6
BC4DFCD1F6F1052FCB5B935B478692084792AB8FAFB64C2C4C7EADD2B756454A
AD30E430DCA0C55320D75662C931A3DBE8DC1D6F81D389BFC649DD8941C0B5F7
CE616D94820D0C7BACD605974A0B3707E44BDAFE5A2C4F86F35D21E3098DFBFA
3294E9F0EC054FACCEE4E12B030AE0D5E7B3CB4F458C94BCA7DA8AC640FDB6EC
9675FCDEFF3F08E295E6B2B40C7843C599B68E22F17EE1CA8433C899EFCA5905
8620D20FA8420C869BAECF7B0F4A5ADA6AAC78B71DAEABB1C73350E34B9DD46D
5FE53578DE1E2409AB6C9FC24426441FC692E6A6DEECDE3EE487E2E4FE42BF0A
DACC405CC8B70A9AB2531C287FA48581CF7DF47C88CED0B40663BB2B883DCA9F
E0A023A3DFFDD38D8A182D99B956AF218EF183713ED50AB68A0B2295AC45F5AE
9D2D547E2ABD44989A42B2514C24CD74E04A36147CB94FA12C35B978E02A99CA
31BA75666C3C4ABB6F15BD9E256CD6920187A60A5D45A0357FA897B8373366E0
26A89F300C452591BD935683E85A26F3FCD9F2CCD28F4C45B6C8149D713D4CE9
712BD8D0DA3EAE1CDEBED2AD5A3ED9D600D1D31FC12AC94CB11585386E6EAFBA
E7B9C34FECC6E4FD664F28AF07B534BC385780B83704D373CEB3AF59E0515D01
18016496DC4C68D073F0FDDD8F2063EAF6464A78F4D01BEE1484E84C012FD6FE
52AEBA66664B26CE3BFD0D6BF0E2D85D38C5429EFF08414EE09111960F18ECF3
B1FDE84D13998B3D02B04C0EAE0F92D058A8F31A28669128CFC411927016100F
CD8CDA361DC3C7179C49BEF30CC9C88A2618DC94414E10CEE8039BB28B7943ED
BC547BEAC51A70E6342A8524130625B70FFA7AE5EDCE10DB82A08F3A3AB7EAF4
BF4E16211A12C8EAD300C82817982134990233270722B55CF31782D8BC41001A
3FBB43911B96C587E65FE2D318B5FA421EF16E0E077EB78941F2E169D2E94BE4
0B2B951CCD2E432FEBBBE3CF3AD01D7138DA8832CE7F64649BE0858FDC6EBB6D
2FF79017D11C9AA761C14FBBBCD1513D11FC06D303B135944875E8BC20A56D09
A1B5D3696116BABD5757BF10572ECF09F29DE9BCF2C24F9A9A16393D3EF2DF95
F3FFA77D8882723654C4992EA47CC17D5ACF610D35ACC354409D0DE2BA896BA4
BBEDA04CB1D0FA96F3F193E075FBFF39073855E2B0F9F7939B188D36B2C3073E
E3DB3D67A2D10F9214878C181A430825333C204382D9955F9061A59CA7AA6FFF
F20ABB53201A9FCF3F74FB64BC0DCEA70D0B3191166ED098D323432A488CD00B
196F6617BAE9C11350BEEDA285C9646219F10185FD5FD8B3D978C74BEDA6AF05
24C9362CB7614B2FEC80050FB9734E92DCF088C4C285909649CAEE60E4785899
C9A7E5040AC9A1348DC7B8AFF6C2299D87579E8A9A50C24441C2638C35DB5972
88100C4F824EEE7745B85F3948863916312E4F078CC220E3797A760A3DD64001
2D108ECD01222A5CEB4FE9ED4A8BE17370C4BAC45B804068FD02E22FA8FBA3F2
78B14D7218150D480A76AEEE7039B5B04BF7CFC2FC5813E05A4A8DA3C2C1E2FD
6AFD5FEBBBC8675CE577225E5E7999035B0FFE3EBAD70FD8C005289F6CAEF0FC
59B5002C2EE29071928549DA5367B5A9B8E0C471E64B88033E05B48D332D0BCC
D1045F30A29CFEA10DDE3F1FE2A9E3630D1A55372FE670A9597CB66F5CCF55DC
48A6A27845585ACE25A158AEE4BF03E66F3D875B33BE930DF3E73DCF39C65020
DDA0BE0C05C80DDA7E444AAB55E46F84B9D744247FC4EF82C04D17AC92E82182
172644D1A724A3310C3CE806424A9F151E01717014FC941CA9BC01483D8DE50B
A88E5F1C5CA9A28967C8ABBD40ABB0CC107A3B52EDEB70D4F7E864FF7320C2D7
50718D8B1225247062B3716E0D02C68407637EAF0FD8F7382B53F8D3262E9B96
53602628FA113FD3705D73BDFD4B051D830DEEE4AD8FC2CBB20435DF284EA3DB
C126999AF47447E6CC9071F4F96C3CAD58CDD9E38160EE1D64CD73965546DCE8
DE3B2E3D4138012F63495145FDAC57C03F5C52A4EDFA25F24D7A1426934B42FC
6462AD9CA923E6851329A38E96B19070C0AE691510FB0572AD06D6EF7B3C9658
6FA88B76E64C86655EB950D131C7F302A2F9C9E94ABF52DD99FBCE6F63A8A084
1103123F6B206E4A979C9357FA3D1B6E24DBC6B634B92B3ADD040C111FC5B27C
AEB1C171E41DA78266B1323471237C29C338610183673447CA06489933A6C611
B5C1EED745ECAA9D264092B31A01B8620C0817E655DC385B2E2E3B1982F655B1
0A77DD95E309EA5523CECEB52C86E366561D4FD8CFD7A6358400DBBF9497E345
3AC21512E0C9D1AB2DCE37930CF864EE4736EDE4ECF1BAE72C82CA3579BB6074
04EAB21E06A5A8CB75CC4D0754FBD422A52DEF62E9C83F47C988AB66B8399771
B0B2912CB9C2B27804D8A55A0140074EC0DECEEBF7774FB05135AAEF6F9D84C4
DF45D8A3A0E28C2B6D4AED6EE2092CA78B984ADD836700F0F5BD0FE92879D78A
C6396BF1D17A6381B58E61AE1E09620E929FECEE64779D73EEE63BB1BCEFB146
A11C390D9D238D43FB421979DC82252D018C3E58120AD2A3F23BE4AA3F7B016E
18B0F5F128E4E336E7A5B41E03222B745D009BEC8C5951709E8D139FD4378FE7
BB70E6313BEAC7F7A2357CF0F80EF2E7C281D42A3C670D795CAC842D0A31DBD4
24A1C6FE77C016E242984BF9AB7453F46D57B576A3AB567563D090FA95B668A0
539A7CCC8CA2635DD7C68D33D662DAE00DB56AE4D916DA7819674E82E6B49A5D
F8FBA51E499C4705C8AF43175154CDA558F505002596CA9C386417683BABA32A
4C229B1F600A210F389D6B85F9078D1B8D70A15A766CE31F8E0FB68CB9794B1F
862B102690CB41002BABE1573C58F6F08C9448A8B1075F093559C1FD38C233FE
D4D0179214D9E099F0AFB8FDDCA42502A9F9E2E321C96FFF33F3C96178263A74
5345196604A145C0B809F59C19A8F76B02D78135D3E99E366A0241068612A800
2ABA9F1CE9F6B81BC795F09DC376BFF41E07AD9A6717D7122B4E382708A1FF16
B79FC5226855F3BBC478D2E4F37E643CBECC954A4CC3B338A4BE0AC70C454C65
71CCC0D005B3404AFA78F3851B2AABBF7BCC3284E791200BA0BEB99D6ADCE8A6
9B20CF78E8BD7AD898D1A108745BEB8CBF8B59A39820DD18A9318D4C748E70FD
4FC6270A9A8CDB72282EA0F8081975613E136EEFD5EDDADFF42D34EC33B35955
3B9CE80EF3BB486B3D1D861EE7504A46DAEAD1F389D11C4574717FD3263BA060
9A69AB3CDED201215141BE057A2B04B90B2698688EA39EF3BBBCEF2EB65FBDDC
A7F946CAC613C729835D85436FC29744FCE05693E0ECD3DE063E9726DF90A8B8
73F4A5487458694DF4BB1CABAC9B4C3B4C2CAA868187B8963EF1B37760791DFE
0C6E35B38DEB8A509042EC45F2B1635BA25E27AED5AD7E1974C5B2AF806BC3A9
75359FCEB577975F67C51B720133712788FD29A806EC1AEFD8A9FF8572EBA90C
6B7009640116FEC606ACD5B1FEF07755BF55DFFCFC48290D79558EE1628BBE24
429EB3070AE516FFF627FEB9FB28B1B954A25163C26DE5256C9F142B21896980
91E65FC3FFE0B8C9756CAD7A6F57EEBBA67B5C2263F83C03F61D56EC16172C67
15E1EA262AFDF2590B83BEFFAEBA1CA6F78D5F6FA9E7857C2C63EC1171F8A8FC
CF41B71CF5B0764B6036E65B4E5D943EA180E8A3B50A41EBB8EEB89229D7CB0D
4BA59B7CE50418BA7012183E1EB6D591E47B219568FA55112E4AFD677DF75583
35E526E5AC164AFC42453F87175877EFD310D8FA0786B28FAFE35A96FA3215DA
3F0565F63B26AB4E3CD426A85761F994C6B911EBC83DAC5F2BE6FCAC9918B336
96BB0D9CA6F35D06192A28609BF0522D8BB741F3C7ACFC0B1218D0E707D2C73A
D19FE993C90728B12C2C026C4670B66BFAA4CD9E8C77924138EE471C943F48B5
193CF6B4C68AB159FBC0F222130368DE7398C0D2F9B4A3A55AAA4A06DDDF6AFB
CA8777A4998D5053B9F6EF3B41D2A101061D845166EA7162D1E441491E3E4FC1
35852203999E1F4819D7E139FBDCDBA423D64D1690160444DB29D79EA329FB5D
07459B4CE0A95A841DA48C4908628387CE849688C4A3D83CE55E9A39346F1264
1D12BD07A1E6D46537FFE99217FA0660D8A6F8CAB4CE48D0661921EB464BA1BD
08342023D868360FCC8C3C4420FC9820CCC2FD114138902C127C95C832B94557
6CBFFCDED6623262B6B1A07D949AB96B94F4683D50C7ADAB36A7B3473B3722F2
D8051F5BB0DA6712A3DA3DA3A7F260CF091C7126DE4D6FF628741A2688292CDB
0132384B87250218EB15F3B0C85C1069666487E28F05346C1160249AB3F60C48
1D525BE1248A54B76114F032171465D50CEB1EDF35AE4152B8A5CC737651A35C
344A7CF7EB2EC6D6B46E15B2A89A85C4794D06B345D0CE89F9F1D98AC858DD70
4CF1A72881063C7B1D1ABC5E5BD95580C1621225A259A61E3D76F535351FCCD5
16E1CC77F22CD8F0DEB22C2F520A0322A531359228C91292DF873C12BFE1CF68
3A51D9BF695FEE895ACB4535C39E9C9904C8EB8090679A09E5E21E9B8791F9D5
7AF2828498300BF404C23F100C86A869B11EFBF5767C33E6E3278D7D99D4CBE3
3345607FA7696EB66006A2491233CA839AC5D7DE02ADF1FA5AB0BDAABD5414E8
8F4A272B1EEB812861C48B1D353CBA216C83F5C4825B02BFBB9C54FFC8C8CB15
C00B16C066D63EA4C1D2A50D13D4578F977D37029F5B533558A36889FAE6B891
99069F32DA71F2912F5174DB777A65438D2EF4F92431ECC81727528710CA04A9
908733173E4BB831F91F7CC5CCD7F5BCFA2F280228C8B0F96907AEFEFC1F0240
20F9B738E3D939EC76C308DCAC329DD2EC3E470CB15F38F700AF0C1B57FBA2F0
7E368F05134161F402599C6C1564CC0791D847FC971213AF6E8214C4057230B7
79B8F206FBE09F121C923D69CD2CAB8BFD314966275510580043B24724054CA1
31A05A2CA9F92ECD2BD221BB041EBEF1483D1BE725A8ECE5BDE4660D29182C8C
2839E72F50A2DE4B6084CF315C7BF050EF0B1C42169287D9979B82646D6B3EE8
E074B6742A1875A3AFC7C565DC15ADFC20506E241E6F809F5A0564429AF5CC05
4476BC982842784C178C1C4804DA51748399B85BD192B5E30EC5FE7718B4F002
F19DC0DE672884278B36978180DF4A64763FDFBF440F794456FFA072FFEF1A8B
62C4E2F368DD836DE60DE54324528B25A25AA2B872B756618BD1E10A52F141F8
100D70F333CCEE556BDB5808766059067CD3DD433D52C77BBA7B8688F9179AA1
E370AEE9C280D57CA9941883962192FDF0CE2448525929094C0C8B3F1C891196
F9A563D3AFD17FDA5F3416729E5A3368F148BA5AEB055D5841C0F1FC70F5E423
A158C73D306BD7A938FD6A58590CA82CC190E226B3B40743D0F234829BB8EEBB
D3459DA1C424D48FD572B72C2368FAFCBC925FB754650E85A1DFB3967CD016CD
428E1CC93EEAE83707B6DD4F41C627D5CB79D0CA46C7A4421BA77BB7D1B26372
40918271FD617D2E56C9D5B02A58036B15ECF988B509EB7302DD4B6EA30F46FF
7ED5D2F6858FE44DEBD217DE013FE008DF3212A24BE490AD57A71507A6001113
B12DECCA2D785E1EA0EFE8E5731D736510084EBEA22DF14702DB3AA76C52CC93
0FC15A87F05EC957F8DD7E4EDFAA6BB58688949F74A90A60BC8762D26E33478C
6EC5AAC8FCE3A149EEDC4F60C22BC4AEC1E68351B76D734A5F5935A4104F695F
20C03A5238D53815E0C8B59F9895ECDE9DB974547894FF25ADD7B0D3769C97C8
914D0B4826C5372CC313DA7B17E516D771431E413C5E69B54C0534137562B717
43E67DE315D6DBF4C0C7733A6FE9AFB02D07CAED4D962218383EF90F23B01EAD
2BDD03F135CB4FBE03B45088177E17CA7A7AB68700D3D4F373AA9B7F582C86E8
E8FE7C7C690DB088FC0687647C2FD361A699A0F145F065520447620F355DFF8C
107193C3D13DAC15CEA02015A6086AE98D1B42B8138B08CC726ABBF22CB60C62
3D14C56CF86E994583136BA8B79AB1FAE88EAA0CF06C0E9097D8CDAF5A6CACCF
EDFF83484464C9152A95B64BB9244ED84F07A73A5BE2A9E5C1FF9DF896D10A5F
4173046AE1A5671A9D3CB8AA37C6ABBEA5F520842B335D7FA05AD3347EFE165A
1924178C9CE3C7AB4A1B56232BDC799D2900C4793FCEF4785552BDDA70D9372E
721ED2486AC63D03F840F4CD5AD52359FE1AE0D14C5E14D2CBA84E1FDB747483
B5A2E3A4625A696D577CD24C01E4EBADFF2E10D5494C024E253724B5FF26F1B0
64B20708CB19683173DBD2D17319517EC275F24357CB160398155BD530474AEA
FB44A7D712CD229BDE08A91E50ABCF8E0E44A6BEC65D0CAEBA92E6B7E141D48C
861958C2E21ED1C80FD7A7030F8C7773762B18FA9D4FA6C353D61B4CB31A85D8
92C4ED21BA36D944EC5F076DA0479C8315D1A4F1A16A60B1E9F303A18891A921
73CA429E173F82B89450EF7B0D43875C576DB21D44F5336F8EB9C4AF579DBD8E
F2ED0B5957BB00D29367C87109B27B0B383BD0B23DDA7CDAE73E5FFF93B6505F
4C963FD62FEDD8722B7E2BCA16C510BFBBFA6980647BD38C3D012BD831BE286A
51EBC612072170FB0DD19618CFAF696F713CB9295A53B9711FA6874CA50F2154
028FAB0F20F238FA5C9473CD15204A48F87C05E5D98B79A147396D5539F9519E
A20EE61216D12E6ABB1BECDCB23458C4B4A1DD170CB2865431F08FED2187F0EE
44A71F11BFBA8A99CF1F28B0BD20F62CE150FF0DB77E2927D9416E3A1FA276B0
27A418DEB2EB2EB2242AFC71571001FE685033C7E1EA0B2B5B3D0AFBBFC88494
AEC8B462B894E0077709663797EA6539A9E5048E3989FF97EBDCF50001F5A55C
03024B08E522901438BF1C82019BD8B60915AD0E586B07423B1004B0ADFFCBCD
9A18FEF10BAC1892E236B1BB0675646D4AD48D6DB20002A42EF684C0DA266F89
F3A0DC300EB34672AA7E5587896B530B07F5ED7B2E617D6241BFC268474EAF2B
1717828F60476F63DB11FCF375285D9F688B1F4E523C7DFD2C735419DA65AF8D
6B38F2867F70AF5443418E8F1340263E65B51023E05903A67A4AC7694B84DC67
6A2EDE84A46AB2CC7F09643BC03458A6A578F45764486FDFD45E3E44D28B0A99
FC44E49D5C8D95EE95F8BE4F05BEFA77BF6B4ED7BF63E0B38044F1B2584CE149
22AA9B63C354E8017CD73C4D2FF8FA61AE09A4D1AFFD218998E35B40F849D3F2
30B65CB6D595DB32130C388609F33DA47AD38D194E66BE155CE83F89145679C5
1B1935328249AD989A855ACFCC145975B9205607469FE1202B31E516244A06D4
8C45388850B88B8273F9B4C534B8610A5C35AAEBFBD15BD299DFB1A731752564
4E895828FC2870E4E57B939060CAC33E30D22954B27550D0E41302E597B15C1D
BAE78B35812A8A6BC32A349C3EB955E89E356CB2277E7C160F73EABFA30544E5
8771AF7C7859A6D73164064C981D23E8325BE5666B20E804B16B38EA429C4A14
2F232D67B910085AE31D620480EAF42E0BDB28F2BA220025A85C9EDD2B195117
096C7493B8491EB8B63CCD710AF94102028FD1E7574F3C36EC81898D51DFF8FD
178317D41E88195D8374A4F925E98F0314993E87D7A9141BFBDD984F431A03C7
06F504B1BCEFB098222C7D404124120985CE4BA485509C68E26F2AFB77DF26B8
E33797676042C995A40E52625E1B104AB0DED80964D6A69F40A1ED8A50C0C297
D68CAF5E49149404742CB8CA8DE3EA17CF84670F743E3D6FFA6918C7EF5B7A72
311493497096F291193C157D2489EF224211442CC1A2BD8C999D55C995445EAD
417F17CFA3C3CA0C93592B65DBD5EBD40F53AC32B37B82D0B944CD3056931548
C9F535FBA1A2E8E2B6848EE37B0EE0887C46677FE1970E99EB4629D82972DEA8
8BD00151B28A1087C2A71896BFC1FA99FDC416AC85C18CCDB7C1C36B9E4FC6EE
9D2CF0A4A336D6D72ACA061AE91B4C2E939FECD5CCE1C49D47093FBAFF57D563
E90BD162D17EC84C36C3D80FD1CDEE64F9C3879417A17CA9FBADE71A77C0C474
F4998A0ACF73564FDDE8FE4F0B4A8233C70F7F51761588EC3823588BF7BFDC9C
29D11C51BDE9BB77C150D8F9A3ABBC214C731D7F215EE606121176E26397D505
2EB6500E2A1696D8526D14BF6D14CCBE4B84B9463088C2FDEC4815ACB951FC75
5347242F9809BDE8CFF2D4A201F45C4BFDC3E8AF4B13948D99FEEE3B2905A3EB
DF5ECF8D5AA73CD78FDE74BE49BBE17AA5F20F5078AFE556D1067F2C67541FAF
EB95FC93EB67BBEEC85C24BCB97A2A87578CB275494DB3E559C5F5A07C0EB793
5DB8F608C04811F392CA660F63672B738CC52F00F710D4D61B1F4C5E422208FF
CA2F7B886BAEA465E5CB2FFB68BF21871AEDC2771321F8DE91E79263D6858FDA
E5BFA9EF53E724C54FE7930129534E752E998D46126A381186807D5F5DB4F72C
9DDD34B614218B47EC13DC15E8DD8A5AE776BE4C73A48D40105A0C3CFA465D11
4E755A8742746DBF91D3020B8068B5DEAE51DA05DA67750FECEE8E9A00B8C796
26090A431D26B70358C8A86E46C978E1547BE4BC13E448FB954363ECA9E40F4D
9FAF9917EBDDC79D0901B80E679223C7173A88B0E78E84C92FC3FBFCF867A87C
D120AABC805F47274B8EFD4466AF756B7B00A3527AB0D29D0B3BBAD9265E36CB
4868DE92B16CAF37DD1B7874F535D8F0F5EE3330EA898A83EA1DE79B7CE6E988
9720B6B7F6BBDAA2D26C425CA7C76FA67AFBA1B25EA091BDA60A775221E6ED3D
14857D9FF1E2F7B0E140A53958AE4DD9191467EDA173A2E7F40CEA49158BE14F
C76A3C64840EEB977F5BFC46DA5EDA953176288CF5289F9BAAAA6219A668190D
51730640A41D76E4BEA69F8F5003C08EFEFD779F8414833A4E714AE0F8BD57C5
F829CA55F7FD8E4EAD111C7C7106F401EBB9280C40225AC04DEF058DE5836472
5FFBD25D0F77BE91F3FE1D7B96C524DE4689EFEAAACEE760FB40386ACAAB956F
A3C7625EDC041418785446890E363431223365937136D18A8FF2D17B5AB13F4E
F485C8FD61B369A205720F297FEFB8B92A16F5963FB34B23D950246B876A8717
0BD533456995F256EFC571D4821E9C70F5D452E179DDCCF6193C25983167B7EC
E29411CF815998BDB3FB2C085ECBFC92D65499CE6598916A0D239794A828E881
75732F64747A4D0A212AF4C117785D339549C29AD21391686695FA30A51C33F2
0C503151720810402A89347B2043F6C605BFBDCBBC99AFD584BC62EA4D0A2E3C
E3DFAD450A63FFBD5E23BD0352745B6325718AF7EA47A6CAF9F67A367CBC7E4D
BEE3F4251085AA3869745D41F6B9EBB2339A2C820802AE8AC7E1A530D141B1C9
441DADD217940B26E4942B5575FAE499BF9F4B133E32A5538D9BBC4CD9A48BA7
D2E88C6B3EF2D62241663541EB6796119DF3876C929B0A0502081339CDBD42C3
25050258B43872D052593675B4FCF53FF2986C69050DA506808E9321DF14947C
FA3DCC97477F8C211E8F8300DE468B07FFA385E8175275CF860632CD4F7A147B
860350E0F337F905F3653F62D5D7425AAC96FCE974000F780C9E87C5EC4B51AF
DBE2C40ABB31EC6CA1D87201E837E9776BAE09E9DE0EE8F2E76F10377989332A
867E6D45079AC8DF24B4F226D53CEEABD1C61484B3216F84F60875095DBA7A72
2BDEB46367451349C875478A06A85A8C30FB040A0FFE80D383AD509D27DDE897
C66750135621FFFA1BB473F1E5C82B51C44632E2D29A6BAB260BA80B544DC8C5
D5DC3DA126196492CA8BA7B76EA2753B98A0D6362FCD9622496D3C46A9A5E6EA
C1858C4A209756A70D677B2B5B51D9895DD484C99571725424A7DC9AD6D39FF2
DF47E85390980855325C544D4C49CFA860800EBD504E82A95B36F2E04F8315BF
DA595C86138AD6877CC6044888163B46D9670568AAD6A1F06567AB18136FDD96
F793BE71A9DFF565830651380585342F50D7F1FDAD801F4A6C32AF1990C1A170
90DF2E3C07770D67DD05F3B31EA5E82B0AF363F407D91226313606F1886A0F78
6E407BFA043D4B4088594A24C5C8D934E29633F5C8706FD89D9BCCFF1846D371
A4AECCD0E06DC36A30BBCBC0619AD29747CADEDDF13204A673FD354C9D7798F4
65D30B2EC038BE8921B68A954295A22EC50ADD3F0D74768F6AC7EE0477C73FE8
B0B4CA161D1B7737BAFC64D1CD9E4A72B61AA80EB93843800771F8A4216D676A
2D5813401A9D4366BFCDB5AF4DF2C6FABDDC7BDD8D42BA5F33535A6D9667E4FA
4455191C44FDD64F202900F2F022F060948E74879DC8C099D609DA91DD35A1AA
A1CF706F0CBB7767631FC9EC9738AEFA95FE9F278FADF6481488ACD864FE509D
2A42EE6F7C6F7AACC3245DF4CFF75D054D2D38514935392DE50E204D17BF66A2
C0BF99DBFB85411A382A30EF9304E20E67FBA1C146FD541CF4F4865AF146DECC
A865ADBF72E71B2FD02DF275AD87AE0EB9A038975A9120D3A2C628B485CDF58E
08634541D55A9132DC88FC1880A78C29CC125CEC80875857E3FD5E10B955427D
5AFE1DF3A2068B9EB90E510BCE433B66C3A24ED980834C815BB5165C18D820A4
276C2914CD593EB8583268D4852D613B9436BEB742BDB2F411D81A1247C1B660
5B58648BECCA9264B07BEC3F5B77D3E2F0701E856B1D484AE9FA88F01118EEE0
FFAEF5496673ECCE541270B51E10D00A5B0C9B5FB889F564B7A57D4621385DF0
F4148F10B6D19D11C5DE9C02A7DDAAFEEF087214D5B6B59A8D3FC56176387515
29747EF7FC16F1746B0CA053F5EE3E4A6E356E9627275398F341627767A5F85C
3F01F5863C2BA15DCBEC9459AFE40277035674F43D0AD0F1183E8DAF12779557
2AA7D01BC3218D2018C80E3E3CC58E1DB75337E6CA1985F727D11B5C4BD83B4D
D5ABF24FA20BD15A6C83BD20FE24464E7AD6E603884268FA973BFEA31765651A
153CCBAE6CE1FA957663178C3F8F48E761833B1E173962B2BE77C9FF179B3658
7EA2F3FC13491F99A68E239FB99D61C2CBACE337825773A4995147BB87392D85
194F18F4F7D49803DFAD801D03DFA0D54EA0092EEE49D2A44FF3E1098E4F55EF
AC2F747690B9C95911322DCA9B66102888300F0888156100D55491D372D50341
9DB00935375AF3AB239C902B4E33E2527A478B502AEDB192937FF0DDAC277DB6
54A40BBF64B55B4A5B99EC39AA674A94CE2A2B13B91F9AB3D84EBFC31AA83A73
62D50416198AE1CDB57B18CAC7B453E59D192340B54CA4DBC8D8B21DFF8D9A8A
F0C58D1E66451839B12FBB5414434004DA42D36A51A1F6EBF7E5E2A083E930E9
D8ED8C281406A4A7DA96BC341DB2E1874586191F733689D77D7DA9E1E2B8D00F
F2E86245FE25EF68AEF6A43710BC209DF4818525FA3100DED19222D6E10DD6B4
051B73930AD5027D250632BD3EE0D0CC4D074502B46A4696652C5F34FE52008B
D823D67BB4FE2909E8BC74094D0A4F9AB2AFDB7E7CB38136186AD38FEC194877
407B7A2FCD86C4BAD33137DE2AA38B31EDE57771CB15DB4AA45A0B8C3F9BBD1E
6C2FCB0A12672B64311EA482BC5B20B29F86F44D043F57B9931C29ED033C8A84
4617080A0BEEF966BA658D9B25BCFC8FD74B78D9A32675BC0F43A0C3C1B74254
799408136E5DB86EB1D022477947E8F0B8793A6E55E581977243D4E0E0452F57
CBE1ECA3FFC9B607F6919A4FDFF382D6007C08B4EBAB688C394443149E98E171
60CAB6C0F1FB68DFA32F8F1556583F61FE21FE29A0D2FE28F18A4B66E07C1455
53F830B9118FE93A91C76F8E71D1A6C9CF12CC737B75E309C271DBEDBF4B4134
D50B27F8A9C1EBCBD4579E073960FEA3F3D7F053074BCA55318F4A2811EABFC3
BF8D5977017832DDF14217ED23B2E70301F03A33369A37DD51966DAB68AA91A1
17C153949312AC1BC634375F0FD2A420679DEE3992430B256D3FA602E83AF4EB
118ACAB2A4D327A23DE3463763EAB502BE35545BB52D8AB9886CB9F91196AEC8
71168580BE371007BBCAFED4024C1DB5D785BAE9A1390B52A12FE1DD5C09ACE2
045A158AC405977517F00DF965405727C5145B9BDFD21ACE22936C8807D9EF23
49503F78900E9C23B7B332DE45D37F682F9E0DB16A1A2EE1CFE48A0E3DDA2EAD
8FD41420D7EBD1BE2C528EC6DD19FA44631C3899635EB665D1C9C134EDDADD45
88E44CDCC5144E7D1EE18784E89085322AAC17A0B243DE9F1A1A7151116F3CE2
3ECC444E38265BADEFAFB5FFCB7363A1D4740ED0E95C197C575E8A4E67082A92
FD5D7AA5364A30B9D2490CE8957E144777FB3FCBCF6E687D79B322F7F2B87166
3A2D125C36AB0DD363E3FE7FDDB71A0DDC17236879B777736B536176FBD87A79
E13562D111D2F91A7461F1E17FB26F72DBFBD156C6841E36FA56D1FE43E9B2E6
44E95594B1A3F3F93BD083874901E0FBF80D0BF1FAE3D1D205BF32FB2A3639A5
F537CD305789FEADBDFD411FA475FDE2E1BEEE27027C2902CA28805EE2C93675
F622F5CC36CCD4B98E293E14FDBB8B1A919BA0F6BC5CE761371121D788752598
D246985368FD70F4C6F867564E0C046B5DF8A1CACE56D52363F8EBD10BD13A85
5C5B1BE8B47770CA01F801D9EC1298566CD9B365ABFCA7FB972340AC05C0C609
BAFAD308F0F44B86F8F479E0426522544A2279654969073377F2B483D2E8AC9B
57C2FD829605B439F5D3BC4C4E1C5ABD394CD09C1BA1EFD7AAE55368F7320415
248D286DD424A38635DBDE77B5707DCE4561B09B7B01E7A7AD99BAB501FD4FD9
8D95F63F79088BEBA1FB34DA731F27CBD09CABB12D6C26B6883787F6EC21DEC6
7EC2813B5CD69272071180B4B37C5D853D1BCA293705A668FF855C054CB77720
EFF0FBC8CF71CA550D7DB79C89471FD8DDA0252C9F574746E6D1E4E1CCAA78EA
A42B8E21CAA22A3381B22DDCB68F78299653F57E832F403688E35C0D566F3ED5
9DC01276C2B1188FD25B9978DE1715F38073747ECD4A8F354E3907F1A5F8A632
8A5DBD344C4FEBC80605DC786622A280A7FC8F6604A2853A4800F2C103E45D99
C987AF0B44EDA292E04953EC69602981A79B5674AC3C8481090B414EBC8DA167
A98924A07C68CD9DB772A94D134EC32A6276BA72BCBF661407C4A39481A45778
9E5CCCEB412D6F38D97D1C7B30E7CD8EE0C4C7A0EBE585A6F77DB7AA4FDA4317
AFBCB819F79DEECF8807A4779806CBC5512F34ADFDF092DAD7537E4A33B8B4BA
9D51B53062A79CE3C53D85A4BFE1206BD754837EAC9403BAD7F3A24DA4F5F4F7
93797E5D4E22E0E5E51CDF4F6F576B7FA3408F287DE6CEA23EC0A3534C444B27
33D40D0BA87E45DF14E758633DD78DF01EB62194889D9AB74F55730490F8EE69
1116C5140AEA3EB369A09AD82D4AED97921852C6EE629FDE976551388AC667AF
4991C5F20130C93133E9055EC463AE064661A8C96381151AF7CB589087B60D20
C8427A0DF3736A9E2C0C851E0DB36866506234FBAD63C2F8A9F53EEC9D9A3C20
A17504BBDE320C6436BCF0CD9430EA99B04B15EC1968B2EF74D6D886EF1A7221
78B453ACD773134C53EFAD31906CEEEA6DD42FF6ED22F5FC2A77C683C3DA4F92
B1E9F2699F66361C567810658E5BCA8B9FE496C82D97D3BA050E5ECD5900B514
DB5F6B5771D170C0C528E91A09054536AE099E94F66DFA29E8408A8DD8892D03
C95AC3A608D31A887CF0E810226F35B08EAA1941897CD1A5712556F7B2819ADA
FD35617CFD55CA64D37F543B0E037D0E9ADDD7AFFF21BC9E25570FE548DBFD72
59D231C896A6EC50ACB2DBD02D76591B9F9D34A6FF15F84A5D5ACF864FC26928
81EA895FF74E4C3CBE1B7F57A5F30C9DAF22B262E3AB0FFA2354063EE2B8A2DC
96DE8CEA1C05958D79582C4412EFB7ACC4E9607618A90C9370D9EED639270FE5
7BFDA6B605AB44C1DB1D38A83C4C8EE4F8964D8CCCF2D92929C0827992BC54DC
A6EA335ADC37BC6E0A8CED1D044C219C8953C6F170C128D94F7D973F08917C5F
BDDC8C0E630416EB96947C959D332455615F9750E4B36C4C0AF7FC71C7FA260C
60A89B907C7BBDE9ECEE9A3499A18D0FAF574DB94F5EF244FE10AC1222573BDE
4C5603DB61CB6474250FD337DCF93696A2AEDE9A1CFAA0F515DE65EC1BD59D55
40182122DE544F233F78D2AC18D939C0B76608CB8230D4FD012CD07E4EC0E9CB
A1E406DF1016E946ABDD979E0958172534079C6690749F0B4A7AEAEAEDC641A2
230CB55BBACB4F8013139B9C9F0CF50C2D678173DBD134A6450C57F83EA37560
BF52551F344644C0C6090BF8D67626E6D401B7272D8D7822FCBC6E02871D92B7
7996CBC3054C72596D4AC6D8CB6B4AE715340DF7482AE799528DD7A5EAF6BEE4
E16B9C89900A4ED502A38CA8F56C088766614ED9D8B99FAE3532863B68BD813B
B9D53F2863BA7ADDA1F6961D8479E8D4200FCC203E86D59C8CB2261518F10585
FFE323BF89EF65D3F68824434A5B6CCF1757EF2B708E0E28D2350ABEFBC862D2
8AFBCC432F93DF7241464A9F0C0EEB1F53C94B6135A739FE9A05F1F0D943C50D
09580D887E2EB7F7BD23189BE35BF01C7413D53D3090C4C8C0D3CA631589C4D6
A27B976B91F5020E2693076F7DA32F01FE376A84A3AF60CD32A0E1BA95B46987
495E998B8A4AA193EC5C1C0172962FFD4E68EC553943C22927F124EF4955DFB7
861A7E52CF53051E1D28A6595734FF18FC2B1D281DD5C378B3F2FBD9729BB10E
66EFA6A3C3CBB10CB6BA16809F500C2D4001BA44EB28F7A84F55B89AE35C1E9A
A2D4FEFB3642266A744E2E35FB0ADB56A3F8408685C700CE3BCF4EFC23A49D03
0910773A6A4F01E4ED43497606AB70FC4B7C632607BBE0F0496BC166A658FEAD
830207653638494DCA9297818805F05CA0B9C4DCB8C4ABFA4305D904E850D257
E5A8C308A9D584BC62F2CC7BE390F180A0A84BA9C6DE2F4958F894C6702E6A52
20922A9FA95DC31CEC0412D0C146690DE2D6D89E23B5EC82C501A760142223A0
E33E63A3BA53DA63B01EFA929F0C6B12BA34234C6264F9C0E6B179E950F8E9D0
D5A4BB4A256B36FE8E206E57C8756E804C14E85A7FF5B377C347BD67A2C175A6
88AB1A573A31A183B6DBA1AB88930CAE2830BF3092D5470F6DD516341D704EAB
B253B7CCFAAA21261E5F5241F51D65D5BDA4CFF0DFC2C5829F01644F2B3C8C85
CD38F09F2CEC0D2D2396AC3B664F6546AAD9B4F667F2079A7F367443BBAF4D68
B0C5BA8940EAE66425F7F6EB0DEB9977C4369CEE9643C1EB9472673518C5B5AE
DCB819FF16E30DF6CC55F8B5CDBB6FDE448DCA1C2D162E6CB519CCFAAADF994A
CFB076216FA978D49FFF78E29C6789B2D934FBF0B2758EDE62647A1BA0974A2B
C827CEC04E33B1494536677ABFC84005EAD90E3674F9007D1E022B200EEE020A
E5DD4C6FCD5837A7CE87F80A7C4666623BEE4EB1126E1C51CEC9E7EC35D49635
3152AFE9837C7C4BBF336353DC92834C0BF3688AC97C5ADA9787F28B859D125C
40EF9174B795CF7FE3FED5D07DFDEEA428FE2286F3891208C47F9C41C9186155
752E965133EBA86C70E884EBF9611AA1FB1B67C86AD5904CA75B9AA680EB9980
D253C898AC27A7D31ABB59C1E566B2A3A0CE03849A3007C23044663FF37352E3
5E2F515D1420DBC14749A45571EBA3F99D10D08B79D6C879332E07DDC5AE2EEB
BAE8DA90CBB434D4C63FC54A3042C4FF84E617B1241997506755E331517E1A7D
77D6D67F972D3ADB84336B7ADBC98A7715DEB3566FF218A72C7306249BBF6264
4B4E3DA8CB635E51D6D471DC5F4EBF1EBB1E28004BDE5A6229D4D92D0E309E4E
DEC9143D23BB0C285339DA95D6A1759A950BA9995184B394A449E3831525C1F7
4D5BE841843B65568B32F0CB2D43ECAF5CE975E8A93DC4AC73F6FD76215AD063
7EFFE1209FF0E3038930F6AFC3C6439D8F3583D2688B049410FAC5A9444CB7E8
25305C7EE5B38A5F48CF6B2BE0B56CF06C39C2CF19D9C9D7E499A67FA0666C09
E7A97A6E571B1D660018ADA233A07505DF2BA87AEC009CF09AC05CEF05DC85D2
8B6F0EDEF0D8C022A44A5B0798B1A1C5F31AEA02F789ED462CF12A169D1C2C6E
E871509422138FB7AC075CB509630E76B2F8019C4109C58F47DDDB6178068B38
FC9CF1B98DEE4D2B45331C962D9D4540C5A7F69E01A759EB5C0AC2C1B19C5B24
CF540961EFCD403BF8E9AF05FCFDD07837F721D98E1BE08FAC13F3453E861D2A
8F7D15D6B186DBA5C3D94546D5A242CEA9375BA9203AC3778B0D94CF8B062298
76BBDCEFADB643FBB644
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: EURM10
%!PS-AdobeFont-1.0: EURM10 003.003
%%Title: EURM10
%Version: 003.003
%%CreationDate: Mon Jun 13 12:00:00 2011
%%Creator: American Mathematical Society
%Copyright: Copyright (c) 1997, 2009, 2011 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name EURM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (003.003) readonly def
/Notice (Copyright \050c\051 1997, 2009, 2011 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name EURM10.) readonly def
/FullName (EURM10) readonly def
/FamilyName (Euler) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /EURM10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /phi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-32 -243 1060 720} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F41F8A25
49C1ADDE0F25E4C2E5C990C47FF040F896D567264EF5C3F584F56F343C2737E9
EBBB4521049C78FA1A7314E86D532BBC544FE600AB25D177ED8281150D633906
8BA0DAB861A70FA9DB57EF3CE0D91C6A618A0082E595C1EA7E42B3C16842A9CC
7B8D943FA5D2384E3A8E797C334EEA52719AF615796D2EC131ABFB18606909F5
6192412A0320AD88B47D26C2D51FF38411F77DA84D5176BFB243447977173EAA
EDFE34ADC06154B053A3D5620C5F9A35B6BB5FD64B5EBDD13DEE096EC7543A55
DD9D1438D1746D8BE4DCD1D4A173DF9943C66B5128C3FA98E15C0C94FE411BAD
E810EDB7B7273FDEE769E94B6C49F09E74A5D89D5F6D776BA691DA3C5D59F573
5F1BF23A503258D642835A52BEAD40E16329D85497362275CE42FE13DAA19CAB
2C81DCF4644C65D988C1A27AB4E0EEA3D97D1076913836CB837FE42F98D80DA8
6A792B3CBE7587CCA83AA8A0722A7460A6A20D8EC0A70789C0CF4689C4113AA3
D42EDE01909AAA83450597B2D62195C5FC6B85075B31722E4919C9255D450036
BC434E6C05F32F0AECECE4CCA9AB7372C14BA99F8EEF9A240F0A537E75ED2CD6
B884FFE9BA738EFF3883E754E8C9A4647EC368E7C9E6CE86D8CD5C94B0FFAD7C
8C3C95053EE6DC3BADE68D985D9AAEA241F2BEF8576A74B6E46C635C20A5FE3B
BE83FD7FEBA6A21114FE25CC22437163B3504F62A1A1E3B9D81CEBA885B23678
8C1EF18A1B7FF384B08E6C857BF0AC2DE0AB368C5C6658E743AB02998152F9D5
29C8A78A2D7A62395617F5D533F38A68C2F94CB35E68DDBE2B94487C26E16241
531924C936DEDCD9B5DBBE867BFA34243DFE8C08F1CF1DBC72C01399DFE33EE3
F5A26DBD9409CC8E4A077A6576B662AE7BE7BC9D7D1A4465FD0E819964F62EC5
B0ADC909F6DA228DE32F694FD027CE76F45C623709187300E6484980A062C05C
9B352F6AF5BD52FE1D7944260036DD3A631F076DC1B3D3933900D3F1D794EDE4
DB65719A00D03B33502E1F59F53F8A02D005A3124555C19DBC80FDE4CD173B0E
3FCE02D064A6435322199C983565E8D4445637ABE216E1F84089E6E0A57A6AD5
25B4FB46B776DB2F8385EDF530FE6CC403B268CE34B1BA0BFFD785EC748BA3EB
9721AF8DC3C5D5D26A75FE580A3DE8992CBDF430E117B0B7705A43DA4915B92B
9E369A913488C8AD37E731BAEDCACFA8006A049FD3B350741EED5151973D65DC
6DEFCE17AA397770D733037F72F599C09F35A16CED0DBB36DFE3578097AE3D23
990AD071833F236088CA0A33565C584726E4C1D5953CCA29EFDE324D10D9FC0F
D7AE521EEAF6E21F32513DBB6E269218F5D2E1CC0FDEFF9D05A29D5C3B6B8195
33D642BC08CE5DB97909ABF5B87C7C7F2A4091C819F03101571DE8126C7FB3A8
37CB9A9ED232C3A38321DF1410C805DF50C579E56F70A0DBE768CB20F2FA7C22
A586FD388439AD34872C17033DF2171B7DF7262EDBF5846D9B15FCE42A1BBE9F
6CB869604CA74FA846B4DD4C71DBB4A7CFFEE7BD3B1F81C3A34FEB6A4784E271
2B63A21EBD61164790F7D8DF24CAAD82C8D28E2254129701A145381FB0D6A5E0
745308C7E1935CE6A7EBE22A23A5BC68F3B97DDBB0952E11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /a1 put
dup 8 /a8 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26D38FD979F820B4607A4458A
FE32A61551AC882694E29AD2156E5D008591A02C59FC1DD6BD2F52F0FD868E8A
FCD67B5AEAB0025C012E85B2B1C1A99F66C67287B1FD75A0140EACAF485EB377
7E5C58B9E2904060FD815725F149D6B8251CD6DC34D3675B815D73F7F1F16D87
287341207E5791D6D8AE82E7BE370A2BE4C5F73FAB72B1F4C2058CA4994F6AD3
FDEF96183821964ED7BAA607C483A436C20C2EA50F45951BCD5A4EE21805DEA7
071BEE4216E8B2913E7743BFB58EC4E7FFB7C31E873147605D83D955B00B6B29
F8066EEC1E7091BF7F1D9E261658AEA6A81ECE5051E75695D5631C7398E77F98
08580980492E302486A98593780638B6FDF3C54D55FAB1271BC5888F18F4595C
2BFFC548C8BC5205962144EBF08C53026135AC215895CA9277DC7FF0ED5564
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Fourier-Math-Cal
%!PS-AdobeFont-1.0: Fourier-Math-Cal 001.004
%%CreationDate: Sat Oct 30 17:08:49 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Cal) readonly def
/FamilyName (Fourier-Math-Cal) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Cal def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 83 /S put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {17 -274 1252 724} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
71FFD7441F153F65EC489AED623132F7F0AA967C97A2E6C705F58130577D30FE
722A0CE1882455CFC9882D1055821847FF648509DA92A3EE12F984224F7F1904
F3395261ABA61816ECEF5BAB29D1AB8C21A8F46620894FC69C70DAB3226A0DD9
9CE0FBDF78469648F29A99C677B9FDDC8B90082BB7C984DC5C42930D1315FD26
EA08F21054360D1981E79A6EEEF345CC1B9D85A6983CB5E833C9F3CA972A2C88
B6220FBB013192E7B2F79DC214DD0964F4DA52469E9500ED2ADABDB0D259FDAA
648EE5A0339A6EFFDFBFEB97BAC430C00291576483521C8D406E8FA4DC48C7D9
6830DF6FBF39E9153229816D94F6BDDABA2B4759E1FB3DEB54C47D66E283E45F
3BC1B675DA1D8DDC10F24EAB54445658EDD0AC1ECEA12CBA6DA205698F18056D
DB1CCC0A8D93AA9EACBE2B5093275823AB48AD9B7B1A217505522EB1C2F09074
1D7EC269452BD0896C0B1F30769BD683103F7FB568F80576476B511F5ED74F46
E2F35F191BAEAE8C91D87401A8C28DCF476FF0CB9661DE7B93284BC8E2429CEC
A964C815F35C33B2B6E795088998E0EF2CD048D1D54FEC5014B1AD8A46618748
6D1446CEACDF027D1B238173F8FB6C828F10C8FFAEA574888C851EEDF4629C38
4D71F7D93FD74FE5402D7D788D76E28ECE97DCEA9FEDC5985599B679C052E445
3E16B23D20A619B501A088D5A6578CD0F56CCED1F2039876D4FC648DB69CE3CE
9EA0C3B37F27CFD4AB23D96B5BA02308081972E9E62A93B2DC9A37AC4A63E626
F1488017A209F97B3217B85127A8AAB35BD704F9614733E2C55D3004A753ACF4
CBFC509E71BEB3AA1179EC2955F527022F86711D2DDE84BDEF01082075A89D81
B54E0DBE10E80ACEDE0DFD0A6B56BF72DCF150C555DC17FDED0FF42FF3D6D114
3830B37CEABC61733C8D7D4B66FF844BD22929F09FCAC9F334426B38005A2808
CB0DA9BE2A164A45220A0EBCFF6055BC430DCF820B33B226AF22CCC4341B32C6
69411D14C90EB2D9118484FA16E59C648873D9EEF2B9E57EE43ECFC6A53E94FD
A12E86CC67E856CD9365B3ED23E58A1E97A7ED6C707DAE852E57D5B88BB9D233
B5E47EEF26714A4CC8923A9019F69E6331D554E6829242F1E05AA1A3BA678F48
F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF9B3EC36A606C0EC22D17904AAF
144001329CB3826DF8B1A982A5CE8765E2681E64B8D84A7CD7504E58CB850AAE
1F0B28330E00E9D210D7B972D494AFA5BEA4BF827DB74191F5A5418CC1B859D0
39AED4B36071553CE9EE55C1943015EE9F1A8856CCF02CE45E44A6E6EC9BC2C0
2D9D4B8299B2399045A279565E9AAD2955DDBACD612D3E48B87C452A15B3C489
A922099F00FFD2C7A1371453098FDEB4D82BEA68FC75B77F46892BDFF3D4DC3C
CBD4AEA8C346EB436961C2AF7784A47BB023B3ECFFF539BE96CF880E9892434B
9CED332AE162EEC85770D85814FCA2D9350B12E3843B5F41C5F13E36F9D84B8B
59EDDF2729FD3E48D7EC7516E263C79D6A97268DA46DFB0DA3AF073C9DED0369
646F6B36693E9A3C0BE4942D73FF500114962E610D7BE1ECB505FC2988F00253
F70434C3077A2428BEB3FA5E46ED9C413EF195DB30A38BEB6F1FEB404E479017
51F077A3443B93369468003BBEE29BBB9093FDB99991507C71753EE604A02832
C725E9A9EE151663032EE1B2834670BC9A18AEE869BA9B877B857DA39049F588
7F6C75EA22E2C1A23F5E19616751A5A80154B18B9919E7E1A053EAF0914A1A8D
71814BE7FEE42E6D1EB7644C10A722A014371EF3D539E4754CD2C62F1790F8A4
42D94ED07F5F983E66AD27AC7E1E20250E3AAB09E78E7F66CB3CC2F58E30FCBA
6F6A16C6AC2AD453E6B3AAA9C3299C13270D66C68CB2FBD751726395EEC09F5A
F3D6AFB7F965E92091CCD3C464AA14A393F61610D617E196C9252A0623B0DDBD
D4CC852F53207B4C082D3C99D3064637FFAFC86C0D95192C772C129F71427E98
CC2ECABE772E6926134F0C58BC6A3690EB11E9D916DA3E2FB8D772668F183C16
48D2C3826031A7254434ACFD46E4E0C2BE0A0C4DD22B38B62EA22FACE1D179CE
454DFF93642690E866E9DFD5B99028D0E71DB7D816A29191433D8AD0EF50FC38
59C0CCD704BF425C64379E8F07D1B4F529A18EBFFBB595DF576C8D4FC549D99B
D240F6F0B57D67DC507688A6FB292D06BF3FD379A13B0853935004D5EF2455FE
513007B029E948CCCD9DE5E52D22C76409EA03B6FF3C58A7DD539479C0B52D99
81C85BC0C3CBCBBAB88B94E492AB2987C464E4755C82C7100AB666CB4B767660
85FE9AEEDC2422BEAABF0D8B3518243E153C32A0F917809741E513A879741381
EE9D833931AE47A7740AB2F155AEF40AB5DCFF29B1A7EBB6F2560E7B6B9A6F28
D28742D01A24E1FF006D929A48ABB1A4B3847DA64CC5A2F8E35485621F701D48
999032644FB9627B1BC18D7DD77D178AB6BD1A5D799164DF05DD214A82DDA51D
625CC139CF674DE8948B961C114EAA8E1607D6224E8CCA489D9FA0B1C5B267F1
AF004270A16499FAF928A243EB695771B270DF5BB28EEAB364DC03AE68A0C2BF
1486AA69764901FA3B93475C59B867257B1F73595A21C09A9388FC08BCD865FF
71B6AFE94D748052D6456B465B0DA5B4CE76EC0F289B6CAB1017F8CBBF115921
B00E32CBEB956B933D0A70F48E8A26B85B1E8F0F37358619A558A0CB4AC41703
B4665FFC9C10609A9A3EAF0481EA5B8ACCA993360FD0131C1421BE702499CFD1
810E0E1CCDEFC6AF8EB7E17A757623CFA8DCFEDA18740158B6967C4A441F763B
F1FA0129FCCB9555405D79B8AA1465ADDBF426D5E94DB99F11A46FAEC52E5471
EF9D99AAE82DD997CE7A9EC2492EA158D242BE1C75A28F777AB959BB8F538DC8
5AF824AADD9628A8D88B7B675FFFFA52F4BDD43DC4AAD10EA7D6CB37DA47C4EF
B3737ECD09391517550CD7499013AD3BE8E98FE0649A31734847F2627C36BC2E
463A80301BF9B5F4C4C6FBDFAAFB3AAD92ADCDD260C4653A72C08DB76547A830
8CC8A0747F2ACE43D55A4CFC1AB41BC68E436B25C680959BA5AF3EC0E43257E6
E3F6536C4F5DAC9BF02F942FFBC9D7EB5334DBEC1ABF0E5C4BB02785E77C2710
716FAA7A6C920408F14B7F697A8170C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesTerminale.dvi)
@start /Fa 130[31 31 31 31 122[{}4 68.7421 /Fourier-Math-Extension
rf /Fb 173[46 82[{}1 68.7421 /Fourier-Math-BlackBoard
rf /Fc 93[33 162[{}1 45.8281 /Fourier-Math-Letters rf
/Fd 55[49 49 49 36[49 54[19 55[41 50[{}6 68.7422 /Fourier-Math-Symbols
rf /Fe 61[84 194[{ fa5free1 ReEncodeFont }1 74.7198
/FontAwesome5Free-Solid rf /Ff 135[35 3[23 5[42 4[22
42 34 22 4[39 97[{ TeXBase1Encoding ReEncodeFont }8 68.7422
/Utopia-Italic rf /Fg 74[38 181[{}1 68.7422 /Fourier-Math-Letters-Italic
rf /Fh 22[35 35 7[36 31[44 42[28 28[33 1[35 42 24 30
27 41 42 40 43 63 19 2[20 42 36 22 35 41 34 41 36 7[40
43 1[44 54 43 37 44 1[41 52 54 65 39 2[24 2[40 42 54
1[44 44 1[27 1[39 1[18 18 3[36 36 36 1[36 36 36 1[18
27 18 2[24 24 19 36[42 2[{ TeXBase1Encoding ReEncodeFont }61
68.7422 /Utopia-Regular rf /Fi 23[36 114[43 25 31 30
41 42 40 2[21 2[22 43 37 1[36 1[34 1[37 9[64 1[54 43
39 47 2[53 51 63 1[49 1[26 5[47 1[44 65[{
 TeXBase1Encoding ReEncodeFont }27 68.7422 /Utopia-Bold
rf /Fj 135[26 2[32 18 3[33 31 33 1[15 2[16 2[17 27 1[27
15[29 2[32 80[{ TeXBase1Encoding ReEncodeFont }13 53.4661
/Utopia-Regular rf /Fk 135[27 120[{ TeXBase1Encoding ReEncodeFont }1
51.9385 /Utopia-Italic rf /Fm 58[37 35[37 161[{}2 51.9385
/Fourier-Math-Symbols rf /Fn 93[24 24 161[{}2 61.1041
/Fourier-Math-Extension rf /Fo 204[28 28 28 49[{
 TeXBase1Encoding ReEncodeFont }3 51.9385 /Utopia-Regular
rf /Fp 58[44 35[44 111[62 49[{}3 61.1042 /Fourier-Math-Symbols
rf /Fq 135[32 35[37 16[40 67[{ TeXBase1Encoding ReEncodeFont }3
61.1042 /Utopia-Italic rf /Fr 137[31 37 21 27 24 2[35
38 1[17 2[18 3[31 37 30 37 32 16[37 29[32 32 32 2[24
3[21 21 40[{ TeXBase1Encoding ReEncodeFont }21 61.1042
/Utopia-Regular rf /Ft 204[24 24 50[{ TeXBase1Encoding ReEncodeFont }2
45.8281 /Utopia-Regular rf /Fu 135[30 2[36 6[36 11[32
33 29[38 37 36 65[{ TeXBase1Encoding ReEncodeFont }8
58.049 /Utopia-Italic rf /Fw 65[47 47 6[34 34 31 31 16[30
30 35[34 34 34 34 9[76 46[45 45 14[45 45 48[{}17 76.3801
/Fourier-Math-Extension rf /Fx 221[90 34[{}1 76.3802
/fourier-orns rf /Fy 225[60 30[{}1 83.022 /EURM10 rf
/Fz 247[83 6[42 1[{}2 83.022 /LINE10 rf /FA 57[42 42
26[42 42 5[42 1[42 112[17 48[{}7 58.049 /Fourier-Math-Symbols
rf /FB 173[51 82[{}1 76.3801 /Fourier-Math-BlackBoard
rf /FC 140[25 2[35 33 1[54 16 2[17 3[30 2[35 40[31 31
31 31 31 31 31 31 31 31 1[15 1[15 2[20 20 40[{
 TeXBase1Encoding ReEncodeFont }22 58.049 /Utopia-Regular
rf /FD 172[60 15[57 67[{}2 76.3802 /Fourier-Math-Cal
rf /FE 55[55 1[55 55 8[55 3[55 13[55 55 5[55 21 55 48[64
52[57 3[0 4[45 78 7[76 76 6[76 33[{}18 76.3802 /Fourier-Math-Symbols
rf /FF 134[36 39 1[39 47 26 5[47 2[42 24 24 46 38 24
1[45 34 43 43 8[48 3[46 41 5[70 3[26 5[50 48 48 65[{
 TeXBase1Encoding ReEncodeFont }24 76.3802 /Utopia-Italic
rf /FG 93[54 162[{}1 76.3802 /Fourier-Math-Letters rf
/FI 4[46 16[39 39 39 38 6[40 36[34 15[34 20[38 31 23[26
1[26 37 39 37 1[38 46 26 33 30 45 46 44 47 70 21 1[21
22 46 40 24 39 46 38 46 40 3[25 1[25 2[48 1[48 1[47 41
2[46 58 1[72 43 2[27 2[44 46 60 52 1[49 3[44 1[20 20
40 40 40 40 40 40 40 40 40 40 35 20 30 20 2[27 27 21
35[47 47 2[{ TeXBase1Encoding ReEncodeFont }74 76.3802
/Utopia-Regular rf /FJ 22[40 40 111[40 1[40 48 28 34
34 46 47 45 49 72 24 2[24 1[41 26 40 46 38 1[42 14[52
12[48 59 53 8[21 43 43 43 43 43 43 43 43 43 43 1[21 46[{
 TeXBase1Encoding ReEncodeFont }37 76.3802 /Utopia-Bold
rf /FK 22[57 57 113[57 69 41 49 48 1[68 64 70 104 34
2[35 3[57 67 1[67 60 12[69 16[76 17[62 49[{
 TeXBase1Encoding ReEncodeFont }20 109.987 /Utopia-Bold
rf /FL 22[47 112[45 4[40 36 2[53 5[27 1[48 1[47 55 45
31[63 67[{ TeXBase1Encoding ReEncodeFont }11 91.6562
/Utopia-Regular rf /FM 22[68 82[66 32[80 45 58 51 78
80 1[82 122 37 2[38 80 2[68 1[65 1[69 12[82 6[125 77[{
 TeXBase1Encoding ReEncodeFont }18 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Compl\351ments sur la d\351rivation)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246 -246 a -246 -246 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246
-246 a -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246
a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 0 TeXcolorgray
815 166 a FM(M)n(ath\351matiques)30 b(\226)g(T)-13 b(er)q(minale)29
b(sp\351cialit\351)1496 577 y FL(C)o(orr)q(ig\351s)18
b(des)j(exer)n(cices)-246 937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end

-246 937 a -246 937 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246 937 a FK(T)-10 b(able)22 b(des)h(mati\350r)n
(es)p 0 0 1 TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a FJ(1)67
b(C)o(ompl\351ments)15 b(sur)h(la)f(d\351r)q(iv)o(ation)967
1120 y
SDict begin 12 H.L end
 967 1120 a 967 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 967 1120 a 0 TeXcolorgray
3136 w FJ(2)p 0 TeXcolorgray 1930 5895 a FI(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x FK(1)105 b(C)o(ompl\351ments)23
b(sur)h(la)f(d\351r)q(iv)n(ation)-246 -54 y
SDict begin H.S end
 -246 -54
a -246 -54 a
SDict begin 12 H.A end
 -246 -54 a -246 -54 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246 -54 a 0 TeXcolorgray
75 x FJ(Ex)o(er)o(cice)14 b(1)p 0 TeXcolorgray 42 w FI(La)j(fonction)27
b FF(f)36 b FI(est)18 b(d\351\002nie)f(sur)h(l)o('inter)q(valle)1517
22 y([)1542 21 y FE(\241)p FI(2;)8 b(6)1705 22 y(])1749
21 y(par)1596 220 y FF(f)19 b FI(\()r FF(x)5 b FI(\))14
b FE(\306)h FI(0,)8 b(5)r FF(x)1977 186 y FC(2)2024 220
y FE(\241)i FI(2)r FF(x)15 b FE(\241)10 b FI(4.)-246
420 y(P)n(our)17 b(tout)j FF(x)g FE(2)14 b FB(R)31 b
FI(:)1388 519 y FF(f)1431 485 y FA(0)1452 519 y FI(\()r
FF(x)5 b FI(\))14 b FE(\306)g FI(0,)8 b(5)i FE(\243)g
FI(2)r FF(x)15 b FE(\241)10 b FI(2)g FE(\243)g FI(1)g
FE(\241)g FI(0)19 b FE(\306)e FF(x)e FE(\241)10 b FI(2.)-246
669 y(La)16 b(d\351r)q(iv\351e)g(est)h(du)e(pr)o(emier)i(degr\351,)e
(donc)g(pour)i(obtenir)f(le)g(tableau)g(de)g(signe)o(,)g(il)g(faut)g
(r\351soudr)o(e)g(une)g(\351quation,)h(puis)g(r)o(egar)o(der)d(le)i
(signe)g(de)i FF(a)33 b FI(:)1809 851 y FF(x)15 b FE(\241)10
b FI(2)15 b FE(\306)g FI(0)1693 976 y FF(x)g FE(\241)1812
992 y Fz(\001)1812 976 y FI(2)d FE(\305)1929 992 y Fz(\001)1929
976 y FI(2)i FE(\306)h FI(0)10 b FE(\305)g FI(2)1925
1100 y FF(x)19 b FE(\306)c FI(2.)-244 1307 y FF(a)j FE(\306)d
FI(1)i(\(puisque)k FF(x)15 b FE(\241)10 b FI(2)19 b(signi\002e)p
1 0 0 TeXcolorrgb 17 w(1)p 0 TeXcolorgray 3 w FF(x)c
FE(\241)10 b FI(2\),)20 b FF(a)h FI(est)d FE(\251)f FI(donc)g(le)h
(signe)g(est)g(de)f(la)h(for)q(me)45 b FE(\241)18 b Fy(\036)f
FE(\305)p 2226 1225 262 4 v 2226 1349 4 127 v 2484 1349
V 2226 1351 262 4 v -246 1472 a FI(On)h(en)f(d\351duit)h(le)g(tableau)f
(de)h(signe)g(de)25 b FF(f)1031 1442 y FA(0)1069 1472
y FI(et)18 b(le)g(tableau)f(de)h(var)q(iations)f(de)25
b FF(f)51 b FI(:)p 0 TeXcolorgray 0 TeXcolorgray -19
1640 a

 -19 1640 a -19 1640 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 168
w FF(x)-19 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 111 w FF(f)135
1610 y FA(0)156 1640 y FI(\()r FF(x)5 b FI(\))-19 1640
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 122 w FF(f)18 b FI(\()r FF(x)5
b FI(\))-19 1640 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 50.96643 -14.40787 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FE(\241)p FI(2)-19
1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FI(2)-19 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.38297 ] concat

 pgfs


 -19 1640
a
 0 setgray
 -19 1640 a FI(6)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FE(\241)-19
1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FI(0)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 -19 1640
a
 0 setgray
 -19 1640 a FE(\305)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -57.47212 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a
-19 1640 a
 0 setgray
 -19 1640 a FI(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -57.47212 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19
1640 a -19 1640 a
 0 setgray
 -19 1640 a FI(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.68742 ] concat

 pgfs


 -19 1640
a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FE(\241)p FI(6)-19
1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.68742 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FE(\241)p
FI(6)-19 1640 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.96579 -57.71567 moveto

 110.95607 -76.13242 lineto

 pgfstr

 save

 [0.9283 -0.37172 0.37172 0.9283 110.95605 -76.13242 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 -19 1640
a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FI(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 -19
1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FI(2)-19 1640
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 136.30339 -77.02061 moveto

 182.29369 -58.60347 lineto

 pgfstr

 save

 [0.9283 0.37172 -0.37172 0.9283 182.29367 -58.60347 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 1946 2415
9 777 v 0 TeXcolorgray 1992 1721 a FI(P)n(our)16 b(compl\351ter)j(l)o
('extr\351mit\351)h(des)d(\003\350ches)o(,)i(on)e(calcule)h(:)p
0 TeXcolorgray 2161 1821 a(\225)p 0 TeXcolorgray 50 w
FF(f)h FI(\()p FE(\241)p FI(2\))14 b FE(\306)g FI(0,)8
b(5)i FE(\243)g FI(\()p FE(\241)p FI(2\))2849 1791 y
FC(2)2896 1821 y FE(\241)g FI(2)g FE(\243)g FI(\()p FE(\241)p
FI(2\))g FE(\241)g FI(4)16 b FE(\306)e FI(2)p 0 TeXcolorgray
2161 1920 a(\225)p 0 TeXcolorgray 50 w FF(f)19 b FI(\(2\))14
b FE(\306)g FI(0,)8 b(5)i FE(\243)g FI(2)2685 1890 y
FC(2)2733 1920 y FE(\241)g FI(2)g FE(\243)g FI(2)g FE(\241)g
FI(4)16 b FE(\306)e(\241)p FI(6)p 0 TeXcolorgray 2161
2020 a(\225)p 0 TeXcolorgray 50 w FF(f)19 b FI(\(6\))14
b FE(\306)g FI(0,)8 b(5)i FE(\243)g FI(6)2685 1990 y
FC(2)2733 2020 y FE(\241)g FI(2)g FE(\243)g FI(6)g FE(\241)g
FI(4)16 b FE(\306)e FI(2)1992 2169 y(On)j(peut)h(aussi)g(fair)o(e)g(un)
f(tableau)h(de)f(valeurs)h(\340)g(la)f(calculatr)q(ice)o(.)-246
2646 y FJ(R)o(emarque)d(:)k FI(La)f(courbe)g(r)o(epr\351sentative)i
(est)f(une)g(par)o(abole)o(,)g(dont)f(le)h(sommet)h FF(S)j
FI(a)17 b(pour)h(coor)o(donn\351es)f(\(2;)8 b FE(\241)p
FI(6\).)p 0 TeXcolorgray 0 TeXcolorgray 908 3778 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 250.95338 a add def
/d 0.0 a add neg def /h 123.20035 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 908
3778 a 1466 3041 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35818 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 183.8049 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 14.22636 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 34.42776 0.0 -88.77258   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 183.8049  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 183.8049  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-88.77258  def /maxTickline 34.42776  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 34.42776
0.0 -88.77258   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 183.8049
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 34.42776  0 -88.77258  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -88.77258
 34.42776  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 183.8049  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 14.22636  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 34.42776
0.0 -88.77258   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 183.8049
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1451 3138 a FC(0)205
b(1)g(2)g(3)g(4)g(5)-1469 b FA(\241)p FC(1)-309 b FA(\241)p
FC(2)1377 3060 y(0)1335 3178 y FA(\241)p FC(1)1335 3296
y FA(\241)p FC(2)1335 3414 y FA(\241)p FC(3)1335 3533
y FA(\241)p FC(4)1335 3651 y FA(\241)p FC(5)1335 3769
y FA(\241)p FC(6)1377 2942 y(1)1466 3041 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1466 3041
a 1466 3041 a
tx@Dict begin { 56.90549 -85.35818 } PutCoor PutBegin  end
 1466 3041 a 1466 3041 a
tx@Dict begin ps@rot  RotBegin  end
 1466 3041 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4. def /x1 4. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 14.22636 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 14.22636
mul gt { moveto } { dup -1.e30 14.22636 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1466 3041 a
tx@Dict begin RotEnd  end
 1466 3041 a 1466
3041 a
tx@Dict begin  PutEnd  end
 1466 3041 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
-85.35818   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1466 3041 a
tx@Dict begin { 59.18175 -82.51295 } PutCoor PutBegin  end
 1466 3041 a 1 0 0 TeXcolorrgb -1 x FF(S)p
0 TeXcolorgray 1466 3041 a
tx@Dict begin  PutEnd  end
 1466 3041 a 2992 3778 a
currentpoint initclip moveto
 2992
3778 a -246 3861 a
SDict begin H.S end
 -246 3861 a -246 3861 a
SDict begin 12 H.A end
 -246 3861
a -246 3861 a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3861 a 0 TeXcolorgray 116 x FJ(Ex)o(er)o(cice)14
b(2)p 0 TeXcolorgray 42 w FI(On)j(consid\350r)o(e)g(un)h(segment)1052
3978 y([)1084 3977 y FF(A)s(B)1190 3978 y FI(])1233 3977
y(de)f(longueur)h(4)g(et)g(un)f(point)i(mobile)h FF(M)25
b FI(pouvant)18 b(se)g(d\351placer)g(libr)o(ement)g(sur)g(ce)f
(segment.)p 0 TeXcolorgray 0 TeXcolorgray 1382 4460 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 136.85764 a add def
/d 0.0 a add neg def /h 44.95538 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end

1382 4460 a 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1240 4524 a
tx@Dict begin { 83.08195 42.67911 } PutCoor PutBegin  end
 1240 4524 a 51 x FI(4)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524
a 1240 4524 a
tx@Dict begin { 42.67911 19.91682 } PutCoor PutBegin  end
 1240 4524 a 1242 4562 a FF(x)1240 4524
y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
39.83366 91.04869 39.83366   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
39.83366 79.66776 39.83366   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
17.07181 39.83366 17.07181   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 62.59595
17.07181 51.21501 17.07181   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1240 4524 a
tx@Dict begin { 24.185 30.729 } PutCoor PutBegin  end
 1240
4524 a 6 w FF(A)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1240 4524 a
tx@Dict begin { 143.97081 30.729 } PutCoor PutBegin  end
 1240 4524 a FF(B)1240
4524 y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 62.59595 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1240 4524 a
tx@Dict begin { 64.30304 30.729 } PutCoor PutBegin  end
 1240 4524 a 2 w FF(M)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524
a 2518 4460 a
currentpoint initclip moveto
 2518 4460 a -246 4643 a FI(On)h(note)i
FF(x)i FI(la)c(longueur)g(du)f(segment)946 4644 y([)977
4643 y FF(A)5 b(M)1107 4644 y FI(])1150 4643 y(et)26
b FF(f)19 b FI(\()r FF(x)5 b FI(\))17 b(le)g(produit)h(des)f(longueurs)
25 b FF(A)5 b(M)17 b FE(\243)10 b FF(B)f(M)e FI(.)-246
4691 y
SDict begin H.S end
 -246 4691 a -246 4691 a
SDict begin 12 H.A end
 -246 4691 a -246 4691
a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 4691 a 0 TeXcolorgray -141 4787 a FI(1.)p 0 TeXcolorgray
43 w FF(B)i(M)23 b FE(\306)d FF(A)s(B)e FE(\241)e FF(A)5
b(M)22 b FE(\306)14 b FI(4)c FE(\241)i FF(x)5 b FI(,)19
b(donc)1688 4969 y FF(f)g FI(\()r FF(x)5 b FI(\))14 b
FE(\306)20 b FF(A)5 b(M)18 b FE(\243)10 b FF(B)f(M)1845
5094 y FE(\306)16 b FF(x)f FE(\243)10 b FI(\(4)g FE(\241)i
FF(x)5 b FI(\))1845 5218 y FE(\306)16 b FF(x)f FE(\243)10
b FI(4)g FE(\305)i FF(x)j FE(\243)10 b FI(\()p FE(\241)r
FF(x)5 b FI(\))1845 5354 y FE(\306)14 b FI(4)r FF(x)h
FE(\241)d FF(x)2121 5320 y FC(2)2157 5354 y FI(.)p 0
TeXcolorgray 1930 5895 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FI(2.)p
0 TeXcolorgray 43 w(Le)20 b(produit)f(des)h(longueurs)26
b FF(A)5 b(M)19 b FE(\243)11 b FF(B)e(M)27 b FI(est)20
b(donn\351)g(par)27 b FF(f)19 b FI(\()r FF(x)5 b FI(\),)20
b(donc)f(maximiser)i(ce)e(produit)g(r)o(evient)i(\340)e(maximiser)i(la)
e(fonction)29 b FF(f)17 b FI(.)j(On)-38 -63 y(\351tudie)e(donc)f(les)h
(var)q(iations)35 b(:)18 b(pour)f(tout)j FF(x)g FE(2)1380
-62 y FI([)1406 -63 y(0;)8 b(4)1514 -62 y(])1548 -63
y(,)1594 120 y FF(f)1637 85 y FA(0)1658 120 y FI(\()r
FF(x)d FI(\))14 b FE(\306)h FI(4)10 b FE(\243)g FI(1)g
FE(\241)g FI(2)r FF(x)21 b FE(\306)14 b(\241)p FI(2)r
FF(x)h FE(\305)10 b FI(4.)-38 317 y(On)17 b(r\351sout)h(:)1863
614 y FE(\241)p FI(2)r FF(x)d FE(\305)10 b FI(4)16 b
FE(\306)e FI(0)1747 738 y FE(\241)p FI(2)r FF(x)h FE(\305)1963
754 y Fz(\001)1963 738 y FI(4)d FE(\241)2080 754 y Fz(\001)2080
738 y FI(4)j FE(\306)f FI(0)c FE(\241)g FI(4)1961 857
y Fz(\010)1990 843 y(\010)1969 855 y FE(\241)p FI(2)r
FF(x)p 1969 892 142 5 v 1984 970 a Fz(\010)2013 956 y(\010)1992
968 y FE(\241)p FI(2)2135 911 y FE(\306)2214 855 y(\241)p
FI(4)p 2214 892 96 5 v 2214 968 a FE(\241)p FI(2)2076
1071 y FF(x)20 b FE(\306)14 b FI(2.)-36 1293 y FF(a)k
FE(\306)c(\241)p FI(2,)20 b FF(a)h FI(est)d FE(\252)f
FI(donc)g(le)h(signe)g(est)g(de)f(la)g(for)q(me)46 b
FE(\305)17 b Fy(\036)h FE(\241)p 1472 1210 262 4 v 1472
1335 4 127 v 1730 1335 V 1472 1337 262 4 v -38 1472 a
FI(On)f(obtient)h(le)g(tableau)g(de)f(signe)h(de)25 b
FF(f)1160 1442 y FA(0)1198 1472 y FI(et)18 b(le)g(tableau)g(de)f(var)q
(iations)h(de)25 b FF(f)50 b FI(:)p 0 TeXcolorgray 0
TeXcolorgray 137 1640 a

 137 1640 a 137 1640 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 137 1640
a
 0 setgray
 137 1640 a 167 w FF(x)137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640
a 111 w FF(f)291 1610 y FA(0)312 1640 y FI(\()r FF(x)5
b FI(\))137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a 121 w FF(f)19
b FI(\()r FF(x)5 b FI(\))137 1640 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640
a FI(0)137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FI(2)137 1640
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FI(4)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 137 1640 a
 0 setgray
 137
1640 a FE(\305)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FI(0)137
1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FE(\241)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 54.70424 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.6968 -84.73721 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 54.70424 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.6968 -84.73721 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 122.74042 -53.32764 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 124.73297 -51.33508 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 122.74042 -53.32764 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 124.73297 -51.33508 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 62.47359 -81.90782 moveto

 116.81953 -55.225 lineto

 pgfstr

 save

 [0.8976 0.44069 -0.44069 0.8976 116.81952 -55.22502 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -84.73721 ] concat

 pgfs


 137 1640 a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640
a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -84.73721 ] concat

 pgfs


 137 1640 a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640
a 137 1640 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 130.51335 -54.17204 moveto

 184.85928 -80.85486 lineto

 pgfstr

 save

 [0.8976 -0.44069 0.44069 0.8976 184.85927 -80.85484 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
2050 2415 9 777 v 0 TeXcolorgray 2095 1721 a FI(Il)14
b(n)-6 b('est)14 b(pas)g(utile)g(ici)g(de)g(compl\351ter)g(l)o
('extr\351mit\351)g(des)g(\003\350ches)g(:)g(tout)2095
1821 y(ce)k(qui)g(nous)h(int\351r)o(esse)o(,)f(c)n('est)h(la)f(valeur)g
(de)h FF(x)k FI(pour)18 b(laquelle)28 b FF(f)37 b FI(at-)2095
1920 y(teint)19 b(son)f(maximum.)-38 2611 y(C)o(onclusion)e(:)23
b FF(f)34 b FI(atteint)16 b(son)f(maximum)i(lorsque)h
FF(x)h FE(\306)14 b FI(2,)i(donc)e(le)h(produit)21 b
FF(A)5 b(M)11 b FE(\243)t FF(B)e(M)24 b FI(est)15 b(maximal)h(lorsque)i
FF(x)i FE(\306)14 b FI(2)h(;)g(c)n('est-\340-dir)o(e)f(quand)-36
2711 y FF(M)25 b FI(est)18 b(le)g(milieu)h(de)594 2712
y([)625 2711 y FF(A)s(B)731 2712 y FI(])765 2711 y(.)-246
2904 y FJ(R)o(emarque)14 b(:)k FI(C)o(et)f(exemple)j(est)e(celui)g(qu)n
('a)f(choisi)h(F)m(er)q(mat)g(vers)g(1637)h(pour)f(exposer)g(sa)f
(m\351thode)i(de)e(l)o('ad\351galit\351)h(\226)g(anc\352tr)o(e)f(de)g
(la)g(d\351r)q(ivation)-246 3004 y(\226)h(pour)f(d\351ter)q(miner)h(le)
g(maximum)h(et)f(le)g(minimum)i(d)n('une)e(fonction.)-246
3087 y
SDict begin H.S end
 -246 3087 a -246 3087 a
SDict begin 12 H.A end
 -246 3087 a -246 3087
a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246 3087 a 0 TeXcolorgray 116 x FJ(Ex)o(er)o(cice)c(3)p
0 TeXcolorgray 42 w FI(La)j(fonction)k FF(g)26 b FI(est)18
b(d\351\002nie)g(sur)f FB(R)g FI(par)1438 3402 y FF(g)10
b FI(\()r FF(x)5 b FI(\))13 b FE(\306)i FI(0,)8 b(5)r
FF(x)1823 3368 y FC(3)1870 3402 y FE(\305)i FI(0,)e(75)r
FF(x)2129 3368 y FC(2)2176 3402 y FE(\241)i FI(3)r FF(x)15
b FE(\241)10 b FI(1.)-246 3602 y(P)n(our)17 b(tout)j
FF(x)g FE(2)14 b FB(R)31 b FI(:)984 3801 y FF(g)1032
3767 y FA(0)1053 3801 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g
FI(0,)8 b(5)i FE(\243)g FI(3)r FF(x)1505 3767 y FC(2)1553
3801 y FE(\305)g FI(0,)e(75)i FE(\243)g FI(2)r FF(x)15
b FE(\241)10 b FI(3)g FE(\243)g FI(1)g FE(\241)g FI(0)19
b FE(\306)14 b FI(1,)8 b(5)r FF(x)2514 3767 y FC(2)2561
3801 y FE(\305)i FI(1,)e(5)r FF(x)15 b FE(\241)10 b FI(3.)-246
3950 y(La)18 b(d\351r)q(iv\351e)g(est)g(du)f(second)g(degr\351,)g(donc)
g(on)h(utilise)h(la)f(m\351thode)g(de)f(la)h(classe)g(de)f(pr)o
(emi\350r)o(e)h(:)p 0 TeXcolorgray -76 4050 a(\225)p
0 TeXcolorgray 44 w FF(a)g FE(\306)c FI(1,)8 b(5,)19
b FF(b)f FE(\306)c FI(1,)8 b(5,)19 b FF(c)h FE(\306)14
b(\241)p FI(3.)p 0 TeXcolorgray -76 4150 a(\225)p 0 TeXcolorgray
42 w(le)k(discr)q(iminant)g(est)g FG(\242)c FE(\306)h
FF(b)838 4119 y FC(2)882 4150 y FE(\241)10 b FI(4)r FF(a)t(c)21
b FE(\306)14 b FI(1,)8 b(5)1268 4119 y FC(2)1314 4150
y FE(\241)i FI(4)g FE(\243)g FI(1,)e(5)i FE(\243)g FI(\()p
FE(\241)p FI(3\))17 b FE(\306)d FI(20,)8 b(25.)p 0 TeXcolorgray
-76 4249 a(\225)p 0 TeXcolorgray 42 w FG(\242)14 b FE(\310)h
FI(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1111
4571 y FF(x)1152 4583 y FC(1)1202 4571 y FE(\306)1281
4515 y(\241)p FF(b)c FE(\241)1458 4449 y(p)p 1522 4449
55 5 v 66 x FG(\242)p 1281 4552 296 5 v 1384 4628 a FI(2)r
FF(a)1600 4571 y FE(\306)1679 4515 y(\241)p FI(1,)8 b(5)i
FE(\241)1917 4455 y(p)p 1983 4455 191 5 v 1983 4515 a
FI(20,)e(25)p 1679 4552 494 5 v 1814 4628 a(2)i FE(\243)g
FI(1,)e(5)2197 4571 y FE(\306)2276 4515 y(\241)p FI(1,)g(5)i
FE(\241)g FI(4,)e(5)p 2276 4552 350 5 v 2431 4628 a(3)2650
4571 y FE(\306)2729 4515 y(\241)p FI(6)p 2729 4552 96
5 v 2756 4628 a(3)2848 4571 y FE(\306)15 b(\241)p FI(2,)1111
4803 y FF(x)1152 4815 y FC(2)1202 4803 y FE(\306)1281
4747 y(\241)p FF(b)f FE(\305)1458 4681 y(p)p 1522 4681
55 5 v 66 x FG(\242)p 1281 4784 296 5 v 1384 4860 a FI(2)r
FF(a)1600 4803 y FE(\306)1679 4747 y(\241)p FI(1,)8 b(5)i
FE(\305)1917 4688 y(p)p 1983 4688 191 5 v 1983 4747 a
FI(20,)e(25)p 1679 4784 494 5 v 1814 4860 a(2)i FE(\243)g
FI(1,)e(5)2197 4803 y FE(\306)2276 4747 y(\241)p FI(1,)g(5)i
FE(\305)g FI(4,)e(5)p 2276 4784 350 5 v 2431 4860 a(3)2650
4803 y FE(\306)2729 4747 y FI(3)p 2729 4784 41 5 v 2729
4860 a(3)2793 4803 y FE(\306)15 b FI(1.)-244 5098 y FF(a)j
FE(\306)d FI(1,)8 b(5)20 b FF(a)h FI(est)d FE(\251)f
FI(donc)g(le)h(signe)g(est)g(de)f(la)h(for)q(me)45 b
FE(\305)18 b Fy(\036)27 b FE(\241)h Fy(\036)17 b FE(\305)p
1258 5016 432 4 v 1258 5140 4 127 v 1686 5140 V 1258
5142 432 4 v 0 TeXcolorgray 0 TeXcolorgray -153 5266
a

 -153 5266 a -153 5266 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 168
w FF(x)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -32.41563 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 106 w FF(g)1
5235 y FA(0)21 5266 y FI(\()r FF(x)5 b FI(\))-153 5266
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -61.64621 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 116 w FF(g)10 b FI(\()r FF(x)5
b FI(\))-153 5266 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -79.37216 lineto

 238.11656 -79.37216 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -79.37216 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -79.37216 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 41.63185 -11.9539 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FE(\2411)-153
5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FE(\241)p FI(2)-153 5266
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FI(1)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 220.21606 -12.47694 ] concat

 pgfs


 -153 5266
a
 0 setgray
 -153 5266 a FE(\3051)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -32.32106 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266
a FE(\305)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FI(0)-153
5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -31.19028 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FE(\241)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 -153
5266 a
 0 setgray
 -153 5266 a FI(0)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -32.32106 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153
5266 a FE(\305)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -73.3945 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153
5266 a
 0 setgray
 -153 5266 a -153 5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -73.3945 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266
a -153 5266 a
 0 setgray
 -153 5266 a -153 5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 104.71327 -53.79332 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.70583 -51.80077 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153
5266 a -153 5266 a
 0 setgray
 -153 5266 a FI(4)-153 5266 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 104.71327 -53.79332 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.70583 -51.80077 ] concat

 pgfs


 -153
5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266 a FI(4)-153
5266 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 55.43437 -70.98253 moveto

 98.67314 -53.06723 lineto

 pgfstr

 save

 [0.92378 0.38275 -0.38275 0.92378 98.67314 -53.06725 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 27.59682 154.86748 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 156.86003 -73.31482 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153
5266 a -153 5266 a
 0 setgray
 -153 5266 a FE(\241)p FI(2.75)-153
5266 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 27.59682 154.86748 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 156.86003 -73.31482 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266
a FE(\241)p FI(2.75)-153 5266 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 117.42827 -51.73431 moveto

 148.7563 -63.08159 lineto

 pgfstr

 save

 [0.9402 -0.34055 0.34055 0.9402 148.75629 -63.08159 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -47.65628 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -45.66373 ] concat

 pgfs



-153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266 a -153
5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -47.65628 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -45.66373 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266
a -153 5266 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 186.30136 -62.99704 moveto

 220.16368 -48.9875 lineto

 pgfstr

 save

 [0.924 0.38228 -0.38228 0.924 220.16367 -48.9875 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
1946 5664 9 401 v 0 TeXcolorgray 0 TeXcolorgray 2161
5347 a FI(\225)p 0 TeXcolorgray 44 w FF(g)10 b FI(\()p
FE(\241)p FI(2\))k FE(\306)g FI(0,)8 b(5)i FE(\243)g
FI(\()p FE(\241)p FI(2\))2848 5317 y FC(3)2895 5347 y
FE(\305)g FI(0,)e(75)i FE(\243)g FI(\()p FE(\241)p FI(2\))3332
5317 y FC(2)3379 5347 y FE(\241)g FI(3)g FE(\243)g FI(\()p
FE(\241)p FI(2\))g FE(\241)g FI(1)16 b FE(\306)e FI(4)p
0 TeXcolorgray 2161 5447 a(\225)p 0 TeXcolorgray 44 w
FF(g)c FI(\(1\))k FE(\306)g FI(0,)8 b(5)i FE(\243)g FI(1)2684
5416 y FC(3)2731 5447 y FE(\305)g FI(0,)e(75)i FE(\243)g
FI(1)3059 5416 y FC(2)3107 5447 y FE(\241)g FI(3)g FE(\243)g
FI(1)g FE(\241)g FI(1)16 b FE(\306)f(\241)p FI(2,)8 b(75)p
0 TeXcolorgray 1930 5895 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -163 a FJ(R)o(emarque)14 b(:)k FI(V)-5 b(oici)17
b(\340)g(quoi)h(r)o(essemble)h(la)e(courbe)g(r)o(epr\351sentative)i(:)p
0 TeXcolorgray 0 TeXcolorgray 996 947 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 229.89821 a add def
/d 0.0 a add neg def /h 122.06221 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 996 947 a 1959
458 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90546 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 113.81097 0.0 -116.08723 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 14.22636 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 63.16508 0.0 -58.89713   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 113.81097  0 -116.08723  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -116.08723
 113.81097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-58.89713  def /maxTickline 63.16508  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.16508
0.0 -58.89713   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
0.0 -116.08723 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 63.16508  0 -58.89713  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -58.89713
 63.16508  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-116.08723  def /maxTickline 113.81097  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 14.22636  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.16508
0.0 -58.89713   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
0.0 -116.08723 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1944 555 a FC(0)205 b(1)g(2)h(3)-997
b FA(\241)p FC(1)-309 b FA(\241)p FC(2)g FA(\241)p FC(3)f
FA(\241)p FC(4)1871 477 y(0)1829 595 y FA(\241)p FC(1)1829
714 y FA(\241)p FC(2)1829 832 y FA(\241)p FC(3)1829 950
y FA(\241)p FC(4)1871 359 y(1)1871 241 y(2)1871 123 y(3)1959
458 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.08 def /x1 4.0
def /dx x1 x sub 199 div def /F@pstplot (0.5*x^(3.0)+0.75*x^(2.0)-3.0*x-1.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
14.22636 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 14.22636 mul gt { moveto } {
dup -1.e30 14.22636 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2904 947
a
currentpoint initclip moveto
 2904 947 a -246 1018 a
SDict begin H.S end
 -246 1018 a -246 1018 a
SDict begin 12 H.A end
 -246
1018 a -246 1018 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 1018 a 0 TeXcolorgray 121 x FJ(Ex)o(er)o(cice)
14 b(4)p 0 TeXcolorgray 42 w FI(La)j(fonction)i FF(h)i
FI(est)d(d\351\002nie)g(sur)1131 1140 y([)1156 1139 y(1;)8
b FE(\3051)1357 1140 y FI([)1401 1139 y(par)1660 1338
y FF(h)t FI(\()r FF(x)d FI(\))15 b FE(\306)f FI(\()r
FF(x)h FE(\241)10 b FI(6\))2109 1276 y FE(p)p 2173 1276
47 5 v 2175 1338 a FF(x)c FI(.)-246 1480 y(On)18 b(utilise)h(la)e(for)q
(mule)h(pour)g(la)g(d\351r)q(iv\351e)f(d)n('un)h(produit)g(avec)637
1651 y FF(u)t FI(\()r FF(x)5 b FI(\))15 b FE(\306)h FF(x)f
FE(\241)10 b FI(6)884 b(,)h FF(v)7 b FI(\()r FF(x)e FI(\))14
b FE(\306)3051 1589 y(p)p 3115 1589 V 3117 1651 a FF(x)5
b FI(,)637 1821 y FF(u)688 1787 y FA(0)710 1821 y FI(\()r
FF(x)g FI(\))14 b FE(\306)g FI(1)984 b(,)885 b FF(v)2868
1787 y FA(0)2889 1821 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)3137
1765 y FI(1)p 3082 1802 151 5 v 3082 1882 a(2)3122 1824
y FE(p)p 3186 1824 47 5 v 3188 1882 a FF(x)3243 1821
y FI(.)-246 2170 y(On)k(obtient,)g(pour)g(tout)i FF(x)f
FE(2)629 2171 y FI([)654 2170 y(1;)8 b FE(\3051)855 2171
y FI([)913 2170 y(:)889 2341 y FF(h)939 2306 y FA(0)960
2341 y FI(\()r FF(x)d FI(\))15 b FE(\306)f FF(u)1195
2306 y FA(0)1216 2341 y FI(\()r FF(x)5 b FI(\))10 b FE(\243)i
FF(v)7 b FI(\()r FF(x)e FI(\))10 b FE(\305)g FF(u)t FI(\()r
FF(x)5 b FI(\))10 b FE(\243)i FF(v)1888 2306 y FA(0)1910
2341 y FI(\()r FF(x)5 b FI(\))1075 2511 y FE(\306)14
b FI(1)c FE(\243)1259 2449 y(p)p 1323 2449 V 1325 2511
a FF(x)16 b FE(\305)10 b FI(\()r FF(x)15 b FE(\241)10
b FI(6\))g FE(\243)1801 2455 y FI(1)p 1746 2492 151 5
v 1746 2572 a(2)1786 2514 y FE(p)p 1850 2514 47 5 v 1852
2572 a FF(x)1075 2744 y FE(\306)1154 2629 y(p)p 1217
2629 V 1219 2687 a FF(x)16 b FE(\243)10 b FI(2)1379 2629
y FE(p)p 1443 2629 V 1445 2687 a FF(x)p 1154 2724 336
5 v 1246 2804 a FI(2)1286 2746 y FE(p)p 1350 2746 47
5 v 1352 2804 a FF(x)1510 2744 y FE(\305)1587 2687 y
FF(x)15 b FE(\241)10 b FI(6)p 1585 2724 163 5 v 1591
2804 a(2)1631 2746 y FE(p)p 1695 2746 47 5 v 1697 2804
a FF(x)1075 2960 y FE(\306)1185 2904 y FI(2)r FF(x)p
1154 2941 151 5 v 1154 3021 a FI(2)1194 2963 y FE(p)p
1258 2963 47 5 v 1260 3021 a FF(x)1324 2960 y FE(\305)1401
2904 y FF(x)15 b FE(\241)10 b FI(6)p 1399 2941 163 5
v 1405 3021 a(2)1445 2963 y FE(p)p 1509 2963 47 5 v 1511
3021 a FF(x)2018 2873 y Fw(\263)2049 2960 y FI(r)o(appel)19
b(:)2326 2898 y FE(p)p 2390 2898 V 2392 2960 a FF(x)d
FE(\243)2512 2898 y(p)p 2575 2898 V 2577 2960 a FF(x)k
FE(\306)2705 2898 y(p)p 2769 2898 V 2771 2960 a FF(x)2815
2914 y FC(2)2864 2960 y FE(\306)c FF(x)2979 2873 y Fw(\264)1075
3177 y FE(\306)1154 3121 y FI(3)r FF(x)f FE(\241)10 b
FI(6)p 1154 3158 203 5 v 1180 3238 a(2)1220 3180 y FE(p)p
1284 3180 47 5 v 1286 3238 a FF(x)1366 3177 y FI(.)p
0 TeXcolorgray -76 3434 a(\225)p 0 TeXcolorgray 42 w(On)17
b(r\351sout)h(r)o(apidement)h(:)1438 3567 y(3)r FF(x)c
FE(\241)10 b FI(6)16 b FE(\306)e FI(0)29 b FE(\()-12
b(\))29 b FI(3)r FF(x)20 b FE(\306)14 b FI(6)29 b FE(\()-12
b(\))31 b FF(x)20 b FE(\306)2510 3510 y FI(6)p 2510 3547
41 5 v 2510 3624 a(3)2575 3567 y FE(\306)14 b FI(2.)p
0 TeXcolorgray -76 3760 a(\225)p 0 TeXcolorgray 42 w(Dans)i(3)r
FF(x)f FE(\241)10 b FI(6,)22 b FF(a)c FE(\306)c FI(3)j
FE(\251)h FI(,)f(donc)45 b FE(\241)17 b Fy(\036)h FE(\305)p
925 3678 262 4 v 925 3803 4 127 v 1183 3803 V 925 3805
262 4 v 0 TeXcolorgray -76 3879 a FI(\225)p 0 TeXcolorgray
42 w(2)37 3821 y FE(p)p 101 3821 47 5 v 103 3879 a FF(x)k
FI(est)c(str)q(ictement)h(positif)g(pour)f(tout)i FF(x)g
FE(2)1396 3880 y FI([)1422 3879 y(1;)8 b FE(\3051)1623
3880 y FI([)1657 3879 y(.)-246 4024 y(On)18 b(a)f(donc)g(le)g(tableau)h
(:)p 0 TeXcolorgray 0 TeXcolorgray -19 4179 a

 -19 4179
a -19 4179 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 168 w FF(x)-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -37.04672 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 85 w FI(3)r FF(x)h FE(\241)13
b FI(6)-19 4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -59.78375 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 114 w FI(2)135
4121 y FE(p)p 199 4121 47 5 v 201 4179 a FF(x)-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.53096 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 99 w FF(h)130 4149 y FA(0)160
4180 y FI(\()189 4179 y FF(x)233 4180 y FI(\))-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -116.1969 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 110 w FF(h)149 4180 y FI(\()178
4179 y FF(x)222 4180 y FI(\))-19 4179 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.40787 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19
4179 a FI(1)-19 4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(2)-19
4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.78508 -13.89479 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FE(\3051)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 -19
4179 a
 0 setgray
 -19 4179 a FE(\241)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179
a FI(0)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FE(\305)-19 4179
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FE(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 -19 4179 a
 0 setgray

-19 4179 a FE(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FE(\241)-19
4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(0)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 -19 4179
a
 0 setgray
 -19 4179 a FE(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 48.97566 -104.87193 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -102.82957 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a
-19 4179 a
 0 setgray
 -19 4179 a FE(\241)p FI(5)-19 4179 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 48.97566 -104.87193 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -102.82957 ] concat

 pgfs


 -19 4179
a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FE(\241)p FI(5)-19
4179 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 13.83826 27.93555 110.7652 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 112.75775 -129.09691 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FE(\241)p
FI(4)76 4114 y FE(p)p 140 4114 41 5 v 65 x FI(2)-19 4179
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 13.83826 27.93555 110.7652 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 112.75775 -129.09691 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FE(\241)p
FI(4)76 4114 y FE(p)p 140 4114 41 5 v 65 x FI(2)-19 4179
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 68.28064 -104.11165 moveto

 104.67169 -117.69301 lineto

 pgfstr

 save

 [0.93683 -0.34961 0.34961 0.93683 104.67169 -117.693 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -98.68509 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -96.69254 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a
-19 4179 a
 0 setgray
 -19 4179 a -19 4179 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -98.68509 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -96.69254 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179
a -19 4179 a
 0 setgray
 -19 4179 a -19 4179 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 142.5386 -117.72867 moveto

 184.7506 -100.0574 lineto

 pgfstr

 save

 [0.9224 0.38612 -0.38612 0.9224 184.75058 -100.0574 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 1946 5332 9 1155 v 0 TeXcolorgray 0 TeXcolorgray
2161 4261 a FI(\225)p 0 TeXcolorgray 42 w FF(h)t FI(\(1\))i
FE(\306)f FI(\(1)c FE(\241)g FI(6\))g FE(\243)2746 4196
y(p)p 2810 4196 41 5 v 65 x FI(1)15 b FE(\306)f(\241)p
FI(5)c FE(\243)g FI(1)16 b FE(\306)e(\241)p FI(5)k(;)p
0 TeXcolorgray 2161 4360 a(\225)p 0 TeXcolorgray 42 w
FF(h)t FI(\(2\))d FE(\306)f FI(\(2)c FE(\241)g FI(6\))g
FE(\243)2746 4295 y(p)p 2810 4295 V 65 x FI(2)15 b FE(\306)f(\241)p
FI(4)3029 4295 y FE(p)p 3093 4295 V 65 x FI(2)q(.)-246
5407 y
SDict begin H.S end
 -246 5407 a -246 5407 a
SDict begin 12 H.A end
 -246 5407 a -246 5407
a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246 5407 a 0 TeXcolorgray 116 x FJ(Ex)o(er)o(cice)g(5)p
0 TeXcolorgray 42 w FI(La)20 b(fonction)30 b FF(f)40
b FI(est)21 b(d\351\002nie)g(sur)1151 5524 y([)1177 5523
y(1;)8 b(4)1285 5524 y(])1332 5523 y(par)28 b FF(f)19
b FI(\()r FF(x)5 b FI(\))18 b FE(\306)h FF(x)e FE(\305)1846
5467 y FI(4)p 1843 5504 47 5 v 1845 5580 a FF(x)1911
5523 y FE(\241)11 b FI(3.)22 b(On)e(note)i FD(C)34 b
FI(sa)21 b(courbe)f(r)o(epr\351sentative)o(,)28 b FF(A)s
FI(,)21 b FF(B)6 b FI(,)19 b FF(C)30 b FI(les)21 b(points)h(de)e
FD(C)-246 5646 y FI(d)n('abscisses)f(r)o(espectives)f(1,)g(2,)g(4)9
b(;)18 b(et)g FF(T)933 5658 y Fu(A)976 5646 y FI(,)f
FF(T)1061 5658 y Fu(B)1108 5646 y FI(,)g FF(T)1191 5658
y Fu(C)1258 5646 y FI(les)h(tangentes)h(\340)e FD(C)31
b FI(en)18 b(ces)g(points)o(.)p 0 TeXcolorgray 1930 5895
a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FI(1.)p
0 TeXcolorgray 43 w(P)n(our)17 b(d\351r)q(iver)-5 b(,)17
b(le)h(plus)h(simple)g(est)f(de)f(r\351\351cr)q(ir)o(e)24
b FF(f)19 b FI(\()r FF(x)5 b FI(\))17 b(sous)h(la)g(for)q(me)1725
36 y FF(f)h FI(\()r FF(x)5 b FI(\))14 b FE(\306)i FF(x)f
FE(\305)10 b FI(4)g FE(\243)2201 -20 y FI(1)p 2198 17
47 5 v 2200 93 a FF(x)2265 36 y FE(\241)g FI(3.)-38 224
y(On)17 b(obtient)h(alors)o(,)g(pour)g(tout)i FF(x)g
FE(2)1021 225 y FI([)1047 224 y(1;)8 b(4)1155 225 y(])1213
224 y(:)1648 427 y FF(f)1691 393 y FA(0)1712 427 y FI(\()r
FF(x)d FI(\))14 b FE(\306)h FI(1)10 b FE(\305)g FI(4)g
FE(\243)2126 317 y Fw(\265)2161 427 y FE(\241)2247 371
y FI(1)p 2226 408 82 5 v 2228 484 a FF(x)2272 460 y FC(2)2318
317 y Fw(\266)2362 427 y FE(\241)g FI(0)1826 638 y FE(\306)15
b FI(1)10 b FE(\241)2042 582 y FI(4)p 2021 619 V 2023
695 a FF(x)2067 671 y FC(2)1826 854 y FE(\306)1908 798
y FF(x)1952 768 y FC(2)p 1906 835 V 1908 911 a FF(x)1952
887 y FC(2)2007 854 y FE(\241)2103 798 y FI(4)p 2082
835 V 2084 911 a FF(x)2128 887 y FC(2)1826 1070 y FE(\306)1908
1014 y FF(x)1952 984 y FC(2)1997 1014 y FE(\241)g FI(4)p
1906 1051 198 5 v 1965 1127 a FF(x)2009 1103 y FC(2)-246
1192 y
SDict begin H.S end
 -246 1192 a -246 1192 a
SDict begin 12 H.A end
 -246 1192 a -246 1192
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246 1192 a 0 TeXcolorgray -141 1281 a FI(2.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Les)18
b(r)o(acines)g(de)h FF(x)627 1251 y FC(2)673 1281 y FE(\241)10
b FI(4)17 b(sont)h(\351videntes)i(:)d(ce)g(sont)j FF(x)1654
1293 y FC(1)1704 1281 y FE(\306)14 b(\241)p FI(2)k(et)i
FF(x)2012 1293 y FC(2)2061 1281 y FE(\306)15 b FI(2.)i(S)o(eule)i(la)f
(deuxi\350me)h(est)f(dans)f(l)o('inter)q(valle)3532 1282
y([)3557 1281 y(1;)8 b(4)3665 1282 y(])3700 1281 y(.)p
0 TeXcolorgray 7 1381 a(\225)p 0 TeXcolorgray 44 w FF(x)126
1350 y FC(2)178 1381 y FI(est)18 b(str)q(ictement)h(positif)g(pour)f
(tout)i FF(x)g FE(2)1410 1382 y FI([)1435 1381 y(1;)8
b(4)1543 1382 y(])1578 1381 y(.)-38 1492 y(On)17 b(obtient)h(donc)f(le)
h(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray 137 1641
a

 137 1641 a 137 1641 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a 167 w FF(x)137
1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -38.11853 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a 90 w FF(x)271 1611 y FC(2)319
1641 y FE(\241)13 b FI(4)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -60.79727 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641
a 150 w FF(x)331 1611 y FC(2)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.0266 ] concat

 pgfs


 137 1641 a
 0 setgray
 137
1641 a 107 w FF(f)286 1611 y FA(0)316 1642 y FI(\()345
1641 y FF(x)389 1642 y FI(\))137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -115.69254 ] concat

 pgfs


 137 1641 a
 0 setgray
 137
1641 a 117 w FF(f)305 1642 y FI(\()334 1641 y FF(x)378
1642 y FI(\))137 1641 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.40787 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(1)137
1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(2)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FI(4)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FE(\241)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(0)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FE(\305)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a
FE(\305)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FE(\305)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FE(\241)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FI(0)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FE(\305)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FI(2)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FI(2)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 120.30951 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.30206 -130.09468 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FI(1)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 120.30951 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.30206 -130.09468 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FI(1)137
1641 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.96558 -103.07834 moveto

 114.25438 -122.83316 lineto

 pgfstr

 save

 [0.92819 -0.37201 0.37201 0.92819 114.25436 -122.83316 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641
a 137 1641 a
 0 setgray
 137 1641 a FI(2)137 1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137
1641 a 137 1641 a
 0 setgray
 137 1641 a FI(2)137 1641 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 133.00534 -123.72214 moveto

 182.29416 -103.96716 lineto

 pgfstr

 save

 [0.92819 0.37201 -0.37201 0.92819 182.29414 -103.96716 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2050 2794 9 1155 v 0 TeXcolorgray
2095 1725 a FI(Le)18 b(signe)f(de)i FF(x)2541 1695 y
FC(2)2585 1725 y FE(\241)9 b FI(4)18 b(sur)2833 1726
y(])2858 1725 y FE(\2411)p FI(;)8 b FE(\3051)3152 1726
y FI([)3194 1725 y(est)18 b(de)e(la)h(for)q(me)46 b FE(\305)17
b Fy(\036)28 b FE(\241)f Fy(\036)17 b FE(\305)p 3714
1643 432 4 v 3714 1767 4 127 v 4142 1767 V 3714 1769
432 4 v 2095 1834 a FI(M)o(ais)e(comme)h(on)f(tr)o(availle)g(sur)g(l)o
('inter)q(valle)3456 1835 y([)3481 1834 y(1;)8 b(4)3589
1835 y(])3624 1834 y(,)15 b(il)g(ne)g(r)o(este)f(plus)2095
1945 y(que)k(la)g(par)q(tie)f(droite)45 b FE(\241)18
b Fy(\036)f FE(\305)p 2767 1863 262 4 v 2767 1987 4 127
v 3025 1987 V 2767 1989 262 4 v 2095 2119 a FI(On)g(calcule)i(les)f
(valeurs)g(aux)f(extr\351mit\351s)j(des)d(\003\350ches)h(:)p
0 TeXcolorgray 2140 2233 a(\225)p 0 TeXcolorgray 50 w
FF(f)h FI(\(1\))14 b FE(\306)h FI(1)10 b FE(\305)2567
2200 y FC(4)p 2567 2213 31 5 v 2567 2262 a(1)2618 2233
y FE(\241)g FI(3)15 b FE(\306)f FI(2)k(;)p 0 TeXcolorgray
2140 2342 a(\225)p 0 TeXcolorgray 50 w FF(f)h FI(\(2\))14
b FE(\306)h FI(2)10 b FE(\305)2567 2309 y FC(4)p 2567
2322 V 2567 2370 a(2)2618 2342 y FE(\241)g FI(3)15 b
FE(\306)f FI(1)k(;)p 0 TeXcolorgray 2140 2450 a(\225)p
0 TeXcolorgray 50 w FF(f)h FI(\(4\))14 b FE(\306)h FI(4)10
b FE(\305)2567 2417 y FC(4)p 2567 2430 V 2567 2479 a(4)2618
2450 y FE(\241)g FI(3)15 b FE(\306)f FI(2.)-246 2865
y
SDict begin H.S end
 -246 2865 a -246 2865 a
SDict begin 12 H.A end
 -246 2865 a -246 2865 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246
2865 a 0 TeXcolorgray -141 2976 a FI(3.)p 0 TeXcolorgray
43 w(On)j(r)o(appelle)i(que)f(la)g(tangente)g(\340)f(la)g(courbe)h(en)f
(un)h(point)g(d)n('abscisse)j FF(a)g FI(a)c(pour)g(\351quation)1669
3140 y FF(y)k FE(\306)h FF(f)1846 3106 y FA(0)1868 3140
y FI(\()r FF(a)t FI(\)\()r FF(x)15 b FE(\241)d FF(a)t
FI(\))e FE(\305)18 b FF(f)g FI(\()r FF(a)t FI(\).)-38
3316 y(A)o(ppliquons)h(cette)f(for)q(mule)g(avec)h FF(a)f
FE(\306)d FI(1)i(\226)h(puisque)h(le)f(point)24 b FF(A)c
FI(a)d(pour)h(abscisse)g(1)32 b(:)-30 3482 y FF(f)19
b FI(\(1\))14 b FE(\306)g FI(2)k(\(d\351j\340)f(calcul\351\))h(et)26
b FF(f)860 3452 y FA(0)881 3482 y FI(\(1\))14 b FE(\306)1068
3449 y FC(1)1099 3426 y Ft(2)1127 3449 y FA(\241)p FC(4)p
1068 3462 132 5 v 1104 3516 a(1)1135 3498 y Ft(2)1224
3482 y FE(\306)1303 3449 y FA(\241)p FC(3)p 1303 3462
73 5 v 1324 3510 a(1)1400 3482 y FE(\306)g(\241)p FI(3,)k(donc)f(l)o
('\351quation)j(de)d FF(T)2318 3494 y Fu(A)2378 3482
y FI(est)1692 3658 y FF(y)k FE(\306)h FF(f)1869 3624
y FA(0)1890 3658 y FI(\(1\)\()r FF(x)15 b FE(\241)10
b FI(1\))g FE(\305)18 b FF(f)i FI(\(1\))1692 3783 y FF(y)h
FE(\306)14 b(\241)p FI(3\()r FF(x)h FE(\241)10 b FI(1\))g
FE(\305)g FI(2)1692 3908 y FF(y)21 b FE(\306)14 b(\241)p
FI(3)r FF(x)h FE(\305)10 b FI(3)g FE(\305)g FI(2)1692
4032 y FF(y)21 b FE(\306)14 b(\241)p FI(3)r FF(x)h FE(\305)10
b FI(5.)-38 4208 y(Le)17 b(point)24 b FF(A)c FI(a)c(pour)i(coor)o
(donn\351es)f(\(1;)8 b(2\),)17 b(puisque)27 b FF(f)19
b FI(\(1\))14 b FE(\306)g FI(2)k(;)f(la)g(tangente)g
FF(T)2314 4220 y Fu(A)2374 4208 y FI(passe)h(donc)f(par)g(ce)f(point.)j
(P)n(our)d(la)h(tr)o(acer)-5 b(,)17 b(il)h(faut)f(placer)-38
4307 y(un)h(deuxi\350me)g(point)h(\(c)n('est)f(une)g(droite\))9
b(;)16 b(ce)h(que)h(l)o('on)h(peut)f(fair)o(e)f(de)g(trois)h(fa\347ons)
g(diff\351r)o(entes)g(:)-246 4359 y
SDict begin H.S end
 -246 4359 a -246
4359 a
SDict begin 12 H.A end
 -246 4359 a -246 4359 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 4359 a 0 TeXcolorgray
-38 4453 a FI(\(a\))p 0 TeXcolorgray 41 w(L)-10 b('or)o(donn\351e)18
b(\340)f(l)o('or)q(igine)h(est)p 1 0 0 TeXcolorrgb 18
w(5)p 0 TeXcolorgray 17 w(\(puisque)h FF(T)1413 4465
y Fu(A)1471 4453 y FI(:)f FF(y)j FE(\306)15 b(\241)p
FI(3)r FF(x)p 1 0 0 TeXcolorrgb 5 w FE(\305)p FI(5)p
0 TeXcolorgray 1 w(\),)i(donc)g FF(T)2181 4465 y Fu(A)2242
4453 y FI(passe)h(par)f(le)h(point)h(de)e(coor)o(donn\351es)g(\(0;)8
b(5\).)-246 4483 y
SDict begin H.S end
 -246 4483 a -246 4483 a
SDict begin 12 H.A end
 -246 4483
a -246 4483 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 4483 a 0 TeXcolorgray -44 4575 a FI(\(b\))p
0 TeXcolorgray 41 w(Le)16 b(coef\002cient)h(dir)o(ecteur)f(de)g
FF(T)1060 4587 y Fu(A)1120 4575 y FI(est)p 0 0 1 TeXcolorrgb
17 w FE(\241)p FI(3)p 0 TeXcolorgray 16 w(\(puisque)i
FF(T)1720 4587 y Fu(A)1778 4575 y FI(:)g FF(y)j FE(\306)p
0 0 1 TeXcolorrgb 15 w(\241)p FI(3)p 0 TeXcolorgray 2
w FF(x)12 b FE(\305)c FI(5\),)17 b(donc)f(en)h(par)q(tant)f(de)22
b FF(A)s FI(,)16 b(il)h(suf\002t)g(d)n('avancer)f(de)g(1)h(carr)o(eau)e
(en)97 4675 y(abscisse)j(et)f(de)g(descendr)o(e)g(de)g(3)h(carr)o(eaux)
f(en)g(or)o(donn\351e)h(\226)f FF(T)1995 4687 y Fu(A)2056
4675 y FI(passe)h(donc)f(par)g(le)h(point)g(de)f(coor)o(donn\351es)h
(\(2;)8 b FE(\241)p FI(1\).)-246 4703 y
SDict begin H.S end
 -246 4703 a -246
4703 a
SDict begin 12 H.A end
 -246 4703 a -246 4703 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246 4703 a 0 TeXcolorgray
-36 4797 a FI(\(c\))p 0 TeXcolorgray 41 w(On)26 b(calcule)i(un)f
(deuxi\350me)h(point)g(avec)f(la)g(for)q(mule)g(:)g(par)g(exemple)o(,)i
(si)g FF(x)g FE(\306)23 b FI(2,)31 b FF(y)g FE(\306)23
b(\241)p FI(3)15 b FE(\243)e FI(2)i FE(\305)f FI(5)24
b FE(\306)f(\241)p FI(1.)k(On)g(obtient)h(le)f(point)h(de)97
4897 y(coor)o(donn\351es)17 b(\(2;)8 b FE(\241)p FI(1\))18
b(\(le)g(m\352me)g(qu)n('avec)g(la)g(m\351thode)g(\(b\)\))e(et)i(on)f
(tr)o(ace)h(la)f(tangente)o(.)-246 4950 y
SDict begin H.S end
 -246 4950 a
-246 4950 a
SDict begin 12 H.A end
 -246 4950 a -246 4950 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 4950 a 0 TeXcolorgray
-141 5056 a FI(4.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 50 w FF(f)i FI(\(2\))14 b FE(\306)g
FI(1)k(et)25 b FF(f)499 5025 y FA(0)521 5056 y FI(\(2\))14
b FE(\306)708 5023 y FC(2)739 5000 y Ft(2)767 5023 y
FA(\241)p FC(4)p 708 5036 132 5 v 744 5090 a(2)775 5071
y Ft(2)864 5056 y FE(\306)943 5023 y FC(0)p 943 5036
31 5 v 943 5084 a(4)998 5056 y FE(\306)g FI(0,)k(donc)f(l)o
('\351quation)j(de)d FF(T)1857 5068 y Fu(B)1921 5056
y FI(est)1751 5232 y FF(y)k FE(\306)h FF(f)1928 5198
y FA(0)1949 5232 y FI(\(2\)\()r FF(x)15 b FE(\241)10
b FI(2\))g FE(\305)18 b FF(f)i FI(\(2\))1751 5357 y FF(y)h
FE(\306)14 b FI(0\()r FF(x)h FE(\241)10 b FI(1\))g FE(\305)g
FI(1)1751 5481 y FF(y)21 b FE(\306)14 b FI(1.)80 5646
y(Le)k(coef\002cient)g(dir)o(ecteur)f(\351tant)h(\351gal)f(\340)g(0,)h
(la)g(tangente)g FF(T)1831 5658 y Fu(B)1895 5646 y FI(est)g(hor)q
(izontale)o(.)p 0 TeXcolorgray 1930 5895 a(5)p 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 7 -159 a FI(\225)p 0 TeXcolorgray 50 w
FF(f)19 b FI(\(4\))14 b FE(\306)g FI(2)k(et)25 b FF(f)499
-190 y FA(0)521 -159 y FI(\(4\))14 b FE(\306)708 -192
y FC(4)739 -215 y Ft(2)767 -192 y FA(\241)p FC(4)p 708
-179 132 5 v 744 -125 a(4)775 -144 y Ft(2)864 -159 y
FE(\306)943 -192 y FC(12)p 943 -179 62 5 v 943 -131 a(16)1029
-159 y FE(\306)g FI(0,)8 b(75,)19 b(donc)e(l)o('\351quation)j(de)d
FF(T)1995 -147 y Fu(C)2062 -159 y FI(est)1751 34 y FF(y)k
FE(\306)h FF(f)1928 -1 y FA(0)1949 34 y FI(\(4\)\()r
FF(x)15 b FE(\241)10 b FI(4\))g FE(\305)18 b FF(f)i FI(\(4\))1751
158 y FF(y)h FE(\306)14 b FI(0,)8 b(75\()r FF(x)15 b
FE(\241)10 b FI(4\))g FE(\305)g FI(2)1751 283 y FF(y)21
b FE(\306)14 b FI(0,)8 b(75)r FF(x)15 b FE(\241)10 b
FI(3)g FE(\305)g FI(2)1751 407 y FF(y)21 b FE(\306)14
b FI(0,)8 b(75)r FF(x)15 b FE(\241)10 b FI(1.)80 588
y(On)j(tr)o(ace)g(la)g(tangente)g FF(T)820 600 y Fu(C)884
588 y FI(par)g(la)g(m\352me)g(m\351thode)g(que)g FF(T)1836
600 y Fu(A)1897 588 y FI(\(le)g(plus)g(simple)g(et)g(le)g(plus)g(p)q
(r\351cis)g(es)q(t)g(d)n('ut)q(ilis)q(er)g(l)o(')q(or)o(donn\351e)g
(\340)g(l)o(')q(or)q(igine\).)-246 621 y
SDict begin H.S end
 -246 621 a -246
621 a
SDict begin 12 H.A end
 -246 621 a -246 621 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 621 a 0 TeXcolorgray
-141 716 a FI(5.)p 0 TeXcolorgray 43 w(On)20 b(place)g(les)h(points)27
b FF(A)s FI(,)20 b FF(B)6 b FI(,)18 b FF(C)9 b FI(,)20
b(on)g(tr)o(ace)g(les)h(trois)f(tangentes)h(et)f(on)g(constr)q(uit)h
(la)f(courbe)f(de)h(la)g(fonction)29 b FF(f)39 b FI(\(en)20
b(bleu\))g(en)g(s)m('appuyant)-38 816 y(sur)d(ces)h(tangentes)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1187 2667 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 208.84344 a add def
/d 0.0 a add neg def /h 212.82681 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1187 2667 a
1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 171.28563 0.0 -37.55782 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.33553 0.0 -53.49129   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 171.28563  0 -37.55782  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -37.55782
 171.28563  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-53.49129  def /maxTickline 159.33553  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.33553
0.0 -53.49129   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 171.28563
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.33553  0 -53.49129  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -53.49129
 159.33553  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-37.55782  def /maxTickline 171.28563  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.33553
0.0 -53.49129   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 171.28563
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1484 2320 a FC(0)204 b(1)i(2)f(3)g(4)g(5)-1469
b FA(\241)p FC(1)1410 2242 y(0)1368 2478 y FA(\241)p
FC(1)1410 2006 y(1)1410 1770 y(2)1410 1533 y(3)1410 1297
y(4)1410 1061 y(5)1499 2223 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -28.45274 0.0
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 1499 2223 a
tx@Dict begin { 59.75093 -18.20973 } PutCoor PutBegin  end
 1499 2223 a 1 0.49803 0 TeXcolorrgb
53 x FF(T)1551 2288 y Fu(A)p 0 TeXcolorgray 1499 2223
a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 28.45274 0.0
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1499 2223 a
tx@Dict begin { 92.75578 20.48601 } PutCoor PutBegin  end
 1499 2223 a 0 1 0 TeXcolorrgb 53 x FF(T)1547
2288 y Fu(B)p 0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 6.02 def
/dx x1 x sub 49 div def /F@pstplot ((-4.--3.*x)/4.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
0  setcmykcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1499 2223 a
tx@Dict begin { 13.65718 -23.90019 } PutCoor PutBegin  end
 1499
2223 a 0 1 0 0 TeXcolorcmyk 53 x FF(T)1545 2288 y Fu(C)p
0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 4 def /dx
x1 x sub 199 div def /F@pstplot (x+4.0/x-3.0)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1499 2223 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1499 2223 a 1 0.49803 0
TeXcolorrgb 6 w FF(A)p 0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499
2223 a 1499 2223 a
tx@Dict begin { 59.18175 34.1432 } PutCoor PutBegin  end
 1499 2223 a 0 1 0 TeXcolorrgb FF(B)p
0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a 1499 2223 a
tx@Dict begin { 106.4134 64.87221 } PutCoor PutBegin  end
 1499
2223 a 0 1 0 0 TeXcolorcmyk 1497 2222 a FF(C)p 0 TeXcolorgray
1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 28.45274
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0 0  setcmykcolor  [ 113.81097
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2921 2667 a
currentpoint initclip moveto
 2921 2667 a -246
2733 a
SDict begin H.S end
 -246 2733 a -246 2733 a
SDict begin 12 H.A end
 -246 2733 a -246 2733
a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 2733 a 0 TeXcolorgray 132 x FJ(Ex)o(er)o(cice)14
b(6)p 0 TeXcolorgray 42 w FI(La)j(fonction)i FF(i)26
b FI(est)18 b(d\351\002nie)g(sur)f FB(R)g FI(par)1723
3080 y FF(i)10 b FI(\()r FF(x)5 b FI(\))13 b FE(\306)2005
3024 y FI(2)r FF(x)p 1950 3061 198 5 v 1952 3137 a(x)1996
3113 y FC(2)2041 3137 y FE(\305)d FI(1)2157 3080 y(.)-246
3172 y
SDict begin H.S end
 -246 3172 a -246 3172 a
SDict begin 12 H.A end
 -246 3172 a -246 3172
a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246 3172 a 0 TeXcolorgray -141 3251 a FI(1.)p 0 TeXcolorgray
43 w(On)17 b(utilise)i(la)f(for)q(mule)g(pour)g(la)f(d\351r)q(iv\351e)h
(d)n('un)g(quotient)h(avec)810 3432 y FF(u)t FI(\()r
FF(x)5 b FI(\))15 b FE(\306)f FI(2)r FF(x)854 b FI(,)d
FF(v)7 b FI(\()r FF(x)e FI(\))14 b FE(\306)i FF(x)3126
3398 y FC(2)3171 3432 y FE(\305)10 b FI(1,)810 3557 y
FF(u)861 3522 y FA(0)883 3557 y FI(\()r FF(x)5 b FI(\))14
b FE(\306)g FI(2)874 b(,)851 b FF(v)2897 3522 y FA(0)2918
3557 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(2)r FF(x)5
b FI(.)-38 3876 y(On)17 b(obtient,)i(pour)e(tout)j FF(x)g
FE(2)14 b FB(R)31 b FI(:)1492 4102 y FF(i)1526 4067 y
FA(0)1546 4102 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)1740
4045 y FF(u)1791 4015 y FA(0)1812 4045 y FI(\()r FF(x)5
b FI(\))10 b FE(\243)i FF(v)7 b FI(\()r FF(x)e FI(\))10
b FE(\241)g FF(u)t FI(\()r FF(x)5 b FI(\))10 b FE(\243)i
FF(v)2484 4015 y FA(0)2506 4045 y FI(\()r FF(x)5 b FI(\))p
1740 4082 867 5 v 2055 4158 a(\()r FF(v)i FI(\()r FF(x)e
FI(\)\))2257 4134 y FC(2)1660 4332 y FE(\306)1740 4270
y FI(2)10 b FE(\243)1855 4206 y Fw(\241)1887 4270 y FF(x)1931
4240 y FC(2)1977 4270 y FE(\305)g FI(1)2082 4206 y Fw(\242)2122
4270 y FE(\241)g FI(2)r FF(x)15 b FE(\243)10 b FI(2)r
FF(x)p 1740 4312 697 5 v 1942 4343 a Fw(\241)1974 4408
y FF(x)2018 4384 y FC(2)2063 4408 y FE(\305)g FI(1)2168
4343 y Fw(\242)2199 4365 y FC(2)1660 4590 y FE(\306)1740
4534 y FI(2)r FF(x)1826 4504 y FC(2)1872 4534 y FE(\305)g
FI(2)g FE(\241)g FI(4)r FF(x)2138 4504 y FC(2)p 1740
4571 435 5 v 1811 4602 a Fw(\241)1843 4666 y FF(x)1887
4642 y FC(2)1932 4666 y FE(\305)g FI(1)2037 4602 y Fw(\242)2068
4623 y FC(2)1660 4849 y FE(\306)1740 4793 y(\241)p FI(2)r
FF(x)1881 4763 y FC(2)1927 4793 y FE(\305)g FI(2)p 1740
4830 293 5 v 1741 4860 a Fw(\241)1772 4925 y FF(x)1816
4901 y FC(2)1861 4925 y FE(\305)g FI(1)1966 4860 y Fw(\242)1997
4882 y FC(2)2042 4849 y FI(.)-246 5030 y
SDict begin H.S end
 -246 5030 a
-246 5030 a
SDict begin 12 H.A end
 -246 5030 a -246 5030 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 5030 a 0 TeXcolorgray
-141 5122 a FI(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 42 w(Les)18 b(r)o(acines)g(de)f
FE(\241)p FI(2)r FF(x)722 5091 y FC(2)768 5122 y FE(\305)10
b FI(2)18 b(sont)g(assez)f(\351videntes)i(:)1082 5302
y FE(\241)p FI(2)r FF(x)1223 5268 y FC(2)1269 5302 y
FE(\305)10 b FI(2)15 b FE(\306)f FI(0)29 b FE(\()-12
b(\))29 b FI(2)14 b FE(\306)h FI(2)r FF(x)1906 5268 y
FC(2)1970 5302 y FE(\()-12 b(\))29 b FI(1)15 b FE(\306)h
FF(x)2309 5268 y FC(2)2372 5302 y FE(\()-12 b(\))2541
5303 y FI(\()2570 5302 y FF(x)20 b FE(\306)14 b FI(1)k(ou)h
FF(x)h FE(\306)14 b(\241)p FI(1)3088 5303 y(\))3123 5302
y(.)p 0 TeXcolorgray 7 5483 a(\225)p 0 TeXcolorgray 80
5419 a Fw(\241)111 5483 y FF(x)155 5453 y FC(2)201 5483
y FE(\305)c FI(1)306 5419 y Fw(\242)336 5438 y FC(2)388
5483 y FI(est)18 b(str)q(ictement)h(positif)g(pour)f(tout)g(r\351el)i
FF(x)5 b FI(.)-38 5597 y(On)17 b(obtient)h(donc)f(le)h(tableau)g(:)p
0 TeXcolorgray 1930 5895 a(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 3 -244 a

 3 -244 a 3 -244
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a 167 w FF(x)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -33.86502 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a 41 w FE(\241)p FI(2)r FF(x)185 -274 y FC(2)232 -244
y FE(\305)11 b FI(2)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -53.15909 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a 46 -308
a Fw(\241)78 -244 y FF(x)122 -274 y FC(2)167 -244 y FE(\305)f
FI(1)272 -308 y Fw(\242)302 -289 y FC(2)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -72.60608 ] concat

 pgfs


 3 -244
a
 0 setgray
 3 -244 a 107 w FF(i)144 -274 y FA(0)173 -243 y FI(\()202
-244 y FF(x)246 -243 y FI(\))3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -101.90143 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a 118 w FF(i)163 -243 y FI(\()191 -244 y FF(x)235 -243
y FI(\))3 -244 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -119.05826 moveto

 238.11656 -119.05826 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -119.05826 lineto

 238.11656 -119.05826 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -119.05826 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -119.05826 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 41.63185 -11.9539 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\2411)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs



3 -244 a
 0 setgray
 3 -244 a FE(\241)p FI(1)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 3 -244 a
 0 setgray
 3
-244 a FI(1)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 220.21606 -12.47694 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\3051)3 -244
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -31.19028 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\241)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a FI(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -32.32106 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 3
-244 a
 0 setgray
 3 -244 a FI(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -31.19028 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\241)3
-244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3
-244 a FE(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\305)3 -244
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -70.87787 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\241)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -59.52911 moveto

 109.13673 -79.37216 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -72.49553 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a FI(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -72.00865 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -59.52911 moveto

 168.66588 -79.37216 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -72.49553 ] concat

 pgfs


 3
-244 a
 0 setgray
 3 -244 a FI(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -70.87787 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FE(\241)3
-244 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -87.34238 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -85.34982 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -87.34238 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -85.34982 ] concat

 pgfs


 3
-244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 101.4156 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 103.40816 -113.0806 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3
-244 a 3 -244 a
 0 setgray
 3 -244 a FE(\241)p FI(1)3 -244 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 101.4156 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 103.40816 -113.0806 ] concat

 pgfs


 3 -244
a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a FE(\241)p FI(1)3 -244 y


 pgfr

 restore

 restore

 save

0 TeXcolorgray
 55.43437 -87.76462 moveto

 95.3754 -104.3151 lineto

 pgfstr

 save

 [0.92378 -0.38277 0.38277 0.92378 95.3754 -104.3151 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 164.24243 -93.47942 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -91.48686 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244
a
 0 setgray
 3 -244 a FI(1)3 -244 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 164.24243 -93.47942 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -91.48686 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3
-244 a FI(1)3 -244 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 120.72566 -105.8119 moveto

 158.13216 -92.24084 lineto

 pgfstr

 save

 [0.94003 0.34105 -0.34105 0.94003 158.13216 -92.24084 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -113.0806 ] concat

 pgfs


 3
-244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -113.0806 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3
-244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 176.9258 -91.83998 moveto

 220.16461 -109.75517 lineto

 pgfstr

 save

 [0.92378 -0.38275 0.38275 0.92378 220.16461 -109.75516 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 2050 767 9 1013 v 0 TeXcolorgray 0 TeXcolorgray
2140 -163 a FI(\225)p 0 TeXcolorgray 42 w FF(i)g FI(\()p
FE(\241)p FI(1\))k FE(\306)2503 -198 y FC(2)p FA(\243)p
FC(\()p FA(\241)p FC(1\))p 2489 -182 215 5 v 2489 -129
a(\()p FA(\241)p FC(1\))2602 -147 y Ft(2)2630 -129 y
FA(\305)p FC(1)2727 -163 y FE(\306)2806 -195 y FA(\241)p
FC(2)p 2806 -182 73 5 v 2827 -134 a(2)2903 -163 y FE(\306)g(\241)p
FI(1)k(;)p 0 TeXcolorgray 2140 -36 a(\225)p 0 TeXcolorgray
42 w FF(i)10 b FI(\(1\))k FE(\306)2438 -72 y FC(2)p FA(\243)p
FC(1\))p 2434 -56 132 5 v 2434 -2 a(1)2465 -21 y Ft(2)2493
-2 y FA(\305)p FC(1)2590 -36 y FE(\306)2669 -69 y FC(2)p
2669 -56 31 5 v 2669 -8 a(2)2724 -36 y FE(\306)g FI(1.)-246
849 y
SDict begin H.S end
 -246 849 a -246 849 a
SDict begin 12 H.A end
 -246 849 a -246 849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246
849 a -246 849 a
SDict begin H.S end
 -246 849 a -246 849 a
SDict begin 12 H.A end
 -246 849 a -246
849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 849 a 0 TeXcolorgray -141 964 a FI(3.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w FF(i)c FI(\(0\))j FE(\306)379 931 y FC(2)p FA(\243)p
FC(0)p 365 944 132 5 v 365 998 a(0)396 979 y Ft(2)424
998 y FA(\305)p FC(1)521 964 y FE(\306)600 931 y FC(0)p
600 944 31 5 v 600 992 a(1)655 964 y FE(\306)h FI(0)k(et)g
FF(i)899 934 y FA(0)919 964 y FI(\(0\))d FE(\306)1107
931 y FA(\241)p FC(2)p FA(\243)p FC(0)1253 908 y Ft(2)1280
931 y FA(\305)p FC(2)p 1107 944 247 5 v 1123 1015 a FI(\()1150
1009 y FC(0)1181 991 y Ft(2)1209 1009 y FA(\305)p FC(1)1282
1015 y FI(\))1308 979 y Ft(2)1377 964 y FE(\306)1456
931 y FC(2)p 1456 944 31 5 v 1456 992 a(1)1511 964 y
FE(\306)f FI(2,)k(donc)f(l)o('\351quation)j(de)d(\()p
FF(T)12 b FI(\))17 b(est)1783 1186 y FF(y)k FE(\306)h
FF(f)1960 1151 y FA(0)1981 1186 y FI(\(0\)\()r FF(x)15
b FE(\241)10 b FI(0\))g FE(\305)18 b FF(f)i FI(\(0\))1783
1310 y FF(y)h FE(\306)14 b FI(2)r FF(x)h FE(\305)10 b
FI(0)1783 1435 y FF(y)21 b FE(\306)14 b FI(2)r FF(x)5
b FI(.)-246 1548 y
SDict begin H.S end
 -246 1548 a -246 1548 a
SDict begin 12 H.A end
 -246 1548
a -246 1548 a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 1548 a 0 TeXcolorgray 4 1642 a FI(\(b\))p
0 TeXcolorgray 41 w(P)n(our)16 b(\351tudier)i(les)g(positions)i(r)o
(elatives)e(de)f(\()n FF(C)9 b FI(\))k(:)19 b FF(y)i
FE(\306)1780 1610 y FC(2)q Fu(x)p 1745 1623 137 5 v 1746
1676 a(x)1780 1658 y Ft(2)1809 1676 y FA(\305)p FC(1)1909
1642 y FI(et)c(\()p FF(T)12 b FI(\))i(:)19 b FF(y)i FE(\306)14
b FI(2)r FF(x)5 b FI(,)18 b(on)g(\351tudie)g FJ(le)d(signe)g(de)h(la)f
(diff\351r)o(ence)h FI(:)2010 1819 y(2)r FF(x)p 1955
1856 198 5 v 1957 1932 a(x)2001 1908 y FC(2)2047 1932
y FE(\305)10 b FI(1)2173 1875 y FE(\241)g FI(2)r FF(x)5
b FI(.)p 0 TeXcolorgray 190 2081 a(\225)p 0 TeXcolorgray
41 w(P)n(our)17 b(les)h(valeurs)g(de)i FF(x)i FI(pour)c(lesquelles)i
(cette)e(diff\351r)o(ence)g(vaut)g(0,)g(les)g(deux)f(courbes)h(se)f
(coupent)9 b(;)p 0 TeXcolorgray 190 2181 a(\225)p 0 TeXcolorgray
41 w(pour)18 b(les)g(valeurs)g(de)h FF(x)k FI(pour)18
b(lesquelles)i(cette)e(diff\351r)o(ence)g(est)g(str)q(ictement)h
(positive)o(,)f(\()n FF(C)9 b FI(\))17 b(est)h(au-dessus)h(de)e(\()p
FF(T)12 b FI(\))17 b(;)p 0 TeXcolorgray 190 2281 a(\225)p
0 TeXcolorgray 41 w(pour)h(les)g(valeurs)g(de)h FF(x)k
FI(pour)18 b(lesquelles)i(cette)e(diff\351r)o(ence)g(est)g(str)q
(ictement)h(n\351gative)o(,)f(\()n FF(C)9 b FI(\))16
b(est)i(en-dessous)h(de)e(\()p FF(T)12 b FI(\).)145 2430
y(On)17 b(commence)h(par)g(calculer)g(la)f(diff\351r)o(ence)h(:)1647
2710 y(2)r FF(x)p 1592 2747 V 1594 2823 a(x)1638 2799
y FC(2)1683 2823 y FE(\305)10 b FI(1)1809 2766 y FE(\241)g
FI(2)r FF(x)20 b FE(\306)2110 2710 y FI(2)r FF(x)p 2055
2747 V 2057 2823 a(x)2101 2799 y FC(2)2146 2823 y FE(\305)10
b FI(1)2272 2766 y FE(\241)2347 2705 y FI(2)r FF(x)2441
2640 y Fw(\241)2474 2705 y FF(x)2518 2674 y FC(2)2563
2705 y FE(\305)g FI(1)2668 2640 y Fw(\242)p 2347 2747
352 5 v 2426 2823 a FF(x)2470 2799 y FC(2)2515 2823 y
FE(\305)g FI(1)1975 2982 y FE(\306)2110 2926 y FI(2)r
FF(x)p 2055 2963 198 5 v 2057 3039 a(x)2101 3015 y FC(2)2146
3039 y FE(\305)g FI(1)2272 2982 y FE(\241)2347 2926 y
FI(2)r FF(x)2433 2896 y FC(3)2479 2926 y FE(\305)g FI(2)r
FF(x)p 2347 2963 285 5 v 2392 3039 a(x)2436 3015 y FC(2)2482
3039 y FE(\305)g FI(1)1975 3198 y FE(\306)2046 3142 y
Fz(\010)2067 3132 y(\010)2055 3142 y FI(2)r FF(x)16 b
FE(\241)10 b FI(2)r FF(x)2303 3112 y FC(3)2349 3142 y
FE(\241)r Fz(\010)2426 3132 y(\010)2414 3142 y FI(2)r
FF(x)p 2055 3179 447 5 v 2181 3255 a(x)2225 3231 y FC(2)2271
3255 y FE(\305)g FI(1)1975 3414 y FE(\306)2065 3358 y(\241)p
FI(2)r FF(x)2206 3328 y FC(3)p 2055 3395 198 5 v 2057
3471 a FF(x)2101 3447 y FC(2)2146 3471 y FE(\305)g FI(1)2262
3414 y(.)p 0 TeXcolorgray 0 TeXcolorgray -50 3644 a

 -50
3644 a -50 3644 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -15.95473 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 171 w Fq(x)-50
3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -46.0215 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 116 w Fp(\241)p Fr(2)q Fq(x)179
3620 y Fo(3)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -74.01164 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 19 3593
a Fn(\241)43 3644 y Fq(x)79 3620 y Fo(2)119 3644 y Fp(\305)e
Fr(1)203 3593 y Fn(\242)227 3607 y Fo(2)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -101.7207 ] concat

 pgfs


 -50
3644 a
 0 setgray
 -50 3644 a 76 3618 a Fm(\241)p Fo(2)q Fk(x)173
3597 y Ft(3)p 76 3629 125 4 v 77 3679 a Fk(x)108 3663
y Ft(2)136 3679 y Fm(\305)p Fo(1)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -149.01718 ] concat

 pgfs


 -50 3644
a
 0 setgray
 -50 3644 a 62 w Fr(P)n(ositions)24 3723 y(r)o(elatives)-29
3802 y(des)19 b(courbes)-50 3644 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -113.38724 moveto

 255.12128 -113.38724 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -198.42766 moveto

 255.12128 -198.42766 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -198.42766 lineto

 255.12128 -198.42766 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -198.42766 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -198.42766 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 64.48688 -15.7993 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644
a Fp(\2411)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.96277 -16.60829 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fr(0)-50
3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.56781 -16.21774 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fp(\3051)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -44.56454 ] concat

 pgfs


 -50
3644 a
 0 setgray
 -50 3644 a Fp(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.9627 -44.9551 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644
a Fr(0)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -43.65994 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fp(\241)-50 3644
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -72.91136 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fp(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -72.91136 ] concat

 pgfs


 -50 3644 a
 0 setgray

-50 3644 a Fp(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -101.25816 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fp(\305)-50
3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -85.04042 moveto

 155.90744 -113.38724 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.9627 -101.64873 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fr(0)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -100.35356 ] concat

 pgfs


 -50 3644
a
 0 setgray
 -50 3644 a Fp(\241)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.50194 -158.17696 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a
Fr(\()n Fq(C)7 b Fr(\))15 b(au-dessus)d(de)i(\()p Fq(T)9
b Fr(\))-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.92334 -194.02599 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 0 TeXcolorgray
0 TeXcolorgray 7 w Fj(t)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3578 a(n)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -48 3511 a(e)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3445 a(p)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3378 a(u)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -49 3312 a(o)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -47 3246 a(c)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-47 3113 a(e)p 0 TeXcolorgray 0 TeXcolorgray -48 3046
a(S)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -50 3644
a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 162.4143 -158.17696 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fr(\()n Fq(C)e Fr(\))15 b(en-dessous)e(de)h(\()
p Fq(T)9 b Fr(\))-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2141 5316
9 1674 v 0 TeXcolorgray 2187 3725 a FI(P)n(our)16 b(compl\351ter)j(le)f
(tableau)g(de)f(signe)h(:)p 0 TeXcolorgray 2232 3840
a(\225)p 0 TeXcolorgray 42 w FE(\241)p FI(2)r FF(x)2446
3809 y FC(3)2496 3840 y FE(\306)c FI(0)j(lorsque)k FF(x)e
FE(\306)c FI(0)i(;)p 0 TeXcolorgray 2232 3939 a(\225)p
0 TeXcolorgray 42 w FE(\241)p FI(2)r FF(x)2446 3909 y
FC(3)2499 3939 y FI(est)g FE(\252)h FI(lorsque)i FF(x)j
FI(est)18 b(str)q(ictement)g(positif)9 b(;)p 0 TeXcolorgray
2232 4039 a(\225)p 0 TeXcolorgray 42 w FE(\241)p FI(2)r
FF(x)2446 4009 y FC(3)2499 4039 y FI(est)17 b FE(\251)h
FI(lorsque)i FF(x)j FI(est)18 b(str)q(ictement)g(n\351gatif)9
b(;)p 0 TeXcolorgray 2232 4150 a(\225)p 0 TeXcolorgray
2305 4085 a Fw(\241)2336 4150 y FF(x)2380 4119 y FC(2)2426
4150 y FE(\305)h FI(1)2531 4085 y Fw(\242)2561 4105 y
FC(2)2613 4150 y FI(est)18 b(str)q(ictement)h(positif)g(pour)f(tout)g
(r\351el)h FF(x)5 b FI(.)-246 5399 y
SDict begin H.S end
 -246 5399 a -246
5399 a
SDict begin 12 H.A end
 -246 5399 a -246 5399 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246 5399 a 0 TeXcolorgray
-141 5513 a FI(4.)p 0 TeXcolorgray 0 TeXcolorgray 1930
5895 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 648 959 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 338.58746 a add def
/d 0.0 a add neg def /h 145.10915 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 648 959 a 2047
378 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 170.14728 0.0 -168.44019 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -142.26372 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 75.11522 0.0 -69.99393   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 170.14728  0 -168.44019  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -168.44019
 170.14728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 75.11522  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -69.99393   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.14728
0.0 -168.44019 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 75.11522  0 -69.99393  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -69.99393
 75.11522  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-168.44019  def /maxTickline 170.14728  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -69.99393   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.14728
0.0 -168.44019 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2032 475 a FC(0)205 b(1)g(2)g(3)g(4)g(5)-1469
b FA(\241)p FC(1)-309 b FA(\241)p FC(2)g FA(\241)p FC(3)g
FA(\241)p FC(4)f FA(\241)p FC(5)1958 397 y(0)1916 634
y FA(\241)p FC(1)1916 870 y FA(\241)p FC(2)1958 161 y(1)1958
-75 y(2)2047 378 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -5.919999999999999
def /x1 5.979999999999995 def /dx x1 x sub 199 div def /F@pstplot (2.0*x/(x^(2.0)+1.0))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -5.92 def /x1 5.98
def /dx x1 x sub 49 div def /F@pstplot ((-0.--2.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 2047 378 a
tx@Dict begin { 34.71237 54.06003 } PutCoor PutBegin  end
 2047
378 a 1 0 0 TeXcolorrgb 54 x FI(\()p FF(T)12 b FI(\))p
0 TeXcolorgray 2047 378 a
tx@Dict begin  PutEnd  end
 2047 378 a 2047 378 a
tx@Dict begin { 97.8775 29.59065 } PutCoor PutBegin  end
 2047
378 a 0 0 1 TeXcolorrgb 54 x FI(\()n FF(C)d FI(\))p 0
TeXcolorgray 2047 378 a
tx@Dict begin  PutEnd  end
 2047 378 a 3459 959 a
currentpoint initclip moveto
 3459 959
a -246 1024 a
SDict begin H.S end
 -246 1024 a -246 1024 a
SDict begin 12 H.A end
 -246 1024 a -246
1024 a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 1024 a 0 TeXcolorgray 132 x FJ(Ex)o(er)o(cice)14
b(7)p 0 TeXcolorgray 42 w FI(La)j(distance)h(\(en)f(m\))h(par)o(cour)q
(ue)f(au)g(temps)k FF(t)k FI(\(en)18 b(s\))f(par)g(une)h(pierr)o(e)f
(en)h(chute)g(libr)o(e)f(est)h FF(d)7 b FI(\()r FF(t)h
FI(\))14 b FE(\306)g FI(5)r FF(t)3193 1126 y FC(2)3229
1156 y FI(.)-246 1256 y(On)k(lance)f(cette)h(pierr)o(e)g(d)n('une)g
(hauteur)g(de)f(20)i(m.)-246 1301 y
SDict begin H.S end
 -246 1301 a -246
1301 a
SDict begin 12 H.A end
 -246 1301 a -246 1301 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 1301 a 0 TeXcolorgray
-141 1397 a FI(1.)p 0 TeXcolorgray 43 w(La)e(pierr)o(e)h(arr)q(ive)f
(au)g(sol)h(quand)f(elle)i(a)e(par)o(cour)q(u)g(20)h(m.)g(Il)e(faut)i
(donc)f(r\351soudr)o(e)g(l)o('\351quation)j(5)r FF(t)2880
1367 y FC(2)2930 1397 y FE(\306)14 b FI(20)32 b(:)989
1661 y(5)r FF(t)1065 1626 y FC(2)1115 1661 y FE(\306)14
b FI(20)29 b FE(\()-12 b(\))31 b FF(t)1498 1626 y FC(2)1547
1661 y FE(\306)1627 1604 y FI(20)p 1627 1641 82 5 v 1647
1718 a(5)1746 1661 y FE(\()-12 b(\))31 b FF(t)1951 1626
y FC(2)2000 1661 y FE(\306)14 b FI(4)29 b FE(\()-12 b(\))2307
1505 y Fw(0)2307 1642 y(@)2355 1661 y FF(t)22 b FE(\306)14
b FI(2)73 b(ou)120 b FF(t)22 b FE(\306)15 b(\241)p FI(2)2793
1695 y Fw(|)p 2827 1695 39 10 v 39 w({z)p 2934 1695 V
39 w(})2757 1776 y FC(impossible)3044 1505 y Fw(1)3044
1642 y(A)3098 1661 y FI(.)-38 1955 y(C)o(onclusion)k(:)f(la)f(pierr)o
(e)g(arr)q(ive)g(au)h(sol)f(apr\350s)h(2)g(s)o(.)-246
1986 y
SDict begin H.S end
 -246 1986 a -246 1986 a
SDict begin 12 H.A end
 -246 1986 a -246 1986
a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 1986 a 0 TeXcolorgray -141 2083 a FI(2.)p 0 TeXcolorgray
43 w(On)f(constr)q(uit)h(la)g(courbe)f(\340)g(par)q(tir)g(d)n('un)h
(tableau)g(de)f(valeurs)h(\(avec)f(un)h(pas)f(de)h(0,4)g(par)f
(exemple\).)p 0 TeXcolorgray 0 TeXcolorgray 1321 2167
1466 4 v 1321 2267 4 100 v 1376 2237 a FF(t)p 1566 2267
V 217 w FI(0)p 1709 2267 V 103 w(0,)8 b(4)p 1922 2267
V 105 w(0,)g(8)p 2134 2267 V 104 w(1,)g(2)p 2346 2267
V 125 w(1,)g(6)p 2599 2267 V 145 w(2)p 2783 2267 V 1321
2270 1466 4 v 1321 2370 4 100 v 1374 2340 a FF(d)f FI(\()r
FF(t)h FI(\))p 1566 2370 V 103 w(0)p 1709 2370 V 103
w(0,)g(8)p 1922 2370 V 105 w(3,)g(2)p 2134 2370 V 104
w(7,)g(2)p 2346 2370 V 105 w(12,)g(8)p 2599 2370 V 104
w(20)p 2783 2370 V 1321 2373 1466 4 v -38 2494 a(P)n(our)17
b(obtenir)g(ce)h(tableau,)g(on)f(utilise)i(la)f(calculatr)q(ice)g
(\(bien)f(s\373r)-5 b(,)18 b(on)g(met)g(des)h FF(x)k
FI(\340)17 b(la)g(place)h(des)i FF(t)8 b FI(\))17 b(:)p
0 TeXcolorgray 0 TeXcolorgray 125 2731 a Fi(C)o(alculatr)q(ices)e
(coll\350ge)p 0 TeXcolorgray 10 3464 a Fh(\225)p 0 TeXcolorgray
70 w(MODE)p 80 3391 269 4 v 80 3492 4 104 v 345 3492
V 80 3494 269 4 v 0 TeXcolorgray 10 3556 a(\225)p 0 TeXcolorgray
42 w(4)h(:)f(T)l(ABLE)g(ou)g(4)h(:)f(T)-7 b(ableau)p
0 TeXcolorgray 10 3647 a(\225)p 0 TeXcolorgray 42 w(f\(X\)=5X)311
3620 y FC(2)390 3647 y Fh(EXE)p 362 3573 183 4 v 362
3673 4 102 v 541 3673 V 362 3675 183 4 v 80 3738 a(\(si)38
b(on)f(demande)i(g\(X\)=,)g(ne)80 3830 y(r)q(ien)14 b(r)o(entr)o(er\))p
0 TeXcolorgray 10 3921 a(\225)p 0 TeXcolorgray 42 w(D\351but)8
b(?)14 b(0)44 b(EXE)p 377 3847 V 377 3947 4 102 v 556
3947 V 377 3949 183 4 v 0 TeXcolorgray 10 4034 a(\225)p
0 TeXcolorgray 42 w(F)o(in)8 b(?)14 b(2)45 b(EXE)p 283
3961 V 283 4061 4 102 v 463 4061 V 283 4063 183 4 v 0
TeXcolorgray 10 4148 a(\225)p 0 TeXcolorgray 42 w(P)n(as)8
b(?)14 b(0,)7 b(4)46 b(EXE)p 348 4074 V 348 4174 4 102
v 528 4174 V 348 4176 183 4 v 0 TeXcolorgray 983 4163
9 1516 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1312 2731 a Fi(NUMW)o(ORKS)1029 2902 y Fh(x)52 b(s)m('obtient)f(avec)h
(les)g(touches)1057 2994 y(alpha)p 1029 2917 231 4 v
1029 3036 4 120 v 1256 3036 V 1029 3038 231 4 v 71 w(x)p
1275 2934 90 4 v 1275 3020 4 88 v 1362 3020 V 1275 3022
90 4 v 0 TeXcolorgray 1077 3145 a(\225)p 0 TeXcolorgray
0 0 1 0 TeXcolorcmyk 70 w Fe(\302)p 0 TeXcolorgray 1146
3059 141 4 v 1146 3176 4 119 v 1284 3176 V 1146 3178
141 4 v 0 TeXcolorgray 1077 3263 a Fh(\225)p 0 TeXcolorgray
41 w(F)n(onctions)g(EXE)p 1482 3189 183 4 v 1482 3289
4 102 v 1661 3289 V 1482 3291 183 4 v 53 w(puis)26 b(choi-)1146
3376 y(sir)16 b(F)n(onctions)41 b(EXE)p 1564 3302 V 1564
3403 4 102 v 1743 3403 V 1564 3405 183 4 v 0 TeXcolorgray
1077 3489 a(\225)p 0 TeXcolorgray 41 w(f\(x\)=5x)1359
3462 y FC(2)1438 3489 y Fh(EXE)p 1409 3416 V 1409 3516
4 102 v 1589 3516 V 1409 3518 183 4 v 0 TeXcolorgray
1077 3603 a(\225)p 0 TeXcolorgray 41 w(choisir)30 b(T)-7
b(ableau)60 b(EXE)p 1665 3529 V 1665 3629 4 102 v 1845
3629 V 1665 3631 183 4 v 58 w(puis)1146 3716 y(R\351gler)17
b(l)o('inter)q(valle)43 b(EXE)p 1705 3643 V 1705 3743
4 102 v 1884 3743 V 1705 3745 183 4 v 0 TeXcolorgray
1077 3830 a(\225)p 0 TeXcolorgray 41 w(X)16 b(d\351but)131
b(0)44 b(EXE)p 1571 3756 V 1571 3856 4 102 v 1751 3856
V 1571 3858 183 4 v 0 TeXcolorgray 1077 3943 a(\225)p
0 TeXcolorgray 41 w(X)16 b(\002n)131 b(2)44 b(EXE)p 1473
3869 V 1473 3970 4 102 v 1652 3970 V 1473 3972 183 4
v 0 TeXcolorgray 1077 4056 a(\225)p 0 TeXcolorgray 41
w(P)n(as)132 b(0.4)45 b(EXE)p 1489 3983 V 1489 4083 4
102 v 1669 4083 V 1489 4085 183 4 v 0 TeXcolorgray 1077
4148 a(\225)p 0 TeXcolorgray 41 w(choisir)15 b(V)l(alider)p
0 TeXcolorgray 2050 4163 9 1516 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2364 2731 a Fi(TI)g(graphiques)2095 3115
y Fh(X)65 b(s)m('obtient)e(avec)h(la)h(touche)2125 3206
y Ff(x)5 b Fh(,)j Ff(t)f Fh(,)g Fg(\265)r Fh(,)g Ff(n)p
2095 3130 294 4 v 2095 3243 4 115 v 2386 3243 V 2095
3245 294 4 v 0 TeXcolorgray 2144 3362 a Fh(\225)p 0 TeXcolorgray
76 w Ff(f)17 b Fh(\()q Ff(x)5 b Fh(\))p 2213 3285 193
4 v 2213 3405 4 122 v 2402 3405 V 2213 3407 193 4 v 0
TeXcolorgray 2144 3492 a(\225)p 0 TeXcolorgray 41 w(Y)2254
3505 y FC(1)2301 3492 y Fd(\306)14 b Fh(5X)2443 3465
y FC(2)2522 3492 y Fh(EXE)p 2493 3418 183 4 v 2493 3518
4 102 v 2673 3518 V 2493 3520 183 4 v 0 TeXcolorgray
2144 3608 a(\225)p 0 TeXcolorgray 69 w(2nde)p 2213 3532
212 4 v 2213 3635 4 105 v 2422 3635 V 2213 3637 212 4
v 73 w(d\351f)i(table)p 2441 3532 326 4 v 2441 3635 4
105 v 2763 3635 V 2441 3637 326 4 v 0 TeXcolorgray 2144
3722 a(\225)p 0 TeXcolorgray 41 w(D\351bT)-7 b(able=0)45
b(EXE)p 2602 3648 183 4 v 2602 3748 4 102 v 2781 3748
V 2602 3750 183 4 v 0 TeXcolorgray 2144 3835 a(\225)p
0 TeXcolorgray 41 w(P)n(asT)-7 b(able=0.4)45 b(EXE)p
2631 3761 V 2631 3862 4 102 v 2810 3862 V 2631 3864 183
4 v 2213 3926 a(ou)2213 4026 y Fc(\242)p FI(Tbl=0.4)h(EXE)p
2522 3947 197 4 v 2522 4053 4 108 v 2716 4053 V 2522
4055 197 4 v 0 TeXcolorgray 2140 4148 a(\225)p 0 TeXcolorgray
70 w(2nde)p 2213 4066 230 4 v 2213 4175 4 111 v 2439
4175 V 2213 4177 230 4 v 75 w(table)p 2460 4066 229 4
v 2460 4175 4 111 v 2685 4175 V 2460 4177 229 4 v 0 TeXcolorgray
3116 4163 9 1516 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3361 2731 a Fi(CASIO)15 b(graphiques)3162 2933 y Fh(X)64
b(s)m('obtient)g(avec)g(la)h(touche)3190 3024 y(X,)7
b Fg(\265)r Fh(,)g(T)p 3162 2948 234 4 v 3162 3060 4
115 v 3392 3060 V 3162 3062 234 4 v 0 TeXcolorgray 3210
3147 a(\225)p 0 TeXcolorgray 70 w(MENU)p 3280 3074 272
4 v 3280 3175 4 104 v 3548 3175 V 3280 3177 272 4 v 42
w(puis)13 b(choisir)h(T)l(ABLE)3308 3262 y(EXE)p 3280
3189 183 4 v 3280 3289 4 102 v 3459 3289 V 3280 3291
183 4 v 0 TeXcolorgray 3210 3376 a(\225)p 0 TeXcolorgray
42 w(Y)3320 3389 y FC(1)3368 3376 y Fh(:)f(5X)3478 3348
y FC(2)3557 3376 y Fh(EXE)p 3529 3302 V 3529 3402 4 102
v 3708 3402 V 3529 3404 183 4 v 0 TeXcolorgray 3210 3489
a(\225)p 0 TeXcolorgray 70 w(F5)p 3280 3415 133 4 v 3280
3516 4 103 v 3409 3516 V 3280 3518 133 4 v 44 w(\(on)i(choisit)f(donc)h
(SET)t(\))p 0 TeXcolorgray 3210 3603 a(\225)p 0 TeXcolorgray
42 w(S)n(tar)q(t)f(:0)45 b(EXE)p 3512 3529 183 4 v 3512
3629 4 102 v 3691 3629 V 3512 3631 183 4 v 0 TeXcolorgray
3210 3716 a(\225)p 0 TeXcolorgray 42 w(End)14 b(:2)45
b(EXE)p 3491 3643 V 3491 3743 4 102 v 3670 3743 V 3491
3745 183 4 v 0 TeXcolorgray 3210 3830 a(\225)p 0 TeXcolorgray
42 w(S)n(tep)16 b(:0.4)45 b(EXE)p 3556 3756 V 3556 3856
4 102 v 3736 3856 V 3556 3858 183 4 v 0 TeXcolorgray
3210 3943 a(\225)p 0 TeXcolorgray 70 w(EXIT)p 3280 3869
208 4 v 3280 3970 4 102 v 3484 3970 V 3280 3972 208 4
v 0 TeXcolorgray 3210 4056 a(\225)p 0 TeXcolorgray 70
w(F6)p 3280 3983 133 4 v 3280 4083 4 103 v 3409 4083
V 3280 4085 133 4 v 115 w(\(on)86 b(choisit)g(donc)3280
4148 y(T)l(ABLE\))p 0 TeXcolorgray 0 TeXcolorgray 1280
5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 186.46393 a add def
/d 0.0 a add neg def /h 167.71259 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1280 5646 a 1448 5524 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 166.21063 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4527
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 153.02518 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45232
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 166.21063  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 166.21063  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 153.02518  def /dT 1864651 abs 65536 div viceversa
{ neg } if def /DT 0.4 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 71.13188  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 71.13188  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.02518
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 166.21063
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 153.02518  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 153.02518  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 166.21063  def /dT 1864676 abs 65536 div viceversa
{ neg } if def /DT 4. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 7.11317  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 7.11317  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.02518
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 166.21063
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1433 5621 a FC(0)182
b(0.4)159 b(0.8)g(1.2)g(1.6)g(2.0)1359 5543 y(0)1359
5307 y(4)1359 5071 y(8)1328 4835 y(12)1328 4598 y(16)1448
5524 y
tx@Dict begin { 128.0376 20.62816 } PutCoor PutBegin  end
 1448 5524 a 47 x FI(temps)1448 5670 y(\(en)17
b(s\))1448 5524 y
tx@Dict begin  PutEnd  end
 1448 5524 a 1448 5524 a
tx@Dict begin { 4.74747 138.44151 } PutCoor PutBegin  end
 1448 5524 a
57 x FI(distance)1448 5680 y(\(en)g(m\))1448 5524 y
tx@Dict begin  PutEnd  end
 1448
5524 a 1448 5524 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1448 5524 a 1448 5524 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1448 5524
a 1448 5524 a
tx@Dict begin ps@rot  RotBegin  end
 1448 5524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.1)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 71.13188 mul F@pstplot 7.11317 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 7.11317
mul gt { moveto } { dup -1.e30 7.11317 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317 mul lt { moveto
} { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1448 5524 a
tx@Dict begin RotEnd  end
 1448 5524 a 1448 5524 a
tx@Dict begin  PutEnd  end
 1448 5524 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -0.28472279556053043
def /x1 2.336654362677241 def /dx x1 x sub 49 div def /F@pstplot ((-10.--10.*x)/0.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 71.13188 mul F@pstplot
7.11317 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 7.11317 mul gt { moveto } { dup
-1.e30 7.11317 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 28.45232
5.69055   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90572
22.76213   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35803
51.21483   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 113.81143
91.04865   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 142.26376
142.26349   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2828 5646 a
currentpoint initclip moveto
 2828
5646 a 0 TeXcolorgray 1930 5895 a FI(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FI(3.)p
0 TeXcolorgray 43 w(La)17 b(vitesse)j(de)d(la)g(pierr)o(e)h(au)f
(moment)i(de)e(l)o('impact)i(au)f(sol)g(est)g FF(d)1925
-193 y FA(0)1947 -163 y FI(\(2\).)-38 -49 y(Or)f FF(d)119
-79 y FA(0)141 -49 y FI(\()r FF(t)8 b FI(\))13 b FE(\306)h
FI(5)c FE(\243)g FI(2)r FF(t)24 b FE(\306)14 b FI(10)r
FF(t)8 b FI(,)18 b(donc)f FF(d)987 -79 y FA(0)1009 -49
y FI(\(2\))d FE(\306)h FI(10)10 b FE(\243)g FI(2)16 b
FE(\306)e FI(20.)k(Ainsi)g(la)f(vitesse)j(au)d(moment)i(de)e(l)o
('impact)i(est)f(de)f(20)i(m/s)o(.)-38 112 y FJ(R)o(emarques)14
b(:)p 0 TeXcolorgray 7 225 a FI(\225)p 0 TeXcolorgray
42 w(cette)k(vitesse)h(instantan\351e)g(est)f(le)g(coef\002cient)g(dir)
o(ecteur)f(de)h(la)f(tangente)h(au)g(point)24 b FF(A)c
FI(d)n('abscisse)e(2)g(\(en)f(rouge\).)p 0 TeXcolorgray
7 325 a(\225)p 0 TeXcolorgray 42 w(la)g(\253)d(vr)o(aie)k(for)q(mule)c
(\273)k(\(valable)g(en)f(l)o('absence)i(de)e(frottements\))i(est)f
FF(d)7 b FI(\()r FF(t)h FI(\))14 b FE(\306)h FI(4,)8
b(9)r FF(t)2506 295 y FC(2)2542 325 y FI(.)17 b(Dans)g(l)o('exer)o
(cice)o(,)h(on)g(a)f(pr)q(is)h(5)f(au)h(lieu)g(de)g(4,9)g(pour)80
425 y(simpli\002er)h(les)f(calculs)o(.)-246 507 y
SDict begin H.S end
 -246
507 a -246 507 a
SDict begin 12 H.A end
 -246 507 a -246 507 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 507 a 0 TeXcolorgray
114 x FJ(Ex)o(er)o(cice)c(8)p 0 TeXcolorgray 42 w FI(Dans)i(cet)i(exer)
o(cice)o(,)f(on)g(utilise)i(deux)f(propr)q(i\351t\351s)g(du)f(cours)h
(:)p 0 TeXcolorgray -76 721 a(\225)p 0 TeXcolorgray 42
w(la)f(d\351r)q(iv\351e)h(de)h FF(x)h FE(7!)14 b FI(e)641
691 y Fu(a)t(x)t FA(\305)p Fu(b)811 721 y FI(est)20 b
FF(x)f FE(7!)e FF(a)t FI(e)1167 691 y Fu(a)t(x)t FA(\305)p
Fu(b)1337 721 y FI(;)p 0 TeXcolorgray -76 820 a(\225)p
0 TeXcolorgray 42 w(une)h(exponentielle)i(est)e(str)q(ictement)h
(positive)o(.)-246 1104 y Fh(P)n(our)c(tout)g Ff(x)k
Fd(2)12 b Fb(R)28 b Fh(:)7 1357 y Ff(f)17 b Fh(\()q Ff(x)5
b Fh(\))13 b Fd(\306)g Fh(e)246 1326 y FC(0,5)q Fu(x)t
FA(\305)p FC(1)-15 1487 y Ff(f)24 1456 y FA(0)46 1487
y Fh(\()q Ff(x)5 b Fh(\))13 b Fd(\306)26 b Fh(0,)7 b(5)210
1530 y Fa(|{z})251 1599 y FA(\251)342 1487 y Fh(e)377
1456 y FC(0,5)q Fu(x)t FA(\305)p FC(1)342 1521 y Fa(|)p
373 1521 51 9 v 51 w({z)p 486 1521 V 51 w(})433 1590
y FA(\251)-239 1825 y Ff(f)-200 1798 y FA(0)-157 1825
y Fd(\310)23 b Fh(0)i(donc)32 b Ff(f)41 b Fh(str)q(ictement)24
b(crois-)-246 1917 y(sante)15 b(sur)g Fb(R)p Fh(.)p 0
TeXcolorgray 0 TeXcolorgray -246 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -246 3039 a 276
2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 261 3047 a FC(0)145 b(1)i(2)-584
b FA(\241)p FC(1)-250 b FA(\241)p FC(2)187 2792 y(1)187
2615 y(2)187 2438 y(3)187 2261 y(4)276 2950 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(0.5*x+1.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 789 3039 a
currentpoint initclip moveto
 789 3039 a 0 TeXcolorgray
827 3054 9 2033 v 0 TeXcolorgray 873 1104 a Fh(P)n(our)15
b(tout)g Ff(x)j Fd(2)13 b Fb(R)28 b Fh(:)1123 1357 y
Ff(g)8 b Fh(\()q Ff(x)d Fh(\))15 b Fd(\306)f Fh(e)1367
1326 y FA(\241)p FC(1,5)q Fu(x)1102 1487 y Ff(g)1144
1456 y FA(0)1167 1487 y Fh(\()q Ff(x)5 b Fh(\))13 b Fd(\306)h(\241)p
Fh(1,)7 b(5)1332 1530 y Fa(|)p 1363 1530 13 9 v 13 w({z)p
1438 1530 V 13 w(})1385 1599 y FA(\252)1487 1487 y Fh(e)1522
1456 y FA(\241)p FC(1,5)q Fu(x)1487 1521 y Fa(|)p 1518
1521 35 9 v 35 w({z)p 1615 1521 V 35 w(})1563 1590 y
FA(\251)874 1825 y Ff(g)916 1798 y FA(0)973 1825 y Fd(\307)35
b Fh(0)k(donc)e Ff(g)48 b Fh(str)q(ictement)36 b(d\351-)873
1917 y(croissante)14 b(sur)h Fb(R)p Fh(.)p 0 TeXcolorgray
0 TeXcolorgray 873 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 873 3039 a 1394 2950 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1379 3047 a FC(0)146 b(1)g(2)-583 b FA(\241)p FC(1)-250
b FA(\241)p FC(2)1305 2792 y(1)1305 2615 y(2)1305 2438
y(3)1305 2261 y(4)1394 2950 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(-1.5*x+0.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 1908 3039 a
currentpoint initclip moveto
 1908 3039 a 0 TeXcolorgray 1946
3054 9 2033 v 0 TeXcolorgray 1992 1104 a Fh(P)n(our)14
b(tout)h Ff(x)k Fd(2)12 b Fb(R)28 b Fh(:)2260 1359 y
Ff(h)s Fh(\()q Ff(x)5 b Fh(\))14 b Fd(\306)g Fh(e)2506
1328 y FC(2)q Fu(x)t FA(\241)p FC(2)2239 1490 y Ff(h)2284
1459 y FA(0)2306 1490 y Fh(\()q Ff(x)5 b Fh(\))13 b Fd(\306)57
b Fh(2)2471 1523 y Fa(|{z})2511 1592 y FA(\251)2602 1490
y Fh(e)2637 1459 y FC(2)q Fu(x)t FA(\241)p FC(2)2602
1523 y Fa(|)p 2633 1523 28 9 v 28 w({z)p 2723 1523 V
28 w(})2670 1592 y FA(\251)1992 1822 y Ff(h)2037 1795
y FA(0)2080 1822 y Fd(\310)23 b Fh(0)i(donc)g Ff(h)j
Fh(str)q(ictement)c(crois-)1992 1914 y(sante)14 b(sur)h
Fb(R)p Fh(.)p 0 TeXcolorgray 0 TeXcolorgray 1992 3039
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 3039 a 2513 2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2498 3047 a FC(0)146
b(1)g(2)-584 b FA(\241)p FC(1)-250 b FA(\241)p FC(2)2424
2792 y(1)2424 2615 y(2)2424 2438 y(3)2424 2261 y(4)2513
2950 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(2*x-2.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 3027 3039
a
currentpoint initclip moveto
 3027 3039 a 0 TeXcolorgray 3064 3054 9 2033 v 0 TeXcolorgray
3110 1104 a Fh(P)n(our)15 b(tout)g Ff(x)j Fd(2)13 b Fb(R)28
b Fh(:)3366 1359 y Ff(i)8 b Fh(\()q Ff(x)d Fh(\))13 b
Fd(\306)h Fh(e)3596 1328 y FA(\241)p FC(1)q Fu(x)t FA(\305)p
FC(1)3344 1490 y Ff(i)3374 1459 y FA(0)3396 1490 y Fh(\()q
Ff(x)5 b Fh(\))13 b Fd(\306)32 b(\241)p Fh(1)3561 1523
y Fa(|{z})3602 1592 y FA(\252)3692 1490 y Fh(e)3727 1459
y FA(\241)p FC(1)q Fu(x)t FA(\305)p FC(1)3692 1523 y
Fa(|)p 3723 1523 49 9 v 49 w({z)p 3834 1523 V 49 w(})3781
1592 y FA(\251)3110 1822 y Ff(i)3140 1795 y FA(0)3176
1822 y Fd(\307)15 b Fh(0)j(donc)f Ff(i)25 b Fh(str)q(ictement)16
b(d\351crois-)3110 1914 y(sante)f(sur)g Fb(R)p Fh(.)p
0 TeXcolorgray 0 TeXcolorgray 3111 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3111 3039 a
3631 2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3616 3047 a FC(0)146 b(1)g(2)-583
b FA(\241)p FC(1)-250 b FA(\241)p FC(2)3543 2792 y(1)3543
2615 y(2)3543 2438 y(3)3543 2261 y(4)3631 2950 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(-1*x+1.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 4145 3039 a
currentpoint initclip moveto
 4145 3039 a -246
3275 a Fh(\300)15 b(titr)o(e)g(d)n('illustr)o(ation,)g(on)f(a)i(tr)o
(ac\351)f(les)h(courbes)f(des)h(quatr)o(e)e(fonctions)o(.)g(Elles)i
(ont)e(toutes)g(une)h(allur)o(e)h(tr\350s)f(similair)o(e)o(,)h(\340)f
(deux)h(diff\351r)o(ences)f(pr\350s)h(:)p 0 TeXcolorgray
-73 3366 a(\225)p 0 TeXcolorgray 42 w(elles)g(montent)e(lorsque)i
Ff(a)h Fd(\310)c Fh(0,)j(elles)h(descendent)e(lorsque)h
Ff(a)h Fd(\307)c Fh(0)j(;)p 0 TeXcolorgray -73 3457 a(\225)p
0 TeXcolorgray 42 w(plus)f Fd(j)q Ff(a)t Fd(j)h Fh(est)f(gr)o(and,)g
(plus)g(la)h(pente)f(de)h(la)f(par)q(tie)g(inclin\351e)g(est)h(for)q
(te)o(.)-246 3539 y
SDict begin H.S end
 -246 3539 a -246 3539 a
SDict begin 12 H.A end
 -246 3539
a -246 3539 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 3539 a 0 TeXcolorgray 115 x FJ(Ex)o(er)o(cice)e(9)p
0 TeXcolorgray 42 w FI(La)j(fonction)27 b FF(f)36 b FI(est)18
b(d\351\002nie)f(sur)h(l)o('inter)q(valle)1517 3655 y([)1542
3654 y(0;)8 b(4)1650 3655 y(])1694 3654 y(par)1615 3853
y FF(f)19 b FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(\()p
FE(\241)p FI(2)r FF(x)h FE(\305)10 b FI(1\)e)2192 3819
y FA(\241)q Fu(x)2273 3853 y FI(.)-246 3905 y
SDict begin H.S end
 -246 3905
a -246 3905 a
SDict begin 12 H.A end
 -246 3905 a -246 3905 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 3905 a 0 TeXcolorgray
-141 4000 a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(utilise)i(la)f(for)q
(mule)g(pour)g(la)f(d\351r)q(iv\351e)h(d)n('un)g(produit)f(avec)768
4291 y FF(u)t FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p
FI(2)r FF(x)h FE(\305)10 b FI(1)808 b(,)g FF(v)7 b FI(\()r
FF(x)e FI(\))14 b FE(\306)g FI(e)3162 4257 y FA(\241)q
Fu(x)3243 4291 y FI(,)768 4415 y FF(u)819 4381 y FA(0)840
4415 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)h(\241)p FI(2)947
b(,)808 b FF(v)2940 4381 y FA(0)2961 4415 y FI(\()r FF(x)5
b FI(\))14 b FE(\306)g(\241)p FI(e)3238 4381 y FA(\241)q
Fu(x)3320 4415 y FI(.)-38 4732 y(On)j(obtient,)i(pour)e(tout)j
FF(x)g FE(2)836 4733 y FI([)862 4732 y(0;)8 b(4)970 4733
y(])1028 4732 y(:)1285 5023 y FF(f)1328 4989 y FA(0)1350
5023 y FI(\()r FF(x)d FI(\))14 b FE(\306)g FF(u)1584
4989 y FA(0)1605 5023 y FI(\()r FF(x)5 b FI(\))10 b FE(\243)i
FF(v)7 b FI(\()r FF(x)e FI(\))10 b FE(\305)g FF(u)t FI(\()r
FF(x)5 b FI(\))10 b FE(\243)i FF(v)2277 4989 y FA(0)2299
5023 y FI(\()r FF(x)5 b FI(\))1464 5148 y FE(\306)14
b(\241)p FI(2)c FE(\243)g FI(e)1743 5113 y FA(\241)q
Fu(x)1834 5148 y FE(\305)1899 5149 y FI(\()1926 5148
y FE(\241)p FI(2)r FF(x)15 b FE(\305)10 b FI(1)2182 5149
y(\))2220 5148 y FE(\243)2285 5083 y Fw(\241)2315 5148
y FE(\241)p FI(e)2409 5113 y FA(\241)q Fu(x)2491 5083
y Fw(\242)1464 5272 y FE(\306)k(\241)p FI(2)c FE(\243)g
FI(e)1743 5238 y FA(\241)q Fu(x)1834 5272 y FE(\305)g
FI(\()p FE(\241)p FI(2)r FF(x)5 b FI(\))10 b FE(\243)2169
5208 y Fw(\241)2199 5272 y FE(\241)p FI(e)2294 5238 y
FA(\241)q Fu(x)2375 5208 y Fw(\242)2415 5272 y FE(\305)g
FI(1)g FE(\243)2595 5208 y Fw(\241)2625 5272 y FE(\241)p
FI(e)2719 5238 y FA(\241)q Fu(x)2801 5208 y Fw(\242)1464
5397 y FE(\306)k(\241)p FI(2)c FE(\243)g FI(e)1743 5362
y FA(\241)q Fu(x)1834 5397 y FE(\305)g FI(2)r FF(x)15
b FE(\243)10 b FI(e)2101 5362 y FA(\241)q Fu(x)2192 5397
y FE(\241)g FI(1)g FE(\243)g FI(e)2412 5362 y FA(\241)q
Fu(x)1464 5521 y FE(\306)1533 5522 y FI(\()1560 5521
y FE(\241)p FI(2)g FE(\305)g FI(2)r FF(x)15 b FE(\241)10
b FI(1)1931 5522 y(\))1968 5521 y(e)2007 5487 y FA(\241)q
Fu(x)1464 5646 y FE(\306)1533 5647 y FI(\()1560 5646
y(2)r FF(x)15 b FE(\241)10 b FI(3)1761 5647 y(\))1797
5646 y(e)1836 5611 y FA(\241)q Fu(x)1918 5646 y FI(.)p
0 TeXcolorgray 1930 5895 a(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FI(2.)p
0 TeXcolorgray 43 w(On)17 b(\351tudie)h(le)g(signe)g(de)25
b FF(f)750 -193 y FA(0)789 -163 y FI(et)17 b(on)h(en)f(d\351duit)h(les)
g(var)q(iations)g(de)25 b FF(f)50 b FI(:)p 0 TeXcolorgray
7 -51 a(\225)p 0 TeXcolorgray 42 w(2)r FF(x)15 b FE(\241)10
b FI(3)16 b FE(\306)e FI(0)29 b FE(\()-12 b(\))29 b FI(2)r
FF(x)20 b FE(\306)14 b FI(3)29 b FE(\()-12 b(\))31 b
FF(x)20 b FE(\306)1152 -84 y FC(3)p 1152 -71 31 5 v 1152
-22 a(2)1221 -51 y FE(\()-12 b(\))31 b FF(x)19 b FE(\306)c
FI(1,)8 b(5)18 b(;)p 0 TeXcolorgray 7 49 a(\225)p 0 TeXcolorgray
42 w(e)119 19 y FA(\241)q Fu(x)217 49 y FI(est)g FE(\251)g
FI(pour)f(tout)h(r\351el)i FF(x)5 b FI(.)p 0 TeXcolorgray
0 TeXcolorgray 124 203 a

 124 203 a 124 203 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 124 203
a
 0 setgray
 124 203 a 167 w FF(x)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -37.04672 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a
85 w FI(2)r FF(x)18 b FE(\241)13 b FI(3)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -60.20268 ] concat

 pgfs


 124
203 a
 0 setgray
 124 203 a 128 w FI(e)292 172 y FA(\241)q Fu(x)124
203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.0266 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a 110 w FF(f)277 172 y FA(0)299
203 y FI(\()r FF(x)5 b FI(\))124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -115.69254 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a 121 w FF(f)19 b FI(\()r FF(x)5 b FI(\))124 203
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(0)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.65038 -14.36803 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203
a FI(1.5)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(4)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs



124 203 a
 0 setgray
 124 203 a FE(\241)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203
a FI(0)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FE(\305)124 203
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FE(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a FE(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FE(\241)124
203 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(0)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a FE(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray

124 203 a FI(1)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203
a
 0 setgray
 124 203 a FI(1)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 34.90273 107.2816 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 109.27415 -130.04488 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203
a
 0 setgray
 124 203 a FE(\241)p FI(2e)258 172 y FA(\241)p FC(1,5)124
203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 34.90273 107.2816 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 109.27415 -130.04488 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203 a FE(\241)p
FI(2e)258 172 y FA(\241)p FC(1,5)124 203 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.97566 -102.95012 moveto

 101.20358 -116.88971 lineto

 pgfstr

 save

 [0.93326 -0.3591 0.3591 0.93326 101.20357 -116.8897 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 29.36024 178.08904 -107.01553 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 180.08159 -104.97318 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203
a FE(\241)p FI(7e)258 172 y FA(\241)p FC(4)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 29.36024 178.08904 -107.01553 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 180.08159 -104.97318 ] concat

 pgfs



124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203 a FE(\241)p FI(7e)258
172 y FA(\241)p FC(4)124 203 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 146.05385 -118.08884 moveto

 171.99313 -108.52132 lineto

 pgfstr

 save

 [0.93819 0.34604 -0.34604 0.93819 171.99312 -108.52132 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 2050 1355 9 1155 v 0 TeXcolorgray 0 TeXcolorgray
2140 284 a FI(\225)p 0 TeXcolorgray 50 w FF(f)19 b FI(\(0\))14
b FE(\306)h FI(\()p FE(\241)p FI(2)10 b FE(\243)g FI(0)g
FE(\305)g FI(1\))g FE(\243)22 b FI(e)2947 250 y FA(\241)p
FC(0)2896 318 y Fw(|{z})2930 395 y FA(\306)p FC(1)3049
284 y FE(\306)14 b FI(1)c FE(\243)g FI(1)16 b FE(\306)e
FI(1)p 0 TeXcolorgray 2140 480 a(\225)p 0 TeXcolorgray
50 w FF(f)19 b FI(\(1,)8 b(5\))15 b FE(\306)f FI(\()p
FE(\241)p FI(2)c FE(\243)g FI(1,)e(5)i FE(\305)g FI(1\))g
FE(\243)g FI(e)3074 450 y FA(\241)p FC(1,5)3211 480 y
FE(\306)15 b(\241)p FI(2e)3415 450 y FA(\241)p FC(1,5)3552
480 y FE(\274)g(\241)p FI(0,)8 b(45)p 0 TeXcolorgray
2140 579 a(\225)p 0 TeXcolorgray 50 w FF(f)19 b FI(\(4\))14
b FE(\306)h FI(\()p FE(\241)p FI(2)10 b FE(\243)g FI(4)g
FE(\305)g FI(1\))g FE(\243)g FI(e)2937 549 y FA(\241)p
FC(4)3027 579 y FE(\306)15 b(\241)p FI(7e)3231 549 y
FA(\241)p FC(4)3322 579 y FE(\274)f(\241)p FI(0,)8 b(13)-246
1442 y
SDict begin H.S end
 -246 1442 a -246 1442 a
SDict begin 12 H.A end
 -246 1442 a -246 1442
a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 1442 a 0 TeXcolorgray 99 x FJ(Ex)o(er)o(cice)14
b(10)p 0 TeXcolorgray 41 w FI(La)k(fonction)i FF(g)27
b FI(est)18 b(d\351\002nie)f(sur)h FB(R)f FI(par)i FF(g)10
b FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(e)1647 1511
y Fu(x)1696 1541 y FE(\241)e FF(x)j FE(\241)10 b FI(1.)-246
1685 y(P)n(our)17 b(tout)j FF(x)g FE(2)14 b FB(R)31 b
FI(:)1521 1785 y FF(g)1569 1750 y FA(0)1590 1785 y FI(\()r
FF(x)5 b FI(\))14 b FE(\306)g FI(e)1813 1750 y Fu(x)1862
1785 y FE(\241)c FI(1)g FE(\241)g FI(0)15 b FE(\306)f
FI(e)2207 1750 y Fu(x)2255 1785 y FE(\241)c FI(1.)-246
2061 y(On)18 b(r\351sout)g(l)o('\351quation)h(:)278 2202
y(e)319 2168 y Fu(x)367 2202 y FE(\241)10 b FI(1)15 b
FE(\306)f FI(0)29 b FE(\()-12 b(\))29 b FI(e)834 2168
y Fu(x)887 2202 y FE(\306)14 b FI(1)29 b FE(\()-12 b(\))31
b FF(x)20 b FE(\306)14 b FI(0.)-246 2344 y Fx(")p FI(On)i(a)f
(utilis\351)i(la)f(propr)q(i\351t\351)f(:)h(le)f(seul)i(nombr)o(e)e
(dont)g(l)o('exponentielle)-246 2443 y(est)j(\351gale)g(\340)f(1)h(est)
g(0.)-246 2576 y(P)n(our)d(avoir)g(les)h(signes)g(dans)g(chaque)g(case)
f(du)g(tableau,)h(on)g(r)o(emplace)-246 2676 y(par)i(des)f(valeurs)h
(de)h FF(x)37 b FI(:)p 0 TeXcolorgray -76 2775 a(\225)p
0 TeXcolorgray 42 w(pour)16 b(l)o('inter)q(valle)563
2776 y(])588 2775 y FE(\2411)p FI(;)8 b(0)789 2776 y([)823
2775 y(,)16 b(on)g(pr)o(end)g(\(par)g(exemple\))j FF(x)h
FE(\306)14 b(\241)p FI(1)-3 2875 y(et)j(on)h(calcule)g(avec)f(la)h
(calculatr)q(ice)g(:)424 3016 y FF(g)472 2982 y FA(0)493
3016 y FI(\()p FE(\241)p FI(1\))c FE(\306)g FI(e)764
2982 y FA(\241)p FC(1)851 3016 y FE(\241)c FI(1)15 b
FE(\274)f(\241)p FI(0,)8 b(63)148 b FE(\252)17 b FI(;)p
0 TeXcolorgray -76 3157 a(\225)p 0 TeXcolorgray 42 w(pour)23
b(l)o('inter)q(valle)576 3158 y(])601 3157 y(0;)8 b FE(\3051)802
3158 y FI([)836 3157 y(,)23 b(on)f(pr)o(end)g(\(par)g(exemple\))k
FF(x)f FE(\306)19 b FI(1)-3 3257 y(et)e(on)h(calcule)g(avec)f(la)h
(calculatr)q(ice)g(:)498 3398 y FF(g)546 3364 y FA(0)567
3398 y FI(\(1\))c FE(\306)g FI(e)784 3364 y FC(1)829
3398 y FE(\241)c FI(1)k FE(\274)h FI(3,)8 b(72)158 b
FE(\251)10 b FI(.)p 0 TeXcolorgray 1946 3417 9 1439 v
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2006 1980
a

 2006 1980 a 2006 1980 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 167
w FF(x)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -40.29451 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 68 w FF(g)2122
1950 y FA(0)2143 1980 y FI(\()r FF(x)5 b FI(\))19 b FE(\306)2095
2080 y FI(e)2135 2049 y Fu(x)2186 2080 y FE(\241)13 b
FI(1)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -87.15752 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 116 w FF(g)d
FI(\()r FF(x)5 b FI(\))2006 1980 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -113.38724 moveto

 255.12128 -113.38724 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -113.38724 lineto

 255.12128 -113.38724 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -113.38724 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -113.38724 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 62.89185 -16.20581 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980
a FE(\2411)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FI(0)2006
1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 232.97278 -16.72884 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FE(\3051)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -43.94487 ] concat

 pgfs


 2006
1980 a
 0 setgray
 2006 1980 a FE(\241)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.47653 -45.56381 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006
1980 a FI(0)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.12997 -45.07565 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FE(\305)2006
1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 68.87445 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 70.867 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006 1980
a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 68.87445 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 70.867 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006
1980 a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 151.48398 -109.40213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -107.35977 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980
a
 0 setgray
 2006 1980 a FI(0)2006 1980 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 151.48398 -109.40213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -107.35977 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980
a 2006 1980 a
 0 setgray
 2006 1980 a FI(0)2006 1980 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 76.64151 -65.49829 moveto

 145.5548 -99.2495 lineto

 pgfstr

 save

 [0.89804 -0.43982 0.43982 0.89804 145.55478 -99.24948 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 238.95532 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 240.94788 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006
1980 a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 238.95532 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 240.94788 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980
a
 0 setgray
 2006 1980 a 2006 1980 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 164.11284 -100.29973 moveto

 233.02614 -66.54875 lineto

 pgfstr

 save

 [0.89804 0.43982 -0.43982 0.89804 233.02612 -66.54877 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



2612 3398 a FF(g)10 b FI(\(0\))k FE(\306)g FI(e)2877
3364 y FC(0)2922 3398 y FE(\241)c FI(0)g FE(\241)g FI(1)15
b FE(\306)f FI(1)c FE(\241)g FI(1)16 b FE(\306)e FI(0.)-246
3633 y FJ(R)o(emarque)g(:)k FI(Le)g(minimum)h(de)g FF(g)27
b FI(est)18 b(0,)g(donc)h FF(g)10 b FI(\()r FF(x)5 b
FI(\))14 b FE(\270)g FI(0)k(pour)f(tout)h(r\351el)i FF(x)j
FI(;)17 b(autr)o(ement)i(dit)e(e)2615 3603 y Fu(x)2664
3633 y FE(\241)12 b FF(x)j FE(\241)10 b FI(1)15 b FE(\270)f
FI(0.)k(C)o(ette)h(in\351galit\351)g(se)e(r\351\351cr)q(it)1778
3802 y(e)1818 3768 y Fu(x)1871 3802 y FE(\270)f FF(x)f
FE(\305)10 b FI(1.)-246 3971 y(On)20 b(obtiendr)o(a)g(ce)g(r\351sultat)
h(par)f(une)h(autr)o(e)e(m\351thode)i(dans)f(l)o('exer)o(cice)h(18)g
(\(utilisation)h(de)e(la)g(convexit\351\).)h(C)o(ette)g
(in\351galit\351)g(ser)o(a)f(utilis\351e)i(plus)-246
4070 y(tar)o(d)17 b(dans)g(l)o('ann\351e)o(,)i(pour)e(d\351montr)o(er)h
(des)f(r\351sultats)i(sur)e(les)i(limites)o(.)-246 4150
y
SDict begin H.S end
 -246 4150 a -246 4150 a
SDict begin 12 H.A end
 -246 4150 a -246 4150 a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246
4150 a 0 TeXcolorgray 111 x FJ(Ex)o(er)o(cice)14 b(11)p
0 TeXcolorgray 1410 4408 a FI(e)1449 4378 y FC(8)p 1260
4445 374 5 v 1260 4521 a FI(e)1299 4497 y FC(2)1345 4521
y FE(\243)c FI(e)1449 4497 y FC(1)1494 4521 y FE(\243)g
FI(e)1598 4497 y FC(3)1657 4464 y FE(\306)1809 4408 y
FI(e)1848 4378 y FC(8)p 1737 4445 220 5 v 1737 4521 a
FI(e)1776 4497 y FC(2)p FA(\305)p FC(1)p FA(\305)p FC(3)1980
4464 y FE(\306)2059 4408 y FI(e)2098 4378 y FC(8)p 2059
4445 75 5 v 2059 4521 a FI(e)2098 4497 y FC(6)2158 4464
y FE(\306)k FI(e)2266 4430 y FC(8)p FA(\241)p FC(6)2388
4464 y FE(\306)g FI(e)2496 4430 y FC(2)1445 4624 y FI(e)c
FE(\243)g FI(e)1598 4593 y FC(2)p 1445 4661 189 5 v 1455
4691 a Fw(\241)1484 4756 y FI(e)1524 4732 y FC(2)1559
4691 y Fw(\242)1588 4713 y FC(2)1657 4680 y FE(\306)1737
4624 y FI(e)1776 4593 y FC(1)1821 4624 y FE(\243)g FI(e)1925
4593 y FC(2)p 1737 4661 224 5 v 1775 4737 a FI(e)1814
4713 y FC(2)p FA(\243)p FC(2)1984 4680 y FE(\306)2064
4624 y FI(e)2103 4593 y FC(1)p FA(\305)p FC(2)p 2064
4661 147 5 v 2100 4737 a FI(e)2139 4713 y FC(4)2235 4680
y FE(\306)k FI(e)2343 4646 y FC(3)p FA(\241)p FC(4)2465
4680 y FE(\306)g FI(e)2573 4646 y FA(\241)p FC(1)1284
4837 y Fw(\241)1313 4901 y FI(e)1353 4867 y FC(2)1387
4837 y Fw(\242)1417 4852 y FC(3)1462 4901 y FE(\243)c
FI(e)1567 4867 y FA(\241)p FC(5)1657 4901 y FE(\306)15
b FI(e)1766 4867 y FC(2)p FA(\243)p FC(3)1884 4901 y
FE(\243)10 b FI(e)1988 4867 y FA(\241)p FC(5)2079 4901
y FE(\306)k FI(e)2187 4867 y FC(6)p FA(\241)p FC(5)2309
4901 y FE(\306)g FI(e)2417 4867 y FC(1)-246 5000 y
SDict begin H.S end
 -246
5000 a -246 5000 a
SDict begin 12 H.A end
 -246 5000 a -246 5000 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246 5000
a 0 TeXcolorgray 92 x FJ(Ex)o(er)o(cice)g(12)p 0 TeXcolorgray
41 w FI(Dans)j(chaque)h(cas)o(,)g(on)f(note)h FD(S)39
b FI(l)o('ensemble)20 b(des)d(solutions)o(.)-246 5133
y
SDict begin H.S end
 -246 5133 a -246 5133 a
SDict begin 12 H.A end
 -246 5133 a -246 5133 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246
5133 a 0 TeXcolorgray -141 5228 a FI(1.)p 0 TeXcolorgray
1062 5397 a(e)1102 5362 y Fu(x)1155 5397 y FE(\306)d(\241)p
FI(3)1062 5521 y(I)o(mpossible)o(,)k(car)f(une)h(exponentielle)j(est)d
(str)q(ictement)g(positive)1062 5646 y FD(S)36 b FE(\306)14
b(;)p 0 TeXcolorgray 1909 5895 a FI(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 683 20 a(e)723 -14 y FC(2)q
Fu(x)t FA(\241)p FC(1)880 20 y FE(\306)14 b FI(1)683
145 y(2)r FF(x)h FE(\241)10 b FI(1)16 b FE(\306)e FI(0)743
b(\(le)17 b(seul)i(nombr)o(e)e(dont)g(l)o('exponentielle)22
b(vaut)17 b(1)h(est)g(0\))685 315 y FF(x)i FE(\306)823
259 y FI(1)p 823 296 41 5 v 823 372 a(2)683 518 y FD(S)36
b FE(\306)848 408 y Fw(\275)905 462 y FI(1)p 905 499
V 905 575 a(2)955 408 y Fw(\276)1010 518 y FI(.)-246
671 y
SDict begin H.S end
 -246 671 a -246 671 a
SDict begin 12 H.A end
 -246 671 a -246 671 a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246
671 a 0 TeXcolorgray -141 763 a FI(3.)p 0 TeXcolorgray
43 w(L)-10 b('\351quation)19 b(e)384 733 y FC(2)q Fu(x)464
763 y FE(\305)10 b FI(2e)610 733 y Fu(x)662 763 y FE(\306)15
b FI(3)i(se)h(r\351\351cr)q(it)1740 799 y Fw(\241)1770
863 y FI(e)1810 829 y Fu(x)1848 799 y Fw(\242)1878 820
y FC(2)1923 863 y FE(\305)10 b FI(2e)2069 829 y Fu(x)2118
863 y FE(\241)g FI(3)k FE(\306)h FI(0.)-38 1027 y(P)n(our)i(r\351soudr)
o(e)o(,)g(il)g(est)h(astucieux)h(de)e(noter)k FF(X)27
b FE(\306)14 b FI(e)1500 997 y Fu(x)1556 1027 y FI(;)j(l)o
('\351quation)j(se)d(r\351\351cr)q(it)h(alors)f(sous)h(la)g(for)q(me)
1788 1210 y FF(X)1848 1175 y FC(2)1894 1210 y FE(\305)10
b FI(2)s FF(X)23 b FE(\241)10 b FI(3)15 b FE(\306)f FI(0.)-38
1392 y(On)j(r\351sout)h(avec)g(la)f(m\351thode)i(de)e(la)g(classe)h(de)
f(pr)o(emi\350r)o(e)h(:)p 0 TeXcolorgray 7 1507 a(\225)p
0 TeXcolorgray 44 w FF(a)g FE(\306)c FI(1,)k FF(b)g FE(\306)c
FI(2,)k FF(c)i FE(\306)14 b(\241)p FI(3.)p 0 TeXcolorgray
7 1606 a(\225)p 0 TeXcolorgray 42 w(le)k(discr)q(iminant)g(est)g
FG(\242)c FE(\306)h FF(b)921 1576 y FC(2)965 1606 y FE(\241)10
b FI(4)r FF(a)t(c)21 b FE(\306)14 b FI(2)1283 1576 y
FC(2)1329 1606 y FE(\241)c FI(4)g FE(\243)g FI(1)g FE(\243)g
FI(\()p FE(\241)p FI(3\))15 b FE(\306)g FI(16.)p 0 TeXcolorgray
7 1706 a(\225)p 0 TeXcolorgray 42 w FG(\242)f FE(\310)h
FI(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1305
2028 y FF(X)1358 2040 y FC(1)1408 2028 y FE(\306)1487
1972 y(\241)p FF(b)c FE(\241)1664 1906 y(p)p 1728 1906
55 5 v 66 x FG(\242)p 1487 2009 296 5 v 1590 2085 a FI(2)r
FF(a)1806 2028 y FE(\306)1885 1972 y(\241)p FI(2)c FE(\241)2055
1907 y(p)p 2120 1907 82 5 v 2120 1972 a FI(16)p 1885
2009 316 5 v 1965 2085 a(2)g FE(\243)g FI(1)2225 2028
y FE(\306)2304 1972 y(\241)p FI(2)g FE(\241)g FI(4)p
2304 2009 212 5 v 2389 2085 a(2)2540 2028 y FE(\306)2619
1972 y(\241)p FI(6)p 2619 2009 96 5 v 2646 2085 a(2)2738
2028 y FE(\306)k(\241)p FI(3,)1305 2250 y FF(X)1358 2262
y FC(2)1408 2250 y FE(\306)1487 2194 y(\241)p FF(b)g
FE(\305)1664 2128 y(p)p 1728 2128 55 5 v 66 x FG(\242)p
1487 2231 296 5 v 1590 2307 a FI(2)r FF(a)1806 2250 y
FE(\306)1885 2194 y(\241)p FI(2)c FE(\305)2055 2129 y(p)p
2120 2129 82 5 v 2120 2194 a FI(16)p 1885 2231 316 5
v 1965 2307 a(2)g FE(\243)g FI(1)2225 2250 y FE(\306)2304
2194 y(\241)p FI(2)g FE(\305)g FI(4)p 2304 2231 212 5
v 2389 2307 a(2)2540 2250 y FE(\306)2619 2194 y FI(2)p
2619 2231 41 5 v 2619 2307 a(2)2683 2250 y FE(\306)15
b FI(1.)80 2508 y(On)i(a)g(pos\351)k FF(X)27 b FE(\306)14
b FI(e)627 2477 y Fu(x)665 2508 y FI(,)j(donc)g(il)h(y)f(a)g(deux)h
(possibilit\351s)i(:)1681 2690 y(e)1721 2656 y Fu(x)1774
2690 y FE(\306)14 b(\241)p FI(3)147 b(ou)f(e)2362 2656
y Fu(x)2414 2690 y FE(\306)14 b FI(1.)80 2873 y(La)21
b(pr)o(emi\350r)o(e)g(\351quation)h(n)-6 b('a)22 b(pas)f(de)g
(solution,)i(car)d(une)i(exponentielle)i(est)d(str)q(ictement)i
(positive)9 b(;)22 b(la)f(deuxi\350me)i(\351quation)f(a)f(une)80
2972 y(seule)d(solution)h(:)h FF(x)g FE(\306)14 b FI(0.)80
3122 y(C)o(onclusion)19 b(:)e(L)-10 b('unique)20 b(solution)f(de)e(l)o
('\351quation)j(e)1661 3092 y FC(2)q Fu(x)1741 3122 y
FE(\305)10 b FI(2e)1887 3092 y Fu(x)1940 3122 y FE(\306)k
FI(3)k(est)i FF(x)f FE(\306)14 b FI(0)32 b(:)1970 3305
y FD(S)k FE(\306)2135 3306 y FI({)2161 3305 y(0)2201
3306 y(})2235 3305 y(.)-246 3397 y
SDict begin H.S end
 -246 3397 a -246 3397
a
SDict begin 12 H.A end
 -246 3397 a -246 3397 a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 3397 a 0 TeXcolorgray
107 x FJ(Ex)o(er)o(cice)14 b(13)p 0 TeXcolorgray 41 w
FI(On)j(utiliser)o(a)j(la)d(propr)q(i\351t\351)h(:)f(pour)h(tout)g
(nombr)o(e)f(r\351el)j FF(x)5 b FI(,)1741 3686 y(e)1781
3652 y Fu(x)1830 3686 y FE(\243)10 b FI(e)1934 3652 y
FA(\241)q Fu(x)2029 3686 y FE(\306)15 b FI(1.)-246 3756
y
SDict begin H.S end
 -246 3756 a -246 3756 a
SDict begin 12 H.A end
 -246 3756 a -246 3756 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246
3756 a 0 TeXcolorgray -141 3869 a FI(1.)p 0 TeXcolorgray
43 w(D)o('apr\350s)i(l)o('identit\351)i(r)o(emarquable)e(\()r
FF(a)d FE(\305)c FF(b)t FI(\))1261 3839 y FC(2)1310 3869
y FE(\306)16 b FF(a)1428 3839 y FC(2)1473 3869 y FE(\305)10
b FI(2)r FF(a)t(b)k FE(\305)c FF(b)1796 3839 y FC(2)1863
3869 y FI(:)1088 4019 y Fw(\241)1118 4083 y FI(e)1158
4049 y Fu(x)1206 4083 y FE(\305)g FI(e)1311 4049 y FA(\241)q
Fu(x)1392 4019 y Fw(\242)1422 4040 y FC(2)1471 4083 y
FE(\306)1540 4019 y Fw(\241)1570 4083 y FI(e)1610 4049
y Fu(x)1648 4019 y Fw(\242)1678 4040 y FC(2)1723 4083
y FE(\305)g FI(2)g FE(\243)g FI(e)1944 4049 y Fu(x)1993
4083 y FE(\243)g FI(e)2097 4049 y FA(\241)q Fu(x)1903
4117 y Fw(|)p 1937 4117 69 10 v 69 w({z)p 2074 4117 V
69 w(})2005 4194 y FA(\306)p FC(1)2186 4083 y FE(\305)2249
4019 y Fw(\241)2279 4083 y FI(e)2318 4049 y FA(\241)q
Fu(x)2400 4019 y Fw(\242)2429 4040 y FC(2)2478 4083 y
FE(\306)15 b FI(e)2587 4049 y FC(2)q Fu(x)2667 4083 y
FE(\305)10 b FI(2)g FE(\305)g FI(e)2887 4049 y FA(\241)p
FC(2)q Fu(x)2999 4083 y FI(.)-246 4251 y
SDict begin H.S end
 -246 4251 a
-246 4251 a
SDict begin 12 H.A end
 -246 4251 a -246 4251 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246 4251 a 0 TeXcolorgray
-141 4333 a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(multiplie)j(le)e
(num\351r)o(ateur)h(et)f(le)f(d\351nominateur)i(par)f(e)1775
4303 y Fu(x)1845 4333 y FI(:)1574 4500 y(e)1614 4470
y Fu(x)1663 4500 y FE(\241)10 b FI(e)1767 4470 y FA(\241)q
Fu(x)p 1574 4537 275 5 v 1574 4614 a FI(e)1614 4590 y
Fu(x)1663 4614 y FE(\305)g FI(e)1767 4590 y FA(\241)q
Fu(x)1872 4557 y FE(\306)1951 4501 y FI(\()1978 4500
y(e)2018 4470 y Fu(x)2067 4500 y FE(\241)g FI(e)2171
4470 y FA(\241)q Fu(x)2253 4501 y FI(\))2290 4500 y FE(\243)g
FI(e)2395 4470 y Fu(x)p 1951 4537 482 5 v 1951 4615 a
FI(\()1978 4614 y(e)2018 4590 y Fu(x)2067 4614 y FE(\305)g
FI(e)2171 4590 y FA(\241)q Fu(x)2253 4615 y FI(\))2290
4614 y FE(\243)g FI(e)2395 4590 y Fu(x)1872 4772 y FE(\306)1951
4716 y FI(e)1992 4686 y Fu(x)2040 4716 y FE(\243)g FI(e)2146
4686 y Fu(x)2194 4716 y FE(\241)g FI(e)2299 4686 y FA(\241)q
Fu(x)2390 4716 y FE(\243)g FI(e)2495 4686 y Fu(x)p 1951
4753 583 5 v 1951 4829 a FI(e)1992 4805 y Fu(x)2040 4829
y FE(\243)g FI(e)2146 4805 y Fu(x)2194 4829 y FE(\241)g
FI(e)2299 4805 y FA(\241)q Fu(x)2390 4829 y FE(\243)g
FI(e)2495 4805 y Fu(x)1872 4982 y FE(\306)1951 4926 y
FI(e)1992 4896 y Fu(x)t FA(\305)q Fu(x)2117 4926 y FE(\241)g
FI(e)2222 4896 y FA(\241)q Fu(x)t FA(\305)q Fu(x)p 1951
4963 429 5 v 1951 5039 a FI(e)1992 5015 y Fu(x)t FA(\305)q
Fu(x)2117 5039 y FE(\305)g FI(e)2222 5015 y FA(\241)q
Fu(x)t FA(\305)q Fu(x)1872 5198 y FE(\306)1951 5142 y
FI(e)1991 5112 y FC(2)q Fu(x)2071 5142 y FE(\241)g FI(e)2175
5112 y FC(0)p 1951 5179 259 5 v 1951 5255 a FI(e)1991
5231 y FC(2)q Fu(x)2071 5255 y FE(\305)g FI(e)2175 5231
y FC(0)1872 5414 y FE(\306)1951 5358 y FI(e)1991 5327
y FC(2)q Fu(x)2071 5358 y FE(\241)g FI(1)p 1951 5395
226 5 v 1951 5471 a(e)1991 5447 y FC(2)q Fu(x)2071 5471
y FE(\305)g FI(1)2187 5414 y(.)-246 5569 y
SDict begin H.S end
 -246 5569
a -246 5569 a
SDict begin 12 H.A end
 -246 5569 a -246 5569 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 5569 a 0 TeXcolorgray
1909 5895 a FI(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(14)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(La)j(fonction)27 b FF(f)36 b FI(est)18
b(de)f(la)h(for)q(me)25 b FF(f)19 b FI(\()r FF(x)5 b
FI(\))14 b FE(\306)g FI(e)1678 -193 y Fu(u)s FC(\()q
Fu(x)t FC(\))1797 -163 y FI(,)j(avec)1572 15 y FF(u)t
FI(\()r FF(x)5 b FI(\))15 b FE(\306)f(\241)r FF(x)1908
-20 y FC(2)1943 15 y FI(,)154 b FF(u)2168 -20 y FA(0)2190
15 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p FI(2)r
FF(x)5 b FI(.)-38 192 y(On)17 b(a)g(donc,)h(pour)f(tout)j
FF(x)g FE(2)14 b FB(R)31 b FI(:)1534 305 y FF(f)1577
271 y FA(0)1598 305 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g
FF(u)1832 271 y FA(0)1854 305 y FI(\()r FF(x)5 b FI(\))10
b FE(\243)g FI(e)2068 271 y Fu(u)s FC(\()q Fu(x)t FC(\))2202
305 y FE(\306)k(\241)p FI(2)r FF(x)5 b FI(e)2452 271
y FA(\241)q Fu(x)2529 248 y Ft(2)2562 305 y FI(.)-246
371 y
SDict begin H.S end
 -246 371 a -246 371 a
SDict begin 12 H.A end
 -246 371 a -246 371 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246
371 a 0 TeXcolorgray -141 465 a FI(2.)p 0 TeXcolorgray
43 w(La)17 b(fonction)i FF(h)j FI(est)c(de)f(la)g(for)q(me)h
FF(h)t FI(\()r FF(x)5 b FI(\))14 b FE(\306)1197 466 y
FI(\()1223 465 y FF(u)t FI(\()r FF(x)5 b FI(\))1374 466
y(\))1401 435 y Fu(n)1453 465 y FI(,)17 b(avec)1360 643
y FF(u)t FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p
FI(4)r FF(x)h FE(\305)10 b FI(1,)156 b FF(u)2077 608
y FA(0)2099 643 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p
FI(4,)155 b FF(n)19 b FE(\306)14 b FI(3.)-38 820 y(On)j(a)g(donc,)h
(pour)f(tout)j FF(x)g FE(2)14 b FB(R)31 b FI(:)857 997
y FF(h)907 963 y FA(0)929 997 y FI(\()r FF(x)5 b FI(\))14
b FE(\306)g FF(n)g FE(\243)c FF(u)1289 963 y FA(0)1311
997 y FI(\()r FF(x)5 b FI(\))10 b FE(\243)1486 998 y
FI(\()1513 997 y FF(u)t FI(\()r FF(x)5 b FI(\))1664 998
y(\))1691 963 y Fu(n)s FA(\241)p FC(1)1821 997 y FE(\306)14
b FI(3)c FE(\243)g FI(\()p FE(\241)p FI(4\))g FE(\243)g
FI(\()p FE(\241)p FI(4)r FF(x)15 b FE(\305)10 b FI(1\))2539
963 y FC(3)p FA(\241)p FC(1)2663 997 y FE(\306)k(\241)p
FI(12)2875 998 y(\()2903 997 y FE(\241)p FI(4)r FF(x)h
FE(\305)10 b FI(1)3159 998 y(\))3187 963 y FC(2)3230
997 y FI(.)-246 1086 y
SDict begin H.S end
 -246 1086 a -246 1086 a
SDict begin 12 H.A end
 -246 1086
a -246 1086 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 1086 a 0 TeXcolorgray -141 1189 a
FI(3.)p 0 TeXcolorgray 43 w(La)17 b(fonction)i FF(i)26
b FI(est)18 b(de)g(la)f(for)q(me)h FF(i)10 b FI(\()r
FF(x)5 b FI(\))13 b FE(\306)h FI(e)1202 1158 y Fu(u)s
FC(\()q Fu(x)t FC(\))1321 1189 y FI(,)j(avec)1590 1366
y FF(u)t FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(5)r
FF(x)h FE(\241)10 b FI(9,)156 b FF(u)2252 1332 y FA(0)2274
1366 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(5.)-38
1543 y(On)j(a)g(donc,)h(pour)f(tout)j FF(x)g FE(2)14
b FB(R)31 b FI(:)1569 1643 y FF(i)1603 1609 y FA(0)1623
1643 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)h FF(u)1858
1609 y FA(0)1879 1643 y FI(\()r FF(x)5 b FI(\))10 b FE(\243)g
FI(e)2094 1609 y Fu(u)s FC(\()q Fu(x)t FC(\))2227 1643
y FE(\306)k FI(5e)2376 1609 y FC(5)q Fu(x)t FA(\241)p
FC(9)2519 1643 y FI(.)-246 1699 y
SDict begin H.S end
 -246 1699 a -246 1699
a
SDict begin 12 H.A end
 -246 1699 a -246 1699 a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246 1699 a 0 TeXcolorgray
-141 1803 a FI(4.)p 0 TeXcolorgray 43 w(La)j(fonction)27
b FF(j)g FI(est)18 b(de)f(la)g(for)q(me)26 b FF(j)10
b FI(\()r FF(x)5 b FI(\))14 b FE(\306)1179 1804 y FI(\()1206
1803 y FF(u)t FI(\()r FF(x)5 b FI(\))1357 1804 y(\))1384
1773 y Fu(n)1435 1803 y FI(,)18 b(avec)1313 1980 y FF(u)t
FI(\()r FF(x)5 b FI(\))15 b FE(\306)h FF(x)1594 1946
y FC(2)1639 1980 y FE(\241)10 b FI(3)r FF(x)5 b FI(,)156
b FF(u)2017 1946 y FA(0)2038 1980 y FI(\()r FF(x)5 b
FI(\))15 b FE(\306)f FI(2)r FF(x)h FE(\241)10 b FI(3,)156
b FF(n)18 b FE(\306)d FI(5.)-38 2158 y(On)i(a)g(donc,)h(pour)f(tout)j
FF(x)g FE(2)14 b FB(R)31 b FI(:)690 2348 y FF(j)724 2314
y FA(0)745 2348 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g
FF(n)g FE(\243)c FF(u)1105 2314 y FA(0)1127 2348 y FI(\()r
FF(x)5 b FI(\))10 b FE(\243)1302 2349 y FI(\()1329 2348
y FF(u)t FI(\()r FF(x)5 b FI(\))1480 2349 y(\))1507 2314
y Fu(n)s FA(\241)p FC(1)1637 2348 y FE(\306)14 b FI(5)c
FE(\243)1821 2349 y FI(\()1849 2348 y(2)r FF(x)15 b FE(\241)10
b FI(3)2050 2349 y(\))2088 2348 y FE(\243)2153 2284 y
Fw(\241)2185 2348 y FF(x)2229 2314 y FC(2)2275 2348 y
FE(\241)g FI(3)r FF(x)2426 2284 y Fw(\242)2456 2300 y
FC(5)p FA(\241)p FC(1)2578 2348 y FE(\306)2647 2349 y
FI(\()2674 2348 y(10)r FF(x)15 b FE(\241)10 b FI(15)2955
2349 y(\))2995 2348 y FE(\243)3060 2284 y Fw(\241)3091
2348 y FF(x)3135 2314 y FC(2)3181 2348 y FE(\241)g FI(3)r
FF(x)3332 2284 y Fw(\242)3362 2300 y FC(4)3406 2348 y
FI(.)-246 2451 y
SDict begin H.S end
 -246 2451 a -246 2451 a
SDict begin 12 H.A end
 -246 2451 a
-246 2451 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 2451 a 0 TeXcolorgray -141 2540 a FI(5.)p
0 TeXcolorgray 43 w(L)-10 b('\351nonc\351)19 b(nous)f(donne)1731
2639 y FF(k)5 b FI(\()r FF(x)g FI(\))14 b FE(\306)1961
2557 y Fw(p)p 2038 2557 319 5 v 2040 2639 a FF(x)2084
2615 y FC(2)2129 2639 y FE(\241)e FF(x)j FE(\305)10 b
FI(2)r(.)-38 2785 y(Il)23 b(faut)i(se)g(m\351\002er)f(:)g(on)h(ne)f
(peut)i(calculer)e(la)h(r)o(acine)f(carr\351e)g(d)n('un)h(nombr)o(e)f
(que)g(si)h(celui-ci)g(est)g(positif)9 b(;)26 b(et)e(on)g(ne)h(peut)g
(d\351r)q(iver)f(une)-38 2885 y(fonction)18 b(de)g(la)f(for)q(me)679
2827 y FE(p)p 742 2827 52 5 v 742 2885 a FF(u)22 b FI(que)c(lorsqu)n
('elle)h(est)f(str)q(ictement)h(positive)o(.)g(I)o(nt\351r)o
(essons-nous)f(donc)f(au)h(signe)g(de)h FF(x)3433 2855
y FC(2)3478 2885 y FE(\241)12 b FF(x)j FE(\305)10 b FI(2)33
b(:)-38 3046 y(Le)17 b(discr)q(iminant)h(est)g FG(\242)d
FE(\306)f FF(b)824 3016 y FC(2)868 3046 y FE(\241)9 b
FI(4)r FF(a)t(c)20 b FE(\306)15 b FI(\()p FE(\241)p FI(1\))1294
3016 y FC(2)1338 3046 y FE(\241)9 b FI(4)g FE(\243)g
FI(1)g FE(\243)g FI(2)17 b FE(\306)d(\241)p FI(7.)k(Il)e(s)m('ensuit)j
(qu)n('il)f(n)-6 b('y)17 b(a)g(pas)g(de)g(r)o(acine)o(,)g(et)g(que)j
FF(x)3345 3016 y FC(2)3390 3046 y FE(\241)11 b FF(x)j
FE(\305)9 b FI(2)18 b(est)g(str)q(ictement)-38 3146 y(positif)h(sur)e
FB(R)p FI(.)g(La)h(fonction)g FF(k)23 b FI(est)18 b(donc)f(bien)h
(d\351\002nie)f(sur)h FB(R)p FI(,)f(mais)h(aussi)g(d\351r)q(ivable)o(.)
-38 3307 y(Elle)h(est)f(de)f(la)g(for)q(me)h FF(k)5 b
FI(\()r FF(x)g FI(\))14 b FE(\306)861 3245 y(p)p 924
3245 152 5 v 924 3307 a FF(u)t FI(\()r FF(x)5 b FI(\),)18
b(avec)1450 3406 y FF(u)t FI(\()r FF(x)5 b FI(\))15 b
FE(\306)h FF(x)1731 3372 y FC(2)1777 3406 y FE(\241)c
FF(x)j FE(\305)10 b FI(2,)155 b FF(u)2229 3372 y FA(0)2251
3406 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(2)r FF(x)h
FE(\241)10 b FI(1.)-38 3553 y(On)17 b(a)g(donc,)h(pour)f(tout)j
FF(x)g FE(2)14 b FB(R)31 b FI(:)1517 3697 y FF(k)1564
3663 y FA(0)1586 3697 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)1820
3641 y FF(u)1871 3611 y FA(0)1893 3641 y FI(\()r FF(x)5
b FI(\))p 1779 3678 256 5 v 1779 3762 a(2)1819 3700 y
FE(p)p 1883 3700 152 5 v 62 x FF(u)t FI(\()r FF(x)g FI(\))2058
3697 y FE(\306)2248 3641 y FI(2)r FF(x)15 b FE(\241)10
b FI(1)p 2137 3678 423 5 v 2137 3771 a(2)2177 3700 y
FE(p)p 2242 3700 319 5 v 2244 3771 a FF(x)2288 3747 y
FC(2)2333 3771 y FE(\241)i FF(x)j FE(\305)10 b FI(2)2570
3697 y(.)-246 3933 y FJ(R)o(emarque)k(infor)q(melle)g(:)j
FI(On)h(a)f(d\351j\340)g(vu)h(les)g(d\351r)q(iv\351es)g(suivantes)h
(dans)f(le)f(cours)h(de)f(pr)o(emi\350r)o(e)h(:)1727
4146 y Fw(\241)1758 4210 y FF(x)1802 4176 y Fu(n)1846
4146 y Fw(\242)1876 4167 y FA(0)1911 4210 y FE(\306)c
FF(n)6 b(x)2077 4176 y Fu(n)s FA(\241)p FC(1)1738 4285
y Fw(\241)1767 4349 y FI(e)1807 4315 y Fu(x)1846 4285
y Fw(\242)1876 4306 y FA(0)1911 4349 y FE(\306)14 b FI(e)2020
4315 y Fu(x)1706 4455 y Fw(\241)1736 4458 y FE(p)p 1799
4458 47 5 v 1801 4520 a FF(x)1846 4455 y Fw(\242)1876
4473 y FA(0)1911 4520 y FE(\306)2045 4463 y FI(1)p 1990
4500 151 5 v 1990 4580 a(2)2030 4522 y FE(p)p 2094 4522
47 5 v 2096 4580 a FF(x)-246 4787 y FI(Les)k(trois)g(nouvelles)h(for)q
(mules)g(du)e(cours)g(de)h(ter)q(minale)g(peuvent)h(se)f(r\351\351cr)q
(ir)o(e)1648 4999 y Fw(\241)1677 5064 y FF(u)1728 5029
y Fu(n)1772 4999 y Fw(\242)1802 5021 y FA(0)1837 5064
y FE(\306)c FF(n)t(u)2008 5029 y Fu(n)s FA(\241)p FC(1)2135
5064 y FE(\243)c FF(u)2251 5029 y FA(0)1660 5138 y Fw(\241)1689
5202 y FI(e)1729 5168 y Fu(u)1772 5138 y Fw(\242)1802
5159 y FA(0)1837 5202 y FE(\306)k FI(e)1945 5168 y Fu(u)1999
5202 y FE(\243)c FF(u)2115 5168 y FA(0)1627 5309 y Fw(\241)1657
5311 y FE(p)p 1721 5311 52 5 v 62 x FF(u)1772 5309 y
Fw(\242)1802 5326 y FA(0)1837 5373 y FE(\306)1974 5317
y FI(1)p 1916 5354 156 5 v 1916 5434 a(2)1956 5376 y
FE(p)p 2020 5376 52 5 v 58 x FF(u)2092 5373 y FE(\243)g
FF(u)2208 5339 y FA(0)-246 5646 y FI(On)18 b(voit)f(qu)n('il)i
(suf\002t)f(de)f(r)o(emplacer)i FF(x)k FI(par)17 b FF(u)t
FI(,)h(et)g(de)f(multiplier)j(par)d FF(u)1879 5616 y
FA(0)1901 5646 y FI(.)-246 5728 y
SDict begin H.S end
 -246 5728 a -246 5728
a
SDict begin 12 H.A end
 -246 5728 a -246 5728 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 5728 a 0 TeXcolorgray
1909 5895 a FI(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(15)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(P)n(our)j(tout)j FF(x)f FE(2)c FB(R)31
b FI(:)1920 13 y FF(f)19 b FI(\()r FF(x)5 b FI(\))14
b FE(\306)j FF(x)2193 -21 y FC(2)1899 138 y FF(f)1942
103 y FA(0)1963 138 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)h
FI(2)r FF(x)1882 262 y(f)1925 228 y FA(00)1963 262 y
FI(\()r FF(x)5 b FI(\))14 b FE(\306)h FI(2.)-38 499 y(C)o(onclusion)k
(:)26 b FF(f)463 469 y FA(00)518 499 y FI(est)18 b(str)q(ictement)h
(positive)o(,)g(donc)25 b FF(f)36 b FI(est)18 b(convexe)g(sur)g
FB(R)p FI(.)-38 659 y(On)f(peut)i(aussi)f(pr\351senter)g(les)g(choses)h
(avec)e(un)h(tableau)g(de)f(signe)h(:)p 0 TeXcolorgray
0 TeXcolorgray 1236 741 a

 1236 741 a 1236 741 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1236
741 a
 0 setgray
 1236 741 a 167 w FF(x)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -45.1713 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a 38 w FF(f)1317 711 y FA(00)1355 741 y FI(\()r FF(x)5
b FI(\))16 b FE(\306)h FI(2)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -102.36455 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a 16 w FI(C)o(onvexit\351)1236 741 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 170.08086 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 170.08086 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -141.73404 moveto

 170.08086 -141.73404 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -141.73404 lineto

 170.08086 -141.73404 lineto

 170.08086 0.0 lineto

 closepath

 170.08086 -141.73404 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -141.73404 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 62.89185 -16.20581 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a FE(\2411)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 147.93231 -16.72884 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236 741 a FE(\3051)1236
741 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -45.07565 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236 741 a FE(\305)1236 741 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 91.28984 -101.51274 ] concat

 pgfs


 1236 741
a
 0 setgray
 1236 741 a 8 w FF(f)36 b FI(convexe)1236 741 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray 1447 3051 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 146.24707 a add def
/d 0.0 a add neg def /h 117.79433 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1447 3051 a 2028 2876 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 5 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 76.25314 0.0 -69.99393 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.73915 0.0 -21.05518   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 76.25314  0 -69.99393  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -69.99393
 76.25314  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-21.05518  def /maxTickline 96.73915  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.73915
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 76.25314
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.73915  0 -21.05518  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -21.05518
 96.73915  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 76.25314  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.73915
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 76.25314
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2013 2973 a FC(0)205 b(1)g(2)-761 b FA(\241)p FC(1)-309
b FA(\241)p FC(2)1939 2660 y(1)1939 2423 y(2)2028 2876
y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 2028 2876 a 2028 2876 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2028 2876 a 2028 2876 a
tx@Dict begin ps@rot  RotBegin  end
 2028
2876 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3. def /x1 3. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2028 2876
a
tx@Dict begin RotEnd  end
 2028 2876 a 2028 2876 a
tx@Dict begin  PutEnd  end
 2028 2876 a 2028 2876 a
tx@Dict begin { 7.39755 81.37486 } PutCoor PutBegin  end
 2028
2876 a 0 0 1 TeXcolorrgb 39 x FI(convexe)p 0 TeXcolorgray
2028 2876 a
tx@Dict begin  PutEnd  end
 2028 2876 a 2661 3051 a
currentpoint initclip moveto
 2661 3051 a -246
3092 a
SDict begin H.S end
 -246 3092 a -246 3092 a
SDict begin 12 H.A end
 -246 3092 a -246 3092
a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 3092 a 0 TeXcolorgray -141 3205 a FI(2.)p 0 TeXcolorgray
43 w(P)n(our)17 b(tout)j FF(x)f FE(2)c FB(R)31 b FI(:)1898
3380 y FF(g)10 b FI(\()r FF(x)5 b FI(\))13 b FE(\306)j
FF(x)2174 3346 y FC(3)1876 3517 y FF(g)1924 3482 y FA(0)1945
3517 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(3)r FF(x)2214
3482 y FC(2)1859 3641 y FF(g)1907 3607 y FA(00)1945 3641
y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(6)r FF(x)5
b FI(.)-38 3878 y(C)o(ette)18 b(fois)o(,)h(le)f(tableau)g(de)f(signe)h
(est)g(for)q(tement)g(r)o(ecommand\351)g(:)p 0 TeXcolorgray
0 TeXcolorgray 668 3960 a

 668 3960 a 668 3960 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a 168 w FF(x)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -53.68501 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960
a 11 w FF(g)727 3930 y FA(00)766 3960 y FI(\()r FF(x)5
b FI(\))14 b FE(\306)h FI(6)r FF(x)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.22993 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a 17 w FI(C)o(onvexit\351)668 3960 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -170.11317 moveto

 306.20375 -170.11317 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -170.11317 lineto

 306.20375 -170.11317 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -170.11317 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -170.11317 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 77.07158 -19.04367 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a FE(\2411)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.66417 -20.05489 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960
a FI(0)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 281.16817 -19.56671 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FE(\3051)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -52.47826 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FE(\241)668 3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a FI(0)668 3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -53.60904 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FE(\305)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.07674 -120.33804 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 2 w FF(g)27 b FI(concave)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -165.20833 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 0 TeXcolorgray 0 TeXcolorgray
Fj(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 669
3894 a(o)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
677 3827 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
672 3761 a(x)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
671 3694 a(e)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
677 3628 a(l)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
676 3562 a(f)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
668 3495 a(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
676 3429 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 675 3296
a(t)p 0 TeXcolorgray 0 TeXcolorgray 668 3229 a(P)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
668 3960 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.26869 -120.33804 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 2 w FF(g)g FI(convexe)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 -38 5533 a FI(C)o(onclusion)19 b(:)p 0 TeXcolorgray
7 5646 a(\225)p 0 TeXcolorgray 44 w FF(g)27 b FI(est)18
b(concave)f(sur)691 5647 y(])716 5646 y FE(\2411)p FI(;)8
b(0)917 5647 y(])968 5646 y(;)p 0 TeXcolorgray 1909 5895
a(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FI(\225)p 0 TeXcolorgray
44 w FF(g)27 b FI(est)18 b(convexe)g(sur)689 -162 y([)714
-163 y(0;)8 b FE(\3051)915 -162 y FI([)967 -163 y(;)p
0 TeXcolorgray 7 -63 a(\225)p 0 TeXcolorgray 42 w(le)18
b(point)g(de)f(coor)o(donn\351es)h(\(0;)8 b(0\))18 b(est)g(un)f(point)i
(d)n('in\003exion.)p 0 TeXcolorgray 0 TeXcolorgray 1357
930 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.87143 a add def
/d 0.0 a add neg def /h 103.56795 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1357 930 a 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 4 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 97.8775 0.0 -69.99393 0.0   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 53.49129 0.0 -50.07666   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 97.8775  0 -69.99393  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -69.99393
 97.8775  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-50.07666  def /maxTickline 53.49129  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 53.49129
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 97.8775
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 53.49129  0 -50.07666  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -50.07666
 53.49129  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 97.8775  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 53.49129
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 97.8775
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1923 612 a FC(0)205
b(1)g(2)-760 b FA(\241)p FC(1)-310 b FA(\241)p FC(2)1849
534 y(0)1807 770 y FA(\241)p FC(1)1849 298 y(1)1938 515
y
tx@Dict begin { 30.15984 24.46938 } PutCoor PutBegin  end
 1938 515 a 0 0 1 TeXcolorrgb 38 x FI(convexe)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 3.4400000000000035
def /dx x1 x sub 199 div def /F@pstplot (x^(3.0))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.460000000000003
def /x1 0 def /dx x1 x sub 199 div def /F@pstplot (x^(3.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1938 515 a
tx@Dict begin { -66.57932 -18.7789 } PutCoor PutBegin  end
 1938
515 a 1 0 0 TeXcolorrgb 38 x FI(concave)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a 1938 515 a
tx@Dict begin { 16.50264 -34.71237 } PutCoor PutBegin  end
 1938 515 a 0 1 0 TeXcolorrgb
57 x FI(point)18 b(d)n('in\003exion)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 0.0 28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 0.0 0.0 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2751 930 a
currentpoint initclip moveto
 2751
930 a -246 974 a
SDict begin H.S end
 -246 974 a -246 974 a
SDict begin 12 H.A end
 -246 974 a -246
974 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 974 a 0 TeXcolorgray -141 1089 a FI(3.)p 0
TeXcolorgray 43 w(P)n(our)f(tout)j FF(x)f FE(2)c FB(R)31
b FI(:)1907 1271 y FF(h)t FI(\()r FF(x)5 b FI(\))14 b
FE(\306)g FI(e)2181 1237 y Fu(x)1885 1396 y FF(h)1935
1361 y FA(0)1957 1396 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g
FI(e)2181 1361 y Fu(x)1868 1520 y FF(h)1918 1486 y FA(00)1957
1520 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(e)2181
1486 y Fu(x)2219 1520 y FI(.)-38 1767 y(C)o(onclusion)19
b(:)f FF(h)462 1737 y FA(00)518 1767 y FI(est)g(str)q(ictement)g
(positive)o(,)h(donc)e FF(h)22 b FI(est)c(convexe)g(sur)g
FB(R)e FI(\(cette)i(fois)o(,)h(on)e(se)h(passe)g(du)g(tableau)f(de)h
(signes\).)p 0 TeXcolorgray 0 TeXcolorgray 1307 2817
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 179.82153 a add def
/d 0.0 a add neg def /h 116.08723 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1307 2817 a 2191 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 5 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 73.40813 0.0 -106.4134 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 91.61786 0.0 -24.46938   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 73.40813  0 -106.4134  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -106.4134
 73.40813  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 91.61786  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 91.61786
0.0 -24.46938   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 73.40813
0.0 -106.4134 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 91.61786  0 -24.46938  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -24.46938
 91.61786  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-106.4134  def /maxTickline 73.40813  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 91.61786
0.0 -24.46938   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 73.40813
0.0 -106.4134 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2176 2711 a FC(0)205
b(1)g(2)-761 b FA(\241)p FC(1)-309 b FA(\241)p FC(2)g
FA(\241)p FC(3)2102 2397 y(1)2102 2161 y(2)2191 2614
y
tx@Dict begin { -65.44139 25.60728 } PutCoor PutBegin  end
 2191 2614 a 0 0 1 TeXcolorrgb 38 x FI(convexe)p 0 TeXcolorgray
2191 2614 a
tx@Dict begin  PutEnd  end
 2191 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.7400000000000038
def /x1 2.5800000000000027 def /dx x1 x sub 199 div def /F@pstplot
(EXP(x))  tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul
F@pstplot 28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2800 2817 a
currentpoint initclip moveto
 2800 2817 a -246 2883 a
SDict begin H.S end
 -246 2883 a -246
2883 a
SDict begin 12 H.A end
 -246 2883 a -246 2883 a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 2883 a 0 TeXcolorgray
133 x FJ(Ex)o(er)o(cice)14 b(16)p 0 TeXcolorgray 41 w
FI(La)k(fonction)i FF(g)27 b FI(est)18 b(d\351\002nie)f(sur)h(l)o
('inter)q(valle)1558 3017 y([)1583 3016 y FE(\241)p FI(1;)8
b(3)1746 3017 y(])1790 3016 y(par)1523 3215 y FF(g)i
FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p FI(0,)8
b(5)r FF(x)1963 3181 y FC(3)2010 3215 y FE(\305)i FI(2)r
FF(x)2161 3181 y FC(2)2207 3215 y FE(\241)g FI(2)r FF(x)5
b FI(.)-246 3269 y
SDict begin H.S end
 -246 3269 a -246 3269 a
SDict begin 12 H.A end
 -246 3269
a -246 3269 a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246 3269 a 0 TeXcolorgray -141 3414 a
FI(1.)p 0 TeXcolorgray 43 w(P)n(our)17 b(tout)j FF(x)f
FE(2)423 3415 y FI([)448 3414 y FE(\241)p FI(1;)8 b(3)611
3415 y(])669 3414 y(:)1180 3628 y FF(g)1228 3594 y FA(0)1248
3628 y FI(\()r FF(x)d FI(\))15 b FE(\306)f(\241)p FI(0,)8
b(5)i FE(\243)g FI(3)r FF(x)1756 3594 y FC(2)1803 3628
y FE(\305)g FI(2)g FE(\243)g FI(2)r FF(x)15 b FE(\241)10
b FI(2)g FE(\243)g FI(1)18 b FE(\306)c(\241)p FI(1,)8
b(5)r FF(x)2595 3594 y FC(2)2642 3628 y FE(\305)i FI(4)r
FF(x)15 b FE(\241)10 b FI(2.)-38 3792 y(La)17 b(d\351r)q(iv\351e)h(est)
g(du)f(second)h(degr\351,)f(donc)g(on)g(utilise)j(la)d(m\351thode)i(de)
e(la)g(classe)h(de)f(pr)o(emi\350r)o(e)h(:)p 0 TeXcolorgray
7 3907 a(\225)p 0 TeXcolorgray 44 w FF(a)g FE(\306)c(\241)p
FI(1,)8 b(5,)19 b FF(b)f FE(\306)c FI(4,)k FF(c)i FE(\306)14
b(\241)p FI(2.)p 0 TeXcolorgray 7 4006 a(\225)p 0 TeXcolorgray
42 w(le)k(discr)q(iminant)g(est)g FG(\242)c FE(\306)h
FF(b)921 3976 y FC(2)965 4006 y FE(\241)10 b FI(4)r FF(a)t(c)21
b FE(\306)14 b FI(4)1283 3976 y FC(2)1329 4006 y FE(\241)c
FI(4)g FE(\243)g FI(\()p FE(\241)p FI(1,)e(5\))i FE(\243)g
FI(\()p FE(\241)p FI(2\))16 b FE(\306)e FI(4.)p 0 TeXcolorgray
7 4106 a(\225)p 0 TeXcolorgray 42 w FG(\242)g FE(\310)h
FI(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1319
4428 y FF(x)1360 4440 y FC(1)1410 4428 y FE(\306)1489
4372 y(\241)p FF(b)c FE(\241)1666 4306 y(p)p 1730 4306
55 5 v 66 x FG(\242)p 1489 4409 296 5 v 1592 4485 a FI(2)r
FF(a)1808 4428 y FE(\306)1917 4372 y(\241)p FI(4)c FE(\241)2087
4307 y(p)p 2151 4307 41 5 v 65 x FI(4)p 1887 4409 334
5 v 1887 4485 a(2)g FE(\243)g FI(\()p FE(\241)p FI(1,)e(5\))2245
4428 y FE(\306)2324 4372 y(\241)p FI(4)i FE(\241)g FI(2)p
2324 4409 212 5 v 2382 4485 a FE(\241)p FI(3)2560 4428
y FE(\306)2639 4372 y(\241)p FI(6)p 2639 4409 96 5 v
2639 4485 a FE(\241)p FI(3)2758 4428 y FE(\306)15 b FI(2,)1319
4660 y FF(x)1360 4672 y FC(2)1410 4660 y FE(\306)1489
4604 y(\241)p FF(b)f FE(\305)1666 4538 y(p)p 1730 4538
55 5 v 66 x FG(\242)p 1489 4641 296 5 v 1592 4717 a FI(2)r
FF(a)1808 4660 y FE(\306)1917 4604 y(\241)p FI(4)c FE(\305)2087
4539 y(p)p 2151 4539 41 5 v 65 x FI(4)p 1887 4641 334
5 v 1887 4717 a(2)g FE(\243)g FI(\()p FE(\241)p FI(1,)e(5\))2245
4660 y FE(\306)2324 4604 y(\241)p FI(4)i FE(\305)g FI(2)p
2324 4641 212 5 v 2382 4717 a FE(\241)p FI(3)2560 4660
y FE(\306)2639 4604 y(\241)p FI(2)p 2639 4641 96 5 v
2639 4717 a FE(\241)p FI(3)2758 4660 y FE(\306)2838 4604
y FI(2)p 2838 4641 41 5 v 2838 4717 a(3)2888 4660 y(.)-36
4955 y FF(a)18 b FE(\306)c(\241)p FI(1,)8 b(5)21 b FF(a)g
FI(est)d FE(\252)f FI(donc)g(le)h(signe)f(est)h(de)g(la)f(for)q(me)46
b FE(\241)17 b Fy(\036)28 b FE(\305)f Fy(\036)18 b FE(\241)p
1521 4872 432 4 v 1521 4997 4 127 v 1949 4997 V 1521
4999 432 4 v 0 TeXcolorgray 0 TeXcolorgray 1 5122 a

 1
5122 a 1 5122 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 167 w FF(x)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -32.41563 ] concat

 pgfs



1 5122 a
 0 setgray
 1 5122 a 105 w FF(g)154 5092 y FA(0)175 5122
y FI(\()r FF(x)5 b FI(\))1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -61.64621 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 116
w FF(g)10 b FI(\()r FF(x)5 b FI(\))1 5122 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -79.37216 lineto

 238.11656 -79.37216 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -79.37216 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -79.37216 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1 5122 a
 0 setgray

1 5122 a FE(\241)p FI(1)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.09209 -12.47873 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 11
5090 a FC(2)p 11 5103 31 5 v 11 5151 a(3)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1 5122
a
 0 setgray
 1 5122 a FI(2)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FI(3)1 5122
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -31.19028 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FE(\241)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122
a FI(0)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -32.32106 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FE(\305)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 1
5122 a
 0 setgray
 1 5122 a FI(0)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -31.19028 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FE(\241)1
5122 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 41.53775 -53.873 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 43.5303 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(3.5)1 5122
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 41.53775 -53.873 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 43.5303 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(3.5)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 16.04958 20.3615 98.95598 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 100.94853 -69.91951 ] concat

 pgfs



1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FE(\241)66 5090 y
FC(16)p 66 5103 62 5 v 66 5151 a(27)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 16.04958 20.3615 98.95598 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 100.94853 -69.91951 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def

1 5122 a 1 5122 a
 0 setgray
 1 5122 a FE(\241)66 5090 y FC(16)p
66 5103 62 5 v 66 5151 a(27)1 5122 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 61.57288 -52.50854 moveto

 92.7813 -62.25806 lineto

 pgfstr

 save

 [0.95445 -0.29816 0.29816 0.95445 92.7813 -62.25806 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 164.24243 -53.84312 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(0)1
5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 164.24243 -53.84312 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(0)1 5122
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 123.21397 -62.96524 moveto

 158.06915 -52.06961 lineto

 pgfstr

 save

 [0.9544 0.29832 -0.29832 0.9544 158.06914 -52.06961 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 22.735 216.82753 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 218.82008 -73.31482 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122
a
 0 setgray
 1 5122 a FE(\241)p FI(1.5)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 22.735 216.82753 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 218.82008 -73.31482 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122
a 1 5122 a
 0 setgray
 1 5122 a FE(\241)p FI(1.5)1 5122 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 176.95879 -51.75664 moveto

 210.71689 -63.96852 lineto

 pgfstr

 save

 [0.94034 -0.34015 0.34015 0.94034 210.71689 -63.9685 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2050 5664 9 544 v 0 TeXcolorgray
0 TeXcolorgray 2140 5204 a FI(\225)p 0 TeXcolorgray 44
w FF(g)10 b FI(\()p FE(\241)p FI(1\))k FE(\306)g(\241)p
FI(0,)8 b(5)i FE(\243)g FI(\()p FE(\241)p FI(1\))2882
5173 y FC(3)2929 5204 y FE(\305)g FI(2)g FE(\243)g FI(\()p
FE(\241)p FI(1\))3258 5173 y FC(2)3304 5204 y FE(\241)g
FI(2)g FE(\243)g FI(\()p FE(\241)p FI(1\))15 b FE(\306)f
FI(3,)8 b(5)p 0 TeXcolorgray 2140 5317 a(\225)p 0 TeXcolorgray
44 w FF(g)2271 5252 y Fw(\241)2310 5284 y FC(2)p 2310
5297 31 5 v 2310 5345 a(3)2351 5252 y Fw(\242)2395 5317
y FE(\306)14 b(\241)p FI(0,)8 b(5)i FE(\243)2702 5252
y Fw(\241)2743 5284 y FC(2)p 2743 5297 V 2743 5345 a(3)2784
5252 y Fw(\242)2814 5270 y FC(3)2859 5317 y FE(\305)g
FI(2)g FE(\243)3039 5252 y Fw(\241)3079 5284 y FC(2)p
3079 5297 V 3079 5345 a(3)3120 5252 y Fw(\242)3150 5270
y FC(2)3195 5317 y FE(\241)g FI(2)g FE(\243)3375 5252
y Fw(\241)3415 5284 y FC(2)p 3415 5297 V 3415 5345 a(3)3456
5252 y Fw(\242)3500 5317 y FE(\306)k(\241)3634 5284 y
FC(16)p 3634 5297 62 5 v 3634 5345 a(27)p 0 TeXcolorgray
2140 5416 a FI(\225)p 0 TeXcolorgray 44 w FF(g)c FI(\(2\))k
FE(\306)g(\241)p FI(0,)8 b(5)i FE(\243)g FI(2)2718 5386
y FC(3)2765 5416 y FE(\305)g FI(2)g FE(\243)g FI(2)2985
5386 y FC(2)3032 5416 y FE(\241)g FI(2)g FE(\243)g FI(2)15
b FE(\306)g FI(0)p 0 TeXcolorgray 2140 5516 a(\225)p
0 TeXcolorgray 44 w FF(g)10 b FI(\(3\))k FE(\306)g(\241)p
FI(0,)8 b(5)i FE(\243)g FI(3)2718 5486 y FC(3)2765 5516
y FE(\305)g FI(2)g FE(\243)g FI(3)2985 5486 y FC(2)3032
5516 y FE(\241)g FI(2)g FE(\243)g FI(3)15 b FE(\306)g(\241)p
FI(1,)8 b(5)p 0 TeXcolorgray 1909 5895 a(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(P)n(our)17 b(tout)j FF(x)f
FE(2)423 -162 y FI([)448 -163 y FE(\241)p FI(1;)8 b(3)611
-162 y(])669 -163 y(:)1403 -63 y FF(g)1451 -97 y FA(00)1489
-63 y FI(\()r FF(x)d FI(\))14 b FE(\306)g(\241)p FI(1,)8
b(5)i FE(\243)g FI(2)r FF(x)15 b FE(\305)10 b FI(4)g
FE(\243)g FI(1)g FE(\241)g FI(0)19 b FE(\306)14 b(\241)p
FI(3)r FF(x)h FE(\305)10 b FI(4.)-38 97 y(On)17 b(\351tudie)h(le)g
(signe)g(de)h FF(g)749 67 y FA(00)818 97 y FI(:)1301
232 y FE(\241)p FI(3)r FF(x)c FE(\305)10 b FI(4)15 b
FE(\306)g FI(0)29 b FE(\()-12 b(\))29 b(\241)p FI(3)r
FF(x)20 b FE(\306)14 b(\241)p FI(4)29 b FE(\()-12 b(\))31
b FF(x)19 b FE(\306)2537 175 y(\241)p FI(4)p 2537 212
96 5 v 2537 288 a FE(\241)p FI(3)2657 232 y FE(\306)2736
175 y FI(4)p 2736 212 41 5 v 2736 288 a(3)2787 232 y(.)p
0 TeXcolorgray 0 TeXcolorgray 778 354 a

 778 354 a 778
354 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 168 w FF(x)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -54.0626 ] concat

 pgfs


 778 354
a
 0 setgray
 778 354 a 58 w FE(\241)p FI(3)r FF(x)f FE(\305)12 b
FI(4)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.22993 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 16 w FI(C)o(onvexit\351)778
354 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -170.11317 moveto

 306.20375 -170.11317 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -170.11317 lineto

 306.20375 -170.11317 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -170.11317 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -170.11317 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.31819 -20.07979 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FE(\241)p FI(1)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.05205 -19.56851 ] concat

 pgfs


 778
354 a
 0 setgray
 778 354 a 788 321 a FC(4)p 788 334 31 5 v 788 382
a(3)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.71245 -20.05489 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FI(3)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -53.60904 ] concat

 pgfs


 778
354 a
 0 setgray
 778 354 a FE(\305)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a
FI(0)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -52.47826 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FE(\241)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.16142 -120.33804 ] concat

 pgfs



778 354 a
 0 setgray
 778 354 a 2 w FF(g)27 b FI(convexe)778 354
y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -165.20833 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 0 TeXcolorgray 0 TeXcolorgray Fj(n)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 779 287
a(o)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 787
221 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
782 154 a(x)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
781 88 a(e)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
787 22 a(l)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
786 -45 a(f)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
778 -111 a(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
786 -178 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 785 -311
a(t)p 0 TeXcolorgray 0 TeXcolorgray 778 -377 a(P)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
778 354 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.184 -120.33804 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 2 w FF(g)g FI(concave)778
354 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 -36 1927 a FF(g)20 1863 y Fw(\241)59 1895 y FC(4)p
59 1908 31 5 v 59 1956 a(3)100 1863 y Fw(\242)144 1927
y FE(\306)213 1928 y FI([)238 1927 y FE(\242)8 b(\242)g(\242)326
1928 y FI(])366 1927 y FE(\306)14 b(\241)515 1895 y FC(8)p
500 1908 62 5 v 500 1956 a(27)571 1927 y FI(,)k(donc)f(le)h(point)g(de)
f(coor)o(donn\351es)1652 1863 y Fw(\241)1691 1895 y FC(4)p
1691 1908 31 5 v 1691 1956 a(3)1732 1927 y FI(;)8 b FE(\241)1841
1895 y FC(8)p 1825 1908 62 5 v 1825 1956 a(27)1897 1863
y Fw(\242)1944 1927 y FI(est)18 b(un)f(point)i(d)n('in\003exion)f
(\(not\351)i FF(I)27 b FI(sur)18 b(la)f(\002gur)o(e)g(ci-dessous\).)
-246 1970 y
SDict begin H.S end
 -246 1970 a -246 1970 a
SDict begin 12 H.A end
 -246 1970 a -246
1970 a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 1970 a 0 TeXcolorgray -141 2054 a FI(3.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1359 3271
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.30226 a add def
/d 0.0 a add neg def /h 138.84952 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1359 3271 a 1699 2883 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 126.33025 0.0 -40.97202 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 92.18704 0.0 -46.66248   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 126.33025  0 -40.97202  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -40.97202
 126.33025  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-46.66248  def /maxTickline 92.18704  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.18704
0.0 -46.66248   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 126.33025
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 92.18704  0 -46.66248  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -46.66248
 92.18704  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-40.97202  def /maxTickline 126.33025  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.18704
0.0 -46.66248   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 126.33025
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1684 2980 a FC(0)205
b(1)g(2)h(3)-997 b FA(\241)p FC(1)1611 2903 y(0)1569
3139 y FA(\241)p FC(1)1611 2667 y(1)1611 2430 y(2)1699
2883 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.0 def /x1 1.33333
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x^(3.0)+2.0*x^(2.0)-2.0*x+0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1.33333 def /x1 3
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x^(3.0)+2.0*x^(2.0)-2.0*x+0.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1699 2883 a
tx@Dict begin { 3.98335 25.03854 } PutCoor PutBegin  end
 1699 2883 a 0 0 1
TeXcolorrgb 39 x FI(convexe)p 0 TeXcolorgray 1699 2883
a
tx@Dict begin  PutEnd  end
 1699 2883 a 1699 2883 a
tx@Dict begin { 89.91077 -20.48601 } PutCoor PutBegin  end
 1699 2883 a 1 0 0 TeXcolorrgb
39 x FI(concave)p 0 TeXcolorgray 1699 2883 a
tx@Dict begin  PutEnd  end
 1699 2883
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 37.93684
-7.90334   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1699 2883 a
tx@Dict begin { 40.40283 -20.48601 } PutCoor PutBegin  end

1699 2883 a 0 1 0 TeXcolorrgb 2 w FF(I)p 0 TeXcolorgray
1699 2883 a
tx@Dict begin  PutEnd  end
 1699 2883 a 2748 3271 a
currentpoint initclip moveto
 2748 3271 a -246
3336 a
SDict begin H.S end
 -246 3336 a -246 3336 a
SDict begin 12 H.A end
 -246 3336 a -246 3336
a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 3336 a 0 TeXcolorgray 131 x FJ(Ex)o(er)o(cice)14
b(17)p 0 TeXcolorgray 41 w FI(La)k(fonction)g FF(h)k
FI(est)c(d\351\002nie)f(sur)h(l)o('inter)q(valle)1559
3468 y([)1584 3467 y FE(\241)p FI(1;)8 b(4)1747 3468
y(])1791 3467 y(par)1635 3666 y FF(h)t FI(\()r FF(x)d
FI(\))14 b FE(\306)g FI(\(2)r FF(x)h FE(\305)10 b FI(3\)e)2164
3632 y FA(\241)q Fu(x)2245 3666 y FI(.)-246 3813 y(On)18
b(calcule)g(les)g(d\351r)q(iv\351es)g(pr)o(emi\350r)o(e)f(et)h(seconde)
g(:)-246 3905 y
SDict begin H.S end
 -246 3905 a -246 3905 a
SDict begin 12 H.A end
 -246 3905 a -246
3905 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 3905 a 0 TeXcolorgray -141 4001 a FI(1.)p
0 TeXcolorgray 43 w FJ(D\351r)q(iv\351e)c(pr)o(emi\350r)o(e.)h
FI(On)j(utilise)h(la)e(for)q(mule)h(pour)g(la)g(d\351r)q(iv\351e)f(d)n
('un)h(produit)g(avec)781 4292 y FF(u)t FI(\()r FF(x)5
b FI(\))15 b FE(\306)f FI(2)r FF(x)h FE(\305)10 b FI(3)821
b(,)h FF(v)7 b FI(\()r FF(x)e FI(\))14 b FE(\306)g FI(e)3148
4258 y FA(\241)q Fu(x)3230 4292 y FI(,)781 4416 y FF(u)832
4382 y FA(0)854 4416 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g
FI(2)961 b(,)822 b FF(v)2926 4382 y FA(0)2947 4416 y
FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p FI(e)3225
4382 y FA(\241)q Fu(x)3306 4416 y FI(.)-38 4732 y(On)j(obtient,)i(pour)
e(tout)j FF(x)g FE(2)836 4733 y FI([)862 4732 y FE(\241)p
FI(1;)8 b(4)1025 4733 y(])1083 4732 y(:)1359 5023 y FF(h)1409
4989 y FA(0)1431 5023 y FI(\()r FF(x)d FI(\))14 b FE(\306)g
FF(u)1665 4989 y FA(0)1687 5023 y FI(\()r FF(x)5 b FI(\))10
b FE(\243)i FF(v)7 b FI(\()r FF(x)e FI(\))10 b FE(\305)g
FF(u)t FI(\()r FF(x)5 b FI(\))10 b FE(\243)i FF(v)2359
4989 y FA(0)2381 5023 y FI(\()r FF(x)5 b FI(\))1545 5148
y FE(\306)14 b FI(2)c FE(\243)g FI(e)1769 5113 y FA(\241)q
Fu(x)1861 5148 y FE(\305)1926 5149 y FI(\()1952 5148
y(2)r FF(x)15 b FE(\305)10 b FI(3)2153 5149 y(\))2192
5148 y FE(\243)2257 5083 y Fw(\241)2287 5148 y FE(\241)p
FI(e)2381 5113 y FA(\241)q Fu(x)2462 5083 y Fw(\242)1545
5272 y FE(\306)k FI(2)c FE(\243)g FI(e)1769 5238 y FA(\241)q
Fu(x)1861 5272 y FE(\305)g FI(2)r FF(x)15 b FE(\243)2087
5208 y Fw(\241)2118 5272 y FE(\241)p FI(e)2212 5238 y
FA(\241)q Fu(x)2293 5208 y Fw(\242)2333 5272 y FE(\305)10
b FI(3)g FE(\243)2513 5208 y Fw(\241)2543 5272 y FE(\241)p
FI(e)2637 5238 y FA(\241)q Fu(x)2719 5208 y Fw(\242)1545
5397 y FE(\306)k FI(2)c FE(\243)g FI(e)1769 5362 y FA(\241)q
Fu(x)1861 5397 y FE(\241)g FI(2)r FF(x)15 b FE(\243)10
b FI(e)2127 5362 y FA(\241)q Fu(x)2218 5397 y FE(\241)g
FI(3)g FE(\243)g FI(e)2439 5362 y FA(\241)q Fu(x)1545
5521 y FE(\306)1614 5522 y FI(\()1641 5521 y(2)g FE(\241)g
FI(2)r FF(x)15 b FE(\241)10 b FI(3)1957 5522 y(\))1994
5521 y(e)2034 5487 y FA(\241)q Fu(x)1545 5646 y FE(\306)1614
5647 y FI(\()1641 5646 y FE(\241)p FI(2)r FF(x)15 b FE(\241)10
b FI(1)1897 5647 y(\))1933 5646 y(e)1973 5611 y FA(\241)q
Fu(x)2054 5646 y FI(.)p 0 TeXcolorgray 1909 5895 a(15)p
0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w FJ(D\351r)q(iv\351e)14
b(seconde.)i FI(On)i(utilise)h(la)e(for)q(mule)h(pour)g(la)g(d\351r)q
(iv\351e)f(d)n('un)h(produit)g(avec)768 134 y FF(u)t
FI(\()r FF(x)5 b FI(\))14 b FE(\306)g(\241)p FI(2)r FF(x)h
FE(\241)10 b FI(1)808 b(,)g FF(v)7 b FI(\()r FF(x)e FI(\))14
b FE(\306)g FI(e)3162 100 y FA(\241)q Fu(x)3243 134 y
FI(,)768 259 y FF(u)819 224 y FA(0)840 259 y FI(\()r
FF(x)5 b FI(\))14 b FE(\306)h(\241)p FI(2)947 b(,)808
b FF(v)2940 224 y FA(0)2961 259 y FI(\()r FF(x)5 b FI(\))14
b FE(\306)g(\241)p FI(e)3238 224 y FA(\241)q Fu(x)3320
259 y FI(.)-38 581 y(On)j(obtient,)i(pour)e(tout)j FF(x)g
FE(2)836 582 y FI([)862 581 y FE(\241)p FI(1;)8 b(4)1025
582 y(])1083 581 y(:)1215 877 y FF(h)1265 843 y FA(00)1304
877 y FI(\()r FF(x)d FI(\))14 b FE(\306)g FF(u)1538 843
y FA(0)1560 877 y FI(\()r FF(x)5 b FI(\))10 b FE(\243)i
FF(v)7 b FI(\()r FF(x)e FI(\))10 b FE(\305)g FF(u)t FI(\()r
FF(x)5 b FI(\))10 b FE(\243)i FF(v)2232 843 y FA(0)2253
877 y FI(\()r FF(x)5 b FI(\))1418 1002 y FE(\306)14 b(\241)p
FI(2)c FE(\243)g FI(e)1697 968 y FA(\241)q Fu(x)1788
1002 y FE(\305)1853 1003 y FI(\()1880 1002 y FE(\241)p
FI(2)r FF(x)15 b FE(\241)10 b FI(1)2136 1003 y(\))2175
1002 y FE(\243)2240 938 y Fw(\241)2269 1002 y FE(\241)p
FI(e)2364 968 y FA(\241)q Fu(x)2445 938 y Fw(\242)1418
1127 y FE(\306)k(\241)p FI(2)c FE(\243)g FI(e)1697 1092
y FA(\241)q Fu(x)1788 1127 y FE(\305)g FI(\()p FE(\241)p
FI(2)r FF(x)5 b FI(\))10 b FE(\243)2123 1062 y Fw(\241)2154
1127 y FE(\241)p FI(e)2248 1092 y FA(\241)q Fu(x)2329
1062 y Fw(\242)2369 1127 y FE(\305)g FI(\()p FE(\241)p
FI(1\))g FE(\243)2658 1062 y Fw(\241)2688 1127 y FE(\241)p
FI(e)2782 1092 y FA(\241)q Fu(x)2863 1062 y Fw(\242)1418
1251 y FE(\306)k(\241)p FI(2)c FE(\243)g FI(e)1697 1217
y FA(\241)q Fu(x)1788 1251 y FE(\305)g FI(2)r FF(x)15
b FE(\243)10 b FI(e)2055 1217 y FA(\241)q Fu(x)2146 1251
y FE(\305)g FI(1)g FE(\243)g FI(e)2366 1217 y FA(\241)q
Fu(x)1418 1376 y FE(\306)1487 1377 y FI(\()1514 1376
y FE(\241)p FI(2)g FE(\305)g FI(2)r FF(x)15 b FE(\305)10
b FI(1)1885 1377 y(\))1922 1376 y(e)1961 1341 y FA(\241)q
Fu(x)1418 1500 y FE(\306)1487 1501 y FI(\()1514 1500
y(2)r FF(x)15 b FE(\241)10 b FI(1)1715 1501 y(\))1751
1500 y(e)1790 1466 y FA(\241)q Fu(x)1872 1500 y FI(.)-246
1747 y(On)18 b(\351tudie)g(le)g(signe)f(de)h(la)f(d\351r)q(iv\351e)h
(seconde)g(:)1611 1847 y FF(h)1661 1813 y FA(00)1700
1847 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)1884 1848
y FI(\()1910 1847 y(2)r FF(x)h FE(\241)10 b FI(1)2111
1848 y(\))2148 1847 y(e)2187 1813 y FA(\241)q Fu(x)2268
1847 y FI(.)p 0 TeXcolorgray -76 1996 a(\225)p 0 TeXcolorgray
42 w(2)r FF(x)15 b FE(\241)10 b FI(1)16 b FE(\306)e FI(0)29
b FE(\()-12 b(\))29 b FI(2)r FF(x)20 b FE(\306)14 b FI(1)29
b FE(\()-12 b(\))31 b FF(x)20 b FE(\306)1069 1964 y FC(1)p
1069 1977 31 5 v 1069 2025 a(2)1109 1996 y FI(.)p 0 TeXcolorgray
-76 2096 a(\225)p 0 TeXcolorgray 42 w(e)36 2066 y FA(\241)q
Fu(x)134 2096 y FI(est)e FE(\251)g FI(pour)f(tout)j FF(x)g
FE(2)786 2097 y FI([)812 2096 y FE(\241)p FI(1;)8 b(4)975
2097 y(])1009 2096 y(.)-246 2245 y(On)18 b(a)f(donc)g(le)g(tableau)h(:)
p 0 TeXcolorgray 0 TeXcolorgray 674 2340 a

 674 2340 a
674 2340 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 168 w FF(x)674 2340
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -54.0626 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 85 w FI(2)r FF(x)h FE(\241)13
b FI(1)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -88.56247 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 129 w FI(e)842
2310 y FA(\241)q Fu(x)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.27576 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340
a 95 w FF(h)819 2310 y FA(00)858 2340 y FI(\()r FF(x)5
b FI(\))674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -190.27522 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 17 w FI(C)o(onvexit\351)674
2340 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -102.0679 moveto

 306.20375 -102.0679 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.09053 moveto

 306.20375 -136.09053 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -238.15846 moveto

 306.20375 -238.15846 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -238.15846 lineto

 306.20375 -238.15846 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -238.15846 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -238.15846 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.31819 -20.07979 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FE(\241)p FI(1)674 2340
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.05205 -19.58743 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 684 2307 a FC(1)p 684 2320 31
5 v 684 2368 a(2)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.71245 -20.07979 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(4)674
2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -52.47826 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FE(\241)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 674 2340
a
 0 setgray
 674 2340 a FI(0)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -53.60904 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FE(\305)674
2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -87.64478 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FE(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -87.64478 ] concat

 pgfs


 674 2340
a
 0 setgray
 674 2340 a FE(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -120.54976 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a
FE(\241)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -102.0679 moveto

 187.12448 -136.09053 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -122.14578 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(0)674 2340
y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -121.68054 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FE(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.02193 -190.58148 ] concat

 pgfs


 674 2340 a
 0 setgray

674 2340 a FF(h)22 b FI(concave)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -233.26672 ] concat

 pgfs


 674 2340 a
 0 setgray

674 2340 a 0 TeXcolorgray 0 TeXcolorgray Fj(n)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 675 2273 a(o)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 683 2207 a(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 678 2141 a(x)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 677 2074 a(e)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 683 2008 a(l)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 682 1941 a(f)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 674 1875 a(n)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 682 1809 a(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 681 1676 a(t)p 0 TeXcolorgray 0 TeXcolorgray
674 1609 a(P)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 674 2340 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.21388 -190.58148 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FF(h)g
FI(convexe)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray 1057
5230 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 215.10266 a add def
/d 0.0 a add neg def /h 97.87787 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1057 5230 a 1591 5136 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 175.83774 0.0 -64.30304 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 86.49673 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 150.79962  0 -64.30304  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -64.30304
 150.79962  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-45.06921  def /maxTickline 86.49673  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 86.49673
0.0 -45.06921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 150.79962
0.0 -64.30304 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 86.49673  0 -45.06921  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -45.06921
 86.49673  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-64.30304  def /maxTickline 150.79962  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 86.49673
0.0 -45.06921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 150.79962
0.0 -64.30304 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1576 5233 a FC(0)205
b(1)g(2)g(3)g(4)-1233 b FA(\241)p FC(1)-309 b FA(\241)p
FC(2)1502 5155 y(0)1460 5344 y FA(\241)p FC(1)1502 4966
y(1)1502 4777 y(2)1502 4588 y(3)1591 5136 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 0.5 def
/dx x1 x sub 199 div def /F@pstplot ((2.0*x+3.0)*2.718281828459045^(-x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0.5 def /x1 4 def
/dx x1 x sub 199 div def /F@pstplot ((2.0*x+3.0)*2.718281828459045^(-x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
14.22636 55.22395 31.29819 75.1156   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1591 5136 a
tx@Dict begin { 8.5359 86.49673 } PutCoor PutBegin  end
 1591
5136 a 0 1 0 TeXcolorrgb 57 x FI(P)n(oint)17 b(d)n('in\003exion)p
0 TeXcolorgray 1591 5136 a
tx@Dict begin  PutEnd  end
 1591 5136 a 1591 5136 a
tx@Dict begin { -47.8004 33.23308 } PutCoor PutBegin  end
 1591
5136 a 1 0 0 TeXcolorrgb 38 x FI(concave)p 0 TeXcolorgray
1591 5136 a
tx@Dict begin  PutEnd  end
 1591 5136 a 1591 5136 a
tx@Dict begin { 73.40813 30.50137 } PutCoor PutBegin  end
 1591 5136 a 0 0 1
TeXcolorrgb 38 x FI(convexe)p 0 TeXcolorgray 1591 5136
a
tx@Dict begin  PutEnd  end
 1591 5136 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 14.22636
55.22395   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2843 5230 a
currentpoint initclip moveto
 2843 5230 a -246 5313 a
SDict begin H.S end
 -246 5313 a -246
5313 a
SDict begin 12 H.A end
 -246 5313 a -246 5313 a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 5313 a 0 TeXcolorgray
116 x FJ(Ex)o(er)o(cice)d(18)p 0 TeXcolorgray 41 w FI(On)j(note)h
FD(C)32 b FI(la)17 b(courbe)h(de)f(la)g(fonction)i(exponentielle)h(et)e
FF(T)29 b FI(sa)18 b(tangente)g(au)f(point)25 b FF(A)s
FI(\(0;)8 b(1\).)p 0 TeXcolorgray 1909 5895 a(16)p 0
TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(pose)26 b FF(f)19
b FI(\()r FF(x)5 b FI(\))14 b FE(\306)h FI(e)539 -193
y Fu(x)594 -163 y FI(pour)j(tout)i FF(x)g FE(2)14 b FB(R)p
FI(.)j(On)h(sait)f(que)26 b FF(f)1606 -193 y FA(0)1628
-163 y FI(\()r FF(x)5 b FI(\))14 b FE(\306)g FI(e)1851
-193 y Fu(x)1907 -163 y FI(pour)k(tout)i FF(x)f FE(2)c
FB(R)p FI(,)i(donc)1714 20 y FF(f)i FI(\(0\))14 b FE(\306)22
b FF(f)1985 -14 y FA(0)2006 20 y FI(\(0\))14 b FE(\306)h
FI(e)2223 -14 y FC(0)2272 20 y FE(\306)f FI(1.)-38 203
y(L)-10 b('\351quation)19 b(de)e(la)h(tangente)g FF(T)30
b FI(est)18 b(donc)1692 385 y FF(y)j FE(\306)h FF(f)1869
351 y FA(0)1890 385 y FI(\(0\)\()r FF(x)15 b FE(\241)10
b FI(0\))g FE(\305)18 b FF(f)i FI(\(0\))1692 510 y FF(y)h
FE(\306)14 b FI(1\()r FF(x)h FE(\241)10 b FI(0\))g FE(\305)g
FI(1)1692 634 y FF(y)21 b FE(\306)16 b FF(x)f FE(\305)10
b FI(1)-246 747 y
SDict begin H.S end
 -246 747 a -246 747 a
SDict begin 12 H.A end
 -246 747 a -246
747 a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 747 a 0 TeXcolorgray -141 832 a FI(2.)p 0
TeXcolorgray 43 w(On)16 b(a)g(d\351j\340)g(vu)h(dans)f(un)h(exer)o
(cice)f(pr\351c\351dent)h(que)g(la)f(fonction)h(exponentielle)j
(\351tait)d(convexe)g(sur)f FB(R)p FI(.)g(D)o('apr\350s)g(le)h
(th\351or\350me)g(8)g(du)f(cours)o(,)-38 931 y(la)h(courbe)g
FD(C)32 b FI(est)18 b(au-dessus)g(de)g(toutes)g(ses)g(tangentes)9
b(;)19 b(elle)f(est)g(donc)f(en)h(par)q(ticulier)g(au-dessus)g(de)g
FF(T)5 b FI(.)17 b(Il)f(s)m('ensuit)k(que)1892 1114 y(e)1932
1080 y Fu(x)1985 1114 y FE(\270)c FF(x)f FE(\305)10 b
FI(1)-38 1297 y(pour)18 b(tout)i FF(x)f FE(2)c FB(R)p
FI(.)p 0 TeXcolorgray 0 TeXcolorgray 962 2670 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.90349 a add def
/d 0.0 a add neg def /h 155.35172 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 962 2670
a 2011 2424 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57324 0.0 -126.33025 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 125.76106 0.0 -29.59065   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 136.57324  0 -126.33025  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -126.33025
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-29.59065  def /maxTickline 125.76106  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 125.76106
0.0 -29.59065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -126.33025 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 125.76106  0 -29.59065  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -29.59065
 125.76106  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-126.33025  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 125.76106
0.0 -29.59065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -126.33025 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1996 2521 a FC(0)205
b(1)g(2)h(3)f(4)-1233 b FA(\241)p FC(1)-309 b FA(\241)p
FC(2)f FA(\241)p FC(3)h FA(\241)p FC(4)1922 2444 y(0)1881
2680 y FA(\241)p FC(1)1922 2208 y(1)1922 1971 y(2)1922
1735 y(3)2011 2424 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.439999999999999
def /x1 4.799999999999998 def /dx x1 x sub 199 div def /F@pstplot (EXP(x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.44 def /x1 4.8
def /dx x1 x sub 49 div def /F@pstplot ((--1.--1.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 2011 2424 a
tx@Dict begin { 21.05518 101.29169 } PutCoor PutBegin  end
 2011
2424 a 1 0 0 TeXcolorrgb 56 x FD(C)p 0 TeXcolorgray 2011
2424 a
tx@Dict begin  PutEnd  end
 2011 2424 a 2011 2424 a
tx@Dict begin { 50.64584 73.9773 } PutCoor PutBegin  end
 2011 2424 a 0 0 1 TeXcolorrgb
54 x FF(T)p 0 TeXcolorgray 2011 2424 a
tx@Dict begin  PutEnd  end
 2011 2424 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2011 2424 a
tx@Dict begin { 3.41418 19.34766 } PutCoor PutBegin  end
 2011 2424 a 0 0 1
TeXcolorrgb 6 w FF(A)p 0 TeXcolorgray 2011 2424 a
tx@Dict begin  PutEnd  end
 2011
2424 a 3145 2670 a
currentpoint initclip moveto
 3145 2670 a -38 2878 a FJ(R)o(emarque)14
b(:)j FI(On)g(a)h(d\351j\340)f(d\351montr\351)h(ce)f(r\351sultat)i(par)
e(une)h(\351tude)g(de)f(fonction,)i(dans)e(l)o('exer)o(cice)i(10.)p
0 TeXcolorgray 1909 5895 a(17)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
