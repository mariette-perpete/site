%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesTerminale.dvi
%%CreationDate: Mon Sep 23 12:02:49 2024
%%Pages: 21
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Letters-Italic
%%+ Utopia-Italic Fourier-Math-Symbols Fourier-Math-BlackBoard LINE10
%%+ EURM10 Fourier-Math-Letters Fourier-Math-Extension Fourier-Math-Cal
%%+ FontAwesome5Free-Solid fourier-orns XYATIP-Medium XYBTIP-Medium
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesTerminale.ps
%+ CorrigesTerminale.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.09.23:1402
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: fa5free1.enc 0 0
/fa5free1 [
/dice-two
/digital-tachograph
/directions
/divide
/dizzy
/dna
/dog
/dollar-sign
/dolly
/dolly-flatbed
/donate
/door-closed
/door-open
/dot-circle
/dove
/download
/drafting-compass
/dragon
/draw-polygon
/drum
/drum-steelpan
/drumstick-bite
/dumbbell
/dumpster
/dumpster-fire
/dungeon
/edit
/egg
/eject
/ellipsis-h
/ellipsis-v
/envelope
/envelope-open
/envelope-open-text
/envelope-square
/equals
/eraser
/ethernet
/euro-sign
/exchange-alt
/exclamation
/exclamation-circle
/exclamation-triangle
/expand
/expand-alt
/expand-arrows-alt
/external-link-alt
/external-link-square-alt
/eye
/eye-dropper
/eye-slash
/fan
/fast-backward
/fast-forward
/fax
/feather
/feather-alt
/female
/fighter-jet
/file
/file-alt
/file-archive
/file-audio
/file-code
/file-contract
/file-csv
/file-download
/file-excel
/file-export
/file-image
/file-import
/file-invoice
/file-invoice-dollar
/file-medical
/file-medical-alt
/file-pdf
/file-powerpoint
/file-prescription
/file-signature
/file-upload
/file-video
/file-word
/fill
/fill-drip
/film
/filter
/fingerprint
/fire
/fire-alt
/fire-extinguisher
/first-aid
/fish
/fist-raised
/flag
/flag-checkered
/flag-usa
/flask
/flushed
/folder
/folder-minus
/folder-open
/folder-plus
/font
/football-ball
/forward
/frog
/frown
/frown-open
/funnel-dollar
/futbol
/gamepad
/gas-pump
/gavel
/gem
/genderless
/ghost
/gift
/gifts
/glass-cheers
/glasses
/glass-martini
/glass-martini-alt
/glass-whiskey
/globe
/globe-africa
/globe-americas
/globe-asia
/globe-europe
/golf-ball
/gopuram
/graduation-cap
/greater-than
/greater-than-equal
/grimace
/grin
/grin-alt
/grin-beam
/grin-beam-sweat
/grin-hearts
/grin-squint
/grin-squint-tears
/grin-stars
/grin-tears
/grin-tongue
/grin-tongue-squint
/grin-tongue-wink
/grin-wink
/grip-horizontal
/grip-lines
/grip-lines-vertical
/grip-vertical
/guitar
/hamburger
/hammer
/hamsa
/hand-holding
/hand-holding-heart
/hand-holding-usd
/hand-lizard
/hand-middle-finger
/hand-paper
/hand-peace
/hand-point-down
/hand-pointer
/hand-point-left
/hand-point-right
/hand-point-up
/hand-rock
/hands
/hand-scissors
/handshake
/hands-helping
/hand-spock
/hanukiah
/hard-hat
/hashtag
/hat-cowboy
/hat-cowboy-side
/hat-wizard
/hdd
/heading
/headphones
/headphones-alt
/headset
/heart
/heartbeat
/heart-broken
/helicopter
/highlighter
/hiking
/hippo
/history
/hockey-puck
/holly-berry
/home
/horse
/horse-head
/hospital
/hospital-alt
/hospital-symbol
/hotdog
/hotel
/hot-tub
/hourglass
/hourglass-end
/hourglass-half
/hourglass-start
/house-damage
/hryvnia
/h-square
/ice-cream
/icicles
/icons
/i-cursor
/id-badge
/id-card
/id-card-alt
/igloo
/image
/images
/inbox
/indent
/industry
/infinity
/info
/info-circle
/italic
/jedi
/joint
/journal-whills
/kaaba
/key
/keyboard
/khanda
/kiss
/kiss-beam
/kiss-wink-heart
/kiwi-bird
/landmark
/language
/laptop
/laptop-code
/laptop-medical
/laugh
/laugh-beam
/laugh-squint
/laugh-wink
/layer-group
/leaf
/lemon
/less-than
/less-than-equal
/level-down-alt
/level-up-alt
/life-ring
/lightbulb
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7C8BE8F7D3062E20E83FA6AF45A0C932B5E6EFB4DBB928
E4511768F708A03FA8BEA26BEBE94936A426DB77A8E800BF093CF53914B71382
019AC58ACA79B9DF64946EA241C84569F2A13CE8AEC7775D014891054D978CDA
2123ABEA1F56B7AE95ACBFB66602930C7FF181D407919EE24F9822ACEB90CDE2
8600399C4B6A20B9F9372AE5FF89509FC2DD0A41FF090A6554331231DF4C7487
1AE978282A9D1CD19D8BC9A2C60B4013973946C9961828EABE87D4EFA0BD65C6
86674692C0F27E9FAF66DC1195124A60A6E5F01BF2C6D78355FB7575C229866F
C1AB1434BE0F4861EC8F64AE46D40D52EAC802878FF064922470D50F2A18FE57
DE5237FB22C8424FF3CC5990A998A735C12B31FC7F5E6CE9C732AAA4AE3F2C72
C23DD8504C426F0258ADB1585D75CFE278C1CD4E699553715048D27CC0A4E0DE
FDBA01DDEF496F6DE0DD44001E2F1363A9B1A38719B53E70C814D0FC7F5D069E
C95994EA648AB4D100B6B2DA0E1594AB8CC867B772253A7C92050AEDE8F8E58E
2AF48F64A090AE8D456458835F196A930F7E51B1E22FCA52B12375B2DA1EB4C8
19A28226AFD8F3E04598F519B32EEA410CA5C653EB9FDAA0CA007F8DD54B61F0
F8DF83A7B4BD041661945091BDCE083424A47790C81D990013ACC1763260E9AC
E361D63457087101F7BF2358A06084859C632C8DE35FADC38FFCD02EC1160CAE
5A6D87E2112C48DF124951653D19B04EEA5CFD0D994059D2B412EA2767BB5867
F44610C81FFE049D199AF9F5B2786D5EB2431E778C6E8A492379CD73BD7A2E0C
CB6634DE71F20FCD1939F2A0A02FEA9FAFC4A3C788958195DB48A6EA8666FF25
4A83839F08E6B37E6E55F27832DDA15B7592C06FA60FF1C751CC1E402911CAB4
9534A03AD5A6EBF977303BE913DE8B9C0D53432D9BE087DD17AC5A8033BBE0CD
E9A55A7A09D6E4D7E801AC7DE94C740A041DA9BCF6166ADDBD0BD59BD1B6CFD4
9111F4366E4AA8FE4AEDE949D8F732F744197AB5B4EABF03CB5CAFDAED28975C
A03C9BD259A50618883E2B007C46FFFCF9F605F804513E11CEF8F542DE0C0AE3
7C73BC14806632A876B9275789B85F37B93AFB5EA3EF757F16B0236432F307E4
0C4BE3AD0B34393BFAD9B010875BA73EBD9A175259842E6DF965D4E5BFEAD394
07ABE54CE6B415AB37571F2A62FB679BC60EB0146C2B3C9FB77D5285C30EE408
E64FC6AD060AAABAD60E67A4110832F198E3EBA2BA0061D924E8B0C518B17E14
F874622C8B1A115C10E15E8E1AFDAD7C3C4BFCC7B63BE298A124A92229938268
E3FCF67EA5E16108C276AFF3C02866465883B2216368C07EAE98DA71C99F0F14
CB58B87ECB4571E98AEE8C4EA27849EDF9FC24D9C8156098979A1938788DED15
020072C76102552D003454E020E5FF5A3C613CF3BFA671718DB1E4AEE2B63420
D1CFC724D8D515C07A3637970B570A1C2C7B19722D1809D6D2C99A0888C3CFFA
343B76AE1536F52AB3DA276A717E928F4213DC5EF3E98B70C14D755D55CA286E
31ECD51E5B3FAC3F7DFBA3001911014560C630FAD0A07F6EB620DDE74E323C0E
77B32B4863BB0D630E174B622AFF5034F1417DA298826C815DD6191837BB59A6
EFDDC722FECF62CF48AFAE9826118A7842410C4684B52C6C2EBD0E6EAE48CA9A
E688028FEF7910135E70512342821C190FD862763055134A80FAFFA114DEAF61
D75DDA765A4EFAF971A38C299F94BAD02070972F86F67647F89602E47C11D1EC
A40563B012BA84AC04C925237ED09670844F1178773C6F128840347064EE604E
F214712F0013F4E76E05A5AA92C00096B39CE09114D97FF44D2D228706D8B453
82F3E6E314D9D4A32ADCE4F679995826124B0E3D8FBB6F35ED99FDBFBA9E0254
B8EADD6EA0C32C4D3183947B4DEDF8CA8F409C8D264B87AA407855FF329A21E3
47A13CDC5494DC4C448FF930F117BA3F0DDAFCC502BD16586DAB0F8E3DA2CC04
3E411230A7843EEBF5177390967C2A904ECFB55D1280C93ECABC260AB1DBBE73
BC67F455E4706BA91C74F8D4ABB9BF60C612341510CA739FB4178AD444692969
9FF94D48BEFE7048E0069C96C85C1CCED88089F60BC0DBE8103D10CE995752BF
D57CDE16A39742FA1F10824B92F6FBF4FECA9D64C82DB40B53E3A579E440B9E8
8AED0B47B799AF9109C83AF8DEBBB5E88F56D1B0C0B926F9399BCF9023BCAEBD
C75F1325440BAC5B2CE949EFC47928A733B5EC9E701CFFDE7D0B67FC56C96AD7
E13C0C3C3AB1F751F6F16A69CB188B64B94E4CF99AFACC3E3E5247568B3501F7
6DCE431B69A737A0AADEC124A16D9D51FFEEF07948097F65C8B1F578B3EF455C
242395E6C807B7E2E8D867F7A98C1863B3576890D0897CB066840D525DF306BD
03A21C70026F448E4F1525381B90EDE665375B51D47F1424DF5049FAAC7EF825
F48410A5B683E0B9ED1659DF78A708EA8E3197698A83DAC0AE50B9E9257300DC
E45FE729DF2D29B305A5A4E592DAE8DD138D04B6987EC3B8AD4C925B5C2D528C
24496B5D0E7C1D53D29740C6D9FF884E8A8FFC549777320C9E19C51CE9C81A4E
75F8E0B50AEC09C8D54836767BA4F8068A0BA4DEAE3FF808AFD28865B349B626
B26759BD17E9828BE88434B8265CF4C8CFB177292E3A0F789274C1929A4F4C1E
B581F955C7614ADE17B8E544EA9A62D28B30595E0FDC719203F6C51A9E4A77FB
2D7009025013419193E195A8287FC89EA030CCBD8835AE68FFE806C89D836234
B2B785CE9290B436FC95D857A4F6B28CFDBCAF8D671E7F639B8E737EA1FBD62C
79E28D306EAD2BE64ECFA88F60DCD565D40CF3C5051E63F287B8AA386D9CEDEA
8BE2A9548FA99BA19528968F5CD9827AB246B5ADF58110A340432A092F9A1998
9E4D752D6D0510D654B1B760B4696B15B306CE4DE0E08695C3E41D0A53D77330
B5DB2275E20B7500715F90769F2EDD537B3A48CCA126D53BAC13528A57D3917A
B25ECCF0748A538F809E05D69ECAFB6A5C0F99E454428567758683F0A292156B
D4EFD326A319C58780DF8FB77A6480E97376ACDD656F54C953347B85075FA2A2
7F4BC306117A213EFA1FAAB7460E7642ECC98E953BFCCD46754678D108965655
FE0159797558B653BC0AC21C71A70BEAA919B9A3C8AD7FC2127C7018C59DECC9
1A7F9A123429C7FA18DF2F852E8B121A1E1A04FF0FBB1FD6125EE43CCE3554C8
233BADD942D94FCF1244CA8EE79FAB1AD930CCD3D6CFFDB3000D912F02464F79
3C3FCCAC2BF0EC4F6D7492A5DCD78EB1EE2501BF6E0D35AB784DE3C8231B4AFE
2C53E7C211514EA070FA497E5760AC73BBF26DDB538CD70DC62D908A7D399096
7663A7A5FB5FCCFF1FC5A9A0E5EA300FB8656CFBBD9ED702843D630A72E67486
F821C5B6AFEECCA87F7F79CFB22972CD686148808CF2E7411B84578A45B0BBCE
354B871332AE996126747763D2683A502C6B638A8D54A5DE5F0046FE882B99F8
D6223851EC6645CCD29659BEB7A2163528D48268374DE5F962B7E47D99AEC795
A3FBEA86E9AE2A0123C15585DAC525ACE7CC2043519E5B4A6A909D4EDE350108
FD4764D82C2ADB6BB73A764309509FB6B9086959550027B87A0F0EBDB056B9D9
EBFF754428AE15D0E5F89F88C9ECE085E6A76D4AB9AF8CCE770D52E3518CDB04
7CF0A298AFC926E8BD567411820F6751D9EF221AD1996CDBF72DA5A685A33239
59A5D0702C112D29E0D69C7DE2E0E5C6F0C37B2AEBFCD0C91DEE13A101E6ED01
E7ECEADF2ECB37A7FA7D4025D2D7A96E33E3B7275F869ABF30E438F5B0129F3A
FF3541140B500A5B6CDA634CD2F096592401E349F6B829C08A43F3A9F6E1E1E5
22BA055BFA5AA4355E493C860F97C6B7BB2354D51456C72FDE6F8943171844C4
B9F502FC1CF9880E2377B42E7209850C13075046F12FF4A809E3747D35FB85D6
32816F3473922F112F758381ED7612E96695FDD4F7F3A239BB81496BCCD61444
A7B9DBA285DD3A3E2EA9E0FDDC5B02D5CC48797888A818135D2EA54F0DC81B99
3FD5E0B757417AE1BD7C8D18FC678456404A37F33F4986F4B8D718971AE0A61C
354DBFA230513C7CEBB994460691C40BF82A6FFA0C1E74633E3D9C344995237B
F2399412C3C680B1C1AA7670EE3749FCF6EBAA9E03FA16F500210DF1125DDCAE
4DA45EB75E16A894A362E52B2F42AD2CFE207591317343C86C992262713EB6ED
D734030729AF005CF6B52F0F1124DC2A2D9A030AED975135B233283FECFE48F0
636EF976C26E8B2B234B174D80E6FA1492BDD78F9014EA33005576876ED8F129
D959929AA73D4F40A61E9C07B7278A97BEB3CB8F404E8AB8DB64EF08F99F19CA
AE0B28C0257DF24CB49A890FB3B6009E0669221987A70CB798F0C85B223E9C74
34533AE9CA24F05DDEBFD668029ABE5490E55C2DC37A6F48916CA30C1C1C4154
2324E019ED276651AD4B3A8AB43F21B13907B12ECDD928EEE5C902BE6851FF6A
1EF196D734891CF9DAFA56D68F94D8A8809ED2E770013DDA26E8CA769603D00B
CA5DFAEB05171D8A929137F8AF3B6777228F0387BD24D5E7AA6F2489F389183F
2CBCD7E67FBFE8CCAC3C218758F11DAAB9E5775FCE5AEB0B4B85CB81B41C636E
8F976AE8191B7B9C53E67DE417DE679762057CB085B9D8C79AA99EC9D7254093
8F50EEDA91717188E150E2646B72C53DC7C72AC06DBB2149F9EFB793D6E0EBA6
244D7FB96F0C0D960075B6018FD0C763977834101D3764B8BED3D0FB41957900
557C804A8F020D9BBA24963A252BA1DB8EBE55ABDB390FCB1FFAFF5C24781C3C
BE645A0F19EB7835FA1C6F1CEC7BB718D88F3043A75E693DFA92AF58B3EDA565
AA03616E07AB822257E904FB002EB74FED57E91C36C061B15A2B75F62B4E3FE9
4448F09A62BD8BCC4CDFC27EF80881466DDC22ACC3195E907232DA7BA7C54707
99BE04516D0A5816F999AB3693B959D98C723973169A8C35CBE0F46E7EE5D312
C42CCC48CC39F0187295920479B2F14A00D4276D6B164233C91A4FF6F1AE7E40
8FA1C294744603D1BA3E92664391508549B2B2B856F65BD5B8587F499E1C514C
13513D6257B109ED1F1BE579011A5E5735038CC2A85D562ED72A737596B31E5C
6F38B1E1E32E3757D29531E5FC0D82E3C7A15F1D4DE33DB1E6B67199934371EC
BB9B499D9141BB1624F36CF565A5CDFC2F1E54AD17BB6B0446A60F16B9241FB7
5F92C8E0E54A39325730961457A7B9AB98F763BD6776F503263945EF22E686F7
37141ACA92AFFAD391A3466527B59B0CFDAE2C9D0CDE1D91BA212DF9EC72C5F9
CBE4587D1D1677FD06DB1BFD25F6FBAA0F0A7F5424B2EADE9C549844667E1A56
1BF06769FD3C38E4FD969B1949C83069C3B4877A42D5AEE9022DB3CF45A8E0B3
D05AEDEDB77D9E7208445C7C712CC5C62D9B677B82238E7F59EC311B6A5BED03
D63028C2086AD0505F2AD3CAF98097861710E5A7DF298B8C26A537BDB9FEC673
3165928EC47EA537E89222348D7CE507F36BF63EB0CAFF8DCCEBF494E7B18E46
2B56F95267C35DF332DB422408601C926B6AA311D5E9443EF951B9712A5B15A0
524DAE6BC96933FA04B9F8750A2E01DA9DB1219252E63E44EE5EF03E7A95EE30
471CC301A3003871F527B4FD812299847751242A225C7C3E542B9F9833A1E35E
F14AA63B12734EB91F645AA7714B8AE9CB3B6F78BB1C8AD739BCEB452474A60A
C8D46CFDA227E0B5549B55DAB5D7251259B8EB6B09968A126EC9DB90BA60E629
4DA6EBD8799BD04F74495C57C1900C1051A12E92BFBA593CE349822E1204760E
855DA4F1154E8176F653F75F1F875F28EF4C91B980E9AC125C77505884A2CE32
F5EFCE7B0C17A3904E440124B686988EEF3E0D55F6C8C1C855B8D9146466A674
030D8517366520DEDC266997FE5E4A2E99B4220EC981E3B2E0602D2689B76E92
DFD79DE62BCBF08FBAB4888095E725A0B6FAB6FEDDC4ECC9C1DF3A297155ACBF
85B44CAD1CF07B1C7C98445FB7C1EF58B1C8E8EB4988B9CDA0AFA868EE45BBD4
A48701B5D4511FCA155BE79E19EF3B94C19ED9EDF128ACF5E79F880F749E88E6
D784EB2922729A2C0049EC118B6420ED41E5B4E80F6AAB41B7C419ECF2AC449E
BCAF62677E870BB9976CC8974662B704A3C247CDEFDA7CA047CE7186A1DE3496
DAA9C6F7052ADB5EEACBED701DAB5CD52908A25F0F5B37D7BFA5CE36DE06898F
2442AF8581A44D87292FB69503E533DAE09FB4A08255BCDFD9CA1BF6890BF500
BD08E0CDDBAFE7AF4B39A53B5DCDCFEB2513D8A6864030B7B44B7E9C92624A3B
12E3B015980E635AC2EE51214865B11F62896907CE63CB31ABD54B73ACF1F7D2
3D3A233B853803E397E8115F3A0C00263C3C9F1B532B619F2B7C270BF4F4AEA1
BF99F8357B434AFA1C9AB75787F79E52CF7F9EF91FFC9F8D7D998C3ED8862095
F6084439EC6C77997EEA26D31D2BAB351DC8A00611A2E520FBFC3F49339681BE
57B4FF58527B20D97D5D0802C2E67EEECC78FA7B8C42F8765E184D7383D4B715
21A40DAB86997772CEC245585DC22CF37FCB441CC9EFA1B81A32662937874153
DAA00E6FD94CE8C5BFCE656F7827BB6DD04F03C7AFCE4CF00B5229B48F314C78
24337030061FAC0F21DE18FECE87F11B7F45E3D88DEF994EF5BBCDC96B5F791E
4B540F38E107A2E5E4499676B22093597A866F289B47C4333D013563AD8AB4D7
7A3B63B50BFB85FF25991E8D41B17F7A181B52D75A0A1C2C7BA146D78C62B61D
6065BB27BBFF3547449EF01A263FBA44B3ABE5567155154AD30303416B422E4E
BB29FECE107BBD8ADEA461F2C51F5CF7E678D5A71AF8D3FA86A669F671B23786
22A7A5D19A22BA50A25896C2ABED1306F7C5D37C998D134C8CB2A934C9C69F86
4B0B9E3B03982F02A53172B7D2FF21DAD656999D21D77281043D30DEFD1EE428
41B2BF69370048CE7EA16B5EC546A8CD9E1D6F2A5F3DC8E9097C6387838F2C88
4493942F14C89F655803061FE196A3093A29B9F41469F153AE23348880398805
FE76A59E9E03A4B5B480F71D794844779E0CD9476D3BBCBA97F08F9F4A70BDB3
620DC94A514FFFE660F09D520E79266190962FD472F0C22C0236C3EE2A71EA68
4C504CFA98DE245FB8EB0A56D39594DA116953F1416C45F684D95884306C3777
80B0FDBE167CF47D6C1BB06D577C33588CB9F0ABFD342B6906A50BBABF3AE38A
F30CF4E201819397534CA528E5D88ECFB4F73F14B332F49FB1A10B2DE33B4824
692E85E9000141EE5B103AFE3DB94B7B3C625D0B5019F9E1D4145B2AF841D9A7
5C42B8B6525D70B5D231FE5E26BAFA71158D1D32875ADC009C0F39FA864C63C7
68C9FBA4BDB61EE45F2B10C76D14A8E6DF7478A94D49EFFC97724E745DA73C7A
5AD045FA04A0362CA8A80485F220C8A485CD0B5142B03F3907930F545C477687
61118C278A8DE53E7EAE1E3661B2A769DB04055489DBA71E20F6891A4FFAB7EC
ECA43EB130C12677161CF0B9B1D1BC2B47072D54F575D2941BAA470E3AD7F1CD
947CD3FAD238103FC38ACE31BFE91DEACE1BDE0BB7CEFFCC8496259C1F5D5F40
C74D3A39B68DB40148C9FE0B780D54AD11686A9A22E5EE48D80B4B28F0547E71
733A48DF5E0C78BB28DBF7A3AEDBA36CBA05359BAA1317BE776D928D8DD02111
CD288B948163350E034A0E9902B646FE159658FED329614E76320CCD85B077E8
A76F9D5C43154C562BC9113CC750BA7D6D0E9641710DB5622919C9C72BA1F5F4
D01F9F6755E232669B57A75801EF639FE07737E14FBB28E21940DED1DD68274D
6C03B7C249924F1D5A66C20A444CCE5F7F1A98891390E6D2ECFC8016E7FF5E51
E4B6EF02C507BB49F4877EA2CB386F15C8B9FAFEC8DA87F1F66E4F72A1B3CAC1
B919BA0A807C650642C012B73B2DCA6FA8F4AB6D24629EE6D202FC7EA7F348BF
33AEB03815DE43FB3812DE207F51447862FCF893731C640D38DC7C58682CDB25
60C561A8572169012491FB2FC57B745F5D224CC19B6D417563786EFC91F0C5FC
D139E2D3EE4AD59A2E1CCD25A88FF466FD349AD55E2D23C1E082F0529CAC9433
8C57C1ED9FDADCE7C566AF4E00E255E3788B58A3ED0DD8CCCB64B05B15388C2D
8458A2AB8437CDBCFE6115565ED793D2CA1722CC40DF2B46008EEB78EC6B49AD
86900F9B962707BF9953E74341B889B5AF8EAF9682CF236A1B88F6806A5BBCAE
98ABAFBCF1C8B2C5D17AD8CB27048D0EB72F3219B2DFDC18ED31980693D56B56
33E20D692645C9523B8F161AB857AC67F427AFD03FE0A1BC5CCB6BE58D532CAB
D244C7BBF0FAA735E49E38CE44379C031C3F36372DB3DE5C6E9A6F6BFC6D5FB5
5FB0B7E609745E65E507DDAC5187262DAB442B37052675ADB8B26135E51FBD1E
4A8BA59138C5A45641593183CADD2D052E51E10D2FE00AA3B6B4FEB096A42A8B
6E76A8BDD30688885A6A41088578E3F54917ECFBDCE95D2E1E47B9A3DF7BB6C8
0207C803EFE1FA939D448C37F4A4453F77702DBC4E76DFCF7FABCF8D9C1DBF74
15BA0B4C2AA07D58A4622985D2D308C1B398CE37763C7DE5B76CAD485E23AD1C
1B4C8FCD9468C4BE3D8E28FC5919A3436F005B966FB53D97C948828E2C57C647
9A0495135137CBC9A8702DABCF4D79E6F22A73519094BAB3295EED8AEDDCA78E
307AB487E065313FA06FEBA0AC7B6DD28FD2E9636ACF1A8208C592A8D3319DA6
5425A67E4F2B3BDACC2DB3021E44B6FFCE6F75B5CBB4ED029C76AF62FB24464E
7A76DEC721B203B0460E495A25AEF169F7A6AD138765206C8BD0791CAFFB37E9
77A975F1BBE8C63336C46EFE5CCEC97163253781A1CCB1BADEE4331852C0D818
03E63042030166F25803C3EF93BE5EEFEA3A7C0DC8C3FC6D6EF86E758C1B20D6
86BEADC494541AE714F1B057DB00C4DC7E1C387A6457C32AEB3EDEB1C19E93C1
0A1BDC6912860FE5CE6CA5A99219AEDCC74CB58AB7612444940D033A5FAD603C
6B7557AF2E92E732E7ADA42C54BC4870268D7484FE98C1383EDD3B140A4D0440
AE3C203E9C274FC1F0C7BCD44A60F2BC0C9B45B30DF6AE8B5B231DBC5932B97C
5F79B80DA18ED80A94FB10CF6875AA5AA6960CFB56384AC6184A4355192E457D
42F38BB7E3A459396A03FD3632E00610487BD3BA280CD8260CBA617CF08EFCEA
5C075E57381085485428C89A7BE24371752B28C4055162E93BBD8D387D2D2D46
A21F9DC6DD4C26342282317D884D3828D5C298269A49C77137B2AF63CF955A41
77FB623EB12219CF5C57B77FDFC64B61B809A087FC2FE90C87519A5484D65413
9BAB7065D93BC9534EA0F3A759EFD7B75F94B5EAEB7988161FC614D69D0A6BF8
F14A574893514F1C65D278FBCD3342AFA8C2997FA9661D8F9C7CA3E139B53ECC
E76CA47E30D4349304547D260A901B0C72831052F56675FD7A9FD9A4EDE33F3B
3438C09E0B928D19613BA2E7FE66492E81544A98369F8D7FCB46C45A81EC3066
B9B81A7BFE04438A42890CF7EA8047E8B2D62F0F53EEDD550B2FF59F2FD46682
66F09DF1F9FF80B577D80F66EACA76A40C0171FA98121DBF163F562F922AF48C
9F965381867CFE0E056860A7C6380C5E004AF837EA7C002D97B10753D0EE9FFF
EB47F2F32A3BEF29D6207A3A4DA38D9B553965613C73DAA79B7DC2957DD196C4
27407CF0E2E7428A23D08A3382C778E3B920CA00304EA0213C1221030FA1FA3A
418E19297B26A3EBED63DEA8D50F40BA9B845039637953CD54BCF35F71E094BC
F3B6234A27172663C3B273477A79DE135FDC53FCAE962E7C49FFE7C75977C73A
7158CBE40C3EF2D7EBC09EDDC821CD1C5A82E47830598224366CEC2CC597C0E7
3A2C4B478C97F5D3284A5579B66BF5615EA21C5588F5B67E9326278CF68E253D
E07A520E462E3260FD9A236C48A4EAEF8B4BB1CBB269ADAE5073D35661CD3885
795FE0FAAD9480CB449039FCDC8C7D9E59A0C711957F933B3517AB4182DB2ABD
FD5B36E9E474D4D681C7AE3DFC79328C55F6C5CF7DD9DA6D7453532330DDEF0C
93EB6C377B42A3174AC1A4007D1FA184ADDBA472649A6B281EA9897D72ECAFBD
077005905F7FB2C6F34650E6D8B670C20664115964903BF471B2E4B8E94D2D8B
E2D9D46F9F67EA93485221FB3FB92972A7E738E9BFC73BAF17073F2A31184D02
2810741B54D7211D1368C7E650FCC391128430DD6E6061B9263AACD226ADC90C
6CBFBD40AC82778F70A0C55918743E5C80BB0A735F628C82ADB3A32F0646782A
E6387278541BB677B9B8C9CC0A48056814EA0C8C02770E70A48D052CA2AB1D78
24D7B16EF03FD194CDC554F03B4B9DC2A3D974C0E48AD6588EFEE83FE96580EA
52DDBEDFCD89BBC68EDBC875E0819EAA2D400E409401B73C08B962D87CE12489
E9C337EB89F79D3B3CA01B74BF8D0AA088340BAA063C6C8B3971DDCCBCE91F21
DCC2B4BB769BC7E91CDDE816E651DAA3CE1A2D3C74D3397A44B88E52947C24AE
BD8FACC78BDD2507D6D11BC8B9B6AC04E13080FD708CE33E8E3E5BDB720B0450
A514A35D288161EE2C93508425DCB8752C5AA26ECBD8A0D6AD4295B0BCA199FB
1BF99775A95B84116F985ED4FC3EF2AFB2EE804090F1980E07FDF3C8BF7AE410
A2EC1AD16C2F710031577D73BA71011790B2FB0F23D2222B740AB8A7917B77DF
EB2FE870005977FC252F50D9B832426CF2AD1FF093830BE9FD38F7FD9A25903D
1E9CB86E0E737F049791B724F21AD17C810A269767A79324330D2FA91D8273D0
046F9CE53BA9ED147C17E47FAA205D38DB89F429264BC4756A893FB7C44A0D4B
E849CAD24A2C37AE1666939E5A456DE4002001F11592982F06283C42E021B6AB
F54D26B1D3E885E0FD8795F99654305F720A83813AF783E08ADD4AA086648F43
2B0CE13291132AED6B06A9741209D39D38B4C1234626D767FC7995D8FA47EFA2
33E727F9182F78277E4E59D007C7B881678421172A9FB266ADDA10A1EA48E055
AE8E976312C31821CD015D1B661420CD9AD7914C75469B95065D6C150651A69A
5A3E416FDA65CC2DC72DBFE6AE6E00C91E329AB61A1928E11EBA5901280D1781
C7C0A43A2B32198EB6C1271D4802773CEDD937777B53E9F2292F40A315CA76C4
E194BEB5E11A12C7A22E01464636FA6473DEEF55D1C0736223D610DCD6405CBA
86C386D5CC5FB7E9D3D71225782D0A5408CF8E15487FFE937B6415B64E2D49D6
149B365106ED3F20060C591D47D4E9CE12D01D779A4A279FBBCFE00B4F398F20
8BF3A56FE19A5DC304D369825FA5ED6CBC13E4DBE4D1145CFB15C0B28EE5296F
A119C19E9781EED331CA7DDED14C0736EAE3CF25C4F6AB2B97B606A0BFF4E49A
593F43BC43AC82C1E048A77C5690E56FF1F69ECF3A0D44F3AA50AEAD5089E550
B54CA86E56D434577366BC2AE9A4FC2CA5D4995E1E1CCFF968BE38D6BBE7CFCB
62CE076579832A533E394729C67763358A9EB01BCF0AF3CDBECEBBD62429065A
D3208772A109BA14F6DFFB182D19B83C9173CD8F0C6B99E1B11C4358DDF56D05
330239328466F7B405271D3464C1080F91FC81D4D9E3A1A06E7239F038E66EC0
72D86C0E9021857B280B0A6F70B6C7A06720D18027C4D8AE0341151C691A3675
805999F092F79FC696A37B8FBA11CDFCB8BF8D234BB2DE9251E7E1F18D591159
74D74D39C598579365EFFE4036089E90EBA03657771A8ADD85176A67EAF3DFA2
0B4BE2CF04E1AADC8D792F225FADD6E9C8FE2EB0C17C71E1C0663D7FFBB1604D
386D3C81B051C44648E2632ED8BACE1EBC75E8E4655E05C4F73AB4FC3AFB749E
A51078393906222EF6A53FD6044761F630C1B99C99573564B7346F2017B17BC8
E00543612A27D52B11AD555E2533E577A1B060239B451A7EB913CF9A2E312846
73CEB77F64F92546CB2510AAE3797449E228C8018526E4B17DEAFB9564F2E723
E14E151FC7EF0EE9DF6A7A57A3889AEB90356C867794DC13D70E9E4903814B0E
EB6D2C9B5FFE296CBF72FE4CFA39E8671FD8A10C331FCAE35FF94C084976F73E
38AC045E2D52D69BEAF88526D8659C05D9F825D6CE8029201CFA8AE775C2D5A9
62414607EC936F1B477E9E7885A12AC2922838DC3BC0B6A6E5C51934286E37C9
D3DB37FB1C083832444A13993422B76D90CEF99CDF1546BE56964FC491B42B57
FA4C7A73F483C334DD2B0EDF8EED107DF97821186E5FF62BBE155ED33D19D0BF
73D952B88F97BC1BF370C415175E74B92D93FAAE7280AAE6C8EDBE34D08A8AA1
DEB6CEA7ABC46E1FC3B716A8AF838B984479B2CDD1AAAD79A12B687238B515F2
F19F2E5B5C6334BDF36E99FF45233E958D9A9C306ABC924BD3CFBBE3A4BE14D7
1D08F2BAAC0531D360C14EEA3D410521930232257A39C84DCCAFB81EA2438901
27F7A4F3725C564B3CC6E5A512568F1A0411B8BF08087FD1125389C61D4E4DC0
6C800A6A5A4D49019DD3E049888EFF47AC0F7D24583D07405268A25E532AC1A2
39519B2B7A737BAE5791FA5B5DC57C7E29AA96D42AB576686D9401034B997188
B2A0C560123A04365E0B99ECE5E1E7EA41613946E097CE45AC52A688A6D6F3C7
78DC7D3AE0F1E60750FC8FA1487FBC4AB1C182B84CF34211C6819D71141137DB
5AB5D1692145491F1961F50B9EA1C82657E04FF9491B956B3583EFCD9198C145
E12D5EA5A906C087BD69B8E123724B7C74FE8F780FE25E19C9CE8CF6DAC96BD3
0C37B75328660D51115B58F53F1AD77DA6D918EA507045149776288EBCB36372
980DE4F1B315231BA851F9D55C91896E1D44892309E2F12284965A6E2F7097ED
AE91DB7C2F20E72D77D542C843EB919921A4489B9AC62AF47CD089C300E0BE0C
281B1DD090BF2BCD26BDA77145717993BD5DB88A1FE9734D1309B991A8B72030
A9AC06103FC7819A23AE97938041C5B93BCC2935CEDC8220C3B235935D18C534
58547025B47B0F8F4DF34029A3A87696CC981FE4A9BDC6176A0545D9BEFB569E
F6DB3403736F02F04B722EC2A58985561890C856632FA4843CB86FC4DABB5BC8
2386905F5EC6088521C7A3E7B859B40BB092ADBAE3CDF288FB529F7F39A76E46
0C5C4D2F749380EFC67BC7468BAE12FC1B01EC5BABA14122E0520AC2004AD671
22A0F5D9956957B07D11A72E5E4EEAD4DDC0D13E8F454BBB74BCB7F2D6795372
B9A0543C0F0F490DDC6C1E6EEBD0D40FCF7E144CDE5FA0E5F16E7AC6E1C27900
ADDE529C067DCE1E72D54FE3A9055FF49D6FECA25C104D840B447AE87AEACF54
808857AB8BE5D2EF12F42C9EC3074BAF6C12C80E4D9A885043E4F830DFD721EB
4F70F348F1A84EEBB190DFE4FCBDEE2CA04DEBC07119BE24FA8A3429C88C716B
01BDC46F03B73DBFA8FB0F2EB15B2D13FE6E9271771E4ECF6F3B6BD967B84753
093B0FAD11440EBAB4781138FAF1F4EAC500C1820696C5205F28DEDEC6CC2922
3DA8332273786A5E434C7ADE89FB62B6CA3190ACACDFF26DA91DCF033220D081
781FC63B6B1AB209C6D19E8D9451FC41261E2FD14D5DBB392E27090A53F2D481
49DCD7CF803CCFC1C9FE8A020C94FBC3BFFBC98B29E88BCACE0DDBDF87524AE7
70051C29469817102B54C543B580EBB08B9E4EDED6BA27845093F431708ECDD1
887D37E91FE8C13BCA99DA7ACA84D64CBE174658E5DA5699046DFB339097E9ED
2704F90E1432B6A5FFA45DB759E5166CDC53709A7A3664B507FE396A84F1ABEB
858C8144F48C0A0DAD2FD393924BE58E0D1104F1B092EC2C32DD068C65D8A4D3
56212175B63097B74D795C4E57483371F49C0FBBD6CCE315F26BB71626FA74DD
5EB3A60FAB4F76B85524A93F388B2FF7D147CB85CD06F1C72C5852CF179A7EF7
84CCF5E3F5A08254D35A59C8D74928A387AB3971AAB39A244DF05791316D0895
623C58369A348E56C625B16F0FEC0C9301160C3450D2ECB7A7016010B841D51D
E9F7BF50B24EAD0AA233D1287B6249775CF5952B7195C3B1D55E1FB5E89228F5
AE1F44580FD4C979795D1002D8C5AD6FABD25D6B8DCB78DA0F0329462D2EA094
4E29BD57DF6189BB377BCC13E228D5A13B69341FC021452229867A3575753F97
B97224DE4691DE6B18779CE65D47B5B24705006E4AF46A86697DF9687C04F512
371CD698EF22161763F81ACC28D1C27853A7F8E104CC29E7ED97087D1D273D77
66BBC8C50433BA44F4C8BDD4404C316F1D5A9293570B3DB7EE8B5C8D72D9A2CC
47212E09C6C0194CED520CEEDE93124D76E2C56A5BDEB80454E0AA51EBA6A975
1BE1BAD0FAFBA47766765A03A7FEAD03AB322E529502832B32A992D5D67BC816
B59E18688EC1993EB5473E8A35E2380DCFBD4FB1593C737A290008A59188094B
CB39AC52DF1D582BD04885A3C59412874B7EF9E865551D924717844823F926F7
D563C5A7CB7E1967C20968B55ED689AF39937DC3FA0C0BF03DF05580837E21C1
D4B85E277E65AE43EC5E9AA8D13F6A0D3E14DC14655BC700FD6A93B02555A408
C7D7516C35223D665EE53455E6A930E9F1E41527D8CBC4053A0D6983DF61299C
713D8B69988FDB59CAF3549744A8BBA08941DAEBBF6CA50060EEEBA7B497D96A
7F39CDC76E1CD92FE494406B1DC8147D5A1F38E9B2ABBF27CFDADFFB90F1C7A3
48F4B27D536516DDE4B17414E5D921DBD0CBDD37AC7C7FADCC056E26B6B38EE4
6EF64879545AA632E25A355292A8514105A82BE5813F10C4352598A19F291BB1
2DF28EDE8BEE3DF01BA5BBA953A38BA298E6E91234483786B8861527D7189B2F
C08B33D01A6703A4A2A19AF1E9B6966743F245F30F7C31FDB3292878BC8D4463
6945FBC21B72171FFD750A614538FD1B9E319525C9D65BFDC5580B5CC336B89B
FC22CCB0466C20E08146F763FB8054C56BF443AF2E0955E1D3C7D8BE7EA33B78
F5B24A447825DB4652FAB2A4721FC48A061DE62BA0614BA42BE9B86055B2CEC8
076C38E22B6FF638BAAB70A67A4AF19B0B22002836C851B42911E401E714D615
C31B6E5DA1D0DBCBBF5A76314BA7E7E3E48965F73DC35289DFAFA4EA4F1EBEC9
9C7D7B27A848E2EF78EB108EC1DFD860656E9B3C4D23FBADF96FBA9C5144CB0A
9E18BC8498014FC6AFA38D290BD895D7C4CD7A5D8173758D8D108245E87A6B6F
2B4D954D49853897BE8993E51AAEF40ECB8B276C83CF1842C759229AEF665831
E05DD2585C393A1F610942BCF41366FF91253EEF8F022A369209333085F97F29
E020634658F1BCAAAE410A04891540BFC0689BE4C0404C7D41C30290337F5A18
0E21B7AC271B1F39BB29576DAD8A569A91A783C32E2F69BFA80D111B50C2E3FE
73873CDAC47CD87F28F70FA44905B1E7DFD42DD94063F650588168B56093A078
16293BB4A1D1D9161155515F8ED936B8286C639DB8F26352A47FA3CBBF990CCF
13A29D99A0BBB45B91E0281877EAE85AF88A25436E6DC1E29EA4C25A320F6D5F
094FB2138CFBCD65C3A60AF54F2161FB55412466B5DAC0CB6531BBADEC5265C5
7EEA8B85A7B5262F0495159E134B43D6EA20653F0FB0B49BDC4C9C378B59EBB1
166D897F2C5079BDE80C750AB74943710AA9256A62D0A448017B5E06C9C1AA95
CBF7FA806CCC8C4C240F19497C6EF0DD1EABF77A8243C4FC18FDD72E209739E7
5B277CE99EE2A2E05AA9640CFDE3DBD334AFFC5B27F6B63C9822566FB6332BDC
7C7654BC8DA296E7E791B35DBBE4D4847FDA639870FE43ED7EEA7530C2189905
0238AD825540A3C4C00CA8B30B6A91566CE8CBCBD183518AE533383EEEFFC49E
79B9A8564CC8CBDEB31CD4C28023E441821A54B40C5D5DD1B0D3960585B3551B
FF2CCBD54700E347CC151483E96219563D8527D0DF94415C858AD2D79FD30ADC
267AD3256132D97843A414B97DFB190138C886EFD633BA3A5D79E01694AB936A
ACDD8D0EC1A2370A3867EC1FE98DBAB19560944C504F69838DE675FB78CB3B58
38465B49CB3F9B971D290AE7393CEF344AA18B469139275F20B6E5EE5A49F458
59227F7707C88E5161A8D6623330BB3E377AE33783D3AAACF394FB790B1167BA
6A92EE00DB7CA8634AD84C79748961B3ED8791CC739AA75BFD586A1B8AEF302A
061CD3430060732FC1C02B95CB2964AEF56461C507417B4C9C3D43CA5FC3CBD3
4F81FBAA509F994AE033012525BE2B07FB39D33C6650F387B2917859EA697D3F
C339FCFA64064C491C0BC95E5AA35F2E68BD11A81CC4451045E9461D5E569645
4C0A85D63D059BD0F40868CDC5073CAB28AC9D8B8FBD85FDE8BC73733E932199
33946F22F3A1F40EB0A3518A8A93E33FA5C9E637A49B40FAB22E22DF061803E7
DA13FEE0EFE020A732335969E0D9B347F643C4F3A680AB68A14B4BA4B6CD3F15
ABE21A448DE028980C872AB3A92D1EB1DB0A45F4ECE8EDF840960FF7A29B7FA5
165A81718A4F970B6E04FA6F501F14F8A8C96B58FA10857FDE02CB8A7AAF0550
A6FA0F86BA9E70752B0CAF3F4991305CDE9FF5CAB4917AFC1EFFC19B0BAF4F2B
BA75B8EC878B4702DF555C35259A461CC38DE3062F0EA92261764AEB1AFF6626
79D36B189BEC1A2854150296AC7AFAEFC580EAAA68C54FB6C1C6D8B34171C52B
DE7D6E5696A2FCFE04BFC9B7708B1F8B59A6A52B2C8985A5ECA4213ECF082E19
22B04332FE337077197F91B202D7A48BB4984434C72424F52F7FB99235F5DD50
EC19671B76FF542D6F8E9046D8A7B64A88D3D5207447895963BC6B4949E77424
E2D72C316D2EFED6B6EAA3F4964711ED5BF8BE928FF49E5CB65E8635CCED4006
2186164B0D5A53157A174793FADA4CCA5C1CD445255C785B3FABEC9A7001DC5B
508960084AB06C94C3F225F26F37FF94335286717D4F1C7F12FB73AE86DBD3D0
399B02C9CA3C4D60693C4A214253FBDF9A83EDF004914964A5A995060D69F3BE
C09D92223707443822FED59E81D606EDC4F03FDEE582F27C0586EE6183834BBE
A867041B806F37CEDFF5358956AC8DF74DC5CDED34FA257DFD80E34F33EAABCC
9C55EB021F25EB5F0150E9FCD042568A2D67BB9E6FC3239939543141B40C4762
E5B24EBDD930401EA552D9AB0A9E7A548AF809BAB6232E24B661E7BBB792A987
8DAB99BAC2AEDE4B0B9F7AC39B88CE28592181549387510A197F8188E5670D62
DBE51A4F596109D780AA799E61BD09E8A1420F5539374ACF2735515A979CA6D9
516B90A5DBAC290FB7D53BA667FE218B9FC196978CD3BDE8F619DEC7B2BA70ED
767A6B1A2836EC9C84F2D5DFC60CAF9CC315D2822DFBE2F5115FB9F72962070F
C7CE87BE36C2EA4FA65590961C8042DF5687A7572B4A3D395E9789332C94EA2F
E81AB310367D68A31F941B0BFC003174649AA4D0904DC7B2D92501D0380DE0BA
DF463FCD8A0E4802DD0F743D388A8820D204EC9BCAC84457C588605722F1EB31
EE4A92D323326DFE8A7D65E3E46995F777E0AE110458C5E47B7D5B8FEF10B477
B33B0B4F2D68BFF2F549B70ECA049D58F41C5402D3F7EEB822AAE63EDEBDA3C1
CA82056A3FBE34975B796BCFE6F61FE89323A41F10EE4B5CC49440A8A11CBCD2
EF825EF596EC6B8E7C400D76B5C06E40428BAD0326BC1E1EA0848913CB0BC700
65DA1E3FEC72DF9EAD1EFA9538B4FA85182B78717D1D6E016AA58CE2E9D7A0B3
0C0187767151A23B2D9120A9723B8A6F47410EC8EC5C6B3791878E94B4541620
736AE587F56C42B194E649644905D44C993DB4BC5CFF713369930F575FB33B3A
C91F8E453E99238396F253C227FBC65753695DA00DDE193F3AFB5D6EA5004567
0BE9585B311AED4211FF097A1BAFFCA3A3B53DAE20F67C602A4F1ACC3E357B69
21366F51F018E0E2AB7BD503330C41FD9953898F7FF3FE8B43C692B3DC2B654A
8F041A2BCA13896B3A1557B2877C0DD32B6346200AC4CD0E708E6959BE5E3514
A0189A850DD6979511D14CC31412CFBAC58A762884479BB8A2323F40B0CDA614
1BEA30055F83E9255343ED7F1D14370D58F0FC2BE64E8E91266D1A6CF6ADCD2B
A08902FC01E48B4E8D99D9621B0317925609416BBF024E775EC3D32120099299
5EC77DE884CD56F83A75FEA1F83F866A4CB7EFB75C7DFDEF3501623E1057FBE7
2FC057BF05164C2BDF9E55B7841CFFC98F2F0D59C28CD361B0CED606BD7D2047
49B5414AE5A3172BE58B73D0A35713FD5CBB4A6AA19A5FBB00F9253543605052
3D3D0E1B724E4AB89B4278ECE0ABB88552305C0010CC2526EFEE8CEE48EA8809
DEB2DC6E341769260440B39236B6FAAC99A56522E7E5B12D280C15ABE2C804FB
9334BB9404635A4FCCA6357277CD81DE6BD34ED6D0C29FD0E3C89A602DB2F686
012A0F3A33D0AC09335BD5A3E3BDECC57155560EF89EFC81C7D91DABA791CDD9
68981D855FF191702C6C266DF8E6E7413630012D3219A6BA9EA442A376E0C053
AC9E6A59CD78D2FA75CCB7006A6FB552219E303C7F1F99299C6107F992D53E4F
2C2BD61489F5290184C3B07466110F430CA0F1AF0921B4B7EBC202C20D49DA14
06EDF576AB29E336B36B9614D5D379816450622BCDD047DEE68A8813E5487141
C37A82C3A45C649F95F8F51E1F61F4457A8BDE464CC4CE8590081594CE171757
75977C83F887915F8461540E6AF1F323755AFE657600DEF754DBC1245399F48A
BBB5747D18BF2F71E3A65A6ADC8259C4FF83C662588F1247CF31ECE596313B8C
D3B8CF1BDE9F6D9941B6E836AE1BA1320054E1D7BBD14533DE8BF1E3FCC162B4
AE4E0355B96D785873488AE87A3714969FEE0DE7368EB75C670778C26C2035FE
E8A8E927A28583C9676EF9B5E3613D4B620899694707580C1471EB4C06F7E034
DD1C86EE8DD29BF1C08BB750804D1E52E3A3867B1D0B0DDFEF37CC6D71B1CC65
2DEA572F59EB4A0453DCD0F626E18DD18810A59BB0E7EB6BBA00AE33BC21E798
5A1B26219FB1FCF4C193D1C4C96FC066D4383ED34A34762ED3B0332D4BB2AFAA
DA90DB53B20EDC507EF09EC4520B9E21345A0BD1BD5A7F37ED8AD25F610082BB
3B9EFF4F0FFE490441FAC91A7A529B3480A57A5EEA7DBFA1905AD5AA12E98608
2102E20682B90A7CCDCB6B210FA42EF129C437559EE8FE03CFC14A35818F9A97
36F1715E228704EE78E50594198CABD4C3CBD07FFEF599B05B477A8E4A249239
44A0EE89AC1F9C920189B233BFEF187C93C443D9E99732FB26434CD0E16EFFE7
41F2B40D7E18A97402C090C54FA35A25FAA1299C897459F1B97E4AEF8CF69B94
08B0F2DEF12E61A25779D4F16B312E70D43AA97AA79D4C7CC6CEE3B7C0EE5DE4
49C3741A447B0603EF9EAA375C10252B7D2A4DF34E0C0226D627EDEFEF95E159
F3EB236332111E84A2D1C347A737CC1F3CD129077131183FAAB358F58CC04AF3
56EA5B2719DB1559AB62968474F9E7C8462F1282ADBEC96A8907CF161C0CEE83
B7D360052787860AAF79FA2F7AFC8A484B48EB7B77C58EFE3AC9679F9C2D7D24
B1096D01705FD0E9A59A8F12D9018E5DC5F1A325BBDFA3FA2DE8C3D0297EC52B
40B412889909644B832D52956B1D484206151CD8EEA4CC84B0A8CC4ACFDF49CA
859F04124B26D63A959941A0FEDBC9E87A067E9C057039E6BA8CEBB941436EC5
DC42A4822E4BA3B25D8148554E637F57BDB3004B19B21A4A758AAC203C6FB72A
5D2EDE64460DAE5FBEB6D28C943E9710231245863630F43CCD1FD5F567469218
3E3071A38D16F20791CB812779EDA25C5DBF33EB6D6959CEB9B81BA07B411E1B
832EDCB65B3DF2AA0B78FC0ECE81E15EFDF3F2CBD4B0F9DB241E7F028D5E45D0
01E9B77A9CD3B5B14A8E06D42C68E197838EA1F1852A430019E1FA0E85CDC910
7EC320BF8DB11F7B1DE37200573AB27266BF6669DD68440AA894BE4384020E97
B3DE675894FFF360F8661739682CD11FA3475AC10147141A19E1AD1ED3A6482E
5A494D44ECE2F95A71A0B2D0C8ADE91B18ADCDFACC0EB0C5E54CAE513D697C02
B79BBAA2C2A772F9F6A091EAAD32C4F4F4E1052C2B74ABDAE881B17F1B1BB51F
02E1454000F135F84CDD732B8191C7B9226BD48F256D50FE4FBE09DAD67B09BA
6818CE4BF37E121C51724F84D5125E40839585037EBE34A2F5289228D518E312
E3E46A10AE486433483AA2315799BCD2200BD730FEBCBB7653C0600C81642959
5B6164A82C29DA0E863EB5380702688AA2237F3A42818309981300ABC3921963
F28E83DB7A0D21B329320BA1A080B28FF00498F0085BFADFF91CC95698DC24E1
51E36AEE8A03E43398DA34AA31AD60F9A4A01D0ED6C647E0C7751846D809A0A9
E1CD747769F1ADE8045E32A2CDBD6ACEF4D5194FC6C90141B587C21D3B32E918
6F7D15272033A9137C362ADFFE82B01F883211F743974FDE980B70441DE7BFAE
0ABE84370390134265F477A1C3B66754D8EE2FEDF7EC5B97765668D4ABD432A7
E72EF767B02071946410A461FE158E6A28B569841EE3BA54542FDE695AEC3CD2
C7D285B3D69765822B2398DB6E1EB0DB09FCDCC6B8FE07D3FDD7FB84BF8B744C
426421703B3BF1D3C33CE0BE8941D5292B396A818944591E2A1DD89779BBA5F9
32799976E98563C642B94D393B66744646F4C91CA4CD6E307DA2E8FD30BBA6FD
9C78DBBFA8611F1AB022E4EDB266321300FAB70B38743CD7ED520406703B63CD
5D9B228C1B80125E94D99A17A90D3F4592C4DBA980465EC7F0D7E4BFD93369B1
05399DD0046F894BD589B0DD6B8BFF7C4C68471EDD4858325C6D6894930B3F71
56927B4D29663B86CD980560151916CDED0109A9A37FC90B890F7F5776102978
7234C690FA1DF6194148736D626B4EE3BB48117FAA53003ECE3C12B1F00EE5C8
E781B21ED536A22772EAAB7330CBB224145A2F23CABFB520536FFD4E89702B62
6C81FA4E487BE9286880A7A85F3D54A92F5BC4CF66920B3230EC45EC4952063A
514113F7AA5F3A078F249A7DE8A44F7B258AB280FBE8528BBA0F0B829337EEB2
3E611872BA1FFC084EDD3A07DE1AD9D807940F57E6BBB30C600C596F7636AC3B
6BA23FC81C381C2B1B86CE7EB69F035FC6A1DA58BE7F1D0FEF4C8DC61D27EC75
4045DE5E6F5CDF6DE43E196E8D698689880478AF55967768087F855EF0472489
3B12B1AAC02DA1602F9517A358F7B41BC6E2F41317B97A60C35E71AB46C376D7
3E3C1EBB11D7E4700B2EBA1D81774EDF168D3239C1EC138DB94AE2D03BA68531
9809BD921B52865C4E98FA34104311DB2DC69EF8A0F707D5662CE8BBFDC23905
B531C7A666FF2C600138B916B894191A043FB026CDC6AD81D8E454E97B5E7697
B32184BF14E939A304EE0D3B542E3EF3506B50D1CA43516FBB7766A2A46B3F94
3C05140072A97E2B6064CBAAA7F4CD6F116820D3BA2C0B2D594E60E4C482EB2E
73E08B8DBADDFF9534E6D463B9CD0E91D442E7ABE4B39D165A681C6F8CE44582
3AB25A7FB9A68F440B776DE8730FB6A99488CE80C7436C362FC51D56C9767C6C
B21E5EEE4CD322EDC89076B85B251F7A29091CDB7A306FCCEF73161AF815DCD2
6A51017C5A4C8E1A6C1BC59FEE10EE9D4B2FCAC70F771EDA2E22BB42EA2FF39F
C52A35A9DA8330C3B6CDE69187BBAF274E4449FFE8583666B1C1DE17D1D0A3C6
C58FFF35D98F7D33AC996F72668E4B4CC371EAAFC4711A6C08296A694826E044
C8FA682919E4A98F92BF99C0AEE088CB57C74373C96C90FC70E7D1E51B77D519
73AD024B0FC1B1A1A56A163A88892413637D4E90F9BD86A0FD764BC0F3D78A3C
49A9D74FE043490DF3278CE9FC0BCDE6531366E2AB9EF3AF0804D731001E5424
C6B76C8E1FD7BA39630D7134E81F80A73DEB4BC1A4C94A232D4381133A91AA93
2BB88A8C4A47A3F81C91BF67CBB384001B7C6084CBF97CBBFC7C709249F5CD21
E64F25D4D14F10F9B2BA13F242DCEA6840FD4FE285AF7B64D71F2310B7B2E529
8E3F8B1832471CB1033B60828E645A9EF48B175F1D6894B234261876040734BE
0662467B3DF9704A3DB4FC65192D690B62FED516650DF2AA087D5486ECDF1EDB
60A90070EBA555923D3F41737E5A52D72148901BF9A73E07B89FCCDD2177A594
68CA54E95E55D16D028A8109D04F9205F00F8FB931A50C270136A8F2D4C73144
27E682FDB3E8E1DD557C21F44C69774BC194766A618D8BE7CE473A452D493629
40DF4D963F1D968ECCBC3957D46CBC52B41A200F375DB920BA231FF0BBAFE678
029F2F3A495777E890B99E2AF28EFAE958C74B36CDE6577E596C7E5080EE7144
B9CE317E1574A7E2BB44EBA2998330B5DBFBF99184EB7FEC89288507D7F4CF50
38822D872B8F4AF6C65DC8E9BBDCE7A80D44DF887BC00C0416BFF5206D2FC5F9
9D99D9A472A2177BA4F1DBA506686502DBB035FAD5B417A68781B0A84FC506B0
375635EBA6B0DBFE0B00EC52E2DEDB69FAF9813831DA7965D3369976E2A33807
AE8A8B50608E7CA4A555427DA7C58D04E9740C222273D7A2402DB3D6A7DAEEC3
44E1D9723F7062F100E682B6030E40A595159C914B0A059E7F82CE6C2CAA5A1D
1307D5BF4E21CD9BDDB28BFAD82AE6BA7FDFD6DA49B779011717CDE8C193FD69
44D2B124A741B1449EFDAA1FB3FB3E767D3256639E57C2C1A2AA9EAFAEBF55C2
4FFAFECCB8B972EEB29649A38BF4A6576D6E00983227C2301A41E1F8057F14E9
0E377C81F8E5D8FAF895B0018CBA1EB97CC9A87B671E1DF170AE7D4CBD169AEB
123A353D3976C602F54585FDD4791377636664AC349EFA925C30682C43A0E702
8C67E9FD7398946EA7A7FB1047B96C012F8DF319299DB31F28866FF785B3770A
7F91388B03EA462352618E348485AC912730D99532D4D8500E369B8BA259705E
FD20612A4B12F2347C62ACB433A3FD98A81CD5686200DF8C90516ECFEB9C7BE9
3B02074E14E870B4BA416F599CBD7BF46BD1F0D5FFF4FB66BE1A04FE47F747A1
87E8F09FE6943685C90D9CE346A9F968996F0C7657E6DE61463BC9C67A96F586
EBBFD9291B237C4F6439B3C87FB47D9B5E74CA6674D8064805AE87DB19B48B25
856445FF6156CCA661B7FF09ABE127F158F873C6DC38E28851A10BE3894CCD3E
227C4C815A4D00078D96789C82C7D3352648C204550668B69A9CF789A2AC175B
1993A2963273F598871626D437EF62212E3B872266E336902488D7462570BD3C
8B86B3CB2E40CDA618BF2B911F5D14FF36B355546821E2D09A54E0B78655A630
DB3C40BB518D768B2F08BB946CDBC3D19DB40ED4FFA95F7AEE0FDC5C68957A64
F733F014CEAF08ABB94E5754663D975EA8A0BE0EF7F9C8735D06068FDADEBA36
F1A48F040190B8D05253B6756A5A4650BCAA60F0B38982D92290F9A45F371617
76843B465BF34F58BE985D32970D7F27820FEEFB0359D144225E59815784A461
60754F4E555940BE793F574B735C2EA4369D06E98609C1823653284C33E11170
1627F9BDE694609FCB0C46D0837FE7D7A062C78574435ADA7EF099BF82EA77DC
A9546DC2F2FC08D2EEBF587B63DBF332D3DF5AC00DEF2704FA99252D86148E4A
D4826BF89B17331AC8A2A1D9BD5726A5188E7191309B6A99F1E73EB21109C6E3
897BEADBDF1A5BB3948B88665833B20533BFC0D3D564A6F6101B8376E8767B88
B7339A3C189288937F03FFDC18311BAA2CE70226706C511A9A95E27FB51F8157
240F5963017DBA38C3F063BD9C17332D2023804509E72DE71B97B30D37286F3B
AA411621DB7162D804E6C25759481C54E4A9C82254A6E19BC8BE3F2AC0EC85FC
23A9E2D45A4824BAD062327B3086184216D9868C355FEB7D4589AB619547BCB6
CDFF39415A745E18EFCA756A12B6B74148AB61C640B7E7952DB6D045787A1517
631B359E26DA9459D81C91CD747F6F0B3D81870EBB8733A3DD64368AEDE1DB9B
830CD370814F317FB43FA21EE02C9A67E60C09B6D50CB7A764BC14BCE513BC2D
D88F5B4FB5180B3AF797AD6E4419FB6EC5B0762089AA9DEA87BDE048C4FE5458
267A414B9A3756E3C2EF0F22CD65ABFBB08A481356319A7D8CF4DB16353AA4A8
F87ED5A265C0BE9991BC1010087313EF370B852F7C62B9D39D8F76BB017275C7
56CEB7F46D753E17FED7C757E98174260311A55F6AD26B96265982317EE21CB4
C7B0E6D9A3CE24F4D7C8130C1C45A029B753187C0E707CFBC0D2020C6F030A6D
50E08DBDFA56E6A9890EC7851C7BB87442DFA5E1C719A15811CEB9863B6CB5F7
5F004243D49DE4E122EFC2481B44AF537F8CBD7FDE43CF4EDC986DC24BA41042
9FEA2014CB62B474379BF02F93BCEF64FED32980FF8A098BA059AFB91CFDFD20
0F272232A6E1C0458A939B06D588FBA34BD4DB121DEB374536779D900D6E181D
C28A0F2FECFFC92BB6C5BF47A665CCBFACA6831A46793CB0C7B9B9CCFF96BCC1
E192217C7C83248B2CA7F167F54C8C831DC47564DE6BB09DD86B9152F5DF9C93
FEF2D54C5D98ED985B7127D68668F8D89D01F3C93BF5D2536B80770DEFA2BB73
4E4B18A5F87AC00763ABDE2AE20F78D6F5084816FD9AEA061CB5321B72BB6C28
E2902382141F5502978F8E414AF144CF0CCFB6A0D5720F1ED2B43EF2F91C6BB6
1A2BE5D71CD20B852F02DCFDFF65F735D185F834C3B4915ABA92066454C9539F
A1941FE2967B259137A248D51B17E8449C78D724859D713B6C53102622CFFF3F
8D2037B8C856A3D10137D6B3E6318D7B712C060878B9EFCCBD76C4DD0A83E247
5131D3E0A1F5ADDF684FD1BAA99193EFD93E011F7782DFD561653EF2291D6C33
1FD2576FA17AC3F7496F450BC27D4D173A2CE61696585AB294C16144509429D7
0863B42DD3460265136FE433C8FF2DA22ABF0F4E277B6514492231B48F40958B
3A3FD77AD4F5DD8DCB1FABD0005DB6BDDE6F9E078D325DEF9CA0171D5275F3E0
D60E83DDFDE0DA0F8789E164EE579A6023F97CA390700B84C177AFDB5AE5545D
4BFF07D00C8C323CEC58B7C13CE862411FBD5ECF01A6A0EBA1DBAC906EB3A7FB
D16B270FF7CEB73E52AFFAC609217E2BEFAB3613BCA624A445C7A75206158D95
0F716B1752865C4E691A1E3306C90BD2CEAFAB7B00B4CADC46E6A63420891988
F8B1D3611D22E4B794E85AE5C9769713B99EC65399A62DE6B8B651B4540A6816
CF1243D48D06DA674B6D74550B89EB0AC9342EFC804365963B84FB50808E06CD
217D3D84480D695B7A17F6AA1A549C82B9B0C4519A1DDC3A21A79DC9245DDF62
95AAD120366F284DFB69E3E327AB8332AF3557A4166D9928BF5ECD01A9C2F90E
611E4783F01C8E81C06110B6051FFFF5A1DA487C2674936D146ECBA2E214C578
49E2711DB4828B1E88EAA4EF741350435D7CC4B611483C9B2C51A848699F480B
A5277245613C1C1B223B16607D29F7FB094C10F4B1F66C43B7BD733B6A78CEF5
BEF01AFB8434AF5C89C8ABD94A712BE10AD7094AA2BA9A8E37B463E600D856E3
7DFF1C0B746F78405E80BE5943D66F028841F537725F270A4E5702EF5A17C6C7
1008D99BEB13E15C76D131FD1D86F3A4C9ECB8052100C48D79B0E5AAC4204972
98347E1ADBCB9F91A631F15B55D79ACFBB221DBAEF5BCDEB6FAC7AAB6210829A
9CF24540CBBD5CB39DCFBDD66B1CB25AFF7C1FA56DDD48DEC240510C5B40E588
4E80D414F2B2A125DCD3995661545B668B2E3F302DE27A51CC543E91C277BFAC
CD92DFAE85A4AFA4D5D9022D52F889462492E771A3F0F4402C221D2E75A68489
D9D8F4EBE42EB789E7CAFFEEC48A978CB30D1BB235F3050146CB9CEE0F6234C9
E4A0FD1937194E60C355E4D114AA2A5600088157884B60C4E4419DBFAE27094F
916C23F2BE360614BE0B79434BAFA3AABAC7F786C9CCE50E1F7AA927D2D6F855
EB5697FE4A165AA7ED78650351BE3E01895B377C293B93230C99E287D84112AD
286FE609C1606DB3207E84F7EFDD89651B07694CF3B319B4AFA5D862599AD107
743720CA22408F8836F0CAB797B031459A58F8AFEA5EEA9B539BAFFBAFA977D6
1A9625A63A1869408BC07E2545AC66CDA2E0EC4C5757B0A7805FD8A80BCA14D7
8E15397BC4917FE5C0B4B4BD7152D02F70EAE4C33E285D608BB3F3867062FF30
44AF15BE62E8DCC7E0837F78B569A48A1DA359C5A1A89F7045324B4AEAFF46A4
B8CC75F633605B8FE3BA5E2D03E001257F3C2F9115ADBAB4EF0A5DC93A086738
09DF4C8D40B210165B9B1F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7D791F56
9F161154AC4C096401EE9F7F0F192F5B8110822472F72EEC18B97276352BC8C3
4D4DDFE0FA55B14AA60FB68801E4559AAD71CADAA56237EBE5F1F8AFD0F2BBF2
9772B12A48F2D3CB6B48586588E55782FDC89251A93DC8D1B81113133B3E4075
0A1642B4EAAE864F86EDEB9433DA442E99BCDC6412CF9601CEE2AC4A02DE644F
88D48865CC1AE5288E4D1CDE1ACD5B6CBDE5B04A98F3BA7157177519E7932250
875EE9343DF88C0BE388DDB0B4D022A957DEC048433162434928859915B81065
56BBB26737BF95BC525591EE1E2BEC38D49C763CAAB065AA0AEA3F9FA73FB6E8
C2918F8FDF2D5CFB09CCF4199C85DE6AA701599A2BDB1084F48A7FC1907F62D4
8BB9E14B5682629AE2EC3DF3B1427F61267830A69F919F54AE2F0713BE2F6278
B335A1F86FA54CA8DAF5B598839AD892076EC08131B56DEEFD8AB33F5610A29F
DC4FDBF52AF0DC1542753DA25C72FFF04D58A3049C44964F757F4470FA17E1DA
CAF674C7F4F153169C5F8F8CD37F1D30700D3FA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYBTIP-Medium
%!PS-AdobeFont-1.0: XYBTIP-Medium 001.389
%%Title: XYBTIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:32 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYBTIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYBTIP) readonly def
/FamilyName (XYBTIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /d40 put
dup 41 /d41 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C68B75B8C6A2
18BEDF073A57F5212819DB38E30D9BA47521ABEBEAF35446353D5BFBD13F0FF3
5104C7E7B27F68240654E12DB59447C153C755A51AC2D8A60523ACBB0BBACF9A
605174A4E65D6320DB4B0B413999F0F132D46F188C11F9F61722C49616A2AA90
84ED72650D8EE114E75CDF80D98B0F86081110D9220DCEECAAD9E18B33AFB8C0
C81E5B7BEFD8BD70FB1666E4B0E60D68C76ABB487E9DF06F8C0854B04230C3A1
871520619EF605B65CD8EBCD33ED99BFD9AE77A5EF384F862E7F74302C0CD0B5
3D0CD2785C3898A10E23575E442E7F4E27F18C2C3EF3335AFBDCECFC630C93D2
42DB0D82F5E710E8B72F7A2C7A334BC02F848C8C796EB9B19E98407FFEC9DB8E
546FF05F254C41D701ACCD0EF56387CED4F569385655BBDC7794C5C087B2B26A
FDB1B5E75BACF169128194A648C42049D69A59FEF5447DE9D8D4DBE27460F06E
683DBC80CE204B1AB46B9CABA4D166D9721ADCC309AA5997B95BB0BC623F91A3
15024E6F218991959D281E104E7C93298D654D337CCEE6F26760A0DE5B7481B7
0C1E686727C7EF358E139EF8E33EFD761BD63CE9A7EFC7947291853C3AD8B9DB
42F1E81C42B108CF2879B9C5A99C82169FCEC9797911D43EE78A66B7BBDED558
FF3381F35658D25C3FCB9C4FF8D41AA291064E9EFDD63F79701AD21387D8F889
AA4D4BE9A7B77CCEFC6B5B563D78A08C52BA94D852C2993D9235708FAFE02144
E77CDB6F08D2E3773FD8B7D529F4B45382F3E6E6B701E1BA31FBF29C71674E10
94242E4486024D3F85ED159ABD20D9DF06296084EEFD45273DC14FF5F14377D7
5506A96D881AD3F6D51DD868484A5DE3B0D8C18390B2A2FC7F7449D981043EB8
B55EE334C43027A8AC3EAA5726B0FB234781DB326584C51E5E3AE9A1DF6BEC85
466AF8AAB929A7554D771D2D92B36AF498B6D0BD6F199465A173C7F0DB56FE6A
F8C5DF8A6244DCBB6496212BD4C0294BBA16942F9D5F598B5AD716E3B9E7745C
F3F5F01494D717EE824CE3FD46AB43E35FFF68C27E20C25610360C1CA6AB24AD
D17A963D0278EC7E51870D1090116B37C45F00DD87E4A56EE82DD8CCEEDF0DE3
105ED2A606FA77359AFA5DF0E2B1DD12FE7662475162EF0CBA98BA6EBEEF914B
1C7710897F459BDFE6259E4A497AB6FA8478E495C205952EECDE4697540029CA
5308D9014B8CF86979EC9C7703AF7BB104AFC5DB9551EC1C516C075F31D85C1F
089E73BDF520C58EBA73B39F93AC3F4D13CC536DEF166A29520DC3B196FECF7D
23156C3A8BDB3E2C7FA42BE1981C8C68DE9927784DA15BACE213AD1B6436E9C6
9B59CC58C99C1D9C9F66F64BFDE21BF96E60E3775DD36F2D6B57786FD8FFD0CD
021405F96D07
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYATIP-Medium
%!PS-AdobeFont-1.0: XYATIP-Medium 001.389
%%Title: XYATIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:27 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYATIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYATIP) readonly def
/FamilyName (XYATIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /d40 put
dup 41 /d41 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C1848C9E83EB
8BC4A503624130F2632568342D516987E84088FEC7D823F0719B19EAC26EF619
6C4DEA4F593450E106FD3234BE1307FB0D93D305C419CAED51F295549FDBA441
5EA8D965CFF4CC48C0567333129B1781CDD7473FE9F231006E32433B94B6E4EE
7A6B010DE67402C3861DB9FFC57EFC00625BB337DCA4D54887DDC159E071059C
795D614DC19F65DAB6AA9F3C1649BD0AA3F1A941820229AED5887D23EFC80D9F
7CE6C0A60CB4E3B5DCFF3671C7722C2E115303C0B37028E584F11A091773C86F
DC03F457EC33A987A275963D9316AF4302101DC71ABC50904C23B5540F5EB3E4
4659FEBFDA7118DEA4F5653BBE4E09A43F8D6BB9AAB31D72EF202E1990E00763
63E5FC804136E6500EA8E454C1B45ABE01C39F83B614F3665FD18A53F2A8D88C
5DC2703EF4A5E6BD6CD87BA32F6ABCB96A75D769B74E0E0361FE54966AA0FA78
456937DFFFDA2ED807FF3CEEBA4D8635BC8BB3C9826C42D5A61AFB527E2346FB
9A0DEB66787284C96B6BD54110ABEDC6F5CB25496F2D7D7FF103602DBC2134A6
AD96357B2ED001DD02FB7DB2E80CDEC6F52F15548C2AB8430AC8907D7B3A9C9F
0B13907073BA09B096642F3E4CCC309B07D8EFE86A2949F304B999960E621450
C64D3DFBCFDE020F7511AD9145E0762B75EAE1ECC42E60CA8E05E9B0B9A98473
8B4877E4A4499426BED9C6B86120F28ABC64A2C0F0B9F8348946364AD469E75C
3923B20AA27F071081416DB3F0F9C09137FFB6617F2FC2BB60E3AB70FBF4B6FB
BD728B866307DCA478EC288F33E6EED97FF91EA2A00DA14002E454BEFE44D396
C0F4CACD46D0025426B350AAA724D57D88736C8B93AFA3239BF83BB80BF35407
B6A594E98D06E40C0B7EF9F8A95A8C13D17949A282C90493A69FBB40B4CEF030
5EFA16BC0E8F5800B7F2F0692ED60EA2C0A24E298D3781860A2C3AD3C2DC3EAB
7FFA01F3A7995A40FF22FA1E6C0056936D67A996E1620FB0A27F4A13E904BB56
66515BFD11CEA5B3E2DC6448BB2B35A0996DC74D710CC8EE32C5F48C355DC877
3090553D4DB7178B563B698848FF7639CD51D229B34714F749B285E09F2FBB5B
3CE1E9D6303F6BEF06DC043F296979885DFBC1AC4897D578C7ABDFECD157B89F
6E19D5DD21346891C9679B66786DA598038E8A75539EAEEAB5EE17E65BAF9750
0F0C0BBC4D829071F41B356CF7BEA94C459251B58881F742234F908440D93BFC
3E47C48B444E98BD4E1BA251B6BAF6204FDBF6E779EDAD03870FB4F811586032
E15CFC542E9C3C19BACC24ED56526DB95AFD6DE4575CDC133B9778DC408659C1
E092DF7B88415960
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 112 /radicalbig put
dup 113 /radicalBig put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 161 /parenleftbig put
dup 162 /parenrightbig put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
dup 181 /parenleftbigg put
dup 182 /parenrightbigg put
dup 189 /braceleftbigg put
dup 190 /bracerightbigg put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B286886CE534D6C5FD912099
3A92B663224BA680BB6D7ADA2F0D0A2E70E3B183C5952EFD288BB1F787B9E558
AAC41DEDA6E48A8951959336D5914E24F5CD5535C3E56A8EB5794980739133DF
DC62B7FCB563829ADE6CC1D269EB8BF7FB2277C78855BF64EC9BF694D1E7BA89
629CD8492171048BBC3627CC127B35D443B9E4987D71518DB6784756393CE1C1
B41B3B7C3CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E0D47F4F435F098D34
6360D280B813A8BEA26BEBE94936A45983041115DB80EE611AE48CE6F570493D
30555065F649FE81E6B3B1E8D0ECC21206BB80BCFF3FD6C2207B1A429577D5D9
D66A0F8268D4AAEB28AE27AC8CBABF042A6A15F0CB3762DD40053E9184BE0525
A583A918D339C1DFB90CED5EB0FC05B94A2511D90C2E6ADCEB16B34EE0E57E0C
D0B4B58826FFC9A9F913B55BE28FC0D53E3BF53C3E0DB82FB939FC108E176023
84952BE904C3104E28F1BC92975FD6E11FD00743FEDE965259A3EC5847D3E6BC
72CEB25F3D0BC0DB85EB2013C9C2682963466334F43E19D35D09615E22540705
8E642B3F3829CF75DF161C16CFEFB149CB67410C30C1F0203646F53CDDEC1DE5
2420B6D9F5E6FA1855513B7131C7A04B00038E4A5A5B78A7962FCC1435C2643A
529351200BF30403E054946ABE4EBCAE4B083210967C9F4EE52F4B02A5C1A72B
89E3A4939C152ACE83E912CB7AD280F09997BA0169E6CDA2C46A1574A39B61A5
EBD0D519ADA5800005616C82DF89CFD601A78D58CF2BFBC4B1D57993B062E922
30E836BCE0075438EB5C1DC0E7194022C27F7FC4E23576F354A66710A4674F99
EDFA00C510884E0CA14DA5BD9E017D60FC01124BABE23FF62E75FCA39CB4B127
A1AA28CEDF94849373C0028330F91062E5CA71E803F077572234B5E42D053482
045F9AF9790A718974079E36D67129C17A6FCC288B9CB288231E10BDA8AC0BAF
795333376EB4C186DD1A8504330449B18F8D429B95D709D9A2531462945084D8
BF715E80C7F3215AF7DB5BBD83B5342D6226AFC6BA27D325DF0F6E326CB050D5
8F8A7F8780AF8CC5CAA2870BA9C8FBB4DFAC1E5D9A3FABC113E84E6AF98F2181
34496CA419FA91186F15358CA6C8C48F7238152D8E65C278CB5D598E827C70EE
AE32FDF008D5BBB3BBC356931D45C34C4E0A6D5C41063BC6AFF8D52422BEAABF
0D8B3545CF7B15D967021693D0C6EB456BDE47D6F9DAD18BE663D23DC9313A5E
09A7E5587037719EAEA1438E1BE86C1ED63D988D09C35E695D0B6657BB1E3797
C15A9DA853D611AE282C0A756894556D001AD471573DAF8201761FD52A98D0BF
155D4F2FF9BC51A6F393541D44C7F8E917E1915E2D67121EF34D7FCBC31E0D93
F679870FA8BFCECE74B60626C61C85E2F6C60D434FD6AC1C0496F5F8D7576679
DB9E3B2CF252D3F7420E40252DCD31D5342A6F6533B7F3F3B9E91B774215D544
E7E5DE48E5EFCA7E3CFD981872C8CF807C672FD9BDB371D76568D8213CCA102B
5A84A14C5391A9C94C736DAF28B46716F95A1798412B9F51FF77FE94967F7DC5
90CEB1289896D802CB6D57CE13AD89527FF07EC9E84E4F4787ADA238ACBE278B
B53B7643F42CC4D40987A719378E012CE17AD422F6874DF3D40314EA9BFB743A
BA0F28F397D5D9A04E4495538DA2C76FE435A280FF3659F2A19FABE3EEBF1183
68FD2C19A810166A13D9FEA4299DFE10FADA156699F61518CA1D703E4A69422A
BF748D2F81F279035242AE35029BCA7EEBEFA38C858E8F2F4A395319B66DD23B
7C77786E3AAF26F37F4F3185342A879C079C10ABD9313DEA61711D17EECBD35A
B8C14F815AB939E417B48A1AA5E6673F717C4755B5BE371C85D3B03EB5570648
F3FEF44222E78998196C977202A85EEA335C89F8903413BFD30FE155D5DEB099
3725FD7BF0818EB11C4125283B997AAE8256B68F94C0742A9A4E333982CE63EA
4669E939C3F50169135A65F3DD0D7CB99E21127AAA48318E6C1EC45E9A91D5D2
53BB7389014A83C913DEE64595272301D34C53B023498A0DDBA9371E59D63181
AB415C98EF5F8B17EF798A3554FEF5729527C95EDA421358433FDF91B5C94529
82ED9817DCB56F469584686C4F5244E081D62716E3AA65F891D36631B2D584BE
4D738608406D36B2B40B652064CEA40B676AA6056AA7921AC5AE7CF60AD952A7
E75670C1EC711DACE84982C8C0941C832D5329306C09CD5BE7C259DB0D7FC6B9
CE006899398BAE9502C95E3049EC543EC36ED44880050450686EC6947E49E567
3E4FF5656D1501DC99FE78F8473ECA390EF9AF6ED5B236212A83E8218A62DC69
2F101F3740454086997423C2DAB6F17A9B47EC0C7BB153F51F97848764606223
7453088CA17DD3333DBEBAFBF354904E28E009E5DDAE57F3DE0DFDD1B149B469
D0F23295814142E8CB8AF7B9E8D4A5E69B6CEE97607223D1909BC3583EC50130
8DF32201461C84734D8A7E3B537E80154BB66A7D1CB9B8C1B3C37A265AC470A3
2768E8945F42ECF3393258B77B39EF6EC088AE41CDBAE8F37E83DA9C0345D688
9F06726DC01B3991EB3E2B7174E96CA461B9023FF12853760093283D43360E17
0FA7210968712FFD3218B903E3FBD7E908FDC48E445DFAD50510CAAF79AC790F
0C6300BF6A65F9B939F31E08C369D739BBF67CD262B4DD98AB2B9382EE5B823F
CAAA83B4595F262624EC69BFDB12DFECF237F70778D1D43BE1FDFA7269199761
B32561F5A558A6A2330DE1843D748586C9C0F0391BB10399948BBFBBA3988BBE
8B11EA1188E152BC7CA22AE22841FEFE6A4CCBC31168C2865C1A72E6DAC3A271
517C15B36C14EC934679BEAAD22FBB9E21BC24EE84B503270B5F4B88EA120BFB
91D2BFE44AAF523EFF96A3363FB174FB1241230F01A88BCA3FA4A373DFEF5CCA
8A1F509AD9C57F179EDE75E1FD2398D976F39E699FC68AB2C3B4B509EF57ECDC
0EFE7A50D307998B6F1F3218EE65FE837473C3433458D08F854E68505996C4C0
EC15C81DE08D0C8214D6AEB542FE9244A9456DFD4474A7DA0E15CA8ABD3AF151
E82DC303679502D58E6968C44A6793E7578A25352AD08CF9F5FC0BEADF0E2F5A
DB3DC350B610E2F9BB39BB3F2E29C228F23C980562CA3721E6AE493AF931B4A0
F1008F9DA9748CAE359A4186370416BC9398397C035486F2214120F749303F56
F1A4AACA7FB42A898F0DBA851A83E14254D436A3F45B410841B52FBE21E5A9DC
6C5BCE11B4FEEBD3FEC788A2BB8923AC5439E5417F260998ED9B34D195D57FE2
2EAC2B467B076E61DE7EB7B84B15725F2FFAC4C2B7327EEB1B6AD47A825E5493
1B07F96D6E734C490F7D9106D9BDD82E5659E7121E3C28B5E7D527355042D5AF
076056C1CEF56D7391BD2CD37959D569C9130DFB4691D764C943441F311E4356
5FEC2BF70BDAF0342C632C7198E732F82410E9D08833B87374668E2B83F6F3AD
CF280CE4C1E96F7EF20A4CCA350103FC5D79C6E1F609ADD0B6AB2344F3946923
9F27DF14A2232BE0539A12211FF0E987A9E9DB0E3C19C8BBB1FB1FA225FFA24C
7E7D94B5ACF08E3C7FFE432AC5C7D30701B89701C8F1C1D0254310291C13396C
CC04EDBA6702E365A16D5E011B87AD85E343E162FD88199587E447F218E06067
4397DC28A6A9D9C3A07CF9B84B529526F102D9F6B65ECEE806451E065CB4C8F7
76DF6114010B52DDD5BC7B7DD0D2E24046D52A6218B1A46B591269B15AF3CB3C
F0073EF651F177085499337A67E454EDC7591997E4316396BF90544B54486D1B
39F8632B374B087814BA067420EF5A405FBE12E930B4BDC91AB5BC0095E98988
CACEE94C385A909DDAB8D68F9D419F902868C3BC2EE2C951BFCB9ECCE19F5C9A
F1FE1E0A75FAE50206951DC64E23D429B9CECB290DF17D3921EDA16223955BF3
02D0114B210FE6191F3B26C34C75F01CD4A66E72D3C9AD933EB98B9ED43294D0
927775D0811C7D132BB2DE647822B7D9BD943F8E36E8D35A00BA86D5AE77578A
E1E507967DF807EF0CEA3796F604FACA570DB575E68C4DBF541EB16F38FAE12D
D5083EFC729CDACE1469856ACF29A871A1CC2E37F604BCE686A87A07B458C37B
206C872222C3C5FF6EB74EFE55346C11438F90B53D8A3546C0762BDFEAE79741
23EAF59627465D200E433549A4AA4519390F32F5829702B9AA9C852AD0769A42
C10D0260FEB4E5D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters
%!PS-AdobeFont-1.0: Fourier-Math-Letters 001.004
%%CreationDate: Sat Oct 30 17:27:29 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 162 /Delta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -247 972 755} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
72A7B8AEA5D41576411085046EB76258673C5CF40021E812997FA677D59CE155
7C55D36F8B6501F00808AEE2A8934EF6E7DF27A6D20490B6AD5EE97365B26935
6D798248ACD56BE774DE447B7979B08E595DB252D6EAC137A081AB9E002A195F
08D19ABEE28C95E9EB56094AACD6A73761A3E376674258165DCB3565F51AAE71
E9E3BEA4BB485DF2A75CD2A4335B926A3CFA77EC6765989F03A680DA1A20D708
470FD9A1DB35B2C937E5FD9AA6266283CD76E05138D55F0932678F1088EF5E7D
EFA66BBBECD836DE750970D76D32957258C0B88132232100F446B1885E4E29EA
B8959844D652017B77C98E7ED6D7FC65E1A01EB35DC733347DA3B63F9ACE67A6
975D81865DC92F610E531602C57AF9FCAB91E2EB7A5A39DD2EF594A1E2E5570B
896D14CC26EB1A42F74F76F2231DD03A6824AA2D1005943DDAF2910597A36559
E4BD2F9380A95F7FE63996A81EBBD94329601C7B1DC913319E879728A46CC916
CCC5A010A86E5C572AB48BC20494C889CCAA475A1782731922CAB36A7EE9AFD9
7CEA3215DD9F8FC10F8D4C3F94311A56C45FFD85FB0A91F315F33490242094D2
1996C1071EAEBA4792B29201666254BF49CB393ED233BC236B6BD7617A918696
D74A776613FB94DBD590A7893CA7FE1606C576DEB3E4D7DF25A7A5FE84A8DFD0
9BF199780DBAA1832D07BFBACCB7B8E9DDA897665613728537094E1E8933F961
EBB5ED1BFA4EE2856B8982377719ECF1D7B187015A90CA694AE0ECB4E32BB9E6
AB395207397C971034AD10D252B419D2C1D8841ED02492B3F2A9D73EFF9C12AE
9F92D8858A5ACAB071F8E0ADBE0794A62FB244F098A3940C82C391F0326B9F50
39B18EBFD2C105167F452AF2841C1AA728F941530ECE5D9C861EC8569D27AEC9
D0C19F35A3BDA17F09D2293012310B114FF0BD4D1B99A685BA61CD6E4D63D45B
C47199D41B4DE8F7C00C0F17D72EF41B22A92D559DF471E29954893E6FFE85B2
98AC23152C26ED5EDD43DAC6F23F9D3D0E28D770CA6093A1AEB5365720153023
8DBF05303D4B957B2DA2159F8EC25CB9E26D04C079FFEFD11379918708B95247
E9E48D274C2C4566841020BB7935F900E86709518E7A133B75F878084B0AA054
D2A472488B698A5701C5C909102CBA7CD5812333B254F9648A0F4C33016DAE9F
BC9D19EC7A14960514496FDE776F1A4C73BAC8A050A858127B9B71DCCAEE03E0
BB66A003687A85186CA83B34625B87D53E08A6417BFDDA19AAF3806BDC0272BD
188187ED61E72D8DEC992FA4596F4201DF5D1B5462A22CA111C970E138EF3F13
A7B70573C4356BBF79D344223C3C5FFCC2BFFEA3E1E78D794FD29324B3239D9C
6B11B2EF293012F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 55 /mapstochar put
dup 59 /emptysetstress put
dup 106 /bar put
dup 112 /radicallow put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 164 /asteriskmath put
dup 165 /divide put
dup 169 /circleplus put
dup 170 /circleminus put
dup 177 /openbullet put
dup 184 /greaterequal put
dup 188 /approxequal put
dup 197 /plus put
dup 198 /equal put
dup 199 /less put
dup 200 /greater put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735F731DA07EF3D6E818628
AF05166460DA5B83052A083336C23DE3F4916E3E60E10509910166E063832CE3
29E5DF2FDFD0AA1DC9F1C99A95FC477BF7F113B2CF4626600B1B5DFF712EB302
AFCB86EEF4DD29EA456833CF29BC0C5CC42C0BB09735A0A83143A0560B03DF25
B27B0B383BD641B85E8F6790F6ACFA6A03C77D60425F8B515C48893EE05FFD60
CB40D1B9185FCF7D27FAE0616B15007FBA17D23DBE9347515CC3A932A96246E1
85C477A9D6665D4F5D8F374CF4C0F4CDE76C57C8F7BD4A66071AF94604FBA047
80C65D0357949E03600E099BFE0ECAEBC6E6A636BCFEFC0A9035532476354B49
DFC61218068C10E8103BFF464394C6A73A86807D46452EFE438C9A865EBF150F
0888ACF665CB431C515263BAB9D694CB93976111B0D27E0EFF6A5ADBE9C5323D
D5EE2E6BF02F4AC5890CB026ACED69003B2DF775A44AE938453803D47CA794EE
6073D5BDBD7A683AC5FC7332EB1C2DD92424C85D970A0154972F2BC41347E384
8ECACB14CF67474612ED7DC8DDDAF68898412AB825F4FA57F661F2B7CA2D4F2A
0AC32B1CED9A23550485330CFAE64F1A3FD3B928118A3456631FFCAC190387BA
8330B78D94B1AD026C0432FB5FC2EE0F665D5224CBB7AC192452CE31B629D95B
5727761C4A425F25E2E6C94AA168FD07A630254A42B2280BF4095AC78A2CC138
3CC6A5275CCCAF518A3EBC6DC6EF1E706E5F41B9F90FBBBBE105EE007DC1FF51
F1596AF00C3E8F17C0CC41B48C380BE627E9951F6164539FCEB0EAAD697B5F3E
D268B7E3F7494881C758BFBA1DB8D8C53761102BF5BC388660BD3B717FCAA7F7
122965693960E9D78EE9D2E1B221F3C8D5685975312E19037B35A0E41E682A8C
A9158ED7045B1D103BCAD83969EB1F95550BDF0454C8846DE050048CC878388C
83D2ABEB08CF60B632A9F8B7C29498448AD97F65BC47189AB0A750B1CD8B6EC8
EA2E46820112A8807C543B844C8652A8DE2E2ED00D990EE6E18B6A3F2479317B
C09BD661DEFBB83C50259BB8117B2B44A318FC5C380FEBCACE5410131C948752
D36A6B1860DE5B4ABCA3569A0C445CD99ED035CAA4315C2FC80A57DA31EBAEB3
AAF11AE2F31F84C5F6745F35D577837AF41FB51504258052EAA89E2B44647A80
A404CF69FCB88DAED0A3B04720B5655DCB5FF41BF8067D09FC6E9B8705D40FAF
23EEA7D9E249AA2114B511D73687F1B834C2672DF3E9AC89360A792064BA977E
B5CAB7B9183121E2E49B1A3DE6523FAFC8512EF03773CFC801136FEFB7876287
C87AB2177E83B4D61CA94DE4798BE54C167387E654DD5E23AE031EFA5A7F352B
26079D712925A32159835CC7A0DFBDFA13F365DCD5CABB1E2FB40827AD3A3D5E
C40B69E380478C3E0B32E699A3A5226D2F5B0BE0F745BBD89914E13604394837
8E1C72C64227B61E53BE5AA2DB6C42ED404AAEE07F73CF47BD19978AB36890DA
F03E3A499CB5697FB3F0C0970A157F14A53F13D4E10EC9D702FA1183B1E50B43
0F8501D263F9ECBA6AEF1D71A004D51581F5C4525827174819FBACDE4F34979B
EC21FD91C381F4F165FDCAF9136B3D6D9C953CB7AE85CA7994EF77FD9D22F77A
6FDEF6AD25448731FF10C550B8CE007D2389626E79DA9F4B2FB67CA22E85222D
613D6A4137697C094C9A4208AE2C3E7A562EB9AA607581C9B00898867F1E932D
1E1DD5387F8BE7FAC53D8F9C746721BE410F6E7C6B22423746E69726304A42C5
665AA3C4B8D61040E94F31CA0DE820A166634D8896EE4B1E4EADCB0254F88A29
6022D1B46A2FAC766F87DE1AC67A152F1621C456D11255BD4E70E9E90CF03557
9CC1D97BAB89A14DC6D2F0D63F2C06743A35A9A1D3E2B8BB3E3C8AF085A509FE
2C8AE9395888C0515803E6CC786BA5F6FE7FBBC73F023708EBE76FB0771D7747
0A839D6C3EA0A8960A38E117F4EFB0406A4EDF36CAD2FBAD9E9D4FBA001EF2B0
FA1F7F24B1065B9555F4D928F651C6139D3595E273FD3B86AAA728A7F6A87D11
52854583BDB4F28B046CE0FC49BC6F829AB9A9F80F6FBDE8C7F8905687124006
B211B286C8206A158D2D748116841F8C1150924D07E92101977DF0BC408E13FA
184317D4891AF405F95330EA7CD103CE2A22602DAE98D516BA8D08438467C404
41A8DF818E2FA6B6916A11994E97A0E598AFF713900105539526578755B3EF0F
CE8AE7B870B7B6A69DBB02330499EBADE009FFC1C51864C3E12E57C1A07CE6C3
45CC8A054EDDCFA86EC39D0C8CAD6546C04404371D0EDA9E900010080C236F5A
EF38043423338CAE622522C1DAD5EE9525D04CE20BBE662D39533AC484613E93
6A09AB80EDAEFF3D698504CD0BB82A5F66194B4D43304DAF4D577FD7FFF7D14F
9FE14D547575BA5E9F54181BFC66D1691365D1633695D9F793B3DD7415498D03
092005A35810A5557E1D1B3561598FD0F15829F1FEE18171FE64B351F1033FD6
DD052BCD233F551E54E90EF75C36B7CC94D20D0BA2B9683BA0C83B3B51B45D2A
F5B1A5B36BC54A3033C37312152881B0E59658120AC2BCEF10B953DFC74DD44A
256453A86019EC68F6A0F8B2B9C02C362DE9C594B4C23773E7D179855862CE33
B4D4F02166DB1FE7D7E95F2F8A3CC24609F1B7E8E497742E8E9D371232F9B256
CFD4A40895A76D946E284659876CD23DEE299917AB8BD727F6865B3C77CC839E
DB583B3EB2DDE9E4CB6E3E6D838E6A4E38D2AE88B875239E25F33CA01F54454C
A73A2E49AF4B00534ECCDE1F19B0B1AFE6810FF42DCC2733F9C5E52B85BB1A2F
03084DE7DF797F7AE1BA5F54F27CDCF0F5D5CE80C152F56ED94FC294ACB26791
D4D5045BC1EAAC2B2AF44CE2869A94AF690817F990DAA595BD018B605A5522BB
CA218F98A1816DDEBD0C91DB84C7E3FEFD0E80CCC27839758E520EDE37F604A5
CFFE418C8487F6324671205E94F0B0309C4157C943CDCB7A1416DB3AD8860159
356D2B1D15B05874320E6F683FCC799B6984C1CCBA391A1AAC5D930585D7753D
EECFD482B77E04D05307C1B5E48B2E16CD82929FA2FA3C0D1D15BB620E3A87A5
7EEE249260C9DCD30EE61AFB5CFD16CC39ACCC955FF705AEEAF72DE8363224F8
BB84708A049AA2AC5D25C9E3D6B91069A95865ECB7CC0B352A8FF6E6A169B4F1
1A9F9664ACAA61B48E04988104D0A012F6C5C3F61FADF3B237602D817B9BADD5
C676E2FC07AC1CECD6F58E18CC4A355D390E08C6AD7F035B56808B3120D6B56F
4B7BA0D785F4FC2AA8991277C37F27DF5C720BD25F0D054BC9C5570F35A036E2
3B8BA5933E3156F8874F3398FC93B6354C523FF2C2BA2A50A3B5D64BF4767918
DE3AC42AAB4C2AA1FE55F90C4B9F84EC85FE99BBE90A317E442D99FCD4615475
0E73223355BFFE2EE1B2B9A20520FA0A3D151C044472A6F7673509A39BDB1D0F
0A8282F6C2E6A40F7E993F94FE4A6EF17B3BE148BB41E07B3EB0F7BEC16E86E9
700B916F5CC7ECA85D12A3CC14620EA2CF9F7464559F9449C85DCDA088CB0CFC
73028507416897FF43DDA2256588B7E6BD121BCC721E7B2958BB08E846096C75
3F1EE55C8F91C4271922EBF4A7631A204D3F15E81E8F8A7E63BBB784A85C35FC
21B17C6588D9B813AF6A739916EEB63E6A993FF5A83CB7AE8F8925A855938D3E
2333685334481E157BA01D2AE52DF347DEAA6CD05A8B0967D93DAB1CB917D995
3B69177C3F5D3E08ADB8ECDE0F42E97FC4BF6F1BB413E618657789B6F55967DE
4C68AE87473B01BFF327D35776EE260B9DE49E057CB297470E28EB91A479B09C
D75C902B1EA3EFAED2D44556E66DD858DABA0497ED9B5F9B6FCD551407FE76B5
7FF0369949E8A996571FC8EE994AB739CD5F818348C088C3D4A5F3F0F574CF85
5352BDBD54D99D2A5B409E83500672A127E9A50B9428580530A1024E6524DB51
A7999CB58A89C923FC7B596CB36A2CD919612C1194CAE00FAB75C4F2950EA825
6B48094172FD6C315623786EDEAF0C559369CFE9E54D4A49DA6312D56856B896
955F131D2B65E9D99ABCE1749507E1BE86CF63CC72E11CD4F4E1E2CC55008D23
63054AEBB143F0E5533AA51E45D07574F487449403E43C482E9BA1F5FAFD24DD
1ECDD2851939B2A08B32F892EC18AF3CEC2FD4039C1B5790F0DB34731CAAE81E
0B70C556B292B38277F52F29D7B9266FB9E32729ED55B7A4F47406DD35239E65
A85C5F025AB496D9110067B3077A47F711510CB9E7D6E7C39672220A56A92EDB
BF0A8BE923C4A9D7B443988C3B5EF13FD21864EF9B3F4C2C4C17CB90E5F15314
391067EE45F594C82370F9A81AAE7B1A3849ECA8270F9B5B65A386759751F39F
80BCE470E4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: FontAwesome5Free-Solid
%!PS-AdobeFont-1.0: FontAwesome5Free-Solid 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Solid def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Solid) readonly def
/FamilyName (Font Awesome 5 Free Solid) readonly def
/Weight (Solid) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -127 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC24EA5C6A66D5FB86DEA0D82
A1117C000C5353B2F32B7DF144A69030C8EE0F6971BA336C4C33911E390912FE
FBA5EB88AA67FBD2C8AF8DA2B0A0CCA150F57B850632A58E909DF61D04D76B71
0786C246898D6969AF821D21463B5D770D11D97904922845C026679D889AF774
20B847060B20FA78E265C44C994B20AA9A4749F76E07EFD1CF7C2AB3A433EE2D
A07495342763E2716751093DDA622377EB0C70DF28FCF95DABFAB8884E12E40C
1235BEB723F81A20EAE69E8CE0BE778A97C9D5C1AF3170E6855510853C8C4FCF
CF0D2CE4C6C0710B9584B928C9AC5C465C74B9178A153A434B3F87F01214A69D
4429BFFD0A8DA733179F25B6C15391579ECF0E8725DCF53BCAB814DD38EC0F29
8C225618FA305C623812A1D694E883AF184A0ECF699C9308B3F28A3723530EBB
FAA9CD28A1829FEA371AEA5F8B54D11BF76E15C00CA32DF229892701A4475A6A
734F01EA4438C7E68F17ED1D48D80DA35279189F2FB603FE8F79BC05000007A7
084F12572B7EA09BEBF580B44E76F45650E9E93430AB22AD4292B47B5FB861B8
C20EA254C175EFF7C7CE33228E608FEEE1D9CF299CBA5F727FB11FCD01180520
E9C7510457A9256815BE73930FA7186312B1F1ACF157C44C9BEAE51EBB523877
0086CECA8C6FCFEAE9C0F8156A3FE9B991EDC0CB72C5852F7169A8B98FB8F29B
5A58DBBC136A1E8D1B1A79929E88BCD3886D355A191967C791EADB7A9700D0EF
F276C337E561338D7D02F664A69A127D56BDD67D63C1DF32A80D732FE753B297
08EDF2A1CC7E4617933B49C02A92BD986BB13E68435FB97E81DB37BF578B3AF8
2417947930EEB8A75189696D79615D68BC4BA9238AB9428860AD23E7D8219844
0C741FB72F30CF733FA111B43F33E1D26F464F5999FEBC0888B5E4D8B0E07567
9D90551CDBEB05F9A30F43F45B5210A3007E4D03DD5E05805D3AE898FD752841
54198CDB67A5AABDF7C9F2BE384A98DD9AFFF4E8CCC98FCF480830FA681BF215
3CB11265AB89ADCF53BE360B58DC3621D580F2C7227882B61D155B79B2B43266
4329231C7269A3F30930859BF0A4D5D2CEBA01BB4059A587C6C785E009F19C15
CA40C512E9F5030743BEDD5606CB1C540D829DAF394E13CD4A008EE7F9F1CFFA
95B5C8109B0A8685FDF03A978954D1325F66AF1265829E29C353B84A33388574
B4F73E25F490B88AC3AB2F544988D5CD8459AF56C77885DB50B673602CA70AED
778E4E15F24CEE13A730F1E29D1ED0B74B2F8486AF729E2F0490DD6E2F55F3A7
B4ED7133B02DE4581066B984FE6EDF491454E6CCE895A8A75E0F8E0AF33A7359
E5EB03B1EC74E1885C81F49D2E77939ABD2C66725FA5415CD9265AACA265041C
E228BAB08EDACF4E0AB86D340F5C6FADC65653CBBB25190AB307D29C6FD44AD7
341A399CEBC01967EA5C42552AD19A3DD1DD1BAFCFCA4777528AF5E958E68450
4F95880E2E5594A3FB0D0624D7AFF119981EECFEECA15866AF76B47D283F238B
9D4E9AE5F8549417968001184CE886C1D6AA8396C25E0840EA447F0C2586B021
81A4ED566DE0666A9AB45924378D008A62C2E63BF5394EC9B051E293C9224645
DE121EBBF97E9E1BD85868308FC8186F9BEDDC40357AE239B4F02F00158B87DB
8F9947BDF037FE0532D15D61B38C2EA75CBE50D3330B105E913A071443887BCD
CD7448FB9E03CBA4D711EC4C4CEA1E80D648BA01D3BB41BE8BC9482B0C2A4653
748459A474EE5871E4182A2C14E0D2049F6BCA02129D8B1EA98379E7E8BAF0DB
C2115FC8DE189423A6CF96F3B624FD11C23CA4DAF3293F3FC3B9419FDD02BFE2
01E26AD64F64C6845E0CE09E122DF40D6908B9B6F873A6B8359FD44A37AD1EAC
E2F4E3DC35B12328553CD5FDB59309C317BF49D9A819AD1ACA97D248D8E02DBE
D74AF4F10C41DFE0D90932FADC7ED477550A79F5303533BAC12475EF8D0D1AC2
13E5D5A8A57901118F637BCCBD9AF21516578DCFBF8165AC8C9AA3A601A52A91
EA1B72EF8D4858694D1A5C7C04D68947034889EBB9BC0F6F720F1EAE6D8A8ABE
296B0861C666C1369BDC7BBA46457D3A99A66D975E7F5D1C6DD77CF0A057BF12
7F001A096FC339820E946F636CA2F5D39E4EAC88B2148C5219B1616C53425AF1
1E4A708EC4C3A7928EAB51AF51978FAFFFB2FCCBB6ECBFF8252554B3FDEE05DF
74CA5CFD7B1FB53CFE9E0DCDDCEB8C07F41D8185B10E4287CDBEC9521030B0A7
E706F1865B67C03D749F36AE2F831F159E38017AE2A5D914C676AD9942323C37
95B25E6B0144E78BA5B588222CFF13A2EA3BED7266F79A1074E5DCDBD3BD0AF0
9E1C44241438B8F9FEF51A803D8B74307A3ABC05066687C6800FA1DF62767E92
83811DD10C7A8F6ABFEA1995C317DE4196273C3392DBD9D660030FEECBA7702C
F79AE7F1045B750E199689646466844787CE5559A86835FA39CAD7468662E6FC
B83F6AF669B77400B0511D4510ECD44638EF26170432230E05C2C3DBA6F004F5
F628A1EB008CCAAF16C1B7B759F2A1D0269E4365D98318B0590C62BC52EF9840
999A057D495B8E319EE95C7BD3610F8627E11056A3771AA7458DFDC0443B9054
FE4029D89CE1B04B586869A9C6122D3921EF880C85269AB7635AEC1B6ED1AB71
EC2D8EEFE718975C8F5AD9D1310F764975FD37AB2C30068F8A47BF90C52CB9E3
5496507D403C747874F039959F2B78994EE9090692D1A94BEF2699D17D1F332F
3E93B264B70F73A7340CA8D266EE7799C16443AC8BD2A467493362041E0E3533
26D45985A13FF7B254242BC110A7BC98A9C4645A1BC4EDD802F0639789249100
CE1C557C43EDE5F78AD7D2E36F1107FD8520E12376757500671332190D93976C
C114BCBB0F6B6CD17EC199F588E24327FAF21F0DB8BF26E6808F50DEE9104E34
5D0489346C5A8665A33DCD4401036768758EB25A6609D0088FE1BB01599D8E7B
2FC035268BBA5D1A29EC35C44B1677FECA73E372EF928ED8B67077EC4C55274C
CA4118EFFBE7DD150F7F44E95AD1409C79838CD93764A09AF78BCB2EB79D6AA8
64B7CD3321789D289486659947AB54B4B63DAE783754FCC5FBA74AFA3B0FD4BF
8EBD939A31AC63434F225EF6C99022E39B85A30905EE0EF94F3AFD23DE7299E6
F276EDC265AD00768F3D384F17C236D4555C8D4AB34CC356D96CC4C3ADC1DDE1
7CFC0D7F17C55984B8FCFC72FD93755E84060C2D0E434BF17BCEB50A19790442
09EDC8A058CD39B5CA2E94FB163B4D769E88853C0500373E41EED4EF76557E4E
37BFB3F46B102B250350DBC55F85C82DBF62927C152BE84C76DEBFDA3D795F4F
790A61617F84CA29117B37470E41712F26DEF812CEF41D9D8691532EB72D0E1D
9EF04F8DBF54CA6D66609A0C7B2FCD14BE8F36414462D75F21B572C52EC09EC6
3E7DDCEC847CC6D3EFA2D7E270D930B74376BB0BA82AF94210D51D8204B74FB7
EE69654ACE4577EA85945CFA37EFF0DC5E7BCDAC54CB217B4836CB34BD71DC33
DFD45D383D10779643FF5D0F34B27AF365FC93D94196498468DF8F322E83462B
651C3EDB9C6EED0DFDEBF1BC061ABC48ACA527396B848EA31010DD1995CC4D17
9B4280FBF081B3B3ECECFF24FBA611612ABA11799B791BE95C8905F1CD1B36DE
4FA2573A8587834B9E7004B5F9D768E0AEB93EBE828619524A495E471F42AF6F
82571AE77D7817392A34217C36626D61F75CEE8A5D7C283DFC0BDEACC56560D2
FBBDF51BE7935248B80D4C72A7D75B511E0073A6BF271D440B7F0C63983E4228
92727C7ADA9E27436AA13D9D59E6CB9826C28125E4F9767C3BCC9830F846A2A7
435D5EBE8C5328444CD5B411CBAE3F63171DE32E73D8406A0FEBA498C4E7CBE9
C60B9180545CD51AA4366A849927DE7B83C38F9742E2395538EE29F0A18888C8
FCF0821DE468042FA2FE0C58AD907E93996D94F11F35CDCB7CD14973B7C807BB
1A6CA60883A1D74C3D5F8B26698ECEF7F9B307A9B85FFC3544A0A4093DA00841
0B68FC6B485775BFEC07AA0088CB2D95B1DC37E2437B7A0B13F8BE2FC74B7A24
071B1DB55D67609244BFB5E1887A10C711F0E3D981D7B9024509DA0C14700B6B
3B945FED849189EAD0BB511D7462BE2346D3BA172008B648F1E75DE5B7EA9818
DC9BAA070E04E84DFBEEB8B24D7391FF2FA09F28479007D6FCB926C75C5744E6
1BFFE5904C904C845ADC1DBEDD8DC9CA3A8707D86580C01618776D11D2E86B00
51EBC700B8EDDBD37F78B4B616EE8F3AF2A642B42A13FE5DF058495D1BBB8F01
D7B201219F99DF9ECAB7137F91911E33BEE00B5569886D97F3213D239DD049ED
6A815EF2B9C9C7F76283C21D44BB92897A206BA348EDE2FEDA5621B98650389E
9815E33A17D7DB25EAE6B73230607EF4320A5F03B65BA29AFEB1E609D9090D2B
C12E2ACE102818CEB577840F6A5D09A026F49CC9C67C271BAD106CEA4393C4F6
8F4D7DF0745B3BCBB34E27F41AD6DE6188FF19570280EA1E4950A0E57D0B80CA
4DC1EF8DA79E34D72DDECE2F2D5668B7C5D8B045753B93F43138DC03291DA92D
80EBC10BCFC2E4A4F1D6298650A753B7752DCBE3871343C697C30727022D3347
9434F81CA244113293094802F0B1D3937A7262039981801E3EB72660231A374A
85994B597B17D7D1EA184F04E2973E9674CE5A5B59E5D7C601D8A8A75C2884DD
77917F8FD492E9AB9328EF8E0901DCAB65112CC98E753385111906ECE632B09F
C6E4286156CFCF39F47BF88EF729EE261B767023B0433B9467DCE6B319E84225
E8E9E069D5E80CAC68864456745F608AD7F1DB2A7057A4B60C01E3B48B4F0FC0
A57E6F7D70F0B3099D68828CEF3EB08DD085A46F6AEB847A082D5EE078CA7B10
CCC4335309E6FE477EB7936ADD7770BA3562A4CFAB546D823B7A7685B098DCB5
465959409262902DFF5443B6961E262DB52A34A69D9DBC915D1D979F2D09E8CC
67956FAFE2735096C69A00AA6C9C1421BAF69E1B8F89CF67E5250C659A7D4A19
AE45B58749B3073662F947E7F5BF97A4823DA48BEFE6A643A56D558A474C4055
E9834136244EA39AFDDB3B9BA2B301853A589B355A9B86904D328BF2A61BE758
B1842235C4A4EEE260976EF1644167C2F4070EBDD0B73478C1BF2719880425CC
E4CBFA670CC1E1C6A8BDB75E7B524F977A90FB269661AE8B7C7A351AC33164DF
69839EF4CCC948B1971BDECC3EE24CA73AFC338206AEA78EA76288728ED74CA4
08020B80A53BF23DB3B68F3D0F58E2C7BE658851767A4CAC46F14215BD461B56
DA6E3BBF5DED4486FB1D6C2F60660F14709295FD7B6B4402FAF6EE84EC0E5FCA
8D53CE5CE1FADECA9A7E610105FA17C45AEA5831EC20510FF2330B331C40914C
36F29FEC53C83BCDDE52A40C1DC2C833298BA9C66845C68C0B47D6DEBFFE3F95
A90BA074E34D5AB46ADD2ED15125C4382A1C95B5F9412BCE7B2DEA273664C0F8
4C7788C6F3ACD041B16C9A99A6254FB9B899782664A7ACE087EBA0D48EA7C7F5
D84E04C04694D7ED240C57F885F794BFBD31E89BA753ECF83F6AE705F410368C
0B5213BD561B753676339F0B9FE90C60F82E180F7AA4A9EC783AB037D2F6F2ED
337D854B81D02F2E65C6A913100B8839695517D60FA5B6A125B952B64A1142C6
F39428D8D2B8FF4F1CA15C3E282A1EA0FDDEFCF0434C4123173E38AF82040A4C
F077A335C829D8626D775E72B5502F3769AE6FE8FAA616B8441E702567E898A2
DA6AAC3A314D5DCC26C3721108036A248AF16FD36E00AFC5AC22773740AAD22C
44F44CE2A9EC5A1378354D0EF515DBC0B835738955AD76891B054759FBEAE7F4
717A6118DF303BB77FB7C261E2C91715BBE32E595BFEF8219927C96E0EA2990E
8D729C3D9DABDD29ABD05C1FB213FA9C410C78ADAAC2F16EA19B997E5CF8EEEC
CB2C21340919244745429ADF41BCD1506CB773E28FADF673D70A791711AFFCB0
7D8DB4849837336C3D6DCE6264555AFDCA900E3DF683E54048E01613116C2784
94E20DD2EB17AA2B5CC304906188199CF23D9D54D3DFDF55EDE035DD3563EFB2
74CC50F61FD3428C83F24809D0AD1646380585D0E5D5F28A9353F6784D3CC671
B0FA6F59F3A0347D547C728623FD39A54642E669657AE1E0362D4838EF8177AC
838E414CBAAB3D568D946FE8CA8C25DA2D751FF514A92199AC13F78FEAC5D4FD
0CA34ECE58A8FA8E722FF4625129815E150EC18AAD461DC2DA8C1E6C552D5002
8AE2476F9084AC04C97D6FD5D963A652ED4EF778D021ECAA36830D54A5F9858E
0733034D1F5BFDC20AB2E4902FC4D523AFB607A1A4217F2378650ADC04162F20
8865D6456CD006527E6EF77735F91EA6049E418B901F10FC0A3EF112641C95B8
56F0D87D1389546906D15D9BB1C1A9A946E7EEF8D198562366FC4A89D1C27D33
6133D5488E21C16CB8B66D003CDC73EAE1E5D9EE754660EDF4F9491192A438DB
FD51CA5C5169A2D621134EAD387D472B72A00E3FCDAA121A5A6B5F8D8D6564F9
2339FF8F8305D0970C33AED35D2365BBD9AD50C43666B33ECCCF9754363F3D5E
83EDC43FD61B93DBB81A89763FD4520AF4792C4DCEBB76AA9AC44DFDC4FBB142
0298A665045BCDA5C148E123AFFF96CFD61EEB9C900A19314829CFFC11DB597F
7C55A8A7CC1D8C1245CFD89E7D66E63D1FC972D86D80FA11FA9DAB4BC9968770
BC41B17717A55E5D8A8F06F8378F03A9D9D83E683BBED9AB71BE8C8E5C24E53A
5AFC5DF3401222F292CD0FBAB7F36A7A2E4C582CD4B7ADC254E87493576F75AA
AB9DA284490B1A014F5A9DA7B45CA4D070D83F5BA00415F599E0D7FA55CAD906
0919527012138A4EB36CC9176966B8D949F5A945E578C8DD29FF20796AC3D0E2
9B043E8D6A88357867F8BC52A5786A474539D5B40C1FD85C8B2BEE6A4AB398F3
5D2E5457EEAC9330C8D80DB42EB766C43EA8EFE81CCD0BD4C498F6F335E234DB
1B602BB51593039FC9C7CBC249D24FFBE824F874DD9A9DA5141D56AF49EDE3FE
8AF0EA8374D52E32FB981A846E5CDD5A826B3A045427E0BA44142C86AA0CA4FF
8EB79622F7434C700922343340368914BF3C97314045FAB692C18BE004A54A0D
C17540E09C4D4F7048EBFB72CFF1B8A6BE5957291D85E8E79BEACD319A591395
C24BF2254B6B858806C7F6FF7AE573D9DEC395D0D0BD89089D9F09ACC83B7CDF
14790E32BA259FC90B5F90519129630E8147BF358A241C0B5B747F90A6155BCF
5027AA45F3F4FE9839783DB864303A459B38498E54683FCE2AAF594FAFA55EC7
652A8E2200F6478A32041974E7C35B751D3B44CC09D9B296B9201F559528B2F7
8DB6B4AA145976701D841CCA2AACAC1B034423EFDFEFBC6A6A9FFAEBB5C4DC13
B8286EBD2D676392312ED6600DB29CC209ABA7F639067B4B1CE7085F7B9D4C72
E4D71B98FF280BA80D25A1577850F3499817B2070697128FBBD0A56138DE470F
057B6789C3CA5FF9D0E0CD879B9C6F349DB1C94389DF02CAC58C1BEF50462DA9
55FBCC0A0E08E38B8146A5E7B7BA4CEE53316002B4885791CA91048469BC4A60
5E72E3E66F8396CF70657039EC1F69DC64D101441A9B77C83B02CB02A1E2036E
8FEF19FC1BD465E57001C2E1A15A802D91C6A20594D080499A4022C1D3BEB7E7
D9112A5E43DC89976E25C5915DEF943C94AD63822A22A7B4ED36340CD545E40F
B5E2EB5B3293F7EB028437E6B65EF3B49B13A74F86261ED0DD89B284E3195972
BF1EA09C2A21BA853B97379AE23EA9BEC8CF1A8F2E2F40DF97D528ADB4433BCF
0140105C5C914E4E2855E8225778C99A8EB4E7DC515EC43774D24BF2F6C8339D
E464A4FCB1BA37E4A11BC3DE5341C798FC8F00B52C0BF8E15EF7FB0206DFC143
519DDAF6BEA9D87462EDDE8B7549862397DDA42CA372BBCD52E389508C28BB27
3115A2A7C612DAB4F2055DC28C1B3EB1B8EDD899E447AB390772C8D454F05184
D7097717D07A139EE76D616C62D15514B0723C63BE265DFD1A3C384BBCDAA2A2
D9878F2C88449813611CD5BE08DB0683B8AEADE7A834103F9E3DC40386FD6255
DC95744ACD3E49DE5F8D0EE1112BC82CB6BA92129B71295D0F02753A2401D10D
268FA3FE78059077CED5E9EC069458DFD0A6ABB56271E95CE1072E5DA1DA7493
CDD16835D4FB9AEF269964187C6D1E62EA82E677234B5580DFF90A4CED161B4D
632BEEFDD0551C21B90162AFFCE12FA933F66E78D8E4BF41B10E863AED452B22
7E06B1076D2AFE5EC6669051B7E8C66C5FD2463DCC6888004C4B387E2B20ECB3
AAF343616B6E8D4CF21253C9B5DF4EEE0E806A19A16343A3643952BD6868FB2F
1DCF2F9B22D78DADCDA0D30A14316833C7F6182DC2272D5E2F7C00666AA1E916
BF3EF46514D8CAD04C413DDD96A30F98E77807D237221AD66BD532B72DD234DC
8DDC6539051D46D10DB88C739D0A9DE30ADC5EC9D817AA6FD0908CE41AF4FA67
5DCA02137BFB577074602721FC90FEED3CE2467C5244B1776D9849429E10BE73
D108FD03AC3E1CC9D388CC774652FBB6F5F2AC95FA798E2322A0F7C51E49E5D5
ACA29393E391272BF4E3DAE83CD2AF1693BFF98EA8C41A396DA599FDEA8564EA
0FCECED4315C18416A5868D5AD62874829DEAE23A9233657B89F8CC494ABAE2B
6586369557A61C6EE7C99004DF07E91C93861593C532C2216C3CB06026F8CC76
1026825D5087E615F28843666490116F2754ED287D17A58FC461B2CD4F4046BB
97A8436A5FFF934281C694F5BDA0A1F22FFB37C8070350FD6B69BB70A53ADA83
83B8FECCC1536FA9A2BF1D0B9CF95E2B7D1C2675195E1F91535C9BB75F55E1FD
FE2BAE1F505C95388ACDAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7414179A76BEB45D64F98101
3705AB6F7A67D8551E4BC879A6461046CD604D79E621DD382967329A7EF603C5
0A96E000463F8247D7CF06FE08AEB09A6A8F4B0CB143A6C10B1412E1AD8276E4
A5A5219AECB4DD34412429A21E2A5209AEC889B4F6866F253445C88F41CF25DA
60A179B44F4CEB366A028D673EDC34DC2C6159ED9E284CCD6B34405C76ED44A0
341DAF52E65C1FB38B5301B2116C44955C2915D4B7B798E25A751E3F95B9158E
480257B3D8DE09668BC0E0C89032CF57B92D032B79403597185A78357377ED04
7D4387CC8327609532DEDF15400F35F789FFA040283ABD9B08630AD51B3E4D3D
38BCFD0A94E815B399C2439DB0ADF6152327F76EBD2DBA3976D9E1728F408B8E
C29EBAB733108E0A5CADD280D58F1AF1544E5A4D7642235392766C1F7AC9E31F
EC9717679ABA8C356C365DC35EF11EF0CDF28573B596FE57C97EB0DAF50B8A5C
F69B108D8678E9172B031D8B7F9C0DCE3619013BA44CFAAC55DEE70CC5523654
42CFEA7B93B63DF199773BA585830F0B9C01D7E201DB66CF48438860CB9B6EC0
7129C5BEC0916BA32DA8BC8F2E3C2B9F205401964D2CB06DD32F92DFA62C2056
AB4CC922C63F739D9E5189F6667DAA696C71C79F4E2DE8A0CEBFED08A0AAA58F
F0D54C3856B0C6C9550F1EE37BE822EE2721E984D66F07F63D81F2BCE55F736C
8CA8AA530ADF5EEB1FA522F361756400D087A0A5F8BD756210F38F01E55B3A09
0E53E80A1B4CC9ECCC574A2C48557081FFF69663FFDEA4D9DAAAC5079856C3AD
D0FE997308195CCCB5C4A1B0A91B655A5BF38487881D739148167FC5DE154C63
6411EA3D2A6BBC91C19D9214E236779755CFEE11E4F1C943F01AE0D90F741686
91B716147009BED78D6240BD13FAA888E1483595B28BFFE1296240C7CA798DF9
1613A28C380CD3B9B9228B0E58DE32066BF355014499516A35E98D3311C7D838
FB6135CBDD9DCA76378F9AE07C8808F85C0E30F0B3C40E5604D5A51CB2A6AC1D
118ADB0A3272070103BD0C28AC5A885463B1C6BF8708257B6B512C624D2AEE3A
0C30B65724806CC20680E1FC18943838B52A946AA34D1E1E82EF636AE8D28F59
B42393F3E804795EBB82F89B0D6E88E228A16AAB305F9470EA7B195A9CCE6DF4
569202911D9A1FA8B971AF90F81D066C2721CFC855C6B584A089D382CA88721B
FA473FEFDE39BCF27191BC6A014F89D4C32FD73355C540F7D2FD49DD14B50E8B
EEB70FA331EE4806A3B25F02D3C22200372F3908F4975989F882C845173C4E87
B81F3ED0C58061B75F4E39D600B909A6AF521E03374C646412EEA1F9D1AA9571
CC67C01C31048692004E8D5B1BF48AE0AB662C585B8776F528840DD947F674F3
84D22D175C275DCEAE9B9299520F9C3BC1E568BB76F14EAD132C2EF96D1DD192
DD3CFCD5D51A18B8B8E036261ACD4856501D8F9CDA1049F0CD17CAAB98CD5CB0
72182F12DD84489A9988200D6FB236548BC2CFCDD90BF06B9E1EB2D71C3936D0
5C7A69153BD85DEB50C29E3DB87E81E8A25A18AD2D7978321A6F893C16B36F94
511D36C677A5EB034A31ECDD6CF5BA8E9B000BA15B49C5FD1BD383B685C27DB9
7EDC3127BBCDD4E461693174117B2854BC6B24AF6897483A285D7C1685549A04
96FA2F3D8E949810D6705DA870E406220B40680BA771F93F518DBFB8817CEBB4
A123A3234868EC2B18F99B395D373340BF767926DADB02BCFFCEC66BE736C4F6
51CF5ECC8387723E5C96CF16C5B3087F7575BB678483ACB6D3EFF55941AF5C3F
6F06E340D5257911DE1E389CB89BF05CBD86D63124B3B6B23126EA13DE259AC6
242BA0EB37F2C9162339892CF291607E611D3AEC738EB2E10D8BF56BA1A8F119
EA201ECA578F99746CD367FA092BA1E889E3C83A12A432A15442865A8DB2B074
61A6ABA24C57391864DF9B406DA721C991060DEDE02E1E8ECD298FF2DDCEFC85
C0CC63BC981235FF7778A427FC98B3BF604A4FE22BB820BF23B022F205CB166D
20114C6AC07B118C0C65FB669F8536E8D6AF46CB6E943CCFE7579D6155428545
F37342D7714172F78B67534D993E8EB67B3D9FD296518BF9B7261097AC2C1927
78D3D36111797833451400E58F5D35983080F9672515AF1A397EC3E2A5ADC183
0FFE95EAAACAD1C2ACEF48DFC2F2D05E4FF89E060F1B93CAAE476AF4F6204F7B
0295EA8423F5726CF2A49D48076C11264552346F656EFAB959688F7503B1CEC7
F18AE1745418FF453386DE9F42B4B280BAA03CBC88F19B479799D6CD55958B3F
874EC368E357E5714D34A226C909CA3C2BD454C2EDB088B45034BDC13CD8FCD7
6D82B9326EEF9FE6A551BAA6B894DAA2D3727EA01EA399C17146F192B2FF99D2
BE08DF33E026A41FCD67C6CFB9A22E3FEF7066425DCDEB1B2C2A1F83A858C43E
41408C06CEBBE4516169FB0C68E89B0F291713D6BF897EADBF4A05497D0EA9E0
B90FE8D0673B14BF32513D5EAD206B7E06FFBCAD56E0E0161CC27EE321CFDCC7
69DB4EEF83781E3A788BC4F89E57988CF78F4CC28D6709AC0E1220626F52DC9E
FE727B42BC2D2D66F92DAF0894CC461A3386BCD162C9C1152984949B84FAED7B
95B68F7D4F2DBED85F1C73A36876A9A57DAC7D581318D9B21015A30F225424A7
36A8EBA0D4E97FEBA8C650B3A5772BD7C4C2EE20699364D80578BB6C18A3DB53
A552F5999A1161CCCEC74C18F6D2453D8A30571F32519EE2016AD0ECDA15EF6A
99E701B90E34307E7DEE83EE822CDAB1A03B8CB4DB29E22F72FE59903305DA9D
7E403118B60FD0B63DE7FAD9535DDD247AEA19C8E1DB2ADED17FD74593960DCF
6AF98C1197477750458EF21A20AF9AA3C545A35F571A6977855F23D20106D493
CC58D6696CF3B0AB2F93561E0434A0684BC5521421CE0C69502D798095A7EDA2
E5F0CD885A65F27A055524876CCE4295FF99307C2F9BB54C712E006E1D590C14
DA2F7B6B18E4EF0596AA3184777DC32533D183E6492E434EAE1BA151850175EF
25DB1FAA0FBC752330E7F138E98B69561FAE6A92DA04EE168BD3B46C0614D106
F5549787B14E814C6C843985070ED99A5654FB2BF0C8A53F87621D8C76DBCC17
2993E0068A1B46868F4967109EA1CCF73B6465DA8ADE72E1F7E45D671420BBB2
5F1DF6707C59672102DAD81E2D2AABE0AF065890A9267EFBBFD939E28FA466AE
82CB864AB975C1C2526861651FD9AF2EA1EC9C6069F71022739A78176F13818A
D7057053154F82164C380E50E1797FB75085445A66B4C612FA540D58C483DC58
FC1C6DAA0334911722D69A26A139432B2B148B6CD6D07686290717E1E5A321F8
89E00F407C52A30C918B4D8060945C11C41A69566CD451820D3A333809A4366F
34513C5D022E0D5A8E50A278FD214578FD8D18345EE64DC128876A2B882B1AA3
39AAC2B6FE22D9B992FF3092CAFC7CB68B2B95FC6DE4DB326C3CBEB73EBA2F8F
54CDF7AFA96610EAEE8EA79381F5965362D63BC05E6D3B85C56227FB920E9F11
60D3FD6E85138748D0F9056DFD0A4D19ECD6F22B0C6823990D6B91B81544B07F
92F33A612C3ACC7F760A1D34CBE175FA47AC69FABC94271C4496607F31D59B75
06AF1990B638AC7741273AD699411A9F800852817C0FC815D50EE8DDC9546D4F
56CDE3255CA12AD92825AB75F94BAED95051BD333CAA6AC4AC771A7EEB3BD513
E69E8AA5D930CD311F25A2EC55AEB085CFE251C5CC22670EFD6AFDEB8DF2719A
4BB074C6094FFB74E95EA288D28D0BF2F537E32D6B5DE9B02E6A612DFE8BD9CC
F18B70619420089D3E47FA5B0ABA0F4D719959049ED36D5B966BF65083A920A3
F5CF1FFB748A5611D522A2DB0EBC30C6BD0312078A6FF2A3744B43F155495010
380D7FB1A8B76CE9F803E3C9F6D68887685F6EB5A6EE8BCE525CF0179660D891
E6D1911C660BEF7B24BEC0CF7B29AC7AE72DBB41CF3E4A01EF84BF023B7C826D
46D047F2BB9EBA7119D244B8B40C42E244F82D60D1EEA1CBCD4AA143FBDDFED8
FA29EBC1398DB9A71C0994AABFEA61341C6B6362466410CF66E7BF687C5A7DA6
81C23966AB838678251241B46BD5F610A129AB3BB92C1EA90C5E2A87A66A60E0
6D820C69ABE8C14485B935CE9F0ECFCD2316071FE6249CCCC445AB58479E2251
DB3EBDFA8F6B399787217BCCCA0F8B5DE633011971BED4817D1E4801D8B181EE
2A361328DA426356313EC2050144AB37D437DD2BD1B1C331C5E3B52C46EE251F
5A950D0F5014FA64B96653FC4C4CE43CFCD3FC0AFC07473A06F4C958BE3A49E0
065C951CF1034C48BE6E53709C5133150ACAF2CBC38C94EF15C2DD147380EEB6
A96D772333C53666E35B2EF6D22DBF319E187502C4D904A2596578B11218BD72
6D7135575D75485945A5459ADBA009D2A3EB8965CBFF5BF8443320FA0D5A7BAA
B82D007CB15ED7A62D95B8F92013B3A7C9F25B6A0B2942E4ABD8D3F08C91B157
845A4480FBD068A86773A3FB466309C9BC01217B420ED9E45DAFD8181B63685B
8EA6D152E12301D7556E6371F27D46C46C97979DD115520E44FCA5F7996889A9
F2EE46586A82964DE25BF87EC90348CF590A06BEB6320CC8DAA8B188CA63FEF4
644BF31F27E8CBFD40F7B1520F4825B8D0B9391BD734060F4C050898C4F66262
8A2B39A95DD4FD063AB4F1FEA56902F01DB8145B0A9481AC425AD8B4DCE63A6A
93E254921B89A90B93D5FA8AD4FFAF85013B5C542094E9AA0BD38A0CDFC09D64
04D020EC0195E99B6E75B942FBA2C6D302174E76821B000630A194F8DD609F0D
09EFB60C1D37CF7B0C109F3BDBC7E60275D3E3BE8B2565A93B27A4B176DDFF54
95F23AB9DC687ACAAA4511588A5FDA3A0655CE9BB08BB6C374B0615F4E159D11
328DF9A077BC1C9E9A412208B0132327FC9A9CD589B3F75135CB5BE0B87F0548
9410AF291A8C4175B51793EFE0AC5BA522104BDD47FC8F1476909062F88BB7B3
0F8726A2F64AF6A1666B322EEE450F6DC3A863FF8967E35855FCDBCFE4E1D937
88E5C6CFE951F66AB154DAE79571BF07A0FAF12CB6584EB4424D2E1DE90DEB61
7ED5A065F93032C95C0CFDD8221C0434128DE7EE3E3328D09B7506AF1990B638
AC7741273AD699411A9F80085789F4356F9BE8F1EC130930C2F370625BDE769F
891E2A8B5673BEF944A726004B7ABF97B631C2728ECC40D05FD5EB0C930A4848
457A42151D424206734012E89C7D9CCB7B73C04EA151AFDADE6C18FD77C17140
B8DC6DF3656458B5DB9D19965C741BC17C9B26166C4E02E048276BA5CF33411B
194DEE1C07B8C2A6733FCCA6CEA8B392BC6CE65D5869318FD4860E31EB5605FB
F8DC223FA05467FF1AF9B6754D8543159D3BAA54D0F21A006C099C41C82B2E70
BE925E5EE1E8617FCE0BE1AE9D5DC082F340B62D5AC2E973A03F642F5DE54260
C4B6AA0931F1F17FE0D882FB8C6330A30AFEA00602A14F2AC51205B8CCB2F612
559D9B5036E5A40C5BEDBD1D690AEB1C18B1F9E6D15280785B222E5DE4C1FF34
99BBBF5C460CBE4D5EE06C1640790CE640672475D807BDC1497FA3924B7B7C32
C1391BA053E401E8A3BEED055A3D9E492DCA4AA0C287426208A50CE40B136E7A
8B596F0E6AB5CC9A07D4D27F66E30BAD26E3195ED6EFF62330C4AEB214FDB8C9
203C3F857F777160CCC959DAEAE149FD142E435CA26AFF3A56AE8A23846710F5
146721F3E925BAEAF326F4E925AB2CBF50D4D3BBFACD64CB325BF943C3D7C126
12E1B01DB903A87E5DDD3CD0D72A64F336F904C3CE364DD00226350947DB27EE
911418DEE48399AC88E385C64EDA6ABDC1EC73FC6770C2F40563527AC4E94694
2F887B0A42F8B1DB49860F3A39BA5EB02EAA96429D4882427C81BCC7D2C77B6D
D17766E680F2D4777C33A6DE4D9F0484475C094A2C3B802D3951B6D93059F62A
EB10B4DD3C3C750565DE4228990E597E21CE11B7812E89AAC77A5EACA0AD8FB6
C6A1BD4E6F8E53921741047CFCD7D4F13A33813DEC4F5E8A91F925E42512E433
6F135CC1569D5477A27EC498DBBA04172D2FE5806735A35A0976FAC844DB5BA7
1D71B119CC4E399E3BBB19459B8898BB4A7A14527988DEDEDC5282A308782851
C10EFBE73991648E4D079A3BA8A9911ADF8CC3C631819D8AEE557170C523E9A3
72D16508279B3B2437BF1CA69519F59AE914D2E9B0ACF3AB0316EDB5D83A44C8
0CA0353CDE2431EAC333EE21FB2767FBC020895A27599B352509DF7B5CE5663C
B4883AA0B0ECF40BA2322C780EB2CC908186C6C618AA75E515060A13B56F7791
81C1602226FE91669A4AAC7360CADB900DC43E62BD7BC712C9D75747F397F592
31D0990EDDEE2C8FE8235F3DFA0A8FD56B93CF62F8E99185B9AFD9BF39009E75
1FD187C464B81DE744DB504BBB659382B803A5FC60B20E5584E6D3626ADFB007
B1D606E8E43DDE1473F7520F60C38786C75D542DF2E2DE86DF8660274AC13CE9
65132321BBDA0A0644DAE36894416E3DF1D3BD870DD9E5A68C81440A3B2A0112
014E33B72BD8EED8766DAF076CF3468A187E2AED2D1453BA73139F45B27C2B97
46D9FB2B7039E11C6B72AA676CAE2D18BD49EE2FD56DE59FAE4052DB2AB8C6D2
12D85553FCA47A6F83927CBD52E5E796ADCE781F2D2ACDC7705AF1E68759EB1F
EE852C5658C938BC686D4D8B6EFD08CD65C1250D1B515AFC574EB79B143A79A3
7EC8F5AC958F256EC1043954EFE76A20C4B77FC732934270702C9E3AFB4DDAE1
19E0CFDE12AF9ED23B6D24987173439EF121283045A69FB3C3D2E685A7AA24AD
2414D4B3A057BB1CE92EFC5EB5F8353C55A5CCB04249A48409F5E7EB419C1CFF
11F604B29E7601DDEBB30B5DDD610E90F193D01DBAB7CE2B2A34C7E007BC2088
50A7823ECEA542778AADA09C7B64F45856987A5DAC995C0C86C9272BE4AD2137
6E03009FCBDC9BECF503EA4B2FB75092EF95D9E03CD2DC870E1AA50C1FF29936
4220E1EE95C348B3267F1CC289B30AE01E2DFADAAC3704CBA9B7A575D20D31BF
D25B3505C53E23AAD91F1A5DC1897CBC1CCD6F7ACF47295C6B0017785C6976D6
17A8EF6C979283B82C145DBB058CA0537D0FF9969EC52F354A9D2A5622EC72C1
02BD0DFD6BE1B647C48B661FB6A99122BC629C9E4F59FFA6AEB3D47348C47DA0
2F61D8294948686CB1FA865BE76D4E53F99153121AF1FCA9535232F65487F463
3C8459F317329DC62A01447855E4D5B31DCFB3D48A2A68C082E1A5496CAD6E1D
B93BB98A366BEE8C0E197C2DFC982C876FEA716429E181098D0210094F868FC0
0757712F7A57D0640673FFDB12FD462A6BCE438DC24826E8FBC87D54488ECF60
01DB538214C73A1AD382237B59C79C2917263E84FCC55944E76487EFB880349F
A0AF4CA4031D04E20C16CFB07DE2DE86DF8660274AC4442C46B73590FCC6397B
1993EE3AEFB793B2A8682A5B3049AECC39676EB4D19EC6EAC5E49AB43D177380
670337491863384641BCA1E784A812CAD466D87949F5779D1105B9F2F4F4C41F
743CA1572E19704331E4549E8BB36C8859209133D7A48104EBA5D8B8E5327AD4
DE35FB6CDCFC14C78DD6D517E4728B962FB438EB8EE87D503B1823691CD45B12
C73A6D153C55507C8B85596B8DC0BFE69ABB45A00891B6A5F8297D5B3B3D90DE
E76A9B82C650078BA5E3900E0CD5372D6E9E1193260600D1B2D4FE38363E720D
7074EAC5EB6AAFF5D6C824E1DE0B5565364AC9BCA3148FB285B72C04F4D9FE38
DFC5E3EDDAC6622054C6E08F87103A7973902DE67D7B32D8065B463EB97BEE51
6C9211DFC48AA3B49B379E2DB044372CD708D02C9500FC5276C00CB8994F9A76
B9FD55A8F0F5CA1F9AE0CCC6418439A2634C92B8A41CF7AF521D4054EFA949F2
44BC840CD8A3126BB1F700C0964887EA38E716394EE6967CF77409E8751DD078
52403BED8395B53EB79533CE4760D7DB8B0460CB61EB5516B551F8F3990D9E67
29246D73AE30C46862DAC76FB088786DBD5154F8A0FAC5EFD8C1EDFA1D339F54
00276E7502D9F8AC33B4450FAA7CB24DF77B64564F2B6952473A5ED6F252E96F
1A3B15021E27FF5F8699DA15DBA88557C495145EAC7F65D8E0B89AFBF5F1EFBE
55D34E65ED77195CE74001801CA19205460BDE5658D869112448FA382CF1FEB2
955A6054DC90136AAB81E636CD886112204D8D711CB1DC329E73E5FA1F5277EF
2294376714756E12B00D1914EACF7842A48CF9E9D19AA9151A2E31E60E2089FD
8F15F9063C39FA5F6A274994CFEB23BB9E6E1DAE40071DAFC75EF2C0A065BBE6
C92D76D00E8C80D31309E3616F6517198510F9123F304816D166A5FDBB408752
BE9DCF468661B5F975397413884F8DBC96EB330826A04A50391030DAFE30A597
8D6098C71F98118DECD638C3D90ED955834D179B307A1E8422A79AACD2626844
08A29072884903D56B8B50EEF89B33736C53E98429BA1715F0EC1A11E46D0173
129ADF2A6C8AB673147174FA358CC6E7C1BD6A0E93794FCBBA0F1FAE43FD968A
493306EB71E1C7E67BCD7AD4C7623FCE7C44DBD97DC4971A485ECFB7C8C95C67
E18F56CB1C9658C5CA56F19E724FC57DD074E4342113D558AACBE2337EB5DC8F
7DC87CD858A63941A62016B04D52A4263879390BED73EE7BF5EF426DCE7750D7
EFDEC03F78EE6A9BF7857E7F5575677772F10AACDC29A83FE6975D9E69AB5060
4B6575429725658718E28F9A0742FDDB615D2EE99859A10E310542D379E2A410
072859E86A4C74DF75B9B8C721AF2712E663D9CD5992670C738B4C30D1A1B08B
C477BE63F87218D3D439822D419A59F7C0370F74E09F4828269D8EBB7A5A65BD
6A098ECA83CD5C0A4D670788D6A52C52D99BBF3AAF8D39ED704072EEC41A3E49
6FDEF0AD7C4F17AA5E572EF447783ED844ABEB57E26130A3A461F426952C48F3
8340F7A8012A89742025378CCAE6A2A78B06750DB8F643E63CA9158075BB16B8
AEECC5BD8CE65B25664526BCC5E472D5998FCA837CAE7AC9CC2B078FF24DFE11
E5699F28C62F69AEA12EA9B138E8BC885824D7CF6C048BE60E74EBF41B36CC66
479F8DAF9FAE38EAEFB2359883C6174359BBDEC4A7BECE3475109E22CDF5F216
B53410DF5683610586A88CA9196E604BAA0ABD1F7A6FE6997008844048B62355
D4FAD134E4D4B55DA02BCFA06B10ECA24348652BC42BF109FB34C3F9CB574693
7FC7AEFCD319C14ECCB3D3E9E8CFBC3571CF312E7994FECA994C0D133470733B
2C23FCEA729292D1A9E5E9BAE8D6E6E9F20A75E5187B8716270F6E766A7FC707
43C30049BF62E61941B0CF628339AAF4718BFD8F77E7664039447C0B2F450511
B5FE3EAF7D399E7C89A31A4EBF24FF7D7875B2D0D811D4D28784C5B6E3EDD591
612F74AC6842B227A44B5017A05D5E4B317DD10A5EEF581028B7965AF32EB6F0
AC1524196E6CECFE99EDD2B9C1ED812F3CFCDEE2E4EEFF52CA15459DE3999B1F
8548E7EA7DB05198142F15FAB71226CD237F79E9F74161BC8CF6172098AA76CD
43F537114AF5F6115036BE03F2DE89B94518446503F98B6ADBF746EAC1CE5510
1797E9764D14295868413B8F232D9DB16D626404329268F441F7B10ABFBFB4D4
A24FAA6161B1FFE0CE8E958E03979B29A45496C8577D92DECE94F3EA1B4F0CD1
F449BD076008C094AB6E4F323340FD6156774AEDB446EA6ED15B4091FEC360F7
21D64408548C065E80A3CE87AC1F233E8A6B9C2AF45A5595C1510242AF91BEDB
5FDC3B1859B9B687B37456FD33A807A155A0EC5030914174E893EC08369D1EAE
83C89F50D5EE836A51A66680864BF0BF738CF9F60AE0ACF2254877CCB245C196
2E0D694FECF3A63AD13210134410BC575B48575473A02166C611ED3A704C1B0F
2E86F9BF9F358C1FBDFF8D53F443195CF8E71CE392DE9B0DC4F99567D44CF367
0414C2A716B0689882BAEDE66F9760CD3B2D9D885AF04A62724A915E22117073
DD62960D92ABDE89F5E33F62E982BA73EFA7342DEF12FB5F8C84ED30885ED2BB
3235FE217C7488E02738C90571101A604567F49F4E7898C6BD3E6D855E935357
9BE80AE423F65FCAAB2898592F94C0AF3DA052E5225FF114840679969FB5F094
14F7CE0A4C26DEDAF9321312B58FDD21202836DFE33E7F838F3FFE0E72F6998B
37E6594CC09606228CF9255EB5A772B1E40369D49D9871E56DE7967568DE07F4
037A8F2F5F2D5FA658F8315ABAC736DC05F94CA98434B3EB2602F67B5B019490
D375889644A5B66383986B14BBA2CF14979B9A4D2C245C7B089968DD4A690C9B
F6EF497F93CDE7322323B3A2923A12E486B6E668A254350CC7DB812AA8D94831
944E7EDABFD4E30858EE188C79BA00DBF561F7707C46475D97D33027B87C5140
702993C0247068EF9B9B439BBD1F16D657C9889451824D774C5B2DED71DB6370
8357AE0A20570A74DAD8520873FC13170A02F124212D9840D342A75EBED91379
1BCF4004F906E8DB9E45D6671FDE697891319329A0E747E7C3614FCCD150B7CC
B6B77D1B72C58835747732A746A320DFD88EC814344AFC21A58F30FB9588376A
A5ADE5745695F1D15D6A0CC02BEB3C08E4E7A40E839830DEE73D114E4D392E26
6D5F65EFDBC5A3974D9F423F84FAB861171749D0FAE1D3317947DD3A946420B9
88BEF5C843D40198C092AB74118828206DBC4755BD9605795E6EC93122C8B06B
30E7F816D65619DB735A7367DAE1B6879694554A3AEF12906184FF1011F7D218
0C63C8A1D02B4856E888311A8A6AD0F62C63BE3E65647013FA57353EB568D9D4
75197A808487A992CA2D8945B3B83949B1CC8EA78A44F1752C4CB72CF6EA77EC
690C17BA4B56D34A9D02F9B6F197A24F8113837319A444DF11D9B7B459A27EB5
DC8F7DC87CD90D873A7386DDD7B85094854BA3BACCCF768A37F872AD26210427
DE993BD95B9EC04B6CF3778A1850DE65608A057E42A192514BBFD96C6B0504AE
F8CDE330A519A9213A572148E84779AE54E628A4A3A5D3CC9355A54E51F19E2A
B9AA334587D31047008CF805A94D8013DB6CE3ED44591984D9EA4AF14E155262
786E874194A2C4AA7528E89D218F1D8E854CBFBEABC027F41A705A2827372EE1
226048BD91F21F29C1EF9020D8307591B0E0694660A5434A2AD9588A2C6A3A0E
B4B8E90A95C59BB8C7B2C82C0672CDAA4713C7807808D14CD38BB966D833D669
73EAF81D51632895601CA35E7E3CC8DBAD9F35D9F483BFDAC11F0015E9DB7ED2
6D4E528347D52B3140A125C54E03BA149246253D3F4584439D2F4A10FCF327B5
6A27E4435BDD9D66912171BEFAA0366D689A885F19A35A8E10E17FC806489D75
0D311A839708B0B82908FB6C4FB6E26043C480BACCE4E79C367DA074BDBF3020
DD79C03741230DF7CDA80DA5B7B561FBBF414E5F14D2EE11CBACF2963CD93B10
F61C5D557337C254DB55E8EAC789CC09A645477E33DA7DE2E73DA7928FFD4BC7
500114C1C832CF8DEA94ACE1E42C3ED64D689D96A0FB5016E10441764CD7529C
F8704FFCAFA21460D005F95A71B0B047E7337B543D6D43AC00636825C0685B7C
3FB0BB2B3DAC4732B5015F8545F6839633F9DC33A9CCAC02ED794ACEA02C7683
53A539F7C9072B5947D4C4C012073C0C31402D64C25B536BF4D15F2192198269
0E7CD815EF8041FC84733B8E8AE855D918255A1A82A929CA9A117EFF3C05E2E6
4D5EC33D205F9A84ECD4704FBF5C5D7C19F5E3B2AAFD32A72BB2496CBA3BD002
BE30F61DC8E9E2E355C05722A9CB4086512A6AAAED72B34E0C8F09879ECE36DF
55C9C62CEE4584B6187C06BF6F997FA62B90E03AAE1783DDD6F66DE7669038BC
12FE7292D960B9D6175652C5C8FA2C18EF7095556E3EDDF97AB556BF07666BF5
9837E560B853953ADFE6F4244465D63C14BB2F49DF3913DEB54B4C576C84F260
43A1BB05D973BF4706F3A21461DACDED7878A4DD511EAFC24443B5A6B69E9968
B00F3C11CE94821FAFBB39DE4612770CCACA9C0FE90D825A61B6717F52C70B1C
ECF2FC6DF7E54C6A04CB568EC4546F8679EAF42B6D05A075DB4C780BC8DB84CA
3C4F4E14B3FBE3776948F8D61FD6F90C7878AB193376AB667F0963E59880303D
588AA948F8EF1C5BB02C211BB19DAF5AFA4600A3EE2BAC6C50ECC7A30F06BCF8
9417AD487C4ADCC518558C4969947544FCFA7D545ACF510258DAD29C9A00325B
6233966840F07EF108C01DE4564B6DC95094F01E2553155F2A5557246A7BD2E1
9A0AF50C8507DD7182AD9457293F6D867D358B056DA716700D5B547FF24B5312
83100A7477F05928B7EA8A00B2A3702C5F939A3DA7E61CC2D4B273D91BF028FA
AE5A58BF51B2619576A07E6E00C992C72D49E82A2BABA6E6BBAB8A10552D878C
B515F1F3750B8A5F0037EA2939ADC1A6B609EFCF7A54F11F47E1D55AB0945618
A513F9E18A241B500D66AA179F445853AFB1F23347D5B6BC5001F539EC155770
4D284D4FD05B0ED0709DDD1D2621AA55B0165EBF368748E6B709C0DCA1C82008
9D1735CC5B9E56CD1A08F628F0FB9320A13FF4989022884FEBEEADEEEE6E1DE6
FE66D425EBE4EB37BB6064B355CCE0B256344507DFC2C003EC36094BD5039D3D
1355364C9DA5F73EEFB06F36C8DA1B22DD97D56CD2451787D65AD474A226ED2A
7CEBE9079E42C81BDF8673A3ED3D919E60BD887421E9C012658C236B55DB0F6D
9D6C2AD431786389E89CABE701C44B53F10324B4BE61C88E42AAC219BBF030BA
771ED145F9205329A309C8C682A5E3FB1F54474C2B4F02523803AEE4B2298071
9FD6D260B146BABF413CA5CE04CEC5887707CD4E0B0A9F2A47559B84B48A3C8F
B6E03A388F2F65E0E226510ABDEE00F94C0EC7C53161BD222D6EB778060F3718
4C53EC2774CAF3D1864EB93CB493AB2442C09EB4CCAD94AEBC03E3736623045A
B74E9CC2A0DEB63005B3BE9CCD797C7E6B7E021707BDEC6B6FA7653CDE3DBD5D
50FE708355045A935AEE1C8AB8E108979982308DF23C527DEF788BE68C07F82D
302C6A0AB821E08523E6A62F37BDA633C214058AC3A00FD460E0FD9F8879B794
E610F30BB4F2D283B8C9BA33008585397444E3594C9B79244A3C65E3C3A97F77
D079CCCD5C5BEFBEFDF97CB32B741EFD42C1D68EDADF4B63C6093BBFBAC0A74D
E362A686BF12409B8A46D54247E3A9E2CDCEA6C6145FB82FAAC9ED8873AB710A
C4A5A24261A4579290442DF2592DFE5EAC4C8502116BAD09A459708F872AE04C
F29BA403FAE8505C10A72727C456318D6BC0D46ACB056B54F16D5E89220C570B
B74FA8A0B2A4EF8FD6F9FDE53184774B540FB2E5B85B87A2C639A44D57299E74
819D5DFD4FC7376BCE54C66BE211D4AF59FE3CD09A320A27237C1093A71B0991
610BC71F1B57D865E2F5617E0FDEF8CC6F0191A64E4C2598F2FC44FB8B75A095
0BBD0F87D923F11E2A523B84D767E06FECEF2667154631EFEE62E656F2F568A4
6E9FC032A9305F2E2FB288518A95433D89D8F318AADFA5601622079A3A8274FE
D3ACB186B01B06C7598E884034FF58673181E9FBA6C0FD8FF9927550BF1D9E46
29540F84185B45A4306B2C63F797C5AB2EF2F3663E82C8124DA6ACB834326908
6CD7697402DAF9189ED032AD6DB49C00D99607820395B390F4D3600993FB0ED6
014794A296FFFA670824E3E6A7E43C90610F387DE63DA325E77A50CEBCC0C821
C4DB4AC1F86C890C95727E6D4E1390F94566B4D8C04183BF52E41ECDFF7C734B
82536B89A1BB01A1ED939216637434D513DAC0BBB84F55EEEC93B9CDFBBC9922
AE311F6196EE06405A86EC5BE9C5F8CE608C652E3FD2093EEE28EFFCB5CF9E3C
B4850F0E80BBEFF6D6952090C3BE449B95A941435DEE55E6E7EDB97FD55C537C
D055786E262034D1D7ECD1F7295D6C6037BEA5C1BBD536705D13A5E0F7806FD7
FCA439F9D4EE87DC25F2187CFEAFD2267317CEFF1352EAE1AC9E6DC0BEE975F0
914383CD0BD0C9F489E5E55C5BE6E821D353C4381B8C3D2404B87DEFB69C16A1
54B35087247735D94004DBCC146F2C9C8BD22114EAE57CDCA231A0991AB7B1B1
256AF614B30977BFA6BD5FDB3114F2ADB20436C785C7384F0CB1C29F5EA81094
E150E6804C567BC75C522E8BFECA044B7F1568368100D2C1324C876B7909334D
68804427C5A357A3669C3E24128C8CCFD0B49AD89C990E6B61A6577840FEF06F
AC2A6D0FE7CE5EB60ABB4B36078044FE0EE7E27F3546857124DCABD0EE5B420B
C629D8F22B4EB53DAE4621B21B5FFAA422D89B7A822A7FDCFB80ABBEABFBA94F
D6AFEAB78EACBAEB222C33347A8B214D12E87A3ED65746C2FD051A920E24034E
D4933755C70C0E3E947C71A8B92FA1AE80E383C617C7590377AD2C5621EC6DCB
A2175DE525C11EC510679C16D6B5DFD789C7379F98C25F73C6E686B5CE92A89A
3A8EBD12FE23B275E73DB43DFAF6BCE3FBE411D3495DA226F184AC631315BAEB
74733C284E673973C2BAB5D4C9A34D27D2A44E52D046375230FFB678CD1F94F0
BEEE28C06F95771600D96A34C402FE1BE89763C1E1C248F4FED554E517122068
496FB3CEF6F5C263280E64B088A924F2A3A77329C744253A9A783F4CF743694E
B97ECBCF949E5C7B5C806B5E9D15C364FC287A012B955014AE30AB302AB58E5D
69906CE2942E4654AF7269E0B48D673A5260BA9AA32E9C67B46F6083ECD15A2D
37242CCCF6669CE9F9B2125AF690787E67C7BDF5247D4F0E7218EE72ED3F52E9
A1D30303175FFACAA48499EFC0624BA541F7C4C39DA26BC3C90086C32FCC9B92
96C95C95DDC8E8505FC6086C576394869FA02D26EF4110375538324BE23B04DF
7F40823A04462DDFA36D2CFE25A8F0B1D9C392959041DAE8BBB8627E2A0F44AB
E509F2D38CB0669C5D3D3B372D7B1B96F29815F2B3EDCC903DDE353F6234A1B5
AE4FDFB6307E4CE2616AD18C124E3198E8009E763EECFE7B13CEC4BB96625C03
671D60CDCBD14130476B6FB81B79B052CCD45BB09DBABF7E192009214AE2A150
3CFB96EFD19CB5735BFB15176B64B8A479428FFEEE0FAF720EF8D491F2A822BD
F065B64E2C5451D03E8ECF451F90AFA8B84AEE0A48A68B5087C39241C9A50E33
677C9ABCB7EF5DB43B10884FF0143E2FA15EEAA5BEB4C250DE77E689394E5259
EF312E600427DEB60865F491D20B9D163E47BF995E2C8128850602391F91B000
1A4D07B3E756BFAFC873F2DD341AE96DFBB8E880A562E0FD559AF70DEC4B727D
DDF635FD084362A6EE6E9DB2D698DFFA8BEAA18AABDCF516EAAAEDD42B644E84
D4BCB2E24FECB1411C3C7F71109401B7DE8BAAFF22E34E624B6F8A1DE9C19086
AD73CE28EDB9811E104D44B99D5A4947F227D530075E3E47740F58A815FA2CB2
4675198B3D543A803AFD5A3A53D5893B681E074D10084169E38B298504D131EF
2680BFB70E12B5CE0EAB9D43D3F87344E4EDDD9F2A4D12200E9001DC2C05F0BE
11E3EF89AE2F2E99BA387348D939BB76581B6B2E7A825321AAA2B5F5D6C14D16
EE3B699E4701871AB12E9C4DCB16209208B206ACF1CA4070179ED37CEAF2D9D2
30A5AC67FEDD35B28DF68475FD4885F0054780D16E3A4040A032944607949F03
22FE1CFF45C997109DFF29180CE9AA376E86D78F26D561EE0B0B8E90EC174E79
A2A97CBD2834834868AFF233B73B0BA3377B2FDEADA36F39DB5649B1054DF82C
8AD99465E51508215987A9C03D126A0611A8912C24C56D3072D6C3F4F0F095AF
2A616A5702D6DEA57C3B4617EA74A21D01C7C52E8220C18135A0E149399E1A2E
ED0AE903601D7FEDBFE14B9410248F1B029F13DDF50B2D62369B9327FD7FE14E
531F6487398381C88D052C41093A14D4FC87237DF86B2BE2248B5B713E0F506F
D87D8C42BA93AC9D0B851DA640147780A5F765A3C50AEE1CC3D8FC843C5A50D3
21E31704600E80534D7095FC3537046C5F45B3A48F3FC535EA2ECBDF8B7DBDE8
44184CB21EA71F6B59A3FC9547E3DEE62C50199818F6F979584182CB9FDE6076
4AF8A6C6C821276D2FCD0D938FC89021A28742BFEA1D79EBD93DCC7D23073A2B
D2018BEBF8CEB4289961C32252E7EBE822AF9D58A6D165C4893A726D0B8B2E2C
EB8D9857D8C39ACC3EF9736E0D3777D7B81B07D3752407FACCEEB57C555D8A68
0C7A64BDE6664E0A6C9A296DD7096DD8C36FB789A4D8BAF3D9B4B61D75E055C4
97B2CA720268ABEFBB61FF6C2792F45E7B07C0AB52A962CA1F7DF17549DA2CD9
130B35F6E13EF0E79F7FF8D59963D84D60F4B05E83793C1E063C9C62A91B7CB7
C1ADC3AEA23DB4E2690F7978C04A84026B511D24CC3728CA0B3F976251A3A8E4
62DEAD267681B3D1D29FA44241D5CD0307F3371B7268349EB4CD4BA1EF05B4D7
933791139600A8901C245ACCB78B53A60DBB87A7191D17FB63FA27B6B8DEAD6A
5249059C7FC968424B8C32F48F135E48AFD62119E4B424FDDD8FBA9B59616BA1
E82DA183C07AF3234ED0389E1AE580073F2FE56D88D89B3E8F741E5EED7A0808
10C0B0D493535E38A57D0464180D81FBB5A7186D5632B2E026C2F13B5B38B548
CA3B20C948CE37191A6476589A8B6ACD33B14E7DA235192BDC6B3F9F8DE1E5CE
260BA62CC1E144797D06F9A9B8B13D7CCFD3482AC8A3596B6A150C9571C8D22D
691523A011C05627F351ECDE9246172348E168F280F0B26DAD0A09DB60AE58B1
3617080B3C9E302AD28DD1B9FA0545EF537DE47C2F6E2609D3EB2E21E30450B6
617DF0E333B19E5147483F621DAC70314C8B80ACAD11ED8024A9165917637ED0
972AF2C74EA1ED429BFFE08EF752DC4FD2632CBC1F0031A047DC62F8103423FE
76CF7B4A7D1DCA993E49DF08DEFF57C31AA043C7044815322F4AC0A4FF8619E1
BC75FE8E68AB317901097167437A317B1B48D3F97A64BC26240BDFF9724B97AF
8BB049DFDDF04C3975F3E7937C62E26331A57EAD4885FBC5E92F1DB6FF53F65D
A425276BFF161768BD89B13662565C58B862352289B96298B8A7762AA720ECC0
B3BC67D388497448849136F57D838BD67385D2823DE6A3E6E824AC06BC98CC3F
CD6D7E9AFE6FB5A79E2AD16D6BD85A4FE765D971E0EFCDA00813440850A420EA
B4FC793E530EF2A77DE9EC05EDF84557AC6793465AD6A56C937DCDC38DDCA73A
B799B80C79B8A3FE31C58B9414C8BAB4D22665B92444ADA5CBD87511E33894AA
90336C8BF3F3EC02DDBA80B21DD810184443A741FDECA8B88017BCC931D2FAB1
AEE72403F659A248FCC1BDCF5BC3A3841AB5FC0A5BCCA61C72ADC24168FE3478
A452000798076F76E4FE08FF2039C0A616E12D7F0D5E616FF77E0C158DB82A58
353B3600DB043D5BC2AF22E129EC12D6907652751B87ADBEDD1AB3354273F211
F3B97B1BB58588915DB13BAB2740AE55F6E18E05D5E792AB6C95E7A677C684B9
70CC6E7F2187E29F829827E114EF63
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 181 /theta put
dup 185 /mu put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC466A669A15614813CCF13D5DACCEFC0044612E8DA68D16BD1CD44FAC85B
77D4EC8E51FAB737E69A5BF653B8E6BFDCFE4783C4DF6C06F669EED412848DB1
C2BFD00F84455918F6F7B0125E9AD62A8D51C0DB9E7286A8A2312B11DE4D3837
1E5D5E2FBDDB3EE8368C068CA768739C7B57E06AA6F782FD61F4CD0197B54D1F
72CC1A4B453A0920138EDB762E346BC8E2A8F6553E36CAB0C885EDD3446A888E
ACEAD92836AD20ED17EE01B6180C5FE760E53772B78F1185055016EA9E3498E6
6A09531570373143C1FCD57F9AC859F6D3035819CD941998A80E30F663817DC0
3E66AA56D495BD865D0417D76B247B973B4D20A126E4C21DE96B66FA31662947
EA19A9E9A6717C84696CFA3F766AE6C7DAAC618DFEA66CFA13AE965CC3E3611D
7ECFF930BB85F19C7590BD7A8014EF72309B1B37074F8197E9F6CD23293AC2AB
4CFB305B79B4731E9A49C5166A1117E60E07E5B826FE8C2876D0C676D911C82F
5DEF8F528965E62B205370FCC38C81E7D3F2E694CA4BFAAAED65F1721F9FA70F
3BC115A101DB54DC5A94214BE154882959DEC20E6020B7B39241F057B6769896
4AF6D874D0053CD0E7CAEE047F5625FC0FAE57642EB1AB0BFB10D6BDC36551FE
A0AF7715082154AE7757296F7BC12E589BD90162836F29FDB50E23E372CB4186
8B4D0F059A50EE46263FA1D0E13F6A927398CDECCD953E797C64EF03FBCE345D
113E4B46F435610A0C45D0675DC4836A103756EB7E622A088E088FBA87CAD128
7A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB2578337771A93B1617F5419CBF89D2FCCF53FF8496A
2F09540CD2E6BACA74151E5CB66BCC1F03B3C9BA42AF2F157AF42FDB1930D18B
1F2033DF50F61ECB986B1525001E64CFD5D0474EA22D69564FD4E82BFB949356
37F6D5E4612D2E019908A2BD371AE4DA568C7C21E83D0FA04C337BD72876E7BB
C0B5D32A5CDF70F0F3DB72F6C89262B31EBE459BCEED8D80A2C7B3B71C87296C
2F199B482B8EB8CC030F72CD01FC6002116930281482E05C9EC0288EF5BAE22D
3660A6668B44B636727D1556D2724B109961E3D1E6C9E9BB62E0EC1D4BA23F17
429739E5204DDD6F3712026FAC9B40B592E8B482081C4C2E462E0C570624BC2C
E7871FD9CDE68B8A0AFD45C7F5C596161F7B921BED16DFA6E584333C38C76240
DEAF34C1C1A3BAC53475B595D21CB37C99462C333DA14A6E47CB5CD00EBC7607
EC75EC3DD97B543314EBA01F6298242DDCFB5BA1F2CFA784EB19907E23E34786
9452091EFA188BDBED24B33D2C3EE3DB6B5FF22F1D18282391E9CAD49E9631B6
CBDAEF1A53B1295DDA586F99168BA671B0FDF9B94F0D3C205CEB32AFD7EC8B67
E6C73F49AA4048628260A88581F21DB4FC13EA4507F3903E1FDAFA7FF188C5C4
55A6398D7F3FB00EE330BB8605E18466C60CD8679CF2B600CD78093637901C93
56CDD3C93C1655AAB1FBCD29DF30BECD3BE0E687C03A2DD1CE4DFC913657FC9B
2871CA2F9FA4B8DAE1C38E02889999CF6AA1A17D9588DA60A80125F7D7C6D44B
93E60F2B1E6293D771DC3FEE7BDCC0A431CD7BD111B6B1A601C11EE59C4A77E2
BCC6D804A00AC0581C08640C77A1A62B40C60B13642E12265FF9BAE6D788B827
35C92505D4E5771BB789FF827C9E1E3501BF90F00AC0C43C8DB2CD1663AADC4A
6EB84AE87094F6906FB3F4B3DA84FA98DAA11AB822DFACE554A1BE9C8AA18995
3BF1A2C1CFF614723A80DE6C041B932307B957C55BCDDBE2D07055C45F515E5B
0152F3EAC944D970B22DD762BC15EDEA4AC46A3B124549D4D2988B64327B9BA6
9328B79DF267A46265AB1349B43F76E486132D4CAE5310B256F7A838B6547314
8441C374C2E9FA51041E99019ADC3D52BF3636ED201011C48CE48EBB53928008
53650B14414FAC37B3A34E2C1CA5A4367C59D0239F0F3E3DBD5820C99145AA4C
D398E8FBE9127BDA8CCB9C0E8DBD6E533D154F91B19A68DC6FC74B95B717A5FB
0375B8BF78326613097E8C3E049AE16F7D0560BB4CB1406BBFF2B1DB79FDA940
7779E5F1226CCB5129BBAC6DF9A9B0B92DA606264741A633FC8E95BDC869ACED
530EBFE82BEBCFE64DC0C06E66E0DD16801EC290AB5A1A976B852A16F2E6069A
4B374BAA39124EC3E26E18D21398BE71251FDC89B48E1A26592F2F19EDA4BF4E
119E30EB552F572771A4A225D90262DFB9F2A1D5D688A97BCD8909E60497274A
FB8FE87CB5FD773FC45D63D32493F4B5C06CC9282503EC4E5FBA2C4795D26AF0
00D40078848CD9B0790D8E833DCAFEDC59C847DA6595EDD1A68BA4E71332E95E
D68C264657478652D416A5EAD0CC0002900E8654E122789E5838624260CE99DB
D76E402797CF2A25C5A6A76662123D48126EC28B86F24C577C8D6486D4389A2F
54758ACF192DB3EFE5D98D0A9A0FEBBB8944053EBFF22F98B71048B8BCAFB1E8
4837C8DF4476D32E6D8DE725D533798181BB19927F2B1BFABC0964A2142A532E
CB19FF523038D977823C02104886F868EDACF57239AD483C233809F392156948
9CFD9323A72926E2A9FEF854CD620A208FBB70137EBB73C4EC4731AA4067CB0F
39A81F346CDA9DE42B465CE349797B6E7ACB7D3C7E8FB1B90656F584706F4B7B
12570AAD54201518E0EDA23940E249DEDCA4AC944CA2CABE64E4B9A72BA7F660
4FF7C03DB5227741DC08808F4B3E81FED05C0F165D34184E5B741E37ADD32459
D101E8FA7C0936BF1F37EF92F6BD7B6E7F528CD8DE0D64677CAEA045F7E3176A
F41C0E7F6AB97509F346E567FEE4D90AD6A13AD189B586A88A8B381FEF51F267
6A6A9A904B0DCEB70242A9A713A005746C4B0257E5CF5B7E826F513305200C2D
BD76C6A2507119E7B929856F457DD153896CC8064881C5EB194843F8C156628D
378DF6A08DAFA5A2BFBF051397CAC095FBF074392D4EBF23D34FDC16F7CAFAF6
ED7DE6AAE26AF1BD5E5772C9CCB0F46E31A8451634796CC48277263AFFA3D162
D5E80DA19A051BBE3D282FEEFFF3E9C313ABD7F917F8F4E4C61132A5F4EC997E
02BCC5B48E2BECBD0006D25B49DF3913DEB54B46BAB0F614889A270622DAB445
F2B55BD98FCB72001B9D0C724F976D630DC6F2532EC9AF54218EBF2D9DF1620C
80B4F0FF94DD8F13016A4DFBE5AA7D8A3A0A470A7B89B75656091DA3D7014E48
E4AAA1B283123A877B81EBEBEC33431C1EC5CCD80AF416C079AD2DC5A21D6235
5B0434645AD290F446B1ACCC064A7F5C668B4550CD80D23B99D098F7163E6740
D4216762145899D1F13CE4ADDF8FCD6E289C2B710498752E19BD0DE236652811
2F72051FCB9B24E3C1B352595ED32716EBBB56A720886E4FF6A9F8F6DD76A9C5
5F64CCC5D48CF495C1422C72B64493E504048EAC8F6969FA394235CAC02F77F2
CFD2CC7BA41FE2672D5A6EC1128842BCA8EDC0BA0C3CBF690D5A6D70EAEFF2DC
F0078A951563EEC302D5E1F82A5D77304F083AC6179548E8346C26BF40AA07A0
71D513F3D2A8CFA1276F91920769531DB9A8BE338503B9119979A8EE5E0528B3
671D50820CB8EE1183116E19A103C3DBACD21613127A4120EAF21AB8F22FDA8E
FDC9424E0FA65EC40C8FA0EE345992D92216AFE4760B0C7A7811DFF2F57C704C
472E65251B350630CBD27D95C4B6401ACB51B108F11708722437378139559654
B5B6A625C6A749C3666829BC9D9DAF825C4C1EDF35D2B3B7C856F14CF9522FFD
9458F3871F9F8CD1C3D6EF4602B3EDC0DCD19B1874E0119A774B9835DF080030
75C522598853720D35A16BC7E76C2FA5A4E53930BBDB54F89BA6630E74845861
9DAD4E9226853CC710141A10921765CD19CAB0FAD3B555B32E0FB01AB54EE1CE
32887BD4A04494319E7EA7F3238E6D9BB8E9664CFA5C84838452A6F184774675
4690D24870F1256E6DDD5283CF4C308C9E0CE1B189CEEA9332ED353FFC3E2F61
4A4A57FD12E9F3DEC934588B54A63AE9CC7B6087C9C1C52E192282EE69976EE6
BC4DFCD1F6F1052FCB5B935B478692084792AB8FAFB64C2C4C7EADD2B756454A
AD30E430DCA0C55320D75662C931A3DBE8DC1D6F81D389BFC649DD8941C0B5F7
CE616D94820D0C7BACD605974A0B3707E44BDAFE5A2C4F86F35D21E3098DFBFA
3294E9F0EC054FACCEE4E12B030AE0D5E7B3CB4F458C94BCA7DA8AC640FDB6EC
9675FCDEFF3F08E295E6B2B40C7843C599B68E22F17EE1CA8433C899EFCA5905
8620D20FA8420C869BAECF7B0F4A5ADA6AAC78B71DAEABB1C73350E34B9DD46D
5FE53578DE1E2409AB6C9FC24426441FC692E6A6DEECDE3EE487E2E4FE42BF0A
DACC405CC8B70A9AB2531C287FA48581CF7DF47C88CED0B40663BB2B883DCA9F
E0A023A3DFFDD38D8A182D99B956AF218EF183713ED50AB68A0B2295AC45F5AE
9D2D547E2ABD44989A42B2514C24CD74E04A36147CB94FA12C35B978E02A99CA
31BA75666C3C4ABB6F15BD9E256CD6920187A60A5D45A0357FA897B8373366E0
26A89F300C452591BD935683E85A26F3FCD9F2CCD28F4C45B6C8149D713D4CE9
712BD8D0DA3EAE1CDEBED2AD5A3ED9D600D1D31FC12AC94CB11585386E6EAFBA
E7B9C34FECC6E4FD664F28AF07B534BC385780B83704D373CEB3AF59E0515D01
18016496DC4C68D073F0FDDD8F2063EAF6464A78F4D01BEE1484E84C012FD6FE
52AEBA66664B26CE3BFD0D6BF0E2D85D38C5429EFF08414EE09111960F18ECF3
B1FDE84D13998B3D02B04C0EAE0F92D058A8F31A28669128CFC411927016100F
CD8CDA361DC3C7179C49BEF30CC9C88A2618DC94414E10CEE8039BB28B7943ED
BC547BEAC51A70E6342A8524130625B70FFA7AE5EDCE10DB82A08F3A3AB7EAF4
BF4E16211A12C8EAD300C82817982134990233270722B55CF31782D8BC41001A
3FBB43911B96C587E65FE2D318B5FA421EF16E0E077EB78941F2E169D2E94BE4
0B2B951CCD2E432FEBBBE3CF3AD01D7138DA8832CE7F64649BE0858FDC6EBB6D
2FF79017D11C9AA761C14FBBBCD1513D11FC06D303B135944875E8BC20A56D09
A1B5D3696116BABD5757BF10572ECF09F29DE9BCF2C24F9A9A16393D3EF2DF95
F3FFA77D8882723654C4992EA47CC17D5ACF610D35ACC354409D0DE2BA896BA4
BBEDA04CB1D0FA96F3F193E075FBFF39073855E2B0F9F7939B188D36B2C3073E
E3DB3D67A2D10F9214878C181A430825333C204382D9955F9061A59CA7AA6FFF
F20ABB53201A9FCF3F74FB64BC0DCEA70D0B3191166ED098D323432A488CD00B
196F6617BAE9C11350BEEDA285C9646219F10185FD5FD8B3D978C74BEDA6AF05
24C9362CB7614B2FEC80050FB9734E92DCF088C4C285909649CAEE60E4785899
C9A7E5040AC9A1348DC7B8AFF6C2299D87579E8A9A50C24441C2638C35DB5972
88100C4F824EEE7745B85F3948863916312E4F078CC220E3797A760A3DD64001
2D108ECD01222A5CEB4FE9ED4A8BE17370C4BAC45B804068FD02E22FA8FBA3F2
78B14D7218150D480A76AEEE7039B5B04BF7CFC2FC5813E05A4A8DA3C2C1E2FD
6AFD5FEBBBC8675CE577225E5E7999035B0FFE3EBAD70FD8C005289F6CAEF0FC
59B5002C2EE29071928549DA5367B5A9B8E0C471E64B88033E05B48D332D0BCC
D1045F30A29CFEA10DDE3F1FE2A9E3630D1A55372FE670A9597CB66F5CCF55DC
48A6A27845585ACE25A158AEE4BF03E66F3D875B33BE930DF3E73DCF39C65020
DDA0BE0C05C80DDA7E444AAB55E46F84B9D744247FC4EF82C04D17AC92E82182
172644D1A724A3310C3CE806424A9F151E01717014FC941CA9BC01483D8DE50B
A88E5F1C5CA9A28967C8ABBD40ABB0CC107A3B52EDEB70D4F7E864FF7320C2D7
50718D8B1225247062B3716E0D02C68407637EAF0FD8F7382B53F8D3262E9B96
53602628FA113FD3705D73BDFD4B051D830DEEE4AD8FC2CBB20435DF284EA3DB
C126999AF47447E6CC9071F4F96C3CAD58CDD9E38160EE1D64CD73965546DCE8
DE3B2E3D4138012F63495145FDAC57C03F5C52A4EDFA25F24D7A1426934B42FC
6462AD9CA923E6851329A38E96B19070C0AE691510FB0572AD06D6EF7B3C9658
6FA88B76E64C86655EB950D131C7F302A2F9C9E94ABF52DD99FBCE6F63A8A084
1103123F6B206E4A979C9357FA3D1B6E24DBC6B634B92B3ADD040C111FC5B27C
AEB1C171E41DA78266B1323471237C29C338610183673447CA06489933A6C611
B5C1EED745ECAA9D264092B31A01B8620C0817E655DC385B2E2E3B1982F655B1
0A77DD95E309EA5523CECEB52C86E366561D4FD8CFD7A6358400DBBF9497E345
3AC21512E0C9D1AB2DCE37930CF864EE4736EDE4ECF1BAE72C82CA3579BB6074
04EAB21E06A5A8CB75CC4D0754FBD422A52DEF62E9C83F47C988AB66B8399771
B0B2912CB9C2B27804D8A55A0140074EC0DECEEBF7774FB05135AAEF6F9D84C4
DF45D8A3A0E28C2B6D4AED6EE2092CA78B984ADD836700F0F5BD0FE92879D78A
C6396BF1D17A6381B58E61AE1E09620E929FECEE64779D73EEE63BB1BCEFB146
A11C390D9D238D43FB421979DC82252D018C3E58120AD2A3F23BE4AA3F7B016E
18B0F5F128E4E336E7A5B41E03222B745D009BEC8C5951709E8D139FD4378FE7
BB70E6313BEAC7F7A2357CF0F80EF2E7C281D42A3C670D795CAC842D0A31DBD4
24A1C6FE77C016E242984BF9AB7453F46D57B576A3AB567563D090FA95B668A0
539A7CCC8CA2635DD7C68D33D662DAE00DB56AE4D916DA7819674E82E6B49A5D
F8FBA51E499C4705C8AF43175154CDA558F505002596CA9C386417683BABA32A
4C229B1F600A210F389D6B85F9078D1B8D70A15A766CE31F8E0FB68CB9794B1F
862B102690CB41002BABE1573C58F6F08C9448A8B1075F093559C1FD38C233FE
D4D0179214D9E099F0AFB8FDDCA42502A9F9E2E321C96FFF33F3C96178263A74
5345196604A145C0B809F59C19A8F76B02D78135D3E99E366A0241068612A800
2ABA9F1CE9F6B81BC795F09DC376BFF41E07AD9A6717D7122B4E382708A1FF16
B79FC5226855F3BBC478D2E4F37E643CBECC954A4CC3B338A4BE0AC70C454C65
71CCC0D005B3404AFA78F3851B2AABBF7BCC3284E791200BA0BEB99D6ADCE8A6
9B20CF78E8BD7AD898D1A108745BEB8CBF8B59A39820DD18A9318D4C748E70FD
4FC6270A9A8CDB72282EA0F8081975613E136EEFD5EDDADFF42D34EC33B35955
3B9CE80EF3BB486B3D1D861EE7504A46DAEAD1F389D11C4574717FD3263BA060
9A69AB3CDED201215141BE057A2B04B90B2698688EA39EF3BBBCEF2EB65FBDDC
A7F946CAC613C729835D85436FC29744FCE05693E0ECD3DE063E9726DF90A8B8
73F4A5487458694DF4BB1CABAC9B4C3B4C2CAA868187B8963EF1B37760791DFE
0C6E35B38DEB8A509042EC45F2B1635BA25E27AED5AD7E1974C5B2AF806BC3A9
75359FCEB577975F67C51B720133712788FD29A806EC1AEFD8A9FF8572EBA90C
6B7009640116FEC606ACD5B1FEF07755BF55DFFCFC48290D79558EE1628BBE24
429EB3070AE516FFF627FEB9FB28B1B954A25163C26DE5256C9F142B21896980
91E65FC3FFE0B8C9756CAD7A6F57EEBBA67B5C2263F83C03F61D56EC16172C67
15E1EA262AFDF2590B83BEFFAEBA1CA6F78D5F6FA9E7857C2C63EC1171F8A8FC
CF41B71CF5B0764B6036E65B4E5D943EA180E8A3B50A41EBB8EEB89229D7CB0D
4BA59B7CE50418BA7012183E1EB6D591E47B219568FA55112E4AFD677DF75583
35E526E5AC164AFC42453F87175877EFD310D8FA0786B28FAFE35A96FA3215DA
3F0565F63B26AB4E3CD426A85761F994C6B911EBC83DAC5F2BE6FCAC9918B336
96BB0D9CA6F35D06192A28609BF0522D8BB741F3C7ACFC0B1218D0E707D2C73A
D19FE993C90728B12C2C026C4670B66BFAA4CD9E8C77924138EE471C943F48B5
193CF6B4C68AB159FBC0F222130368DE7398C0D2F9B4A3A55AAA4A06DDDF6AFB
CA8777A4998D5053B9F6EF3B41D2A101061D845166EA7162D1E441491E3E4FC1
35852203999E1F4819D7E139FBDCDBA423D64D1690160444DB29D79EA329FB5D
07459B4CE0A95A841DA48C4908628387CE849688C4A3D83CE55E9A39346F1264
1D12BD07A1E6D46537FFE99217FA0660D8A6F8CAB4CE48D0661921EB464BA1BD
08342023D868360FCC8C3C4420FC9820CCC2FD114138902C127C95C832B94557
6CBFFCDED6623262B6B1A07D949AB96B94F4683D50C7ADAB36A7B3473B3722F2
D8051F5BB0DA6712A3DA3DA3A7F260CF091C7126DE4D6FF628741A2688292CDB
0132384B87250218EB15F3B0C85C1069666487E28F05346C1160249AB3F60C48
1D525BE1248A54B76114F032171465D50CEB1EDF35AE4152B8A5CC737651A35C
344A7CF7EB2EC6D6B46E15B2A89A85C4794D06B345D0CE89F9F1D98AC858DD70
4CF1A72881063C7B1D1ABC5E5BD95580C1621225A259A61E3D76F535351FCCD5
16E1CC77F22CD8F0DEB22C2F520A0322A531359228C91292DF873C12BFE1CF68
3A51D9BF695FEE895ACB4535C39E9C9904C8EB8090679A09E5E21E9B8791F9D5
7AF2828498300BF404C23F100C86A869B11EFBF5767C33E6E3278D7D99D4CBE3
3345607FA7696EB66006A2491233CA839AC5D7DE02ADF1FA5AB0BDAABD5414E8
8F4A272B1EEB812861C48B1D353CBA216C83F5C4825B02BFBB9C54FFC8C8CB15
C00B16C066D63EA4C1D2A50D13D4578F977D37029F5B533558A36889FAE6B891
99069F32DA71F2912F5174DB777A65438D2EF4F92431ECC81727528710CA04A9
908733173E4BB831F91F7CC5CCD7F5BCFA2F280228C8B0F96907AEFEFC1F0240
20F9B738E3D939EC76C308DCAC329DD2EC3E470CB15F38F700AF0C1B57FBA2F0
7E368F05134161F402599C6C1564CC0791D847FC971213AF6E8214C4057230B7
79B8F206FBE09F121C923D69CD2CAB8BFD314966275510580043B24724054CA1
31A05A2CA9F92ECD2BD221BB041EBEF1483D1BE725A8ECE5BDE4660D29182C8C
2839E72F50A2DE4B6084CF315C7BF050EF0B1C42169287D9979B82646D6B3EE8
E074B6742A1875A3AFC7C565DC15ADFC20506E241E6F809F5A0564429AF5CC05
4476BC982842784C178C1C4804DA51748399B85BD192B5E30EC5FE7718B4F002
F19DC0DE672884278B36978180DF4A64763FDFBF440F794456FFA072FFEF1A8B
62C4E2F368DD836DE60DE54324528B25A25AA2B872B756618BD1E10A52F141F8
100D70F333CCEE556BDB5808766059067CD3DD433D52C77BBA7B8688F9179AA1
E370AEE9C280D57CA9941883962192FDF0CE2448525929094C0C8B3F1C891196
F9A563D3AFD17FDA5F3416729E5A3368F148BA5AEB055D5841C0F1FC70F5E423
A158C73D306BD7A938FD6A58590CA82CC190E226B3B40743D0F234829BB8EEBB
D3459DA1C424D48FD572B72C2368FAFCBC925FB754650E85A1DFB3967CD016CD
428E1CC93EEAE83707B6DD4F41C627D5CB79D0CA46C7A4421BA77BB7D1B26372
40918271FD617D2E56C9D5B02A58036B15ECF988B509EB7302DD4B6EA30F46FF
7ED5D2F6858FE44DEBD217DE013FE008DF3212A24BE490AD57A71507A6001113
B12DECCA2D785E1EA0EFE8E5731D736510084EBEA22DF14702DB3AA76C52CC93
0FC15A87F05EC957F8DD7E4EDFAA6BB58688949F74A90A60BC8762D26E33478C
6EC5AAC8FCE3A149EEDC4F60C22BC4AEC1E68351B76D734A5F5935A4104F695F
20C03A5238D53815E0C8B59F9895ECDE9DB974547894FF25ADD7B0D3769C97C8
914D0B4826C5372CC313DA7B17E516D771431E413C5E69B54C0534137562B717
43E67DE315D6DBF4C0C7733A6FE9AFB02D07CAED4D962218383EF90F23B01EAD
2BDD03F135CB4FBE03B45088177E17CA7A7AB68700D3D4F373AA9B7F582C86E8
E8FE7C7C690DB088FC0687647C2FD361A699A0F145F065520447620F355DFF8C
107193C3D13DAC15CEA02015A6086AE98D1B42B8138B08CC726ABBF22CB60C62
3D14C56CF86E994583136BA8B79AB1FAE88EAA0CF06C0E9097D8CDAF5A6CACCF
EDFF83484464C9152A95B64BB9244ED84F07A73A5BE2A9E5C1FF9DF896D10A5F
4173046AE1A5671A9D3CB8AA37C6ABBEA5F520842B335D7FA05AD3347EFE165A
1924178C9CE3C7AB4A1B56232BDC799D2900C4793FCEF4785552BDDA70D9372E
721ED2486AC63D03F840F4CD5AD52359FE1AE0D14C5E14D2CBA84E1FDB747483
B5A2E3A4625A696D577CD24C01E4EBADFF2E10D5494C024E253724B5FF26F1B0
64B20708CB19683173DBD2D17319517EC275F24357CB160398155BD530474AEA
FB44A7D712CD229BDE08A91E50ABCF8E0E44A6BEC65D0CAEBA92E6B7E141D48C
861958C2E21ED1C80FD7A7030F8C7773762B18FA9D4FA6C353D61B4CB31A85D8
92C4ED21BA36D944EC5F076DA0479C8315D1A4F1A16A60B1E9F303A18891A921
73CA429E173F82B89450EF7B0D43875C576DB21D44F5336F8EB9C4AF579DBD8E
F2ED0B5957BB00D29367C87109B27B0B383BD0B23DDA7CDAE73E5FFF93B6505F
4C963FD62FEDD8722B7E2BCA16C510BFBBFA6980647BD38C3D012BD831BE286A
51EBC612072170FB0DD19618CFAF696F713CB9295A53B9711FA6874CA50F2154
028FAB0F20F238FA5C9473CD15204A48F87C05E5D98B79A147396D5539F9519E
A20EE61216D12E6ABB1BECDCB23458C4B4A1DD170CB2865431F08FED2187F0EE
44A71F11BFBA8A99CF1F28B0BD20F62CE150FF0DB77E2927D9416E3A1FA276B0
27A418DEB2EB2EB2242AFC71571001FE685033C7E1EA0B2B5B3D0AFBBFC88494
AEC8B462B894E0077709663797EA6539A9E5048E3989FF97EBDCF50001F5A55C
03024B08E522901438BF1C82019BD8B60915AD0E586B07423B1004B0ADFFCBCD
9A18FEF10BAC1892E236B1BB0675646D4AD48D6DB20002A42EF684C0DA266F89
F3A0DC300EB34672AA7E5587896B530B07F5ED7B2E617D6241BFC268474EAF2B
1717828F60476F63DB11FCF375285D9F688B1F4E523C7DFD2C735419DA65AF8D
6B38F2867F70AF5443418E8F1340263E65B51023E05903A67A4AC7694B84DC67
6A2EDE84A46AB2CC7F09643BC03458A6A578F45764486FDFD45E3E44D28B0A99
FC44E49D5C8D95EE95F8BE4F05BEFA77BF6B4ED7BF63E0B38044F1B2584CE149
22AA9B63C354E8017CD73C4D2FF8FA61AE09A4D1AFFD218998E35B40F849D3F2
30B65CB6D595DB32130C388609F33DA47AD38D194E66BE155CE83F89145679C5
1B1935328249AD989A855ACFCC145975B9205607469FE1202B31E516244A06D4
8C45388850B88B8273F9B4C534B8610A5C35AAEBFBD15BD299DFB1A731752564
4E895828FC2870E4E57B939060CAC33E30D22954B27550D0E41302E597B15C1D
BAE78B35812A8A6BC32A349C3EB955E89E356CB2277E7C160F73EABFA30544E5
8771AF7C7859A6D73164064C981D23E8325BE5666B20E804B16B38EA429C4A14
2F232D67B910085AE31D620480EAF42E0BDB28F2BA220025A85C9EDD2B195117
096C7493B8491EB8B63CCD710AF94102028FD1E7574F3C36EC81898D51DFF8FD
178317D41E88195D8374A4F925E98F0314993E87D7A9141BFBDD984F431A03C7
06F504B1BCEFB098222C7D404124120985CE4BA485509C68E26F2AFB77DF26B8
E33797676042C995A40E52625E1B104AB0DED80964D6A69F40A1ED8A50C0C297
D68CAF5E49149404742CB8CA8DE3EA17CF84670F743E3D6FFA6918C7EF5B7A72
311493497096F291193C157D2489EF224211442CC1A2BD8C999D55C995445EAD
417F17CFA3C3CA0C93592B65DBD5EBD40F53AC32B37B82D0B944CD3056931548
C9F535FBA1A2E8E2B6848EE37B0EE0887C46677FE1970E99EB4629D82972DEA8
8BD00151B28A1087C2A71896BFC1FA99FDC416AC85C18CCDB7C1C36B9E4FC6EE
9D2CF0A4A336D6D72ACA061AE91B4C2E939FECD5CCE1C49D47093FBAFF57D563
E90BD162D17EC84C36C3D80FD1CDEE64F9C3879417A17CA9FBADE71A77C0C474
F4998A0ACF73564FDDE8FE4F0B4A8233C70F7F51761588EC3823588BF7BFDC9C
29D11C51BDE9BB77C150D8F9A3ABBC214C731D7F215EE606121176E26397D505
2EB6500E2A1696D8526D14BF6D14CCBE4B84B9463088C2FDEC4815ACB951FC75
5347242F9809BDE8CFF2D4A201F45C4BFDC3E8AF4B13948D99FEEE3B2905A3EB
DF5ECF8D5AA73CD78FDE74BE49BBE17AA5F20F5078AFE556D1067F2C67541FAF
EB95FC93EB67BBEEC85C24BCB97A2A87578CB275494DB3E559C5F5A07C0EB793
5DB8F608C04811F392CA660F63672B738CC52F00F710D4D61B1F4C5E422208FF
CA2F7B886BAEA465E5CB2FFB68BF21871AEDC2771321F8DE91E79263D6858FDA
E5BFA9EF53E724C54FE7930129534E752E998D46126A381186807D5F5DB4F72C
9DDD34B614218B47EC13DC15E8DD8A5AE776BE4C73A48D40105A0C3CFA465D11
4E755A8742746DBF91D3020B8068B5DEAE51DA05DA67750FECEE8E9A00B8C796
26090A431D26B70358C8A86E46C978E1547BE4BC13E448FB954363ECA9E40F4D
9FAF9917EBDDC79D0901B80E679223C7173A88B0E78E84C92FC3FBFCF867A87C
D120AABC805F47274B8EFD4466AF756B7B00A3527AB0D29D0B3BBAD9265E36CB
4868DE92B16CAF37DD1B7874F535D8F0F5EE3330EA898A83EA1DE79B7CE6E988
9720B6B7F6BBDAA2D26C425CA7C76FA67AFBA1B25EA091BDA60A775221E6ED3D
14857D9FF1E2F7B0E140A53958AE4DD9191467EDA173A2E7F40CEA49158BE14F
C76A3C64840EEB977F5BFC46DA5EDA953176288CF5289F9BAAAA6219A668190D
51730640A41D76E4BEA69F8F5003C08EFEFD779F8414833A4E714AE0F8BD57C5
F829CA55F7FD8E4EAD111C7C7106F401EBB9280C40225AC04DEF058DE5836472
5FFBD25D0F77BE91F3FE1D7B96C524DE4689EFEAAACEE760FB40386ACAAB956F
A3C7625EDC041418785446890E363431223365937136D18A8FF2D17B5AB13F4E
F485C8FD61B369A205720F297FEFB8B92A16F5963FB34B23D950246B876A8717
0BD533456995F256EFC571D4821E9C70F5D452E179DDCCF6193C25983167B7EC
E29411CF815998BDB3FB2C085ECBFC92D65499CE6598916A0D239794A828E881
75732F64747A4D0A212AF4C117785D339549C29AD21391686695FA30A51C33F2
0C503151720810402A89347B2043F6C605BFBDCBBC99AFD584BC62EA4D0A2E3C
E3DFAD450A63FFBD5E23BD0352745B6325718AF7EA47A6CAF9F67A367CBC7E4D
BEE3F4251085AA3869745D41F6B9EBB2339A2C820802AE8AC7E1A530D141B1C9
441DADD217940B26E4942B5575FAE499BF9F4B133E32A5538D9BBC4CD9A48BA7
D2E88C6B3EF2D62241663541EB6796119DF3876C929B0A0502081339CDBD42C3
25050258B43872D052593675B4FCF53FF2986C69050DA506808E9321DF14947C
FA3DCC97477F8C211E8F8300DE468B07FFA385E8175275CF860632CD4F7A147B
860350E0F337F905F3653F62D5D7425AAC96FCE974000F780C9E87C5EC4B51AF
DBE2C40ABB31EC6CA1D87201E837E9776BAE09E9DE0EE8F2E76F10377989332A
867E6D45079AC8DF24B4F226D53CEEABD1C61484B3216F84F60875095DBA7A72
2BDEB46367451349C875478A06A85A8C30FB040A0FFE80D383AD509D27DDE897
C66750135621FFFA1BB473F1E5C82B51C44632E2D29A6BAB260BA80B544DC8C5
D5DC3DA126196492CA8BA7B76EA2753B98A0D6362FCD9622496D3C46A9A5E6EA
C1858C4A209756A70D677B2B5B51D9895DD484C99571725424A7DC9AD6D39FF2
DF47E85390980855325C544D4C49CFA860800EBD504E82A95B36F2E04F8315BF
DA595C86138AD6877CC6044888163B46D9670568AAD6A1F06567AB18136FDD96
F793BE71A9DFF565830651380585342F50D7F1FDAD801F4A6C32AF1990C1A170
90DF2E3C07770D67DD05F3B31EA5E82B0AF363F407D91226313606F1886A0F78
6E407BFA043D4B4088594A24C5C8D934E29633F5C8706FD89D9BCCFF1846D371
A4AECCD0E06DC36A30BBCBC0619AD29747CADEDDF13204A673FD354C9D7798F4
65D30B2EC038BE8921B68A954295A22EC50ADD3F0D74768F6AC7EE0477C73FE8
B0B4CA161D1B7737BAFC64D1CD9E4A72B61AA80EB93843800771F8A4216D676A
2D5813401A9D4366BFCDB5AF4DF2C6FABDDC7BDD8D42BA5F33535A6D9667E4FA
4455191C44FDD64F202900F2F022F060948E74879DC8C099D609DA91DD35A1AA
A1CF706F0CBB7767631FC9EC9738AEFA95FE9F278FADF6481488ACD864FE509D
2A42EE6F7C6F7AACC3245DF4CFF75D054D2D38514935392DE50E204D17BF66A2
C0BF99DBFB85411A382A30EF9304E20E67FBA1C146FD541CF4F4865AF146DECC
A865ADBF72E71B2FD02DF275AD87AE0EB9A038975A9120D3A2C628B485CDF58E
08634541D55A9132DC88FC1880A78C29CC125CEC80875857E3FD5E10B955427D
5AFE1DF3A2068B9EB90E510BCE433B66C3A24ED980834C815BB5165C18D820A4
276C2914CD593EB8583268D4852D613B9436BEB742BDB2F411D81A1247C1B660
5B58648BECCA9264B07BEC3F5B77D3E2F0701E856B1D484AE9FA88F01118EEE0
FFAEF5496673ECCE541270B51E10D00A5B0C9B5FB889F564B7A57D4621385DF0
F4148F10B6D19D11C5DE9C02A7DDAAFEEF087214D5B6B59A8D3FC56176387515
29747EF7FC16F1746B0CA053F5EE3E4A6E356E9627275398F341627767A5F85C
3F01F5863C2BA15DCBEC9459AFE40277035674F43D0AD0F1183E8DAF12779557
2AA7D01BC3218D2018C80E3E3CC58E1DB75337E6CA1985F727D11B5C4BD83B4D
D5ABF24FA20BD15A6C83BD20FE24464E7AD6E603884268FA973BFEA31765651A
153CCBAE6CE1FA957663178C3F8F48E761833B1E173962B2BE77C9FF179B3658
7EA2F3FC13491F99A68E239FB99D61C2CBACE337825773A4995147BB87392D85
194F18F4F7D49803DFAD801D03DFA0D54EA0092EEE49D2A44FF3E1098E4F55EF
AC2F747690B9C95911322DCA9B66102888300F0888156100D55491D372D50341
9DB00935375AF3AB239C902B4E33E2527A478B502AEDB192937FF0DDAC277DB6
54A40BBF64B55B4A5B99EC39AA674A94CE2A2B13B91F9AB3D84EBFC31AA83A73
62D50416198AE1CDB57B18CAC7B453E59D192340B54CA4DBC8D8B21DFF8D9A8A
F0C58D1E66451839B12FBB5414434004DA42D36A51A1F6EBF7E5E2A083E930E9
D8ED8C281406A4A7DA96BC341DB2E1874586191F733689D77D7DA9E1E2B8D00F
F2E86245FE25EF68AEF6A43710BC209DF4818525FA3100DED19222D6E10DD6B4
051B73930AD5027D250632BD3EE0D0CC4D074502B46A4696652C5F34FE52008B
D823D67BB4FE2909E8BC74094D0A4F9AB2AFDB7E7CB38136186AD38FEC194877
407B7A2FCD86C4BAD33137DE2AA38B31EDE57771CB15DB4AA45A0B8C3F9BBD1E
6C2FCB0A12672B64311EA482BC5B20B29F86F44D043F57B9931C29ED033C8A84
4617080A0BEEF966BA658D9B25BCFC8FD74B78D9A32675BC0F43A0C3C1B74254
799408136E5DB86EB1D022477947E8F0B8793A6E55E581977243D4E0E0452F57
CBE1ECA3FFC9B607F6919A4FDFF382D6007C08B4EBAB688C394443149E98E171
60CAB6C0F1FB68DFA32F8F1556583F61FE21FE29A0D2FE28F18A4B66E07C1455
53F830B9118FE93A91C76F8E71D1A6C9CF12CC737B75E309C271DBEDBF4B4134
D50B27F8A9C1EBCBD4579E073960FEA3F3D7F053074BCA55318F4A2811EABFC3
BF8D5977017832DDF14217ED23B2E70301F03A33369A37DD51966DAB68AA91A1
17C153949312AC1BC634375F0FD2A420679DEE3992430B256D3FA602E83AF4EB
118ACAB2A4D327A23DE3463763EAB502BE35545BB52D8AB9886CB9F91196AEC8
71168580BE371007BBCAFED4024C1DB5D785BAE9A1390B52A12FE1DD5C09ACE2
045A158AC405977517F00DF965405727C5145B9BDFD21ACE22936C8807D9EF23
49503F78900E9C23B7B332DE45D37F682F9E0DB16A1A2EE1CFE48A0E3DDA2EAD
8FD41420D7EBD1BE2C528EC6DD19FA44631C3899635EB665D1C9C134EDDADD45
88E44CDCC5144E7D1EE18784E89085322AAC17A0B243DE9F1A1A7151116F3CE2
3ECC444E38265BADEFAFB5FFCB7363A1D4740ED0E95C197C575E8A4E67082A92
FD5D7AA5364A30B9D2490CE8957E144777FB3FCBCF6E687D79B322F7F2B87166
3A2D125C36AB0DD363E3FE7FDDB71A0DDC17236879B777736B536176FBD87A79
E13562D111D2F91A7461F1E17FB26F72DBFBD156C6841E36FA56D1FE43E9B2E6
44E95594B1A3F3F93BD083874901E0FBF80D0BF1FAE3D1D205BF32FB2A3639A5
F537CD305789FEADBDFD411FA475FDE2E1BEEE27027C2902CA28805EE2C93675
F622F5CC36CCD4B98E293E14FDBB8B1A919BA0F6BC5CE761371121D788752598
D246985368FD70F4C6F867564E0C046B5DF8A1CACE56D52363F8EBD10BD13A85
5C5B1BE8B47770CA01F801D9EC1298566CD9B365ABFCA7FB972340AC05C0C609
BAFAD308F0F44B86F8F479E0426522544A2279654969073377F2B483D2E8AC9B
57C2FD829605B439F5D3BC4C4E1C5ABD394CD09C1BA1EFD7AAE55368F7320415
248D286DD424A38635DBDE77B5707DCE4561B09B7B01E7A7AD99BAB501FD4FD9
8D95F63F79088BEBA1FB34DA731F27CBD09CABB12D6C26B6883787F6EC21DEC6
7EC2813B5CD69272071180B4B37C5D853D1BCA293705A668FF855C054CB77720
EFF0FBC8CF71CA550D7DB79C89471FD8DDA0252C9F574746E6D1E4E1CCAA78EA
A42B8E21CAA22A3381B22DDCB68F78299653F57E832F403688E35C0D566F3ED5
9DC01276C2B1188FD25B9978DE1715F38073747ECD4A8F354E3907F1A5F8A632
8A5DBD344C4FEBC80605DC786622A280A7FC8F6604A2853A4800F2C103E45D99
C987AF0B44EDA292E04953EC69602981A79B5674AC3C8481090B414EBC8DA167
A98924A07C68CD9DB772A94D134EC32A6276BA72BCBF661407C4A39481A45778
9E5CCCEB412D6F38D97D1C7B30E7CD8EE0C4C7A0EBE585A6F77DB7AA4FDA4317
AFBCB819F79DEECF8807A4779806CBC5512F34ADFDF092DAD7537E4A33B8B4BA
9D51B53062A79CE3C53D85A4BFE1206BD754837EAC9403BAD7F3A24DA4F5F4F7
93797E5D4E22E0E5E51CDF4F6F576B7FA3408F287DE6CEA23EC0A3534C444B27
33D40D0BA87E45DF14E758633DD78DF01EB62194889D9AB74F55730490F8EE69
1116C5140AEA3EB369A09AD82D4AED97921852C6EE629FDE976551388AC667AF
4991C5F20130C93133E9055EC463AE064661A8C96381151AF7CB589087B60D20
C8427A0DF3736A9E2C0C851E0DB36866506234FBAD63C2F8A9F53EEC9D9A3C20
A17504BBDE320C6436BCF0CD9430EA99B04B15EC1968B2EF74D6D886EF1A7221
78B453ACD773134C53EFAD31906CEEEA6DD42FF6ED22F5FC2A77C683C3DA4F92
B1E9F2699F66361C567810658E5BCA8B9FE496C82D97D3BA050E5ECD5900B514
DB5F6B5771D170C0C528E91A09054536AE099E94F66DFA29E8408A8DD8892D03
C95AC3A608D31A887CF0E810226F35B08EAA1941897CD1A5712556F7B2819ADA
FD35617CFD55CA64D37F543B0E037D0E9ADDD7AFFF21BC9E25570FE548DBFD72
59D231C896A6EC50ACB2DBD02D76591B9F9D34A6FF15F84A5D5ACF864FC26928
81EA895FF74E4C3CBE1B7F57A5F30C9DAF22B262E3AB0FFA2354063EE2B8A2DC
96DE8CEA1C05958D79582C4412EFB7ACC4E9607618A90C9370D9EED639270FE5
7BFDA6B605AB44C1DB1D38A83C4C8EE4F8964D8CCCF2D92929C0827992BC54DC
A6EA335ADC37BC6E0A8CED1D044C219C8953C6F170C128D94F7D973F08917C5F
BDDC8C0E630416EB96947C959D332455615F9750E4B36C4C0AF7FC71C7FA260C
60A89B907C7BBDE9ECEE9A3499A18D0FAF574DB94F5EF244FE10AC1222573BDE
4C5603DB61CB6474250FD337DCF93696A2AEDE9A1CFAA0F515DE65EC1BD59D55
40182122DE544F233F78D2AC18D939C0B76608CB8230D4FD012CD07E4EC0E9CB
A1E406DF1016E946ABDD979E0958172534079C6690749F0B4A7AEAEAEDC641A2
230CB55BBACB4F8013139B9C9F0CF50C2D678173DBD134A6450C57F83EA37560
BF52551F344644C0C6090BF8D67626E6D401B7272D8D7822FCBC6E02871D92B7
7996CBC3054C72596D4AC6D8CB6B4AE715340DF7482AE799528DD7A5EAF6BEE4
E16B9C89900A4ED502A38CA8F56C088766614ED9D8B99FAE3532863B68BD813B
B9D53F2863BA7ADDA1F6961D8479E8D4200FCC203E86D59C8CB2261518F10585
FFE323BF89EF65D3F68824434A5B6CCF1757EF2B708E0E28D2350ABEFBC862D2
8AFBCC432F93DF7241464A9F0C0EEB1F53C94B6135A739FE9A05F1F0D943C50D
09580D887E2EB7F7BD23189BE35BF01C7413D53D3090C4C8C0D3CA631589C4D6
A27B976B91F5020E2693076F7DA32F01FE376A84A3AF60CD32A0E1BA95B46987
495E998B8A4AA193EC5C1C0172962FFD4E68EC553943C22927F124EF4955DFB7
861A7E52CF53051E1D28A6595734FF18FC2B1D281DD5C378B3F2FBD9729BB10E
66EFA6A3C3CBB10CB6BA16809F500C2D4001BA44EB28F7A84F55B89AE35C1E9A
A2D4FEFB3642266A744E2E35FB0ADB56A3F8408685C700CE3BCF4EFC23A49D03
0910773A6A4F01E4ED43497606AB70FC4B7C632607BBE0F0496BC166A658FEAD
830207653638494DCA9297818805F05CA0B9C4DCB8C4ABFA4305D904E850D257
E5A8C308A9D584BC62F2CC7BE390F180A0A84BA9C6DE2F4958F894C6702E6A52
20922A9FA95DC31CEC0412D0C146690DE2D6D89E23B5EC82C501A760142223A0
E33E63A3BA53DA63B01EFA929F0C6B12BA34234C6264F9C0E6B179E950F8E9D0
D5A4BB4A256B36FE8E206E57C8756E804C14E85A7FF5B377C347BD67A2C175A6
88AB1A573A31A183B6DBA1AB88930CAE2830BF3092D5470F6DD516341D704EAB
B253B7CCFAAA21261E5F5241F51D65D5BDA4CFF0DFC2C5829F01644F2B3C8C85
CD38F09F2CEC0D2D2396AC3B664F6546AAD9B4F667F2079A7F367443BBAF4D68
B0C5BA8940EAE66425F7F6EB0DEB9977C4369CEE9643C1EB9472673518C5B5AE
DCB819FF16E30DF6CC55F8B5CDBB6FDE448DCA1C2D162E6CB519CCFAAADF994A
CFB076216FA978D49FFF78E29C6789B2D934FBF0B2758EDE62647A1BA0974A2B
C827CEC04E33B1494536677ABFC84005EAD90E3674F9007D1E022B200EEE020A
E5DD4C6FCD5837A7CE87F80A7C4666623BEE4EB1126E1C51CEC9E7EC35D49635
3152AFE9837C7C4BBF336353DC92834C0BF3688AC97C5ADA9787F28B859D125C
40EF9174B795CF7FE3FED5D07DFDEEA428FE2286F3891208C47F9C41C9186155
752E965133EBA86C70E884EBF9611AA1FB1B67C86AD5904CA75B9AA680EB9980
D253C898AC27A7D31ABB59C1E566B2A3A0CE03849A3007C23044663FF37352E3
5E2F515D1420DBC14749A45571EBA3F99D10D08B79D6C879332E07DDC5AE2EEB
BAE8DA90CBB434D4C63FC54A3042C4FF84E617B1241997506755E331517E1A7D
77D6D67F972D3ADB84336B7ADBC98A7715DEB3566FF218A72C7306249BBF6264
4B4E3DA8CB635E51D6D471DC5F4EBF1EBB1E28004BDE5A6229D4D92D0E309E4E
DEC9143D23BB0C285339DA95D6A1759A950BA9995184B394A449E3831525C1F7
4D5BE841843B65568B32F0CB2D43ECAF5CE975E8A93DC4AC73F6FD76215AD063
7EFFE1209FF0E3038930F6AFC3C6439D8F3583D2688B049410FAC5A9444CB7E8
25305C7EE5B38A5F48CF6B2BE0B56CF06C39C2CF19D9C9D7E499A67FA0666C09
E7A97A6E571B1D660018ADA233A07505DF2BA87AEC009CF09AC05CEF05DC85D2
8B6F0EDEF0D8C022A44A5B0798B1A1C5F31AEA02F789ED462CF12A169D1C2C6E
E871509422138FB7AC075CB509630E76B2F8019C4109C58F47DDDB6178068B38
FC9CF1B98DEE4D2B45331C962D9D4540C5A7F69E01A759EB5C0AC2C1B19C5B24
CF540961EFCD403BF8E9AF05FCFDD07837F721D98E1BE08FAC13F3453E861D2A
8F7D15D6B186DBA5C3D94546D5A242CEA9375BA9203AC3778B0D94CF8B062298
76BBDCEFADB643FBB644
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: EURM10
%!PS-AdobeFont-1.0: EURM10 003.003
%%Title: EURM10
%Version: 003.003
%%CreationDate: Mon Jun 13 12:00:00 2011
%%Creator: American Mathematical Society
%Copyright: Copyright (c) 1997, 2009, 2011 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name EURM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (003.003) readonly def
/Notice (Copyright \050c\051 1997, 2009, 2011 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name EURM10.) readonly def
/FullName (EURM10) readonly def
/FamilyName (Euler) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /EURM10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /phi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-32 -243 1060 720} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F41F8A25
49C1ADDE0F25E4C2E5C990C47FF040F896D567264EF5C3F584F56F343C2737E9
EBBB4521049C78FA1A7314E86D532BBC544FE600AB25D177ED8281150D633906
8BA0DAB861A70FA9DB57EF3CE0D91C6A618A0082E595C1EA7E42B3C16842A9CC
7B8D943FA5D2384E3A8E797C334EEA52719AF615796D2EC131ABFB18606909F5
6192412A0320AD88B47D26C2D51FF38411F77DA84D5176BFB243447977173EAA
EDFE34ADC06154B053A3D5620C5F9A35B6BB5FD64B5EBDD13DEE096EC7543A55
DD9D1438D1746D8BE4DCD1D4A173DF9943C66B5128C3FA98E15C0C94FE411BAD
E810EDB7B7273FDEE769E94B6C49F09E74A5D89D5F6D776BA691DA3C5D59F573
5F1BF23A503258D642835A52BEAD40E16329D85497362275CE42FE13DAA19CAB
2C81DCF4644C65D988C1A27AB4E0EEA3D97D1076913836CB837FE42F98D80DA8
6A792B3CBE7587CCA83AA8A0722A7460A6A20D8EC0A70789C0CF4689C4113AA3
D42EDE01909AAA83450597B2D62195C5FC6B85075B31722E4919C9255D450036
BC434E6C05F32F0AECECE4CCA9AB7372C14BA99F8EEF9A240F0A537E75ED2CD6
B884FFE9BA738EFF3883E754E8C9A4647EC368E7C9E6CE86D8CD5C94B0FFAD7C
8C3C95053EE6DC3BADE68D985D9AAEA241F2BEF8576A74B6E46C635C20A5FE3B
BE83FD7FEBA6A21114FE25CC22437163B3504F62A1A1E3B9D81CEBA885B23678
8C1EF18A1B7FF384B08E6C857BF0AC2DE0AB368C5C6658E743AB02998152F9D5
29C8A78A2D7A62395617F5D533F38A68C2F94CB35E68DDBE2B94487C26E16241
531924C936DEDCD9B5DBBE867BFA34243DFE8C08F1CF1DBC72C01399DFE33EE3
F5A26DBD9409CC8E4A077A6576B662AE7BE7BC9D7D1A4465FD0E819964F62EC5
B0ADC909F6DA228DE32F694FD027CE76F45C623709187300E6484980A062C05C
9B352F6AF5BD52FE1D7944260036DD3A631F076DC1B3D3933900D3F1D794EDE4
DB65719A00D03B33502E1F59F53F8A02D005A3124555C19DBC80FDE4CD173B0E
3FCE02D064A6435322199C983565E8D4445637ABE216E1F84089E6E0A57A6AD5
25B4FB46B776DB2F8385EDF530FE6CC403B268CE34B1BA0BFFD785EC748BA3EB
9721AF8DC3C5D5D26A75FE580A3DE8992CBDF430E117B0B7705A43DA4915B92B
9E369A913488C8AD37E731BAEDCACFA8006A049FD3B350741EED5151973D65DC
6DEFCE17AA397770D733037F72F599C09F35A16CED0DBB36DFE3578097AE3D23
990AD071833F236088CA0A33565C584726E4C1D5953CCA29EFDE324D10D9FC0F
D7AE521EEAF6E21F32513DBB6E269218F5D2E1CC0FDEFF9D05A29D5C3B6B8195
33D642BC08CE5DB97909ABF5B87C7C7F2A4091C819F03101571DE8126C7FB3A8
37CB9A9ED232C3A38321DF1410C805DF50C579E56F70A0DBE768CB20F2FA7C22
A586FD388439AD34872C17033DF2171B7DF7262EDBF5846D9B15FCE42A1BBE9F
6CB869604CA74FA846B4DD4C71DBB4A7CFFEE7BD3B1F81C3A34FEB6A4784E271
2B63A21EBD61164790F7D8DF24CAAD82C8D28E2254129701A145381FB0D6A5E0
745308C7E1935CE6A7EBE22A23A5BC68F3B97DDBB0952E11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /a1 put
dup 8 /a8 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26D38FD979F820B4607A4458A
FE32A61551AC882694E29AD2156E5D008591A02C59FC1DD6BD2F52F0FD868E8A
FCD67B5AEAB0025C012E85B2B1C1A99F66C67287B1FD75A0140EACAF485EB377
7E5C58B9E2904060FD815725F149D6B8251CD6DC34D3675B815D73F7F1F16D87
287341207E5791D6D8AE82E7BE370A2BE4C5F73FAB72B1F4C2058CA4994F6AD3
FDEF96183821964ED7BAA607C483A436C20C2EA50F45951BCD5A4EE21805DEA7
071BEE4216E8B2913E7743BFB58EC4E7FFB7C31E873147605D83D955B00B6B29
F8066EEC1E7091BF7F1D9E261658AEA6A81ECE5051E75695D5631C7398E77F98
08580980492E302486A98593780638B6FDF3C54D55FAB1271BC5888F18F4595C
2BFFC548C8BC5205962144EBF08C53026135AC215895CA9277DC7FF0ED5564
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Fourier-Math-Cal
%!PS-AdobeFont-1.0: Fourier-Math-Cal 001.004
%%CreationDate: Sat Oct 30 17:08:49 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Cal) readonly def
/FamilyName (Fourier-Math-Cal) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Cal def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 83 /S put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {17 -274 1252 724} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
71FFD7441F153F65EC489AED623132F7F0AA967C97A2E6C705F58130577D30FE
722A0CE1882455CFC9882D1055821847FF648509DA92A3EE12F984224F7F1904
F3395261ABA61816ECEF5BAB29D1AB8C21A8F46620894FC69C70DAB3226A0DD9
9CE0FBDF78469648F29A99C677B9FDDC8B90082BB7C984DC5C42930D1315FD26
EA08F21054360D1981E79A6EEEF345CC1B9D85A6983CB5E833C9F3CA972A2C88
B6220FBB013192E7B2F79DC214DD0964F4DA52469E9500ED2ADABDB0D259FDAA
648EE5A0339A6EFFDFBFEB97BAC430C00291576483521C8D406E8FA4DC48C7D9
6830DF6FBF39E9153229816D94F6BDDABA2B4759E1FB3DEB54C47D66E283E45F
3BC1B675DA1D8DDC10F24EAB54445658EDD0AC1ECEA12CBA6DA205698F18056D
DB1CCC0A8D93AA9EACBE2B5093275823AB48AD9B7B1A217505522EB1C2F09074
1D7EC269452BD0896C0B1F30769BD683103F7FB568F80576476B511F5ED74F46
E2F35F191BAEAE8C91D87401A8C28DCF476FF0CB9661DE7B93284BC8E2429CEC
A964C815F35C33B2B6E795088998E0EF2CD048D1D54FEC5014B1AD8A46618748
6D1446CEACDF027D1B238173F8FB6C828F10C8FFAEA574888C851EEDF4629C38
4D71F7D93FD74FE5402D7D788D76E28ECE97DCEA9FEDC5985599B679C052E445
3E16B23D20A619B501A088D5A6578CD0F56CCED1F2039876D4FC648DB69CE3CE
9EA0C3B37F27CFD4AB23D96B5BA02308081972E9E62A93B2DC9A37AC4A63E626
F1488017A209F97B3217B85127A8AAB35BD704F9614733E2C55D3004A753ACF4
CBFC509E71BEB3AA1179EC2955F527022F86711D2DDE84BDEF01082075A89D81
B54E0DBE10E80ACEDE0DFD0A6B56BF72DCF150C555DC17FDED0FF42FF3D6D114
3830B37CEABC61733C8D7D4B66FF844BD22929F09FCAC9F334426B38005A2808
CB0DA9BE2A164A45220A0EBCFF6055BC430DCF820B33B226AF22CCC4341B32C6
69411D14C90EB2D9118484FA16E59C648873D9EEF2B9E57EE43ECFC6A53E94FD
A12E86CC67E856CD9365B3ED23E58A1E97A7ED6C707DAE852E57D5B88BB9D233
B5E47EEF26714A4CC8923A9019F69E6331D554E6829242F1E05AA1A3BA678F48
F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF9B3EC36A606C0EC22D17904AAF
144001329CB3826DF8B1A982A5CE8765E2681E64B8D84A7CD7504E58CB850AAE
1F0B28330E00E9D210D7B972D494AFA5BEA4BF827DB74191F5A5418CC1B859D0
39AED4B36071553CE9EE55C1943015EE9F1A8856CCF02CE45E44A6E6EC9BC2C0
2D9D4B8299B2399045A279565E9AAD2955DDBACD612D3E48B87C452A15B3C489
A922099F00FFD2C7A1371453098FDEB4D82BEA68FC75B77F46892BDFF3D4DC3C
CBD4AEA8C346EB436961C2AF7784A47BB023B3ECFFF539BE96CF880E9892434B
9CED332AE162EEC85770D85814FCA2D9350B12E3843B5F41C5F13E36F9D84B8B
59EDDF2729FD3E48D7EC7516E263C79D6A97268DA46DFB0DA3AF073C9DED0369
646F6B36693E9A3C0BE4942D73FF500114962E610D7BE1ECB505FC2988F00253
F70434C3077A2428BEB3FA5E46ED9C413EF195DB30A38BEB6F1FEB404E479017
51F077A3443B93369468003BBEE29BBB9093FDB99991507C71753EE604A02832
C725E9A9EE151663032EE1B2834670BC9A18AEE869BA9B877B857DA39049F588
7F6C75EA22E2C1A23F5E19616751A5A80154B18B9919E7E1A053EAF0914A1A8D
71814BE7FEE42E6D1EB7644C10A722A014371EF3D539E4754CD2C62F1790F8A4
42D94ED07F5F983E66AD27AC7E1E20250E3AAB09E78E7F66CB3CC2F58E30FCBA
6F6A16C6AC2AD453E6B3AAA9C3299C13270D66C68CB2FBD751726395EEC09F5A
F3D6AFB7F965E92091CCD3C464AA14A393F61610D617E196C9252A0623B0DDBD
D4CC852F53207B4C082D3C99D3064637FFAFC86C0D95192C772C129F71427E98
CC2ECABE772E6926134F0C58BC6A3690EB11E9D916DA3E2FB8D772668F183C16
48D2C3826031A7254434ACFD46E4E0C2BE0A0C4DD22B38B62EA22FACE1D179CE
454DFF93642690E866E9DFD5B99028D0E71DB7D816A29191433D8AD0EF50FC38
59C0CCD704BF425C64379E8F07D1B4F529A18EBFFBB595DF576C8D4FC549D99B
D240F6F0B57D67DC507688A6FB292D06BF3FD379A13B0853935004D5EF2455FE
513007B029E948CCCD9DE5E52D22C76409EA03B6FF3C58A7DD539479C0B52D99
81C85BC0C3CBCBBAB88B94E492AB2987C464E4755C82C7100AB666CB4B767660
85FE9AEEDC2422BEAABF0D8B3518243E153C32A0F917809741E513A879741381
EE9D833931AE47A7740AB2F155AEF40AB5DCFF29B1A7EBB6F2560E7B6B9A6F28
D28742D01A24E1FF006D929A48ABB1A4B3847DA64CC5A2F8E35485621F701D48
999032644FB9627B1BC18D7DD77D178AB6BD1A5D799164DF05DD214A82DDA51D
625CC139CF674DE8948B961C114EAA8E1607D6224E8CCA489D9FA0B1C5B267F1
AF004270A16499FAF928A243EB695771B270DF5BB28EEAB364DC03AE68A0C2BF
1486AA69764901FA3B93475C59B867257B1F73595A21C09A9388FC08BCD865FF
71B6AFE94D748052D6456B465B0DA5B4CE76EC0F289B6CAB1017F8CBBF115921
B00E32CBEB956B933D0A70F48E8A26B85B1E8F0F37358619A558A0CB4AC41703
B4665FFC9C10609A9A3EAF0481EA5B8ACCA993360FD0131C1421BE702499CFD1
810E0E1CCDEFC6AF8EB7E17A757623CFA8DCFEDA18740158B6967C4A441F763B
F1FA0129FCCB9555405D79B8AA1465ADDBF426D5E94DB99F11A46FAEC52E5471
EF9D99AAE82DD997CE7A9EC2492EA158D242BE1C75A28F777AB959BB8F538DC8
5AF824AADD9628A8D88B7B675FFFFA52F4BDD43DC4AAD10EA7D6CB37DA47C4EF
B3737ECD09391517550CD7499013AD3BE8E98FE0649A31734847F2627C36BC2E
463A80301BF9B5F4C4C6FBDFAAFB3AAD92ADCDD260C4653A72C08DB76547A830
8CC8A0747F2ACE43D55A4CFC1AB41BC68E436B25C680959BA5AF3EC0E43257E6
E3F6536C4F5DAC9BF02F942FFBC9D7EB5334DBEC1ABF0E5C4BB02785E77C2710
716FAA7A6C920408F14B7F697A8170C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesTerminale.dvi)
@start /Fa 141[19 12[26 101[{ TeXBase1Encoding ReEncodeFont }2
49.6466 /Utopia-Regular rf /Fb 177[44 78[{}1 58.0489
/Fourier-Math-BlackBoard rf /Fc 214[0 0 40[{}2 83.022
/XYBTIP-Medium rf /Fd 214[0 0 40[{}2 83.022 /XYATIP-Medium
rf /Fe 130[31 31 31 31 122[{}4 68.7421 /Fourier-Math-Extension
rf /Ff 173[46 82[{}1 68.7421 /Fourier-Math-BlackBoard
rf /Fg 93[33 162[{}1 45.8281 /Fourier-Math-Letters rf
/Fh 55[49 49 49 36[49 54[19 55[41 50[{}6 68.7422 /Fourier-Math-Symbols
rf /Fi 61[84 194[{ fa5free1 ReEncodeFont }1 74.7198
/FontAwesome5Free-Solid rf /Fj 135[35 3[23 5[42 4[22
42 34 22 4[39 97[{ TeXBase1Encoding ReEncodeFont }8 68.7422
/Utopia-Italic rf /Fk 74[38 181[{}1 68.7422 /Fourier-Math-Letters-Italic
rf /Fl 22[35 35 7[36 31[44 42[28 28[33 1[35 42 24 30
27 41 42 40 43 63 19 2[20 42 36 22 35 41 34 41 36 7[40
43 1[44 54 43 37 44 1[41 52 54 65 39 2[24 2[40 42 54
1[44 44 1[27 1[39 1[18 18 3[36 36 36 1[36 36 36 1[18
27 18 2[24 24 19 36[42 2[{ TeXBase1Encoding ReEncodeFont }61
68.7422 /Utopia-Regular rf /Fm 23[36 114[43 25 31 30
41 42 40 2[21 2[22 43 37 1[36 1[34 1[37 9[64 1[54 43
39 47 2[53 51 63 1[49 1[26 5[47 1[44 65[{
 TeXBase1Encoding ReEncodeFont }27 68.7422 /Utopia-Bold
rf /Fn 135[26 2[32 18 3[33 31 33 1[15 2[16 2[17 27 1[27
15[29 2[32 80[{ TeXBase1Encoding ReEncodeFont }13 53.4661
/Utopia-Regular rf /Fo 135[27 120[{ TeXBase1Encoding ReEncodeFont }1
51.9385 /Utopia-Italic rf /Fq 58[37 35[37 161[{}2 51.9385
/Fourier-Math-Symbols rf /Fr 93[24 24 48[61 112[{}3 61.1041
/Fourier-Math-Extension rf /Fs 145[32 1[14 50[28 4[28
28 28 28 28 3[14 44[{ TeXBase1Encoding ReEncodeFont }9
51.9385 /Utopia-Regular rf /Ft 58[44 35[44 111[62 49[{}3
61.1042 /Fourier-Math-Symbols rf /Fu 135[32 9[38 25[37
16[40 67[{ TeXBase1Encoding ReEncodeFont }4 61.1042 /Utopia-Italic
rf /Fv 17[18 3[31 31 8[32 105[31 37 21 27 24 36 37 35
38 56 17 1[17 18 37 32 19 31 37 30 37 32 16[37 47 2[35
16[16 16 32 2[32 3[32 32 32 1[16 24 16 2[21 21 17 36[37
2[{ TeXBase1Encoding ReEncodeFont }42 61.1042 /Utopia-Regular
rf /Fx 204[24 24 50[{ TeXBase1Encoding ReEncodeFont }2
45.8281 /Utopia-Regular rf /Fy 135[30 2[36 6[36 11[32
33 8[37 10[53 9[38 37 36 65[{ TeXBase1Encoding ReEncodeFont }10
58.049 /Utopia-Italic rf /FA 65[47 47 6[34 34 31 31 16[30
30 35[34 34 34 34 8[76 76 46[45 45 14[45 45 48[{}18 76.3801
/Fourier-Math-Extension rf /FB 221[90 34[{}1 76.3802
/fourier-orns rf /FC 225[60 30[{}1 83.022 /EURM10 rf
/FD 247[83 6[42 1[{}2 83.022 /LINE10 rf /FE 57[42 42
26[42 42 4[37 42 1[42 110[34 1[17 48[{}9 58.049 /Fourier-Math-Symbols
rf /FF 173[51 3[58 78[{}2 76.3801 /Fourier-Math-BlackBoard
rf /FG 140[25 2[35 33 1[54 16 2[17 3[30 2[35 40[31 31
31 31 31 31 31 31 31 31 1[15 1[15 2[20 20 40[{
 TeXBase1Encoding ReEncodeFont }22 58.049 /Utopia-Regular
rf /FH 172[60 15[57 67[{}2 76.3802 /Fourier-Math-Cal
rf /FI 55[55 1[55 55 8[55 3[55 6[38 6[55 55 3[55 49 55
21 55 48[64 52[57 3[0 4[45 78 7[76 76 6[76 33[{}21 76.3802
/Fourier-Math-Symbols rf /FJ 134[36 39 1[39 47 26 2[43
2[47 70 1[42 24 24 46 38 24 1[45 34 43 43 7[45 48 3[46
41 2[47 1[58 70 3[26 5[50 48 48 65[{ TeXBase1Encoding ReEncodeFont }29
76.3802 /Utopia-Italic rf /FK 93[54 162[{}1 76.3802
/Fourier-Math-Letters rf /FL 70[49 185[{}1 76.3802
/Fourier-Math-Letters-Italic rf /FM 4[46 1[46 14[39 39
39 38 6[40 36[34 15[34 20[38 31 23[26 1[26 37 39 37 1[38
46 26 33 30 45 46 44 47 70 21 1[21 22 46 40 24 39 46
38 46 40 3[25 1[25 2[48 1[48 1[47 41 2[46 58 60 72 43
2[27 2[44 46 60 52 1[49 3[44 1[20 20 40 40 40 40 40 40
40 40 40 40 35 20 30 20 2[27 27 21 1[64 33[47 47 2[{
 TeXBase1Encoding ReEncodeFont }77 76.3802 /Utopia-Regular
rf /FN 22[40 40 111[40 1[40 48 28 34 34 46 47 45 49 72
24 2[24 1[41 26 40 46 38 1[42 13[43 52 12[48 59 53 8[21
43 43 43 43 43 43 43 43 43 43 1[21 46[{ TeXBase1Encoding ReEncodeFont }
38 76.3802 /Utopia-Bold rf /FO 22[57 57 113[57 69 41
49 48 1[68 64 70 104 34 2[35 3[57 67 54 67 60 12[69 62
15[76 16[62 62 49[{ TeXBase1Encoding ReEncodeFont }23
109.987 /Utopia-Bold rf /FP 22[47 112[45 4[40 36 2[53
5[27 1[48 1[47 55 45 31[63 67[{ TeXBase1Encoding ReEncodeFont }11
91.6562 /Utopia-Regular rf /FQ 22[68 82[66 32[80 45 58
51 78 80 1[82 122 37 2[38 80 2[68 1[65 1[69 12[82 6[125
77[{ TeXBase1Encoding ReEncodeFont }18 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Compl\351ments sur la d\351rivation)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Suites et r\351currence)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246
-246 a -246 -246 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246
a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray
0 TeXcolorgray 815 166 a FQ(M)n(ath\351matiques)30 b(\226)g(T)-13
b(er)q(minale)29 b(sp\351cialit\351)1496 577 y FP(C)o(orr)q(ig\351s)18
b(des)j(exer)n(cices)-246 937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end

-246 937 a -246 937 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246 937 a FO(T)-10 b(able)22 b(des)h(mati\350r)n
(es)p 0 0 1 TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a FN(1)67
b(C)o(ompl\351ments)15 b(sur)h(la)f(d\351r)q(iv)o(ation)967
1120 y
SDict begin 12 H.L end
 967 1120 a 967 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 967 1120 a 0 TeXcolorgray
3136 w FN(2)p 0 0 1 TeXcolorrgb -246 1293 a
SDict begin H.S end
 -246 1293
a FN(2)67 b(S)n(uites)16 b(et)g(r\351curr)o(ence)573
1293 y
SDict begin 12 H.L end
 573 1293 a 573 1293 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 573 1293 a 0 TeXcolorgray
3487 w FN(19)p 0 TeXcolorgray 1930 5895 a FM(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x FO(1)105 b(C)o(ompl\351ments)23
b(sur)h(la)f(d\351r)q(iv)n(ation)-246 -54 y
SDict begin H.S end
 -246 -54
a -246 -54 a
SDict begin 12 H.A end
 -246 -54 a -246 -54 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246 -54 a 0 TeXcolorgray
75 x FN(Ex)o(er)o(cice)14 b(1)p 0 TeXcolorgray 42 w FM(La)j(fonction)27
b FJ(f)36 b FM(est)18 b(d\351\002nie)f(sur)h(l)o('inter)q(valle)1517
22 y([)1542 21 y FI(\241)p FM(2;)8 b(6)1705 22 y(])1749
21 y(par)1596 220 y FJ(f)19 b FM(\()r FJ(x)5 b FM(\))14
b FI(\306)h FM(0,)8 b(5)r FJ(x)1977 186 y FG(2)2024 220
y FI(\241)i FM(2)r FJ(x)15 b FI(\241)10 b FM(4.)-246
420 y(P)n(our)17 b(tout)j FJ(x)g FI(2)14 b FF(R)31 b
FM(:)1388 519 y FJ(f)1431 485 y FE(0)1452 519 y FM(\()r
FJ(x)5 b FM(\))14 b FI(\306)g FM(0,)8 b(5)i FI(\243)g
FM(2)r FJ(x)15 b FI(\241)10 b FM(2)g FI(\243)g FM(1)g
FI(\241)g FM(0)19 b FI(\306)e FJ(x)e FI(\241)10 b FM(2.)-246
669 y(La)16 b(d\351r)q(iv\351e)g(est)h(du)e(pr)o(emier)i(degr\351,)e
(donc)g(pour)i(obtenir)f(le)g(tableau)g(de)g(signe)o(,)g(il)g(faut)g
(r\351soudr)o(e)g(une)g(\351quation,)h(puis)g(r)o(egar)o(der)d(le)i
(signe)g(de)i FJ(a)33 b FM(:)1809 851 y FJ(x)15 b FI(\241)10
b FM(2)15 b FI(\306)g FM(0)1693 976 y FJ(x)g FI(\241)1812
992 y FD(\001)1812 976 y FM(2)d FI(\305)1929 992 y FD(\001)1929
976 y FM(2)i FI(\306)h FM(0)10 b FI(\305)g FM(2)1925
1100 y FJ(x)19 b FI(\306)c FM(2.)-244 1307 y FJ(a)j FI(\306)d
FM(1)i(\(puisque)k FJ(x)15 b FI(\241)10 b FM(2)19 b(signi\002e)p
1 0 0 TeXcolorrgb 17 w(1)p 0 TeXcolorgray 3 w FJ(x)c
FI(\241)10 b FM(2\),)20 b FJ(a)h FM(est)d FI(\251)f FM(donc)g(le)h
(signe)g(est)g(de)f(la)h(for)q(me)45 b FI(\241)18 b FC(\036)f
FI(\305)p 2226 1225 262 4 v 2226 1349 4 127 v 2484 1349
V 2226 1351 262 4 v -246 1472 a FM(On)h(en)f(d\351duit)h(le)g(tableau)f
(de)h(signe)g(de)25 b FJ(f)1031 1442 y FE(0)1069 1472
y FM(et)18 b(le)g(tableau)f(de)h(var)q(iations)f(de)25
b FJ(f)51 b FM(:)p 0 TeXcolorgray 0 TeXcolorgray -19
1640 a

 -19 1640 a -19 1640 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 168
w FJ(x)-19 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 111 w FJ(f)135
1610 y FE(0)156 1640 y FM(\()r FJ(x)5 b FM(\))-19 1640
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a 122 w FJ(f)18 b FM(\()r FJ(x)5
b FM(\))-19 1640 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 50.96643 -14.40787 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FI(\241)p FM(2)-19
1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FM(2)-19 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.38297 ] concat

 pgfs


 -19 1640
a
 0 setgray
 -19 1640 a FM(6)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FI(\241)-19
1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 -19 1640 a
 0 setgray
 -19 1640 a FM(0)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 -19 1640
a
 0 setgray
 -19 1640 a FI(\305)-19 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -57.47212 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a
-19 1640 a
 0 setgray
 -19 1640 a FM(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -57.47212 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19
1640 a -19 1640 a
 0 setgray
 -19 1640 a FM(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.68742 ] concat

 pgfs


 -19 1640
a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FI(\241)p FM(6)-19
1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.68742 ] concat

 pgfs


 -19 1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FI(\241)p
FM(6)-19 1640 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.96579 -57.71567 moveto

 110.95607 -76.13242 lineto

 pgfstr

 save

 [0.9283 -0.37172 0.37172 0.9283 110.95605 -76.13242 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 -19 1640
a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FM(2)-19 1640 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 -19
1640 a
 /pgfsc{}def/pgffc{}def
 -19 1640 a -19 1640 a
 0 setgray
 -19 1640 a FM(2)-19 1640
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 136.30339 -77.02061 moveto

 182.29369 -58.60347 lineto

 pgfstr

 save

 [0.9283 0.37172 -0.37172 0.9283 182.29367 -58.60347 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 1946 2415
9 777 v 0 TeXcolorgray 1992 1721 a FM(P)n(our)16 b(compl\351ter)j(l)o
('extr\351mit\351)h(des)d(\003\350ches)o(,)i(on)e(calcule)h(:)p
0 TeXcolorgray 2161 1821 a(\225)p 0 TeXcolorgray 50 w
FJ(f)h FM(\()p FI(\241)p FM(2\))14 b FI(\306)g FM(0,)8
b(5)i FI(\243)g FM(\()p FI(\241)p FM(2\))2849 1791 y
FG(2)2896 1821 y FI(\241)g FM(2)g FI(\243)g FM(\()p FI(\241)p
FM(2\))g FI(\241)g FM(4)16 b FI(\306)e FM(2)p 0 TeXcolorgray
2161 1920 a(\225)p 0 TeXcolorgray 50 w FJ(f)19 b FM(\(2\))14
b FI(\306)g FM(0,)8 b(5)i FI(\243)g FM(2)2685 1890 y
FG(2)2733 1920 y FI(\241)g FM(2)g FI(\243)g FM(2)g FI(\241)g
FM(4)16 b FI(\306)e(\241)p FM(6)p 0 TeXcolorgray 2161
2020 a(\225)p 0 TeXcolorgray 50 w FJ(f)19 b FM(\(6\))14
b FI(\306)g FM(0,)8 b(5)i FI(\243)g FM(6)2685 1990 y
FG(2)2733 2020 y FI(\241)g FM(2)g FI(\243)g FM(6)g FI(\241)g
FM(4)16 b FI(\306)e FM(2)1992 2169 y(On)j(peut)h(aussi)g(fair)o(e)g(un)
f(tableau)h(de)f(valeurs)h(\340)g(la)f(calculatr)q(ice)o(.)-246
2646 y FN(R)o(emarque)d(:)k FM(La)f(courbe)g(r)o(epr\351sentative)i
(est)f(une)g(par)o(abole)o(,)g(dont)f(le)h(sommet)h FJ(S)j
FM(a)17 b(pour)h(coor)o(donn\351es)f(\(2;)8 b FI(\241)p
FM(6\).)p 0 TeXcolorgray 0 TeXcolorgray 908 3778 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 250.95338 a add def
/d 0.0 a add neg def /h 123.20035 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 908
3778 a 1466 3041 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35818 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 183.8049 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 14.22636 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 34.42776 0.0 -88.77258   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 183.8049  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 183.8049  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-88.77258  def /maxTickline 34.42776  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 34.42776
0.0 -88.77258   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 183.8049
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 34.42776  0 -88.77258  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -88.77258
 34.42776  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 183.8049  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 14.22636  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 34.42776
0.0 -88.77258   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 183.8049
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1451 3138 a FG(0)205
b(1)g(2)g(3)g(4)g(5)-1469 b FE(\241)p FG(1)-309 b FE(\241)p
FG(2)1377 3060 y(0)1335 3178 y FE(\241)p FG(1)1335 3296
y FE(\241)p FG(2)1335 3414 y FE(\241)p FG(3)1335 3533
y FE(\241)p FG(4)1335 3651 y FE(\241)p FG(5)1335 3769
y FE(\241)p FG(6)1377 2942 y(1)1466 3041 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1466 3041
a 1466 3041 a
tx@Dict begin { 56.90549 -85.35818 } PutCoor PutBegin  end
 1466 3041 a 1466 3041 a
tx@Dict begin ps@rot  RotBegin  end
 1466 3041 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4. def /x1 4. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 14.22636 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 14.22636
mul gt { moveto } { dup -1.e30 14.22636 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1466 3041 a
tx@Dict begin RotEnd  end
 1466 3041 a 1466
3041 a
tx@Dict begin  PutEnd  end
 1466 3041 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
-85.35818   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1466 3041 a
tx@Dict begin { 59.18175 -82.51295 } PutCoor PutBegin  end
 1466 3041 a 1 0 0 TeXcolorrgb -1 x FJ(S)p
0 TeXcolorgray 1466 3041 a
tx@Dict begin  PutEnd  end
 1466 3041 a 2992 3778 a
currentpoint initclip moveto
 2992
3778 a -246 3861 a
SDict begin H.S end
 -246 3861 a -246 3861 a
SDict begin 12 H.A end
 -246 3861
a -246 3861 a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3861 a 0 TeXcolorgray 116 x FN(Ex)o(er)o(cice)14
b(2)p 0 TeXcolorgray 42 w FM(On)j(consid\350r)o(e)g(un)h(segment)1052
3978 y([)1084 3977 y FJ(A)s(B)1190 3978 y FM(])1233 3977
y(de)f(longueur)h(4)g(et)g(un)f(point)i(mobile)h FJ(M)25
b FM(pouvant)18 b(se)g(d\351placer)g(libr)o(ement)g(sur)g(ce)f
(segment.)p 0 TeXcolorgray 0 TeXcolorgray 1382 4460 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 136.85764 a add def
/d 0.0 a add neg def /h 44.95538 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end

1382 4460 a 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1240 4524 a
tx@Dict begin { 83.08195 42.67911 } PutCoor PutBegin  end
 1240 4524 a 51 x FM(4)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524
a 1240 4524 a
tx@Dict begin { 42.67911 19.91682 } PutCoor PutBegin  end
 1240 4524 a 1242 4562 a FJ(x)1240 4524
y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
39.83366 91.04869 39.83366   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
39.83366 79.66776 39.83366   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
17.07181 39.83366 17.07181   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 62.59595
17.07181 51.21501 17.07181   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1240 4524 a
tx@Dict begin { 24.185 30.729 } PutCoor PutBegin  end
 1240
4524 a 6 w FJ(A)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1240 4524 a
tx@Dict begin { 143.97081 30.729 } PutCoor PutBegin  end
 1240 4524 a FJ(B)1240
4524 y
tx@Dict begin  PutEnd  end
 1240 4524 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 62.59595 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1240 4524 a
tx@Dict begin { 64.30304 30.729 } PutCoor PutBegin  end
 1240 4524 a 2 w FJ(M)1240 4524 y
tx@Dict begin  PutEnd  end
 1240 4524
a 2518 4460 a
currentpoint initclip moveto
 2518 4460 a -246 4643 a FM(On)h(note)i
FJ(x)i FM(la)c(longueur)g(du)f(segment)946 4644 y([)977
4643 y FJ(A)5 b(M)1107 4644 y FM(])1150 4643 y(et)26
b FJ(f)19 b FM(\()r FJ(x)5 b FM(\))17 b(le)g(produit)h(des)f(longueurs)
25 b FJ(A)5 b(M)17 b FI(\243)10 b FJ(B)f(M)e FM(.)-246
4691 y
SDict begin H.S end
 -246 4691 a -246 4691 a
SDict begin 12 H.A end
 -246 4691 a -246 4691
a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 4691 a 0 TeXcolorgray -141 4787 a FM(1.)p 0 TeXcolorgray
43 w FJ(B)i(M)23 b FI(\306)d FJ(A)s(B)e FI(\241)e FJ(A)5
b(M)22 b FI(\306)14 b FM(4)c FI(\241)i FJ(x)5 b FM(,)19
b(donc)1688 4969 y FJ(f)g FM(\()r FJ(x)5 b FM(\))14 b
FI(\306)20 b FJ(A)5 b(M)18 b FI(\243)10 b FJ(B)f(M)1845
5094 y FI(\306)16 b FJ(x)f FI(\243)10 b FM(\(4)g FI(\241)i
FJ(x)5 b FM(\))1845 5218 y FI(\306)16 b FJ(x)f FI(\243)10
b FM(4)g FI(\305)i FJ(x)j FI(\243)10 b FM(\()p FI(\241)r
FJ(x)5 b FM(\))1845 5354 y FI(\306)14 b FM(4)r FJ(x)h
FI(\241)d FJ(x)2121 5320 y FG(2)2157 5354 y FM(.)p 0
TeXcolorgray 1930 5895 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FM(2.)p
0 TeXcolorgray 43 w(Le)20 b(produit)f(des)h(longueurs)26
b FJ(A)5 b(M)19 b FI(\243)11 b FJ(B)e(M)27 b FM(est)20
b(donn\351)g(par)27 b FJ(f)19 b FM(\()r FJ(x)5 b FM(\),)20
b(donc)f(maximiser)i(ce)e(produit)g(r)o(evient)i(\340)e(maximiser)i(la)
e(fonction)29 b FJ(f)17 b FM(.)j(On)-38 -63 y(\351tudie)e(donc)f(les)h
(var)q(iations)35 b(:)18 b(pour)f(tout)j FJ(x)g FI(2)1380
-62 y FM([)1406 -63 y(0;)8 b(4)1514 -62 y(])1548 -63
y(,)1594 120 y FJ(f)1637 85 y FE(0)1658 120 y FM(\()r
FJ(x)d FM(\))14 b FI(\306)h FM(4)10 b FI(\243)g FM(1)g
FI(\241)g FM(2)r FJ(x)21 b FI(\306)14 b(\241)p FM(2)r
FJ(x)h FI(\305)10 b FM(4.)-38 317 y(On)17 b(r\351sout)h(:)1863
614 y FI(\241)p FM(2)r FJ(x)d FI(\305)10 b FM(4)16 b
FI(\306)e FM(0)1747 738 y FI(\241)p FM(2)r FJ(x)h FI(\305)1963
754 y FD(\001)1963 738 y FM(4)d FI(\241)2080 754 y FD(\001)2080
738 y FM(4)j FI(\306)f FM(0)c FI(\241)g FM(4)1961 857
y FD(\010)1990 843 y(\010)1969 855 y FI(\241)p FM(2)r
FJ(x)p 1969 892 142 5 v 1984 970 a FD(\010)2013 956 y(\010)1992
968 y FI(\241)p FM(2)2135 911 y FI(\306)2214 855 y(\241)p
FM(4)p 2214 892 96 5 v 2214 968 a FI(\241)p FM(2)2076
1071 y FJ(x)20 b FI(\306)14 b FM(2.)-36 1293 y FJ(a)k
FI(\306)c(\241)p FM(2,)20 b FJ(a)h FM(est)d FI(\252)f
FM(donc)g(le)h(signe)g(est)g(de)f(la)g(for)q(me)46 b
FI(\305)17 b FC(\036)h FI(\241)p 1472 1210 262 4 v 1472
1335 4 127 v 1730 1335 V 1472 1337 262 4 v -38 1472 a
FM(On)f(obtient)h(le)g(tableau)g(de)f(signe)h(de)25 b
FJ(f)1160 1442 y FE(0)1198 1472 y FM(et)18 b(le)g(tableau)g(de)f(var)q
(iations)h(de)25 b FJ(f)50 b FM(:)p 0 TeXcolorgray 0
TeXcolorgray 137 1640 a

 137 1640 a 137 1640 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 137 1640
a
 0 setgray
 137 1640 a 167 w FJ(x)137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640
a 111 w FJ(f)291 1610 y FE(0)312 1640 y FM(\()r FJ(x)5
b FM(\))137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a 121 w FJ(f)19
b FM(\()r FJ(x)5 b FM(\))137 1640 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640
a FM(0)137 1640 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FM(2)137 1640
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FM(4)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 137 1640 a
 0 setgray
 137
1640 a FI(\305)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FM(0)137
1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 137 1640 a
 0 setgray
 137 1640 a FI(\241)137 1640 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 54.70424 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.6968 -84.73721 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 54.70424 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.6968 -84.73721 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 122.74042 -53.32764 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 124.73297 -51.33508 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 122.74042 -53.32764 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 124.73297 -51.33508 ] concat

 pgfs


 137 1640
a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640 a 137 1640 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 62.47359 -81.90782 moveto

 116.81953 -55.225 lineto

 pgfstr

 save

 [0.8976 0.44069 -0.44069 0.8976 116.81952 -55.22502 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -84.73721 ] concat

 pgfs


 137 1640 a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640
a 137 1640 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -84.73721 ] concat

 pgfs


 137 1640 a
 /pgfsc{}def/pgffc{}def
 137 1640 a 137 1640 a
 0 setgray
 137 1640
a 137 1640 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 130.51335 -54.17204 moveto

 184.85928 -80.85486 lineto

 pgfstr

 save

 [0.8976 -0.44069 0.44069 0.8976 184.85927 -80.85484 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
2050 2415 9 777 v 0 TeXcolorgray 2095 1721 a FM(Il)14
b(n)-6 b('est)14 b(pas)g(utile)g(ici)g(de)g(compl\351ter)g(l)o
('extr\351mit\351)g(des)g(\003\350ches)g(:)g(tout)2095
1821 y(ce)k(qui)g(nous)h(int\351r)o(esse)o(,)f(c)n('est)h(la)f(valeur)g
(de)h FJ(x)k FM(pour)18 b(laquelle)28 b FJ(f)37 b FM(at-)2095
1920 y(teint)19 b(son)f(maximum.)-38 2611 y(C)o(onclusion)e(:)23
b FJ(f)34 b FM(atteint)16 b(son)f(maximum)i(lorsque)h
FJ(x)h FI(\306)14 b FM(2,)i(donc)e(le)h(produit)21 b
FJ(A)5 b(M)11 b FI(\243)t FJ(B)e(M)24 b FM(est)15 b(maximal)h(lorsque)i
FJ(x)i FI(\306)14 b FM(2)h(;)g(c)n('est-\340-dir)o(e)f(quand)-36
2711 y FJ(M)25 b FM(est)18 b(le)g(milieu)h(de)594 2712
y([)625 2711 y FJ(A)s(B)731 2712 y FM(])765 2711 y(.)-246
2904 y FN(R)o(emarque)14 b(:)k FM(C)o(et)f(exemple)j(est)e(celui)g(qu)n
('a)f(choisi)h(F)m(er)q(mat)g(vers)g(1637)h(pour)f(exposer)g(sa)f
(m\351thode)i(de)e(l)o('ad\351galit\351)h(\226)g(anc\352tr)o(e)f(de)g
(la)g(d\351r)q(ivation)-246 3004 y(\226)h(pour)f(d\351ter)q(miner)h(le)
g(maximum)h(et)f(le)g(minimum)i(d)n('une)e(fonction.)-246
3087 y
SDict begin H.S end
 -246 3087 a -246 3087 a
SDict begin 12 H.A end
 -246 3087 a -246 3087
a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246 3087 a 0 TeXcolorgray 116 x FN(Ex)o(er)o(cice)c(3)p
0 TeXcolorgray 42 w FM(La)j(fonction)k FJ(g)26 b FM(est)18
b(d\351\002nie)g(sur)f FF(R)g FM(par)1438 3402 y FJ(g)10
b FM(\()r FJ(x)5 b FM(\))13 b FI(\306)i FM(0,)8 b(5)r
FJ(x)1823 3368 y FG(3)1870 3402 y FI(\305)i FM(0,)e(75)r
FJ(x)2129 3368 y FG(2)2176 3402 y FI(\241)i FM(3)r FJ(x)15
b FI(\241)10 b FM(1.)-246 3602 y(P)n(our)17 b(tout)j
FJ(x)g FI(2)14 b FF(R)31 b FM(:)984 3801 y FJ(g)1032
3767 y FE(0)1053 3801 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FM(0,)8 b(5)i FI(\243)g FM(3)r FJ(x)1505 3767 y FG(2)1553
3801 y FI(\305)g FM(0,)e(75)i FI(\243)g FM(2)r FJ(x)15
b FI(\241)10 b FM(3)g FI(\243)g FM(1)g FI(\241)g FM(0)19
b FI(\306)14 b FM(1,)8 b(5)r FJ(x)2514 3767 y FG(2)2561
3801 y FI(\305)i FM(1,)e(5)r FJ(x)15 b FI(\241)10 b FM(3.)-246
3950 y(La)18 b(d\351r)q(iv\351e)g(est)g(du)f(second)g(degr\351,)g(donc)
g(on)h(utilise)h(la)f(m\351thode)g(de)f(la)h(classe)g(de)f(pr)o
(emi\350r)o(e)h(:)p 0 TeXcolorgray -76 4050 a(\225)p
0 TeXcolorgray 44 w FJ(a)g FI(\306)c FM(1,)8 b(5,)19
b FJ(b)f FI(\306)c FM(1,)8 b(5,)19 b FJ(c)h FI(\306)14
b(\241)p FM(3.)p 0 TeXcolorgray -76 4150 a(\225)p 0 TeXcolorgray
42 w(le)k(discr)q(iminant)g(est)g FK(\242)c FI(\306)h
FJ(b)838 4119 y FG(2)882 4150 y FI(\241)10 b FM(4)r FJ(a)t(c)21
b FI(\306)14 b FM(1,)8 b(5)1268 4119 y FG(2)1314 4150
y FI(\241)i FM(4)g FI(\243)g FM(1,)e(5)i FI(\243)g FM(\()p
FI(\241)p FM(3\))17 b FI(\306)d FM(20,)8 b(25.)p 0 TeXcolorgray
-76 4249 a(\225)p 0 TeXcolorgray 42 w FK(\242)14 b FI(\310)h
FM(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1111
4571 y FJ(x)1152 4583 y FG(1)1202 4571 y FI(\306)1281
4515 y(\241)p FJ(b)c FI(\241)1458 4449 y(p)p 1522 4449
55 5 v 66 x FK(\242)p 1281 4552 296 5 v 1384 4628 a FM(2)r
FJ(a)1600 4571 y FI(\306)1679 4515 y(\241)p FM(1,)8 b(5)i
FI(\241)1917 4455 y(p)p 1983 4455 191 5 v 1983 4515 a
FM(20,)e(25)p 1679 4552 494 5 v 1814 4628 a(2)i FI(\243)g
FM(1,)e(5)2197 4571 y FI(\306)2276 4515 y(\241)p FM(1,)g(5)i
FI(\241)g FM(4,)e(5)p 2276 4552 350 5 v 2431 4628 a(3)2650
4571 y FI(\306)2729 4515 y(\241)p FM(6)p 2729 4552 96
5 v 2756 4628 a(3)2848 4571 y FI(\306)15 b(\241)p FM(2,)1111
4803 y FJ(x)1152 4815 y FG(2)1202 4803 y FI(\306)1281
4747 y(\241)p FJ(b)f FI(\305)1458 4681 y(p)p 1522 4681
55 5 v 66 x FK(\242)p 1281 4784 296 5 v 1384 4860 a FM(2)r
FJ(a)1600 4803 y FI(\306)1679 4747 y(\241)p FM(1,)8 b(5)i
FI(\305)1917 4688 y(p)p 1983 4688 191 5 v 1983 4747 a
FM(20,)e(25)p 1679 4784 494 5 v 1814 4860 a(2)i FI(\243)g
FM(1,)e(5)2197 4803 y FI(\306)2276 4747 y(\241)p FM(1,)g(5)i
FI(\305)g FM(4,)e(5)p 2276 4784 350 5 v 2431 4860 a(3)2650
4803 y FI(\306)2729 4747 y FM(3)p 2729 4784 41 5 v 2729
4860 a(3)2793 4803 y FI(\306)15 b FM(1.)-244 5098 y FJ(a)j
FI(\306)d FM(1,)8 b(5)20 b FJ(a)h FM(est)d FI(\251)f
FM(donc)g(le)h(signe)g(est)g(de)f(la)h(for)q(me)45 b
FI(\305)18 b FC(\036)27 b FI(\241)h FC(\036)17 b FI(\305)p
1258 5016 432 4 v 1258 5140 4 127 v 1686 5140 V 1258
5142 432 4 v 0 TeXcolorgray 0 TeXcolorgray -153 5266
a

 -153 5266 a -153 5266 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 168
w FJ(x)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -32.41563 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 106 w FJ(g)1
5235 y FE(0)21 5266 y FM(\()r FJ(x)5 b FM(\))-153 5266
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -61.64621 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a 116 w FJ(g)10 b FM(\()r FJ(x)5
b FM(\))-153 5266 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -79.37216 lineto

 238.11656 -79.37216 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -79.37216 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -79.37216 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 41.63185 -11.9539 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FI(\2411)-153
5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FI(\241)p FM(2)-153 5266
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FM(1)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 220.21606 -12.47694 ] concat

 pgfs


 -153 5266
a
 0 setgray
 -153 5266 a FI(\3051)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -32.32106 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266
a FI(\305)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FM(0)-153
5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -31.19028 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153 5266 a FI(\241)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 -153
5266 a
 0 setgray
 -153 5266 a FM(0)-153 5266 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -32.32106 ] concat

 pgfs


 -153 5266 a
 0 setgray
 -153
5266 a FI(\305)-153 5266 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -73.3945 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153
5266 a
 0 setgray
 -153 5266 a -153 5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -73.3945 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266
a -153 5266 a
 0 setgray
 -153 5266 a -153 5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 104.71327 -53.79332 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.70583 -51.80077 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153
5266 a -153 5266 a
 0 setgray
 -153 5266 a FM(4)-153 5266 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 104.71327 -53.79332 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.70583 -51.80077 ] concat

 pgfs


 -153
5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266 a FM(4)-153
5266 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 55.43437 -70.98253 moveto

 98.67314 -53.06723 lineto

 pgfstr

 save

 [0.92378 0.38275 -0.38275 0.92378 98.67314 -53.06725 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 27.59682 154.86748 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 156.86003 -73.31482 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153
5266 a -153 5266 a
 0 setgray
 -153 5266 a FI(\241)p FM(2.75)-153
5266 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 27.59682 154.86748 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 156.86003 -73.31482 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266
a FI(\241)p FM(2.75)-153 5266 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 117.42827 -51.73431 moveto

 148.7563 -63.08159 lineto

 pgfstr

 save

 [0.9402 -0.34055 0.34055 0.9402 148.75629 -63.08159 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -47.65628 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -45.66373 ] concat

 pgfs



-153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266 a -153
5266 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -47.65628 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -45.66373 ] concat

 pgfs


 -153 5266 a
 /pgfsc{}def/pgffc{}def
 -153 5266 a -153 5266 a
 0 setgray
 -153 5266
a -153 5266 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 186.30136 -62.99704 moveto

 220.16368 -48.9875 lineto

 pgfstr

 save

 [0.924 0.38228 -0.38228 0.924 220.16367 -48.9875 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
1946 5664 9 401 v 0 TeXcolorgray 0 TeXcolorgray 2161
5347 a FM(\225)p 0 TeXcolorgray 44 w FJ(g)10 b FM(\()p
FI(\241)p FM(2\))k FI(\306)g FM(0,)8 b(5)i FI(\243)g
FM(\()p FI(\241)p FM(2\))2848 5317 y FG(3)2895 5347 y
FI(\305)g FM(0,)e(75)i FI(\243)g FM(\()p FI(\241)p FM(2\))3332
5317 y FG(2)3379 5347 y FI(\241)g FM(3)g FI(\243)g FM(\()p
FI(\241)p FM(2\))g FI(\241)g FM(1)16 b FI(\306)e FM(4)p
0 TeXcolorgray 2161 5447 a(\225)p 0 TeXcolorgray 44 w
FJ(g)c FM(\(1\))k FI(\306)g FM(0,)8 b(5)i FI(\243)g FM(1)2684
5416 y FG(3)2731 5447 y FI(\305)g FM(0,)e(75)i FI(\243)g
FM(1)3059 5416 y FG(2)3107 5447 y FI(\241)g FM(3)g FI(\243)g
FM(1)g FI(\241)g FM(1)16 b FI(\306)f(\241)p FM(2,)8 b(75)p
0 TeXcolorgray 1930 5895 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -163 a FN(R)o(emarque)14 b(:)k FM(V)-5 b(oici)17
b(\340)g(quoi)h(r)o(essemble)h(la)e(courbe)g(r)o(epr\351sentative)i(:)p
0 TeXcolorgray 0 TeXcolorgray 996 947 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 229.89821 a add def
/d 0.0 a add neg def /h 122.06221 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 996 947 a 1959
458 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90546 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 113.81097 0.0 -116.08723 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 14.22636 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 63.16508 0.0 -58.89713   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 113.81097  0 -116.08723  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -116.08723
 113.81097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-58.89713  def /maxTickline 63.16508  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.16508
0.0 -58.89713   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
0.0 -116.08723 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 63.16508  0 -58.89713  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -58.89713
 63.16508  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-116.08723  def /maxTickline 113.81097  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 14.22636  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.16508
0.0 -58.89713   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
0.0 -116.08723 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1944 555 a FG(0)205 b(1)g(2)h(3)-997
b FE(\241)p FG(1)-309 b FE(\241)p FG(2)g FE(\241)p FG(3)f
FE(\241)p FG(4)1871 477 y(0)1829 595 y FE(\241)p FG(1)1829
714 y FE(\241)p FG(2)1829 832 y FE(\241)p FG(3)1829 950
y FE(\241)p FG(4)1871 359 y(1)1871 241 y(2)1871 123 y(3)1959
458 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.08 def /x1 4.0
def /dx x1 x sub 199 div def /F@pstplot (0.5*x^(3.0)+0.75*x^(2.0)-3.0*x-1.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
14.22636 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 14.22636 mul gt { moveto } {
dup -1.e30 14.22636 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2904 947
a
currentpoint initclip moveto
 2904 947 a -246 1018 a
SDict begin H.S end
 -246 1018 a -246 1018 a
SDict begin 12 H.A end
 -246
1018 a -246 1018 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 1018 a 0 TeXcolorgray 121 x FN(Ex)o(er)o(cice)
14 b(4)p 0 TeXcolorgray 42 w FM(La)j(fonction)i FJ(h)i
FM(est)d(d\351\002nie)g(sur)1131 1140 y([)1156 1139 y(1;)8
b FI(\3051)1357 1140 y FM([)1401 1139 y(par)1660 1338
y FJ(h)t FM(\()r FJ(x)d FM(\))15 b FI(\306)f FM(\()r
FJ(x)h FI(\241)10 b FM(6\))2109 1276 y FI(p)p 2173 1276
47 5 v 2175 1338 a FJ(x)c FM(.)-246 1480 y(On)18 b(utilise)h(la)e(for)q
(mule)h(pour)g(la)g(d\351r)q(iv\351e)f(d)n('un)h(produit)g(avec)637
1651 y FJ(u)t FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h FJ(x)f
FI(\241)10 b FM(6)884 b(,)h FJ(v)7 b FM(\()r FJ(x)e FM(\))14
b FI(\306)3051 1589 y(p)p 3115 1589 V 3117 1651 a FJ(x)5
b FM(,)637 1821 y FJ(u)688 1787 y FE(0)710 1821 y FM(\()r
FJ(x)g FM(\))14 b FI(\306)g FM(1)984 b(,)885 b FJ(v)2868
1787 y FE(0)2889 1821 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)3137
1765 y FM(1)p 3082 1802 151 5 v 3082 1882 a(2)3122 1824
y FI(p)p 3186 1824 47 5 v 3188 1882 a FJ(x)3243 1821
y FM(.)-246 2170 y(On)k(obtient,)g(pour)g(tout)i FJ(x)f
FI(2)629 2171 y FM([)654 2170 y(1;)8 b FI(\3051)855 2171
y FM([)913 2170 y(:)889 2341 y FJ(h)939 2306 y FE(0)960
2341 y FM(\()r FJ(x)d FM(\))15 b FI(\306)f FJ(u)1195
2306 y FE(0)1216 2341 y FM(\()r FJ(x)5 b FM(\))10 b FI(\243)i
FJ(v)7 b FM(\()r FJ(x)e FM(\))10 b FI(\305)g FJ(u)t FM(\()r
FJ(x)5 b FM(\))10 b FI(\243)i FJ(v)1888 2306 y FE(0)1910
2341 y FM(\()r FJ(x)5 b FM(\))1075 2511 y FI(\306)14
b FM(1)c FI(\243)1259 2449 y(p)p 1323 2449 V 1325 2511
a FJ(x)16 b FI(\305)10 b FM(\()r FJ(x)15 b FI(\241)10
b FM(6\))g FI(\243)1801 2455 y FM(1)p 1746 2492 151 5
v 1746 2572 a(2)1786 2514 y FI(p)p 1850 2514 47 5 v 1852
2572 a FJ(x)1075 2744 y FI(\306)1154 2629 y(p)p 1217
2629 V 1219 2687 a FJ(x)16 b FI(\243)10 b FM(2)1379 2629
y FI(p)p 1443 2629 V 1445 2687 a FJ(x)p 1154 2724 336
5 v 1246 2804 a FM(2)1286 2746 y FI(p)p 1350 2746 47
5 v 1352 2804 a FJ(x)1510 2744 y FI(\305)1587 2687 y
FJ(x)15 b FI(\241)10 b FM(6)p 1585 2724 163 5 v 1591
2804 a(2)1631 2746 y FI(p)p 1695 2746 47 5 v 1697 2804
a FJ(x)1075 2960 y FI(\306)1185 2904 y FM(2)r FJ(x)p
1154 2941 151 5 v 1154 3021 a FM(2)1194 2963 y FI(p)p
1258 2963 47 5 v 1260 3021 a FJ(x)1324 2960 y FI(\305)1401
2904 y FJ(x)15 b FI(\241)10 b FM(6)p 1399 2941 163 5
v 1405 3021 a(2)1445 2963 y FI(p)p 1509 2963 47 5 v 1511
3021 a FJ(x)2018 2873 y FA(\263)2049 2960 y FM(r)o(appel)19
b(:)2326 2898 y FI(p)p 2390 2898 V 2392 2960 a FJ(x)d
FI(\243)2512 2898 y(p)p 2575 2898 V 2577 2960 a FJ(x)k
FI(\306)2705 2898 y(p)p 2769 2898 V 2771 2960 a FJ(x)2815
2914 y FG(2)2864 2960 y FI(\306)c FJ(x)2979 2873 y FA(\264)1075
3177 y FI(\306)1154 3121 y FM(3)r FJ(x)f FI(\241)10 b
FM(6)p 1154 3158 203 5 v 1180 3238 a(2)1220 3180 y FI(p)p
1284 3180 47 5 v 1286 3238 a FJ(x)1366 3177 y FM(.)p
0 TeXcolorgray -76 3434 a(\225)p 0 TeXcolorgray 42 w(On)17
b(r\351sout)h(r)o(apidement)h(:)1438 3567 y(3)r FJ(x)c
FI(\241)10 b FM(6)16 b FI(\306)e FM(0)29 b FI(\()-12
b(\))29 b FM(3)r FJ(x)20 b FI(\306)14 b FM(6)29 b FI(\()-12
b(\))31 b FJ(x)20 b FI(\306)2510 3510 y FM(6)p 2510 3547
41 5 v 2510 3624 a(3)2575 3567 y FI(\306)14 b FM(2.)p
0 TeXcolorgray -76 3760 a(\225)p 0 TeXcolorgray 42 w(Dans)i(3)r
FJ(x)f FI(\241)10 b FM(6,)22 b FJ(a)c FI(\306)c FM(3)j
FI(\251)h FM(,)f(donc)45 b FI(\241)17 b FC(\036)h FI(\305)p
925 3678 262 4 v 925 3803 4 127 v 1183 3803 V 925 3805
262 4 v 0 TeXcolorgray -76 3879 a FM(\225)p 0 TeXcolorgray
42 w(2)37 3821 y FI(p)p 101 3821 47 5 v 103 3879 a FJ(x)k
FM(est)c(str)q(ictement)h(positif)g(pour)f(tout)i FJ(x)g
FI(2)1396 3880 y FM([)1422 3879 y(1;)8 b FI(\3051)1623
3880 y FM([)1657 3879 y(.)-246 4024 y(On)18 b(a)f(donc)g(le)g(tableau)h
(:)p 0 TeXcolorgray 0 TeXcolorgray -19 4179 a

 -19 4179
a -19 4179 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 168 w FJ(x)-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -37.04672 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 85 w FM(3)r FJ(x)h FI(\241)13
b FM(6)-19 4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -59.78375 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 114 w FM(2)135
4121 y FI(p)p 199 4121 47 5 v 201 4179 a FJ(x)-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.53096 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 99 w FJ(h)130 4149 y FE(0)160
4180 y FM(\()189 4179 y FJ(x)233 4180 y FM(\))-19 4179
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -116.1969 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a 110 w FJ(h)149 4180 y FM(\()178
4179 y FJ(x)222 4180 y FM(\))-19 4179 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.40787 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19
4179 a FM(1)-19 4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FM(2)-19
4179 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.78508 -13.89479 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(\3051)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 -19
4179 a
 0 setgray
 -19 4179 a FI(\241)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179
a FM(0)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(\305)-19 4179
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 -19 4179 a
 0 setgray

-19 4179 a FI(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FI(\241)-19
4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 -19 4179 a
 0 setgray
 -19 4179 a FM(0)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 -19 4179
a
 0 setgray
 -19 4179 a FI(\305)-19 4179 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 48.97566 -104.87193 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -102.82957 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a
-19 4179 a
 0 setgray
 -19 4179 a FI(\241)p FM(5)-19 4179 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 48.97566 -104.87193 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -102.82957 ] concat

 pgfs


 -19 4179
a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FI(\241)p FM(5)-19
4179 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 13.83826 27.93555 110.7652 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 112.75775 -129.09691 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FI(\241)p
FM(4)76 4114 y FI(p)p 140 4114 41 5 v 65 x FM(2)-19 4179
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 13.83826 27.93555 110.7652 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 112.75775 -129.09691 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a -19 4179 a
 0 setgray
 -19 4179 a FI(\241)p
FM(4)76 4114 y FI(p)p 140 4114 41 5 v 65 x FM(2)-19 4179
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 68.28064 -104.11165 moveto

 104.67169 -117.69301 lineto

 pgfstr

 save

 [0.93683 -0.34961 0.34961 0.93683 104.67169 -117.693 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -98.68509 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -96.69254 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179 a
-19 4179 a
 0 setgray
 -19 4179 a -19 4179 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 190.77661 -98.68509 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 192.76917 -96.69254 ] concat

 pgfs


 -19 4179 a
 /pgfsc{}def/pgffc{}def
 -19 4179
a -19 4179 a
 0 setgray
 -19 4179 a -19 4179 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 142.5386 -117.72867 moveto

 184.7506 -100.0574 lineto

 pgfstr

 save

 [0.9224 0.38612 -0.38612 0.9224 184.75058 -100.0574 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 1946 5332 9 1155 v 0 TeXcolorgray 0 TeXcolorgray
2161 4261 a FM(\225)p 0 TeXcolorgray 42 w FJ(h)t FM(\(1\))i
FI(\306)f FM(\(1)c FI(\241)g FM(6\))g FI(\243)2746 4196
y(p)p 2810 4196 41 5 v 65 x FM(1)15 b FI(\306)f(\241)p
FM(5)c FI(\243)g FM(1)16 b FI(\306)e(\241)p FM(5)k(;)p
0 TeXcolorgray 2161 4360 a(\225)p 0 TeXcolorgray 42 w
FJ(h)t FM(\(2\))d FI(\306)f FM(\(2)c FI(\241)g FM(6\))g
FI(\243)2746 4295 y(p)p 2810 4295 V 65 x FM(2)15 b FI(\306)f(\241)p
FM(4)3029 4295 y FI(p)p 3093 4295 V 65 x FM(2)q(.)-246
5407 y
SDict begin H.S end
 -246 5407 a -246 5407 a
SDict begin 12 H.A end
 -246 5407 a -246 5407
a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246 5407 a 0 TeXcolorgray 116 x FN(Ex)o(er)o(cice)g(5)p
0 TeXcolorgray 42 w FM(La)20 b(fonction)30 b FJ(f)40
b FM(est)21 b(d\351\002nie)g(sur)1151 5524 y([)1177 5523
y(1;)8 b(4)1285 5524 y(])1332 5523 y(par)28 b FJ(f)19
b FM(\()r FJ(x)5 b FM(\))18 b FI(\306)h FJ(x)e FI(\305)1846
5467 y FM(4)p 1843 5504 47 5 v 1845 5580 a FJ(x)1911
5523 y FI(\241)11 b FM(3.)22 b(On)e(note)i FH(C)34 b
FM(sa)21 b(courbe)f(r)o(epr\351sentative)o(,)28 b FJ(A)s
FM(,)21 b FJ(B)6 b FM(,)19 b FJ(C)30 b FM(les)21 b(points)h(de)e
FH(C)-246 5646 y FM(d)n('abscisses)f(r)o(espectives)f(1,)g(2,)g(4)9
b(;)18 b(et)g FJ(T)933 5658 y Fy(A)976 5646 y FM(,)f
FJ(T)1061 5658 y Fy(B)1108 5646 y FM(,)g FJ(T)1191 5658
y Fy(C)1258 5646 y FM(les)h(tangentes)h(\340)e FH(C)31
b FM(en)18 b(ces)g(points)o(.)p 0 TeXcolorgray 1930 5895
a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FM(1.)p
0 TeXcolorgray 43 w(P)n(our)17 b(d\351r)q(iver)-5 b(,)17
b(le)h(plus)h(simple)g(est)f(de)f(r\351\351cr)q(ir)o(e)24
b FJ(f)19 b FM(\()r FJ(x)5 b FM(\))17 b(sous)h(la)g(for)q(me)1725
36 y FJ(f)h FM(\()r FJ(x)5 b FM(\))14 b FI(\306)i FJ(x)f
FI(\305)10 b FM(4)g FI(\243)2201 -20 y FM(1)p 2198 17
47 5 v 2200 93 a FJ(x)2265 36 y FI(\241)g FM(3.)-38 224
y(On)17 b(obtient)h(alors)o(,)g(pour)g(tout)i FJ(x)g
FI(2)1021 225 y FM([)1047 224 y(1;)8 b(4)1155 225 y(])1213
224 y(:)1648 427 y FJ(f)1691 393 y FE(0)1712 427 y FM(\()r
FJ(x)d FM(\))14 b FI(\306)h FM(1)10 b FI(\305)g FM(4)g
FI(\243)2126 317 y FA(\265)2161 427 y FI(\241)2247 371
y FM(1)p 2226 408 82 5 v 2228 484 a FJ(x)2272 460 y FG(2)2318
317 y FA(\266)2362 427 y FI(\241)g FM(0)1826 638 y FI(\306)15
b FM(1)10 b FI(\241)2042 582 y FM(4)p 2021 619 V 2023
695 a FJ(x)2067 671 y FG(2)1826 854 y FI(\306)1908 798
y FJ(x)1952 768 y FG(2)p 1906 835 V 1908 911 a FJ(x)1952
887 y FG(2)2007 854 y FI(\241)2103 798 y FM(4)p 2082
835 V 2084 911 a FJ(x)2128 887 y FG(2)1826 1070 y FI(\306)1908
1014 y FJ(x)1952 984 y FG(2)1997 1014 y FI(\241)g FM(4)p
1906 1051 198 5 v 1965 1127 a FJ(x)2009 1103 y FG(2)-246
1192 y
SDict begin H.S end
 -246 1192 a -246 1192 a
SDict begin 12 H.A end
 -246 1192 a -246 1192
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246 1192 a 0 TeXcolorgray -141 1281 a FM(2.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Les)18
b(r)o(acines)g(de)h FJ(x)627 1251 y FG(2)673 1281 y FI(\241)10
b FM(4)17 b(sont)h(\351videntes)i(:)d(ce)g(sont)j FJ(x)1654
1293 y FG(1)1704 1281 y FI(\306)14 b(\241)p FM(2)k(et)i
FJ(x)2012 1293 y FG(2)2061 1281 y FI(\306)15 b FM(2.)i(S)o(eule)i(la)f
(deuxi\350me)h(est)f(dans)f(l)o('inter)q(valle)3532 1282
y([)3557 1281 y(1;)8 b(4)3665 1282 y(])3700 1281 y(.)p
0 TeXcolorgray 7 1381 a(\225)p 0 TeXcolorgray 44 w FJ(x)126
1350 y FG(2)178 1381 y FM(est)18 b(str)q(ictement)h(positif)g(pour)f
(tout)i FJ(x)g FI(2)1410 1382 y FM([)1435 1381 y(1;)8
b(4)1543 1382 y(])1578 1381 y(.)-38 1492 y(On)17 b(obtient)h(donc)f(le)
h(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray 137 1641
a

 137 1641 a 137 1641 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a 167 w FJ(x)137
1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -38.11853 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a 90 w FJ(x)271 1611 y FG(2)319
1641 y FI(\241)13 b FM(4)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -60.79727 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641
a 150 w FJ(x)331 1611 y FG(2)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.0266 ] concat

 pgfs


 137 1641 a
 0 setgray
 137
1641 a 107 w FJ(f)286 1611 y FE(0)316 1642 y FM(\()345
1641 y FJ(x)389 1642 y FM(\))137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -115.69254 ] concat

 pgfs


 137 1641 a
 0 setgray
 137
1641 a 117 w FJ(f)305 1642 y FM(\()334 1641 y FJ(x)378
1642 y FM(\))137 1641 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.40787 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FM(1)137
1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FM(2)137 1641 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FM(4)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(\241)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FM(0)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FI(\305)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a
FI(\305)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(\305)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(\241)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 137 1641
a
 0 setgray
 137 1641 a FM(0)137 1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 137 1641 a
 0 setgray
 137 1641 a FI(\305)137
1641 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FM(2)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FM(2)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 120.30951 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.30206 -130.09468 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FM(1)137
1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 120.30951 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.30206 -130.09468 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641 a 137 1641 a
 0 setgray
 137 1641 a FM(1)137
1641 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.96558 -103.07834 moveto

 114.25438 -122.83316 lineto

 pgfstr

 save

 [0.92819 -0.37201 0.37201 0.92819 114.25436 -122.83316 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137 1641
a 137 1641 a
 0 setgray
 137 1641 a FM(2)137 1641 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -102.82957 ] concat

 pgfs


 137 1641 a
 /pgfsc{}def/pgffc{}def
 137
1641 a 137 1641 a
 0 setgray
 137 1641 a FM(2)137 1641 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 133.00534 -123.72214 moveto

 182.29416 -103.96716 lineto

 pgfstr

 save

 [0.92819 0.37201 -0.37201 0.92819 182.29414 -103.96716 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2050 2794 9 1155 v 0 TeXcolorgray
2095 1725 a FM(Le)18 b(signe)f(de)i FJ(x)2541 1695 y
FG(2)2585 1725 y FI(\241)9 b FM(4)18 b(sur)2833 1726
y(])2858 1725 y FI(\2411)p FM(;)8 b FI(\3051)3152 1726
y FM([)3194 1725 y(est)18 b(de)e(la)h(for)q(me)46 b FI(\305)17
b FC(\036)28 b FI(\241)f FC(\036)17 b FI(\305)p 3714
1643 432 4 v 3714 1767 4 127 v 4142 1767 V 3714 1769
432 4 v 2095 1834 a FM(M)o(ais)e(comme)h(on)f(tr)o(availle)g(sur)g(l)o
('inter)q(valle)3456 1835 y([)3481 1834 y(1;)8 b(4)3589
1835 y(])3624 1834 y(,)15 b(il)g(ne)g(r)o(este)f(plus)2095
1945 y(que)k(la)g(par)q(tie)f(droite)45 b FI(\241)18
b FC(\036)f FI(\305)p 2767 1863 262 4 v 2767 1987 4 127
v 3025 1987 V 2767 1989 262 4 v 2095 2119 a FM(On)g(calcule)i(les)f
(valeurs)g(aux)f(extr\351mit\351s)j(des)d(\003\350ches)h(:)p
0 TeXcolorgray 2140 2233 a(\225)p 0 TeXcolorgray 50 w
FJ(f)h FM(\(1\))14 b FI(\306)h FM(1)10 b FI(\305)2567
2200 y FG(4)p 2567 2213 31 5 v 2567 2262 a(1)2618 2233
y FI(\241)g FM(3)15 b FI(\306)f FM(2)k(;)p 0 TeXcolorgray
2140 2342 a(\225)p 0 TeXcolorgray 50 w FJ(f)h FM(\(2\))14
b FI(\306)h FM(2)10 b FI(\305)2567 2309 y FG(4)p 2567
2322 V 2567 2370 a(2)2618 2342 y FI(\241)g FM(3)15 b
FI(\306)f FM(1)k(;)p 0 TeXcolorgray 2140 2450 a(\225)p
0 TeXcolorgray 50 w FJ(f)h FM(\(4\))14 b FI(\306)h FM(4)10
b FI(\305)2567 2417 y FG(4)p 2567 2430 V 2567 2479 a(4)2618
2450 y FI(\241)g FM(3)15 b FI(\306)f FM(2.)-246 2865
y
SDict begin H.S end
 -246 2865 a -246 2865 a
SDict begin 12 H.A end
 -246 2865 a -246 2865 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246
2865 a 0 TeXcolorgray -141 2976 a FM(3.)p 0 TeXcolorgray
43 w(On)j(r)o(appelle)i(que)f(la)g(tangente)g(\340)f(la)g(courbe)h(en)f
(un)h(point)g(d)n('abscisse)j FJ(a)g FM(a)c(pour)g(\351quation)1669
3140 y FJ(y)k FI(\306)h FJ(f)1846 3106 y FE(0)1868 3140
y FM(\()r FJ(a)t FM(\)\()r FJ(x)15 b FI(\241)d FJ(a)t
FM(\))e FI(\305)18 b FJ(f)g FM(\()r FJ(a)t FM(\).)-38
3316 y(A)o(ppliquons)h(cette)f(for)q(mule)g(avec)h FJ(a)f
FI(\306)d FM(1)i(\226)h(puisque)h(le)f(point)24 b FJ(A)c
FM(a)d(pour)h(abscisse)g(1)32 b(:)-30 3482 y FJ(f)19
b FM(\(1\))14 b FI(\306)g FM(2)k(\(d\351j\340)f(calcul\351\))h(et)26
b FJ(f)860 3452 y FE(0)881 3482 y FM(\(1\))14 b FI(\306)1068
3449 y FG(1)1099 3426 y Fx(2)1127 3449 y FE(\241)p FG(4)p
1068 3462 132 5 v 1104 3516 a(1)1135 3498 y Fx(2)1224
3482 y FI(\306)1303 3449 y FE(\241)p FG(3)p 1303 3462
73 5 v 1324 3510 a(1)1400 3482 y FI(\306)g(\241)p FM(3,)k(donc)f(l)o
('\351quation)j(de)d FJ(T)2318 3494 y Fy(A)2378 3482
y FM(est)1692 3658 y FJ(y)k FI(\306)h FJ(f)1869 3624
y FE(0)1890 3658 y FM(\(1\)\()r FJ(x)15 b FI(\241)10
b FM(1\))g FI(\305)18 b FJ(f)i FM(\(1\))1692 3783 y FJ(y)h
FI(\306)14 b(\241)p FM(3\()r FJ(x)h FI(\241)10 b FM(1\))g
FI(\305)g FM(2)1692 3908 y FJ(y)21 b FI(\306)14 b(\241)p
FM(3)r FJ(x)h FI(\305)10 b FM(3)g FI(\305)g FM(2)1692
4032 y FJ(y)21 b FI(\306)14 b(\241)p FM(3)r FJ(x)h FI(\305)10
b FM(5.)-38 4208 y(Le)17 b(point)24 b FJ(A)c FM(a)c(pour)i(coor)o
(donn\351es)f(\(1;)8 b(2\),)17 b(puisque)27 b FJ(f)19
b FM(\(1\))14 b FI(\306)g FM(2)k(;)f(la)g(tangente)g
FJ(T)2314 4220 y Fy(A)2374 4208 y FM(passe)h(donc)f(par)g(ce)f(point.)j
(P)n(our)d(la)h(tr)o(acer)-5 b(,)17 b(il)h(faut)f(placer)-38
4307 y(un)h(deuxi\350me)g(point)h(\(c)n('est)f(une)g(droite\))9
b(;)16 b(ce)h(que)h(l)o('on)h(peut)f(fair)o(e)f(de)g(trois)h(fa\347ons)
g(diff\351r)o(entes)g(:)-246 4359 y
SDict begin H.S end
 -246 4359 a -246
4359 a
SDict begin 12 H.A end
 -246 4359 a -246 4359 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 4359 a 0 TeXcolorgray
-38 4453 a FM(\(a\))p 0 TeXcolorgray 41 w(L)-10 b('or)o(donn\351e)18
b(\340)f(l)o('or)q(igine)h(est)p 1 0 0 TeXcolorrgb 18
w(5)p 0 TeXcolorgray 17 w(\(puisque)h FJ(T)1413 4465
y Fy(A)1471 4453 y FM(:)f FJ(y)j FI(\306)15 b(\241)p
FM(3)r FJ(x)p 1 0 0 TeXcolorrgb 5 w FI(\305)p FM(5)p
0 TeXcolorgray 1 w(\),)i(donc)g FJ(T)2181 4465 y Fy(A)2242
4453 y FM(passe)h(par)f(le)h(point)h(de)e(coor)o(donn\351es)g(\(0;)8
b(5\).)-246 4483 y
SDict begin H.S end
 -246 4483 a -246 4483 a
SDict begin 12 H.A end
 -246 4483
a -246 4483 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 4483 a 0 TeXcolorgray -44 4575 a FM(\(b\))p
0 TeXcolorgray 41 w(Le)16 b(coef\002cient)h(dir)o(ecteur)f(de)g
FJ(T)1060 4587 y Fy(A)1120 4575 y FM(est)p 0 0 1 TeXcolorrgb
17 w FI(\241)p FM(3)p 0 TeXcolorgray 16 w(\(puisque)i
FJ(T)1720 4587 y Fy(A)1778 4575 y FM(:)g FJ(y)j FI(\306)p
0 0 1 TeXcolorrgb 15 w(\241)p FM(3)p 0 TeXcolorgray 2
w FJ(x)12 b FI(\305)c FM(5\),)17 b(donc)f(en)h(par)q(tant)f(de)22
b FJ(A)s FM(,)16 b(il)h(suf\002t)g(d)n('avancer)f(de)g(1)h(carr)o(eau)e
(en)97 4675 y(abscisse)j(et)f(de)g(descendr)o(e)g(de)g(3)h(carr)o(eaux)
f(en)g(or)o(donn\351e)h(\226)f FJ(T)1995 4687 y Fy(A)2056
4675 y FM(passe)h(donc)f(par)g(le)h(point)g(de)f(coor)o(donn\351es)h
(\(2;)8 b FI(\241)p FM(1\).)-246 4703 y
SDict begin H.S end
 -246 4703 a -246
4703 a
SDict begin 12 H.A end
 -246 4703 a -246 4703 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246 4703 a 0 TeXcolorgray
-36 4797 a FM(\(c\))p 0 TeXcolorgray 41 w(On)26 b(calcule)i(un)f
(deuxi\350me)h(point)g(avec)f(la)g(for)q(mule)g(:)g(par)g(exemple)o(,)i
(si)g FJ(x)g FI(\306)23 b FM(2,)31 b FJ(y)g FI(\306)23
b(\241)p FM(3)15 b FI(\243)e FM(2)i FI(\305)f FM(5)24
b FI(\306)f(\241)p FM(1.)k(On)g(obtient)h(le)f(point)h(de)97
4897 y(coor)o(donn\351es)17 b(\(2;)8 b FI(\241)p FM(1\))18
b(\(le)g(m\352me)g(qu)n('avec)g(la)g(m\351thode)g(\(b\)\))e(et)i(on)f
(tr)o(ace)h(la)f(tangente)o(.)-246 4950 y
SDict begin H.S end
 -246 4950 a
-246 4950 a
SDict begin 12 H.A end
 -246 4950 a -246 4950 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 4950 a 0 TeXcolorgray
-141 5056 a FM(4.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 50 w FJ(f)i FM(\(2\))14 b FI(\306)g
FM(1)k(et)25 b FJ(f)499 5025 y FE(0)521 5056 y FM(\(2\))14
b FI(\306)708 5023 y FG(2)739 5000 y Fx(2)767 5023 y
FE(\241)p FG(4)p 708 5036 132 5 v 744 5090 a(2)775 5071
y Fx(2)864 5056 y FI(\306)943 5023 y FG(0)p 943 5036
31 5 v 943 5084 a(4)998 5056 y FI(\306)g FM(0,)k(donc)f(l)o
('\351quation)j(de)d FJ(T)1857 5068 y Fy(B)1921 5056
y FM(est)1751 5232 y FJ(y)k FI(\306)h FJ(f)1928 5198
y FE(0)1949 5232 y FM(\(2\)\()r FJ(x)15 b FI(\241)10
b FM(2\))g FI(\305)18 b FJ(f)i FM(\(2\))1751 5357 y FJ(y)h
FI(\306)14 b FM(0\()r FJ(x)h FI(\241)10 b FM(1\))g FI(\305)g
FM(1)1751 5481 y FJ(y)21 b FI(\306)14 b FM(1.)80 5646
y(Le)k(coef\002cient)g(dir)o(ecteur)f(\351tant)h(\351gal)f(\340)g(0,)h
(la)g(tangente)g FJ(T)1831 5658 y Fy(B)1895 5646 y FM(est)g(hor)q
(izontale)o(.)p 0 TeXcolorgray 1930 5895 a(5)p 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 7 -159 a FM(\225)p 0 TeXcolorgray 50 w
FJ(f)19 b FM(\(4\))14 b FI(\306)g FM(2)k(et)25 b FJ(f)499
-190 y FE(0)521 -159 y FM(\(4\))14 b FI(\306)708 -192
y FG(4)739 -215 y Fx(2)767 -192 y FE(\241)p FG(4)p 708
-179 132 5 v 744 -125 a(4)775 -144 y Fx(2)864 -159 y
FI(\306)943 -192 y FG(12)p 943 -179 62 5 v 943 -131 a(16)1029
-159 y FI(\306)g FM(0,)8 b(75,)19 b(donc)e(l)o('\351quation)j(de)d
FJ(T)1995 -147 y Fy(C)2062 -159 y FM(est)1751 34 y FJ(y)k
FI(\306)h FJ(f)1928 -1 y FE(0)1949 34 y FM(\(4\)\()r
FJ(x)15 b FI(\241)10 b FM(4\))g FI(\305)18 b FJ(f)i FM(\(4\))1751
158 y FJ(y)h FI(\306)14 b FM(0,)8 b(75\()r FJ(x)15 b
FI(\241)10 b FM(4\))g FI(\305)g FM(2)1751 283 y FJ(y)21
b FI(\306)14 b FM(0,)8 b(75)r FJ(x)15 b FI(\241)10 b
FM(3)g FI(\305)g FM(2)1751 407 y FJ(y)21 b FI(\306)14
b FM(0,)8 b(75)r FJ(x)15 b FI(\241)10 b FM(1.)80 588
y(On)j(tr)o(ace)g(la)g(tangente)g FJ(T)820 600 y Fy(C)884
588 y FM(par)g(la)g(m\352me)g(m\351thode)g(que)g FJ(T)1836
600 y Fy(A)1897 588 y FM(\(le)g(plus)g(simple)g(et)g(le)g(plus)g(p)q
(r\351cis)g(es)q(t)g(d)n('ut)q(ilis)q(er)g(l)o(')q(or)o(donn\351e)g
(\340)g(l)o(')q(or)q(igine\).)-246 621 y
SDict begin H.S end
 -246 621 a -246
621 a
SDict begin 12 H.A end
 -246 621 a -246 621 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 621 a 0 TeXcolorgray
-141 716 a FM(5.)p 0 TeXcolorgray 43 w(On)20 b(place)g(les)h(points)27
b FJ(A)s FM(,)20 b FJ(B)6 b FM(,)18 b FJ(C)9 b FM(,)20
b(on)g(tr)o(ace)g(les)h(trois)f(tangentes)h(et)f(on)g(constr)q(uit)h
(la)f(courbe)f(de)h(la)g(fonction)29 b FJ(f)39 b FM(\(en)20
b(bleu\))g(en)g(s)m('appuyant)-38 816 y(sur)d(ces)h(tangentes)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1187 2667 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 208.84344 a add def
/d 0.0 a add neg def /h 212.82681 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1187 2667 a
1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 171.28563 0.0 -37.55782 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.33553 0.0 -53.49129   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 171.28563  0 -37.55782  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -37.55782
 171.28563  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-53.49129  def /maxTickline 159.33553  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.33553
0.0 -53.49129   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 171.28563
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.33553  0 -53.49129  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -53.49129
 159.33553  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-37.55782  def /maxTickline 171.28563  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.33553
0.0 -53.49129   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 171.28563
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1484 2320 a FG(0)204 b(1)i(2)f(3)g(4)g(5)-1469
b FE(\241)p FG(1)1410 2242 y(0)1368 2478 y FE(\241)p
FG(1)1410 2006 y(1)1410 1770 y(2)1410 1533 y(3)1410 1297
y(4)1410 1061 y(5)1499 2223 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -28.45274 0.0
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 1499 2223 a
tx@Dict begin { 59.75093 -18.20973 } PutCoor PutBegin  end
 1499 2223 a 1 0.49803 0 TeXcolorrgb
53 x FJ(T)1551 2288 y Fy(A)p 0 TeXcolorgray 1499 2223
a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 28.45274 0.0
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1499 2223 a
tx@Dict begin { 92.75578 20.48601 } PutCoor PutBegin  end
 1499 2223 a 0 1 0 TeXcolorrgb 53 x FJ(T)1547
2288 y Fy(B)p 0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 6.02 def
/dx x1 x sub 49 div def /F@pstplot ((-4.--3.*x)/4.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
0  setcmykcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1499 2223 a
tx@Dict begin { 13.65718 -23.90019 } PutCoor PutBegin  end
 1499
2223 a 0 1 0 0 TeXcolorcmyk 53 x FJ(T)1545 2288 y Fy(C)p
0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 4 def /dx
x1 x sub 199 div def /F@pstplot (x+4.0/x-3.0)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1499 2223 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1499 2223 a 1 0.49803 0
TeXcolorrgb 6 w FJ(A)p 0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499
2223 a 1499 2223 a
tx@Dict begin { 59.18175 34.1432 } PutCoor PutBegin  end
 1499 2223 a 0 1 0 TeXcolorrgb FJ(B)p
0 TeXcolorgray 1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a 1499 2223 a
tx@Dict begin { 106.4134 64.87221 } PutCoor PutBegin  end
 1499
2223 a 0 1 0 0 TeXcolorcmyk 1497 2222 a FJ(C)p 0 TeXcolorgray
1499 2223 a
tx@Dict begin  PutEnd  end
 1499 2223 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 28.45274
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0 0  setcmykcolor  [ 113.81097
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2921 2667 a
currentpoint initclip moveto
 2921 2667 a -246
2733 a
SDict begin H.S end
 -246 2733 a -246 2733 a
SDict begin 12 H.A end
 -246 2733 a -246 2733
a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 2733 a 0 TeXcolorgray 132 x FN(Ex)o(er)o(cice)14
b(6)p 0 TeXcolorgray 42 w FM(La)j(fonction)i FJ(i)26
b FM(est)18 b(d\351\002nie)g(sur)f FF(R)g FM(par)1723
3080 y FJ(i)10 b FM(\()r FJ(x)5 b FM(\))13 b FI(\306)2005
3024 y FM(2)r FJ(x)p 1950 3061 198 5 v 1952 3137 a(x)1996
3113 y FG(2)2041 3137 y FI(\305)d FM(1)2157 3080 y(.)-246
3172 y
SDict begin H.S end
 -246 3172 a -246 3172 a
SDict begin 12 H.A end
 -246 3172 a -246 3172
a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246 3172 a 0 TeXcolorgray -141 3251 a FM(1.)p 0 TeXcolorgray
43 w(On)17 b(utilise)i(la)f(for)q(mule)g(pour)g(la)f(d\351r)q(iv\351e)h
(d)n('un)g(quotient)h(avec)810 3432 y FJ(u)t FM(\()r
FJ(x)5 b FM(\))15 b FI(\306)f FM(2)r FJ(x)854 b FM(,)d
FJ(v)7 b FM(\()r FJ(x)e FM(\))14 b FI(\306)i FJ(x)3126
3398 y FG(2)3171 3432 y FI(\305)10 b FM(1,)810 3557 y
FJ(u)861 3522 y FE(0)883 3557 y FM(\()r FJ(x)5 b FM(\))14
b FI(\306)g FM(2)874 b(,)851 b FJ(v)2897 3522 y FE(0)2918
3557 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(2)r FJ(x)5
b FM(.)-38 3876 y(On)17 b(obtient,)i(pour)e(tout)j FJ(x)g
FI(2)14 b FF(R)31 b FM(:)1492 4102 y FJ(i)1526 4067 y
FE(0)1546 4102 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1740
4045 y FJ(u)1791 4015 y FE(0)1812 4045 y FM(\()r FJ(x)5
b FM(\))10 b FI(\243)i FJ(v)7 b FM(\()r FJ(x)e FM(\))10
b FI(\241)g FJ(u)t FM(\()r FJ(x)5 b FM(\))10 b FI(\243)i
FJ(v)2484 4015 y FE(0)2506 4045 y FM(\()r FJ(x)5 b FM(\))p
1740 4082 867 5 v 2055 4158 a(\()r FJ(v)i FM(\()r FJ(x)e
FM(\)\))2257 4134 y FG(2)1660 4332 y FI(\306)1740 4270
y FM(2)10 b FI(\243)1855 4206 y FA(\241)1887 4270 y FJ(x)1931
4240 y FG(2)1977 4270 y FI(\305)g FM(1)2082 4206 y FA(\242)2122
4270 y FI(\241)g FM(2)r FJ(x)15 b FI(\243)10 b FM(2)r
FJ(x)p 1740 4312 697 5 v 1942 4343 a FA(\241)1974 4408
y FJ(x)2018 4384 y FG(2)2063 4408 y FI(\305)g FM(1)2168
4343 y FA(\242)2199 4365 y FG(2)1660 4590 y FI(\306)1740
4534 y FM(2)r FJ(x)1826 4504 y FG(2)1872 4534 y FI(\305)g
FM(2)g FI(\241)g FM(4)r FJ(x)2138 4504 y FG(2)p 1740
4571 435 5 v 1811 4602 a FA(\241)1843 4666 y FJ(x)1887
4642 y FG(2)1932 4666 y FI(\305)g FM(1)2037 4602 y FA(\242)2068
4623 y FG(2)1660 4849 y FI(\306)1740 4793 y(\241)p FM(2)r
FJ(x)1881 4763 y FG(2)1927 4793 y FI(\305)g FM(2)p 1740
4830 293 5 v 1741 4860 a FA(\241)1772 4925 y FJ(x)1816
4901 y FG(2)1861 4925 y FI(\305)g FM(1)1966 4860 y FA(\242)1997
4882 y FG(2)2042 4849 y FM(.)-246 5030 y
SDict begin H.S end
 -246 5030 a
-246 5030 a
SDict begin 12 H.A end
 -246 5030 a -246 5030 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 5030 a 0 TeXcolorgray
-141 5122 a FM(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 42 w(Les)18 b(r)o(acines)g(de)f
FI(\241)p FM(2)r FJ(x)722 5091 y FG(2)768 5122 y FI(\305)10
b FM(2)18 b(sont)g(assez)f(\351videntes)i(:)1082 5302
y FI(\241)p FM(2)r FJ(x)1223 5268 y FG(2)1269 5302 y
FI(\305)10 b FM(2)15 b FI(\306)f FM(0)29 b FI(\()-12
b(\))29 b FM(2)14 b FI(\306)h FM(2)r FJ(x)1906 5268 y
FG(2)1970 5302 y FI(\()-12 b(\))29 b FM(1)15 b FI(\306)h
FJ(x)2309 5268 y FG(2)2372 5302 y FI(\()-12 b(\))2541
5303 y FM(\()2570 5302 y FJ(x)20 b FI(\306)14 b FM(1)k(ou)h
FJ(x)h FI(\306)14 b(\241)p FM(1)3088 5303 y(\))3123 5302
y(.)p 0 TeXcolorgray 7 5483 a(\225)p 0 TeXcolorgray 80
5419 a FA(\241)111 5483 y FJ(x)155 5453 y FG(2)201 5483
y FI(\305)c FM(1)306 5419 y FA(\242)336 5438 y FG(2)388
5483 y FM(est)18 b(str)q(ictement)h(positif)g(pour)f(tout)g(r\351el)i
FJ(x)5 b FM(.)-38 5597 y(On)17 b(obtient)h(donc)f(le)h(tableau)g(:)p
0 TeXcolorgray 1930 5895 a(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 3 -244 a

 3 -244 a 3 -244
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a 167 w FJ(x)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -33.86502 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a 41 w FI(\241)p FM(2)r FJ(x)185 -274 y FG(2)232 -244
y FI(\305)11 b FM(2)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -53.15909 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a 46 -308
a FA(\241)78 -244 y FJ(x)122 -274 y FG(2)167 -244 y FI(\305)f
FM(1)272 -308 y FA(\242)302 -289 y FG(2)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -72.60608 ] concat

 pgfs


 3 -244
a
 0 setgray
 3 -244 a 107 w FJ(i)144 -274 y FE(0)173 -243 y FM(\()202
-244 y FJ(x)246 -243 y FM(\))3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -101.90143 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a 118 w FJ(i)163 -243 y FM(\()191 -244 y FJ(x)235 -243
y FM(\))3 -244 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -119.05826 moveto

 238.11656 -119.05826 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -119.05826 lineto

 238.11656 -119.05826 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -119.05826 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -119.05826 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 41.63185 -11.9539 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\2411)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs



3 -244 a
 0 setgray
 3 -244 a FI(\241)p FM(1)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 3 -244 a
 0 setgray
 3
-244 a FM(1)3 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 220.21606 -12.47694 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\3051)3 -244
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -31.19028 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\241)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a FM(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -32.32106 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 3
-244 a
 0 setgray
 3 -244 a FM(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -31.19028 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\241)3
-244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3
-244 a FI(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -52.16486 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\305)3 -244
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -70.87787 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\241)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -59.52911 moveto

 109.13673 -79.37216 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -72.49553 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244
a FM(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -72.00865 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\305)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -59.52911 moveto

 168.66588 -79.37216 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -72.49553 ] concat

 pgfs


 3
-244 a
 0 setgray
 3 -244 a FM(0)3 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -70.87787 ] concat

 pgfs


 3 -244 a
 0 setgray
 3 -244 a FI(\241)3
-244 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -87.34238 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -85.34982 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 47.61504 -87.34238 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60759 -85.34982 ] concat

 pgfs


 3
-244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 101.4156 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 103.40816 -113.0806 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3
-244 a 3 -244 a
 0 setgray
 3 -244 a FI(\241)p FM(1)3 -244 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 101.4156 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 103.40816 -113.0806 ] concat

 pgfs


 3 -244
a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a FI(\241)p FM(1)3 -244 y


 pgfr

 restore

 restore

 save

0 TeXcolorgray
 55.43437 -87.76462 moveto

 95.3754 -104.3151 lineto

 pgfstr

 save

 [0.92378 -0.38277 0.38277 0.92378 95.3754 -104.3151 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 164.24243 -93.47942 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -91.48686 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244
a
 0 setgray
 3 -244 a FM(1)3 -244 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 164.24243 -93.47942 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -91.48686 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3
-244 a FM(1)3 -244 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 120.72566 -105.8119 moveto

 158.13216 -92.24084 lineto

 pgfstr

 save

 [0.94003 0.34105 -0.34105 0.94003 158.13216 -92.24084 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -113.0806 ] concat

 pgfs


 3
-244 a
 /pgfsc{}def/pgffc{}def
 3 -244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 226.20248 -115.07315 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 228.19504 -113.0806 ] concat

 pgfs


 3 -244 a
 /pgfsc{}def/pgffc{}def
 3
-244 a 3 -244 a
 0 setgray
 3 -244 a 3 -244 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 176.9258 -91.83998 moveto

 220.16461 -109.75517 lineto

 pgfstr

 save

 [0.92378 -0.38275 0.38275 0.92378 220.16461 -109.75516 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 2050 767 9 1013 v 0 TeXcolorgray 0 TeXcolorgray
2140 -163 a FM(\225)p 0 TeXcolorgray 42 w FJ(i)g FM(\()p
FI(\241)p FM(1\))k FI(\306)2503 -198 y FG(2)p FE(\243)p
FG(\()p FE(\241)p FG(1\))p 2489 -182 215 5 v 2489 -129
a(\()p FE(\241)p FG(1\))2602 -147 y Fx(2)2630 -129 y
FE(\305)p FG(1)2727 -163 y FI(\306)2806 -195 y FE(\241)p
FG(2)p 2806 -182 73 5 v 2827 -134 a(2)2903 -163 y FI(\306)g(\241)p
FM(1)k(;)p 0 TeXcolorgray 2140 -36 a(\225)p 0 TeXcolorgray
42 w FJ(i)10 b FM(\(1\))k FI(\306)2438 -72 y FG(2)p FE(\243)p
FG(1\))p 2434 -56 132 5 v 2434 -2 a(1)2465 -21 y Fx(2)2493
-2 y FE(\305)p FG(1)2590 -36 y FI(\306)2669 -69 y FG(2)p
2669 -56 31 5 v 2669 -8 a(2)2724 -36 y FI(\306)g FM(1.)-246
849 y
SDict begin H.S end
 -246 849 a -246 849 a
SDict begin 12 H.A end
 -246 849 a -246 849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246
849 a -246 849 a
SDict begin H.S end
 -246 849 a -246 849 a
SDict begin 12 H.A end
 -246 849 a -246
849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 849 a 0 TeXcolorgray -141 964 a FM(3.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w FJ(i)c FM(\(0\))j FI(\306)379 931 y FG(2)p FE(\243)p
FG(0)p 365 944 132 5 v 365 998 a(0)396 979 y Fx(2)424
998 y FE(\305)p FG(1)521 964 y FI(\306)600 931 y FG(0)p
600 944 31 5 v 600 992 a(1)655 964 y FI(\306)h FM(0)k(et)g
FJ(i)899 934 y FE(0)919 964 y FM(\(0\))d FI(\306)1107
931 y FE(\241)p FG(2)p FE(\243)p FG(0)1253 908 y Fx(2)1280
931 y FE(\305)p FG(2)p 1107 944 247 5 v 1123 1015 a FM(\()1150
1009 y FG(0)1181 991 y Fx(2)1209 1009 y FE(\305)p FG(1)1282
1015 y FM(\))1308 979 y Fx(2)1377 964 y FI(\306)1456
931 y FG(2)p 1456 944 31 5 v 1456 992 a(1)1511 964 y
FI(\306)f FM(2,)k(donc)f(l)o('\351quation)j(de)d(\()p
FJ(T)12 b FM(\))17 b(est)1783 1186 y FJ(y)k FI(\306)h
FJ(f)1960 1151 y FE(0)1981 1186 y FM(\(0\)\()r FJ(x)15
b FI(\241)10 b FM(0\))g FI(\305)18 b FJ(f)i FM(\(0\))1783
1310 y FJ(y)h FI(\306)14 b FM(2)r FJ(x)h FI(\305)10 b
FM(0)1783 1435 y FJ(y)21 b FI(\306)14 b FM(2)r FJ(x)5
b FM(.)-246 1548 y
SDict begin H.S end
 -246 1548 a -246 1548 a
SDict begin 12 H.A end
 -246 1548
a -246 1548 a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 1548 a 0 TeXcolorgray 4 1642 a FM(\(b\))p
0 TeXcolorgray 41 w(P)n(our)16 b(\351tudier)i(les)g(positions)i(r)o
(elatives)e(de)f(\()n FJ(C)9 b FM(\))k(:)19 b FJ(y)i
FI(\306)1780 1610 y FG(2)q Fy(x)p 1745 1623 137 5 v 1746
1676 a(x)1780 1658 y Fx(2)1809 1676 y FE(\305)p FG(1)1909
1642 y FM(et)c(\()p FJ(T)12 b FM(\))i(:)19 b FJ(y)i FI(\306)14
b FM(2)r FJ(x)5 b FM(,)18 b(on)g(\351tudie)g FN(le)d(signe)g(de)h(la)f
(diff\351r)o(ence)h FM(:)2010 1819 y(2)r FJ(x)p 1955
1856 198 5 v 1957 1932 a(x)2001 1908 y FG(2)2047 1932
y FI(\305)10 b FM(1)2173 1875 y FI(\241)g FM(2)r FJ(x)5
b FM(.)p 0 TeXcolorgray 190 2081 a(\225)p 0 TeXcolorgray
41 w(P)n(our)17 b(les)h(valeurs)g(de)i FJ(x)i FM(pour)c(lesquelles)i
(cette)e(diff\351r)o(ence)g(vaut)g(0,)g(les)g(deux)f(courbes)h(se)f
(coupent)9 b(;)p 0 TeXcolorgray 190 2181 a(\225)p 0 TeXcolorgray
41 w(pour)18 b(les)g(valeurs)g(de)h FJ(x)k FM(pour)18
b(lesquelles)i(cette)e(diff\351r)o(ence)g(est)g(str)q(ictement)h
(positive)o(,)f(\()n FJ(C)9 b FM(\))17 b(est)h(au-dessus)h(de)e(\()p
FJ(T)12 b FM(\))17 b(;)p 0 TeXcolorgray 190 2281 a(\225)p
0 TeXcolorgray 41 w(pour)h(les)g(valeurs)g(de)h FJ(x)k
FM(pour)18 b(lesquelles)i(cette)e(diff\351r)o(ence)g(est)g(str)q
(ictement)h(n\351gative)o(,)f(\()n FJ(C)9 b FM(\))16
b(est)i(en-dessous)h(de)e(\()p FJ(T)12 b FM(\).)145 2430
y(On)17 b(commence)h(par)g(calculer)g(la)f(diff\351r)o(ence)h(:)1647
2710 y(2)r FJ(x)p 1592 2747 V 1594 2823 a(x)1638 2799
y FG(2)1683 2823 y FI(\305)10 b FM(1)1809 2766 y FI(\241)g
FM(2)r FJ(x)20 b FI(\306)2110 2710 y FM(2)r FJ(x)p 2055
2747 V 2057 2823 a(x)2101 2799 y FG(2)2146 2823 y FI(\305)10
b FM(1)2272 2766 y FI(\241)2347 2705 y FM(2)r FJ(x)2441
2640 y FA(\241)2474 2705 y FJ(x)2518 2674 y FG(2)2563
2705 y FI(\305)g FM(1)2668 2640 y FA(\242)p 2347 2747
352 5 v 2426 2823 a FJ(x)2470 2799 y FG(2)2515 2823 y
FI(\305)g FM(1)1975 2982 y FI(\306)2110 2926 y FM(2)r
FJ(x)p 2055 2963 198 5 v 2057 3039 a(x)2101 3015 y FG(2)2146
3039 y FI(\305)g FM(1)2272 2982 y FI(\241)2347 2926 y
FM(2)r FJ(x)2433 2896 y FG(3)2479 2926 y FI(\305)g FM(2)r
FJ(x)p 2347 2963 285 5 v 2392 3039 a(x)2436 3015 y FG(2)2482
3039 y FI(\305)g FM(1)1975 3198 y FI(\306)2046 3142 y
FD(\010)2067 3132 y(\010)2055 3142 y FM(2)r FJ(x)16 b
FI(\241)10 b FM(2)r FJ(x)2303 3112 y FG(3)2349 3142 y
FI(\241)r FD(\010)2426 3132 y(\010)2414 3142 y FM(2)r
FJ(x)p 2055 3179 447 5 v 2181 3255 a(x)2225 3231 y FG(2)2271
3255 y FI(\305)g FM(1)1975 3414 y FI(\306)2065 3358 y(\241)p
FM(2)r FJ(x)2206 3328 y FG(3)p 2055 3395 198 5 v 2057
3471 a FJ(x)2101 3447 y FG(2)2146 3471 y FI(\305)g FM(1)2262
3414 y(.)p 0 TeXcolorgray 0 TeXcolorgray -50 3644 a

 -50
3644 a -50 3644 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -15.95473 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 171 w Fu(x)-50
3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -46.0215 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 116 w Ft(\241)p Fv(2)q Fu(x)179
3620 y Fs(3)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -74.01164 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 19 3593
a Fr(\241)43 3644 y Fu(x)79 3620 y Fs(2)119 3644 y Ft(\305)e
Fv(1)203 3593 y Fr(\242)227 3607 y Fs(2)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -101.7207 ] concat

 pgfs


 -50
3644 a
 0 setgray
 -50 3644 a 76 3618 a Fq(\241)p Fs(2)q Fo(x)173
3597 y Fx(3)p 76 3629 125 4 v 77 3679 a Fo(x)108 3663
y Fx(2)136 3679 y Fq(\305)p Fs(1)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -149.01718 ] concat

 pgfs


 -50 3644
a
 0 setgray
 -50 3644 a 62 w Fv(P)n(ositions)24 3723 y(r)o(elatives)-29
3802 y(des)19 b(courbes)-50 3644 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -113.38724 moveto

 255.12128 -113.38724 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -198.42766 moveto

 255.12128 -198.42766 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -198.42766 lineto

 255.12128 -198.42766 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -198.42766 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -198.42766 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 64.48688 -15.7993 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644
a Ft(\2411)-50 3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.96277 -16.60829 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fv(0)-50
3644 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.56781 -16.21774 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Ft(\3051)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -44.56454 ] concat

 pgfs


 -50
3644 a
 0 setgray
 -50 3644 a Ft(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.9627 -44.9551 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644
a Fv(0)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -43.65994 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Ft(\241)-50 3644
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -72.91136 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Ft(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -72.91136 ] concat

 pgfs


 -50 3644 a
 0 setgray

-50 3644 a Ft(\305)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.74908 -101.25816 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Ft(\305)-50
3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -85.04042 moveto

 155.90744 -113.38724 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.9627 -101.64873 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fv(0)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.7895 -100.35356 ] concat

 pgfs


 -50 3644
a
 0 setgray
 -50 3644 a Ft(\241)-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.50194 -158.17696 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a
Fv(\()n Fu(C)7 b Fv(\))15 b(au-dessus)d(de)i(\()p Fu(T)9
b Fv(\))-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.92334 -194.02599 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a 0 TeXcolorgray
0 TeXcolorgray 7 w Fn(t)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3578 a(n)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -48 3511 a(e)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3445 a(p)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -50 3378 a(u)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -49 3312 a(o)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -47 3246 a(c)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-47 3113 a(e)p 0 TeXcolorgray 0 TeXcolorgray -48 3046
a(S)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -50 3644
a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 162.4143 -158.17696 ] concat

 pgfs


 -50 3644 a
 0 setgray
 -50 3644 a Fv(\()n Fu(C)e Fv(\))15 b(en-dessous)e(de)h(\()
p Fu(T)9 b Fv(\))-50 3644 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2141 5316
9 1674 v 0 TeXcolorgray 2187 3725 a FM(P)n(our)16 b(compl\351ter)j(le)f
(tableau)g(de)f(signe)h(:)p 0 TeXcolorgray 2232 3840
a(\225)p 0 TeXcolorgray 42 w FI(\241)p FM(2)r FJ(x)2446
3809 y FG(3)2496 3840 y FI(\306)c FM(0)j(lorsque)k FJ(x)e
FI(\306)c FM(0)i(;)p 0 TeXcolorgray 2232 3939 a(\225)p
0 TeXcolorgray 42 w FI(\241)p FM(2)r FJ(x)2446 3909 y
FG(3)2499 3939 y FM(est)g FI(\252)h FM(lorsque)i FJ(x)j
FM(est)18 b(str)q(ictement)g(positif)9 b(;)p 0 TeXcolorgray
2232 4039 a(\225)p 0 TeXcolorgray 42 w FI(\241)p FM(2)r
FJ(x)2446 4009 y FG(3)2499 4039 y FM(est)17 b FI(\251)h
FM(lorsque)i FJ(x)j FM(est)18 b(str)q(ictement)g(n\351gatif)9
b(;)p 0 TeXcolorgray 2232 4150 a(\225)p 0 TeXcolorgray
2305 4085 a FA(\241)2336 4150 y FJ(x)2380 4119 y FG(2)2426
4150 y FI(\305)h FM(1)2531 4085 y FA(\242)2561 4105 y
FG(2)2613 4150 y FM(est)18 b(str)q(ictement)h(positif)g(pour)f(tout)g
(r\351el)h FJ(x)5 b FM(.)-246 5399 y
SDict begin H.S end
 -246 5399 a -246
5399 a
SDict begin 12 H.A end
 -246 5399 a -246 5399 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246 5399 a 0 TeXcolorgray
-141 5513 a FM(4.)p 0 TeXcolorgray 0 TeXcolorgray 1930
5895 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 648 959 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 338.58746 a add def
/d 0.0 a add neg def /h 145.10915 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 648 959 a 2047
378 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 170.14728 0.0 -168.44019 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -142.26372 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 75.11522 0.0 -69.99393   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 170.14728  0 -168.44019  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -168.44019
 170.14728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 75.11522  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -69.99393   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.14728
0.0 -168.44019 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 75.11522  0 -69.99393  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -69.99393
 75.11522  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-168.44019  def /maxTickline 170.14728  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -69.99393   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.14728
0.0 -168.44019 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2032 475 a FG(0)205 b(1)g(2)g(3)g(4)g(5)-1469
b FE(\241)p FG(1)-309 b FE(\241)p FG(2)g FE(\241)p FG(3)g
FE(\241)p FG(4)f FE(\241)p FG(5)1958 397 y(0)1916 634
y FE(\241)p FG(1)1916 870 y FE(\241)p FG(2)1958 161 y(1)1958
-75 y(2)2047 378 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -5.919999999999999
def /x1 5.979999999999995 def /dx x1 x sub 199 div def /F@pstplot (2.0*x/(x^(2.0)+1.0))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -5.92 def /x1 5.98
def /dx x1 x sub 49 div def /F@pstplot ((-0.--2.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 2047 378 a
tx@Dict begin { 34.71237 54.06003 } PutCoor PutBegin  end
 2047
378 a 1 0 0 TeXcolorrgb 54 x FM(\()p FJ(T)12 b FM(\))p
0 TeXcolorgray 2047 378 a
tx@Dict begin  PutEnd  end
 2047 378 a 2047 378 a
tx@Dict begin { 97.8775 29.59065 } PutCoor PutBegin  end
 2047
378 a 0 0 1 TeXcolorrgb 54 x FM(\()n FJ(C)d FM(\))p 0
TeXcolorgray 2047 378 a
tx@Dict begin  PutEnd  end
 2047 378 a 3459 959 a
currentpoint initclip moveto
 3459 959
a -246 1024 a
SDict begin H.S end
 -246 1024 a -246 1024 a
SDict begin 12 H.A end
 -246 1024 a -246
1024 a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 1024 a 0 TeXcolorgray 132 x FN(Ex)o(er)o(cice)14
b(7)p 0 TeXcolorgray 42 w FM(La)j(distance)h(\(en)f(m\))h(par)o(cour)q
(ue)f(au)g(temps)k FJ(t)k FM(\(en)18 b(s\))f(par)g(une)h(pierr)o(e)f
(en)h(chute)g(libr)o(e)f(est)h FJ(d)7 b FM(\()r FJ(t)h
FM(\))14 b FI(\306)g FM(5)r FJ(t)3193 1126 y FG(2)3229
1156 y FM(.)-246 1256 y(On)k(lance)f(cette)h(pierr)o(e)g(d)n('une)g
(hauteur)g(de)f(20)i(m.)-246 1301 y
SDict begin H.S end
 -246 1301 a -246
1301 a
SDict begin 12 H.A end
 -246 1301 a -246 1301 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 1301 a 0 TeXcolorgray
-141 1397 a FM(1.)p 0 TeXcolorgray 43 w(La)e(pierr)o(e)h(arr)q(ive)f
(au)g(sol)h(quand)f(elle)i(a)e(par)o(cour)q(u)g(20)h(m.)g(Il)e(faut)i
(donc)f(r\351soudr)o(e)g(l)o('\351quation)j(5)r FJ(t)2880
1367 y FG(2)2930 1397 y FI(\306)14 b FM(20)32 b(:)989
1661 y(5)r FJ(t)1065 1626 y FG(2)1115 1661 y FI(\306)14
b FM(20)29 b FI(\()-12 b(\))31 b FJ(t)1498 1626 y FG(2)1547
1661 y FI(\306)1627 1604 y FM(20)p 1627 1641 82 5 v 1647
1718 a(5)1746 1661 y FI(\()-12 b(\))31 b FJ(t)1951 1626
y FG(2)2000 1661 y FI(\306)14 b FM(4)29 b FI(\()-12 b(\))2307
1505 y FA(0)2307 1642 y(@)2355 1661 y FJ(t)22 b FI(\306)14
b FM(2)73 b(ou)120 b FJ(t)22 b FI(\306)15 b(\241)p FM(2)2793
1695 y FA(|)p 2827 1695 39 10 v 39 w({z)p 2934 1695 V
39 w(})2757 1776 y FG(impossible)3044 1505 y FA(1)3044
1642 y(A)3098 1661 y FM(.)-38 1955 y(C)o(onclusion)k(:)f(la)f(pierr)o
(e)g(arr)q(ive)g(au)h(sol)f(apr\350s)h(2)g(s)o(.)-246
1986 y
SDict begin H.S end
 -246 1986 a -246 1986 a
SDict begin 12 H.A end
 -246 1986 a -246 1986
a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 1986 a 0 TeXcolorgray -141 2083 a FM(2.)p 0 TeXcolorgray
43 w(On)f(constr)q(uit)h(la)g(courbe)f(\340)g(par)q(tir)g(d)n('un)h
(tableau)g(de)f(valeurs)h(\(avec)f(un)h(pas)f(de)h(0,4)g(par)f
(exemple\).)p 0 TeXcolorgray 0 TeXcolorgray 1321 2167
1466 4 v 1321 2267 4 100 v 1376 2237 a FJ(t)p 1566 2267
V 217 w FM(0)p 1709 2267 V 103 w(0,)8 b(4)p 1922 2267
V 105 w(0,)g(8)p 2134 2267 V 104 w(1,)g(2)p 2346 2267
V 125 w(1,)g(6)p 2599 2267 V 145 w(2)p 2783 2267 V 1321
2270 1466 4 v 1321 2370 4 100 v 1374 2340 a FJ(d)f FM(\()r
FJ(t)h FM(\))p 1566 2370 V 103 w(0)p 1709 2370 V 103
w(0,)g(8)p 1922 2370 V 105 w(3,)g(2)p 2134 2370 V 104
w(7,)g(2)p 2346 2370 V 105 w(12,)g(8)p 2599 2370 V 104
w(20)p 2783 2370 V 1321 2373 1466 4 v -38 2494 a(P)n(our)17
b(obtenir)g(ce)h(tableau,)g(on)f(utilise)i(la)f(calculatr)q(ice)g
(\(bien)f(s\373r)-5 b(,)18 b(on)g(met)g(des)h FJ(x)k
FM(\340)17 b(la)g(place)h(des)i FJ(t)8 b FM(\))17 b(:)p
0 TeXcolorgray 0 TeXcolorgray 125 2731 a Fm(C)o(alculatr)q(ices)e
(coll\350ge)p 0 TeXcolorgray 10 3464 a Fl(\225)p 0 TeXcolorgray
70 w(MODE)p 80 3391 269 4 v 80 3492 4 104 v 345 3492
V 80 3494 269 4 v 0 TeXcolorgray 10 3556 a(\225)p 0 TeXcolorgray
42 w(4)h(:)f(T)l(ABLE)g(ou)g(4)h(:)f(T)-7 b(ableau)p
0 TeXcolorgray 10 3647 a(\225)p 0 TeXcolorgray 42 w(f\(X\)=5X)311
3620 y FG(2)390 3647 y Fl(EXE)p 362 3573 183 4 v 362
3673 4 102 v 541 3673 V 362 3675 183 4 v 80 3738 a(\(si)38
b(on)f(demande)i(g\(X\)=,)g(ne)80 3830 y(r)q(ien)14 b(r)o(entr)o(er\))p
0 TeXcolorgray 10 3921 a(\225)p 0 TeXcolorgray 42 w(D\351but)8
b(?)14 b(0)44 b(EXE)p 377 3847 V 377 3947 4 102 v 556
3947 V 377 3949 183 4 v 0 TeXcolorgray 10 4034 a(\225)p
0 TeXcolorgray 42 w(F)o(in)8 b(?)14 b(2)45 b(EXE)p 283
3961 V 283 4061 4 102 v 463 4061 V 283 4063 183 4 v 0
TeXcolorgray 10 4148 a(\225)p 0 TeXcolorgray 42 w(P)n(as)8
b(?)14 b(0,)7 b(4)46 b(EXE)p 348 4074 V 348 4174 4 102
v 528 4174 V 348 4176 183 4 v 0 TeXcolorgray 983 4163
9 1516 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1312 2731 a Fm(NUMW)o(ORKS)1029 2902 y Fl(x)52 b(s)m('obtient)f(avec)h
(les)g(touches)1057 2994 y(alpha)p 1029 2917 231 4 v
1029 3036 4 120 v 1256 3036 V 1029 3038 231 4 v 71 w(x)p
1275 2934 90 4 v 1275 3020 4 88 v 1362 3020 V 1275 3022
90 4 v 0 TeXcolorgray 1077 3145 a(\225)p 0 TeXcolorgray
0 0 1 0 TeXcolorcmyk 70 w Fi(\302)p 0 TeXcolorgray 1146
3059 141 4 v 1146 3176 4 119 v 1284 3176 V 1146 3178
141 4 v 0 TeXcolorgray 1077 3263 a Fl(\225)p 0 TeXcolorgray
41 w(F)n(onctions)g(EXE)p 1482 3189 183 4 v 1482 3289
4 102 v 1661 3289 V 1482 3291 183 4 v 53 w(puis)26 b(choi-)1146
3376 y(sir)16 b(F)n(onctions)41 b(EXE)p 1564 3302 V 1564
3403 4 102 v 1743 3403 V 1564 3405 183 4 v 0 TeXcolorgray
1077 3489 a(\225)p 0 TeXcolorgray 41 w(f\(x\)=5x)1359
3462 y FG(2)1438 3489 y Fl(EXE)p 1409 3416 V 1409 3516
4 102 v 1589 3516 V 1409 3518 183 4 v 0 TeXcolorgray
1077 3603 a(\225)p 0 TeXcolorgray 41 w(choisir)30 b(T)-7
b(ableau)60 b(EXE)p 1665 3529 V 1665 3629 4 102 v 1845
3629 V 1665 3631 183 4 v 58 w(puis)1146 3716 y(R\351gler)17
b(l)o('inter)q(valle)43 b(EXE)p 1705 3643 V 1705 3743
4 102 v 1884 3743 V 1705 3745 183 4 v 0 TeXcolorgray
1077 3830 a(\225)p 0 TeXcolorgray 41 w(X)16 b(d\351but)131
b(0)44 b(EXE)p 1571 3756 V 1571 3856 4 102 v 1751 3856
V 1571 3858 183 4 v 0 TeXcolorgray 1077 3943 a(\225)p
0 TeXcolorgray 41 w(X)16 b(\002n)131 b(2)44 b(EXE)p 1473
3869 V 1473 3970 4 102 v 1652 3970 V 1473 3972 183 4
v 0 TeXcolorgray 1077 4056 a(\225)p 0 TeXcolorgray 41
w(P)n(as)132 b(0.4)45 b(EXE)p 1489 3983 V 1489 4083 4
102 v 1669 4083 V 1489 4085 183 4 v 0 TeXcolorgray 1077
4148 a(\225)p 0 TeXcolorgray 41 w(choisir)15 b(V)l(alider)p
0 TeXcolorgray 2050 4163 9 1516 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2364 2731 a Fm(TI)g(graphiques)2095 3115
y Fl(X)65 b(s)m('obtient)e(avec)h(la)h(touche)2125 3206
y Fj(x)5 b Fl(,)j Fj(t)f Fl(,)g Fk(\265)r Fl(,)g Fj(n)p
2095 3130 294 4 v 2095 3243 4 115 v 2386 3243 V 2095
3245 294 4 v 0 TeXcolorgray 2144 3362 a Fl(\225)p 0 TeXcolorgray
76 w Fj(f)17 b Fl(\()q Fj(x)5 b Fl(\))p 2213 3285 193
4 v 2213 3405 4 122 v 2402 3405 V 2213 3407 193 4 v 0
TeXcolorgray 2144 3492 a(\225)p 0 TeXcolorgray 41 w(Y)2254
3505 y FG(1)2301 3492 y Fh(\306)14 b Fl(5X)2443 3465
y FG(2)2522 3492 y Fl(EXE)p 2493 3418 183 4 v 2493 3518
4 102 v 2673 3518 V 2493 3520 183 4 v 0 TeXcolorgray
2144 3608 a(\225)p 0 TeXcolorgray 69 w(2nde)p 2213 3532
212 4 v 2213 3635 4 105 v 2422 3635 V 2213 3637 212 4
v 73 w(d\351f)i(table)p 2441 3532 326 4 v 2441 3635 4
105 v 2763 3635 V 2441 3637 326 4 v 0 TeXcolorgray 2144
3722 a(\225)p 0 TeXcolorgray 41 w(D\351bT)-7 b(able=0)45
b(EXE)p 2602 3648 183 4 v 2602 3748 4 102 v 2781 3748
V 2602 3750 183 4 v 0 TeXcolorgray 2144 3835 a(\225)p
0 TeXcolorgray 41 w(P)n(asT)-7 b(able=0.4)45 b(EXE)p
2631 3761 V 2631 3862 4 102 v 2810 3862 V 2631 3864 183
4 v 2213 3926 a(ou)2213 4026 y Fg(\242)p FM(Tbl=0.4)h(EXE)p
2522 3947 197 4 v 2522 4053 4 108 v 2716 4053 V 2522
4055 197 4 v 0 TeXcolorgray 2140 4148 a(\225)p 0 TeXcolorgray
70 w(2nde)p 2213 4066 230 4 v 2213 4175 4 111 v 2439
4175 V 2213 4177 230 4 v 75 w(table)p 2460 4066 229 4
v 2460 4175 4 111 v 2685 4175 V 2460 4177 229 4 v 0 TeXcolorgray
3116 4163 9 1516 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3361 2731 a Fm(CASIO)15 b(graphiques)3162 2933 y Fl(X)64
b(s)m('obtient)g(avec)g(la)h(touche)3190 3024 y(X,)7
b Fk(\265)r Fl(,)g(T)p 3162 2948 234 4 v 3162 3060 4
115 v 3392 3060 V 3162 3062 234 4 v 0 TeXcolorgray 3210
3147 a(\225)p 0 TeXcolorgray 70 w(MENU)p 3280 3074 272
4 v 3280 3175 4 104 v 3548 3175 V 3280 3177 272 4 v 42
w(puis)13 b(choisir)h(T)l(ABLE)3308 3262 y(EXE)p 3280
3189 183 4 v 3280 3289 4 102 v 3459 3289 V 3280 3291
183 4 v 0 TeXcolorgray 3210 3376 a(\225)p 0 TeXcolorgray
42 w(Y)3320 3389 y FG(1)3368 3376 y Fl(:)f(5X)3478 3348
y FG(2)3557 3376 y Fl(EXE)p 3529 3302 V 3529 3402 4 102
v 3708 3402 V 3529 3404 183 4 v 0 TeXcolorgray 3210 3489
a(\225)p 0 TeXcolorgray 70 w(F5)p 3280 3415 133 4 v 3280
3516 4 103 v 3409 3516 V 3280 3518 133 4 v 44 w(\(on)i(choisit)f(donc)h
(SET)t(\))p 0 TeXcolorgray 3210 3603 a(\225)p 0 TeXcolorgray
42 w(S)n(tar)q(t)f(:0)45 b(EXE)p 3512 3529 183 4 v 3512
3629 4 102 v 3691 3629 V 3512 3631 183 4 v 0 TeXcolorgray
3210 3716 a(\225)p 0 TeXcolorgray 42 w(End)14 b(:2)45
b(EXE)p 3491 3643 V 3491 3743 4 102 v 3670 3743 V 3491
3745 183 4 v 0 TeXcolorgray 3210 3830 a(\225)p 0 TeXcolorgray
42 w(S)n(tep)16 b(:0.4)45 b(EXE)p 3556 3756 V 3556 3856
4 102 v 3736 3856 V 3556 3858 183 4 v 0 TeXcolorgray
3210 3943 a(\225)p 0 TeXcolorgray 70 w(EXIT)p 3280 3869
208 4 v 3280 3970 4 102 v 3484 3970 V 3280 3972 208 4
v 0 TeXcolorgray 3210 4056 a(\225)p 0 TeXcolorgray 70
w(F6)p 3280 3983 133 4 v 3280 4083 4 103 v 3409 4083
V 3280 4085 133 4 v 115 w(\(on)86 b(choisit)g(donc)3280
4148 y(T)l(ABLE\))p 0 TeXcolorgray 0 TeXcolorgray 1280
5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 186.46393 a add def
/d 0.0 a add neg def /h 167.71259 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1280 5646 a 1448 5524 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 166.21063 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4527
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 153.02518 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45232
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 166.21063  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 166.21063  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 153.02518  def /dT 1864651 abs 65536 div viceversa
{ neg } if def /DT 0.4 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 71.13188  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 71.13188  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.02518
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 166.21063
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 153.02518  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 153.02518  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 166.21063  def /dT 1864676 abs 65536 div viceversa
{ neg } if def /DT 4. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 7.11317  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 7.11317  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.02518
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 166.21063
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1433 5621 a FG(0)182
b(0.4)159 b(0.8)g(1.2)g(1.6)g(2.0)1359 5543 y(0)1359
5307 y(4)1359 5071 y(8)1328 4835 y(12)1328 4598 y(16)1448
5524 y
tx@Dict begin { 128.0376 20.62816 } PutCoor PutBegin  end
 1448 5524 a 47 x FM(temps)1448 5670 y(\(en)17
b(s\))1448 5524 y
tx@Dict begin  PutEnd  end
 1448 5524 a 1448 5524 a
tx@Dict begin { 4.74747 138.44151 } PutCoor PutBegin  end
 1448 5524 a
57 x FM(distance)1448 5680 y(\(en)g(m\))1448 5524 y
tx@Dict begin  PutEnd  end
 1448
5524 a 1448 5524 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1448 5524 a 1448 5524 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1448 5524
a 1448 5524 a
tx@Dict begin ps@rot  RotBegin  end
 1448 5524 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.1)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 71.13188 mul F@pstplot 7.11317 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 7.11317
mul gt { moveto } { dup -1.e30 7.11317 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317 mul lt { moveto
} { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1448 5524 a
tx@Dict begin RotEnd  end
 1448 5524 a 1448 5524 a
tx@Dict begin  PutEnd  end
 1448 5524 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -0.28472279556053043
def /x1 2.336654362677241 def /dx x1 x sub 49 div def /F@pstplot ((-10.--10.*x)/0.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 71.13188 mul F@pstplot
7.11317 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 7.11317 mul gt { moveto } { dup
-1.e30 7.11317 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 28.45232
5.69055   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90572
22.76213   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35803
51.21483   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 113.81143
91.04865   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 142.26376
142.26349   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2828 5646 a
currentpoint initclip moveto
 2828
5646 a 0 TeXcolorgray 1930 5895 a FM(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FM(3.)p
0 TeXcolorgray 43 w(La)17 b(vitesse)j(de)d(la)g(pierr)o(e)h(au)f
(moment)i(de)e(l)o('impact)i(au)f(sol)g(est)g FJ(d)1925
-193 y FE(0)1947 -163 y FM(\(2\).)-38 -49 y(Or)f FJ(d)119
-79 y FE(0)141 -49 y FM(\()r FJ(t)8 b FM(\))13 b FI(\306)h
FM(5)c FI(\243)g FM(2)r FJ(t)24 b FI(\306)14 b FM(10)r
FJ(t)8 b FM(,)18 b(donc)f FJ(d)987 -79 y FE(0)1009 -49
y FM(\(2\))d FI(\306)h FM(10)10 b FI(\243)g FM(2)16 b
FI(\306)e FM(20.)k(Ainsi)g(la)f(vitesse)j(au)d(moment)i(de)e(l)o
('impact)i(est)f(de)f(20)i(m/s)o(.)-38 112 y FN(R)o(emarques)14
b(:)p 0 TeXcolorgray 7 225 a FM(\225)p 0 TeXcolorgray
42 w(cette)k(vitesse)h(instantan\351e)g(est)f(le)g(coef\002cient)g(dir)
o(ecteur)f(de)h(la)f(tangente)h(au)g(point)24 b FJ(A)c
FM(d)n('abscisse)e(2)g(\(en)f(rouge\).)p 0 TeXcolorgray
7 325 a(\225)p 0 TeXcolorgray 42 w(la)g(\253)d(vr)o(aie)k(for)q(mule)c
(\273)k(\(valable)g(en)f(l)o('absence)i(de)e(frottements\))i(est)f
FJ(d)7 b FM(\()r FJ(t)h FM(\))14 b FI(\306)h FM(4,)8
b(9)r FJ(t)2506 295 y FG(2)2542 325 y FM(.)17 b(Dans)g(l)o('exer)o
(cice)o(,)h(on)g(a)f(pr)q(is)h(5)f(au)h(lieu)g(de)g(4,9)g(pour)80
425 y(simpli\002er)h(les)f(calculs)o(.)-246 507 y
SDict begin H.S end
 -246
507 a -246 507 a
SDict begin 12 H.A end
 -246 507 a -246 507 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 507 a 0 TeXcolorgray
114 x FN(Ex)o(er)o(cice)c(8)p 0 TeXcolorgray 42 w FM(Dans)i(cet)i(exer)
o(cice)o(,)f(on)g(utilise)i(deux)f(propr)q(i\351t\351s)g(du)f(cours)h
(:)p 0 TeXcolorgray -76 721 a(\225)p 0 TeXcolorgray 42
w(la)f(d\351r)q(iv\351e)h(de)h FJ(x)h FI(7!)14 b FM(e)641
691 y Fy(a)t(x)t FE(\305)p Fy(b)811 721 y FM(est)20 b
FJ(x)f FI(7!)e FJ(a)t FM(e)1167 691 y Fy(a)t(x)t FE(\305)p
Fy(b)1337 721 y FM(;)p 0 TeXcolorgray -76 820 a(\225)p
0 TeXcolorgray 42 w(une)h(exponentielle)i(est)e(str)q(ictement)h
(positive)o(.)-246 1104 y Fl(P)n(our)c(tout)g Fj(x)k
Fh(2)12 b Ff(R)28 b Fl(:)7 1357 y Fj(f)17 b Fl(\()q Fj(x)5
b Fl(\))13 b Fh(\306)g Fl(e)246 1326 y FG(0,5)q Fy(x)t
FE(\305)p FG(1)-15 1487 y Fj(f)24 1456 y FE(0)46 1487
y Fl(\()q Fj(x)5 b Fl(\))13 b Fh(\306)26 b Fl(0,)7 b(5)210
1530 y Fe(|{z})251 1599 y FE(\251)342 1487 y Fl(e)377
1456 y FG(0,5)q Fy(x)t FE(\305)p FG(1)342 1521 y Fe(|)p
373 1521 51 9 v 51 w({z)p 486 1521 V 51 w(})433 1590
y FE(\251)-239 1825 y Fj(f)-200 1798 y FE(0)-157 1825
y Fh(\310)23 b Fl(0)i(donc)32 b Fj(f)41 b Fl(str)q(ictement)24
b(crois-)-246 1917 y(sante)15 b(sur)g Ff(R)p Fl(.)p 0
TeXcolorgray 0 TeXcolorgray -246 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -246 3039 a 276
2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 261 3047 a FG(0)145 b(1)i(2)-584
b FE(\241)p FG(1)-250 b FE(\241)p FG(2)187 2792 y(1)187
2615 y(2)187 2438 y(3)187 2261 y(4)276 2950 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(0.5*x+1.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 789 3039 a
currentpoint initclip moveto
 789 3039 a 0 TeXcolorgray
827 3054 9 2033 v 0 TeXcolorgray 873 1104 a Fl(P)n(our)15
b(tout)g Fj(x)j Fh(2)13 b Ff(R)28 b Fl(:)1123 1357 y
Fj(g)8 b Fl(\()q Fj(x)d Fl(\))15 b Fh(\306)f Fl(e)1367
1326 y FE(\241)p FG(1,5)q Fy(x)1102 1487 y Fj(g)1144
1456 y FE(0)1167 1487 y Fl(\()q Fj(x)5 b Fl(\))13 b Fh(\306)h(\241)p
Fl(1,)7 b(5)1332 1530 y Fe(|)p 1363 1530 13 9 v 13 w({z)p
1438 1530 V 13 w(})1385 1599 y FE(\252)1487 1487 y Fl(e)1522
1456 y FE(\241)p FG(1,5)q Fy(x)1487 1521 y Fe(|)p 1518
1521 35 9 v 35 w({z)p 1615 1521 V 35 w(})1563 1590 y
FE(\251)874 1825 y Fj(g)916 1798 y FE(0)973 1825 y Fh(\307)35
b Fl(0)k(donc)e Fj(g)48 b Fl(str)q(ictement)36 b(d\351-)873
1917 y(croissante)14 b(sur)h Ff(R)p Fl(.)p 0 TeXcolorgray
0 TeXcolorgray 873 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 873 3039 a 1394 2950 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1379 3047 a FG(0)146 b(1)g(2)-583 b FE(\241)p FG(1)-250
b FE(\241)p FG(2)1305 2792 y(1)1305 2615 y(2)1305 2438
y(3)1305 2261 y(4)1394 2950 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(-1.5*x+0.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 1908 3039 a
currentpoint initclip moveto
 1908 3039 a 0 TeXcolorgray 1946
3054 9 2033 v 0 TeXcolorgray 1992 1104 a Fl(P)n(our)14
b(tout)h Fj(x)k Fh(2)12 b Ff(R)28 b Fl(:)2260 1359 y
Fj(h)s Fl(\()q Fj(x)5 b Fl(\))14 b Fh(\306)g Fl(e)2506
1328 y FG(2)q Fy(x)t FE(\241)p FG(2)2239 1490 y Fj(h)2284
1459 y FE(0)2306 1490 y Fl(\()q Fj(x)5 b Fl(\))13 b Fh(\306)57
b Fl(2)2471 1523 y Fe(|{z})2511 1592 y FE(\251)2602 1490
y Fl(e)2637 1459 y FG(2)q Fy(x)t FE(\241)p FG(2)2602
1523 y Fe(|)p 2633 1523 28 9 v 28 w({z)p 2723 1523 V
28 w(})2670 1592 y FE(\251)1992 1822 y Fj(h)2037 1795
y FE(0)2080 1822 y Fh(\310)23 b Fl(0)i(donc)g Fj(h)j
Fl(str)q(ictement)c(crois-)1992 1914 y(sante)14 b(sur)h
Ff(R)p Fl(.)p 0 TeXcolorgray 0 TeXcolorgray 1992 3039
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 3039 a 2513 2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2498 3047 a FG(0)146
b(1)g(2)-584 b FE(\241)p FG(1)-250 b FE(\241)p FG(2)2424
2792 y(1)2424 2615 y(2)2424 2438 y(3)2424 2261 y(4)2513
2950 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(2*x-2.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 3027 3039
a
currentpoint initclip moveto
 3027 3039 a 0 TeXcolorgray 3064 3054 9 2033 v 0 TeXcolorgray
3110 1104 a Fl(P)n(our)15 b(tout)g Fj(x)j Fh(2)13 b Ff(R)28
b Fl(:)3366 1359 y Fj(i)8 b Fl(\()q Fj(x)d Fl(\))13 b
Fh(\306)h Fl(e)3596 1328 y FE(\241)p FG(1)q Fy(x)t FE(\305)p
FG(1)3344 1490 y Fj(i)3374 1459 y FE(0)3396 1490 y Fl(\()q
Fj(x)5 b Fl(\))13 b Fh(\306)32 b(\241)p Fl(1)3561 1523
y Fe(|{z})3602 1592 y FE(\252)3692 1490 y Fl(e)3727 1459
y FE(\241)p FG(1)q Fy(x)t FE(\305)p FG(1)3692 1523 y
Fe(|)p 3723 1523 49 9 v 49 w({z)p 3834 1523 V 49 w(})3781
1592 y FE(\251)3110 1822 y Fj(i)3140 1795 y FE(0)3176
1822 y Fh(\307)15 b Fl(0)j(donc)f Fj(i)25 b Fl(str)q(ictement)16
b(d\351crois-)3110 1914 y(sante)f(sur)g Ff(R)p Fl(.)p
0 TeXcolorgray 0 TeXcolorgray 3111 3039 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 124.6229 a add def
/d 0.0 a add neg def /h 124.19635 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3111 3039 a
3631 2950 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 61.88457 0.0 -62.73833 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 113.52658 0.0 -10.66977   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 61.88457  0 -62.73833  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.73833
 61.88457  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-10.66977  def /maxTickline 113.52658  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.52658  0 -10.66977  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -10.66977
 113.52658  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.73833  def /maxTickline 61.88457  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.52658
0.0 -10.66977   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 61.88457
0.0 -62.73833 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3616 3047 a FG(0)146 b(1)g(2)-583
b FE(\241)p FG(1)-250 b FE(\241)p FG(2)3543 2792 y(1)3543
2615 y(2)3543 2438 y(3)3543 2261 y(4)3631 2950 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.94 def /x1 2.900000000000002
def /dx x1 x sub 199 div def /F@pstplot (EXP(-1*x+1.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 4145 3039 a
currentpoint initclip moveto
 4145 3039 a -246
3275 a Fl(\300)15 b(titr)o(e)g(d)n('illustr)o(ation,)g(on)f(a)i(tr)o
(ac\351)f(les)h(courbes)f(des)h(quatr)o(e)e(fonctions)o(.)g(Elles)i
(ont)e(toutes)g(une)h(allur)o(e)h(tr\350s)f(similair)o(e)o(,)h(\340)f
(deux)h(diff\351r)o(ences)f(pr\350s)h(:)p 0 TeXcolorgray
-73 3366 a(\225)p 0 TeXcolorgray 42 w(elles)g(montent)e(lorsque)i
Fj(a)h Fh(\310)c Fl(0,)j(elles)h(descendent)e(lorsque)h
Fj(a)h Fh(\307)c Fl(0)j(;)p 0 TeXcolorgray -73 3457 a(\225)p
0 TeXcolorgray 42 w(plus)f Fh(j)q Fj(a)t Fh(j)h Fl(est)f(gr)o(and,)g
(plus)g(la)h(pente)f(de)h(la)f(par)q(tie)g(inclin\351e)g(est)h(for)q
(te)o(.)-246 3539 y
SDict begin H.S end
 -246 3539 a -246 3539 a
SDict begin 12 H.A end
 -246 3539
a -246 3539 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 3539 a 0 TeXcolorgray 115 x FN(Ex)o(er)o(cice)e(9)p
0 TeXcolorgray 42 w FM(La)j(fonction)27 b FJ(f)36 b FM(est)18
b(d\351\002nie)f(sur)h(l)o('inter)q(valle)1517 3655 y([)1542
3654 y(0;)8 b(4)1650 3655 y(])1694 3654 y(par)1615 3853
y FJ(f)19 b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(\()p
FI(\241)p FM(2)r FJ(x)h FI(\305)10 b FM(1\)e)2192 3819
y FE(\241)q Fy(x)2273 3853 y FM(.)-246 3905 y
SDict begin H.S end
 -246 3905
a -246 3905 a
SDict begin 12 H.A end
 -246 3905 a -246 3905 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 3905 a 0 TeXcolorgray
-141 4000 a FM(1.)p 0 TeXcolorgray 43 w(On)17 b(utilise)i(la)f(for)q
(mule)g(pour)g(la)f(d\351r)q(iv\351e)h(d)n('un)g(produit)f(avec)768
4291 y FJ(u)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p
FM(2)r FJ(x)h FI(\305)10 b FM(1)808 b(,)g FJ(v)7 b FM(\()r
FJ(x)e FM(\))14 b FI(\306)g FM(e)3162 4257 y FE(\241)q
Fy(x)3243 4291 y FM(,)768 4415 y FJ(u)819 4381 y FE(0)840
4415 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)h(\241)p FM(2)947
b(,)808 b FJ(v)2940 4381 y FE(0)2961 4415 y FM(\()r FJ(x)5
b FM(\))14 b FI(\306)g(\241)p FM(e)3238 4381 y FE(\241)q
Fy(x)3320 4415 y FM(.)-38 4732 y(On)j(obtient,)i(pour)e(tout)j
FJ(x)g FI(2)836 4733 y FM([)862 4732 y(0;)8 b(4)970 4733
y(])1028 4732 y(:)1285 5023 y FJ(f)1328 4989 y FE(0)1350
5023 y FM(\()r FJ(x)d FM(\))14 b FI(\306)g FJ(u)1584
4989 y FE(0)1605 5023 y FM(\()r FJ(x)5 b FM(\))10 b FI(\243)i
FJ(v)7 b FM(\()r FJ(x)e FM(\))10 b FI(\305)g FJ(u)t FM(\()r
FJ(x)5 b FM(\))10 b FI(\243)i FJ(v)2277 4989 y FE(0)2299
5023 y FM(\()r FJ(x)5 b FM(\))1464 5148 y FI(\306)14
b(\241)p FM(2)c FI(\243)g FM(e)1743 5113 y FE(\241)q
Fy(x)1834 5148 y FI(\305)1899 5149 y FM(\()1926 5148
y FI(\241)p FM(2)r FJ(x)15 b FI(\305)10 b FM(1)2182 5149
y(\))2220 5148 y FI(\243)2285 5083 y FA(\241)2315 5148
y FI(\241)p FM(e)2409 5113 y FE(\241)q Fy(x)2491 5083
y FA(\242)1464 5272 y FI(\306)k(\241)p FM(2)c FI(\243)g
FM(e)1743 5238 y FE(\241)q Fy(x)1834 5272 y FI(\305)g
FM(\()p FI(\241)p FM(2)r FJ(x)5 b FM(\))10 b FI(\243)2169
5208 y FA(\241)2199 5272 y FI(\241)p FM(e)2294 5238 y
FE(\241)q Fy(x)2375 5208 y FA(\242)2415 5272 y FI(\305)g
FM(1)g FI(\243)2595 5208 y FA(\241)2625 5272 y FI(\241)p
FM(e)2719 5238 y FE(\241)q Fy(x)2801 5208 y FA(\242)1464
5397 y FI(\306)k(\241)p FM(2)c FI(\243)g FM(e)1743 5362
y FE(\241)q Fy(x)1834 5397 y FI(\305)g FM(2)r FJ(x)15
b FI(\243)10 b FM(e)2101 5362 y FE(\241)q Fy(x)2192 5397
y FI(\241)g FM(1)g FI(\243)g FM(e)2412 5362 y FE(\241)q
Fy(x)1464 5521 y FI(\306)1533 5522 y FM(\()1560 5521
y FI(\241)p FM(2)g FI(\305)g FM(2)r FJ(x)15 b FI(\241)10
b FM(1)1931 5522 y(\))1968 5521 y(e)2007 5487 y FE(\241)q
Fy(x)1464 5646 y FI(\306)1533 5647 y FM(\()1560 5646
y(2)r FJ(x)15 b FI(\241)10 b FM(3)1761 5647 y(\))1797
5646 y(e)1836 5611 y FE(\241)q Fy(x)1918 5646 y FM(.)p
0 TeXcolorgray 1930 5895 a(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FM(2.)p
0 TeXcolorgray 43 w(On)17 b(\351tudie)h(le)g(signe)g(de)25
b FJ(f)750 -193 y FE(0)789 -163 y FM(et)17 b(on)h(en)f(d\351duit)h(les)
g(var)q(iations)g(de)25 b FJ(f)50 b FM(:)p 0 TeXcolorgray
7 -51 a(\225)p 0 TeXcolorgray 42 w(2)r FJ(x)15 b FI(\241)10
b FM(3)16 b FI(\306)e FM(0)29 b FI(\()-12 b(\))29 b FM(2)r
FJ(x)20 b FI(\306)14 b FM(3)29 b FI(\()-12 b(\))31 b
FJ(x)20 b FI(\306)1152 -84 y FG(3)p 1152 -71 31 5 v 1152
-22 a(2)1221 -51 y FI(\()-12 b(\))31 b FJ(x)19 b FI(\306)c
FM(1,)8 b(5)18 b(;)p 0 TeXcolorgray 7 49 a(\225)p 0 TeXcolorgray
42 w(e)119 19 y FE(\241)q Fy(x)217 49 y FM(est)g FI(\251)g
FM(pour)f(tout)h(r\351el)i FJ(x)5 b FM(.)p 0 TeXcolorgray
0 TeXcolorgray 124 203 a

 124 203 a 124 203 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 124 203
a
 0 setgray
 124 203 a 167 w FJ(x)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -37.04672 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a
85 w FM(2)r FJ(x)18 b FI(\241)13 b FM(3)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -60.20268 ] concat

 pgfs


 124
203 a
 0 setgray
 124 203 a 128 w FM(e)292 172 y FE(\241)q Fy(x)124
203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -82.0266 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a 110 w FJ(f)277 172 y FE(0)299
203 y FM(\()r FJ(x)5 b FM(\))124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -115.69254 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a 121 w FJ(f)19 b FM(\()r FJ(x)5 b FM(\))124 203
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.07234 moveto

 204.10854 -136.07234 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -136.07234 lineto

 204.10854 -136.07234 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -136.07234 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -136.07234 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FM(0)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.65038 -14.36803 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203
a FM(1.5)124 203 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FM(4)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs



124 203 a
 0 setgray
 124 203 a FI(\241)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203
a FM(0)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(\305)124 203
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -59.2582 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -59.2582 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a FI(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -80.80852 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FI(\241)124
203 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -68.03616 moveto

 124.73297 -90.71487 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -82.4233 ] concat

 pgfs


 124 203 a
 0 setgray
 124 203 a FM(0)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -81.9393 ] concat

 pgfs


 124 203 a
 0 setgray
 124
203 a FI(\305)124 203 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray

124 203 a FM(1)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 52.27333 -104.82213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -102.82957 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203
a
 0 setgray
 124 203 a FM(1)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 34.90273 107.2816 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 109.27415 -130.04488 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203
a
 0 setgray
 124 203 a FI(\241)p FM(2e)258 172 y FE(\241)p FG(1,5)124
203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 34.90273 107.2816 -132.08723 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 109.27415 -130.04488 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203 a FI(\241)p
FM(2e)258 172 y FE(\241)p FG(1,5)124 203 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.97566 -102.95012 moveto

 101.20358 -116.88971 lineto

 pgfstr

 save

 [0.93326 -0.3591 0.3591 0.93326 101.20357 -116.8897 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 29.36024 178.08904 -107.01553 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 180.08159 -104.97318 ] concat

 pgfs


 124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203
a FI(\241)p FM(7e)258 172 y FE(\241)p FG(4)124 203 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31554 29.36024 178.08904 -107.01553 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 180.08159 -104.97318 ] concat

 pgfs



124 203 a
 /pgfsc{}def/pgffc{}def
 124 203 a 124 203 a
 0 setgray
 124 203 a FI(\241)p FM(7e)258
172 y FE(\241)p FG(4)124 203 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 146.05385 -118.08884 moveto

 171.99313 -108.52132 lineto

 pgfstr

 save

 [0.93819 0.34604 -0.34604 0.93819 171.99312 -108.52132 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 2050 1355 9 1155 v 0 TeXcolorgray 0 TeXcolorgray
2140 284 a FM(\225)p 0 TeXcolorgray 50 w FJ(f)19 b FM(\(0\))14
b FI(\306)h FM(\()p FI(\241)p FM(2)10 b FI(\243)g FM(0)g
FI(\305)g FM(1\))g FI(\243)22 b FM(e)2947 250 y FE(\241)p
FG(0)2896 318 y FA(|{z})2930 395 y FE(\306)p FG(1)3049
284 y FI(\306)14 b FM(1)c FI(\243)g FM(1)16 b FI(\306)e
FM(1)p 0 TeXcolorgray 2140 480 a(\225)p 0 TeXcolorgray
50 w FJ(f)19 b FM(\(1,)8 b(5\))15 b FI(\306)f FM(\()p
FI(\241)p FM(2)c FI(\243)g FM(1,)e(5)i FI(\305)g FM(1\))g
FI(\243)g FM(e)3074 450 y FE(\241)p FG(1,5)3211 480 y
FI(\306)15 b(\241)p FM(2e)3415 450 y FE(\241)p FG(1,5)3552
480 y FI(\274)g(\241)p FM(0,)8 b(45)p 0 TeXcolorgray
2140 579 a(\225)p 0 TeXcolorgray 50 w FJ(f)19 b FM(\(4\))14
b FI(\306)h FM(\()p FI(\241)p FM(2)10 b FI(\243)g FM(4)g
FI(\305)g FM(1\))g FI(\243)g FM(e)2937 549 y FE(\241)p
FG(4)3027 579 y FI(\306)15 b(\241)p FM(7e)3231 549 y
FE(\241)p FG(4)3322 579 y FI(\274)f(\241)p FM(0,)8 b(13)-246
1442 y
SDict begin H.S end
 -246 1442 a -246 1442 a
SDict begin 12 H.A end
 -246 1442 a -246 1442
a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 1442 a 0 TeXcolorgray 99 x FN(Ex)o(er)o(cice)14
b(10)p 0 TeXcolorgray 41 w FM(La)k(fonction)i FJ(g)27
b FM(est)18 b(d\351\002nie)f(sur)h FF(R)f FM(par)i FJ(g)10
b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(e)1647 1511
y Fy(x)1696 1541 y FI(\241)e FJ(x)j FI(\241)10 b FM(1.)-246
1685 y(P)n(our)17 b(tout)j FJ(x)g FI(2)14 b FF(R)31 b
FM(:)1521 1785 y FJ(g)1569 1750 y FE(0)1590 1785 y FM(\()r
FJ(x)5 b FM(\))14 b FI(\306)g FM(e)1813 1750 y Fy(x)1862
1785 y FI(\241)c FM(1)g FI(\241)g FM(0)15 b FI(\306)f
FM(e)2207 1750 y Fy(x)2255 1785 y FI(\241)c FM(1.)-246
2061 y(On)18 b(r\351sout)g(l)o('\351quation)h(:)278 2202
y(e)319 2168 y Fy(x)367 2202 y FI(\241)10 b FM(1)15 b
FI(\306)f FM(0)29 b FI(\()-12 b(\))29 b FM(e)834 2168
y Fy(x)887 2202 y FI(\306)14 b FM(1)29 b FI(\()-12 b(\))31
b FJ(x)20 b FI(\306)14 b FM(0.)-246 2344 y FB(")p FM(On)i(a)f
(utilis\351)i(la)f(propr)q(i\351t\351)f(:)h(le)f(seul)i(nombr)o(e)e
(dont)g(l)o('exponentielle)-246 2443 y(est)j(\351gale)g(\340)f(1)h(est)
g(0.)-246 2576 y(P)n(our)d(avoir)g(les)h(signes)g(dans)g(chaque)g(case)
f(du)g(tableau,)h(on)g(r)o(emplace)-246 2676 y(par)i(des)f(valeurs)h
(de)h FJ(x)37 b FM(:)p 0 TeXcolorgray -76 2775 a(\225)p
0 TeXcolorgray 42 w(pour)16 b(l)o('inter)q(valle)563
2776 y(])588 2775 y FI(\2411)p FM(;)8 b(0)789 2776 y([)823
2775 y(,)16 b(on)g(pr)o(end)g(\(par)g(exemple\))j FJ(x)h
FI(\306)14 b(\241)p FM(1)-3 2875 y(et)j(on)h(calcule)g(avec)f(la)h
(calculatr)q(ice)g(:)424 3016 y FJ(g)472 2982 y FE(0)493
3016 y FM(\()p FI(\241)p FM(1\))c FI(\306)g FM(e)764
2982 y FE(\241)p FG(1)851 3016 y FI(\241)c FM(1)15 b
FI(\274)f(\241)p FM(0,)8 b(63)148 b FI(\252)17 b FM(;)p
0 TeXcolorgray -76 3157 a(\225)p 0 TeXcolorgray 42 w(pour)23
b(l)o('inter)q(valle)576 3158 y(])601 3157 y(0;)8 b FI(\3051)802
3158 y FM([)836 3157 y(,)23 b(on)f(pr)o(end)g(\(par)g(exemple\))k
FJ(x)f FI(\306)19 b FM(1)-3 3257 y(et)e(on)h(calcule)g(avec)f(la)h
(calculatr)q(ice)g(:)498 3398 y FJ(g)546 3364 y FE(0)567
3398 y FM(\(1\))c FI(\306)g FM(e)784 3364 y FG(1)829
3398 y FI(\241)c FM(1)k FI(\274)h FM(3,)8 b(72)158 b
FI(\251)10 b FM(.)p 0 TeXcolorgray 1946 3417 9 1439 v
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2006 1980
a

 2006 1980 a 2006 1980 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 167
w FJ(x)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -40.29451 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 68 w FJ(g)2122
1950 y FE(0)2143 1980 y FM(\()r FJ(x)5 b FM(\))19 b FI(\306)2095
2080 y FM(e)2135 2049 y Fy(x)2186 2080 y FI(\241)13 b
FM(1)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -87.15752 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a 116 w FJ(g)d
FM(\()r FJ(x)5 b FM(\))2006 1980 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -113.38724 moveto

 255.12128 -113.38724 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -113.38724 lineto

 255.12128 -113.38724 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -113.38724 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -113.38724 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 62.89185 -16.20581 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980
a FI(\2411)2006 1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FM(0)2006
1980 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 232.97278 -16.72884 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FI(\3051)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -43.94487 ] concat

 pgfs


 2006
1980 a
 0 setgray
 2006 1980 a FI(\241)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.47653 -45.56381 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006
1980 a FM(0)2006 1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.12997 -45.07565 ] concat

 pgfs


 2006 1980 a
 0 setgray
 2006 1980 a FI(\305)2006
1980 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 68.87445 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 70.867 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006 1980
a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 68.87445 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 70.867 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006
1980 a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 151.48398 -109.40213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -107.35977 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980
a
 0 setgray
 2006 1980 a FM(0)2006 1980 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 151.48398 -109.40213 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -107.35977 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980
a 2006 1980 a
 0 setgray
 2006 1980 a FM(0)2006 1980 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 76.64151 -65.49829 moveto

 145.5548 -99.2495 lineto

 pgfstr

 save

 [0.89804 -0.43982 0.43982 0.89804 145.55478 -99.24948 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 238.95532 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 240.94788 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980 a
 0 setgray
 2006
1980 a 2006 1980 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 238.95532 -64.66383 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 240.94788 -62.67128 ] concat

 pgfs


 2006 1980 a
 /pgfsc{}def/pgffc{}def
 2006 1980 a 2006 1980
a
 0 setgray
 2006 1980 a 2006 1980 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 164.11284 -100.29973 moveto

 233.02614 -66.54875 lineto

 pgfstr

 save

 [0.89804 0.43982 -0.43982 0.89804 233.02612 -66.54877 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



2612 3398 a FJ(g)10 b FM(\(0\))k FI(\306)g FM(e)2877
3364 y FG(0)2922 3398 y FI(\241)c FM(0)g FI(\241)g FM(1)15
b FI(\306)f FM(1)c FI(\241)g FM(1)16 b FI(\306)e FM(0.)-246
3633 y FN(R)o(emarque)g(:)k FM(Le)g(minimum)h(de)g FJ(g)27
b FM(est)18 b(0,)g(donc)h FJ(g)10 b FM(\()r FJ(x)5 b
FM(\))14 b FI(\270)g FM(0)k(pour)f(tout)h(r\351el)i FJ(x)j
FM(;)17 b(autr)o(ement)i(dit)e(e)2615 3603 y Fy(x)2664
3633 y FI(\241)12 b FJ(x)j FI(\241)10 b FM(1)15 b FI(\270)f
FM(0.)k(C)o(ette)h(in\351galit\351)g(se)e(r\351\351cr)q(it)1778
3802 y(e)1818 3768 y Fy(x)1871 3802 y FI(\270)f FJ(x)f
FI(\305)10 b FM(1.)-246 3971 y(On)20 b(obtiendr)o(a)g(ce)g(r\351sultat)
h(par)f(une)h(autr)o(e)e(m\351thode)i(dans)f(l)o('exer)o(cice)h(18)g
(\(utilisation)h(de)e(la)g(convexit\351\).)h(C)o(ette)g
(in\351galit\351)g(ser)o(a)f(utilis\351e)i(plus)-246
4070 y(tar)o(d)17 b(dans)g(l)o('ann\351e)o(,)i(pour)e(d\351montr)o(er)h
(des)f(r\351sultats)i(sur)e(les)i(limites)o(.)-246 4150
y
SDict begin H.S end
 -246 4150 a -246 4150 a
SDict begin 12 H.A end
 -246 4150 a -246 4150 a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246
4150 a 0 TeXcolorgray 111 x FN(Ex)o(er)o(cice)14 b(11)p
0 TeXcolorgray 1410 4408 a FM(e)1449 4378 y FG(8)p 1260
4445 374 5 v 1260 4521 a FM(e)1299 4497 y FG(2)1345 4521
y FI(\243)c FM(e)1449 4497 y FG(1)1494 4521 y FI(\243)g
FM(e)1598 4497 y FG(3)1657 4464 y FI(\306)1809 4408 y
FM(e)1848 4378 y FG(8)p 1737 4445 220 5 v 1737 4521 a
FM(e)1776 4497 y FG(2)p FE(\305)p FG(1)p FE(\305)p FG(3)1980
4464 y FI(\306)2059 4408 y FM(e)2098 4378 y FG(8)p 2059
4445 75 5 v 2059 4521 a FM(e)2098 4497 y FG(6)2158 4464
y FI(\306)k FM(e)2266 4430 y FG(8)p FE(\241)p FG(6)2388
4464 y FI(\306)g FM(e)2496 4430 y FG(2)1445 4624 y FM(e)c
FI(\243)g FM(e)1598 4593 y FG(2)p 1445 4661 189 5 v 1455
4691 a FA(\241)1484 4756 y FM(e)1524 4732 y FG(2)1559
4691 y FA(\242)1588 4713 y FG(2)1657 4680 y FI(\306)1737
4624 y FM(e)1776 4593 y FG(1)1821 4624 y FI(\243)g FM(e)1925
4593 y FG(2)p 1737 4661 224 5 v 1775 4737 a FM(e)1814
4713 y FG(2)p FE(\243)p FG(2)1984 4680 y FI(\306)2064
4624 y FM(e)2103 4593 y FG(1)p FE(\305)p FG(2)p 2064
4661 147 5 v 2100 4737 a FM(e)2139 4713 y FG(4)2235 4680
y FI(\306)k FM(e)2343 4646 y FG(3)p FE(\241)p FG(4)2465
4680 y FI(\306)g FM(e)2573 4646 y FE(\241)p FG(1)1284
4837 y FA(\241)1313 4901 y FM(e)1353 4867 y FG(2)1387
4837 y FA(\242)1417 4852 y FG(3)1462 4901 y FI(\243)c
FM(e)1567 4867 y FE(\241)p FG(5)1657 4901 y FI(\306)15
b FM(e)1766 4867 y FG(2)p FE(\243)p FG(3)1884 4901 y
FI(\243)10 b FM(e)1988 4867 y FE(\241)p FG(5)2079 4901
y FI(\306)k FM(e)2187 4867 y FG(6)p FE(\241)p FG(5)2309
4901 y FI(\306)g FM(e)2417 4867 y FG(1)-246 5000 y
SDict begin H.S end
 -246
5000 a -246 5000 a
SDict begin 12 H.A end
 -246 5000 a -246 5000 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246 5000
a 0 TeXcolorgray 92 x FN(Ex)o(er)o(cice)g(12)p 0 TeXcolorgray
41 w FM(Dans)j(chaque)h(cas)o(,)g(on)f(note)h FH(S)39
b FM(l)o('ensemble)20 b(des)d(solutions)o(.)-246 5133
y
SDict begin H.S end
 -246 5133 a -246 5133 a
SDict begin 12 H.A end
 -246 5133 a -246 5133 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246
5133 a 0 TeXcolorgray -141 5228 a FM(1.)p 0 TeXcolorgray
1062 5397 a(e)1102 5362 y Fy(x)1155 5397 y FI(\306)d(\241)p
FM(3)1062 5521 y(I)o(mpossible)o(,)k(car)f(une)h(exponentielle)j(est)d
(str)q(ictement)g(positive)1062 5646 y FH(S)36 b FI(\306)14
b(;)p 0 TeXcolorgray 1909 5895 a FM(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FM(2.)p 0 TeXcolorgray 683 20 a(e)723 -14 y FG(2)q
Fy(x)t FE(\241)p FG(1)880 20 y FI(\306)14 b FM(1)683
145 y(2)r FJ(x)h FI(\241)10 b FM(1)16 b FI(\306)e FM(0)743
b(\(le)17 b(seul)i(nombr)o(e)e(dont)g(l)o('exponentielle)22
b(vaut)17 b(1)h(est)g(0\))685 315 y FJ(x)i FI(\306)823
259 y FM(1)p 823 296 41 5 v 823 372 a(2)683 518 y FH(S)36
b FI(\306)848 408 y FA(\275)905 462 y FM(1)p 905 499
V 905 575 a(2)955 408 y FA(\276)1010 518 y FM(.)-246
671 y
SDict begin H.S end
 -246 671 a -246 671 a
SDict begin 12 H.A end
 -246 671 a -246 671 a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246
671 a 0 TeXcolorgray -141 763 a FM(3.)p 0 TeXcolorgray
43 w(L)-10 b('\351quation)19 b(e)384 733 y FG(2)q Fy(x)464
763 y FI(\305)10 b FM(2e)610 733 y Fy(x)662 763 y FI(\306)15
b FM(3)i(se)h(r\351\351cr)q(it)1740 799 y FA(\241)1770
863 y FM(e)1810 829 y Fy(x)1848 799 y FA(\242)1878 820
y FG(2)1923 863 y FI(\305)10 b FM(2e)2069 829 y Fy(x)2118
863 y FI(\241)g FM(3)k FI(\306)h FM(0.)-38 1027 y(P)n(our)i(r\351soudr)
o(e)o(,)g(il)g(est)h(astucieux)h(de)e(noter)k FJ(X)27
b FI(\306)14 b FM(e)1500 997 y Fy(x)1556 1027 y FM(;)j(l)o
('\351quation)j(se)d(r\351\351cr)q(it)h(alors)f(sous)h(la)g(for)q(me)
1788 1210 y FJ(X)1848 1175 y FG(2)1894 1210 y FI(\305)10
b FM(2)s FJ(X)23 b FI(\241)10 b FM(3)15 b FI(\306)f FM(0.)-38
1392 y(On)j(r\351sout)h(avec)g(la)f(m\351thode)i(de)e(la)g(classe)h(de)
f(pr)o(emi\350r)o(e)h(:)p 0 TeXcolorgray 7 1507 a(\225)p
0 TeXcolorgray 44 w FJ(a)g FI(\306)c FM(1,)k FJ(b)g FI(\306)c
FM(2,)k FJ(c)i FI(\306)14 b(\241)p FM(3.)p 0 TeXcolorgray
7 1606 a(\225)p 0 TeXcolorgray 42 w(le)k(discr)q(iminant)g(est)g
FK(\242)c FI(\306)h FJ(b)921 1576 y FG(2)965 1606 y FI(\241)10
b FM(4)r FJ(a)t(c)21 b FI(\306)14 b FM(2)1283 1576 y
FG(2)1329 1606 y FI(\241)c FM(4)g FI(\243)g FM(1)g FI(\243)g
FM(\()p FI(\241)p FM(3\))15 b FI(\306)g FM(16.)p 0 TeXcolorgray
7 1706 a(\225)p 0 TeXcolorgray 42 w FK(\242)f FI(\310)h
FM(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1305
2028 y FJ(X)1358 2040 y FG(1)1408 2028 y FI(\306)1487
1972 y(\241)p FJ(b)c FI(\241)1664 1906 y(p)p 1728 1906
55 5 v 66 x FK(\242)p 1487 2009 296 5 v 1590 2085 a FM(2)r
FJ(a)1806 2028 y FI(\306)1885 1972 y(\241)p FM(2)c FI(\241)2055
1907 y(p)p 2120 1907 82 5 v 2120 1972 a FM(16)p 1885
2009 316 5 v 1965 2085 a(2)g FI(\243)g FM(1)2225 2028
y FI(\306)2304 1972 y(\241)p FM(2)g FI(\241)g FM(4)p
2304 2009 212 5 v 2389 2085 a(2)2540 2028 y FI(\306)2619
1972 y(\241)p FM(6)p 2619 2009 96 5 v 2646 2085 a(2)2738
2028 y FI(\306)k(\241)p FM(3,)1305 2250 y FJ(X)1358 2262
y FG(2)1408 2250 y FI(\306)1487 2194 y(\241)p FJ(b)g
FI(\305)1664 2128 y(p)p 1728 2128 55 5 v 66 x FK(\242)p
1487 2231 296 5 v 1590 2307 a FM(2)r FJ(a)1806 2250 y
FI(\306)1885 2194 y(\241)p FM(2)c FI(\305)2055 2129 y(p)p
2120 2129 82 5 v 2120 2194 a FM(16)p 1885 2231 316 5
v 1965 2307 a(2)g FI(\243)g FM(1)2225 2250 y FI(\306)2304
2194 y(\241)p FM(2)g FI(\305)g FM(4)p 2304 2231 212 5
v 2389 2307 a(2)2540 2250 y FI(\306)2619 2194 y FM(2)p
2619 2231 41 5 v 2619 2307 a(2)2683 2250 y FI(\306)15
b FM(1.)80 2508 y(On)i(a)g(pos\351)k FJ(X)27 b FI(\306)14
b FM(e)627 2477 y Fy(x)665 2508 y FM(,)j(donc)g(il)h(y)f(a)g(deux)h
(possibilit\351s)i(:)1681 2690 y(e)1721 2656 y Fy(x)1774
2690 y FI(\306)14 b(\241)p FM(3)147 b(ou)f(e)2362 2656
y Fy(x)2414 2690 y FI(\306)14 b FM(1.)80 2873 y(La)21
b(pr)o(emi\350r)o(e)g(\351quation)h(n)-6 b('a)22 b(pas)f(de)g
(solution,)i(car)d(une)i(exponentielle)i(est)d(str)q(ictement)i
(positive)9 b(;)22 b(la)f(deuxi\350me)i(\351quation)f(a)f(une)80
2972 y(seule)d(solution)h(:)h FJ(x)g FI(\306)14 b FM(0.)80
3122 y(C)o(onclusion)19 b(:)e(L)-10 b('unique)20 b(solution)f(de)e(l)o
('\351quation)j(e)1661 3092 y FG(2)q Fy(x)1741 3122 y
FI(\305)10 b FM(2e)1887 3092 y Fy(x)1940 3122 y FI(\306)k
FM(3)k(est)i FJ(x)f FI(\306)14 b FM(0)32 b(:)1970 3305
y FH(S)k FI(\306)2135 3306 y FM({)2161 3305 y(0)2201
3306 y(})2235 3305 y(.)-246 3397 y
SDict begin H.S end
 -246 3397 a -246 3397
a
SDict begin 12 H.A end
 -246 3397 a -246 3397 a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 3397 a 0 TeXcolorgray
107 x FN(Ex)o(er)o(cice)14 b(13)p 0 TeXcolorgray 41 w
FM(On)j(utiliser)o(a)j(la)d(propr)q(i\351t\351)h(:)f(pour)h(tout)g
(nombr)o(e)f(r\351el)j FJ(x)5 b FM(,)1741 3686 y(e)1781
3652 y Fy(x)1830 3686 y FI(\243)10 b FM(e)1934 3652 y
FE(\241)q Fy(x)2029 3686 y FI(\306)15 b FM(1.)-246 3756
y
SDict begin H.S end
 -246 3756 a -246 3756 a
SDict begin 12 H.A end
 -246 3756 a -246 3756 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246
3756 a 0 TeXcolorgray -141 3869 a FM(1.)p 0 TeXcolorgray
43 w(D)o('apr\350s)i(l)o('identit\351)i(r)o(emarquable)e(\()r
FJ(a)d FI(\305)c FJ(b)t FM(\))1261 3839 y FG(2)1310 3869
y FI(\306)16 b FJ(a)1428 3839 y FG(2)1473 3869 y FI(\305)10
b FM(2)r FJ(a)t(b)k FI(\305)c FJ(b)1796 3839 y FG(2)1863
3869 y FM(:)1088 4019 y FA(\241)1118 4083 y FM(e)1158
4049 y Fy(x)1206 4083 y FI(\305)g FM(e)1311 4049 y FE(\241)q
Fy(x)1392 4019 y FA(\242)1422 4040 y FG(2)1471 4083 y
FI(\306)1540 4019 y FA(\241)1570 4083 y FM(e)1610 4049
y Fy(x)1648 4019 y FA(\242)1678 4040 y FG(2)1723 4083
y FI(\305)g FM(2)g FI(\243)g FM(e)1944 4049 y Fy(x)1993
4083 y FI(\243)g FM(e)2097 4049 y FE(\241)q Fy(x)1903
4117 y FA(|)p 1937 4117 69 10 v 69 w({z)p 2074 4117 V
69 w(})2005 4194 y FE(\306)p FG(1)2186 4083 y FI(\305)2249
4019 y FA(\241)2279 4083 y FM(e)2318 4049 y FE(\241)q
Fy(x)2400 4019 y FA(\242)2429 4040 y FG(2)2478 4083 y
FI(\306)15 b FM(e)2587 4049 y FG(2)q Fy(x)2667 4083 y
FI(\305)10 b FM(2)g FI(\305)g FM(e)2887 4049 y FE(\241)p
FG(2)q Fy(x)2999 4083 y FM(.)-246 4251 y
SDict begin H.S end
 -246 4251 a
-246 4251 a
SDict begin 12 H.A end
 -246 4251 a -246 4251 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246 4251 a 0 TeXcolorgray
-141 4333 a FM(2.)p 0 TeXcolorgray 43 w(On)17 b(multiplie)j(le)e
(num\351r)o(ateur)h(et)f(le)f(d\351nominateur)i(par)f(e)1775
4303 y Fy(x)1845 4333 y FM(:)1574 4500 y(e)1614 4470
y Fy(x)1663 4500 y FI(\241)10 b FM(e)1767 4470 y FE(\241)q
Fy(x)p 1574 4537 275 5 v 1574 4614 a FM(e)1614 4590 y
Fy(x)1663 4614 y FI(\305)g FM(e)1767 4590 y FE(\241)q
Fy(x)1872 4557 y FI(\306)1951 4501 y FM(\()1978 4500
y(e)2018 4470 y Fy(x)2067 4500 y FI(\241)g FM(e)2171
4470 y FE(\241)q Fy(x)2253 4501 y FM(\))2290 4500 y FI(\243)g
FM(e)2395 4470 y Fy(x)p 1951 4537 482 5 v 1951 4615 a
FM(\()1978 4614 y(e)2018 4590 y Fy(x)2067 4614 y FI(\305)g
FM(e)2171 4590 y FE(\241)q Fy(x)2253 4615 y FM(\))2290
4614 y FI(\243)g FM(e)2395 4590 y Fy(x)1872 4772 y FI(\306)1951
4716 y FM(e)1992 4686 y Fy(x)2040 4716 y FI(\243)g FM(e)2146
4686 y Fy(x)2194 4716 y FI(\241)g FM(e)2299 4686 y FE(\241)q
Fy(x)2390 4716 y FI(\243)g FM(e)2495 4686 y Fy(x)p 1951
4753 583 5 v 1951 4829 a FM(e)1992 4805 y Fy(x)2040 4829
y FI(\243)g FM(e)2146 4805 y Fy(x)2194 4829 y FI(\241)g
FM(e)2299 4805 y FE(\241)q Fy(x)2390 4829 y FI(\243)g
FM(e)2495 4805 y Fy(x)1872 4982 y FI(\306)1951 4926 y
FM(e)1992 4896 y Fy(x)t FE(\305)q Fy(x)2117 4926 y FI(\241)g
FM(e)2222 4896 y FE(\241)q Fy(x)t FE(\305)q Fy(x)p 1951
4963 429 5 v 1951 5039 a FM(e)1992 5015 y Fy(x)t FE(\305)q
Fy(x)2117 5039 y FI(\305)g FM(e)2222 5015 y FE(\241)q
Fy(x)t FE(\305)q Fy(x)1872 5198 y FI(\306)1951 5142 y
FM(e)1991 5112 y FG(2)q Fy(x)2071 5142 y FI(\241)g FM(e)2175
5112 y FG(0)p 1951 5179 259 5 v 1951 5255 a FM(e)1991
5231 y FG(2)q Fy(x)2071 5255 y FI(\305)g FM(e)2175 5231
y FG(0)1872 5414 y FI(\306)1951 5358 y FM(e)1991 5327
y FG(2)q Fy(x)2071 5358 y FI(\241)g FM(1)p 1951 5395
226 5 v 1951 5471 a(e)1991 5447 y FG(2)q Fy(x)2071 5471
y FI(\305)g FM(1)2187 5414 y(.)-246 5569 y
SDict begin H.S end
 -246 5569
a -246 5569 a
SDict begin 12 H.A end
 -246 5569 a -246 5569 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 5569 a 0 TeXcolorgray
1909 5895 a FM(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FN(Ex)o(er)o(cice)14
b(14)p 0 TeXcolorgray 0 TeXcolorgray 146 w FM(1.)p 0
TeXcolorgray 43 w(La)j(fonction)27 b FJ(f)36 b FM(est)18
b(de)f(la)h(for)q(me)25 b FJ(f)19 b FM(\()r FJ(x)5 b
FM(\))14 b FI(\306)g FM(e)1678 -193 y Fy(u)s FG(\()q
Fy(x)t FG(\))1797 -163 y FM(,)j(avec)1572 15 y FJ(u)t
FM(\()r FJ(x)5 b FM(\))15 b FI(\306)f(\241)r FJ(x)1908
-20 y FG(2)1943 15 y FM(,)154 b FJ(u)2168 -20 y FE(0)2190
15 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p FM(2)r
FJ(x)5 b FM(.)-38 192 y(On)17 b(a)g(donc,)h(pour)f(tout)j
FJ(x)g FI(2)14 b FF(R)31 b FM(:)1534 305 y FJ(f)1577
271 y FE(0)1598 305 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FJ(u)1832 271 y FE(0)1854 305 y FM(\()r FJ(x)5 b FM(\))10
b FI(\243)g FM(e)2068 271 y Fy(u)s FG(\()q Fy(x)t FG(\))2202
305 y FI(\306)k(\241)p FM(2)r FJ(x)5 b FM(e)2452 271
y FE(\241)q Fy(x)2529 248 y Fx(2)2562 305 y FM(.)-246
371 y
SDict begin H.S end
 -246 371 a -246 371 a
SDict begin 12 H.A end
 -246 371 a -246 371 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246
371 a 0 TeXcolorgray -141 465 a FM(2.)p 0 TeXcolorgray
43 w(La)17 b(fonction)i FJ(h)j FM(est)c(de)f(la)g(for)q(me)h
FJ(h)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1197 466 y
FM(\()1223 465 y FJ(u)t FM(\()r FJ(x)5 b FM(\))1374 466
y(\))1401 435 y Fy(n)1453 465 y FM(,)17 b(avec)1360 643
y FJ(u)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p
FM(4)r FJ(x)h FI(\305)10 b FM(1,)156 b FJ(u)2077 608
y FE(0)2099 643 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p
FM(4,)155 b FJ(n)19 b FI(\306)14 b FM(3.)-38 820 y(On)j(a)g(donc,)h
(pour)f(tout)j FJ(x)g FI(2)14 b FF(R)31 b FM(:)857 997
y FJ(h)907 963 y FE(0)929 997 y FM(\()r FJ(x)5 b FM(\))14
b FI(\306)g FJ(n)g FI(\243)c FJ(u)1289 963 y FE(0)1311
997 y FM(\()r FJ(x)5 b FM(\))10 b FI(\243)1486 998 y
FM(\()1513 997 y FJ(u)t FM(\()r FJ(x)5 b FM(\))1664 998
y(\))1691 963 y Fy(n)s FE(\241)p FG(1)1821 997 y FI(\306)14
b FM(3)c FI(\243)g FM(\()p FI(\241)p FM(4\))g FI(\243)g
FM(\()p FI(\241)p FM(4)r FJ(x)15 b FI(\305)10 b FM(1\))2539
963 y FG(3)p FE(\241)p FG(1)2663 997 y FI(\306)k(\241)p
FM(12)2875 998 y(\()2903 997 y FI(\241)p FM(4)r FJ(x)h
FI(\305)10 b FM(1)3159 998 y(\))3187 963 y FG(2)3230
997 y FM(.)-246 1086 y
SDict begin H.S end
 -246 1086 a -246 1086 a
SDict begin 12 H.A end
 -246 1086
a -246 1086 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 1086 a 0 TeXcolorgray -141 1189 a
FM(3.)p 0 TeXcolorgray 43 w(La)17 b(fonction)i FJ(i)26
b FM(est)18 b(de)g(la)f(for)q(me)h FJ(i)10 b FM(\()r
FJ(x)5 b FM(\))13 b FI(\306)h FM(e)1202 1158 y Fy(u)s
FG(\()q Fy(x)t FG(\))1321 1189 y FM(,)j(avec)1590 1366
y FJ(u)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(5)r
FJ(x)h FI(\241)10 b FM(9,)156 b FJ(u)2252 1332 y FE(0)2274
1366 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(5.)-38
1543 y(On)j(a)g(donc,)h(pour)f(tout)j FJ(x)g FI(2)14
b FF(R)31 b FM(:)1569 1643 y FJ(i)1603 1609 y FE(0)1623
1643 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)h FJ(u)1858
1609 y FE(0)1879 1643 y FM(\()r FJ(x)5 b FM(\))10 b FI(\243)g
FM(e)2094 1609 y Fy(u)s FG(\()q Fy(x)t FG(\))2227 1643
y FI(\306)k FM(5e)2376 1609 y FG(5)q Fy(x)t FE(\241)p
FG(9)2519 1643 y FM(.)-246 1699 y
SDict begin H.S end
 -246 1699 a -246 1699
a
SDict begin 12 H.A end
 -246 1699 a -246 1699 a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246 1699 a 0 TeXcolorgray
-141 1803 a FM(4.)p 0 TeXcolorgray 43 w(La)j(fonction)27
b FJ(j)g FM(est)18 b(de)f(la)g(for)q(me)26 b FJ(j)10
b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1179 1804 y FM(\()1206
1803 y FJ(u)t FM(\()r FJ(x)5 b FM(\))1357 1804 y(\))1384
1773 y Fy(n)1435 1803 y FM(,)18 b(avec)1313 1980 y FJ(u)t
FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h FJ(x)1594 1946
y FG(2)1639 1980 y FI(\241)10 b FM(3)r FJ(x)5 b FM(,)156
b FJ(u)2017 1946 y FE(0)2038 1980 y FM(\()r FJ(x)5 b
FM(\))15 b FI(\306)f FM(2)r FJ(x)h FI(\241)10 b FM(3,)156
b FJ(n)18 b FI(\306)d FM(5.)-38 2158 y(On)i(a)g(donc,)h(pour)f(tout)j
FJ(x)g FI(2)14 b FF(R)31 b FM(:)690 2348 y FJ(j)724 2314
y FE(0)745 2348 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FJ(n)g FI(\243)c FJ(u)1105 2314 y FE(0)1127 2348 y FM(\()r
FJ(x)5 b FM(\))10 b FI(\243)1302 2349 y FM(\()1329 2348
y FJ(u)t FM(\()r FJ(x)5 b FM(\))1480 2349 y(\))1507 2314
y Fy(n)s FE(\241)p FG(1)1637 2348 y FI(\306)14 b FM(5)c
FI(\243)1821 2349 y FM(\()1849 2348 y(2)r FJ(x)15 b FI(\241)10
b FM(3)2050 2349 y(\))2088 2348 y FI(\243)2153 2284 y
FA(\241)2185 2348 y FJ(x)2229 2314 y FG(2)2275 2348 y
FI(\241)g FM(3)r FJ(x)2426 2284 y FA(\242)2456 2300 y
FG(5)p FE(\241)p FG(1)2578 2348 y FI(\306)2647 2349 y
FM(\()2674 2348 y(10)r FJ(x)15 b FI(\241)10 b FM(15)2955
2349 y(\))2995 2348 y FI(\243)3060 2284 y FA(\241)3091
2348 y FJ(x)3135 2314 y FG(2)3181 2348 y FI(\241)g FM(3)r
FJ(x)3332 2284 y FA(\242)3362 2300 y FG(4)3406 2348 y
FM(.)-246 2451 y
SDict begin H.S end
 -246 2451 a -246 2451 a
SDict begin 12 H.A end
 -246 2451 a
-246 2451 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 2451 a 0 TeXcolorgray -141 2540 a FM(5.)p
0 TeXcolorgray 43 w(L)-10 b('\351nonc\351)19 b(nous)f(donne)1731
2639 y FJ(k)5 b FM(\()r FJ(x)g FM(\))14 b FI(\306)1961
2557 y FA(p)p 2038 2557 319 5 v 2040 2639 a FJ(x)2084
2615 y FG(2)2129 2639 y FI(\241)e FJ(x)j FI(\305)10 b
FM(2)r(.)-38 2785 y(Il)23 b(faut)i(se)g(m\351\002er)f(:)g(on)h(ne)f
(peut)i(calculer)e(la)h(r)o(acine)f(carr\351e)g(d)n('un)h(nombr)o(e)f
(que)g(si)h(celui-ci)g(est)g(positif)9 b(;)26 b(et)e(on)g(ne)h(peut)g
(d\351r)q(iver)f(une)-38 2885 y(fonction)18 b(de)g(la)f(for)q(me)679
2827 y FI(p)p 742 2827 52 5 v 742 2885 a FJ(u)22 b FM(que)c(lorsqu)n
('elle)h(est)f(str)q(ictement)h(positive)o(.)g(I)o(nt\351r)o
(essons-nous)f(donc)f(au)h(signe)g(de)h FJ(x)3433 2855
y FG(2)3478 2885 y FI(\241)12 b FJ(x)j FI(\305)10 b FM(2)33
b(:)-38 3046 y(Le)17 b(discr)q(iminant)h(est)g FK(\242)d
FI(\306)f FJ(b)824 3016 y FG(2)868 3046 y FI(\241)9 b
FM(4)r FJ(a)t(c)20 b FI(\306)15 b FM(\()p FI(\241)p FM(1\))1294
3016 y FG(2)1338 3046 y FI(\241)9 b FM(4)g FI(\243)g
FM(1)g FI(\243)g FM(2)17 b FI(\306)d(\241)p FM(7.)k(Il)e(s)m('ensuit)j
(qu)n('il)f(n)-6 b('y)17 b(a)g(pas)g(de)g(r)o(acine)o(,)g(et)g(que)j
FJ(x)3345 3016 y FG(2)3390 3046 y FI(\241)11 b FJ(x)j
FI(\305)9 b FM(2)18 b(est)g(str)q(ictement)-38 3146 y(positif)h(sur)e
FF(R)p FM(.)g(La)h(fonction)g FJ(k)23 b FM(est)18 b(donc)f(bien)h
(d\351\002nie)f(sur)h FF(R)p FM(,)f(mais)h(aussi)g(d\351r)q(ivable)o(.)
-38 3307 y(Elle)h(est)f(de)f(la)g(for)q(me)h FJ(k)5 b
FM(\()r FJ(x)g FM(\))14 b FI(\306)861 3245 y(p)p 924
3245 152 5 v 924 3307 a FJ(u)t FM(\()r FJ(x)5 b FM(\),)18
b(avec)1450 3406 y FJ(u)t FM(\()r FJ(x)5 b FM(\))15 b
FI(\306)h FJ(x)1731 3372 y FG(2)1777 3406 y FI(\241)c
FJ(x)j FI(\305)10 b FM(2,)155 b FJ(u)2229 3372 y FE(0)2251
3406 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(2)r FJ(x)h
FI(\241)10 b FM(1.)-38 3553 y(On)17 b(a)g(donc,)h(pour)f(tout)j
FJ(x)g FI(2)14 b FF(R)31 b FM(:)1517 3697 y FJ(k)1564
3663 y FE(0)1586 3697 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1820
3641 y FJ(u)1871 3611 y FE(0)1893 3641 y FM(\()r FJ(x)5
b FM(\))p 1779 3678 256 5 v 1779 3762 a(2)1819 3700 y
FI(p)p 1883 3700 152 5 v 62 x FJ(u)t FM(\()r FJ(x)g FM(\))2058
3697 y FI(\306)2248 3641 y FM(2)r FJ(x)15 b FI(\241)10
b FM(1)p 2137 3678 423 5 v 2137 3771 a(2)2177 3700 y
FI(p)p 2242 3700 319 5 v 2244 3771 a FJ(x)2288 3747 y
FG(2)2333 3771 y FI(\241)i FJ(x)j FI(\305)10 b FM(2)2570
3697 y(.)-246 3933 y FN(R)o(emarque)k(infor)q(melle)g(:)j
FM(On)h(a)f(d\351j\340)g(vu)h(les)g(d\351r)q(iv\351es)g(suivantes)h
(dans)f(le)f(cours)h(de)f(pr)o(emi\350r)o(e)h(:)1727
4146 y FA(\241)1758 4210 y FJ(x)1802 4176 y Fy(n)1846
4146 y FA(\242)1876 4167 y FE(0)1911 4210 y FI(\306)c
FJ(n)6 b(x)2077 4176 y Fy(n)s FE(\241)p FG(1)1738 4285
y FA(\241)1767 4349 y FM(e)1807 4315 y Fy(x)1846 4285
y FA(\242)1876 4306 y FE(0)1911 4349 y FI(\306)14 b FM(e)2020
4315 y Fy(x)1706 4455 y FA(\241)1736 4458 y FI(p)p 1799
4458 47 5 v 1801 4520 a FJ(x)1846 4455 y FA(\242)1876
4473 y FE(0)1911 4520 y FI(\306)2045 4463 y FM(1)p 1990
4500 151 5 v 1990 4580 a(2)2030 4522 y FI(p)p 2094 4522
47 5 v 2096 4580 a FJ(x)-246 4787 y FM(Les)k(trois)g(nouvelles)h(for)q
(mules)g(du)e(cours)g(de)h(ter)q(minale)g(peuvent)h(se)f(r\351\351cr)q
(ir)o(e)1648 4999 y FA(\241)1677 5064 y FJ(u)1728 5029
y Fy(n)1772 4999 y FA(\242)1802 5021 y FE(0)1837 5064
y FI(\306)c FJ(n)t(u)2008 5029 y Fy(n)s FE(\241)p FG(1)2135
5064 y FI(\243)c FJ(u)2251 5029 y FE(0)1660 5138 y FA(\241)1689
5202 y FM(e)1729 5168 y Fy(u)1772 5138 y FA(\242)1802
5159 y FE(0)1837 5202 y FI(\306)k FM(e)1945 5168 y Fy(u)1999
5202 y FI(\243)c FJ(u)2115 5168 y FE(0)1627 5309 y FA(\241)1657
5311 y FI(p)p 1721 5311 52 5 v 62 x FJ(u)1772 5309 y
FA(\242)1802 5326 y FE(0)1837 5373 y FI(\306)1974 5317
y FM(1)p 1916 5354 156 5 v 1916 5434 a(2)1956 5376 y
FI(p)p 2020 5376 52 5 v 58 x FJ(u)2092 5373 y FI(\243)g
FJ(u)2208 5339 y FE(0)-246 5646 y FM(On)18 b(voit)f(qu)n('il)i
(suf\002t)f(de)f(r)o(emplacer)i FJ(x)k FM(par)17 b FJ(u)t
FM(,)h(et)g(de)f(multiplier)j(par)d FJ(u)1879 5616 y
FE(0)1901 5646 y FM(.)-246 5728 y
SDict begin H.S end
 -246 5728 a -246 5728
a
SDict begin 12 H.A end
 -246 5728 a -246 5728 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 5728 a 0 TeXcolorgray
1909 5895 a FM(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FN(Ex)o(er)o(cice)14
b(15)p 0 TeXcolorgray 0 TeXcolorgray 146 w FM(1.)p 0
TeXcolorgray 43 w(P)n(our)j(tout)j FJ(x)f FI(2)c FF(R)31
b FM(:)1920 13 y FJ(f)19 b FM(\()r FJ(x)5 b FM(\))14
b FI(\306)j FJ(x)2193 -21 y FG(2)1899 138 y FJ(f)1942
103 y FE(0)1963 138 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)h
FM(2)r FJ(x)1882 262 y(f)1925 228 y FE(00)1963 262 y
FM(\()r FJ(x)5 b FM(\))14 b FI(\306)h FM(2.)-38 499 y(C)o(onclusion)k
(:)26 b FJ(f)463 469 y FE(00)518 499 y FM(est)18 b(str)q(ictement)h
(positive)o(,)g(donc)25 b FJ(f)36 b FM(est)18 b(convexe)g(sur)g
FF(R)p FM(.)-38 659 y(On)f(peut)i(aussi)f(pr\351senter)g(les)g(choses)h
(avec)e(un)h(tableau)g(de)f(signe)h(:)p 0 TeXcolorgray
0 TeXcolorgray 1236 741 a

 1236 741 a 1236 741 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1236
741 a
 0 setgray
 1236 741 a 167 w FJ(x)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -45.1713 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a 38 w FJ(f)1317 711 y FE(00)1355 741 y FM(\()r FJ(x)5
b FM(\))16 b FI(\306)h FM(2)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -102.36455 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a 16 w FM(C)o(onvexit\351)1236 741 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 170.08086 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 170.08086 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -141.73404 moveto

 170.08086 -141.73404 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -141.73404 lineto

 170.08086 -141.73404 lineto

 170.08086 0.0 lineto

 closepath

 170.08086 -141.73404 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -141.73404 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 62.89185 -16.20581 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236
741 a FI(\2411)1236 741 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 147.93231 -16.72884 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236 741 a FI(\3051)1236
741 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -45.07565 ] concat

 pgfs


 1236 741 a
 0 setgray
 1236 741 a FI(\305)1236 741 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 91.28984 -101.51274 ] concat

 pgfs


 1236 741
a
 0 setgray
 1236 741 a 8 w FJ(f)36 b FM(convexe)1236 741 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray 1447 3051 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 146.24707 a add def
/d 0.0 a add neg def /h 117.79433 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1447 3051 a 2028 2876 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 5 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 76.25314 0.0 -69.99393 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.73915 0.0 -21.05518   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 76.25314  0 -69.99393  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -69.99393
 76.25314  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-21.05518  def /maxTickline 96.73915  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.73915
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 76.25314
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.73915  0 -21.05518  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -21.05518
 96.73915  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 76.25314  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.73915
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 76.25314
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2013 2973 a FG(0)205 b(1)g(2)-761 b FE(\241)p FG(1)-309
b FE(\241)p FG(2)1939 2660 y(1)1939 2423 y(2)2028 2876
y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 2028 2876 a 2028 2876 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2028 2876 a 2028 2876 a
tx@Dict begin ps@rot  RotBegin  end
 2028
2876 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3. def /x1 3. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2028 2876
a
tx@Dict begin RotEnd  end
 2028 2876 a 2028 2876 a
tx@Dict begin  PutEnd  end
 2028 2876 a 2028 2876 a
tx@Dict begin { 7.39755 81.37486 } PutCoor PutBegin  end
 2028
2876 a 0 0 1 TeXcolorrgb 39 x FM(convexe)p 0 TeXcolorgray
2028 2876 a
tx@Dict begin  PutEnd  end
 2028 2876 a 2661 3051 a
currentpoint initclip moveto
 2661 3051 a -246
3092 a
SDict begin H.S end
 -246 3092 a -246 3092 a
SDict begin 12 H.A end
 -246 3092 a -246 3092
a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 3092 a 0 TeXcolorgray -141 3205 a FM(2.)p 0 TeXcolorgray
43 w(P)n(our)17 b(tout)j FJ(x)f FI(2)c FF(R)31 b FM(:)1898
3380 y FJ(g)10 b FM(\()r FJ(x)5 b FM(\))13 b FI(\306)j
FJ(x)2174 3346 y FG(3)1876 3517 y FJ(g)1924 3482 y FE(0)1945
3517 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(3)r FJ(x)2214
3482 y FG(2)1859 3641 y FJ(g)1907 3607 y FE(00)1945 3641
y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(6)r FJ(x)5
b FM(.)-38 3878 y(C)o(ette)18 b(fois)o(,)h(le)f(tableau)g(de)f(signe)h
(est)g(for)q(tement)g(r)o(ecommand\351)g(:)p 0 TeXcolorgray
0 TeXcolorgray 668 3960 a

 668 3960 a 668 3960 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a 168 w FJ(x)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -53.68501 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960
a 11 w FJ(g)727 3930 y FE(00)766 3960 y FM(\()r FJ(x)5
b FM(\))14 b FI(\306)h FM(6)r FJ(x)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.22993 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a 17 w FM(C)o(onvexit\351)668 3960 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -170.11317 moveto

 306.20375 -170.11317 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -170.11317 lineto

 306.20375 -170.11317 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -170.11317 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -170.11317 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 77.07158 -19.04367 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a FI(\2411)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.66417 -20.05489 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960
a FM(0)668 3960 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 281.16817 -19.56671 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FI(\3051)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -52.47826 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FI(\241)668 3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 668 3960
a
 0 setgray
 668 3960 a FM(0)668 3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -53.60904 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a FI(\305)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.07674 -120.33804 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 2 w FJ(g)27 b FM(concave)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -165.20833 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 0 TeXcolorgray 0 TeXcolorgray
Fn(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 669
3894 a(o)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
677 3827 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
672 3761 a(x)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
671 3694 a(e)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
677 3628 a(l)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
676 3562 a(f)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
668 3495 a(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
676 3429 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 675 3296
a(t)p 0 TeXcolorgray 0 TeXcolorgray 668 3229 a(P)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
668 3960 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.26869 -120.33804 ] concat

 pgfs


 668 3960 a
 0 setgray
 668 3960 a 2 w FJ(g)g FM(convexe)668
3960 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 -38 5533 a FM(C)o(onclusion)19 b(:)p 0 TeXcolorgray
7 5646 a(\225)p 0 TeXcolorgray 44 w FJ(g)27 b FM(est)18
b(concave)f(sur)691 5647 y(])716 5646 y FI(\2411)p FM(;)8
b(0)917 5647 y(])968 5646 y(;)p 0 TeXcolorgray 1909 5895
a(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FM(\225)p 0 TeXcolorgray
44 w FJ(g)27 b FM(est)18 b(convexe)g(sur)689 -162 y([)714
-163 y(0;)8 b FI(\3051)915 -162 y FM([)967 -163 y(;)p
0 TeXcolorgray 7 -63 a(\225)p 0 TeXcolorgray 42 w(le)18
b(point)g(de)f(coor)o(donn\351es)h(\(0;)8 b(0\))18 b(est)g(un)f(point)i
(d)n('in\003exion.)p 0 TeXcolorgray 0 TeXcolorgray 1357
930 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.87143 a add def
/d 0.0 a add neg def /h 103.56795 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1357 930 a 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 4 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 97.8775 0.0 -69.99393 0.0   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 53.49129 0.0 -50.07666   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 97.8775  0 -69.99393  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -69.99393
 97.8775  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-50.07666  def /maxTickline 53.49129  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 53.49129
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 97.8775
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 53.49129  0 -50.07666  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -50.07666
 53.49129  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-69.99393  def /maxTickline 97.8775  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 53.49129
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 97.8775
0.0 -69.99393 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1923 612 a FG(0)205
b(1)g(2)-760 b FE(\241)p FG(1)-310 b FE(\241)p FG(2)1849
534 y(0)1807 770 y FE(\241)p FG(1)1849 298 y(1)1938 515
y
tx@Dict begin { 30.15984 24.46938 } PutCoor PutBegin  end
 1938 515 a 0 0 1 TeXcolorrgb 38 x FM(convexe)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 3.4400000000000035
def /dx x1 x sub 199 div def /F@pstplot (x^(3.0))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.460000000000003
def /x1 0 def /dx x1 x sub 199 div def /F@pstplot (x^(3.0))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1938 515 a
tx@Dict begin { -66.57932 -18.7789 } PutCoor PutBegin  end
 1938
515 a 1 0 0 TeXcolorrgb 38 x FM(concave)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a 1938 515 a
tx@Dict begin { 16.50264 -34.71237 } PutCoor PutBegin  end
 1938 515 a 0 1 0 TeXcolorrgb
57 x FM(point)18 b(d)n('in\003exion)p 0 TeXcolorgray
1938 515 a
tx@Dict begin  PutEnd  end
 1938 515 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 0.0 28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 0.0 0.0 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2751 930 a
currentpoint initclip moveto
 2751
930 a -246 974 a
SDict begin H.S end
 -246 974 a -246 974 a
SDict begin 12 H.A end
 -246 974 a -246
974 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 974 a 0 TeXcolorgray -141 1089 a FM(3.)p 0
TeXcolorgray 43 w(P)n(our)f(tout)j FJ(x)f FI(2)c FF(R)31
b FM(:)1907 1271 y FJ(h)t FM(\()r FJ(x)5 b FM(\))14 b
FI(\306)g FM(e)2181 1237 y Fy(x)1885 1396 y FJ(h)1935
1361 y FE(0)1957 1396 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FM(e)2181 1361 y Fy(x)1868 1520 y FJ(h)1918 1486 y FE(00)1957
1520 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(e)2181
1486 y Fy(x)2219 1520 y FM(.)-38 1767 y(C)o(onclusion)19
b(:)f FJ(h)462 1737 y FE(00)518 1767 y FM(est)g(str)q(ictement)g
(positive)o(,)h(donc)e FJ(h)22 b FM(est)c(convexe)g(sur)g
FF(R)e FM(\(cette)i(fois)o(,)h(on)e(se)h(passe)g(du)g(tableau)f(de)h
(signes\).)p 0 TeXcolorgray 0 TeXcolorgray 1307 2817
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 179.82153 a add def
/d 0.0 a add neg def /h 116.08723 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1307 2817 a 2191 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 5 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 73.40813 0.0 -106.4134 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 91.61786 0.0 -24.46938   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 73.40813  0 -106.4134  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -106.4134
 73.40813  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 91.61786  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 91.61786
0.0 -24.46938   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 73.40813
0.0 -106.4134 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 91.61786  0 -24.46938  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -24.46938
 91.61786  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-106.4134  def /maxTickline 73.40813  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 91.61786
0.0 -24.46938   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 73.40813
0.0 -106.4134 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2176 2711 a FG(0)205
b(1)g(2)-761 b FE(\241)p FG(1)-309 b FE(\241)p FG(2)g
FE(\241)p FG(3)2102 2397 y(1)2102 2161 y(2)2191 2614
y
tx@Dict begin { -65.44139 25.60728 } PutCoor PutBegin  end
 2191 2614 a 0 0 1 TeXcolorrgb 38 x FM(convexe)p 0 TeXcolorgray
2191 2614 a
tx@Dict begin  PutEnd  end
 2191 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.7400000000000038
def /x1 2.5800000000000027 def /dx x1 x sub 199 div def /F@pstplot
(EXP(x))  tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul
F@pstplot 28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2800 2817 a
currentpoint initclip moveto
 2800 2817 a -246 2883 a
SDict begin H.S end
 -246 2883 a -246
2883 a
SDict begin 12 H.A end
 -246 2883 a -246 2883 a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 2883 a 0 TeXcolorgray
133 x FN(Ex)o(er)o(cice)14 b(16)p 0 TeXcolorgray 41 w
FM(La)k(fonction)i FJ(g)27 b FM(est)18 b(d\351\002nie)f(sur)h(l)o
('inter)q(valle)1558 3017 y([)1583 3016 y FI(\241)p FM(1;)8
b(3)1746 3017 y(])1790 3016 y(par)1523 3215 y FJ(g)i
FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p FM(0,)8
b(5)r FJ(x)1963 3181 y FG(3)2010 3215 y FI(\305)i FM(2)r
FJ(x)2161 3181 y FG(2)2207 3215 y FI(\241)g FM(2)r FJ(x)5
b FM(.)-246 3269 y
SDict begin H.S end
 -246 3269 a -246 3269 a
SDict begin 12 H.A end
 -246 3269
a -246 3269 a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246 3269 a 0 TeXcolorgray -141 3414 a
FM(1.)p 0 TeXcolorgray 43 w(P)n(our)17 b(tout)j FJ(x)f
FI(2)423 3415 y FM([)448 3414 y FI(\241)p FM(1;)8 b(3)611
3415 y(])669 3414 y(:)1180 3628 y FJ(g)1228 3594 y FE(0)1248
3628 y FM(\()r FJ(x)d FM(\))15 b FI(\306)f(\241)p FM(0,)8
b(5)i FI(\243)g FM(3)r FJ(x)1756 3594 y FG(2)1803 3628
y FI(\305)g FM(2)g FI(\243)g FM(2)r FJ(x)15 b FI(\241)10
b FM(2)g FI(\243)g FM(1)18 b FI(\306)c(\241)p FM(1,)8
b(5)r FJ(x)2595 3594 y FG(2)2642 3628 y FI(\305)i FM(4)r
FJ(x)15 b FI(\241)10 b FM(2.)-38 3792 y(La)17 b(d\351r)q(iv\351e)h(est)
g(du)f(second)h(degr\351,)f(donc)g(on)g(utilise)j(la)d(m\351thode)i(de)
e(la)g(classe)h(de)f(pr)o(emi\350r)o(e)h(:)p 0 TeXcolorgray
7 3907 a(\225)p 0 TeXcolorgray 44 w FJ(a)g FI(\306)c(\241)p
FM(1,)8 b(5,)19 b FJ(b)f FI(\306)c FM(4,)k FJ(c)i FI(\306)14
b(\241)p FM(2.)p 0 TeXcolorgray 7 4006 a(\225)p 0 TeXcolorgray
42 w(le)k(discr)q(iminant)g(est)g FK(\242)c FI(\306)h
FJ(b)921 3976 y FG(2)965 4006 y FI(\241)10 b FM(4)r FJ(a)t(c)21
b FI(\306)14 b FM(4)1283 3976 y FG(2)1329 4006 y FI(\241)c
FM(4)g FI(\243)g FM(\()p FI(\241)p FM(1,)e(5\))i FI(\243)g
FM(\()p FI(\241)p FM(2\))16 b FI(\306)e FM(4.)p 0 TeXcolorgray
7 4106 a(\225)p 0 TeXcolorgray 42 w FK(\242)g FI(\310)h
FM(0,)j(donc)f(il)g(y)g(a)g(deux)h(r)o(acines)g(:)1319
4428 y FJ(x)1360 4440 y FG(1)1410 4428 y FI(\306)1489
4372 y(\241)p FJ(b)c FI(\241)1666 4306 y(p)p 1730 4306
55 5 v 66 x FK(\242)p 1489 4409 296 5 v 1592 4485 a FM(2)r
FJ(a)1808 4428 y FI(\306)1917 4372 y(\241)p FM(4)c FI(\241)2087
4307 y(p)p 2151 4307 41 5 v 65 x FM(4)p 1887 4409 334
5 v 1887 4485 a(2)g FI(\243)g FM(\()p FI(\241)p FM(1,)e(5\))2245
4428 y FI(\306)2324 4372 y(\241)p FM(4)i FI(\241)g FM(2)p
2324 4409 212 5 v 2382 4485 a FI(\241)p FM(3)2560 4428
y FI(\306)2639 4372 y(\241)p FM(6)p 2639 4409 96 5 v
2639 4485 a FI(\241)p FM(3)2758 4428 y FI(\306)15 b FM(2,)1319
4660 y FJ(x)1360 4672 y FG(2)1410 4660 y FI(\306)1489
4604 y(\241)p FJ(b)f FI(\305)1666 4538 y(p)p 1730 4538
55 5 v 66 x FK(\242)p 1489 4641 296 5 v 1592 4717 a FM(2)r
FJ(a)1808 4660 y FI(\306)1917 4604 y(\241)p FM(4)c FI(\305)2087
4539 y(p)p 2151 4539 41 5 v 65 x FM(4)p 1887 4641 334
5 v 1887 4717 a(2)g FI(\243)g FM(\()p FI(\241)p FM(1,)e(5\))2245
4660 y FI(\306)2324 4604 y(\241)p FM(4)i FI(\305)g FM(2)p
2324 4641 212 5 v 2382 4717 a FI(\241)p FM(3)2560 4660
y FI(\306)2639 4604 y(\241)p FM(2)p 2639 4641 96 5 v
2639 4717 a FI(\241)p FM(3)2758 4660 y FI(\306)2838 4604
y FM(2)p 2838 4641 41 5 v 2838 4717 a(3)2888 4660 y(.)-36
4955 y FJ(a)18 b FI(\306)c(\241)p FM(1,)8 b(5)21 b FJ(a)g
FM(est)d FI(\252)f FM(donc)g(le)h(signe)f(est)h(de)g(la)f(for)q(me)46
b FI(\241)17 b FC(\036)28 b FI(\305)f FC(\036)18 b FI(\241)p
1521 4872 432 4 v 1521 4997 4 127 v 1949 4997 V 1521
4999 432 4 v 0 TeXcolorgray 0 TeXcolorgray 1 5122 a

 1
5122 a 1 5122 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 167 w FJ(x)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -32.41563 ] concat

 pgfs



1 5122 a
 0 setgray
 1 5122 a 105 w FJ(g)154 5092 y FE(0)175 5122
y FM(\()r FJ(x)5 b FM(\))1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -61.64621 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 116
w FJ(g)10 b FM(\()r FJ(x)5 b FM(\))1 5122 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -39.68607 moveto

 238.11656 -39.68607 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -79.37216 moveto

 238.11656 -79.37216 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -79.37216 lineto

 238.11656 -79.37216 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -79.37216 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -79.37216 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1 5122 a
 0 setgray

1 5122 a FI(\241)p FM(1)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.09209 -12.47873 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a 11
5090 a FG(2)p 11 5103 31 5 v 11 5151 a(3)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1 5122
a
 0 setgray
 1 5122 a FM(2)1 5122 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FM(3)1 5122
y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -31.19028 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FI(\241)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -32.80869 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122
a FM(0)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -32.32106 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FI(\305)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -39.68607 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -32.80869 ] concat

 pgfs


 1
5122 a
 0 setgray
 1 5122 a FM(0)1 5122 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -31.19028 ] concat

 pgfs


 1 5122 a
 0 setgray
 1 5122 a FI(\241)1
5122 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 41.53775 -53.873 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 43.5303 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FM(3.5)1 5122
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 41.53775 -53.873 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 43.5303 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FM(3.5)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 16.04958 20.3615 98.95598 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 100.94853 -69.91951 ] concat

 pgfs



1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(\241)66 5090 y
FG(16)p 66 5103 62 5 v 66 5151 a(27)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 16.04958 20.3615 98.95598 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 100.94853 -69.91951 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def

1 5122 a 1 5122 a
 0 setgray
 1 5122 a FI(\241)66 5090 y FG(16)p
66 5103 62 5 v 66 5151 a(27)1 5122 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 61.57288 -52.50854 moveto

 92.7813 -62.25806 lineto

 pgfstr

 save

 [0.95445 -0.29816 0.29816 0.95445 92.7813 -62.25806 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 164.24243 -53.84312 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FM(0)1
5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 164.24243 -53.84312 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 166.23499 -51.80077 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122 a
 0 setgray
 1 5122 a FM(0)1 5122
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 123.21397 -62.96524 moveto

 158.06915 -52.06961 lineto

 pgfstr

 save

 [0.9544 0.29832 -0.29832 0.9544 158.06914 -52.06961 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 22.735 216.82753 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 218.82008 -73.31482 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122 a 1 5122
a
 0 setgray
 1 5122 a FI(\241)p FM(1.5)1 5122 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 22.735 216.82753 -75.38705 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 218.82008 -73.31482 ] concat

 pgfs


 1 5122 a
 /pgfsc{}def/pgffc{}def
 1 5122
a 1 5122 a
 0 setgray
 1 5122 a FI(\241)p FM(1.5)1 5122 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 176.95879 -51.75664 moveto

 210.71689 -63.96852 lineto

 pgfstr

 save

 [0.94034 -0.34015 0.34015 0.94034 210.71689 -63.9685 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 2050 5664 9 544 v 0 TeXcolorgray
0 TeXcolorgray 2140 5204 a FM(\225)p 0 TeXcolorgray 44
w FJ(g)10 b FM(\()p FI(\241)p FM(1\))k FI(\306)g(\241)p
FM(0,)8 b(5)i FI(\243)g FM(\()p FI(\241)p FM(1\))2882
5173 y FG(3)2929 5204 y FI(\305)g FM(2)g FI(\243)g FM(\()p
FI(\241)p FM(1\))3258 5173 y FG(2)3304 5204 y FI(\241)g
FM(2)g FI(\243)g FM(\()p FI(\241)p FM(1\))15 b FI(\306)f
FM(3,)8 b(5)p 0 TeXcolorgray 2140 5317 a(\225)p 0 TeXcolorgray
44 w FJ(g)2271 5252 y FA(\241)2310 5284 y FG(2)p 2310
5297 31 5 v 2310 5345 a(3)2351 5252 y FA(\242)2395 5317
y FI(\306)14 b(\241)p FM(0,)8 b(5)i FI(\243)2702 5252
y FA(\241)2743 5284 y FG(2)p 2743 5297 V 2743 5345 a(3)2784
5252 y FA(\242)2814 5270 y FG(3)2859 5317 y FI(\305)g
FM(2)g FI(\243)3039 5252 y FA(\241)3079 5284 y FG(2)p
3079 5297 V 3079 5345 a(3)3120 5252 y FA(\242)3150 5270
y FG(2)3195 5317 y FI(\241)g FM(2)g FI(\243)3375 5252
y FA(\241)3415 5284 y FG(2)p 3415 5297 V 3415 5345 a(3)3456
5252 y FA(\242)3500 5317 y FI(\306)k(\241)3634 5284 y
FG(16)p 3634 5297 62 5 v 3634 5345 a(27)p 0 TeXcolorgray
2140 5416 a FM(\225)p 0 TeXcolorgray 44 w FJ(g)c FM(\(2\))k
FI(\306)g(\241)p FM(0,)8 b(5)i FI(\243)g FM(2)2718 5386
y FG(3)2765 5416 y FI(\305)g FM(2)g FI(\243)g FM(2)2985
5386 y FG(2)3032 5416 y FI(\241)g FM(2)g FI(\243)g FM(2)15
b FI(\306)g FM(0)p 0 TeXcolorgray 2140 5516 a(\225)p
0 TeXcolorgray 44 w FJ(g)10 b FM(\(3\))k FI(\306)g(\241)p
FM(0,)8 b(5)i FI(\243)g FM(3)2718 5486 y FG(3)2765 5516
y FI(\305)g FM(2)g FI(\243)g FM(3)2985 5486 y FG(2)3032
5516 y FI(\241)g FM(2)g FI(\243)g FM(3)15 b FI(\306)g(\241)p
FM(1,)8 b(5)p 0 TeXcolorgray 1909 5895 a(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FM(2.)p 0 TeXcolorgray 43 w(P)n(our)17 b(tout)j FJ(x)f
FI(2)423 -162 y FM([)448 -163 y FI(\241)p FM(1;)8 b(3)611
-162 y(])669 -163 y(:)1403 -63 y FJ(g)1451 -97 y FE(00)1489
-63 y FM(\()r FJ(x)d FM(\))14 b FI(\306)g(\241)p FM(1,)8
b(5)i FI(\243)g FM(2)r FJ(x)15 b FI(\305)10 b FM(4)g
FI(\243)g FM(1)g FI(\241)g FM(0)19 b FI(\306)14 b(\241)p
FM(3)r FJ(x)h FI(\305)10 b FM(4.)-38 97 y(On)17 b(\351tudie)h(le)g
(signe)g(de)h FJ(g)749 67 y FE(00)818 97 y FM(:)1301
232 y FI(\241)p FM(3)r FJ(x)c FI(\305)10 b FM(4)15 b
FI(\306)g FM(0)29 b FI(\()-12 b(\))29 b(\241)p FM(3)r
FJ(x)20 b FI(\306)14 b(\241)p FM(4)29 b FI(\()-12 b(\))31
b FJ(x)19 b FI(\306)2537 175 y(\241)p FM(4)p 2537 212
96 5 v 2537 288 a FI(\241)p FM(3)2657 232 y FI(\306)2736
175 y FM(4)p 2736 212 41 5 v 2736 288 a(3)2787 232 y(.)p
0 TeXcolorgray 0 TeXcolorgray 778 354 a

 778 354 a 778
354 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 168 w FJ(x)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -54.0626 ] concat

 pgfs


 778 354
a
 0 setgray
 778 354 a 58 w FI(\241)p FM(3)r FJ(x)f FI(\305)12 b
FM(4)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.22993 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 16 w FM(C)o(onvexit\351)778
354 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -170.11317 moveto

 306.20375 -170.11317 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -170.11317 lineto

 306.20375 -170.11317 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -170.11317 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -170.11317 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.31819 -20.07979 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FI(\241)p FM(1)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.05205 -19.56851 ] concat

 pgfs


 778
354 a
 0 setgray
 778 354 a 788 321 a FG(4)p 788 334 31 5 v 788 382
a(3)778 354 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.71245 -20.05489 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FM(3)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -53.60904 ] concat

 pgfs


 778
354 a
 0 setgray
 778 354 a FI(\305)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a
FM(0)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -52.47826 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a FI(\241)778 354 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.16142 -120.33804 ] concat

 pgfs



778 354 a
 0 setgray
 778 354 a 2 w FJ(g)27 b FM(convexe)778 354
y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -165.20833 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 0 TeXcolorgray 0 TeXcolorgray Fn(n)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 779 287
a(o)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 787
221 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
782 154 a(x)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
781 88 a(e)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
787 22 a(l)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
786 -45 a(f)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
778 -111 a(n)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
786 -178 a(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 785 -311
a(t)p 0 TeXcolorgray 0 TeXcolorgray 778 -377 a(P)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
778 354 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.184 -120.33804 ] concat

 pgfs


 778 354 a
 0 setgray
 778 354 a 2 w FJ(g)g FM(concave)778
354 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 -36 1927 a FJ(g)20 1863 y FA(\241)59 1895 y FG(4)p
59 1908 31 5 v 59 1956 a(3)100 1863 y FA(\242)144 1927
y FI(\306)213 1928 y FM([)238 1927 y FI(\242)8 b(\242)g(\242)326
1928 y FM(])366 1927 y FI(\306)14 b(\241)515 1895 y FG(8)p
500 1908 62 5 v 500 1956 a(27)571 1927 y FM(,)k(donc)f(le)h(point)g(de)
f(coor)o(donn\351es)1652 1863 y FA(\241)1691 1895 y FG(4)p
1691 1908 31 5 v 1691 1956 a(3)1732 1927 y FM(;)8 b FI(\241)1841
1895 y FG(8)p 1825 1908 62 5 v 1825 1956 a(27)1897 1863
y FA(\242)1944 1927 y FM(est)18 b(un)f(point)i(d)n('in\003exion)f
(\(not\351)i FJ(I)27 b FM(sur)18 b(la)f(\002gur)o(e)g(ci-dessous\).)
-246 1970 y
SDict begin H.S end
 -246 1970 a -246 1970 a
SDict begin 12 H.A end
 -246 1970 a -246
1970 a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 1970 a 0 TeXcolorgray -141 2054 a FM(3.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1359 3271
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.30226 a add def
/d 0.0 a add neg def /h 138.84952 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1359 3271 a 1699 2883 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 126.33025 0.0 -40.97202 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 92.18704 0.0 -46.66248   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 126.33025  0 -40.97202  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -40.97202
 126.33025  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-46.66248  def /maxTickline 92.18704  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.18704
0.0 -46.66248   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 126.33025
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 92.18704  0 -46.66248  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -46.66248
 92.18704  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-40.97202  def /maxTickline 126.33025  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.18704
0.0 -46.66248   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 126.33025
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1684 2980 a FG(0)205
b(1)g(2)h(3)-997 b FE(\241)p FG(1)1611 2903 y(0)1569
3139 y FE(\241)p FG(1)1611 2667 y(1)1611 2430 y(2)1699
2883 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.0 def /x1 1.33333
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x^(3.0)+2.0*x^(2.0)-2.0*x+0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1.33333 def /x1 3
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x^(3.0)+2.0*x^(2.0)-2.0*x+0.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1699 2883 a
tx@Dict begin { 3.98335 25.03854 } PutCoor PutBegin  end
 1699 2883 a 0 0 1
TeXcolorrgb 39 x FM(convexe)p 0 TeXcolorgray 1699 2883
a
tx@Dict begin  PutEnd  end
 1699 2883 a 1699 2883 a
tx@Dict begin { 89.91077 -20.48601 } PutCoor PutBegin  end
 1699 2883 a 1 0 0 TeXcolorrgb
39 x FM(concave)p 0 TeXcolorgray 1699 2883 a
tx@Dict begin  PutEnd  end
 1699 2883
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 37.93684
-7.90334   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1699 2883 a
tx@Dict begin { 40.40283 -20.48601 } PutCoor PutBegin  end

1699 2883 a 0 1 0 TeXcolorrgb 2 w FJ(I)p 0 TeXcolorgray
1699 2883 a
tx@Dict begin  PutEnd  end
 1699 2883 a 2748 3271 a
currentpoint initclip moveto
 2748 3271 a -246
3336 a
SDict begin H.S end
 -246 3336 a -246 3336 a
SDict begin 12 H.A end
 -246 3336 a -246 3336
a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 3336 a 0 TeXcolorgray 131 x FN(Ex)o(er)o(cice)14
b(17)p 0 TeXcolorgray 41 w FM(La)k(fonction)g FJ(h)k
FM(est)c(d\351\002nie)f(sur)h(l)o('inter)q(valle)1559
3468 y([)1584 3467 y FI(\241)p FM(1;)8 b(4)1747 3468
y(])1791 3467 y(par)1635 3666 y FJ(h)t FM(\()r FJ(x)d
FM(\))14 b FI(\306)g FM(\(2)r FJ(x)h FI(\305)10 b FM(3\)e)2164
3632 y FE(\241)q Fy(x)2245 3666 y FM(.)-246 3813 y(On)18
b(calcule)g(les)g(d\351r)q(iv\351es)g(pr)o(emi\350r)o(e)f(et)h(seconde)
g(:)-246 3905 y
SDict begin H.S end
 -246 3905 a -246 3905 a
SDict begin 12 H.A end
 -246 3905 a -246
3905 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 3905 a 0 TeXcolorgray -141 4001 a FM(1.)p
0 TeXcolorgray 43 w FN(D\351r)q(iv\351e)c(pr)o(emi\350r)o(e.)h
FM(On)j(utilise)h(la)e(for)q(mule)h(pour)g(la)g(d\351r)q(iv\351e)f(d)n
('un)h(produit)g(avec)781 4292 y FJ(u)t FM(\()r FJ(x)5
b FM(\))15 b FI(\306)f FM(2)r FJ(x)h FI(\305)10 b FM(3)821
b(,)h FJ(v)7 b FM(\()r FJ(x)e FM(\))14 b FI(\306)g FM(e)3148
4258 y FE(\241)q Fy(x)3230 4292 y FM(,)781 4416 y FJ(u)832
4382 y FE(0)854 4416 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FM(2)961 b(,)822 b FJ(v)2926 4382 y FE(0)2947 4416 y
FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p FM(e)3225
4382 y FE(\241)q Fy(x)3306 4416 y FM(.)-38 4732 y(On)j(obtient,)i(pour)
e(tout)j FJ(x)g FI(2)836 4733 y FM([)862 4732 y FI(\241)p
FM(1;)8 b(4)1025 4733 y(])1083 4732 y(:)1359 5023 y FJ(h)1409
4989 y FE(0)1431 5023 y FM(\()r FJ(x)d FM(\))14 b FI(\306)g
FJ(u)1665 4989 y FE(0)1687 5023 y FM(\()r FJ(x)5 b FM(\))10
b FI(\243)i FJ(v)7 b FM(\()r FJ(x)e FM(\))10 b FI(\305)g
FJ(u)t FM(\()r FJ(x)5 b FM(\))10 b FI(\243)i FJ(v)2359
4989 y FE(0)2381 5023 y FM(\()r FJ(x)5 b FM(\))1545 5148
y FI(\306)14 b FM(2)c FI(\243)g FM(e)1769 5113 y FE(\241)q
Fy(x)1861 5148 y FI(\305)1926 5149 y FM(\()1952 5148
y(2)r FJ(x)15 b FI(\305)10 b FM(3)2153 5149 y(\))2192
5148 y FI(\243)2257 5083 y FA(\241)2287 5148 y FI(\241)p
FM(e)2381 5113 y FE(\241)q Fy(x)2462 5083 y FA(\242)1545
5272 y FI(\306)k FM(2)c FI(\243)g FM(e)1769 5238 y FE(\241)q
Fy(x)1861 5272 y FI(\305)g FM(2)r FJ(x)15 b FI(\243)2087
5208 y FA(\241)2118 5272 y FI(\241)p FM(e)2212 5238 y
FE(\241)q Fy(x)2293 5208 y FA(\242)2333 5272 y FI(\305)10
b FM(3)g FI(\243)2513 5208 y FA(\241)2543 5272 y FI(\241)p
FM(e)2637 5238 y FE(\241)q Fy(x)2719 5208 y FA(\242)1545
5397 y FI(\306)k FM(2)c FI(\243)g FM(e)1769 5362 y FE(\241)q
Fy(x)1861 5397 y FI(\241)g FM(2)r FJ(x)15 b FI(\243)10
b FM(e)2127 5362 y FE(\241)q Fy(x)2218 5397 y FI(\241)g
FM(3)g FI(\243)g FM(e)2439 5362 y FE(\241)q Fy(x)1545
5521 y FI(\306)1614 5522 y FM(\()1641 5521 y(2)g FI(\241)g
FM(2)r FJ(x)15 b FI(\241)10 b FM(3)1957 5522 y(\))1994
5521 y(e)2034 5487 y FE(\241)q Fy(x)1545 5646 y FI(\306)1614
5647 y FM(\()1641 5646 y FI(\241)p FM(2)r FJ(x)15 b FI(\241)10
b FM(1)1897 5647 y(\))1933 5646 y(e)1973 5611 y FE(\241)q
Fy(x)2054 5646 y FM(.)p 0 TeXcolorgray 1909 5895 a(15)p
0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FM(2.)p 0 TeXcolorgray 43 w FN(D\351r)q(iv\351e)14
b(seconde.)i FM(On)i(utilise)h(la)e(for)q(mule)h(pour)g(la)g(d\351r)q
(iv\351e)f(d)n('un)h(produit)g(avec)768 134 y FJ(u)t
FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g(\241)p FM(2)r FJ(x)h
FI(\241)10 b FM(1)808 b(,)g FJ(v)7 b FM(\()r FJ(x)e FM(\))14
b FI(\306)g FM(e)3162 100 y FE(\241)q Fy(x)3243 134 y
FM(,)768 259 y FJ(u)819 224 y FE(0)840 259 y FM(\()r
FJ(x)5 b FM(\))14 b FI(\306)h(\241)p FM(2)947 b(,)808
b FJ(v)2940 224 y FE(0)2961 259 y FM(\()r FJ(x)5 b FM(\))14
b FI(\306)g(\241)p FM(e)3238 224 y FE(\241)q Fy(x)3320
259 y FM(.)-38 581 y(On)j(obtient,)i(pour)e(tout)j FJ(x)g
FI(2)836 582 y FM([)862 581 y FI(\241)p FM(1;)8 b(4)1025
582 y(])1083 581 y(:)1215 877 y FJ(h)1265 843 y FE(00)1304
877 y FM(\()r FJ(x)d FM(\))14 b FI(\306)g FJ(u)1538 843
y FE(0)1560 877 y FM(\()r FJ(x)5 b FM(\))10 b FI(\243)i
FJ(v)7 b FM(\()r FJ(x)e FM(\))10 b FI(\305)g FJ(u)t FM(\()r
FJ(x)5 b FM(\))10 b FI(\243)i FJ(v)2232 843 y FE(0)2253
877 y FM(\()r FJ(x)5 b FM(\))1418 1002 y FI(\306)14 b(\241)p
FM(2)c FI(\243)g FM(e)1697 968 y FE(\241)q Fy(x)1788
1002 y FI(\305)1853 1003 y FM(\()1880 1002 y FI(\241)p
FM(2)r FJ(x)15 b FI(\241)10 b FM(1)2136 1003 y(\))2175
1002 y FI(\243)2240 938 y FA(\241)2269 1002 y FI(\241)p
FM(e)2364 968 y FE(\241)q Fy(x)2445 938 y FA(\242)1418
1127 y FI(\306)k(\241)p FM(2)c FI(\243)g FM(e)1697 1092
y FE(\241)q Fy(x)1788 1127 y FI(\305)g FM(\()p FI(\241)p
FM(2)r FJ(x)5 b FM(\))10 b FI(\243)2123 1062 y FA(\241)2154
1127 y FI(\241)p FM(e)2248 1092 y FE(\241)q Fy(x)2329
1062 y FA(\242)2369 1127 y FI(\305)g FM(\()p FI(\241)p
FM(1\))g FI(\243)2658 1062 y FA(\241)2688 1127 y FI(\241)p
FM(e)2782 1092 y FE(\241)q Fy(x)2863 1062 y FA(\242)1418
1251 y FI(\306)k(\241)p FM(2)c FI(\243)g FM(e)1697 1217
y FE(\241)q Fy(x)1788 1251 y FI(\305)g FM(2)r FJ(x)15
b FI(\243)10 b FM(e)2055 1217 y FE(\241)q Fy(x)2146 1251
y FI(\305)g FM(1)g FI(\243)g FM(e)2366 1217 y FE(\241)q
Fy(x)1418 1376 y FI(\306)1487 1377 y FM(\()1514 1376
y FI(\241)p FM(2)g FI(\305)g FM(2)r FJ(x)15 b FI(\305)10
b FM(1)1885 1377 y(\))1922 1376 y(e)1961 1341 y FE(\241)q
Fy(x)1418 1500 y FI(\306)1487 1501 y FM(\()1514 1500
y(2)r FJ(x)15 b FI(\241)10 b FM(1)1715 1501 y(\))1751
1500 y(e)1790 1466 y FE(\241)q Fy(x)1872 1500 y FM(.)-246
1747 y(On)18 b(\351tudie)g(le)g(signe)f(de)h(la)f(d\351r)q(iv\351e)h
(seconde)g(:)1611 1847 y FJ(h)1661 1813 y FE(00)1700
1847 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1884 1848
y FM(\()1910 1847 y(2)r FJ(x)h FI(\241)10 b FM(1)2111
1848 y(\))2148 1847 y(e)2187 1813 y FE(\241)q Fy(x)2268
1847 y FM(.)p 0 TeXcolorgray -76 1996 a(\225)p 0 TeXcolorgray
42 w(2)r FJ(x)15 b FI(\241)10 b FM(1)16 b FI(\306)e FM(0)29
b FI(\()-12 b(\))29 b FM(2)r FJ(x)20 b FI(\306)14 b FM(1)29
b FI(\()-12 b(\))31 b FJ(x)20 b FI(\306)1069 1964 y FG(1)p
1069 1977 31 5 v 1069 2025 a(2)1109 1996 y FM(.)p 0 TeXcolorgray
-76 2096 a(\225)p 0 TeXcolorgray 42 w(e)36 2066 y FE(\241)q
Fy(x)134 2096 y FM(est)e FI(\251)g FM(pour)f(tout)j FJ(x)g
FI(2)786 2097 y FM([)812 2096 y FI(\241)p FM(1;)8 b(4)975
2097 y(])1009 2096 y(.)-246 2245 y(On)18 b(a)f(donc)g(le)g(tableau)h(:)
p 0 TeXcolorgray 0 TeXcolorgray 674 2340 a

 674 2340 a
674 2340 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -19.23795 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 168 w FJ(x)674 2340
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -54.0626 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 85 w FM(2)r FJ(x)h FI(\241)13
b FM(1)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -88.56247 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 129 w FM(e)842
2310 y FE(\241)q Fy(x)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -122.27576 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340
a 95 w FJ(h)819 2310 y FE(00)858 2340 y FM(\()r FJ(x)5
b FM(\))674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.34508 -190.27522 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 17 w FM(C)o(onvexit\351)674
2340 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -34.02261 moveto

 306.20375 -34.02261 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.04524 moveto

 306.20375 -68.04524 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -102.0679 moveto

 306.20375 -102.0679 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -136.09053 moveto

 306.20375 -136.09053 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -238.15846 moveto

 306.20375 -238.15846 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -238.15846 lineto

 306.20375 -238.15846 lineto

 306.20375 0.0 lineto

 closepath

 306.20375 -238.15846 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 68.04524 0.0 moveto

 68.04524 -238.15846 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.31819 -20.07979 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(\241)p FM(1)674 2340
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.05205 -19.58743 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a 684 2307 a FG(1)p 684 2320 31
5 v 684 2368 a(2)674 2340 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.71245 -20.07979 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FM(4)674
2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -52.47826 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(\241)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -34.02261 moveto

 187.12448 -68.04524 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -54.08737 ] concat

 pgfs


 674 2340
a
 0 setgray
 674 2340 a FM(0)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -53.60904 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(\305)674
2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -87.64478 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -87.64478 ] concat

 pgfs


 674 2340
a
 0 setgray
 674 2340 a FI(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.84529 -120.54976 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a
FI(\241)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 187.12448 -102.0679 moveto

 187.12448 -136.09053 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 184.72963 -122.14578 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FM(0)674 2340
y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 234.95256 -121.68054 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FI(\305)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 115.02193 -190.58148 ] concat

 pgfs


 674 2340 a
 0 setgray

674 2340 a FJ(h)22 b FM(concave)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.1764 -233.26672 ] concat

 pgfs


 674 2340 a
 0 setgray

674 2340 a 0 TeXcolorgray 0 TeXcolorgray Fn(n)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 675 2273 a(o)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 683 2207 a(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 678 2141 a(x)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 677 2074 a(e)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 683 2008 a(l)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 682 1941 a(f)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 674 1875 a(n)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 682 1809 a(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 681 1676 a(t)p 0 TeXcolorgray 0 TeXcolorgray
674 1609 a(P)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 674 2340 a


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 217.21388 -190.58148 ] concat

 pgfs


 674 2340 a
 0 setgray
 674 2340 a FJ(h)g
FM(convexe)674 2340 y


 pgfr

 restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray 1057
5230 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 215.10266 a add def
/d 0.0 a add neg def /h 97.87787 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1057 5230 a 1591 5136 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 175.83774 0.0 -64.30304 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 86.49673 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 150.79962  0 -64.30304  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -64.30304
 150.79962  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-45.06921  def /maxTickline 86.49673  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 86.49673
0.0 -45.06921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 150.79962
0.0 -64.30304 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 86.49673  0 -45.06921  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -45.06921
 86.49673  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-64.30304  def /maxTickline 150.79962  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 86.49673
0.0 -45.06921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 150.79962
0.0 -64.30304 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1576 5233 a FG(0)205
b(1)g(2)g(3)g(4)-1233 b FE(\241)p FG(1)-309 b FE(\241)p
FG(2)1502 5155 y(0)1460 5344 y FE(\241)p FG(1)1502 4966
y(1)1502 4777 y(2)1502 4588 y(3)1591 5136 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 0.5 def
/dx x1 x sub 199 div def /F@pstplot ((2.0*x+3.0)*2.718281828459045^(-x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0.5 def /x1 4 def
/dx x1 x sub 199 div def /F@pstplot ((2.0*x+3.0)*2.718281828459045^(-x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
14.22636 55.22395 31.29819 75.1156   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1591 5136 a
tx@Dict begin { 8.5359 86.49673 } PutCoor PutBegin  end
 1591
5136 a 0 1 0 TeXcolorrgb 57 x FM(P)n(oint)17 b(d)n('in\003exion)p
0 TeXcolorgray 1591 5136 a
tx@Dict begin  PutEnd  end
 1591 5136 a 1591 5136 a
tx@Dict begin { -47.8004 33.23308 } PutCoor PutBegin  end
 1591
5136 a 1 0 0 TeXcolorrgb 38 x FM(concave)p 0 TeXcolorgray
1591 5136 a
tx@Dict begin  PutEnd  end
 1591 5136 a 1591 5136 a
tx@Dict begin { 73.40813 30.50137 } PutCoor PutBegin  end
 1591 5136 a 0 0 1
TeXcolorrgb 38 x FM(convexe)p 0 TeXcolorgray 1591 5136
a
tx@Dict begin  PutEnd  end
 1591 5136 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 14.22636
55.22395   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2843 5230 a
currentpoint initclip moveto
 2843 5230 a -246 5313 a
SDict begin H.S end
 -246 5313 a -246
5313 a
SDict begin 12 H.A end
 -246 5313 a -246 5313 a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 5313 a 0 TeXcolorgray
116 x FN(Ex)o(er)o(cice)d(18)p 0 TeXcolorgray 41 w FM(On)j(note)h
FH(C)32 b FM(la)17 b(courbe)h(de)f(la)g(fonction)i(exponentielle)h(et)e
FJ(T)29 b FM(sa)18 b(tangente)g(au)f(point)25 b FJ(A)s
FM(\(0;)8 b(1\).)p 0 TeXcolorgray 1909 5895 a(16)p 0
TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FM(1.)p 0 TeXcolorgray 43 w(On)17 b(pose)26 b FJ(f)19
b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)h FM(e)539 -193
y Fy(x)594 -163 y FM(pour)j(tout)i FJ(x)g FI(2)14 b FF(R)p
FM(.)j(On)h(sait)f(que)26 b FJ(f)1606 -193 y FE(0)1628
-163 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(e)1851
-193 y Fy(x)1907 -163 y FM(pour)k(tout)i FJ(x)f FI(2)c
FF(R)p FM(,)i(donc)1714 -3 y FJ(f)i FM(\(0\))14 b FI(\306)22
b FJ(f)1985 -37 y FE(0)2006 -3 y FM(\(0\))14 b FI(\306)h
FM(e)2223 -37 y FG(0)2272 -3 y FI(\306)f FM(1.)-38 157
y(L)-10 b('\351quation)19 b(de)e(la)h(tangente)g FJ(T)30
b FM(est)18 b(donc)1692 316 y FJ(y)j FI(\306)h FJ(f)1869
282 y FE(0)1890 316 y FM(\(0\)\()r FJ(x)15 b FI(\241)10
b FM(0\))g FI(\305)18 b FJ(f)i FM(\(0\))1692 441 y FJ(y)h
FI(\306)14 b FM(1\()r FJ(x)h FI(\241)10 b FM(0\))g FI(\305)g
FM(1)1692 565 y FJ(y)21 b FI(\306)16 b FJ(x)f FI(\305)10
b FM(1)-246 655 y
SDict begin H.S end
 -246 655 a -246 655 a
SDict begin 12 H.A end
 -246 655 a -246
655 a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 655 a 0 TeXcolorgray -141 736 a FM(2.)p 0
TeXcolorgray 43 w(On)16 b(a)g(d\351j\340)g(vu)h(dans)f(un)h(exer)o
(cice)f(pr\351c\351dent)h(que)g(la)f(fonction)h(exponentielle)j
(\351tait)d(convexe)g(sur)f FF(R)p FM(.)g(D)o('apr\350s)g(le)h
(th\351or\350me)g(8)g(du)f(cours)o(,)-38 835 y(la)h(courbe)g
FH(C)32 b FM(est)18 b(au-dessus)g(de)g(toutes)g(ses)g(tangentes)9
b(;)19 b(elle)f(est)g(donc)f(en)h(par)q(ticulier)g(au-dessus)g(de)g
FJ(T)5 b FM(.)17 b(Il)f(s)m('ensuit)k(que)1892 995 y(e)1932
961 y Fy(x)1985 995 y FI(\270)c FJ(x)f FI(\305)10 b FM(1)-38
1155 y(pour)18 b(tout)i FJ(x)f FI(2)c FF(R)p FM(.)p 0
TeXcolorgray 0 TeXcolorgray 962 2512 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.90349 a add def
/d 0.0 a add neg def /h 155.35172 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 962 2512 a 2011
2267 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57324 0.0 -126.33025 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 125.76106 0.0 -29.59065   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 136.57324  0 -126.33025  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -126.33025
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-29.59065  def /maxTickline 125.76106  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 125.76106
0.0 -29.59065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -126.33025 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 125.76106  0 -29.59065  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -29.59065
 125.76106  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-126.33025  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 125.76106
0.0 -29.59065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -126.33025 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1996 2364 a FG(0)205 b(1)g(2)h(3)f(4)-1233
b FE(\241)p FG(1)-309 b FE(\241)p FG(2)f FE(\241)p FG(3)h
FE(\241)p FG(4)1922 2286 y(0)1881 2522 y FE(\241)p FG(1)1922
2050 y(1)1922 1814 y(2)1922 1577 y(3)2011 2267 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.439999999999999
def /x1 4.799999999999998 def /dx x1 x sub 199 div def /F@pstplot (EXP(x))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.44 def /x1 4.8
def /dx x1 x sub 49 div def /F@pstplot ((--1.--1.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
2011 2267 a
tx@Dict begin { 21.05518 101.29169 } PutCoor PutBegin  end
 2011 2267 a 1 0 0 TeXcolorrgb 55 x FH(C)p
0 TeXcolorgray 2011 2267 a
tx@Dict begin  PutEnd  end
 2011 2267 a 2011 2267 a
tx@Dict begin { 50.64584 73.9773 } PutCoor PutBegin  end
 2011
2267 a 0 0 1 TeXcolorrgb 53 x FJ(T)p 0 TeXcolorgray 2011
2267 a
tx@Dict begin  PutEnd  end
 2011 2267 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2011 2267 a
tx@Dict begin { 3.41418 19.34766 } PutCoor PutBegin  end
 2011 2267 a 0 0 1 TeXcolorrgb 6 w FJ(A)p
0 TeXcolorgray 2011 2267 a
tx@Dict begin  PutEnd  end
 2011 2267 a 3145 2512 a
currentpoint initclip moveto
 3145
2512 a -38 2695 a FN(R)o(emarque)14 b(:)j FM(On)g(a)h(d\351j\340)f
(d\351montr\351)h(ce)f(r\351sultat)i(par)e(une)h(\351tude)g(de)f
(fonction,)i(dans)e(l)o('exer)o(cice)i(10.)-246 2773
y
SDict begin H.S end
 -246 2773 a -246 2773 a
SDict begin 12 H.A end
 -246 2773 a -246 2773 a
SDict begin [/View [/XYZ H.V]/Dest (exo.19) cvn /DEST pdfmark end
 -246
2773 a -246 2789 a
SDict begin H.S end
 -246 2789 a -246 2789 a
SDict begin 12 H.A end
 -246 2789
a -246 2789 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -246 2789 a 0 TeXcolorgray 91 x FN(Ex)o(er)o(cice)14
b(19)p 0 TeXcolorgray 0 TeXcolorgray 146 w FM(1.)p 0
TeXcolorgray 43 w(S)o(i)j FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)h FJ(x)763 2850 y FG(2)815 2880 y FM(et)k FJ(v)7
b FM(\()r FJ(x)e FM(\))14 b FI(\306)g FM(4)r FJ(x)h FI(\305)10
b FM(1,)19 b(alors)1448 3040 y FJ(v)e FI(\261)10 b FJ(u)t
FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h FJ(v)7 b FM(\()p
FJ(u)t FM(\()r FJ(x)e FM(\)\))14 b FI(\306)i FJ(v)2179
2976 y FA(\241)2211 3040 y FJ(x)2255 3006 y FG(2)2290
2976 y FA(\242)2334 3040 y FI(\306)e FM(4)r FJ(x)2489
3006 y FG(2)2535 3040 y FI(\305)c FM(1.)-246 3124 y
SDict begin H.S end
 -246
3124 a -246 3124 a
SDict begin 12 H.A end
 -246 3124 a -246 3124 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -246 3124
a 0 TeXcolorgray -141 3210 a FM(2.)p 0 TeXcolorgray 43
w(S)o(i)17 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h
FJ(x)f FI(\305)10 b FM(2)18 b(et)i FJ(v)7 b FM(\()r FJ(x)e
FM(\))14 b FI(\306)i FJ(x)815 3180 y FG(3)860 3210 y
FI(\241)10 b FM(3)r FJ(x)5 b FM(,)19 b(alors)1239 3370
y FJ(v)e FI(\261)10 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)h FJ(v)7 b FM(\()p FJ(u)t FM(\()r FJ(x)e FM(\)\))13
b FI(\306)k FJ(v)1970 3371 y FM(\()1998 3370 y FJ(x)e
FI(\305)10 b FM(2)2157 3371 y(\))2199 3370 y FI(\306)15
b FM(\()r FJ(x)g FI(\305)10 b FM(2\))2484 3336 y FG(3)2529
3370 y FI(\241)g FM(3\()r FJ(x)15 b FI(\305)10 b FM(2\).)-246
3440 y
SDict begin H.S end
 -246 3440 a -246 3440 a
SDict begin 12 H.A end
 -246 3440 a -246 3440
a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -246 3440 a 0 TeXcolorgray -141 3540 a FM(3.)p 0 TeXcolorgray
43 w(S)o(i)17 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h
FJ(x)f FI(\241)10 b FM(4)18 b(et)i FJ(v)7 b FM(\()r FJ(x)e
FM(\))14 b FI(\306)769 3482 y(p)p 833 3482 47 5 v 835
3540 a FJ(x)5 b FM(,)17 b(alors)1417 3640 y FJ(v)g FI(\261)10
b FJ(u)t FM(\()r FJ(x)5 b FM(\))15 b FI(\306)h FJ(v)7
b FM(\()p FJ(u)t FM(\()r FJ(x)e FM(\)\))14 b FI(\306)i
FJ(v)2148 3641 y FM(\()2176 3640 y FJ(x)f FI(\241)10
b FM(4)2335 3641 y(\))2378 3640 y FI(\306)2447 3571 y(p)p
2510 3571 163 5 v 2512 3640 a FJ(x)15 b FI(\241)10 b
FM(4)q(.)-246 3686 y
SDict begin H.S end
 -246 3686 a -246 3686 a
SDict begin 12 H.A end
 -246 3686
a -246 3686 a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -246 3686 a 0 TeXcolorgray -141 3786 a
FM(4.)p 0 TeXcolorgray 43 w(S)o(i)17 b FJ(u)t FM(\()r
FJ(x)5 b FM(\))15 b FI(\306)f FM(2)r FJ(x)h FI(\305)10
b FM(3)19 b(et)g FJ(v)7 b FM(\()r FJ(x)e FM(\))14 b FI(\306)g
FM(e)850 3756 y Fy(x)888 3786 y FM(,)k(alors)1418 3886
y FJ(v)f FI(\261)10 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)h FJ(v)7 b FM(\()p FJ(u)t FM(\()r FJ(x)e FM(\)\))14
b FI(\306)i FJ(v)2149 3887 y FM(\()2176 3886 y(2)r FJ(x)f
FI(\305)10 b FM(3)2377 3887 y(\))2420 3886 y FI(\306)k
FM(e)2528 3851 y FG(2)q Fy(x)t FE(\305)p FG(3)2671 3886
y FM(.)-246 3955 y
SDict begin H.S end
 -246 3955 a -246 3955 a
SDict begin 12 H.A end
 -246 3955
a -246 3955 a
SDict begin [/View [/XYZ H.V]/Dest (exo.20) cvn /DEST pdfmark end
 -246 3955 a -246 3971 a
SDict begin H.S end
 -246 3971 a -246
3971 a
SDict begin 12 H.A end
 -246 3971 a -246 3971 a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -246 3971 a 0 TeXcolorgray
100 x FN(Ex)o(er)o(cice)g(20)p 0 TeXcolorgray 0 TeXcolorgray
146 w FM(1.)p 0 TeXcolorgray 43 w(S)o(achant)j(que)j
FJ(v)d FI(\261)10 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)1186 4001 y(p)p 1250 4001 198 5 v 1252 4071
a FJ(x)1296 4047 y FG(2)1341 4071 y FI(\305)10 b FM(1)q(,)18
b(on)f(peut)h(pr)o(endr)o(e)1497 4231 y FJ(u)t FM(\()r
FJ(x)5 b FM(\))14 b FI(\306)j FJ(x)1778 4196 y FG(2)1823
4231 y FI(\305)10 b FM(1)147 b(,)156 b FJ(v)7 b FM(\()r
FJ(x)e FM(\))14 b FI(\306)2480 4169 y(p)p 2544 4169 47
5 v 2546 4231 a FJ(x)5 b FM(.)-246 4302 y
SDict begin H.S end
 -246 4302 a
-246 4302 a
SDict begin 12 H.A end
 -246 4302 a -246 4302 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -246 4302 a 0 TeXcolorgray
-141 4401 a FM(2.)p 0 TeXcolorgray 43 w(S)o(achant)18
b(que)h FJ(v)e FI(\261)10 b FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)f FM(\()r FJ(x)h FI(\241)10 b FM(3\))960 4371
y FG(2)1006 4401 y FI(\305)g FM(5\()r FJ(x)15 b FI(\241)10
b FM(3\))g FI(\305)g FM(1,)20 b(on)d(peut)i(pr)o(endr)o(e)1390
4561 y FJ(u)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)i FJ(x)f
FI(\241)10 b FM(3)148 b(,)156 b FJ(v)7 b FM(\()r FJ(x)e
FM(\))14 b FI(\306)i FJ(x)2384 4526 y FG(2)2430 4561
y FI(\305)10 b FM(5)r FJ(x)15 b FI(\305)10 b FM(1.)-246
4632 y
SDict begin H.S end
 -246 4632 a -246 4632 a
SDict begin 12 H.A end
 -246 4632 a -246 4632
a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -246 4632 a 0 TeXcolorgray -141 4731 a FM(3.)p 0 TeXcolorgray
43 w(S)o(achant)18 b(que)h FJ(v)e FI(\261)10 b FJ(u)t
FM(\()r FJ(x)5 b FM(\))15 b FI(\306)f FM(e)785 4701 y
FG(3)q Fy(x)t FE(\241)p FG(1)927 4731 y FM(,)k(on)f(peut)i(pr)o(endr)o
(e)1510 4891 y FJ(u)t FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FM(3)r FJ(x)h FI(\241)10 b FM(1)148 b(,)157 b FJ(v)7
b FM(\()r FJ(x)e FM(\))14 b FI(\306)g FM(e)2539 4856
y Fy(x)2577 4891 y FM(.)-246 5091 y FN(R)o(emarque)g(:)k
FM(Il)e(y)h(a)g(une)h(in\002nit\351)h(de)e(choix)h(possibles)o(.)g(P)m
(ar)f(exemple)o(,)i(pour)f(le)g(deuxi\350me)o(,)g(on)g(pourr)o(ait)g
(pr)o(endr)o(e)1166 5251 y FJ(u)t FM(\()r FJ(x)5 b FM(\))15
b FI(\306)f FM(\()r FJ(x)h FI(\241)10 b FM(3\))1616 5216
y FG(2)1661 5251 y FI(\305)g FM(5\()r FJ(x)15 b FI(\241)10
b FM(3\))148 b(,)156 b FJ(v)7 b FM(\()r FJ(x)e FM(\))14
b FI(\306)i FJ(x)f FI(\305)10 b FM(1)19 b(;)-246 5410
y(ou)f(encor)o(e)1166 5510 y FJ(u)t FM(\()r FJ(x)5 b
FM(\))15 b FI(\306)f FM(\()r FJ(x)h FI(\241)10 b FM(3\))1616
5476 y FG(2)1661 5510 y FI(\305)g FM(5\()r FJ(x)15 b
FI(\241)10 b FM(3\))g FI(\305)g FM(1)149 b(,)156 b FJ(v)7
b FM(\()r FJ(x)e FM(\))14 b FI(\306)i FJ(x)23 b FM(;)-246
5646 y(etc)o(.)-246 5706 y
SDict begin H.S end
 -246 5706 a -246 5706 a
SDict begin 12 H.A end
 -246
5706 a -246 5706 a
SDict begin [/View [/XYZ H.V]/Dest (exo.21) cvn /DEST pdfmark end
 -246 5706 a 0 TeXcolorgray 1909 5895
a FM(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FN(Ex)o(er)o(cice)14
b(21)p 0 TeXcolorgray 41 w FM(On)j(consid\350r)o(e)h(dans)f(un)h(r)o
(ep\350r)o(e)f(or)q(thonor)q(m\351)g(la)h(par)o(abole)g
FJ(P)k FM(:)c FJ(y)j FI(\306)c FJ(x)2325 -193 y FG(2)2377
-163 y FM(et)h(le)g(point)24 b FJ(A)s FM(\(3;)8 b(0\).)-246
-115 y
SDict begin H.S end
 -246 -115 a -246 -115 a
SDict begin 12 H.A end
 -246 -115 a -246 -115
a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -246 -115 a 0 TeXcolorgray -141 -19 a FM(1.)p 0 TeXcolorgray
43 w(S)o(oit)18 b FJ(m)j FM(un)d(r\351el)g(et)f(soit)j
FJ(M)25 b FM(le)18 b(point)g(de)g FJ(P)25 b FM(d)n('abscisse)18
b FJ(m)t FM(.)f(L)-10 b('or)o(donn\351e)18 b(de)h FJ(M)25
b FM(est)18 b FJ(m)2513 -49 y FG(2)2548 -19 y FM(,)g(donc)1500
201 y FJ(A)5 b(M)21 b FI(\306)1714 98 y FA(q)p 1790 98
807 5 v 104 x FM(\()1819 201 y FJ(x)1861 213 y Fy(M)1935
201 y FI(\241)12 b FJ(x)2047 213 y Fy(A)2091 202 y FM(\))2118
172 y FG(2)2163 201 y FI(\305)2228 137 y FA(\241)2262
201 y FJ(y)2302 213 y Fy(M)2376 201 y FI(\241)i FJ(y)2488
213 y Fy(A)2532 137 y FA(\242)2561 158 y FG(2)1644 377
y FI(\306)1714 275 y FA(q)p 1790 275 672 5 v 103 x FM(\()1817
377 y FJ(m)g FI(\241)c FM(3)2006 378 y(\))2033 348 y
FG(2)2078 377 y FI(\305)2143 313 y FA(\241)2173 377 y
FJ(m)2247 353 y FG(2)2292 377 y FI(\241)g FM(0)2397 313
y FA(\242)2427 334 y FG(2)1644 533 y FI(\306)1714 451
y FA(p)p 1790 451 825 5 v 82 x FJ(m)1864 509 y FG(2)1909
533 y FI(\241)g FM(2)g FI(\243)g FJ(m)k FI(\243)c FM(3)g
FI(\305)g FM(3)2393 509 y FG(2)2440 533 y FI(\305)g FJ(m)2579
509 y FG(4)1644 687 y FI(\306)1714 605 y FA(p)p 1790
605 599 5 v 82 x FJ(m)1864 663 y FG(4)1909 687 y FI(\305)g
FJ(m)2048 663 y FG(2)2093 687 y FI(\241)g FM(6)p FJ(m)k
FI(\305)c FM(9)q(.)-38 934 y(On)17 b(r)o(emarque)f(que)24
b FJ(A)5 b(M)22 b FI(\306)g FJ(f)d FM(\()p FJ(m)t FM(\),)d(o\371)25
b FJ(f)36 b FM(est)18 b(la)f(fonction)h(d\351\002nie)f(dans)g(la)g
(question)h(suivante)o(.)g(De)e(ce)h(fait,)h(trouver)f(le)g(point)j
FJ(M)25 b FM(pour)17 b(le-)-38 1034 y(quel)e(la)g(longueur)21
b FJ(A)5 b(M)22 b FM(est)15 b(minimale)h(r)o(evient)g(\340)e(trouver)g
(la)h(valeur)f(de)j FJ(x)i FM(pour)c(laquelle)24 b FJ(f)34
b FM(atteint)15 b(son)g(minimum.)i(N)n(ous)d(y)g(r)o(eviendrons)-38
1134 y(dans)j(la)h(question)h(3.)-246 1165 y
SDict begin H.S end
 -246 1165
a -246 1165 a
SDict begin 12 H.A end
 -246 1165 a -246 1165 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -246 1165 a 0 TeXcolorgray
-141 1263 a FM(2.)p 0 TeXcolorgray 43 w(On)e(pose)26
b FJ(f)19 b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)499 1192
y(p)p 562 1192 516 5 v 564 1263 a FJ(x)608 1239 y FG(4)654
1263 y FI(\305)e FJ(x)765 1239 y FG(2)810 1263 y FI(\241)e
FM(6)r FJ(x)15 b FI(\305)10 b FM(9)19 b(pour)f(tout)i
FJ(x)g FI(2)14 b FF(R)p FM(.)-38 1377 y(La)j(fonction)27
b FJ(f)36 b FM(est)18 b(de)f(la)h(for)q(me)25 b FJ(f)19
b FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1198 1315 y(p)p
1261 1315 152 5 v 1261 1377 a FJ(u)t FM(\()r FJ(x)5 b
FM(\),)18 b(avec)1253 1559 y FJ(u)t FM(\()r FJ(x)5 b
FM(\))15 b FI(\306)h FJ(x)1534 1525 y FG(4)1579 1559
y FI(\305)c FJ(x)1690 1525 y FG(2)1736 1559 y FI(\241)e
FM(6)r FJ(x)15 b FI(\305)10 b FM(9,)156 b FJ(u)2229 1525
y FE(0)2251 1559 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g
FM(4)r FJ(x)2520 1525 y FG(3)2566 1559 y FI(\305)c FM(2)r
FJ(x)15 b FI(\241)10 b FM(6.)-38 1742 y(On)17 b(a)g(donc,)h(pour)f
(tout)j FJ(x)g FI(2)14 b FF(R)31 b FM(:)722 1981 y FJ(f)765
1947 y FE(0)786 1981 y FM(\()r FJ(x)5 b FM(\))14 b FI(\306)1020
1925 y FJ(u)1071 1895 y FE(0)1093 1925 y FM(\()r FJ(x)5
b FM(\))p 979 1962 256 5 v 979 2045 a(2)1019 1984 y FI(p)p
1083 1984 152 5 v 61 x FJ(u)t FM(\()r FJ(x)g FM(\))1259
1981 y FI(\306)1448 1925 y FM(4)r FJ(x)1534 1895 y FG(3)1580
1925 y FI(\305)10 b FM(2)r FJ(x)15 b FI(\241)10 b FM(6)p
1338 1962 621 5 v 1338 2054 a(2)1378 1984 y FI(p)p 1442
1984 516 5 v 1444 2054 a FJ(x)1488 2030 y FG(4)1533 2054
y FI(\305)i FJ(x)1644 2030 y FG(2)1690 2054 y FI(\241)e
FM(6)r FJ(x)15 b FI(\305)10 b FM(9)1982 1981 y FI(\306)2137
1935 y FD(\001)2137 1920 y FM(2)2186 1855 y FA(\241)2216
1920 y FM(2)r FJ(x)2302 1889 y FG(3)2348 1920 y FI(\305)i
FJ(x)j FI(\241)10 b FM(3)2574 1855 y FA(\242)p 2061 1962
621 5 v 2061 2070 a FD(\001)2061 2054 y FM(2)2101 1984
y FI(p)p 2165 1984 516 5 v 2167 2054 a FJ(x)2211 2030
y FG(4)2257 2054 y FI(\305)i FJ(x)2368 2030 y FG(2)2413
2054 y FI(\241)e FM(6)r FJ(x)15 b FI(\305)10 b FM(9)2705
1981 y FI(\306)2894 1925 y FM(2)r FJ(x)2980 1895 y FG(3)3026
1925 y FI(\305)i FJ(x)j FI(\241)10 b FM(3)p 2784 1962
580 5 v 2784 1984 a FI(p)p 2848 1984 516 5 v 2850 2054
a FJ(x)2894 2030 y FG(4)2939 2054 y FI(\305)i FJ(x)3050
2030 y FG(2)3096 2054 y FI(\241)e FM(6)r FJ(x)15 b FI(\305)10
b FM(9)3374 1981 y(.)-38 2270 y(P)n(our)17 b(d\351montr)o(er)g(la)h
(for)q(mule)g(de)f(l)o('\351nonc\351,)i(on)f(d\351veloppe)h(:)126
2452 y(\()r FJ(x)c FI(\241)10 b FM(1\))349 2388 y FA(\241)379
2452 y FM(2)r FJ(x)465 2418 y FG(2)511 2452 y FI(\305)g
FM(2)r FJ(x)15 b FI(\305)10 b FM(3)777 2388 y FA(\242)823
2452 y FI(\306)16 b FJ(x)f FI(\243)10 b FM(2)r FJ(x)1099
2418 y FG(2)1146 2452 y FI(\305)i FJ(x)j FI(\243)10 b
FM(2)r FJ(x)15 b FI(\305)d FJ(x)j FI(\243)10 b FM(3)g
FI(\241)g FM(1)g FI(\243)g FM(2)r FJ(x)1930 2418 y FG(2)1980
2452 y FI(\241)g FM(1)g FI(\243)g FM(2)r FJ(x)15 b FI(\241)10
b FM(1)g FI(\243)g FM(3)17 b FI(\306)e FM(2)r FJ(x)2649
2418 y FG(3)2695 2452 y FI(\305)10 b FM(2)r FJ(x)2846
2418 y FG(2)2892 2452 y FI(\305)g FM(3)r FJ(x)15 b FI(\241)10
b FM(2)r FJ(x)3204 2418 y FG(2)3251 2452 y FI(\241)g
FM(2)r FJ(x)15 b FI(\241)10 b FM(3)16 b FI(\306)e FM(2)r
FJ(x)3688 2418 y FG(3)3734 2452 y FI(\305)e FJ(x)j FI(\241)10
b FM(3.)-38 2635 y(On)17 b(r)o(etombe)h(sur)f(le)h(num\351r)o(ateur)h
(obtenu)f(pr\351c\351demment)9 b(;)19 b(on)f(a)f(donc)g(bien)1573
2874 y FJ(f)1616 2839 y FE(0)1637 2874 y FM(\()r FJ(x)5
b FM(\))14 b FI(\306)1830 2812 y FM(\()r FJ(x)h FI(\241)10
b FM(1\))2053 2748 y FA(\241)2083 2812 y FM(2)r FJ(x)2169
2782 y FG(2)2215 2812 y FI(\305)g FM(2)r FJ(x)15 b FI(\305)10
b FM(3)2481 2748 y FA(\242)p 1830 2854 683 5 v 1882 2877
a FI(p)p 1945 2877 516 5 v 1947 2947 a FJ(x)1991 2923
y FG(4)2037 2947 y FI(\305)i FJ(x)2148 2923 y FG(2)2193
2947 y FI(\241)e FM(6)r FJ(x)15 b FI(\305)10 b FM(9)2523
2874 y(.)-38 3125 y(P)n(our)21 b(constr)q(uir)o(e)g(le)h(tableau)f(de)g
(var)q(iations)h(de)f(la)h(fonction)30 b FJ(f)17 b FM(,)22
b(il)f(faut)h(\351tudier)g(le)g(signe)g(de)f(2)r FJ(x)2918
3095 y FG(2)2965 3125 y FI(\305)12 b FM(2)r FJ(x)18 b
FI(\305)12 b FM(3.)21 b(S)o(on)h(discr)q(iminant)g(est)g
FK(\242)d FI(\306)-38 3224 y FM(2)2 3194 y FG(2)43 3224
y FI(\241)6 b FM(4)g FI(\243)g FM(2)g FI(\243)g FM(3)14
b FI(\306)g(\241)p FM(20,)j(donc)e(il)h(n)-6 b('y)15
b(a)g(pas)h(de)g(r)o(acine)f(et)h(2)r FJ(x)1666 3194
y FG(2)1708 3224 y FI(\305)6 b FM(2)r FJ(x)k FI(\305)c
FM(3)16 b(est)h(str)q(ictement)g(positif)g(pour)f(tout)g(r\351el)i
FJ(x)5 b FM(.)16 b(On)f(peut)i(donc)e(compl\351ter)-38
3324 y(le)j(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray
672 3443 a

 672 3443 a 672 3443 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -20.6557 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443
a 167 w FJ(x)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -58.31578 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a 107 w FJ(x)g
FI(\241)13 b FM(1)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -96.24571 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FM(2)r
FJ(x)758 3413 y FG(2)798 3443 y FI(\305)5 b FM(2)r FJ(x)10
b FI(\305)5 b FM(3)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -132.90085 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a -65
x Fr(p)p 733 3378 421 4 v 734 3443 a Fu(x)770 3424 y
Fs(4)810 3443 y Ft(\305)k Fu(x)899 3424 y Fs(2)939 3443
y Ft(\241)f Fv(6)q Fu(x)k Ft(\305)c Fv(9)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -168.51254 ] concat

 pgfs


 672
3443 a
 0 setgray
 672 3443 a 111 w FJ(f)826 3413 y FE(0)847 3443
y FM(\()r FJ(x)d FM(\))672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 14.18054 -223.44757 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443
a 121 w FJ(f)19 b FM(\()r FJ(x)5 b FM(\))672 3443 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -36.85808 moveto

 331.72298 -36.85808 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -73.7162 moveto

 331.72298 -73.7162 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -110.57431 moveto

 331.72298 -110.57431 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -147.43242 moveto

 331.72298 -147.43242 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -184.29051 moveto

 331.72298 -184.29051 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -258.00674 moveto

 331.72298 -258.00674 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -258.00674 lineto

 331.72298 -258.00674 lineto

 331.72298 0.0 lineto

 closepath

 331.72298 -258.00674 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 73.7162 0.0 moveto

 73.7162 -258.00674 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 84.15932 -20.46143 ] concat

 pgfs


 672
3443 a
 0 setgray
 672 3443 a FI(\2411)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 200.25647 -21.49753 ] concat

 pgfs


 672 3443 a
 0 setgray
 672
3443 a FM(1)672 3443 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 305.26505 -20.98447 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\3051)672
3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.19208 -56.73329 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\241)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 202.71957 -36.85808 moveto

 202.71957 -73.7162 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 200.32811 -58.3415 ] concat

 pgfs


 672 3443
a
 0 setgray
 672 3443 a FM(0)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 254.80946 -57.86407 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\305)672
3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.19208 -94.73653 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\305)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 254.80946 -94.73653 ] concat

 pgfs


 672 3443
a
 0 setgray
 672 3443 a FI(\305)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.19208 -131.609 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a
FI(\305)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 254.80946 -131.609 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\305)672
3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.19208 -167.35066 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\241)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 202.71957 -147.43242 moveto

 202.71957 -184.29051 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 200.32811 -168.93733 ] concat

 pgfs


 672 3443
a
 0 setgray
 672 3443 a FM(0)672 3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 254.80946 -168.48145 ] concat

 pgfs


 672 3443 a
 0 setgray
 672 3443 a FI(\305)672
3443 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 90.15268 -192.26073 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 92.14523 -190.26817 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443 a 672 3443 a
 0 setgray
 672 3443 a 672
3443 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 90.15268 -192.26073 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 92.14523 -190.26817 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443 a 672 3443 a
 0 setgray
 672 3443 a 672
3443 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 200.72702 -254.02164 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 202.71957 -252.02908 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443 a 672 3443 a
 0 setgray
 672 3443 a 672
3443 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 200.72702 -254.02164 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 202.71957 -252.02908 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443 a 672 3443 a
 0 setgray
 672 3443 a 672
3443 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 97.88853 -193.503 moveto

 194.94626 -247.71735 lineto

 pgfstr

 save

 [0.873 -0.48764 0.48764 0.873 194.94626 -247.71735 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 311.30133 -192.26073 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 313.29388 -190.26817 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443
a 672 3443 a
 0 setgray
 672 3443 a 672 3443 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 3.9851 3.9851 311.30133 -192.26073 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 313.29388 -190.26817 ] concat

 pgfs


 672 3443 a
 /pgfsc{}def/pgffc{}def
 672 3443
a 672 3443 a
 0 setgray
 672 3443 a 672 3443 a


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 208.48439 -248.88362 moveto

 305.54208 -194.66904 lineto

 pgfstr

 save

 [0.873 0.48764 -0.48764 0.873 305.54208 -194.66904 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 1909 5895 a FM(18)p 0 TeXcolorgray eop
end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FM(3.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p 0
TeXcolorgray 42 w(La)23 b(fonction)33 b FJ(f)42 b FM(atteint)24
b(son)g(minimum)h(pour)h FJ(x)g FI(\306)20 b FM(1,)j(donc)g(la)h
(longueur)30 b FJ(A)5 b(M)30 b FM(est)24 b(minimale)i(lorsque)e
FJ(m)g FI(\306)c FM(1.)k(A)n(utr)o(ement)g(dit,)f(le)80
-63 y(point)18 b(de)f FJ(P)26 b FM(le)17 b(plus)i(proche)e(de)23
b FJ(A)d FM(est)e(le)g(point)j FJ(M)7 b FM(\(1;)h(1\).)p
0 TeXcolorgray 7 37 a(\225)p 0 TeXcolorgray 42 w(La)17
b(tangente)i(\()p FJ(T)12 b FM(\))17 b(\340)g(la)g(par)o(abole)h
FJ(P)25 b FM(au)18 b(point)i FJ(M)25 b FM(a)17 b(pour)h(\351quation)
1742 219 y FJ(y)j FI(\306)16 b FJ(g)1918 185 y FE(0)1939
219 y FM(\(1\)\()r FJ(x)f FI(\241)10 b FM(1\))g FI(\305)i
FJ(g)e FM(\(1\),)80 402 y(avec)19 b FJ(g)10 b FM(\()r
FJ(x)5 b FM(\))14 b FI(\306)i FJ(x)531 372 y FG(2)583
402 y FM(\226)i(donc)h FJ(g)881 372 y FE(0)902 402 y
FM(\()r FJ(x)5 b FM(\))14 b FI(\306)g FM(2)r FJ(x)5 b
FM(,)18 b(et)i FJ(g)1342 372 y FE(0)1363 402 y FM(\(1\))14
b FI(\306)g FM(2)c FI(\243)g FM(1)16 b FI(\306)e FM(2.)k(On)f(a)g
(ainsi)1668 684 y(\()p FJ(T)12 b FM(\))i(:)k FJ(y)j FI(\306)16
b FJ(g)2008 650 y FE(0)2029 684 y FM(\(1\)\()r FJ(x)f
FI(\241)10 b FM(1\))g FI(\305)i FJ(g)e FM(\(1\))1832
809 y FJ(y)21 b FI(\306)14 b FM(2\()r FJ(x)h FI(\241)10
b FM(1\))g FI(\305)g FM(1)1832 933 y FJ(y)21 b FI(\306)14
b FM(2)r FJ(x)h FI(\241)10 b FM(1.)p 0 TeXcolorgray 7
1116 a(\225)p 0 TeXcolorgray 42 w(P)n(our)17 b(prouver)g(que)h(\()6
b FJ(A)f(M)i FM(\))17 b(est)h(perpendiculair)o(e)h(\340)e(\()p
FJ(T)12 b FM(\),)17 b(on)h(utilise)h(le)e(produit)h(scalair)o(e)f(:)80
1262 y(\()p FJ(T)12 b FM(\))26 b(passe)i(par)h FJ(M)7
b FM(\(1;)h(1\))28 b(et)f(par)i FJ(N)9 b FM(\(2;)f(3\))27
b(\(puisque)i(2)14 b FI(\243)g FM(2)h FI(\241)f FM(1)24
b FI(\306)f FM(3\),)k(donc)g(elle)h(est)f(dir)q(ig\351e)g(par)g(le)g
(vecteur)3432 1209 y FI(\241)-19 b(\241)g(!)3434 1262
y FJ(M)9 b(N)3589 1152 y FA(\265)3623 1211 y FM(1)3623
1311 y(2)3664 1152 y FA(\266)3706 1262 y FM(.)27 b(P)m(ar)f(ailleurs)80
1417 y FI(\241)-25 b(\241)g(!)86 1470 y FJ(A)5 b(M)224
1360 y FA(\265)259 1419 y FI(\241)p FM(2)286 1518 y(1)354
1360 y FA(\266)396 1470 y FM(,)18 b(donc)1588 1588 y
FI(\241)-19 b(\241)g(!)1590 1641 y FJ(M)9 b(N)19 b FI(\242)1777
1588 y(\241)-24 b(\241)f(!)1783 1641 y FJ(A)5 b(M)22
b FI(\306)14 b FM(1)c FI(\243)g FM(\()p FI(\241)p FM(2\))g
FI(\305)g FM(2)g FI(\243)g FM(1)17 b FI(\306)d FM(0.)80
1791 y(Les)k(droites)f(\()p FJ(T)12 b FM(\))17 b(et)h(\()6
b FJ(A)f(M)i FM(\))17 b(sont)h(donc)f(bien)h(perpendiculair)o(es)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1196 3368 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56676 a add def
/d 0.0 a add neg def /h 179.8211 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1196 3368 a
1749 3150 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 139.98744 0.0 -66.57932 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 153.64464 0.0 -26.17647   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 139.98744  0 -66.57932  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -66.57932
 139.98744  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.17647  def /maxTickline 153.64464  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.64464
0.0 -26.17647   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.98744
0.0 -66.57932 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 153.64464  0 -26.17647  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -26.17647
 153.64464  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-66.57932  def /maxTickline 139.98744  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 153.64464
0.0 -26.17647   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.98744
0.0 -66.57932 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1734 3247 a FG(0)205 b(1)g(2)g(3)h(4)-1233
b FE(\241)p FG(1)-310 b FE(\241)p FG(2)1660 2934 y(1)1660
2697 y(2)1660 2461 y(3)1660 2225 y(4)1749 3150 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 28.45274 28.45274
33.85144 39.24973 44.64844 33.85144 39.24973 23.05403  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.7 0.7  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1749 3150 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1749 3150 a 1749
3150 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1749 3150 a 1749 3150 a
tx@Dict begin ps@rot  RotBegin  end
 1749 3150 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4. def /x1 4. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1749 3150 a
tx@Dict begin RotEnd  end
 1749 3150 a 1749
3150 a
tx@Dict begin  PutEnd  end
 1749 3150 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.34 def /x1 4.92
def /dx x1 x sub 49 div def /F@pstplot ((-0.5--1.*x)/0.5)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 28.45274 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1749 3150 a
tx@Dict begin { 64.87221 95.60123 } PutCoor PutBegin  end
 1749
3150 a 1 0 0 TeXcolorrgb 54 x FM(\()p FJ(T)12 b FM(\))p
0 TeXcolorgray 1749 3150 a
tx@Dict begin  PutEnd  end
 1749 3150 a 1749 3150 a
tx@Dict begin { -40.40283 75.11522 } PutCoor PutBegin  end
 1749
3150 a 0 0 1 TeXcolorrgb 54 x FJ(P)p 0 TeXcolorgray 1749
3150 a
tx@Dict begin  PutEnd  end
 1749 3150 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1749 3150 a
tx@Dict begin { 21.05518 38.69574 } PutCoor PutBegin  end
 1749 3150 a 0.30196 0.30196 1 TeXcolorrgb
2 w FJ(M)p 0 TeXcolorgray 1749 3150 a
tx@Dict begin  PutEnd  end
 1749 3150 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 85.35823
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1749 3150 a
tx@Dict begin { 87.63449 5.69046 } PutCoor PutBegin  end
 1749 3150 a 1 0 0
TeXcolorrgb 6 w FJ(A)p 0 TeXcolorgray 1749 3150 a
tx@Dict begin  PutEnd  end
 1749
3150 a 2911 3368 a
currentpoint initclip moveto
 2911 3368 a -246 3496 a
SDict begin H.S end
 -246 3496
a -246 3496 a
SDict begin 12 H.A end
 -246 3496 a -246 3496 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -246 3496 a 149
x FO(2)105 b(S)m(uites)23 b(et)g(r\351curr)n(ence)-246
3732 y
SDict begin H.S end
 -246 3732 a -246 3732 a
SDict begin 12 H.A end
 -246 3732 a -246 3732
a
SDict begin [/View [/XYZ H.V]/Dest (exo.22) cvn /DEST pdfmark end
 -246 3732 a 0 TeXcolorgray 97 x FN(Ex)o(er)o(cice)14
b(22)p 0 TeXcolorgray 41 w FM(On)j(calcule)i(trois)e(ou)g(quatr)o(e)h
(ter)q(mes)o(,)g(suivant)h(le)f(cas)f(\226)g(suf\002samment)j(pour)e
(\253)c(avoir)i(compr)q(is)i(le)g(pr)q(incipe)c(\273.)-246
3875 y
SDict begin H.S end
 -246 3875 a -246 3875 a
SDict begin 12 H.A end
 -246 3875 a -246 3875
a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -246 3875 a 0 TeXcolorgray -141 4023 a FM(1.)p 0 TeXcolorgray
43 w(P)n(our)j(tout)h FJ(n)g FI(2)d FF(N)31 b FM(:)17
b FJ(u)603 4035 y Fy(n)662 4023 y FI(\306)741 3967 y
FJ(n)792 3937 y FG(2)837 3967 y FI(\241)10 b FM(1)p 741
4004 203 5 v 758 4080 a FJ(n)k FI(\305)c FM(2)953 4023
y(.)1730 4354 y FJ(u)1779 4366 y FG(0)1829 4354 y FI(\306)1908
4298 y FM(0)1948 4267 y FG(2)1994 4298 y FI(\241)g FM(1)p
1908 4335 192 5 v 1926 4411 a(0)g FI(\305)g FM(2)2124
4354 y FI(\306)k(\241)2258 4298 y FM(1)p 2258 4335 41
5 v 2258 4411 a(2)1730 4570 y FJ(u)1779 4582 y FG(1)1829
4570 y FI(\306)1908 4514 y FM(1)1948 4483 y FG(2)1994
4514 y FI(\241)c FM(1)p 1908 4550 192 5 v 1926 4627 a(1)g
FI(\305)g FM(2)2124 4570 y FI(\306)2203 4514 y FM(0)p
2203 4550 41 5 v 2203 4627 a(3)2268 4570 y FI(\306)k
FM(0)1730 4786 y FJ(u)1779 4798 y FG(2)1829 4786 y FI(\306)1908
4730 y FM(2)1948 4699 y FG(2)1994 4730 y FI(\241)c FM(1)p
1908 4766 192 5 v 1926 4843 a(2)g FI(\305)g FM(2)2124
4786 y FI(\306)2203 4730 y FM(3)p 2203 4766 41 5 v 2203
4843 a(4)-246 4926 y
SDict begin H.S end
 -246 4926 a -246 4926 a
SDict begin 12 H.A end
 -246 4926
a -246 4926 a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -246 4926 a 0 TeXcolorgray -141 5064 a
FM(2.)p 0 TeXcolorgray 43 w(P)n(our)17 b(tout)h FJ(n)g
FI(2)d FF(N)486 5034 y FE(\244)558 5064 y FM(:)k FJ(v)640
5076 y Fy(n)698 5064 y FI(\306)777 5008 y FM(\()p FI(\241)p
FM(1\))926 4978 y Fy(n)p 777 5045 193 5 v 847 5121 a
FJ(n)979 5064 y FM(.)-38 5202 y FB(")p FM(On)f(\253)c(d\351marr)o(e)g
(\273)33 b(\340)17 b FJ(n)h FI(\306)c FM(1,)k(puisqu)n('on)i(ne)d(peut)
i(pas)f(diviser)g(par)f(0.)p 0 TeXcolorgray 1909 5895
a(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1674 43 a FJ(v)1717 55 y FG(1)1765 43
y FI(\306)1845 -13 y FM(\()p FI(\241)p FM(1\))1994 -43
y FG(1)p 1845 24 184 5 v 1916 100 a FM(1)2053 43 y FI(\306)2132
-13 y(\241)p FM(1)p 2132 24 96 5 v 2159 100 a(1)2251
43 y FI(\306)15 b(\241)p FM(1)1674 259 y FJ(v)1717 271
y FG(2)1765 259 y FI(\306)1845 202 y FM(\()p FI(\241)p
FM(1\))1994 172 y FG(2)p 1845 239 184 5 v 1916 316 a
FM(2)2053 259 y FI(\306)2132 202 y FM(1)p 2132 239 41
5 v 2132 316 a(2)1674 474 y FJ(v)1717 486 y FG(3)1765
474 y FI(\306)1845 418 y FM(\()p FI(\241)p FM(1\))1994
388 y FG(3)p 1845 455 184 5 v 1916 531 a FM(3)2053 474
y FI(\306)2132 418 y(\241)p FM(1)p 2132 455 96 5 v 2159
531 a(3)2251 474 y FI(\306)g(\241)2386 418 y FM(1)p 2386
455 41 5 v 2386 531 a(3)1674 690 y FJ(v)1717 702 y FG(4)1765
690 y FI(\306)1845 634 y FM(\()p FI(\241)p FM(1\))1994
603 y FG(4)p 1845 671 184 5 v 1916 747 a FM(4)2053 690
y FI(\306)2132 634 y FM(1)p 2132 671 41 5 v 2132 747
a(4)-38 897 y(Les)j(ter)q(mes)g(sont)g(alter)q(nativement)i(positifs)f
(et)f(n\351gatifs)o(.)g(On)f(dit)g(que)h(la)g(suite)g(est)g(alter)q
(n\351e)o(.)-246 929 y
SDict begin H.S end
 -246 929 a -246 929 a
SDict begin 12 H.A end
 -246 929
a -246 929 a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -246 929 a 0 TeXcolorgray -141 1022 a FM(3.)p
0 TeXcolorgray 43 w FJ(u)11 1034 y FG(0)61 1022 y FI(\306)c
FM(3)k(et)f(pour)h(tout)g FJ(n)h FI(2)14 b FF(N)31 b
FM(:)1795 1122 y FJ(u)1844 1134 y Fy(n)s FE(\305)p FG(1)1974
1122 y FI(\306)14 b FM(2)p FJ(u)2132 1134 y Fy(n)2187
1122 y FI(\241)c FM(1.)246 1586 y(On)17 b(pr)o(end)g
FJ(n)i FI(\306)14 b FM(0)32 b(:)89 1711 y FJ(u)138 1723
y FG(0)p FE(\305)p FG(1)260 1711 y FI(\306)14 b FM(2)p
FJ(u)418 1723 y FG(0)464 1711 y FI(\241)c FM(1)161 1836
y FJ(u)210 1848 y FG(1)260 1836 y FI(\306)k FM(2)c FI(\243)g
FM(3)g FI(\241)g FM(1)161 1960 y FJ(u)210 1972 y FG(1)260
1960 y FI(\306)k FM(5)p 0 TeXcolorgray 983 2020 9 700
v 0 TeXcolorgray 1312 1586 a(On)k(pr)o(end)f FJ(n)h FI(\306)c
FM(1)32 b(:)1155 1711 y FJ(u)1204 1723 y FG(1)p FE(\305)p
FG(1)1327 1711 y FI(\306)14 b FM(2)p FJ(u)1485 1723 y
FG(1)1531 1711 y FI(\241)c FM(1)1228 1836 y FJ(u)1277
1848 y FG(2)1327 1836 y FI(\306)k FM(2)c FI(\243)g FM(5)g
FI(\241)g FM(1)1228 1960 y FJ(u)1277 1972 y FG(2)1327
1960 y FI(\306)k FM(9)p 0 TeXcolorgray 2050 2020 V 0
TeXcolorgray 2379 1586 a(On)j(pr)o(end)g FJ(n)i FI(\306)14
b FM(2)32 b(:)2222 1711 y FJ(u)2271 1723 y FG(2)p FE(\305)p
FG(1)2393 1711 y FI(\306)15 b FM(2)p FJ(u)2552 1723 y
FG(2)2598 1711 y FI(\241)10 b FM(1)2295 1836 y FJ(u)2344
1848 y FG(3)2393 1836 y FI(\306)15 b FM(2)10 b FI(\243)g
FM(9)g FI(\241)g FM(1)2295 1960 y FJ(u)2344 1972 y FG(3)2393
1960 y FI(\306)15 b FM(17)p 0 TeXcolorgray 3116 2020
V 0 TeXcolorgray 3446 1616 a(On)i(pr)o(end)g FJ(n)i FI(\306)14
b FM(3)32 b(:)3289 1741 y FJ(u)3338 1753 y FG(3)p FE(\305)p
FG(1)3460 1741 y FI(\306)14 b FM(2)p FJ(u)3618 1753 y
FG(3)3665 1741 y FI(\241)c FM(1)3361 1865 y FJ(u)3410
1877 y FG(4)3460 1865 y FI(\306)k FM(2)c FI(\243)g FM(17)g
FI(\241)g FM(1)3361 1990 y FJ(u)3410 2002 y FG(4)3460
1990 y FI(\306)k FM(33)-246 2083 y
SDict begin H.S end
 -246 2083 a -246 2083
a
SDict begin 12 H.A end
 -246 2083 a -246 2083 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -246 2083 a 0 TeXcolorgray
-141 2196 a FM(4.)p 0 TeXcolorgray 45 w FJ(v)7 2208 y
FG(0)56 2196 y FI(\306)g(\241)p FM(1)k(et)h FJ(v)365
2208 y Fy(n)s FE(\305)p FG(1)495 2196 y FI(\306)d FJ(v)609
2208 y Fy(n)662 2196 y FI(\305)10 b FJ(n)168 b FM(pour)18
b(tout)g FJ(n)g FI(2)d FF(N)p FM(.)243 2617 y(On)i(pr)o(end)g
FJ(n)i FI(\306)14 b FM(0)32 b(:)93 2741 y FJ(v)136 2753
y FG(0)p FE(\305)p FG(1)257 2741 y FI(\306)17 b FJ(v)372
2753 y FG(0)416 2741 y FI(\305)10 b FM(0)166 2866 y FJ(v)209
2878 y FG(1)257 2866 y FI(\306)15 b(\241)p FM(1)10 b
FI(\305)g FM(0)166 2990 y FJ(v)209 3002 y FG(1)257 2990
y FI(\306)15 b(\241)p FM(1)p 0 TeXcolorgray 983 3050
9 700 v 0 TeXcolorgray 1310 2617 a(On)i(pr)o(end)g FJ(n)i
FI(\306)14 b FM(1)32 b(:)1160 2741 y FJ(v)1203 2753 y
FG(1)p FE(\305)p FG(1)1324 2741 y FI(\306)16 b FJ(v)1438
2753 y FG(1)1483 2741 y FI(\305)10 b FM(1)1232 2866 y
FJ(v)1275 2878 y FG(2)1324 2866 y FI(\306)k(\241)p FM(1)c
FI(\305)g FM(1)1232 2990 y FJ(v)1275 3002 y FG(2)1324
2990 y FI(\306)k FM(0)p 0 TeXcolorgray 2050 3050 V 0
TeXcolorgray 2377 2617 a(On)j(pr)o(end)g FJ(n)h FI(\306)d
FM(2)32 b(:)2226 2741 y FJ(v)2269 2753 y FG(2)p FE(\305)p
FG(1)2391 2741 y FI(\306)16 b FJ(v)2505 2753 y FG(2)2550
2741 y FI(\305)10 b FM(2)2299 2866 y FJ(v)2342 2878 y
FG(3)2391 2866 y FI(\306)k FM(0)c FI(\305)g FM(2)2299
2990 y FJ(v)2342 3002 y FG(3)2391 2990 y FI(\306)k FM(2)p
0 TeXcolorgray 3116 3050 V 0 TeXcolorgray 3443 2647 a(On)k(pr)o(end)f
FJ(n)h FI(\306)c FM(3)32 b(:)3293 2771 y FJ(v)3336 2783
y FG(3)p FE(\305)p FG(1)3458 2771 y FI(\306)16 b FJ(v)3572
2783 y FG(3)3617 2771 y FI(\305)10 b FM(3)3366 2896 y
FJ(v)3409 2908 y FG(4)3458 2896 y FI(\306)k FM(2)c FI(\305)g
FM(3)3366 3020 y FJ(v)3409 3032 y FG(4)3458 3020 y FI(\306)k
FM(5)-246 3126 y
SDict begin H.S end
 -246 3126 a -246 3126 a
SDict begin 12 H.A end
 -246 3126 a
-246 3126 a
SDict begin [/View [/XYZ H.V]/Dest (exo.23) cvn /DEST pdfmark end
 -246 3126 a -246 3113 a
SDict begin H.S end
 -246 3113 a -246
3113 a
SDict begin 12 H.A end
 -246 3113 a -246 3113 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -246 3113 a 0 TeXcolorgray
113 x FN(Ex)o(er)o(cice)g(23)p 0 TeXcolorgray 0 TeXcolorgray
146 w FM(1.)p 0 TeXcolorgray 43 w(P)n(our)20 b(diminuer)h(un)g(nombr)o
(e)f(de)g(8)h(\045,)g(il)g(faut)g(le)g(multiplier)i(par)d(0,92,)i(car)e
(100)i(\045)11 b FI(\241)g FM(8)21 b(\045)d FI(\306)f
FM(92)k(\045)c FI(\306)h FM(0,)8 b(92.)22 b(On)e(peut)i(donc)-38
3325 y(compl\351ter)d(le)f(sch\351ma)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1210 3539 2 2 v 1212 3540 128 4 v 1340
3539 2 2 v 1209 3640 4 100 v 1342 3640 V 1210 3643 2
2 v 1212 3644 128 4 v 1340 3643 2 2 v 1236 3615 a(10)p
1 0 0 TeXcolorrgb 1563 3486 a FE(\243)p FG(0,92)p 0 TeXcolorgray
1365 3539 4 4 v 1368 3538 V 1371 3536 V 1374 3535 V 1376
3534 V 1379 3532 V 1382 3531 V 1385 3530 V 1388 3528
V 1390 3527 V 1393 3526 V 1396 3525 V 1399 3523 V 1402
3522 V 1405 3521 V 1407 3520 V 1410 3519 V 1413 3518
V 1416 3516 V 1419 3515 V 1422 3514 V 1424 3513 V 1427
3512 V 1430 3511 V 1433 3510 V 1436 3509 V 1439 3508
V 1441 3507 V 1444 3506 V 1447 3505 V 1450 3504 V 1453
3503 V 1456 3502 V 1458 3501 V 1461 3500 V 1464 3499
V 1467 3499 V 1470 3498 V 1472 3497 V 1475 3496 V 1478
3495 V 1481 3494 V 1484 3494 V 1487 3493 V 1489 3492
V 1492 3491 V 1495 3491 V 1498 3490 V 1501 3489 V 1504
3489 V 1506 3488 V 1509 3487 V 1512 3487 V 1515 3486
V 1518 3485 V 1521 3485 V 1523 3484 V 1526 3484 V 1529
3483 V 1532 3482 V 1535 3482 V 1537 3481 V 1540 3481
V 1543 3480 V 1546 3480 V 1549 3480 V 1552 3479 V 1554
3479 V 1557 3478 V 1560 3478 V 1895 3531 a Fd(\()p Fc(\()p
1713 3478 V 1716 3478 V 1718 3479 V 1721 3479 V 1724
3480 V 1727 3480 V 1730 3480 V 1733 3481 V 1735 3481
V 1738 3482 V 1741 3482 V 1744 3483 V 1747 3484 V 1750
3484 V 1752 3485 V 1755 3485 V 1758 3486 V 1761 3487
V 1764 3487 V 1766 3488 V 1769 3489 V 1772 3489 V 1775
3490 V 1778 3491 V 1781 3491 V 1783 3492 V 1786 3493
V 1789 3494 V 1792 3494 V 1795 3495 V 1798 3496 V 1800
3497 V 1803 3498 V 1806 3499 V 1809 3499 V 1812 3500
V 1815 3501 V 1817 3502 V 1820 3503 V 1823 3504 V 1826
3505 V 1829 3506 V 1832 3507 V 1834 3508 V 1837 3509
V 1840 3510 V 1843 3511 V 1846 3512 V 1848 3513 V 1851
3514 V 1854 3515 V 1857 3516 V 1860 3518 V 1863 3519
V 1865 3520 V 1868 3521 V 1871 3522 V 1874 3523 V 1877
3525 V 1880 3526 V 1882 3527 V 1885 3528 V 1888 3530
V 1891 3531 V 1894 3532 V 1920 3534 2 2 v 1921 3535 156
4 v 2077 3534 2 2 v 1919 3645 4 111 v 2080 3645 V 1920
3648 2 2 v 1921 3649 156 4 v 2077 3648 2 2 v 1945 3610
a FM(9,)8 b(2)p 1 0 0 TeXcolorrgb 2314 3486 a FE(\243)p
FG(0,92)p 0 TeXcolorgray 2103 3536 4 4 v 2105 3535 V
2106 3534 V 2108 3534 V 2109 3533 V 2111 3532 V 2114
3531 V 2117 3530 V 2120 3528 V 2123 3527 V 2126 3526
V 2129 3525 V 2132 3523 V 2135 3522 V 2138 3521 V 2141
3520 V 2144 3519 V 2147 3518 V 2150 3516 V 2153 3515
V 2156 3514 V 2159 3513 V 2162 3512 V 2165 3511 V 2168
3510 V 2171 3509 V 2174 3508 V 2178 3507 V 2181 3506
V 2184 3505 V 2187 3504 V 2190 3503 V 2193 3502 V 2196
3501 V 2199 3500 V 2202 3499 V 2205 3499 V 2208 3498
V 2211 3497 V 2214 3496 V 2217 3495 V 2220 3494 V 2223
3494 V 2226 3493 V 2229 3492 V 2232 3491 V 2235 3491
V 2238 3490 V 2241 3489 V 2244 3489 V 2247 3488 V 2250
3487 V 2253 3487 V 2256 3486 V 2260 3485 V 2263 3485
V 2266 3484 V 2269 3484 V 2272 3483 V 2275 3482 V 2278
3482 V 2281 3481 V 2284 3481 V 2287 3480 V 2290 3480
V 2293 3480 V 2296 3479 V 2299 3479 V 2302 3478 V 2305
3478 V 2308 3477 V 2311 3477 V 2632 3517 a Fd(\))p Fc(\))p
2463 3477 V 2466 3477 V 2469 3478 V 2472 3478 V 2475
3479 V 2478 3479 V 2481 3480 V 2484 3480 V 2487 3480
V 2490 3481 V 2493 3481 V 2496 3482 V 2499 3482 V 2503
3483 V 2506 3484 V 2509 3484 V 2512 3485 V 2515 3485
V 2518 3486 V 2521 3487 V 2524 3487 V 2527 3488 V 2530
3489 V 2533 3489 V 2536 3490 V 2539 3491 V 2542 3491
V 2545 3492 V 2548 3493 V 2551 3494 V 2554 3494 V 2557
3495 V 2560 3496 V 2563 3497 V 2566 3498 V 2569 3499
V 2572 3499 V 2575 3500 V 2578 3501 V 2581 3502 V 2585
3503 V 2588 3504 V 2591 3505 V 2594 3506 V 2597 3507
V 2600 3508 V 2603 3509 V 2606 3510 V 2609 3511 V 2612
3512 V 2615 3513 V 2618 3514 V 2621 3515 V 2624 3516
V 2627 3518 V 2630 3519 V 2657 3534 2 2 v 2658 3535 237
4 v 2895 3534 2 2 v 2656 3645 4 111 v 2898 3645 V 2657
3648 2 2 v 2658 3649 237 4 v 2895 3648 2 2 v 2682 3610
a FM(8,)g(464)p 0 0 1 TeXcolorrgb 1238 3804 a FJ(v)1281
3816 y FG(0)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 1962 3804
a FJ(v)2005 3816 y FG(1)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
2740 3804 a FJ(v)2783 3816 y FG(2)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 1107 3973 a FM(A)n(u)17 b(d\351par)q(t)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1794 3971 a(A)o(pr\350s)g(1)h(jour)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 349 w(A)o(pr\350s)f(2)g(jours)p
0 TeXcolorgray -38 4131 a(C)o(onclusion)i(:)1548 4231
y FJ(v)1591 4243 y FG(0)1640 4231 y FI(\306)14 b FM(10)k(;)28
b FJ(v)1898 4243 y FG(1)1947 4231 y FI(\306)14 b FM(9,)8
b(2)18 b(;)28 b FJ(v)2233 4243 y FG(2)2282 4231 y FI(\306)14
b FM(8,)8 b(464.)-38 4432 y(La)17 b(suite)i(\()r FJ(v)319
4444 y Fy(n)362 4432 y FM(\))389 4444 y Fy(n)s FE(2)p
Fb(N)527 4432 y FM(est)f(g\351om\351tr)q(ique)h(de)e(r)o(aison)j
FJ(q)g FI(\306)14 b FM(0,)8 b(92.)-246 4464 y
SDict begin H.S end
 -246 4464
a -246 4464 a
SDict begin 12 H.A end
 -246 4464 a -246 4464 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -246 4464 a 0 TeXcolorgray
-141 4558 a FM(2.)p 0 TeXcolorgray 43 w(La)17 b(masse)i(d)n('iode)e
(131)i(apr\350s)f(10)g(jours)g(est)1436 4657 y FJ(v)1479
4669 y FG(10)1559 4657 y FI(\306)e FJ(v)1673 4669 y FG(0)1718
4657 y FI(\243)c FJ(q)1834 4623 y FG(10)1913 4657 y FI(\306)j
FM(10)10 b FI(\243)g FM(0,)e(92)2286 4623 y FG(10)2369
4657 y FI(\274)14 b FM(4,)8 b(3)18 b FL(\271)p FM(g.)-246
4719 y
SDict begin H.S end
 -246 4719 a -246 4719 a
SDict begin 12 H.A end
 -246 4719 a -246 4719
a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -246 4719 a 0 TeXcolorgray -141 4813 a FM(3.)p 0 TeXcolorgray
43 w(On)f(par)q(t)h(de)f(10)h FL(\271)p FM(g)f(d)n('iode)h(131,)h(donc)
f(il)g(s)m('agit)g(de)f(d\351ter)q(miner)h(\340)f(par)q(tir)g(de)h
(quand)f(il)h(en)g(r)o(ester)o(a)g(moins)h(de)e(5)h FL(\271)p
FM(g.)f(P)n(our)g(cela,)h(on)g(fait)g(un)-38 4913 y(tableau)g(de)f
(valeurs)h(avec)f(la)h(calculatr)q(ice)o(,)f(en)h(r)o(entr)o(ant)f(la)h
(for)q(mule)1809 5085 y FJ(Y)32 b FI(\306)14 b FM(10)c
FI(\244)g FM(0.92)2247 5050 y Fy(X)-38 5257 y FM(\(on)17
b(peut)i(aussi)f(utiliser)h(le)e(mode)h(suite)h(ou)e(le)h(mode)g
(tableur)-5 b(,)18 b(suivant)h(les)f(mod\350les\).)-38
5415 y(A)o(pr\350s)f(quelques)i(essais)p 0 0 1 TeXcolorrgb
720 5415 a
SDict begin H.S end
 720 5415 a -30 x FG(1)757 5415 y
SDict begin 12 H.L end
 757 5415
a 757 5415 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 757 5415 a 0 TeXcolorgray FM(,)e(on)h(obtient)g(:)p
0 TeXcolorgray -246 5481 1757 4 v -154 5557 a Fv(1)q(.)p
0 TeXcolorgray -76 5557 a
SDict begin H.S end
 -76 5557 a -76 5557 a
SDict begin H.R end
 -76 5557
a -76 5557 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -76 5557 a 0 TeXcolorgray Fv(On)c(ne)h(peut)g(pas)g
(savoir)f(en)g(d\351marr)o(ant)h(jusqu)n('\340)g(quelle)h(valeur)e(de)h
Fu(n)j Fv(il)d(faut)g(aller)7 b(;)15 b(il)g(faut)g(donc)f(fair)o(e)h
(des)g(essais)o(.)f(Lorsque)g(nous)h(conna\356trons)f(le)h(logarithme)g
(n\351p\351rien,)-246 5646 y(nous)f(pourrons)f(donner)g(une)h
(m\351thode)h(plus)f(ef\002cace)7 b(;)16 b(et)e(nous)f(pourrons)g
(m\352me)j(donner)d(une)h(formule)i(:)e(la)f(demi-vie)h(est)g
Ft(\241)2935 5620 y Fs(ln)7 b(2)p 2901 5631 149 4 v 2901
5673 a(ln)f(0,92)3059 5646 y Fv(.)p 0 TeXcolorgray 0
TeXcolorgray 1909 5895 a FM(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1704 -242
700 4 v 1704 -143 4 100 v 1775 -173 a FJ(n)p 1895 -143
V 181 w FM(8)p 2148 -143 V 212 w(9)p 2400 -143 V 1704
-139 700 4 v 1704 -40 4 100 v 1759 -70 a FJ(v)1802 -58
y Fy(n)p 1895 -40 V 1948 -70 a FM(5,)8 b(13)p 2148 -40
V 105 w(4,)g(72)p 2400 -40 V 1704 -36 700 4 v -38 137
a(C)o(onclusion)19 b(:)f(la)f(demi-vie)i(de)e(l)o('iode)h(131)h(est)f
(de)f(8)h(jours)g(et)g(quelques)o(.)-246 222 y
SDict begin H.S end
 -246 222
a -246 222 a
SDict begin 12 H.A end
 -246 222 a -246 222 a
SDict begin [/View [/XYZ H.V]/Dest (exo.24) cvn /DEST pdfmark end
 -246 222 a -246 241
a
SDict begin H.S end
 -246 241 a -246 241 a
SDict begin 12 H.A end
 -246 241 a -246 241 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -246 241
a 0 TeXcolorgray 95 x FN(Ex)o(er)o(cice)c(24)p 0 TeXcolorgray
0 TeXcolorgray 146 w FM(1.)p 0 TeXcolorgray 43 w(100)19
b(\045)10 b FI(\241)g FM(15)18 b(\045)c FI(\306)g FM(85)19
b(\045)14 b FI(\306)g FM(0,)8 b(85,)19 b(donc)e(pour)h(diminuer)h(un)e
(nombr)o(e)g(de)h(15)g(\045,)f(il)h(faut)g(le)g(multiplier)i(par)d
(0,85.)-38 451 y(Ainsi,)h(dans)f(le)h(sch\351ma)g(ci-dessous)o(,)h(l)o
('intensit\351)i(lumineuse)f(est-elle)f(multipli\351e)h(par)d(0,85)i
(\340)e(chaque)i(nouvelle)g(plaque)f(:)p 0 TeXcolorgray
0 TeXcolorgray 618 1917 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 345.90486 a add def
/d 0.0 a add neg def /h 166.50133 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 618 1917 a 832 1775 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.6 0.2 0  setrgbcolor  [ 42.67911 106.69777
149.37688 106.69777 106.69777 85.35822 0.0 85.35822  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.92 0.84 0.8  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.6 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.6 0.2 0  setrgbcolor  [ 42.67911 64.01866
149.37688 64.01866 106.69777 42.67911 0.0 42.67911  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.92 0.84 0.8  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.6 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.6 0.2 0  setrgbcolor  [ 42.67911 21.33955
149.37688 21.33955 106.69777 0.0 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.92 0.84 0.8  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.6 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.73248
76.91565 192.19046 76.91565   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
119.66118 191.83423 119.66118   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
33.81389 191.83423 34.1701   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
-8.57541 192.19046 -8.2192   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 832 1775 a
tx@Dict begin { -20.2725 109.89856 } PutCoor PutBegin  end
 832 1775 a 0.6 0.2 0
TeXcolorrgb 57 x FM(1)872 1808 y Fa(r)o(e)934 1832 y
FM(plaque)p 0 TeXcolorgray 832 1775 a
tx@Dict begin  PutEnd  end
 832 1775 a 832
1775 a
tx@Dict begin { -20.2725 67.21945 } PutCoor PutBegin  end
 832 1775 a 0.6 0.2 0 TeXcolorrgb 57 x FM(2)872
1808 y Fa(e)915 1832 y FM(plaque)p 0 TeXcolorgray 832
1775 a
tx@Dict begin  PutEnd  end
 832 1775 a 832 1775 a
tx@Dict begin { -20.2725 24.54034 } PutCoor PutBegin  end
 832 1775 a 0.6 0.2 0 TeXcolorrgb
57 x FM(3)872 1808 y Fa(e)915 1832 y FM(plaque)p 0 TeXcolorgray
832 1775 a
tx@Dict begin  PutEnd  end
 832 1775 a 832 1775 a
tx@Dict begin { 197.53381 123.76947 } PutCoor PutBegin  end
 832 1775 a 834 1832
a FJ(v)877 1844 y FG(0)926 1832 y FI(\306)c FM(12)k(lm)832
1775 y
tx@Dict begin  PutEnd  end
 832 1775 a 832 1775 a
tx@Dict begin { 197.39087 81.09036 } PutCoor PutBegin  end
 832 1775 a 834 1832 a FJ(v)877
1844 y FG(1)926 1832 y FI(\306)c FM(12)c FI(\243)g FM(0,)e(85)18
b FI(\306)c FM(10,)8 b(2)19 b(lm)832 1775 y
tx@Dict begin  PutEnd  end
 832 1775
a 832 1775 a
tx@Dict begin { 197.39087 38.41125 } PutCoor PutBegin  end
 832 1775 a 834 1832 a FJ(v)877 1844 y FG(2)926
1832 y FI(\306)14 b FM(10,)8 b(2)i FI(\243)g FM(0,)e(85)19
b FI(\306)14 b FM(8,)8 b(67)19 b(lm)832 1775 y
tx@Dict begin  PutEnd  end
 832 1775
a 832 1775 a
tx@Dict begin { 197.39087 -4.26784 } PutCoor PutBegin  end
 832 1775 a 834 1832 a FJ(v)877 1844 y FG(3)926
1832 y FI(\306)14 b FM(8,)8 b(67)i FI(\243)g FM(0,)e(85)19
b FI(\306)14 b FM(7,)8 b(3695)20 b(lm)832 1775 y
tx@Dict begin  PutEnd  end
 832
1775 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 96.02798 117.36754 96.02798
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 74.68843 117.36754 85.35822
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 117.36754 117.36754 106.69777
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
832 1775 a
tx@Dict begin { 32.00932 135.05759 } PutCoor PutBegin  end
 832 1775 a 0 0 1 0 TeXcolorcmyk 57 x FM(lumi\350r)o(e)p
0 TeXcolorgray 832 1775 a
tx@Dict begin  PutEnd  end
 832 1775 a 3490 1917 a
currentpoint initclip moveto
 3490
1917 a -38 2125 a FN(R)o(emarque)c(:)k FM(Le)h(lumen)h(est)e(une)h
(unit\351)g(de)f(mesur)o(e)h(du)f(\003ux)g(lumineux,)i(utilis\351e)g
(notamment)g(pour)f(indiquer)g(la)f(capacit\351)g(d)n('\351clair)o(e-)
-38 2224 y(ment)e(des)g(ampoules)h(\351lectr)q(iques)o(.)-246
2256 y
SDict begin H.S end
 -246 2256 a -246 2256 a
SDict begin 12 H.A end
 -246 2256 a -246 2256
a
SDict begin [/View [/XYZ H.V]/Dest (Item.60) cvn /DEST pdfmark end
 -246 2256 a 0 TeXcolorgray -141 2353 a FM(2.)p 0 TeXcolorgray
43 w(La)e(suite)i(\()r FJ(v)319 2365 y Fy(n)362 2353
y FM(\))389 2365 y Fy(n)s FE(2)p Fb(N)527 2353 y FM(est)f
(g\351om\351tr)q(ique)h(de)e(r)o(aison)j FJ(q)g FI(\306)14
b FM(0,)8 b(85,)19 b(donc)e(pour)h(tout)g FJ(n)h FI(2)14
b FF(N)31 b FM(:)1619 2536 y FJ(v)1662 2548 y Fy(n)1719
2536 y FI(\306)16 b FJ(v)1833 2548 y FG(0)1878 2536 y
FI(\243)c FJ(q)1994 2501 y Fy(n)2052 2536 y FI(\306)i
FM(12)c FI(\243)g FM(0,)e(85)2424 2501 y Fy(n)2470 2536
y FM(.)-246 2638 y
SDict begin H.S end
 -246 2638 a -246 2638 a
SDict begin 12 H.A end
 -246 2638
a -246 2638 a
SDict begin [/View [/XYZ H.V]/Dest (Item.61) cvn /DEST pdfmark end
 -246 2638 a 0 TeXcolorgray -141 2733 a
FM(3.)p 0 TeXcolorgray 43 w(C)o(omme)18 b(on)e(par)q(t)g(de)g(12)h(lm,)
g(il)g(s)m('agit)g(de)f(savoir)g(le)h(nombr)o(e)f(de)g(plaques)i
(n\351cessair)o(es)f(pour)g(que)g(l)o('intensit\351)i(lumineuse)g(soit)
e(inf\351r)q(ieur)o(e)-38 2833 y(\340)g(0,12)i(lm)f(\(puisque)h(12)10
b FI(\245)g FM(100)17 b FI(\306)d FM(0,)8 b(12\).)-38
2997 y(C)o(omme)19 b(dans)e(l)o('exer)o(cice)h(pr\351c\351dent,)h(on)e
(r)o(entr)o(e)g(la)g(for)q(mule)1809 3179 y FJ(Y)32 b
FI(\306)14 b FM(12)c FI(\244)g FM(0.85)2247 3145 y Fy(X)-38
3362 y FM(dans)17 b(le)h(mode)g(fonction)g(de)f(la)h(calculatr)q(ice)o
(,)f(puis)i(on)e(fait)h(des)g(essais)o(.)g(On)f(obtient)h(:)p
0 TeXcolorgray 0 TeXcolorgray 1704 3449 700 4 v 1704
3549 4 100 v 1775 3519 a FJ(n)p 1895 3549 V 160 w FM(28)p
2148 3549 V 173 w(29)p 2400 3549 V 1704 3552 700 4 v
1704 3652 4 100 v 1759 3622 a FJ(v)1802 3634 y Fy(n)p
1895 3652 V 1948 3622 a FM(0,)8 b(13)p 2148 3652 V 105
w(0,)g(11)p 2400 3652 V 1704 3655 700 4 v -38 3829 a(C)o(onclusion)19
b(:)f(il)f(faut)h(superposer)h(au)f(moins)g(29)g(plaques)h(pour)f(que)g
(l)o('intensit\351)i(lumineuse)g(soit)e(divis\351e)h(par)e(100.)p
0 TeXcolorgray 1909 5895 a(21)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
