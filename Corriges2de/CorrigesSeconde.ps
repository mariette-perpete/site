%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesSeconde.dvi
%%CreationDate: Fri Jan 24 18:39:57 2025
%%Pages: 67
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Symbols wasy10
%%+ Fourier-Math-Letters-Italic LINE10 CMSY10 Utopia-Italic
%%+ Fourier-Math-Cal Fourier-Math-Extension fourier-orns
%%+ Fourier-Math-Letters Fourier-Alternate-Roman Fourier-Math-BlackBoard
%%+ XYATIP-Medium XYBTIP-Medium
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesSeconde.ps
%+ CorrigesSeconde.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.01.24:1939
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: XYBTIP-Medium
%!PS-AdobeFont-1.0: XYBTIP-Medium 001.389
%%Title: XYBTIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:32 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYBTIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYBTIP) readonly def
/FamilyName (XYBTIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C68B75B8C6A2
18BEDF073A57F5212819DB38E30D9BA47521ABEBEAF35446353D5BFBD13F0FF3
5104C7E7B27F68240654E12DB59447C153C755A51AC2D8A60523ACBB0BBACF9A
605174A4E65D6320DB4B0B413999F0F132D46F188C11F9F61722C49616A2AA90
84ED72650D8EE114E75CDF80D98B0F86081110D9220DCEECAAD9E18B33AFB8C0
C81E5B7BEFD8BD70FB1666E4B0E60D68C76ABB487E9DF06F8C0854B04230C3A1
871520619EF605B65CD8EBCD33ED99BFD9AE77A5EF384F862E7F74302C0CD0B5
3D0CD2785C3898A10E23575E442E7F4E27F18C2C3EF3335AFBDCECFC630C93D2
42DB0D82F5E710E8B72F7A2C7A334BC02F848C8C796EB9B19E98407FFEC9DB8E
546FF05F254C41D701ACCD0EF56387CED4F569385655BBDC7794C5C087B2B26A
FDB1B5E75BACF169128194A648C42049D69A59FEF5447DE9D8D4DBE27460F06E
683DBC80CE204B1AB46B9CABA4D166D9721ADCC309AA5997B95BB0BC623F91A3
15024E6F218991959D281E104E7C93298D654D337CCEE6F26760A0DE5B7481B7
0C1E686727C7EF358E139EF8E33EFD761BD63CE9A7EFC7947291853C3AD8B9DB
42F1E81C42B108CF2879B9C5A99C82169FCEC9797911D43EE78A66B7BBDED558
FF3381F35658D25C3FCB9C4FF8D41AA291064E9EFDD63F79701AD21387D8F889
AA4D4BE9A7B77CCEFC6B5B563D78A08C52BA94D852C2993D9235708FAFE02144
E77CDB6F08D2E3773FD8B7D529F4B45382F3E6E6B701E1BA31FBF29C71674E10
94242E4486024D3F85ED159ABD20D9DF06296084EEFD45273DC14FF5F14377D7
5506A96D881AD3F6D51DD868484A5DE3B0D8C18390B2A2FC7F7449D981043EB8
B55EE334C43027A8AC3EAA510FCE1ED64A526389E89CFAE05F5A2B58E75219F5
3D4C0F94D910D3FADFBC94FA0F6F6C1699E3AEDD054459ED00FE97E5A72BE566
E4FF6B88AF494778DAACB593FAF4553EC151BB08198F96176AC56CBB81F28D62
D5998345F5FB6925D7A396C5E4E64044BC8689C68CE8C2577F63C5B91F5A0393
B7CA7B25B7A498BE3DD34E3EB948F01DCD769910E25CD65742F1DCADB6B31F37
3446E592F40281EE031ABFBC5101E71DE1B64EB7A83351A8840857EE1EE6AADD
CD9B333FB4074BACEEC7DCA2712971322DD656AA0D011FA6608DA7B3BD14A8EA
0FFCCCBB84F0F4BFB34F420849223DAD3208A6E3D851EDE7C91AE2F741956DFC
0E8A156EDA8642BE46BA4509A06432701D827D69B06D010B7C0F6257666398B5
B47295A0270D264BF10D1775FA9466A3E130B7BD969EB2147C869ECEE0F3A24A
CB80496132EBD5E57057E93EC8F2AEA2A67B2230D6166DD8676541C7A51608E8
BDE9C897A9825CA4884E0C99B93BBFEDAA72A174C6AF5FC9E0AA9D47C52B240F
5A5C00319919F830EFCBFEA9796E75DF03C8985AA893CBCFAE913EB94F2CB9AD
FA850B151730D3DB54F35020C8639283244CED4F55DE66F963A34F6B80C6EC90
95A4F3C65ABD95700BB9B5BDFEEA37985716DF64C7C583B471E801F61388ABF4
35FC840B47561453FC96688AC8712216B934898936419D857CDF040DB72BE6B0
E5AD10B982536F178DEB5E90C0B90985EE96AE3645AACF18989DA6F4CDDBF00F
6BE3B8C6F7AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYATIP-Medium
%!PS-AdobeFont-1.0: XYATIP-Medium 001.389
%%Title: XYATIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:27 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYATIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYATIP) readonly def
/FamilyName (XYATIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C1848C9E83EB
8BC4A503624130F2632568342D516987E84088FEC7D823F0719B19EAC26EF619
6C4DEA4F593450E106FD3234BE1307FB0D93D305C419CAED51F295549FDBA441
5EA8D965CFF4CC48C0567333129B1781CDD7473FE9F231006E32433B94B6E4EE
7A6B010DE67402C3861DB9FFC57EFC00625BB337DCA4D54887DDC159E071059C
795D614DC19F65DAB6AA9F3C1649BD0AA3F1A941820229AED5887D23EFC80D9F
7CE6C0A60CB4E3B5DCFF3671C7722C2E115303C0B37028E584F11A091773C86F
DC03F457EC33A987A275963D9316AF4302101DC71ABC50904C23B5540F5EB3E4
4659FEBFDA7118DEA4F5653BBE4E09A43F8D6BB9AAB31D72EF202E1990E00763
63E5FC804136E6500EA8E454C1B45ABE01C39F83B614F3665FD18A53F2A8D88C
5DC2703EF4A5E6BD6CD87BA32F6ABCB96A75D769B74E0E0361FE54966AA0FA78
456937DFFFDA2ED807FF3CEEBA4D8635BC8BB3C9826C42D5A61AFB527E2346FB
9A0DEB66787284C96B6BD54110ABEDC6F5CB25496F2D7D7FF103602DBC2134A6
AD96357B2ED001DD02FB7DB2E80CDEC6F52F15548C2AB8430AC8907D7B3A9C9F
0B13907073BA09B096642F3E4CCC309B07D8EFE86A2949F304B999960E621450
C64D3DFBCFDE020F7511AD9145E0762B75EAE1ECC42E60CA8E05E9B0B9A98473
8B4877E4A4499426BED9C6B86120F28ABC64A2C0F0B9F8348946364AD469E75C
3923B20AA27F071081416DB3F0F9C09137FFB6617F2FC2BB60E3AB70FBF4B6FB
BD728B866307DCA478EC288F33E6EED97FF91EA2A00DA14002E454BEFE44D396
C0F4CACD46D0025426B350AAA724D57D88736C8B93AFA3239BF83BB80BF5313B
4379FA79838B1692BB1FAC5C92304EE94602DF502EBFB6F63BE539625728A3EC
A50089F47D4F2257C77964D80038E775C40649EB518F5BECFC17E5EA364BF4DC
BEFF085339ABED0C2061073EE7EAE54781D2A4323AD302D01D054076F16A9B58
31652BCDFA8F68C17A6D16698C12B962C0D329E53C98A03E179E2C41CD2C8994
C7D575B409C21C48ACA5E8E13E58A1834D92B0D6E99795BA4A3B128E61D9DB37
EECE37072DDD0B86D62653CB2FD5D80E3649C1EC9BE099B23891FF98236CCB69
1F5F18DF6069DCAFDEFA5A7DA2BE4B7D70A269D83126F2E1344E847ABE0DA4FB
5E69856C2EA772CDC779F1B4D852FE6CCF8D804FBA6879AC676B00EE7AC2B6BE
F84989F028C1C062A0685A17AFC4617BA8123DC0CE699FD20193996DE95CC0DD
98B422D3E73194AF40FB47BB62F22AE0A489C4365070121950CC32F6BE9724E8
ECA67BCDD6EFF9AB090DDEC0A47B90E8B47853529D78261A9A2ABAA7D6002135
B5D00421F4A60CF7540EBFF105DE7547D14E007B8DDECBCB240D51922EBD08F8
983C99274C93C8419E5D2EBCCD21C0C9FFFCD026E5956DE067FADBCBC1346F17
3D4417E234C0677CD598F38020C378EBC41F6DF9E5B5ECC6797BCF222B8C2701
DCAB08E9F3A3DCF0327084405B3EA9477F5C258DFA9DC02BA42FD2A3DFD2B228
ACD93C0E22B8CFF87AE22619BD89E90D6FB6BA06A8DF1E2E62992412C7E8FC35
D853375FE6D961
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 54 /negationslash put
dup 63 /perpendicular put
dup 91 /union put
dup 92 /intersection put
dup 106 /bar put
dup 112 /radicallow put
dup 124 /club put
dup 125 /diamond put
dup 126 /heart put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 165 /divide put
dup 177 /openbullet put
dup 183 /lessequal put
dup 184 /greaterequal put
dup 188 /approxequal put
dup 189 /propersubset put
dup 196 /spade put
dup 197 /plus put
dup 198 /equal put
dup 199 /less put
dup 200 /greater put
dup 221 /notelement put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735F731DA07EF3D6E818628
AF05166460DA5B83052A083336C23DE3F4916E3E60E10509910166E063832CE3
29E5DF2FDFD0AA1DC9F1C99A95FC477BF7F113B2CF4626600B1B5DFF712EB302
AFCB86EEF4DD29EA456833CF29BC0C5CC42C0BB09735A0A83143A0560B03DF25
B27B0B383BD641B85E8F6790F6ACFA6A03C77D60425F8B515C48893EE05FFD60
CB40D1B9185FCF7D27FAE0616B15007FBA17D23DBE9347515CC3A932A96246E1
85C477A9D6665D4F5D8F374CF4C0F4CDE76C57C8F7BD4A66071AF94604FBA047
80C65D0357949E03600E099BFE0ECAEBC6E6A636BCFEFC0A9035532476354B49
DFC61218068C10E8103BFF464394C6A73A86807D46452EFE438C9A865EBF1503
5AAAA4420E107AFBA72B17FC32B8F7B5DA3993F16D6B9BD7313A680ABAEA9CB3
21253C5DC4D9B4C45144C745684CA62EBDAD3C2D1BD15DD9F87A40B72A32A752
793936FE2F0603AC1F04F9E9122D69C7AC5043D10A07C54187EA50884D2CEE7F
A0D727167F40926AFEABE21EB0761A21CCE1527ABD535F95D1398A1C72650373
3AEECEAF0443F680CFA1E1E7DD2D7DA7942D4770CD48AF98501C8CABC4D17C3B
E8624E9225534683ECE46B6833C924A2BA29EF28814A1D46C971DD02FF2F0894
F336E49BE3B68C59D8264E88ABB4C4FC814ABE74671291261959290C56CEDD6B
1BEEC4FD30F1082CF586E14295981C8878EE7144F6216432B3577A8AAC4D2C44
78D70578B59A18E3FB7270CA815ABA7125E8E5A7B93ACA8CCFC51D10F8858952
F577153AB774B6C85AE3B8D7BAD52E885A6FB89484BBFB4B559069DA47799DF8
A3FE054A1D2FA26037947571282C01370A9618CFA929848391F11B7883DD9721
6E582DC2654A01BFBB77EC11723D27720FF63E0C2E6F5C714D047CBFEE6F07C1
F3AE81E12614AD8E33FA4FF16297F0962C8D45D7267993DD36192217746C29E5
A00EFBAC2A3906D80BCBDEE72646546A3ED663680070FF10968E288D0EE33710
A724BF57557C9DD19E41224B82648BD77C1F243F58161A98DA300FC7077B9015
6F232BBD19B0AD4FBC8F4E56E58F3FA3A738FAAF4667C565FC7AEBDA4411A006
458A63F9D498E7521D741818569B17B359D5DD03A3DC791DA96E354BD210C4C3
C661E5BB77C17023DD493A4E2467EE4B74CB5204F0CDC7CBC939D9C1D5F28CDC
CA4A93A21256A15D87235C2EB696EE7D9DA1CDB538663B7BEF8F807E7CE71173
DBEC359EC620F9C763646D0EE65D57B7670028317C5ECA0E06C4DEF35614CB1A
1BE5D67A490D4642385CCF7A6FFE833E80FDDB925170BC80E5FA70B1E45A3B1D
EA2F2CA2EE4555F2632F4E80204E43BD9CF2483352F8C80ABB821068EB815BB3
EB6C070912848149DEE9F7A21CDEEE5443B4D7C014BEE1CFDF9D78DF46005400
191AD9DBA79F43EF28B9B78DB85E1D60C905E4E7DF7FCD3E4A03695A1BE14A8E
FDA1703A4B2E9F49EE67119F100E61AD6D005DF87B229DA85F48A1A27437D2B2
9E8ED24B80DC5FF5BEC3A04B1D6CA47E662BFF319A1EB8CBF60D76243E26790F
EC7C4ADF05DFA9C941BCEB3DAC686A431DE86611EADEB850EDE9B80197CC9E7A
3BA9397E1222617639B0F27B1318F648254D1CB7E826AA3C7E8A55D02B47A84E
704F88FF2ADFE46AB0A20D060604DA10DB9CC5F0AA4002956B9919460B8947E8
DBABFB452696ED0A9F7B79A50136DED3208DC61BE10B7E3AA2D8E23529EAC237
8589191FD688D6296AE75AD8CABBF95CC5A1EA30359A16751ACC864FF3B7DB7A
4FC5B2F6CAAB9ED145DE02A82FD8EDD86AFBC6C51EA88FBF8F99C1DAC63A7B3C
5941D682D3353D207E78F30F50AE55BA41483CB48C9C7C6047F80BB5C3821D1D
404C2606E022C45DD34CEEFFAD5B8D881E616CB2A7F01C2006C2079235DF0B0B
5645DA60E5A44D3B6A0E34047D61829E6DD22AAD1CF87537994929114544C1D9
CC60C80CE62F7DFF8F0A8B4674BF808AFFF719DE34FC5CB538A6C6E44AD4729B
17460BA1654521DC222716DB961132150F5F328E9C0F2D499A441426096ADC05
A6A7316AF663C3E9A4BD5F6D853394E6473352460976D9AD5EA22D000E511E93
4522F82782D96B2D1D1D12C6F9A2D5D7F77FF7A3961202CA79AECDB028BF02E1
B6B5B9C6CF448F9B3F9DD39F34BB59EC13C7B7983F52D1A4A3130C5211B8E57B
2FEA95465EDBCCB415ECB28683F9104BF29F427274228E443A8D82EF0537A9D0
B635C7D5E1E9F44B59F896778C2D98C4499D6BC252ECA65CD698D0B50FA87347
BC93958DA4825F29EEBF9F862684CB64269F300E0B01C12F152778F9861A1BAD
6F64C1CA14AB9F3A8082257C2E637CA1725E0DCB751E9E5AA7E5A1011747BD80
A9FDCB564BAF79C214EE33F5A85AB4943E572212CCEEA9C3DD80B98F8FF9BF25
460BB5D44B0723AA1747B12088F4972348BAB6E39A24BF0B40F7107B6F9C6797
871254D28346F1FDDFB67A7ECA2005C25704C857E471EA548C33277F949B69AC
E13471ED19EF6C5FA1AEEA0B1A66AE104F782FDFD6F7A1B4625680EBA2674D92
952BE9274B1778614D0657F004A217D9D44D56AFD3EAF8C72EB7718A9EA87E9E
0B2035C1397F86C4DC9465A16FD2B48E57585BD3EF1BB8EB7144190D8CC0CCD2
60EA888BD7EB28877581258E947309AB3B2894DC0B340829FF197C1618581254
1E8C8C2FBDDE31A130C956CBBB20650F2A740685ED68856E2F250358C8F9412D
9DF2E57BF3423F446880C25E1DE771BE548103334ADDAFE6EEC4B2A1FB308064
4FC89F4F30B73AC4EEBB0D9EE939503E537099BB633247EA5E7E5ED20E04F6E4
2A4C947405B65D5D959D40E04BBE957D6021B11D4C04549BD127B46D7BAFEEB6
61FFC51A47AAF4784A9DEB12C0846A33D13BD979AA455A9B3D9A7CD7BF633473
53E259FA6F3976E0AA85902DB775BDA8288C55260181768394E15922F473B971
9BCAEB47208E2EB6C4E1CCB96CA77CDC6F67A5ED52C0741D2F62A453E1972D38
478B6977FBE5F4E148A90D2B4763EE1C204100AA280D668F3825DEAA07E888DA
6EF438FB5F7697D41F41DC2A9A052E8143691A10148479340B9D3127194AAC5A
503118066EF4965C69B575BE023078769D8393395FB3870F36AA1F5BC10314ED
200E61A68BF8FCAAF83C15C7F23CD3ED0F16074296A806ECED7644EE9F85D834
3F92965B574C1DA5136C3F1AC8E0D1DC81ADFD5CC718F4507807076D5A9CD9C1
DFCEFBCCE0C74DD4200D5E6E64367BE0099A0A3124AD1284E21C9099EAEE5F7F
AB7B304B57197DBE31576F217FE6E4E312612A29D7B52C391C8220FD6AEC70FC
F8F37A85502721B0004044D04A304B2BCCE65CA8B5857FAA27B311B4C6030FB4
D906AA1E9F0C77A14A199CFE04D795D3BFE940EB0C97719A6D2210C54B3887CF
30A14B138744C0E885202B0E682BBA2AEB0B2FCF9D2C413F027661E1A37EA83D
D71C5821170F1D9B56D6160B4A43F58FA2EF9E169DB85209A1D887E0E95E84CB
74E7A750D1312C95178CF65F2178664827348E9211D155D1C8248458743A1DFF
1F7E394DF6CC58564A58BAA310D5339C480FDDB06EA06F6A0B472C952AA5C995
B7D191E168102ACB0ACFB23874865E3608A1CD9F2D71730C2F4F73A127A5C3DD
61BBCA86BD93C00019A5DB016D4092C14E70EE8089E43646B8D6B3BDABFC56B5
E8D1A37F73439D5881CF9CC44F5FE5945B61DD6D559E8188A37651613A98641D
47DDEB0CD717A743BFDA4CF291E1C188C442194F99D2AC3BF7FA208D3AD31BBD
3A282D991CAE003A6FDE823E90F5CFE4E8220C98B08BA8F1F5012B9FFA567677
F5F7422B9B93584794AC409C6AF3B5EB244F1589A506F36EA57001B21665037F
0EE5269C6EBC715DDCBBD963986C0F7738913297B04C72E83212FF4C17F458DB
2A1D30FE9A2FDCEED2A92606EC61FD353F8092F2F3BD54BA3A870801A7299596
5D643DEF6E13F8AD958F580E058E0A36D835AB72907C375A11B281FFB546BC9D
5F8BA0FB2C720452DBE5766C7F0F7EA5C2532E88410A341B0EC650E03DCCBECA
23FA53114859D0C6E39227AD4E36F63BAB8F3C8849BA41F7FC493320E57063D9
4BA48AB96E10D749219009E6790D59CDB27CE7028D9AD0D273EB6C6FC7F5598A
8B1BD21AB970833040CC3BEDF47285310A3B139AAE219F5C26179527BB905F7F
D7C3FFEEE168D2EAAC7E6E6C4352BA4847B576EE3ECE980B58AEEA45A9D7BDEC
E1A11C2454ADCA3ED328461E6FC1A5B3662F41DFCD3198F5F534711DC2203355
F65FE194FCF5B55296B747DF3BBA2A6E32E45E245EA81A8E0363C03DB379D1DA
8B86596C9FBFFB64139AABCC41EC9219A8EA2EBCCDC3B501308664C393623115
71AF47A8C0D07DB92FD5DE5A6710C991D1F292C239E1D8256F20DD1182EB451D
1057B39A5C7C76B0CFDEE72A372645330D4C0A25DE4F2C483171B7EBFC09C746
C3268F169075F3A67C1771E6B51FAA4C0AAD0925DC6FEA853F5F4AA3EA265EFC
338325E8BF7BC1996FB79CDB67EFFF4A02D8EE2616047C03E24B7A6116350EA6
E7055D41238AD2C489894FF146E83D2DB48AAB64AAAE64A8D923B1C210A07E68
DFE46188F0DDBB5BDFE9A4DDDAE28341F6D194C29670ABF6D9187CADF56A2025
0D8074A8E060905143E786F99E5F790F92
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B3552F3E5FB02EC27C94DEC59320A85D8638
839E0B4A706FEE1C919E60BD887421EBA20B332314919A7DCE09D6BC9AFE8A87
AABC30C4C8E71760B8D8BFF54A92D01D56633B98C875EAE44A8E1A57FA8C4B4A
78D6DAEF11DA248A1939C377F5801511B68EC34FE531B3D50F27D872796BC5B1
A6EE6CC8E4E57B32B8C2F4F1BA4FFBBF8252F09AECDAC3A7B0BF0FB64D740B7B
50FF957F2273D5C09C58253C43025C9154DDD78F948802E42446990E7729AEFF
7D3CC6B82649FD0C5CDB962E1361E8214CF04A4EC5AD20AC8F839CF46EB81D42
1D4311FF5FD9870C55B7ABAF82D8258EF286711122D40754EABDA3DABC4A4112
5B96B6B3131B4628CAE101E23386B75C963C32FBA63F651E45935442632D98E8
B1AEB889EF60C9F55ACAF15FD5AE2F8B974CDC5E9DB503F55F996D5334E64D21
558D0F2DA2F59423E14F44F36C9488AAC8441E39BC750EFDD790E1B295CA1556
681A3392E068420AAC338D4EB649B111617DFE02C39C261AB637A70E8304AAE0
FAEDDD47561E34A14B48F814D95191673BE8DC07A82FB608825A86B271820081
56C6E43B32B265307C1204C26A556A06CC4B9458B740CA4963ED0E0F6645FEB8
BC6E3B3944DE431FA1A5A27A7B2A436D8BB2BBBE387D6829BED50C44D1211193
BA34676BA9A2C464C18C3AFCB9549357583FE31FC989EF8EAE3D39AEFBE6D032
C78ED64E8A5DA4382727FA799F6F6E4F988BE448CF9D0356BA59728D15009514
1EBE6DFE6FD88069BAC5574FD7AB43A145272246958BB7BE6685FF502BBD2D45
6324EA3A150147DF3533994F4DD50DE66EDC3471A415F6FD49960832EE93E99D
5C075DA951F9A78B0EFB0E4D7D5CEE7EC4F18856BB7AD4C1F23240164EF274DA
815E392714A07ACD1FFC9CD8C3AFEDE07789D4A91453268100D58F847D4F55BE
DF24259876AA179CB516D72CB4D8C350B790FAC2A76FE01753C0049C780A953D
B8F08292E36DC445A8B8D45DCD339E17E1AE85DD1739BE8DE243F6AFF847711E
25F7040BE2222343DD470D1BFD1C6F74C02CD379D654E7D7D163040AD40BB06A
1276140EA8C12755CF3D485963E33797676042C995A6F86576A09791A62DB56E
0B5ADB15A44F64E454FAE82FDCCB55E3DF1189D5C2E3684FB04DCC97A2CC5466
6A8FD166F571A973240F5A783EBDA8E233BE2C3B850B9F45C5E59E09A4F10AB8
72CFC148466DB776ABF28820AC9379FF1891D6B8508596BE415FA2D308CFC6BA
E96B758F4FF032A48B18E000B95F2B145E918D211B00E3B1651412307AF69D6A
1860BD18B72D1133795C803EBC0384077613547113D0C7A63F906E186A922E27
57402F957086DF963768B5EEC2E92F15A30E96F042623E7F50FE027FC2DD76B5
23E587A4AB67DAD3BA12612DD54F2AE30D83B66A3C9174E83B336D8D742FDE62
94105AF66B58D08C3E1759103937E7F24A5CDBCF4BB43EB0D3868D6373B736D1
A0CDB40DC0E9B11D9A7F53EC44D98011ED75D1C3BFE107E40DF15E911DDF0C56
D2B90C302D3D69325E017D4422E58651C0C73431BF133C1E64A8E0DB8FCA0A34
4E514CD829E3905EFCB3C4A56B944F71749F4DC18A88E849D946B75B90A7D202
E2A15610BF00F69901B645EE3FF46B759BEDED9BDCF6CBE68FEF538BA243B161
EBAF2C1E9561A9C0B6EB7D3359B318431E422D8DAE5A86550BE1A605BCFFF25D
F66DDC7933F81A332B982DB20322885511F968716EEC919FF02F87DA73AA7AC5
64F47114A9B084D603D45E52B1E53062D7F42D769D2141173E61056836D677DE
B45DD711488B3ECFB6B0638AB9D447BDD2DF098ACDD8819EB340142FA813092C
2D6371041F609C62B933EB55FF4A446F702BD89C6F57DE1C436DCD67B8D44B70
1417AD40310D2BB60FF0F2463780D43A69A5AF81CF60A9CBF3903856737C50BF
00F967D3D1D99C7A085B142A3B2473772F14D04178A29B593E676013953DF554
3FA340D8DCDB81EBD8F19D7EC702E6D681D0FE6D15BC04ECC8D99F11AC22ACE4
6B4C76BA975F6E9A6F6BFC6D5FB57B5400D77C7F7FC3C7CAA6173D5B8D8EEB7C
04368C47428E55261D1E53B8FB06F50C382C77DD61C6E52C99EDA8946B78E058
D2503D4087473D3315096C0FF7A9B108AB312AABAF05171FD8CCF17D84AB3E85
224CCFBCE9CC07E269B3D95FA0545C3C47AC75EB56F4F5D05BAE05DABD48E680
FA52C8A337EC7644E819C508FC90EF8B69BE5AA94ACD159C40455A272B187A91
07778C2256DD39484B9B47E512E4D4B3C22B958724FB3148A2C38D73A3760FE2
22E0D025E59B029C0658AFA4D3281F2FDACE2E6E8CB1AC3EA058A07D235A39F0
BB4E862C825E88046F4AF8AEA967069705A2E6BF3AAE379412F0BB8AE64EA369
D49FA7043E7FE4B2539995283045F567FB2E3660D1034D72FC882DA76DDBFD43
EE0F5400168C5622A46FE7C3F562499A4022C1D3BEB3ACDDE4BEB5560A05899D
4D1DA428631192A00498F1B6F0863ACA4DB832CD33E7EBA0AE1E9BB5F520B749
E8FE9FFC97A8C5C173714D348C66D7D12CE67C234E4195CDC501AF422A313B75
A9E1106658A0D9E977F91D1E9C2AAE6AD9C4CFCDACF0976BD6797A198BACD50B
A20CE0499A148236B55033A113C9F362473C7253F0693AC1A9A5200B0FE486B1
8A5FACFAFFB4C6461F5F8BC6D78AE5FDEE28D414597073D75C6C2F767F362057
5103917C1A6E4156C138704DEDAD33C3D91F7585B6508639FC3EA9376B96D802
1DAA983F832CBFE8815F3F79A67A502E25ED2830E604C523394EC8C1DAE294DA
2DAEAF2E38225D405D3C311250300149E9583B8C24295EE27790EAAD13ACD5A8
95C0C6A856666973F46EE66DE1D172846D67F367240C6370EC2019A802A795C0
6E2EAE8E8FD081329ED4F54674A57D0A2F31A10EACE6BF21F41AA3D7E7FF52F1
5D96071CC77E4AB72B0FC4D93ECA41D6C531B2614FFBBD033BCC4063D04D679E
58F69ABF609C3299F833CA628B59FCEB48AD7369DDA16340D0A699E733AA64B1
EF741A45714AC8DEECAB7FEF2C6488E4EBD5CF5699928883C2A0F1C09F8EBC51
0D5D7C3D570D65C6893C861DD1E972CEA38E83F048499386B9DF508D2824EE9B
C178C413E7E0C3A90864CA602314458347AC2DBD011A9172AE47FE9C116F3BB4
9E9EE7BAF271B1661980677D4365D5C807298D6011A033E13787525F52209942
E437166EB8BA57EF077B107CA77790C6E7A6F6A65D7138889833A95241A70538
B4639D720759077F1E6B3B823E24A85D002F7FD36B3F009DC844BE50420402F9
078C11DB8A7DB17E637F825A0759523FD375B6AC3FAB3804FB5AC2CCC2940CF7
2481744CAF831C82CAD09B42F93E4AD273E405E008E480C8D43C6C3FF9FFFE1E
4FE4CFB1850271CA6B375518B7FC1EC0418A98448D6D468B0A7A0242806C81FD
9E68A63A401204C4DA6286A034036F4A7D1380131DA6D999E43A265BA3441FE4
064E667337DAC7D0FE91562E0B0992B4506498E6A863ECBC0C1D27E364F99869
82C409DFB0674CFBF852AC8639C99D1BACBEC8DBDD954DCC86F8D62C40F32C78
84E7BD4D38458A51939E4533E3E7DC9272413DB3120669F0349D690162B7373C
C63FE5A3D9ECB5F6E4E69D783367D7076706152E439CCFB5C48E6223EB09921F
1BB15AAA5EA0AF78EA13DEFC6FD1B1ECBD7357180CA4D384D55A058A451D7BCB
8B79173CC456CD0FD77BDA5596F650347A212072BE9AE68C4BB7F0BB648E9C71
66ABF120ED282E488E45144D0A379EAD19294C7B4CF0AF6ADCEEE457ACCBB484
024C679CFE4EDC6CDFB7D0DC3B4BD84A9A773A4989A4937B413A1EC35E7C020B
B15C8950C408C471AD74BB316933F5BDC2212298B7E2A2572AB9B68A26BE8B6D
F238226DCBF4FEA9D490254D00EED16A9005441FFB4FDADC94649D2E809ABCE9
0E7F32BEF4533C95EF3EACB71B37C37078920FEB9481BD23F5F3A4955E34F389
AF9A7AEE4C04C0D129E23449F3C0776D8058094CAAF4B6186F93B2C22A2B6A60
33F9EB789C58C1A257FFB9B96D2AB7F85E9EC7AAAB247327BF2FFA37633E0122
B9B091522EBB4139C440B183119AA64FB685AC446737AE258DCA988B41A1A00B
59F3857BFBB4F40A86D6FD1CE47B39596FFB19F76104CABCE8F9434DEF498863
65F081ED68403D1C41B3C8C49BADC451F98C9B5AC1C10EE4059A8CF7A31FB912
0EAF9AA043DC9DC3A1921560BEF1626FE41C7E04B2BEE93023D2F24F53FCF366
CF4A67747953E4944FB43CDFF88ED1185EB72C4FBD7311D09CA0699E46DE6B38
8A9BB1EE9E0C7238C5C93D0FEEC724C99D07D16C3B6E820730CA9ACE88B51E40
676125C5C4512B3A1FE9844FC3B1E58FB5D156DDB355D66FC9A93F4527426997
D63F46B4F0D4C2D2E50D32464FA36ADCD6A9A658BC15646C69020CDAB120A21E
23DB7E05CC405D523BD805ABB72AA3FB84C5EDE3D7BFFEF7E2DC5FACEF493B08
BB3651ECB1DB1193B36E3217336A623156C97F8C129AE7360E6B2860BA5211AF
692F139FA107EA9167B61F9B85C5EA8F2B890F83CC6DFCD0306BEFA68288E04A
E7F621AC4B2C8E728D3BD1A73515B18B60F5E19FD8BB6200F071FB876877DF1F
42DDC08F7A94C9294245EC5F9CA5F08C00E06E0195E9C49D25E46C2E24AB3C9C
29062266C1FE4458F3F4707EB41ED1D5EF68BF0FE0D02980AEFD664CA4151688
1029B4348ED0820E60B1A8B76CE9F803E3C9F6D688858BA3E68A0236702874DE
AF5C866F3442616A4C5199071BFB905F83E5F56FC10A1C2C919144CC9C39DADC
689F4F589B8BBE5B4EB51671AEA15BAC9F356820010D489EEE9ED8D42A628E9C
EC9E392B7E9F7C4C3279343D699840A297398E0C20F5F025EE75EF233DF48763
526A13447122B273DEAF5C866F3442616A4C519ACE6C560F86CABFEADBC51796
2A4087DC263061345828D816DB5D9C59E1A0206B7062468286D95693B98648E2
5BBD7179E7080BFEE466A1EBBA272C76D8269B807BE4307D8A44253B8FDB3BF6
48E65894E18636F36FA11BE2899514481B2B5150C603BAECA0A0EA9B058C8896
E31685199BFE58FA66F5180E84EBFA8D59BE117A061E40C88DDB940917756A1F
DD510EA6B70881663879C86997688C996E2561755951DAB75CDE41CF4C8B120C
B18A5B6F4766BB606EB571B8428AFE5B1294CCF679DB1DFADD7DF27A7AAE9C74
E18AB38C3A1FD963F245132D01F7C4FF2686F18D2F398B914A5B960F1697E7DA
D0CFD3A1B17BCD1A1F760498C875EAE63416A1973D6E84BA3BDA79327710B0D9
BFD43169EB599CB606E3823CF4C6B4C95926EDB0468104D02E402C64C158CD8B
21203363B2AFBACE43314F53B604CB995CB596B1076F3D70BD587BE7885307AC
3C6AC7D6D5F21C6CDCB7AF7A12C6C5F641816A1C9C39718DC36FBF52F48E5A93
AC9E09E7CEAA463832323BD781C5F085B2D105CE8849508AB9650F43FF3340E3
403FFD6F77D47F661FF6B8CAAB33B41D616E04A6706255CB4E88DAE99B5DA0D1
5028D540806E3A38E10193B8C2DA705BB5069F2B7222B33970092E40A294F933
AB5A4FD76D7A9CF0B20ECB0CB937CEF89275E66AE6945D4AFE97D7071CA7707E
DED071FB0C9C8236AF0F4548B862BA6A61B89BCF7BAF9833CBD5BB3AD4579446
94EC4C8947652CA8C73258346B5419152689A8DFD581436F47C60AA48208BCBB
55F2A552580CEFF530E1C3A4B89E5D79A8443E6F20B6B04916739E57A09B6024
D0469D4FDF87EA7BCA96F07CB88991508C75C058F8C9EEE77811171501286B97
3F3CD369EC670CABF975894FFA0388348F19AD97259717B3D0836F18ED0DE7C2
3F583DC78DF946491C645BDE31536E9087CCA80922B75E7EF41A49048E45A420
6F4C52BA7EA1CA9EACDEC6B96F17F4B8DDDDE9700569DBE8D221925B273E1AA9
CE874779400962FE185C767659438AD980E0B1CD394571392C3FB99EC7AF75FA
91AC68499A6705A33D637F18CE4FBCB16C2DB4DA2800F9657580CFFADC9502EB
0CC07DECE41861111516FE3E7BC6F460168B22EEDC5C22F76C75BC88E4DB0F3A
64DDE6524D995B8B4C94449A6A343214089692FA3C3BA89475C165DDDB37172D
36D01AC4044F17B8223626B77355D81CABA344F99255064A73E47F4D7ACAD20D
87BCC16D035C6E5D82C460B4122E88E548D21CCBEA889B47473BE5DCF7A24AB8
3FD753A9E426991C09E938354A0C6A0F3D8EF78C56F77D7A2CFDD1E534F18485
B0DDB77E09268A361A0BC8B63F94DA672CAFD245E58F5664585157766F0CBB77
7F9CB34FFC91315F66AA868C2BF8BAD29E73D78615DEED450E81E3A5C048FEC7
38F1FDD84EB630AABD888E3F74362E40BE6AF19C0DF7021B685A011A49DBEC6E
E9C4FADAA71D04DADE5D30F217183417A38BCF30881326E27BC3064450AC4A84
3C357BAE41217557ACF7F5DA3BC3200297769D57AB2B2FDD61C796345E525E8F
15F63E8AAD744DE1D89FA2889E33BCAFD54EFE392900FA19FECC2407B10D04D9
D433883E4864F738BC3BDB4D669EB777FDA513DFA9DA9D2AC31E9C973688E575
64736C94A9AB3E9D95319C54EEAF6D723CB99D58516FA232D4A70033547D109D
7F777342E80DCA6C6957C879318EA43B7CC317DB43F57F0397B2020D3E880220
549405DEBCC5AB0E397911CCAEA332EEFD6E0F9704235CE9760B397F0EFBB35D
0D466CF2624C00758EE3D1E1F0E13F09BDF18B30CFCEF5827345058A51B30ED8
855CB5ADA7DCC9E1B531B522211915F94F34D4071E6583B83A9E85CE3FEC6288
E4F902D5EFDF24B5800190A97FD06F208426DC105F653A59A3EED18E2EE2C973
FFECDA33956174B452E7BEDC710A1199E4567C6CC57710491A203C9D0DA6F892
3C424A736F2B9B07D0A857E1887DC76027CFD1ACFE8D0C446E49ABE4594E378F
7242F1A6635CCF6CF6524F72E0DAA07462FAE8E2EBC34095FCB5A16AB7A68EF9
60D01A54E1BEF7BFB02666A4FCFC4E1E4218BB841069179822F23333406D87A5
C6681A158226AF3FBCB811A85DD1428E480AD11B06A9345D286477D04EBE5478
90A5CA7EA4E778660FC94B3DAFC9C0A1742A6A915B52921CF2BADBAE8475A72A
85EB7C2523BC02292E1756DA44254EDDDF43B5A93B8C7D94F74AA464E105E29F
9274F4FBE9D0C5C99C055A805D26F236C7905831ABC9F04CB66222ED99B04853
D65C8D082D9A9FCFEEFD7D55A62F35F494ADDD3500D4CDA8C2B197CD78BB2D01
1D0045947C59F192653317882F6A342FAFA7A4A19D3431E656CC8848D17A70BA
BF33A5F0F20D1BF06DB20D9FE51C7EEA148BD2C80C34C7B6B74768568D53B8E6
22C9B94318CCC5B3B79B1FAB9F4342BF153CE1B70262593F6446786FC2196282
927088B156A8D5DF487754164DC0035ADA5BBCB0D5FB436D3937147A49ACC8F5
F8F3B70E29B7073AB30DD02E62A1BF86B577419F8115F2BD02AD4126F724A58E
8F37C0832C425A18D8CF51720A1FAEC2997DB018ED4756894A142048A2CA405E
CAC0F92CCA49C4899EB6CC03D46CC2423C51E8AC307BFE04BD7CE6070FF71BF7
65EF0306FCDF63F3C61A19AF5438A780AA50A66762967822C18FF286227B6D62
FC8907C1029717B2DF6190BCA554B543872C7357626D265BE53CB4F7A8B4F203
3A85B65AE78AB82891F9E7E18A49F14C75A2A43084CCE18CCD63FA45EF73E59F
27C3248B6BA752C168E01E794C8CC6C06070CE35EFBD39D68F1405FEB2ADA203
EF3DFCE274FC4A39385CA2757CA7ABC920C6A6A6BA86F4E7F8D0D66C70760A4F
EC450DA5AAC3E9E93C8DF81A7F80C773C3937511AB2D2D8E197A6B64C7A0A62A
68C77552306165D44E0AC8A7E4182AC537B47C40271DB3DC7A409E45BA764422
692D98FAB14DE187F45F8F9FA26B4DE53D12F79ABC77A6717A280CB489A8D4C9
EBAD1EBB1FD6125E5CE852D1AB083DFF76284D3B0458E78AEF279A84666584D2
5A8599431295C15C74DDAA236C5E19CBF37CC41C163DCCC2F7201EBEE341C0F5
2A2930CC8E88FCDCA30969F9467FD4D611D07A0EB97469A1C0C3046D1DBBDBFF
8169621D54F397CD2957671A9519521931435358D4002A057D431B85E37D3B30
EEC0102C50B02D3A43FE0685A6DCEE5B91B1DF5A1F97CA5E6A6362E331BC0838
B458C45A915B47F9ADB9CC65559C84B746CE964804B07FC0FF30752BFAE33815
00DD8E979AE45D4B5BA3D4ED4C6F16F9B30532951D52B8DAF0F445E1D9317349
010810A1AB1C3D2D43D40D23E1AD62900BBAEA55561AA1C2EBD98EFB7FCD676A
9178CBEAA46638CA2AA8AF126ACAFEC89F65EDF8545CF82356E5805C833FBEF9
2D866846B09155D9CAC0194D54637D8BA8F268C12F095E2A3C2B30891F0FF349
1FDB8DC32886971398C4873B3E52C5957CA119733991777201DD693EAF523A81
124E1B1055B07E6596F71E94DC7EC4242726FEC28F36CAA7F1125AA16F80ACDD
A68AD2F0EC9D5B963EDA0CB2EB90CC08CDC4BC54CCF82CB24B7904518E2A9D58
79EA4BCF3D8B9A026C9BA68220D00E72FDB5959F579C49AD44568522C4EE0EBD
5BFCE291B25AD01C5CB7BCCD0EA57CF01347412F127CC77DCA2AE52DD1DF457F
5A1B033C75A1EA31D4BAEEC5DA8BA8398DA6C24DBAF07EA7B67AAA115E451D3E
DA87313502E42FAF869C1220F55183D3F8351C4F9D7EAA5D4AA93C3B65EB4CB1
A68EB8F9103B62BF53458A3271A65091115EAFD73AF097CF1442656FB3A57943
13F388FA6D3966247E6E92A1BCE7F298CCDC671563BBF502F466E157DF17D2EC
DCBEC86456F4E231A2B3F54BF7197A5F3ED9A9A2F5177E17B1C6F9060694CB85
30E89E593E1A315FEFC2F4B06AE95DF5FA4424813582BE486660D8D5DD40D96C
C96A8EB5794980611D8E87355C1BA43CCA948E9F0AADAF52A14DB5E1CF78B099
C294BEDBFE0CEA68D0E912A3744D50F6C62841D36D3F8D03AF152F6F7F6E1F9E
B400E0E3508E70AC347A1628A2EF66661F70AC0F09D694828A951230772D7B98
330FE130D852D787501BCFDF18F8AAC8948F99841F0CD0869C26E28377DB8FFA
293B08C5E05192E9201A2C7E93DA913C1A700973F6BC5FA897BB4B1CB4BDF92C
D6380EF02E2792EBB5C0F2B08AC74E78D532A93464C712811E1A231499595C21
B0266DCB4439EA7B14B4114CC37188CE8CF08B29CBB060F6C63ABB999F0CA792
E0AB694FE7BF94C1D01358FA7C822BC1B36A4EDE777AE3E0885B398DD6F08CC9
C9F81E191A083DFF76284D3B045A4EA0FD6C8E56A868F915E05113ACE31F06B8
DF8A83DBA60D340663805B4F3426C6C6D33E13DF36D75BBC4775472C63F55913
3CAF24A4F39B407168A0468A48CE845C8EF1BA83FE48AF26162A1C8BB79C3AF7
A7C799E92A0310DD612A2A0EDDD0D957E7C52CD3CDB76B05021852AFB059FE8B
56FB6B432CBB9B26F521D6B375DA745F8C5EED0CF2BE8D8B78B4BA495B941BD6
39BCBF631E46F9C519F601A050D8D1228EBE2EA2219CB0EEB5F75DF3AEB88358
27F0A87D98EB5853362C29A51C7ED9D1F2D919812BE51E73BFC547E4D895D29F
BB08C4C32CD22AA6B1A44FE34E978B2741B5DC104D71240B5168FCFDC9B59578
0B081A8A7487A222B41B544AA91E79ABF7BCCB65F247F294DF31E75B1415F629
CBA7F64598332E2ED709420B491DC5404CE7670931F0A13A3D26AC3CEFFC72F2
9C6897B5A278EEC9F42CAEEED92118D45E2BC855E749745AA8B97C2B769C73B1
6B0A22092882885997546D213EB4BFC2957361E63B59933ED33EB1A13BB301DC
2BFC4D510B81414F227B270FF09EB1782EA59C7C5524BB7DB97FF5708F6C1451
554CAF0EBAEF29491CA0DDD3C5681B030C6C5FA2941EA3D22FA3A956B124860D
53041107B987A5AF9B8FDE3737D05B8E938BEF77E829EB5FF5B9BA1AE6271FFF
60AAC4325038F4185BBA896A14F336A410ED161779F8D659EEF929765CE1D53E
DF75D753BDC930A90CD463F69C1831536C11C0BB6D9CED9D59DBC5D85BC3208D
97A4051E67AE0A488FA258BA92CC7D3D2638C07388A911988B2097EEE376837A
DA092A9E6CF817372D65192F0C199D5BE9D61A9CE5D30FD33434F389C195FA1C
BA7297A2E87B5647C7F6C9C23170D0555FE7DBE7E2EFF13DE5B822F69C222C61
9E6AB0D64B6837664285767821C3044E012F5CE4671BDAB70A1CD70F7C021FA1
4E6744F0C2C107C174C93422296EA791C73C9BAB414D0DFE584B11CE6B9D74B3
36BC49BBEB342655AB5B2BD55810D284EC3854FCBC9CFAB73FED44198C0A4DA6
8BC3F918AD0A178FD79DE18B88C9298580FE1FF3DD9FE4BD76A26C3374606830
5222193231CBCB2FC167F3DEB2C563576EDDEE64FF81B96D91430B41D995EF23
A47A249436DCAB126C66C81C444119861836178DF2D33041FFA193B6A2954C6D
85CB2AC19FD79B319F1269563D350B1660BBFF39DB468D4F0673E29E00C75E2A
E6B25C1C761BD84EB45F2DED00EAB073BC71C75845F95899E547BE439A0B5C7E
A9465298B22A1B2282626D25590D3A80201BCB77D768DCD0790B5B2B56403246
955A3DCD185AB661C864C3BB1A93A92F2075AEF496466F7671994B31D9BEFFD6
DC574B681B4228292A422264B875AA8951576CD8576A16D46EF6DD1C6FBF1D0F
292BF82D6FEEC58A1C243F368BE30D8783D68AA153C3223EB13C01A107BE401F
904EFFFC5799996C4FC0C641C4B95A74CEE2AF43758D9EDD523C634A43C10457
8C86CDBBDC0A1938C5E0D0672969DEE45BADFAA700BD917DE56E7B736DC64E85
89E9D98C205A0B203678CF6065D3E4947ABBD8388C0DA765B1DBF7FDD8A6ED93
372DAE5BA1696ABA1E089EF4460706B3EEEE1DB28D46F6C835EC3E98B6955CDB
8AC8BC34F46001319CBEAD584FC62AC33507E35DD7EADD5E51DA253211D4A238
A7A948EC66AA33E7F48758893320E50EE0234BE245EC6A23FD4AD598D43C55EC
983D8DF8470BDFD6E8E6D4DAC39081F2A0B1C60A97060ECCBB4B535FA0009A98
CF8462A5B8309406C31F9F0F26A8E5E8EE488A41D7D2CF45913103CB0A38AD8A
3DE23294BDCF4BED64366673D6A66C95986C88376456A6B446A06F23433B3E08
3DD3693E5C25873984D7BD524AD66CAE20253F203E918C3C963CA49A88E29475
DD77CE2907FFD877B0447946CDDBCBF583EA68BBA0F69C64A315422C6DA9D1EB
5497BB591A6E7186164E3BE46428C867FB16E40083948BAAA1EA72855B2319A4
215B94938B6C21921721365D26CB3370CB83E3844324111AA472AD0ACC0D4DC8
C0F07D47206E0C13AA6839B85C3A5E5D1727C94886345D88F539080F71F8B2E4
AE3990F58088B06BF66C083E9AEEFFE1AA2B2C88D6DF259878501747E5879360
547870AC0DD5462F796B956554095F16DB0C7D2F033987B04B63C9DFA849408C
B01329A792214AC48911C76C4A3F4176627AAC263088168DE8345A21B9CEC8AE
DDA6D4E1350E1EDA13EE15B802B4C1A7A6AF07AF17AA04B801C60C105263B5F1
48C81F33A01C32652FC8172FD189E3016DCF9CD1600ABECF309015EE05CC9043
96B1E9A909A12C59FF69B34D18EB80926BE07EBCA1AEC2B18529B5BF346F7EF9
1E9D1BF6D7BF979B635910A3D04270110DBB49967113EDC9E426EB9A23A41EBA
53F2CB8326BC04ECC3788512DC381CA6ECA6CEB9BA1D2C44A481438CA2233368
2D9A0CDCE2C463148FF9ABE7F8A1E56BDCE88247B151D6CD48D3EFD396CCD375
115916B6EA5CFABBF6DD1EE44CD6B701531A2A09B107752A751695ECD25A95FB
FB44C104F73FA118F29709BE2B86C89FDD864FC683FA7F0D944705DAB81AC378
FE2B66D4F126B5912BC01221F7E0C96CA4F86F40BA560BA6EE791DF7F516D39A
1E5CEF754085EAE8C597703098FCE4B93135B5DB560E5E45FC8CAD36F96B53EB
E596A89AD3118A909302193EF129E149B5693FA39DC7A08708A3D6B1EB33C129
AD8B1C8987CE1A14766F44A41FC346A14852C870F6E772175278714CEE716D2F
B9E94241A33050FB1E90E58BB42FEB0AD08B2C312C3A431FC215CB9E59D8461D
1CBB1414C37287774C9B6E608AEDB1B540897BFF98FDF7F610BC3DEE12CF1402
B840D1A450A07B2873924AAC964D59CB821B21B22BECC869490155D362C47487
93F37B35C0D30E5CB8C21D06EBF031F15B8289818C997E38F0DE8ABCC3A20D8A
3AAEA34712613C1848CD3F1A581BE6B53FB966727BC7DDEE24EC7CCBF8D73B13
087D897399B034A9CCAC02BE98067D195751AC5239ACB21D42697F5E0081D254
343EC366DEFAA4AF6DC7E6EB5B3293FC6C2B43FB2238654422D7C8856AFD1AA6
89C231836F2193DB9806D98F8073C8D42B8C9EBFD8BDE7EECAEDC3BE31F85B60
274BB4A254BF10FC7285084FF5BC6EBBF6183F698D8092B5830B7270A7297E42
C23B893E1095A24EEC961E2C3AF51033F55FF707501B6340D18039A8F91C2583
E81446F6C524A72A2E58CF1AA0E525A1BDED664DEC420ABD2E700677F2CC279D
86EE81CE4493EBCA56302BF10C421C64AEF0A8245CC02F3EE146A19896FFB25D
2471D4ECCBA66EE5054A307BD6A81198D2945DAEAF2B9B55E6F467F70A6C4090
97BB6B67C674C5B91F96E45E360A328A7C5C3F317649DBA581900487A227388C
F4B7EC21E9D75B3F7FF387C4B78697304F9D7C28EBD794AA6C9268E1FEB0001C
E5B5A530EB04B3315CF31E4B99A2F2D4B7778398D1E33474C99D2EC4C4D750C6
E1F91A18C964E133BA924824C5F6FFBB8A3758E2B6225FDDFE2103F0A5DDBE56
9480DEB7C95A1AFC704C93474C61CC5AFDC82F982C44C0EEFC505EB2BCB651AC
4B4F96709181E47FCD70DE8C3A0015AB002038DD1151062C0D763EF3AABB121C
A15439029A4189E4FF1AE61B699D69F4E81B5A0F4E79BA69AE5C0A6C9F3D1CF6
45B98D19303E4522187E6AEF71FFA5879790549767424F0C86E95337DC6B01B7
EE4CD8D426247FFA8C6E81613791CD50FF2096DF3592B387387BDD3C1962AA85
2BF406A4F29131013B77B216CCF860F4D5E543110C292796FD6D3B3249D6BA06
4F8669DF366D3E12063FC5B9F0DC4A477658E066B2C567C760060D7EBAE2373C
7F9CE34ADDF25FDD8DB3FD86EA6F86F0FC1A21E3996194B6C5AFCB2452AA5763
28F73DB48407738CFA391C413AFF629EC3A4145B347E7A996C5CE79F9899829A
5C77E966173F37532D4EB6D16FFBF4A8286814348EB586DE644E8614AB4B7E25
DA82DD6E9209BB556DD7177238A500AFCECA8B05272B0941A78FE9E4E5719981
FF9C991FAC4DFEC235AF963BAD3560D482F670885A1A3749DA121C0272823F30
A5B7BDB32DD983E9B8FF0087E43DCC63DF1176762BA549A57A36A1CD6153B081
081C111B9BC5FC37C7659FBBBE9026B9354EC870F35E5CABF73E2B91BFD25270
F042C71BDC6128F69B17F7C745DBBC2B9F62E906A78D7044E6D8522104B85DCB
549C9A7FE5273495EAADEB8BEB5D4A4CC8923A94433DF9DE99DDE2658D7CF407
E93B7B863FD7BE4BADF8677AF95D58C292EFC0F410431247E33FEAB46F9C3D67
6E6BE1CB66C4C5010157DEB01C8A966F4315AF19B2BE5EF12913A3FEA5C22476
1B30BAF90A38134D1679C0827F6629028DCA333903305C0543F9EF0D12A699A1
4F302F2095EAA4C809368684A13CD9E1B1C419CD4EE473365C5BE3889C93E470
FDE23D8D1AF6E183A887F26F862435734AB5CD4DB050A865452C6435B383188D
680E4400B6A9368EEDDFE8AD88301C9E7B4C17D42D1CC313754CD646DCE8DE3B
2E3D43AF6CB6C196090957EA8AF212B84991B94E90B0C5DF5B90B85663FCBFBB
4EEED330E3D960DAB080F840A888C3D8ECFEDB79EF058A52F1EB2852477F8CC3
6D11E3031BB208167E46743E155C6DE7FB3F3B98B50AD0E720BD7A4DD4647399
7979C1A2F78376E52631A32E30B4CFD3B859E8FA19A95B79602B5B25C45A4C88
F87B83C940593414D9C4F8923CB91FE62A193F3DF4AC2EFE12E3F19A96898AF5
9655ACED8C0D9BA3D5D239915173B19FF37E4E84184AF757886F3B90436455DB
BE8F5906CA4D3308030EF54C8D6C8DEA3F0E126C7F858909627790B5DA68AC69
CC51832C2F8283292C8F30EC9EB932C81CC048826C7412E47B00C8B08206693E
CCCCFDCE41D09439E25CF5AAE36428EA527856B4CFC780CE96BC6BA8BF0A9177
8D9573637BD044B977A112F077C97EC82AA427BB0E6867A00156D51DE9665832
90B5DDE276671ABE51F14DDC390F2B7967D5CC3A4F009EE2DD94C933DBEAE215
58E9B54CE2016A9CAFEFE04D7F87888249B4698FEEE6C0D38F941042919CFFF9
313902286712B45F99144847FC7F50D40243F0881FDB931E1DC32CC46824C6BC
5535F2C37E1FD4B494B7A486B1EA32E05142F9B0535D561ABC5CFA653F6970BC
9A18AEE91987AAB2EE4F69BC0259A0F56C07CB38B27416B63796023CD6E98381
614FEA9C8029B3C53D1BBEE0EBA052EED20B61FC5F359368379DB8A63EE82AA4
1D07CEFE0191D42D0962B61F630AF59706EB662898ECC9BF2C778A935E6FE1B7
BE98A000D47E0A517552A547ACE0C751C53056C2DFB023AE52F629BB4A9708CD
386849D0CA276202070A5EA2CF87A32C870F92D06C85EB4119C2E1333DD2D3B3
F6B887D06E3A3330A5C60FD3841F8D423134E1332487E50C813D3EFE6A066BB8
3761B369DD84694E6A96E59C3473A98E06CB61793EE61C2561484707BFEEC825
6AFDE95AC749FBBA2326B46B44ECDD06CB2FFD74CA975B12C921E2F2AC2B228A
CF7046E0B813333099B94E114EC6E95A20740B69FEE0DEB842748F1FDF7240C0
0F1457566BAA2A869B8B40BEF1340BACC6E131476DDD5D5897F13EDB811ED4C5
07F893B27E9F122275D040C2617253DDAB7D79D3D77937225ACEECE5E053BC7B
585AACBA27EA01393797C7A4FBDB82C06B57C6F0624C9FA9D5663B788A9CF629
1C39F10B17B15343FCD5726F899B80301E552B7F2BFF44D443DFE7C4E523A13E
717EC3B3C1DB492B7032D0A8F5143F664C20930885D26A58DE78D6A15041BFBE
287D58B5C062F00BB84D4A4AB56873036B0F2E9E610CFDBA8CD792B35F4FEAC5
7D23F6958533EC7A4D03F93115AA11BAD2115CD2675BD83450043CF1A9194AA6
B421B33A4C4157CA2E43C165F96B8A893E3CBE9E9925F2135259BE7A2B301048
79F02ECD75AD988AD2D1F4DC2F864AA7CD8A238130FF0766C21C003B0561E734
043D86FE2352AF3F3A473D1809A3B8DE9734FEF5602ABCBDCCB553642D6C2D25
AC52528971C56F540F7952A6E302562E64A6BE0BC7BD2A66B8716E61C0EEEDCF
F931BA24467FBA75ACF5B385C74F294E9C1C4FE87974C479DB93EB53D03BFAEE
3ECB7489CD07174751A2A402C86015A256D9DE87E23C25C0A54D91B8BF5EBD81
6C96D704A33D1132313319975413596FAB10A88F653D3294BCD28F121FFEDE63
D60C8AFADAF4528B3E841737D9AC2707D20DC107EC24EFB12A1ED6ED115A85A7
C58E0019F7B4B8DDEEF126280C366E3242E097AE4CE80AD180507DB8D058875B
3FD77A408B815091BF3116EE79D3E056C3C549878880A12DE427BA66C6CBAD88
4F4A5C0EEC50E4DD2670D2143B812707D3ABA2CF401E5CD61EB9B71DD3853F25
C6D394EA84958BFC9DB9C299B0B2A13C3D1227156F3355640D5328055396AE23
2EBD03D0087E5730DBCF4F676A9513D6BC89C56FAD41198ECB6B6D83CEDB2807
331FDB217D0B9B9196D0DE142DAF1C5FFEB3FDD659E8B982E537A4234D283C79
7823CD333EDA4FB93EECEB87A15D8B88992AD9F2AB49A449EB76B01645C89E2E
F6ED5A0451427216FD070978D62D00F45CE45832615574328F4A59485B1DEF21
7BAD99E3CF08CAD98FA4CA952A007D9735AE59653BAB22E92F7C92725175A465
67FD25B1585EA3E2D46DCE6932F2B3293796E93BB3E5BF74359300A86410C4FF
559A9345431CA11C1F674D8BF359AFBCBCFF300D5D905B944BF47CF9231CADCF
5801BCE08096B3C03443F272AF3BAB4B0349947117E1C483D09D0A02D0DC25A9
CFCF337993CCD0DCE98A53290985AF3E59556F397FE2557C434C946B4786CB74
599752DF50E7AA92691327AE7535493246F5C06148F17DC7A6987800C31ED18D
B451FC7A31C6C6C01A19836001A2B330F60986B21A7A1E8FF68F815DA9ECA720
CAD551EA962428CDA9B5006AECFBFBA46C2A424D1D777B262F9ECE3C77DF0EAB
135817C468EA81078AB7B598B2E643795702B586DA5BEF9E58D613BFE9D91208
DC4F87ED11A917D07C184CD3999047EDC71068AB5B43CD37B25FA65E75848DCB
A8FCB348E4FA0C1DA16BE7662661A06D531130EBDFBCE6BEC43A0F7168E43308
89E91A93817D46C3E028292FBAC7B547C8AD469454168BBC2A147D34907CE691
5847C624573DF3AA5B0A3F16770875DFD7C961C4E3395BFACABD94250F360ED6
6D5C2143FEDFDB446CE4026213E42B445A88F8978D8D431651A45BDF8DC9B67B
13AA1419821C2CF7A9B3D8F18CCA3FB953B21EF43FEF6B2AFFE1B4B91F1BF646
DC3032AE9C87800406B8C09FC835005F5A7D7E0F96A6D017D789A4A5B38923B0
DB16337F6A8E6DDC579D6382488DE92578EB1336A2ABE1927DAD3CD6D8C5B6DD
DABC19A261C7B1F37E516285ADDA494FD0924BE5D6BE59BE63D521411F25C3AC
70AD1ED8AB7C72C87DC32C73C30B7FE4278C359EC1DFFB496D7B67A786C678E2
FB824BC92C0FD04D190A0E1E35185EA31F0D196BAFD7DA3CD78C7777F1C58289
7160B9D27268749687695AE684C25543E70D6BEA208A5085628D917A05551DE4
AED84420012EC9A305B61D31217FB05D7A87032E77DC7DE5630816B80AB1AB6B
6F6CE13D54F2281A315227EC8EA7D926A765A82879ACBC15D0F17C0AE7F98939
EF18FDB406091710948C148D4DD0FCBC1BC86E98BA55778A7AAD42FECF3138F9
B92B0AED8A018BE86C056BC275C60B4B0C086DDBF59CE0B9DF0393801E9EFFCF
F396B488A107636C7887FCE6C6E35F25CFA31FB5C770CD64069C420E759D95B9
31AAB534B5498A8DA1FA0D0295D5946825B28F174C7DD895C5499E4E59D6907B
6FC0A12A9427C48C34F064922BD6D7B4B1DFDA1A2B5ADD67A1880D495B877DB5
6FA3923C240AD846F15871634C963A256A36C974D3C15578EA29CBA9487ADCE0
572B2A8CEBA8DB71B3ED011BDD162B8EA34B840B7A70AE87CEDA5CE669CDEA31
D7B91439C0CABED406BCF26D5D04B75FE9F32BFD359178C8D1B82B932E39BF2D
BD796C6A6AABF2550FBE1D2F81A20181B9EBB131918BB9EB7A3845D309DFD664
622623FA4342B5E42F7F02852A2F69E10238FABEC3C9BDA922D917C00D906C93
B87918D6B95740349DBE4F26D6D2D85567C4C20B11B0AE4D12C8606E6FE2AA81
72BE531A2EA10CAA333351B2C275FAF9E6DEBF3A91E3C1B1662F0881ED4F1145
BD905BD8C959150B04628F105AA5B70E5E66F04E5E38C9E057A2DCBE9F401095
108053774518588C8E253F4DAA7B0AA6292ABD3C6BE11D08965E57169A76CC9F
1CD0E735A500CAB79A6F2BF7E3BB35E0DA26D35AD3696F1A21252E5C3D6A6937
DABCF42A43BFAC30332E515F07F9D1EBA61C7191997A9D33CB62647B85412E20
AD2961A7B24A18B94F9096ED6448F4BB637F7A9DFE1B69B66E073CDC765C9F50
1EEAD9DF8BC1F778EA57B4E7C6055076623A7F59328D6FF8E8ABC1E01F9792AA
725D2B7D57B6D85092B2BEDB769FFC5482730F7455C12D4CA1C3A9E591F10557
17A5636DACBCBD1EE6FAB274F37BF27BBE47C2C41A00A39E0FA4DC4FF5170DDC
E43F7B0F4E34E07D39EE8B38866DBD6CD3C04440D3F77306EB6D39E0F11C1B4A
D6F10A84853E5073BA0ADEEF3C7D4052A3963B957D32D0C2338A95BA4C17E3EE
D3F1DE725BA8D7CB66409F283A61D37C04412C41853BE0E7DDC799B0AA17E2D7
BAF6E80801CB46D38978FF792E1E3E3E706FBFAFA63FC8312D53E56FED37873A
D28B5F1B3C1532E361DBBD1A10D9AFE4ADF1D4A2A93EF732D657A2C930146AA8
6722FACC1196890F1BD839B1C35A44A9EFDC0147EE9FCD7D9CA854F7B518F18B
CDB3C7D97036174D245460A746271C2ABB85C29B1BBE3A9DC305186FA2817AEE
064B038CC959C3A5DB0A1B69889E09F5C0472C2E15B4F086199D687CF7C3AF93
5D6FA7269AF321AC6B2F72AB69993279E0DBB0B39150CAF4BA3B037A2488798D
D13F8EF6AA6D7F732A023E3C816E686D804A39EB7FB17BFF0B0B058317939C13
80B42A3CE9CEF29EC6E84C6123C0148319B250A4CB306C93AFFCECC7EDAD5C15
DE4A3A92ED573E57D5954B4F0CB6A33B6BD109F1038DE19E6A2E22D355E941DF
0C973A087D8DD91F6A9AABF885E1F9588883FA113E7130F6CD15645B6627CD0D
3BD4A6B2E5DF8D51A2EDDE2DCA54AB9DAF74B90AE574DE0E3A03B2A7C1F2D223
21FAF1843EB6479636926186A7304395D04B4B34AE58F9F0A0B709228DD41EC9
B72B3E8E9C3DE68165D2977ACF0F23EBD928FAB4F699885FD8CF3316D661631E
37C18F76B26CAB5E5906BD3134FE70C02CF59119B759F5A018E92FC8FE444973
78FD5CB2B24855C44AF1254C75D01A704645E5435578DBEE1B5469834B6E963D
06381E3ECF900C3626ED737BDFFC3E6E69C007FE21069C57A6614E6C40D578C8
78290E155DA3029E6F423BEC9A7EAE17602A8421621054F2C3F7BD2CD6309F2B
2CD947C29806A90B4D3C49E5C3B7E7011D5F71A9A04B927A37A370239B41AE62
20868D1EE62070D12C49D232F7EE1938F08265C1CC281D183D7E0951BC1F37A1
D5D7F55D3D9CF6F4D30B10BF56FC3D2091AEA02219C9898AAA360FF6814BF583
EEA3738AA37D473E8405C4F85E1C0EFDA45B0EB92C98034E8E2A0D8980208EEC
17EE2CE84CAD4316B971789221B00AC7D3B6E6B21C79329B40F39EB9F6AB914D
7311760F916D80183EBCDD22AC53966B743B3FBF1209C2A914B1BED94CF6654F
8A5E29F60E777EE5D44DBADDCB6FF453E9F2D3FF9D78E3432156489768F56AE8
728CE6EB9DE1BDE038A49CD7B67CFD7141F3FA6CCA2CD4B18DEC5E0BE7984DB5
A6F10C6FF6D868A1573C7EA53671FF36937C38A969DA00A2C6427E3A6ADA9DEA
ABAFE7E7CEE78DFC2A91171158575B4716AFE11191A8EFDDF637E5093E970C8E
6757AF7BA008ECAEBFE6526A09AB193F51CC47241B969FDC0E9B0DC2058D58C7
4B270DA1D8A31FD421D704090D437AE28AA8F48A8257BF9CF50E740183947645
452DA30E2C07DED6EE36EFB282F822539820F23F386539FE024FC02893996977
00109D8C86640BFD11E57E253D5D107ACEF0616919C7B08A3D1BDA70A1FEF5EE
1B451A6AB02A86A038237FF708158E7CCE66BB3071E301A960D7B1CF6548B945
32090635175A3076F1EB0A7167FBEF1123E9A2787BC8ECA5FCF51C54BA44CBA3
C4FE051B13824A7F611A5286DB0403DB6929E0F859040AB58E6AC742770AB293
A02CD6ECBB4BE7EEAB8824C822CD7F035C1321CFD1A2ABED8A41D4E53FB7D271
91930E22932DFFED39C8827FBE2F3E805A86CE7D62C470DBAD7F1F73BB8F74E8
F3D90F35659EE836A10A9E2A65AF2C46545F176A5E0841B85C58F2A14B04D7E4
B60DCCBA7F41BE09FD2B741012FB0A933D47C99C00D678451D67D15A9D96F420
BE9879B37D65AA4E1F047442375212A9C98EEA1B6B7810D6D7032CD01FECAF43
D3EB791169E2CE7DC0006C9BFC35F5FB9931DF3E35E9045CC59FFEA2B40BBD98
E98BEFF666ED13D4631327A3C15D7DF787F88526F688BBD03611A5F8434A09ED
EC9DD7BD5C520DF5071B6B46CAAEBC118036D22A9B8A8DE30FCF2F477ED2762F
6BEF3D9CC864BC8C373793FDE76D64A07374A01FFD267BF1A655785C4BC74A0C
CF13D9DD048713CBF3A6E1FD343FF700E8CF21264AC1531FE5974A4602C28761
AC06C262E0B0036DAD4C54B8E69E69EACF393DC0F1CA5ED419D04FDBC6D291BE
6F75AFB0B0165E1E3031E8CEF7CAE8846616A8E74A81121DBE09364DE96E6322
EF144CE1B50B1AB13DB50281882A79F12D38977891A4E56C4E23C5885D8E4FEC
4E7A9140AD7602936B959ACC026EDC4D69BFF2BDC18E2728A727DCF214FEEA21
93652FEC310CCD9CA61C17A13F13B8EC4E2E6F05D5658D815A738B5C6F01A777
EB57110035369F5289D0138E7E4AD2BA43777A20B94D34DB6C7EC675B6DEA423
19FC0DD9291143B8938B7C1706A4389E0540E142EC9CE99DAAF880F3271F8FB5
FFF8CF58D458CCA6E69C169A5CACCEED408573281BEC018A83E18BCB88B149EB
3FD610CF78BF5FDA7BD34A5EC3083E742FC6DB7F7D434E669CF74A50A3D831EE
417F35D51D48175D17B58A3ACFAEFA8203172DD5229BC0ECDDED4238936E4EE0
B24A7637FF4634F3AB4C6869ADBBAA8415C4E88DC3D6E2D7EDCD4C9A88E5AF83
F73F3AE81B1E071824D9A8921D3AC572A587C09ABA71B88F4F1412435DD92FB6
86F4A6737C56FAF027D1C3592FD4C5121467070A624EBC5A026A3C762CD04278
33E8DA8EDADC9B7EC5DCF21D431179D5BCEDF2EFF4DCC2C835CDE21BCFAF6F03
82688DF3F05EAFE56E8591B6848CD493EAF334B6F47316170EB3D94BCFF831A9
F8511A3C453F3BF2CBE5FAF0BACACD2E05DF87FAA041BCE8AE509C95EACC2B54
0BF297A904562CC9ACC01ECAB0A4BDD3948704D7C6CF13F50DA99E8B1B3F32C8
FFFCC03F863EA983E2F63DDC30C74E93AA5B4B4F4129A79FCDD1A78044D5EB95
508A656EC1B682605F79531E5D8E0E8705286A67173E496E58A0C28EC97F98E3
26722C4E03AC72B27A4389AC1D881DC394FCFBA1E3D7230A677E8C250DEFEEC2
60AC592469EE95188C98AC63191F45027A257A4D04413814D59EDE52AFD5775A
0E09B39416D70D1D2C97DB583A819E11D363845EFCF2DA57AD7A7974A4E904CA
49447AE6F19058F35459B41EF5A9084148223C1907A09F04FA443FA5C466DD03
10B12A73565EBCA2639ACBE1B553886A86AB248F3F1473CE93543517EF3F0CB7
248EF126C4736C7243857AD566028382CD48B53CF17FC5D9A2ADA441D2B5FEAD
AB33CF9C28C03CFBE2289B4B03BADD397FA9C7EC7984C92FEBE0C4A217BB193C
D9ED20E45DBFFC941C62FFADE84BD2D2696F99F052F591D1106CA1DEDA2BE893
3BD75A4A4C227CA4F7C61A19AF4F62EBB103E458F37E1CED8842EC3122BF254E
315801167CC606ECBED80365FF5411BFFD9A7849BAD722D7C450EC1418F0903F
7C82187729174258AA15625A5715241657E64F660BCA0AD3A739C345D227D546
98BCFE5B508751DC01B02B54FFB36C06C69532A48947A29C322DFF8D816898F3
BCE68D6E44EA9145C689C0C2187F6AA200CB7D71326B304D3478C08D78BCB058
9CCA280C44C81CB00C81343C87BE9F4405C94FA0D26521317B9B19485868EBB8
5C82643086E64A5D010C6C0FA6D82A76A92263E4332813D760B83A62786E7AD0
F71F8CCFBF12763FCE547C1A8F3430F0F4178F640BA5990C58215BBF49656FC0
F94E1861D58CD64B04E347AC28D2799D0B8AF3D7F3F62CC92694299FE8811F83
8ABCAD55956AC7829DE8E04510ED0F56A8501BA830F7BE4A79C840FA38454BEC
12B85763D420CF985260D7D1BA1A310AC28DC3B4F2EAE80BA1847C4E11C75B49
355E7E1128781132B657679E1A7528FFC42AA2AC4CE49D2537F0608449E5CFE1
BC49BDF5CC8F5AC67D93C2DDBAF6700D64CE0B811CD5C7D8163EE1658E5FCA03
501B31CA4C682B6CCBBC82EE3C930A1A69F9493429D3479C841D9E5AFEF7ACA8
E3A780429C44D6013A6A8427C7CF9CC1D2A15CAD3EB3E1F94ACC3DAFF579B4D4
A5BF2F068CE8499A0621A993926EAD2CEDEAB2A92F49B40EC8C10DC93EB56A73
10B321D80FE3395DD7459B8C160664096BFEEB9B756BC4BE73A6066F30C1BE2D
F78C54AF97E6931E10D0DA9E0A7930E2AD922ED40A9A4DA626605224C9824096
B5B3EC1042D85B627CB32F31974ABFC6182CCCC30C3EEF7AD027D7BE1A3A7D49
C61E75EB7EE6A5E56D49C19754CB04ED939ADCC16F6CA1208F3EEAAD677E3186
5D1EB1AEF03423962FE57BF8CCD83CF6C7AD18C3B0DF0CF4DD45E48C7A32C21B
891BB41B55483A529D26C4D91D7787E324AA8E6EA259900308C7C48F6B4E04D2
4CD79E4DF9CD0CF8296A0FB1B4B32303AF777BCC5075E8A006AFA575C8820BB3
503D505A084FCA3C2A816605395BBE68F229DD24467054B9140FC6E1DD6F0114
AA13509F53977AAA16F0FAAA69D5A291061E6442E355552E35A23B9B40981E15
560974DDC393207E6B7B52566F86DB3A2225162AEB2C341F96D093244DB13CDF
6A262EF5D96D3C5AF9845D54AFD2A078C548BF398D7C91C18F503AD48828FF36
9CBFEC4C1D58942182AB612FD81F2938BF989A702BC4A551565E921EC0C2D4B8
D7E9F0D416A4228BB3A7A01AF1EB7A4F65DD76C1CE12CBEB43C3706B0B531495
353971907EC672CDC683DC830CE23CE6011ED7E2C7110CC208DC02B04DFC8B0F
EA41CF9A55A48D07550DC22386C2E60D1A3BC8232BE48641DDEC902B31B6A28F
380E30B3C0C22C2AC28C2893BB2EF7F4C196345E52451A3C22A851F9249BA416
FEFD18FB8440DAD3BCB204680D3D1D167C1F6DAADCE114B7A32CCB12EF9B7B27
BF8CC659C5EFAF75D8DA1BC521B4840B56885EF987F750401008EC51FB0F439A
3CF85DD2FF9047F33D17315DA1129634ADA24F2A93FA84BE5DC502E479A53C62
2D90D4E4F1A5F3BFA329C3D0538066A3CE789F71C320BC4CC40E947A4A04E76D
7F33A42101444CDE6532333E763A892CBD58AE5BA2F1138C084919F36F72F542
AE184F166C7DD18171A683E7CC9ABBB55DDCCEDFD763C736C8DA455158D39018
67F734CA241240AC783FB0164AB193FE0652F84D9FD103C6C3CAC9C5380C2B22
3CEFA321EAA6CA32122466A1CEE258326A45642C50CAB8B092BBD39A9C00088E
A890EC135827420EC5C17F747C2843CD6D638275A026C4D4178B0B3EAF7939A1
648EE19A0AAB2470B35711A9212B6FC4CDAF5DCCD93E16881FD1E874B034A560
77E684A0F9318D22F3E90257821C0CF73F3F9B9B97017535DF806BB07247F12C
45DB3A7C64D6A9BA10FC50C604431646C1D61ECF8775346A9EE327BC733A8484
89CE327780961F123A68327E6DC42C73E3DC922D0FFF04C6034FF880902B34EA
3E3C234A567AAC860664934123E1794593194A7E1653D9A84E27644F2A098DD6
ADE8176B621168B4DC66FD139A219F30648720B6D4CFF33E8D748579C45B05CD
D834A434A01D14FE6661E456413FCDFFFE5637DE231CCF18083E35F4AA23E4AC
3709DBA905EAF29911134C6535C5475E53E5FFA57908475DBF2C53A40F4B680E
43311C1207C7A66657EFDC0B24C53F49DDDA71F18BEDB13F560C88D836DA2AFD
B91810AD12F31A8493D754DE179F170BC1657ACE6C7C3B527F7DFFF6A58AF14F
E57E460FFEF2FFAE7E7A0B934F92978BC7CDCC63BEED6A13AC88DD4A90D878D3
CF7122510B5556C1DC2237FCCDB5DB0158523B3F6A898622C4B96E07B6C1DE4F
0E43E73338201AC9E8E2B1E2620AEF3C31D2756D52706FA0AC3217E566FE3D2D
FA17F84066385B6639F7352C4F6955D2778DDEB3F9FDD3629EA5939C5F119B9F
63E9FE29ABB0B50141119328D0A76FCE90E4742F3C7CD1D1D79DCBFF31F84059
6BD5CA171DC1CB85B35BC0520AADC69464596968DE6723BDC8B4C742E3FD40C1
D5451E7C7DE7D147BBA1EF0D59C8088B638DBB8E2928C5D40B9B9D901D5C7429
FA490629716C8D840927FC22F501205B8231B17C89614604FCACB5B17F62F350
4DB9AD5447EFAEE5F4B7711FCFB5C51DDD648EAC864588D3CA15599A6CB2CC54
F28DB8D43A5540AB5F79EAED1DCC90E72AAD3AF976DC7F0E7AADD976A0E4D6A8
A3529F4270DE1DB7B21C414272651E3B1CBD2AD9A95330580EC67F9140B01B37
74E900FBD92908E6B7614F1A9FD47EAE7C6CE5FCAFEBADF9E9F70BEC05397DDE
2FD9597C50EDDDFE5C13CB32DF1EFF38700F5053BB50BE7A9ACB94E78226A60F
E9BA8BE22B3219BDE1670114D6D304C7A55711387F64D398B0C497F1732EEF8A
C0CF442B62FCE7585166DC42F7FBFCDDA087F80392364EF5BA8BD14488AED1BD
3996CCF13C66881BB8E042C460C008D954B5ACEA998649D96F242513949BBA53
CB6895E1BC1A394D7778CDC78CD1ECAA4DD84FB1EB237A3E107DD044E1D8214E
B36BFC691E876332397BA50D3ABF90D72D4E47700F02318EE355563AA3EBFA21
FCACD707E662E5BD8E5B5B44E8783E5AFC3756629EDF5C185DD0729EBF5D0465
0A475836141F4AD478DEAC55EFB244E7945E92BC501A3BA9E7A8B32BA137E752
4EF935E5584FA50E23858831CE672711939F311E501E38FC9D33CF4D2ED0F98C
90ECB18F82DC74FC5C275A447663DB0223A8C018E6444D8757C871341D4126CA
806BAF0369EE4AD8FA6224288D7C598C0F80C416E448FA59B88F4591E590CA6B
93584C360F26FEF533DB960F20F89F4C310DEC69AD61A65BF8CD3130E457BAF1
163737067753A395E5C3C3A9106A3630ABC53FB380936BA8238016D54EDBF1BF
EB6C2E9157EB00A4559DA30763806220531AA0264132A5ADE357E0B4DCB027E3
BF5BAC47AFD5017256CDD95ADAE3891D3337DB50DF9608129366268D21DC1505
2773E0CA2731ACFDE42A8E79EC9BAA8BF276A4C2062C3061025F5C7467DF317F
ED742263E89680FD0A65C0F3A2E3385142D8354A55AD5AED6513BAFAFE3D6C3F
5A10FCCABFB62E60A6FBBC4573692AFF122FCCE9D76C22263ED3C210E1F1E9BE
D312DF1ED7D26B37346264E96CF1BD589A0C05FDC060954816CF79DF3E4B2D4D
6EA03CAD4D271384367CA6CF32F4767156917358EA352873AC46DE253579069A
F1DC183AB25BE031503F092C2BBA851F623B83C2D3665F07CC388B0AE4BA5438
F1671C9AAF39BE8F5DCD357A09F4A8CF6F6DD313A216CC84E24AFC09762B48D1
2DA08FF519F4908E79551154185E5858CFFD2325E414D9D0640F507E5FD3C3CF
4D78DFA1760E17B9AA1EDA8E9C0DC8C57A47CAA4C993ECABF5D9A42ED72E68BB
AEE21F7947D355C315398495838507DB2088DA8BD04B9078C04762DE02CB8FE1
1B21753862DF66FF0B24C80439AB14260BA3AF01B3BCAA34C3C1CE2430C46A2E
25326969978BE284285493BDD1026511B9B86735030FBAFADE831A231CE317BA
814EBDBE40D6FEBA8868E2121BEEF86B65887CBDACBF4CCFAE3027517E39E5F6
9C4B837AFA5B8DE9BD44A3A74818F61760E51D9C3625CD0FD182AC0567CCB937
9BFF781012843958A9C298D91EDCEAA3A035784A9D2E4145D6DA629923D47C95
0DA279F564795A1997DD2F61E80EC91C5F78FBE9D3393CE06ED3A6675DF966E6
246198332E65A0934CA3BC5DBF353F2D69A81193C3B70E6137CE462AA42F12AC
061EC048CD00143368B13336B6A44D11FAA4129259ADE2B0D6ADD0C5FCDA5D47
2F74096EEC65F0F78A5320C4A7E13CBC2E9F8BF21065714A8657F1424B3D9EA4
13E7233EF0726DCC7D9F062706FD1A773821AA889A0541D99B4DF9AB613E44A7
BAB3F8F445F69ABB93FB2FFB843D84A51AAE5C8FB21BEA2DCF3E01C6310DB5FA
E528AF331A4D5D4F99E200CF1842408C79803AFF72B75498A379815F5992568B
68D20C76C905EC980BEC4B3FB7B34891FDD88CCBC0757CD6511541DB543A07AB
E5FE39FFA9155FFF71B51953E9A91955E2B109FA62FBE9CCDDA30514E56ECCA9
519DADD6417E6FBB3BF5E639A85D80E6917A19417CFB99232C7E8537094A92E3
095487DCE7C5B0A72A4861139CC8AA4E7A48A707621950C2DE7B29471FADF4BE
1BF4B1E485E922A3682DCFF42D1FD186BBC76BDC79B2CBCC286D3831F9282E22
9BACC7B4A4C584586ADE340F866FC0FBA6673FE362B760B0B88783B17CD4C307
5FFD1A945A3C332D14A43803470B54633C9D392CAFEEB23A022A2AB583F9AAE8
D14D72A4DC8DB691C6CAC670815A9552132CEE56B94CB4B3FFF606569244388A
B93C6DBB0729E5D0CF34EC9D0FB61AA61343C44C1B7105BDB879F8E12D3F5FC1
152D9B2937F35EFAADF8F4DC1C6046E7B3753E139A16E72AFBA04047DA8AAE12
FC1B6C894064A7DF8CCDC07D075AED0C42CB23579F6D2C7BE2C929053D54946C
E1CE334CE4BCACB98371C09F2DAEA3FDBA78DB4132CF796EAA4DC0A8852662DB
92115C971D7CF8BF61444BE8AAC76111B45801A26420C38B933AE3EFABC60B30
69A87BCAC8A7BBB266DB74F5CEE1F208D43FA4A8B90003C95DA1A4B95E4DB6F6
0FB8A7D475B329B84800C4BD03EC1C9E67F47AD511E8551A946BC44B10010EB2
8C113C02AE9697E73BA26778A6BE2E9AEA58A0F16C69BDF69139B1750DFBECB0
8656E949E30036AFA90B6C76AF57CDDF9F988516AA0A0CF9F27A969E061C2F8E
3E3CF9C96C776D71E8BCD0E498E98850F2A03C0389A739BE534CE3081FEF6D38
1CB100FED674C6100FABB26BDA7667F098C3417035A2AA03A9B5A9DE1493BF0B
332BE1008BF5B30F57DEB81878266F11B27AF92BEED18F6E76948A083C2CD9D0
2C128DE566A485DCDF5C73C7408C21AF4F5235AD64301A1A84858A5C5213A0FF
0EB0FB3AD97FCE3D0183D3741271FC857E9882426C304E5DC48A648E227CC1AC
1D82705CF1B8411531F6B8625429DD6753F1A2B8EABDB6B4D4D49E25063124FF
F150A4095B302B77B4ABE942D5B35F94A867BE1101F236AEA2BFFF607726F0F2
3986B98257685AC59DD41459A54972B50864AF0CF91ADF84EF0110565EE07273
03BF9A1BC1BB17A4A67BAA63F338A0D6A6D15DAEA80CB3A2AAA77C35E53B2D99
80D7D4EE72F222D6A1E893B0CEFB26E565A8B3D8FE75D13C09F8B126F4705A8E
676F3DB9DBC1EE398662255CC38967BF35864FFFADDBF0F336F2F68D5FB5B4E7
4F88FD32AFF13F3AEA68A67132F61582951B9D0B5C25415FD08DE7012F8DDF8A
3A25690B7BA614C585A019EC90FE660425BC574BC7334AD24DC85B41464EE88E
B5910D963D8ADDEAAE52DC2E64D20422DF9F6C36ABF4C705F7DCCDC2EEFCCD91
36A3D792A78FFEAE4BE468D3C8B46DD2A1E399399981A72D3F1885DD2F36B43B
E2CB3A61F3D3A59872ADC0CEB7C36ECA71E23F429AAB83E705D17DA117D6E217
FB46C6046DE6C20FF7B6D55BEAC7BA3AAD0398DAFCB88D448BE83407584F7ACA
6BE83421D0B681A846D55D3925A11EA4ECD06946CE97AA82D566712EAA8E6DEB
EA6666138D1B7CAA4DA4E110C6242778E9AF6FEAB22A865C87CA182412B8647F
CBDD59308D7F8D6FF4A48EE0F20B1F2D19C0F49088DA0F3F01E97D7F319E053D
C1511091FA27E0258D2F941AB2A81D17994533F70CBB9B47BDF02E56D8957300
A22F8A7BDB11709E5B5236235F55930BF086BF0544E890560D0F7866FAB5B67F
5168564E868015AEAB12FB023D232E0B6F13DDD2CD77B17BD574CFDC13284263
1717C658D583F961B846BA9BE971035EF03BBA002DAF0EC0E9DC579A6902BAFA
B6AB569EAAE321A429BDAB9A7AD215D9C4EBE7A58A5533E9800939175CDC5634
FEFA42B5C7D76C33AD6F4AE6FD7BBB02204449874A39E0AFD27313D13D499352
7898C97F188ECB4620F7BF216F41F5CCA191CC5A010650A292D6BD095D449335
AACEDCF760804262861510B8EE113870FCF6DCEB6FAE5FF8F7DCDF8B17D5E686
5ADBFE88038D7307349B30B47BF7D4711E571612B90ADA0952CFD8E0553BC3EE
A59F931557F8829F6F99003DFA27DECAC9E71D51371D5E73B30FF108D2F95F5C
9BFAC40A2B3D7ACB9CF146C063EBB42F75D3884640A5D037E545948B695A14C6
B70279DEC961BD15EE5711E904685AE04C33D455113905A19D13068FD4CE4C81
CACC3524D6A33D45704CD16593604C3AEDD6528232BD87692F8062C845F37397
557C17204D681872D5128235F94C34901D90411CFE29BD7E36EEE8F57E9F58D7
76DF609D842B60B0D364B41E39B27B2A8801F43198D7660A40193DC2E5664785
9F945CF1B9129CE25E4058697B0086B728EFE8744FFE396DD2E4F18C7498985C
BFAE10EA6920EBE22DA8F1CB03997E57B6BB136EB6C9B2C468FB01F90FD846FD
9E7FDEA4AB5563DEF21361859CCEF1E675A3ECDF8BC17CDBB2B595532E3A4C8D
63E3EA0D0C8DD157247D34761170F0703B16C879BBAF9A84CD8F82FFE65FFDEF
A0AED45CA4644B738E5F93AE9172C6C0B5DFC6F141A47FD64982FDDC72950F09
B0C931A52556C0C398A1C52B3F7C2440A81B012532995272F01AE7B4D8F66FFA
C047BA7DDCF4B156C976FF1A0823E06A75CB70919E50C912761255AF100B2AEA
F0DDADD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7414179A76BEB45D64F98101
3705AB6F7A67D8551E4BC879A6461046CD604D79E621DD382967329A7EF603C5
0A96E000463F8247D7CF06FE08AEB09A6A8F4B0CB143A6C10B1412E1AD8276E4
A5A5219AECB4DD34412429A21E2A5209AEC889B4F6866F253445C88F41CF25DA
60A179B44F4CEB366A028D673EDC34DC2C6159ED9E284CCD6B34405C76ED44A0
341DAF52E65C1FB38B5301B2116C44955C2915D4B7B798E25A751E3F95B9158E
480257B3D8DE09668BC0E0C89032CF57B92D032B79403597185A78357377ED04
7D4387CC832764DA0CA27776A840B928E69958AF7F47187325CF5736B6D210E2
B4D770AA627DED556CABD6821B208947830533D98A09B085A9B505BCE3C89C97
209AB149328CA761F1FA47CC3A1627783E583C4694CC3B885A9B432CA1EED6E0
73CDEB024293574D09699B1DC939EB99502D08CEC7C501CF19FF666C18208E7A
AEF442685AC00FA06BF2269045C5E72D99ED8A784C96D4C6AD58F18447490B82
EE282F80AC819391BCBBFFAFAF6A7C1E9445118A4FFC9EF58611F6368706B985
18421D46FDF14A38BEB5BC4CE60E47455DFD9579EB7B080B98EF87B4DE8A43A5
3183FB84BF7D21D8488356D638867F2C8B8482DE5D225621030D5ADD5C92A6FB
F7BB5FE7DA0DBFAC0AC42D6648D0EB9E24932E0690969588CD104BAE6C2525C3
D118F65FDA66747872A089954252EBF9539FDE59414463F5BEE529ADA12D7F2E
B242C9E0A08B2F5B4BD438CFF5B5E46335866102C4FA81FF7BD59683E91EE910
AFEAC5550A2318F548500474BC9CD072EABAB7EF7D108DD41849D4544FA91F2F
5522748C9514F66B5477146D9FF0D9B55021B67B0F3DD5A7B22B9F265407BF9B
CBE9DA162BD578583954540E3C10FEF0DE904F78F5D9DCAFF6655177EC3CB06C
28F332BB2B96525190CA68D573AE2E597FC6F6E229E96D8A28F152DF96091851
A300E5D8C9E4B325A6D8CC7B17D669EFC73CD12533E1FA05F1E4A7EBD0A46536
95E5136479A65905FD328E021294FBF578010CE0E61EB40E27E034DC75D53917
170A43C505CD552876A00653F01704F89609808E57CB966C2F0A5ED2DA72802D
074CE420593FFECCF79AF455CCB5502C3963B627A6D60FF613DDE4627DCF4A80
0EFC95EE79AEF69F64086E7747785D57AB4B9C46FB4FD99C1F9F8C264C2C12A1
D7655CDB7B91FD93C5A469611D9D4D5D6F523CC06F740E18F2FD4526E9612C68
43BA7316A9D77343EA55CD31DBDE324294451BF7C96B2D3A1DFDF5FD2D358A76
8CA63B0161E9EF74D06BC22D2A2ED8B4CBAFBE37BE6AE3A2351E4FBBA6B2B8EF
24DB45ADB54E4AE242F0B860C715CB71601AEC84DCC2971F4255B2FDB120E9D4
BC7AADF6A5F1DC9E10B570F06C2B39A08EF30C4ABEC5725EFB6EFEFB6D8A8823
7482C71821DF3187F21964DEA6BF5E58F99967EBAB9EFAA3D3B19819CC429EE7
62F810FCA2200004E38BBE54D707AB8F46CB92F25C87EA19A07A4F0A3DA7DB96
17621D0DB4775C6D5DF5818344B5D1567E7CFD49FD296F6B52821E8E975476F7
573366C1B6723E79A057266486BB2AC38819E3245DCC152662276A88C64D2264
CF9304AC8D8D78F70AFFEE9A35182C3F37946BB2DB6C251CBA5B7DD43CE2C8ED
36C8DFBAB0DC4E6FBFCB61D41FBDC0B5450DE3F1B2BD209667704915D5B76CFF
E80D54561FC11FB1DBC6535DF22D8F98CC0CD5B3413B676C7A1F1D0CDEB9F919
864792B64D2ACB13471E3FABC48437040563AEC3FF18E73E7C5E06FDF9AF908C
7E731F647895FCBF75FD8BE027314C6D18CD4165D35D68353E1FC66DD89C925C
7501D84A4D2C339BBB5AC0A8B346056A2042DA2E16326D57FB12D0A69C377DDE
8E0A988870386EC4B2BF4BFF78BDE32154F61D32E81119F481C03AFB3029ADCF
E368150F30A06055D652C4A25BD008BBAE1064E35927F218EB728E10405C9B5C
D875310966A97894234C2EDAE703F87C059C585A077E08370242CAF398196D21
257EE38B705C55F244598408D8E5F0E2489897F6ADE72B5E8BCB021E29FF39F2
5EBCA0E1DF3B85F290128766EB45D5B6ECADCF2B3E7E279FCECD3C4F67287FCF
9F750D3E8D24CF35E091D5A766642257D362CEA734E43C2204A9DFC05F16A050
7599FDF6181B667DCB4D53A568E306B5C6D7599B795CC318204689634BA4A9D8
C77ADEEDA5CA035D5DE0FA89953BF1A2C1CFF88F95DF3840FFAEDEE96041C363
2D5DBA0677F98DCC141075B747FA8C403923102DE05AFA98E4B8E42946FD2604
9EEE73DECABAA2BB9F7F4BE53ED96221FDB43445C5B1A32E5A86A71430F46399
1ED3DD8BB304DD76E084926807DED83F7EEE6346E47A5F4C265C40C95586105B
EA92B9F551BA702DBBF23B148C1AE999FB71D719B90EE338700A286AE686EEBC
AA0C47D584035A523CA05666A03A8761BE752F616ED849209909BE2E9BFA70B5
544B41C0FE765F2AF7855AC8CC7A32533616C408F98554683F6AFEF48547974E
03B7946FF93660731FF2A6E6232D4718CF89B68FF7F49E3A020263DD060D74FD
88BAD1812A811C916E150B522A7970DBD913908CFE5A47FD5B8595812793E00F
2F52D81A869B234178CB0388F71DD35D955A891D12B99A82F44F98617539399F
A0AD809EAB84AB603F534D1676F4369C3777644EB3F198E02B810AFFCB70B431
C0BB2A965AAEE6EDC31304ABF74F87EFB03C390CC00C30CBECD476F2D1AE034C
078C7820F0386AC1BCAC7AAE54D4B3F6412E5F16E576F42A6D8D27A25812DFCA
69174F73557188D3605094AB9CD19C1D6B18445D2791793D95F5A4AE004B6672
39B56D699DCAA0AA356E8C0158C79D58CDFD8508705EBF4A7A7E60C63217EC8C
5D3761C8B7491156EE31ACB36D6A3AA282631FBCA3F53E191954A6E0496BF65A
F9B97145990E893D88435D63CE8CB54B37655630FDC82C46406BE855A67938D9
EF2AE43C9015554ED9A00A9F47C668325DD03CF1E391BBE7B2A5437564694E86
9A281247FC417DD899844D46389A89C4155F3EE998AABE938429CA634CA4533E
A154B5C8117E16B4CE646431766ACB997174BD7CFE085A8C49B04D212E3A1E2B
621A90CDFE62555B0A2C4F05DD9838C5C2868C98B67097646ADE47FB239A441C
CDF67E63DAA20FBD9D6A7134AE601AB378DCE32D8A49AB56C8C376B55C10426C
6B50DD11C600E8330BE60B5916997BE1C72403824E7853289514EC6A3A3A3633
3761675005FF4FA0E81426D514A38BC018643058730A70A1C76CE93C051E13CE
1F6E84B4597EDCBEA066667F462489F96C58CDAFBD2F71CB87972088513A8E9C
9269A118A6A46873A176A8EC5C9F615650111085FADE67BD1AF73C1978E6ADD8
85B7054999E507808DFD404BEDFC737A8F67AC79555EE44D702277E641C59062
6CE99F2A70D8EDC02E955B176FE854832CB0AA469E44EED60714F18EE60E59A0
D741E384B329D591A3387548E5B6745FF4A5CB3CDACF1B884689858CBF928B1B
5580E77B1270019E3CB751B4D088D95D313429BDB8D300FFFEB8C51B57C5B704
D37E19D3CBFAE2062EA4FAF334AC79C6BDB696F9BA931D2557FBA64F1890C9CD
DA9A0824C92C77653E23B38B5C7B3BBCEA757ED8D9E8D30561EE8D84B77C8EBF
C881A40F4E6F05FD22182FA5224BA74AB53260CCC50CDD582EA7030063BC8EF4
1DAA0D6861C6587968A767404D60CC97D476775A06B9314B5EE2A46F83FD094B
BB2480BFD5CB7EA72F4FAE1FC098E501A42A1A15D18296A4BA5C2E55DF63C1C5
A5A08B94251A9019C9AA9EB9200BDBFD566A0DE3CD65E1419D96EA5F0D6EC848
B39BB6A043FB6D39D9B10A106F17B3A85ED8FAF19EF4A394A287932001FF4DBC
037FDEEC2B29DA7693BF3F8C25BAA0766E5922BBE0260A619B01C06304B7125A
57ABFECDF5F52456DABD05371F944BD226D4263EEEB61058C51E2F537E8BAA8E
DB383DEED4DFCFF453BACF4225F7101A027D588CC017890969D391FA8209DCFE
87C8265FD9F3BBC90596EFAA88AD8AE5C3E717002A0DE93A9353AAA147206523
4C63C498D75ED414DF02AE1AB4EAB93FDA1B4A6EE178FE43C103EB63B58F361C
226D49568FC6884418C2E6362616D02CF31590E5FC62921AF2B946B860B8E47A
40354F07B8B0680B90580D15269542DDBEBECDCE5D517689C27865C67CBC8176
CD21027240DF702B457F0DA714B3984149279B506DA8975D0AAAD7B87B3235EF
F80FD505A1343D300266D57A3B106E78D8BB50F226237804FB337194ABF18879
3C835ACC8BF51020AB4128BE86B52C3627D681DF9BE77958D3E81A470BDDC458
7F197C1A3A1F1F7E108E10A4479EBA67F2649DDD1C66A459E43228DC907975B3
B77F513E1F8CDC2763676A6EC0C35157AC198D73F8A238D3BEEAB6F9716247A9
F121A12E280C4CBE11EC8A301F81DDE88B2D64F60AED726D4253B5C98B986A35
A9B4892171B39C9422488636BF69838FE1C30AA4E5DEA8B43430B87B845BA3E6
41BFCD71BF742AEF580B568E71908038D3C019C17D22DB84BA3A935B52A97D5C
DB623D1E0A59B9CCCC90B8843B2DE606D06A7A138E2FFAB0707D077B4401DEC7
2AA2783527F80543FAEB0636E1F31B355FA49BE3FA0347CF20AB0F5E81E6D7C5
05738B7A2F0421AFDF8EF8BBEF1B06574A059805F36A29C8C3254D72C4928A31
B81562C117626CF42D20C652F1196EAF29E9DAE32D3C39C13CDB5C7B94FDEE5F
B3A93AA01DCA2A1FF4A14E4C4EBE129A29A063E1F043F38C1E3B0EC11204E340
66DC6BC041E7BA34C9BFAD7FD946EE771AFAC1155DB207143CADFF494FE85727
0508E0384C1A6123A48DB039AE4A67661AF43EFE9914296F95F7928141D3E540
3F10C8E8251CE187DEA453680727621490E5EFDC8491D8BEDA65812E9B7166EA
DD48DB8FB50D9F5293BB0EEEACFB5772DFA67C5DA7C09EC0AFC93110751B5C7C
0255C8EC6C143A6DEE1F9AA4A8F4EF5ACD55D67B0321619023C0A8E833F39724
6EA4F666B10A8B41A02053180966CDE5C5AAE04253AC243D4B23575DA9A30426
C506E35DAF65E32B17AEB32666DCD6594737FD845715D8D199E1ECC1EB5EA612
AA3E385D1EC21D1A94C9DB88C6A6255BB131FCDAFB5C84DC2E6F451976555C7C
467E2B52D2991F011A878BFA82234879B240CDD65E11367A8CB27952C3745B76
DC8DF61B80CF1C27FFF540BA9A56C190BF2C39ED926E8A89D6B762991BBC3AD6
8F4CD9B61C81BE88E2E31A242F8D77D18A0B884BE1C7D013B98F32ADAE3D3D3F
8B03A7FA9C0AAA74C574C323E8B43D864F549344813B8ADCCA509A7576D385D9
902687749F6B1B05B6FF5B30B86791999CABC1C9EE573B1CE4BC532C084C8198
B4F567B91B7E233D62644CABC44B91B5526D511E2A60E0B185CC20B511D3EFA6
33061C7F0254FD0BB7413FD5E2288839D78619D142AF661F7670D4C458861A20
074C2A4B60F5D86CA8A7CAC96C9B9A5A894D4347F1E55E05DFED354AE5CC0E55
B44F9D99050D44FF846625D4B99C117524D2CD641D8013E878EE3C5CF6B52F0F
1124DC2299DD4E92C9CCFE416F8FB3B918F65FDA66747877A32A2BD43CF2BC22
C933BF33A8DF426FF193765CC7CD9DBBD728AC3AEE83A494FAA20E9D7D74C7A2
BBC640B121340E436DDAEA683D36E07582AE4B0CD3C1C8F2B749EBC425682765
71E8BAAC625020B56DA1BEA9450F2409A43A7C679B55EF873167B0F308A0BA85
9BE9D8DD09F67334FD75F6A53AA50DBA9315884369E30CE27F0A8DB0E6B555EE
5EA7AD4D458BDF3DE1588EF47743D53361A221656D13AEB5ABFC58E1EBB9EA9F
CA0A8B2EA8E29055F08D65A28FCA5706D64F37B54E5A4A43C49354A996033C0C
67C9FC8F025364DBA86035CD24FE072996E1C117EA3E79D5DE96390DF4283E62
28178F4024C04AA6C643DB5351C504570286AF49CF5EC2606F5711AA0AC2EA49
7E7CA61E2DCF787235C03AB0DE80A4C537B4B2187C238B850E75EBEBCAA0A55E
A69AEE4EE82B1BEF02282E4D6DF1B748FDFEAC1DFF09ED8BD70CB01CFD3FE9C8
5F848D6C97F8B2A9260571C2F85447439393AC4BA9F286DB39F36AC8B30490A9
3B5A418D26482E4C9257CDF75D6CA4115A01DC1DB3743D46919FBF0F58790DB6
AA80698250F9CA5D9F14AECBD7A024D9D5180E5434DA916152F9389C61BE49BC
73684421F9F65A1E0E9915A591AA3CD97D615DCD1438F33F33AB3264B55E039E
ED99160E3E71E25F90678F006C0527F178815DA13BE391E92EC655F353F71F1E
5E7DF6B1BE634D96D53B6F27341D5946CEC7901209D120055ED807EF70EBD7EF
97A93AE4A672F5CD74B1385A2B2E1CA5CF16CF071F9096DEE8423B071054D266
E94B7DFB4AE3465778B83FCBDA79DC1D75700E2A00F8097D66B792A305330239
328466F7B2A862A0C162FF16ADC610133ED73EB87322DC2D78E2800247029538
766C1A7C54F22370CDAB8AAC408CEBEAE423C158E3B600935FD62F961D2A61C4
1E33E28FF735FEA2EA239712FA1A2048F7880BA5B30278217343004B10E08E63
63BAB6B2EEC15B1D1DE945308DD17D34B1C1D853203007F4E5A565067A0E48CD
62CEC8E59C637597F65A585471FD2528F9D51EDEB31497CFE81CF297FFE9D249
1E61E60409E5F572701A3C81695EA2C113B79DD759909821BB1F98BB121FD24A
9DB26A2DB1133168406D05055D1D08095EFC2423976AD71192454C09344DCB60
A818EE4D010BF1B02876E6D6D25F044DA8D3E5C0826541C257515E552E41C995
D1193353CD5CC9E6F7EBF70A7BFBE24123BA815A55C406F1EECB4AE82996E791
CE8681AB5B7E8EDCB9684A80C490B034C0E56A53FE2327EFA2D38CC6490327C0
CB3203CD72B382177BFD48F6EA6BE6529B2B2DB609270C7068EEDAF3CA2AAC7B
C3669C6E6C5B432D12D72CD153170CC28A340FD5DCBB933C5557F9DAB68E7DDA
D619987177B4B7694BE5BA08E4EE19A054C05BB54A92D0823CFA87D5849A44A8
838787FD0C0106F0C0B545E6D31DBF9732699451D7185366058EB798DCAE2E58
A73161A33D595DD347079E93B1997469D73A3C8DB4A5C0A922112381C573C141
31352911A8E501366A38AC8D3C98BEE16D7A70A534A354911091A948219FABC7
EE361DAE3BB9AE7D894731E425A8AF6BA344678423194F775297E471A52286D1
76AE201E5653259F2BC5D48DC7567583C04BB060E1CCBEFC1C8F9150139FB196
0A9A0959C2C5B6391D13C785FCA842118BAE4628F7B28D690ED90A19D908FC4B
81560F76BA32054540ADE4336E000C23B0CD4EC108EC9133574EF235F12630B1
9C7C547332EE7247D210D12070CF88189674416EB22DE09B2CC41FC74109E655
864AFB2B9D941570935753C6A71BA7F1D531DAF49D50E06914E0BCBA386E7F53
68BFCA0540486FC400B89EECE7441BCEAD8B4D39386A1D5D9C4CA87EB46A20C6
6F2E0777E715515BCAD914EC20ED06ED1D87B45D99AED16568322B10C298E741
BE11EC8A301F81DDE88B2D64F60AED726D42502294AEAC95F0175819F9093544
B0B016FBBA154893E510ED31334F5EA6031430DA318B5F7574358F420C629471
7BEE1D962D595A66A56AA252C3697DBF31F56FDF74944C26D6D1C18944722209
FB2799852507B6E9602F252E445594F4A184CAD549B4039B36E0A277C180BB57
501477FCCB384EA7D286D559494B3755B2CDC7B8C4FB8C6A24607EAC575445FA
62617A4D23CD88248D80DAC5D6BBD8B592853759F295C6775C2E8BC3655FFAED
9395336090B5E6C703F07F09F1718EDD9705212FB309A120B514A2CFE2ABF811
633C7830F8968216A8020143A79E7ACE9C23394335C147399E26E5DCE0C0D950
9A901964E7965213370FBC9BF561E2B34F82D6B25DD91BA99BB14305A1B3C00B
B90A535EC0A8D28C062CC8776E3806856534DD4B0BFC661B1ED5A75A8F4C08B0
7E73602F5B90EE7E6049AD189AAB5EA094768E6EE1E71071CEB3708ACC5120E4
2624216CDAA449FAD2D65966C31B945ACE0FD92FE494406B1DC9C0BA85D9BBD6
442D1587EDE8A02B3468665304CE3D06DF9D17C104C40B6137FB51CF93B57292
0711D3EF2266037A0E984BCBB5532A4F584E73A8890B53F2CA3B56A1667B76A9
DBCE70656E8FC216F34A0ACB995A3772C6B10908AF4076C6064208E8DAC85DE9
E60D960901FB604A468E9E653ECB102A6DA55A0A36A85CE279056BB145AEC800
2425FEA3B93C04A7312BDAF03E945242C007EBB2581323931B2625B5620BB74E
11796923A43293AC72E6A4F3D78803DC983A72F89F14B46EA2AA6D6D6DB9C65D
008734E19D4A63D976949A4BC08F2DC212081C2D5609C5E413D5CACF3EB82052
1BB1A65FE3DAF766019712B3CBE2F8DB017DE4BB1A5CBC8C60566CA1696B027B
D63DEF4707F6B103CCF5F46E2C45A0F058DE70A3C16FBE0F09E9FA8EE38D6F71
CBF0D019F1FAECC837D008A291A0A1B0D7A19A48FD424A052EDA61C28EDC9789
360F3E6968411296777BB303D919BA6CF8AB1E057BC47E8BBDEF4F5B09AA7C48
B11018026407F992B1B24094DCC927878A30F6DBA536EA084FEA4387B1F75812
8E2C348C03CAABF7DE2800F965CD0D254DFB8F64D1958D36E176376201D28652
D7EEA3132FFA2D593A2B7DBB1040A415E2A5267DEA859C1858BA0953429A9671
BD93C1549EE52BF6EE3BD147719573E349E813C0B33FDE5DCC8A2C4999B6176A
3B7FB6C6984B143DCCB098A6655E85FDDB485AF41D30885F3F577272ECE8A84C
FE8123EBAED7C02E42163F288160B62433AE75B63F1E2CEB2E71120543155638
A63AC1125A0BC191D15AC151FA1D6FC52B36036364C41E0BBA7FAA1E206564CC
22FB1EE50C9504B72AF53355D9935B45276B7F8D86DCE21837F10A94E39DB5DC
89B748C5240146D89EAB0D0C21D4FD29A5A93ACDF95B703DB195103FBDEED651
70909118300DE2015E104C6C7F1BB4B3432DFF5FEE52C8BE163ACA97C72B7598
B052AB49A506D806D6AA5760000FA3A3EB3B1952E9DA468B5307F5FCB1B388A0
44EED92BA7B4D7237301A3684BD2B168D0D96D1AC863B42891FAE98EFF797F49
FD30A1C99532E46987A8296904FB906512FFC0C463CD3FFD680FC5F03EF2BE33
6A17B8AF3E36642431B8FE049B8C12E31C912E067C325DEA095607FE542669F7
9808A1FB78D00E6F26DCE2B2E2451EDAD9605E0741F89CEF7C8845A209A890CF
DCB76630EAD914262AC2B361BC2B9AB2A7AD0D2111E7ACBE4B44F054F1CDC416
6672C7751821C8FEE0E6B3493097A13F54F701DB2D5FDAED816346496D56B11C
238E27B780030E307DED01F666C43AA45BED600CA623102C0E0517AE64A33FC3
70E2F4EA894BA9B0EF71E37CA1A23EBF45DEDA0B5E8F12980A3A106FFED525E6
869DE2087DAD75A0BF8C90A90C9133B17404EA8DFD80F7646C54D1F06FAE9CF6
C4242C8F190643869AE10693C34702F93E2557ACC7EEE0ACE99EDE98DEF39C1E
325272278754DB8F6632379761BD85FDA5ECA0248D3C84DAAD94B849855E8454
C359AEFA8EDC94869C2DA1971D88D4E3A796F3B2641C3E74AE946AAA94B7A676
6308328117E20F29A103DA1F87489F2C4F27C3D0C263A0279CC580AD7B0E6189
75D01482D256ADA74A69ABA69749B8749B8D87E13F89FA3BDA43E72EE8E34FE4
8C6B9BD1B2478DDD1048F815120AEA9D58B59C20F7279F38F2BF7BEBEF4EBFC6
247FDFA4498A4901D3B11F36C30FDF2B3904A6D968D66AF03D75F75A04DC4137
8E58BD33C60FDB1228C5AE59D11AA8E951E469957651C3347A79166558A2F125
6260697F69EC95D6B59D26806EA96366CA997736D0535B8B84B06624E906912B
D451026BCD5837A7D61E2C5687602B95CF2BA78D4DA9D15D9EF8824628E72B12
9E947AE74C3D19DE6FDDDF98F00220E3E51D33787E60D40592B50862F718C053
A9AF3616BBEABE387F0BBF649A6CFC87E1FCA5CB278AE2EDAC0D78CF96EF3E05
3C3ADE08B95255E2982983AEC5B52401C1571FF4FC6FE4D0D5BAAE8A4A40D364
806C33E8279D550A9F9807D5B62B597EF2230BDAB3F0069827964FFE52F99077
D9C6F4D42CF6A8D9DDC1A5F0B1B40F94618674221CF3E9F423DCEBADDF25C7F8
B7513EAADA2A5AD09AF790551052BBA0C4FE26255A375BBDD8B0A6E692AED72D
859CC4246148359FE463AA48DFEE13A96F761135A731AAB7FAA4888EB1CA3AF1
D26F559F1C974FC3B57F0BD9AC48238C0F8DCD316D1FB69F1998DB8BB2F0E7C1
560CC73B73B96E531280EF15EE526112B6D68770316B9203056C4A222D35B0A0
687A7D2E7C201092181A102AA7466F4C782417F1F5A3CCEF9CA571B176A8B0C4
E156F5DEE8E1D8CAE8DF94267EBE3A71BB2C0D0B98341339A575788EB9B9FC10
E93F143D8CD82C7220AF83DEAB9FAB3F289B12C13062BABE7FDBC524C89B8DEA
2EFF6FC7CA2E5038BA9DC6D30F5794A0C68BF7979E3B061252278EDBC7D2DEB1
6C44CD3488ADFC368E570964C90541AF905A7A2C27D3C8A228B5828459AC0FAE
7F4A952AFD71FEB4761A4C346D1DE154C9A6DE178D997C4BA8BF02DFB1434E76
D267BC150DD4BC50964D53722700F29EB7DB6F44792A94AF15331B25A5A209AE
4D5E3E980561C1E8675F28B8CDCA9DB93DF20A73330F249C4AFFEC04E13DC657
165D74E19C26FBCC8F08A7E6BBE95FF9D6AC6F9F84B98187D7CA60C2FB7B8513
AFA5E3180F5D300185CA33B259DC369293F26CC6CA76C8BD9973B27F8C913681
11E59292148193687A3206407F8F7FADB9DD790C4A6039BE95E584B929DE2FA5
277FB7EAEC4ACF83B9BB346C29F378BD5ABA4E4EFD6DAA3219E59D5333B86668
8385243BE2954FA556A2FC47BED49B3A22AD6979528F26851883A8BA9BAF4130
F33E0A960424B55DBDBF62006CFD932BF768D646A19811F1F0DD3FC911E40CC7
DDCF18CC799EB34FE0513744A690D95F97485E71E1526CE21094B1DEC82C6FBD
B2565C0A3D460518357DACBBDF11E2FC9DC757044322C232B4A0E4C9E8AA255D
350745EDF5C6DCB1836A57B85B5281F3B075D434A1F6FE4B671D315FEE3B55D5
BA2D39BD4EB7166D15F28FE03E4BA9F3EAE1A5E124BC964D3B3F793E1FD3DC21
59B3F54219A68301068DD7A1991F87F4D7177F486EEB413616376CBC741F1BB1
8F54537D120C8C83D91079238C1ED71F63668F43276F867D02786B5196CA29FA
216E4BB3A96AA3A4CB28EDF762FB11E88616E674912B25FAF7DBCCB9A303A5CF
26628E9036D78DAF4532D6459A89625571F57D7A6C2A694BA6B7078D6097DE99
5BDD213CC26F7796D136C544D522A4499885CD97DA54413F69034695563A1700
7DE10F38D601562F9A37EA43B9764B19C90D69181187218D75A36A3EBE8E8C8A
2300C024A894BC51C43FCB10FBB96B514057E210657C6E4B5B20EBE74BD32E74
80E1207329A645176E141355BDC164730C563E200F3949273CB83345E3AF7BE2
8D28D03A54A77C82DBC3A1341A52CEC9E47617273A116B842092EE2FCCC39DBE
C8BEEDA85DDFA8CEDBE3DB3F46673DB0C02BF8F95AB9B462F79771F5DDB909B9
F93990D1C283F4BB1CDE05BD619630C9371C9E75D0C7174C2C142FB206D485F2
2911E5A12FF0ACEF2A6F941375408E2913883B61EF3947163F0D951CF4308C56
BF0921CC8EEDB4D1A184304E027FBE74CD6752FCFE51C870A7FF461339D47F85
274C81C4927D1C6FE3A6AABD3D25BF68B920FB51D8627E51B7CDDCD4F267E880
4458E1BED7F0CFFD384546CD1FEB1ADB7696844CAFAB1A979DCC47ABD3F38718
0FCE2D2D92149D1B359AC51199DA2D3B64D1FDF723DBFB56F8750A9FE89FFD81
BA3F3EBEC4A051B97A55373EF32FF3056807A02417B4286B8EC0A9DA0DD12634
24CDB44DCD3DF0C8E8933035D7719680018F369F411BD6D2137124C83E8636B6
B99853B2ECE687C2612DFE0E9C01906B258BCB74E35B35F345A8F78F5959CDBA
E2D16CC5A9474DC3A022555B0FCC1413AC93C2E1D6566368654D577E87353122
4E4CA6C656B846A6F6CED68476E567425428E490F11B42B547827D64AD208766
89968E934B2CB963AA10FCBACBA7A4ED77EE16B18F0CFFBC62C7CDD60AAE9C4C
6EFBEB427DAD77371BA422A55E3E6843317599B4D1C895809AFC85E0D3DA7ECF
410AB3F3A01CA691486DDD4944987D3B348DD231B46F5A0EC0F1DADE5466C7BF
E105813E9E697E6754ED14471E0F99523BD250A78447FE8D818F03A96456E131
7F3EFD6DF5521BCD47A1B32447839664BD5D53079F75354C2B42726A514C2B16
68DC0B6354816002C8B0A80CD4EDB223C4E5C05E6A623156C97F8C103F792703
BE6A4D7BDC417FA4BCCEEC93DCFA6DE372C6BEECC0EEC066D6666BD19D43C471
5493D551613B2AFDAD8596AFAB078CCB0D68714FFD8BF8AFF2F1C42C7E54DEB3
8E8E94226F69A76A042527DF1F5C99D1B3FB555C6E792DA27E35F6039A5FE430
FEEA66AFE3853E559D6C4B772D3F911AFAF4E8E73843201222A5A45E8D19D4C4
866C8465A476A2DD251352DF4E42AA7D2F921273E53F193BB7CD251A7C19DE18
AAFA81ADE45A9D55EADB1C9C36C1EDC03ED9FDD8514842B56C1C9C3A84072B8E
0D25040116C26FC8D64157F26777194F0EA9B44085D1E2C18FB5777F3BF885B3
ED63C49C1F63C517E3AAFD7C699C99D05DA0C8CB485926763A6B5D3D8CE265CB
48BC8331A1572344FA5F776ECF782D69E716056F2107FD7130B3E4DF10D5569C
FEF5FF1AA68BE27C3D1B9FE19821D4178FA5B1D6FC01E897C40457B09A1F5CD3
566CD2B219232572DC70181BB0164A8500C19CC112EB606DE56B514AE2153E76
1B76EA573D33889AFB6F4E682FC1299FF759D42A2FDD6B8DEA4A57C3818E9E17
AE7B88DE6ACDF0F5627D4347562758F41167A8F1AB2ED8458A998EE0454C53BE
EBDD1364EE62CD254DE31AFAB84D05FA766EB7D640BFD083AB272590A17CFB39
9A0F73A403F52CD5043A8BB9B3195E004AF837EA7C01D4D8D22C0B61247A3D6A
A146362A7A509CC8DC059735492BC3DACC7634A72398FEE159A7BD1F28B94C1A
867738CA9C8B7130B5733A7851EE3C6848EDF68C44148B894469A6ABD800BDB2
0B98E3027C5C00D92989C940D7F81987B49F9BED16F7E8821C8E24B7DAE7057F
3025FEF6C72C38ECCC7A980691C69836AD8E947AF438A001618E14DA0687DE74
C6F755D8A398263E8C3AE5F22A007A5F489C8799330D2CF2C0BFDF7F5B2CDA58
FC77E8636310A51190D44DA17BB868F8B5469B4F6EE7EAF49999679515F00D8A
161E69E8726B0A8A5365C93A83BC87CACDFCC0347F873C6E7D45732A18EEA57E
0A9AFD4CAC42C7E061855719D8334240DAF782F46987BE974B04231FB6AA4DB9
8BAD4A0DC803AA761A7EB88E279912B60AE5A42548B9D302F06F7ACA4A5B5019
5E97C4990D3048BF43E741679FC6EE5E111D4D6293D9D71413962FB3ECA440BD
96D8705D505D74F714A1FBD67C618FE72019CBC742F4743E23A80856B8F50454
780A6163A701E3323098D6561CD465B036825A8BBBB66A3D7A1149A5837115FE
35114DB3B2BA271B07EA6EAE2B216397293F09AB08B7BCA23F602F13B2C626A1
56A4BC6C06975D0EDE06C60BEFC995CC28152D8A49E9D76CF5B5228198A1BC0A
902622AF4D835DB78589BCE4E361590549565E48CBD46682426033708CF4E642
760DBC512BFB4515D8BB33B7FDDAA8C80794D2FBC2C3A5EF2CDA44E32842B62B
28E068B7566780FE1F414C4C203C46D479F1361AF8C679027BCB990E85CFE2E9
A17FC6DD159F10E07C2500C58F20AEEABE2A0F5C5E8D96E8E8AE4CB8C59DB05C
DC0BC4618A62E7F2860EAFEFFC4C84B29128B7D7315237AC67AD877EEDD00FD4
4B49B8059AFDC7F470E48D271FC96DFDC2EB013672ABB228E88633C86C3D95DF
040E0950AA7BE34A4A44A74DD8AE4A4304FB73B1C2DF53F0D2C5E76D46370856
52BA05177840A9233144A053ABFCA3044A1F09938E9392DEF7597F03CA78B376
669748BD868FA658501A72704CECA305EB1415942E3756A040BAA220D4770E2E
CF4DB81AB7D69FBEE252F72C3DB35F0C15BE7C487BFFFD1004129241CC92361B
6A8058F9DD0EA72DDA25A75023ABCA88D3E224CEED7024A4CCA6CFF6FD14C886
90363229CF768A25E3419052EBA6AF0F8BFB822EA9B833569AFFFBBC97BDB431
32FB4ABBDEBCF58D72F4853B5D79D18171E54E5E85109E5E29F76EC0B615F7D3
CFBF97B6296E79F10652123D1C41D2C8C0237140CE208F498CD57B7CCBFCD20C
B7943070EDBBAEA79A978FB37A72F40CB422F8664D752DC5C7DCCECC2E6B498A
9DDA3008D30527DEDB700E87EE8B3EE8F4290C1CDCB69E7D2A81C7A22FAECD32
FF7D50743E5F17FB6003183C0AC01CB847593A4F5D49344518A16FF1F2A19A32
F6F7175CB488380BA7306EDCE2B85618D3BD849F87ACD856AE125E973EE8B3B2
DED07D31FE25937A1DDB0158305088E98BCAAA72E7E6F849CCE585EFF582065A
FF19F64CA46EEE204A6B5850BE8563391D8B8E9A78C39843C670D42C4919CA17
B7349108E65BEE529D07DE11900DB3AAF4E5326A33925E559720280D7EAB5C38
65398774391ED48AE06540BC708F41A2163669D68F1E5DF735CD13BA9B39684E
D0A2983A350DBFA5E0B728CB0825684D30C77C93D6EC49314E5CCC24540542E9
76CD653E84F0D1506CC82ECFCFB3D5AC4BA561C97D58958BE38416E2212DEBE1
303C5F774DBE9C8F4304E0C62AA9E7D6C0982BBBED6129B5BFA47176196E2AF7
8442FE42F75B80C6E4BB6E3E68FBA924D6F8D7A23B0EE95A7B391B4411100B00
DB4C780E71158979CA47B650C264106BACD445AFD0FEAEDD98746AADE8D8DE9E
A50303B5E7248176BC4471E83C7CB7B5D2E3DE4FE874373CFCD706B8FB344E54
1DAAC75EC3E1C40A9391D0CCB2E21231224030B645AD9B9BDEB7794941CC0553
E605485B2861D11FF0FE31ED3F4B3DB6C6176E3DC361360F1FA4355F47D78CFA
852E4E9D230BF460202F7B1D77C1F1A0E45DC06369DCD3FED00E9B3C70A6C519
6070212B76C2DB391242060BF1193BE2335E4D2DF38218A9FA8CC83AD27550E1
A583821281DC4BC0698FF9488ACECE4469941CCEADD4D947E212D7ECE9E05B91
9CFCA0D806AD0292B753B39858DEE4860AFEA87B37530CB678D12FCE12AF24F6
9D6F02CF9C7A7B2A7B157D488B602012AB5AD30A3BBCDC8160963F40BD28EE98
8FC5EAD38DF87826323DCEE09792A2B2C5F35C73FB579C64AF06F967305EA867
847FBE25017F97622572E9DEDB85287D59364C0ABC00656E03F0537742E368CD
D359AD5801CC7430822BAAF4C201612644A9A2D5D2510C6436A21C680EC932AC
96A09D7CD615AA92E27DD7B6AA041A9CB9EE214156B3DAE1D9A9ED5879CE5AE3
87A8D2525032427CDFE44C3D266AB96F888383F2546024CC733CE9B224365208
90DEE09EA54327F391D3110614F53F59ED0734DF60449710075384208254CBCD
B8BD59137BB0A820D54673D02B93CCBF875E4C5E6C4B72BB0079DAB5F772F646
86A3C3F5DA6C372C34A59B762F23B66FCAF6DCF79F8A6320003DBCB6EF05E61A
72FD502B9247F0F4D12E9B23EFE18BC68FE8F71589392F7009847685EED8EA5E
FFD8B904731FEE566E60E28D7EB777AB2E7E0710A9113A3E9521ABF7D3E82AD9
439195FAD1EE37F66C5F8899E5BDC8AE5A403EB2C965DBDA07E7D456B8A0064C
8F5AE6DB6F912B075D58BEA09BA508C58FB1777B38F48D3783137AE955170E99
49E5F9E718A1FA93F32E0AA32DC1C04CD6375A54FE9F8180251E40F70041FF45
1114CAAF89E691A69E820EFA3D5FDCAE50972FC58B2D59D1519BD640D4D18970
1CB49286868606B976A8B932DE797BFC4218F1DDB241869273662396BA63CD8C
4D452CF2C7684A14B05CA365C2D4A963EBC5E4BE24A06452883314F8DE89AF97
1978FF8C744EC5B62270AABD8E46493860C3AF5AF1ED58743046113E5C706480
6294DBF2F06DE52862F9F51BA165439F126A9B3D04F60218BD48CE4274DDF2AD
8BB14EFC05D4F5B31135FB052979C7C37063F47F9E6A1D736071CA29D4E0DA00
A26C5C21F386C1D575E7A5086481C7821F5BC6F67E26007646E52D795F90BFD0
81A59DA176D37776D818938FA425E2B72F310844E9DE492268724180818EE1E4
F550C84DE25AEB1DD8D3FA1D8327286FD401D2BCF60CF1C52E099F403B52D8CD
74BDAC6B3E9E6840FD839EC96D081CC4AF21EC265C187CF96908B280A5BDCE03
90F7D310A8A17ADAEAB698AC2BACE77A726957CD312C7E259C061EF025A46333
E55587A1179AF34C43CEA7BDC71D962FC6C648A57A9AEE8E3DFB7FC2183B0491
A0CDC1F3735F7757D50D3D593D1314975279EF446C1ED5F3B2BD6192121CA1A8
94EC825C59A6C0E78707A2948A59C432BEA574CDD9553F64D7A3DE865F70F408
4AE33C785601CC9738ED2D623686F01F23B18E628065CA113FBD5B09FCF3D446
9E861613D8665F402838157FF54D32BA35151ADD77C5C0D96F054EAA4E7DDFF3
60B243424E464A32DDB4E4ABAE746F97AE8C79ED5A47D4791406EB225FC749B5
22313DDF2148AFBD1D1F8A9C597383DB8AE64448C3A84C33C24AA1B537A399E9
FF85C2FD1CCF17C3CC58FD3F5093F01B397FBB2F7FE9103F175131921ED0FA50
D065F4E2F983D0B819D05C5378AB3C8C04837DE2D624AF32F74F189BF0EECFCA
8AC5683393889E83747B1FFE2A4DCCD45BAAC349DDBE3EB75A666DEA3B5E3A4B
140C69D791A35F7FB12A201F188DC3ED9B74A9A5A5B790CDE2ADE67FBF76B12D
78A5D1C04DE81FEB850188BB4A674B91D38C34747A7A9999C35FDFA174126B65
287728733AE0F6932D72B6721DE668C4F2FC046E62A415D1E408F8865B1F7927
F6067367B2751FAEFBED9452EB3D0B5A4155DFD73039264042491C432308AE15
60D9402B588A38F8A9CDF78C8C72006300F5FA8857131129E8B668D0EF7C3C5B
FFCBFF4FE8D305B381C272AB91A4CEE164BFE28444D46BA501B4E9044307F9BC
A3EA649253E9E72EE73B63E0E22684AA3B2C4DCA6D6DD0B4C41DA28EDAAB66B7
12666D0CAF3AD332846546CC2E721C542CC5C4A06C2C96468F8F264746BC2E3A
AD09ECE80DE041070330A10E805E58CAD65FA037FD6EA100D0031D176B45448E
EFD8A91111129943479C019D558F3A0F0D90804F99FEE983FA1974BF2E8A5A00
9537702E15924EB93E34A7C482EF8C8A3D6B76ED1BBAF7FE876B24C9154A2815
C0BFE4D9B90C4DCDF77064CD8681712D3B05C98A921297B4A7424EF86BFA78CF
48C046F2B62A7872A8CF5782A2A09957DF457450C87609976FD2C26FA9BF76D2
BF9FEE0A9B419BAE2BFE79D3941A873D69562479F21C6B400B81412AB718A352
1B43E36B5988C5B95DE76AC0832C1CCEC607E4664CD6941332E53D3016937204
FA37A0F034DDD6A0DBFD9C1049BCE1C24927FCA0442D93C6DCE34E2C981CBD24
6A454378801D1289D55F3A3C1D88E36595B8EF56B4E3B296CEE2BD659C6B91AC
CEBDB00CB064CABE25F59AD1718A0401D65D45F1B80C1325564323C8ABEDB36C
7143E1FC616E5B9A8C25691723F222E198BDCB795CE3A31302ADC65E108EED69
2D0E646C52C35315B1DF623A26BDE69B3B14D3DDACEA3BD1AD302D389623D96E
ACD0C21F9C720994F08EC2C589A9CF03EC6D7AE62E141B15F58E5E506A7DFA1B
244FCD6DAC39D78D028C24BAD96C42BFE30BBEBC11DAB52C14110630BE02F7D2
6625F4AEF0FDC399501646FF393D8B14CFFD954DE0094F139217E2FE30E0325F
845C96030C5E6C8934613EF28BCF493618A50B63CDBE00B179ED59BB3934F3F0
C4349136E62D7B742ADD8E9F63E651AC0CC86C1885F195BA845616533C8D77F4
BDE7547F1F15D043EEF3DECBD3B95C9DA909A219F2CCC05579EC1C8565347F6E
64D5253E65E7677D0E8B87E3C78E1D64C4D03E58B54A22B9D291CCD39D818BC2
BCA0B9761A4A06A965044E4EA4A12468ADA2BF58CD039A7430128A03A29CE805
88900B6BBDD5BAF0D5D8F5C2B8D5D66FF5D04DDAA83869617EB6910D2C7E0F9A
7E8B130B1C7EA6E88A18EB11533470D694FE5EBB4B95FC95B3AAE1A16A6B0853
968ECFDAA5BDA42BF969C6AAF0B4686C222048DB39D940CDADEC2A7E6BB18776
C0DA9045A54E0C4327C66EA9B7C84C898E6CE621D26C5F7B7C772454C95E2B5F
F2EF1DEF1792C625F600991CF7AE807C862E19404FF1402C76FDFF914FDB4A01
ECE98691AADA3DE65D684D7BF0197D9093D78CE8E5083DD63E13CDD78139253B
C44C342DA286A92A40E6992577E4A3633574674175668EFC9A11AFAD7983300C
E61E10B998E335F3F70A447BA7E110F1F9FC085C027B78CD02BD0DFD033559B9
3795C96EB85E63FF976950F27FFD4BAD52E8B8276A73FA926137016612777B1F
BC201AFAB8C1B7B1F223012445D05A38EDABAEEA88992CF30713C9F7BB667B2F
03D2EFB08FA67D8EA9401BDD4772EFC0D4984608F9710235F48FA2FF65205574
8A46BE4EFD664FDEAEE3AF27798515A94198D8E6F7DEA2776CBB60AFF599980B
6DA6397397A433C5CF63D24E774D3049D88E3D50212723D6D764854CF2F18B6E
6A471D3480AF8E3C70237E3E985B7953973D9F427C8FFCD4632203EEB2F3AECA
06AB204359D2094B952250C8F9BC06C24DC5C93073A031753A201D3ED6287D18
B26319650B28777A9A21B43A220C49731F232FE95D50B14DFFE246439F6C2543
1BE913F8658EA8C25F967C425B0778DCA7077CF94CAE7CEFF9B9FDD89A9AFC54
E0281604FF3C35245580512D471C0997F4EFCEE976DBB4464A1F4430ADD907E5
0C31BEA980CC204F240BAE69561AE3BD32CC569E666248658ED3652136FA6FC5
00D8001A8337D70239D089987419C5655F2B7474635ADFEE2BE249DE80A11C1D
46A611D768C152A369A3BB168EE870BB0150213F9A4295D426FF3767F05BBD5F
7DD0BE8FB7419BD61E5BE44324021D0E37B96926018AD9463BEF3D526B89BCEF
0128B34589FAADB685B25769AC51630BBFB00E0F3B97F1BE102B8154AFAA0669
BF75CD5E3AD5383D8B20342D1E733792A0CA8569AA804ED79627134412F64058
44F7B4C460450652EF5F25B19A2F3A7C888AE86507D88FC31585A83D2386F231
11682756611C40380C4C58EB7A2AF639F053703D0D7D11811C06EA10C8799361
37F2FDF71FC63B46636BB1625CA993F77C1240B3D78D2604A65B45221E14A373
7203A314E589A5DA5EBED74B8059A8BEF7554BFCB0CA882BB3AC385D994132D5
58E76D527B7CC0338862A4BD1F62F033E7060B73B67C047D9C92397FF0A86377
21202E651293669CDE554CA76F03C633A9ABF810B8081091A8D72BC510333390
89DD186AAE9D00A0E90305C1D93421414FE2879AB140880C5087084295F23C6F
C63D86D41C66187BDB1CA934B1F49C572B6198B9DD15ABB5D1693499DECFFF21
D79336D47A70F41E3E486067DBE177C16D2171E05C84462DF114856B5D4FC766
CCD57053B222A8CB8389B35F88E2AD27A19817C7350970B5ABF27C18B9844252
A303C6A171825A19547595DD1F83A48B5F4A86DA839184B2D014F8C393E7D6C9
20CA49DA3DC1C210B386808F89EDDE8434F3E8EEE9D22473957AA8C06983D8D7
88AB5163C2D304F16300262A51927B850D6A0459E9FB3BB9DAAADFF407E11378
F694A053F024DC4EFC2C86070C540C1F29E8213841ACC0077858DC5053285DED
9A7CA43EF2D7FB1DAA060E1689BEB926DD42C53739FFF3E60BEB0B509E8AAF17
15F85526495EF3332C0284EEAC399F003856EC31331967EA267FB89109CEEFEE
2B2E7763BEC7E0AB4A126921EF78B769ABDC902BD2C3186D73C5115351426054
ACB7118FDF714A30E2A20B2E64E98E3970CD7E0ED511F395F155AAF4D02E87E4
7A18EFE5A2C323DEDFCAC21214603B444F02418CA2FEDBC378D6B50722F74CBD
BCEC3549F3BE98BA1CC9B7E3812EADEE3CEB5A706B17EBF5ECE8D6B9F9225F85
509E6E874EDF49924D081C506D9250BF2026D692BA1E8B36DCDA7209027C6504
B0E4E093E490EE1C381186ADAB61FCBD4EB6BED46A54B78941FF86F8F7BB543C
1D3FF8D5FBBD8F73DB147690548EE085FEEAED3F4748C50F41EC09B2A9363F86
48583343955AE52C1A2585CE1BDB04DD8265F7C5D400B3893AFA16B213009C11
F8F014AE9DF9DEFDAFA0438E0EE78C0F607C379F04622DB482E25AEBE6F75208
28F112AE6B276CD56261266F888074F91E8323F8DFF62CA5BD0693FDC55553F7
15D68DEC9B62764BE76ED642638A11594F2061BD19DC00D902D5F9A33416D9BA
67F1A73A468732019D3D90AEA32B24842D444C750169A2EEEC30928C4A458A91
6DE464E0A78A26970A7F492612B9BDBDCFF8C20B11E576E121F636A08121ACE1
F4F6DB270E6485B4F3C5FB4B823A5AF3093362D201F8E1E0C982A091D82BB395
A0C10CF3A4A962D0E39A350D13A43DB8FD03B631A2A2B3A5B1EEBAFED199FBEB
41C5A220BBAD61EB6F905C243D510909DE0F43C05D1ED8B3F71F83731E7E7396
2550E0FA4C218D6C566A8B0A484277CB45D5B3991F408F22F24F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 96 /lscript put
dup 181 /theta put
dup 188 /pi put
dup 193 /phi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC1EDF388B813093984FC653EAE2FF2DB66CBB224FBC82792DF3FB4079CBD
D733D6D49EDF9E2DCD9DE0EB684D4C5B6D7F3885E9C40DA67C04412F6CFD3521
BCC425AC9484A4A95B78EACAA2797AB58B38A5CDFEA4E25BEE707161B0444755
52FBC5C4A8CEC877DF9A6C518175212C74E1EC2B4551ABD8AE83FCFB3BD159C7
3569A93B9D1F8DEFB980018F369F4720B92014405AD0EF2B7E4FB2E203561018
F0CE736461D2BFEEF8BFD513B0380993B8D52A6546D6921A1B884CABA6261D56
0571CACB5F15D022A847255638493156301A8EB7277801B6E41841E2DE908535
2848F0D8B554898FE557F69574567035ACECBD472DBFB9F42CB40A63BBEC54EC
63CCB18E93BC17C32CCD3CBABB682FE69863D29863BC86FF201FAFEFEC05E955
74AFAA473759440CB93D25CEA7D30F5F172527DC0536502358BACF8910AF5801
2C56EEE0E6467948614049610CA704337A94DB0F71FA477269474F88D5A94ACE
249E4FF15785DC708C5E74B13618080511E463091E2AE2CAD52A798964541489
F5578711E664155968122528EC2703E4813D38B6E42113EC9D9F26C400FB88A1
4EEEAA4DB238CAA5F8F66EBA3234EF9CF20266F143207E39A3725C0CA6DBCBDC
079AE113F49EBDC14E35D06B65B8667EFB915F13899624F2FBEDCD280B70F3D1
9028ED61F465952C03E888D24F3638F2145CD92B22694005F52FC0F3B954308F
21CBBDD8B5DD97819136496D693870E6DE6759FEC659D5013DE235037B087B9E
86D633CFD7C4487760EFB8DAF678D0600445D4890F086978E9AC98D216BCB669
2D47CD5D06DDDD2215C40B6AE0C022FE5E5A5C91F3957C55027778D3A7592919
7B6E9AE8B3E79959F6AB340E06313A90569BC49A48F86466914EF7C9288405A3
0D134CB908638371E5C396352BC16A2D26D032603049787AC7BF6C858A8578EE
F1ADBF7C4BBA83AAA751EA858AD85B72637837736A872920A4B6F76E98C3A7E1
6F35CCC5620A668BC20250D9CA908D02111BA3FE577522F44A3B9F917C9FFCDF
887620BD212781926395BE1D1499E9D9F802FF93FE951E105561A62BD2617741
893A00AFD6EBBEF5D1B27A95974B3F917199411C86B6E16E5F6F3FA5719BB467
6517067D44742ED74CB06AB564DE56E43CFB65CBBAEA21AA9D8090238B071915
87FBD4A81FF5F52743DC2A92B261C45AAE0A2E33233F3E9D6A2C90E6EE6B70DC
2E1AEA7D710C51016EC010BFB287C42F51AB8E95E3B347C99A40BAFA49CC3C00
98E3BEAD95A4BB562A0EF92358FFF9D5C3CA1A9C018E421E45E5271722FA7AEE
A258644BD633871DDF588C3AB06CAABCAED14017E6DD8BB44A106BF0E768C6A3
1B940FCA8757A5EF5F8AB2C23CBADB611357686C28944D6F94634DF38FFFCC46
C72315CBEBA61454EBB8F0B02D917D1CBD7F9B80DEF46A33493071A456F7EE84
08D7FACEA77387379529354622175C2A3E06F025BA141E2D7068E25CAA10F87C
54B6D17206BA3C03344C78183F804C44E2B4953158611CF9B67284F8F1DAF1FA
039E88475206D69AB470296B67AB790C1449ABFAB4CA8CD6F57E736AE587F5D4
79BEE59ADFE815F0FAD4BF1AA4D16182EC19DB61EFD149F0DB005B50D88CC017
8D944533C8E3FEA1961DEAF919EB95FB141CD0E829615374616C2606CF22B108
299A17FD41ED79A603DD78AA67E1AC722347C4349F76F6A3B32361AD0AF145EA
88C73366841FD1FA73C0CBEDF503
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7B9C1BC1
4A4900169BBA8D40165ECCD95F30CC2092FBD829946232BC4DE9E89FBAD3CFF6
2F1FF73D0D74B9F6EE78EF1B5256746074600486B21F5E5803BBEAD89B77291C
9808EFEF9BE51940D1558297BD0A111E399812A73B944D727A4F7649B7D8DCA9
59C2AEBDD02287FC0C1672094C8AB5763459631C097E3F6CD2ACD95BBF413D8D
505D003420974BF2C37603AFE15349F2888A630B27F0B1CD38343C9904E055EE
DECB39C4D4751525415F804E4954BEF10A221369647AC0C349F7C1D82CBE2E63
184C8945FBE4998EADBB12AC0BA187113E851B1B1B47BC8C45B40AE4FA456390
89A7BF7A14C902F6D7ADC9D7DDFF1716B64996794CA24D2A9902C78A682545A7
A1E828E340CBC679E750E1C0F42C58C912E9509A711B7E4899C8836530F63C88
22E82DE68C52BD9DE43E59097D8E70DA29237CEB7BFF4558AE8A0A3896238651
3B071C94A9BB435EF621DA5EF92CF7C752C8DD03D861C58C2E0223A9475DE6D1
F93154367A16A84DE4E6FD1D06CFCACB1D1484D939BCAA80B78A6BF42C5506FD
D9EB3A74B945666201B2EC9FE90060E17CB920C0D7B83014871D2873DE46F897
83F35683A6A193CFC080B90338CECA16CCD8CA8FF6E553EE7B4394A8B1DBF258
53D51A358C541240AF0FADD007433D7D2D3BFDA747BC3C61D396268E5F37F942
99275952CF7EE0F2D2EE8B87FB4B542FA01EA63750CDB6858004B3F72ABA1E31
E835743813DA86FF010ED1273286A581DA2405A136BE0F9A0F84507C14BABDD0
0AA3EC1EB3D426D8836BE7C0BCA7616799AA13235F0FFC6E25FD3D6ABBAEB4C5
A5264EFF923E647D9CD15AC67C705234BEBB338714C514E82A78D0E0B382CDBB
E8977A8EFACE2D319908473A4B85861F6CE3485B948D1DEA3D3EF2609F7792E8
8DB5AAFB31DC3CE7E1EF1C9B9536B3C5BF838462652174C182
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 41 /bracerightBigg put
dup 112 /radicalbig put
dup 113 /radicalBig put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 161 /parenleftbig put
dup 162 /parenrightbig put
dup 176 /vextenddouble put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
dup 181 /parenleftbigg put
dup 182 /parenrightbigg put
dup 190 /bracerightbigg put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B286886CE534D6C5FD912099
3A92B663224BA680BB6D7ADA2F0D0A2E70E3B183C5952EFD288BB1F787B9E558
AAC41DEDA6E48A8951959336D5914E24F5CD5535C3E56A8EB5794980739133DF
DC62B7FCB563829ADE6CC1D269EB8BF7FB2277C78855BF64EC9BF694D1E7BA89
629CD8492171048BBC3627CC127B35D443B9E4987D71518DB6784756393CE1C1
B41B3B7C3CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E0D47F4F435F098D34
6360D280B813A8BEA26BEBE94936A45983041115DB80EE611AE48CE6F570493D
30555065F649FE81E6B3B1E8D0ECC21206BB80BCFF38644B56D900C34AF2FEA3
57492A2DDB2FF3385AC8D35003E3E298B9771E1C2F962C2514671FBE467C5709
53BFB729938208E4B057BACB5B06F67DE30CACDBCAA3805BE7AA8732F1E173EE
5C8F074CB7052C8103BD160BD12FA04C8A68652228620D2FCF04A137B98960C9
C56E4D4A289B0FAB6426CC72060175B77DC970107833484674F87E25FF5D8E83
1EB01245DD5EA9C4865FEFB3D2C93D061812400C2F5BC1E1A1E7389DE4808E61
20C9A6ECDB5C9BA2B9A441DA122921AE690A11BE0C3F9CF0F3B9E559727DD530
8332B7A2261A529E5A19177BBF30C4399A266CE0B3208E7F3A8A96C83F76ECD2
882B91FCF7E694BBEA02488CBF10A57518BDE41D6377CFFC482C0214FC121131
5D0D6501CFBE7E0A995FE1F23ED1AE1984D78EF2399E862A20FA66812873FEAA
F44747FEFC5918EE391ACC2EBE58CCE03A260F2E92C7807C74EFED2B132A2915
E0454C2ACD6D7EAC386165819C19C75470FB635CB7271D8A2DB88965B8D22AB0
4A724DED273BA060E797C1BB73CF35BCFC3ADB587959D05FAC426FA4A439A7AE
A497F13E68160AE0D42A628E9CEC9E0B59788EB9B9FC10E4245E1F1A6B012114
F6CC526A2939FAFB6C30A399FAE5E0F97FC9B58B6A605314F854A16AC3011DA8
D144B6C814E2F47D48B84F12297AF2D267279A477BC4EC6AFFE3CDE50F7693D5
A4D6BF6BA810B780AD3D7817E986BA77EC41DBACE2826B07DD73D336E5B30DA5
1C210B2B158F31ADAC46B63CC00BEED35638A2E8173445CC09C9417A6D014C32
D1DA4DC02F8945783A3F7CAF0E5640EF885679B52176D5050CC74FE61207B161
E6F39D416B32570E543C37DF2901B611D9294AA5AE9F030772112A25AF16F681
50C378455FDD227E63F22FE0609FA7DF61DB5F15EC186975859E069F70F7D46D
F7F488AE0EDFB11A5257D782C58A59C0F4400503EFB9FEE2EFF78049A3C48F0C
04268D0CFE36B7DE1C27CA6370225085EFD5B0DCB80A1431FA4C9142B0368AFD
3110CEB50ED276FA78B4D384FF8D39CEDEAEEFD4AC9D0810AA85FC712ECE17FC
EFAA298D9825EFB4CB96DEBD076BAB1051616156988E5FFB15923C6B46C57CA3
B136118A7642C3C74BA5ACE4F6B8CE4C28D54A4C88190BB89AC5223FAEE8CFD4
D10CEB9D2168925AA902EB249AD43B82E4FC4C8A13C87EDA441F75211F9A17B6
FD37524D3CE6EE3E785516D1B3A1911F7A23439B0BC5AA095D6677C836A77C13
3BD85337C26E4F7848DCEBCCC5F709ECC3966D194A7E62BD698DD5679E6E2385
E74AED8004E9B536B8FD359840D013167A91CB913179DC122257EA0F5A40C8ED
6E12B65A00A073D791A0E6EFE04C124AED93CDAF096CA364D8F86D069BAFFAC3
CFC7972354D7FE14B278B5523684EDF2BB0F06A96A961A778E1BD6CA3B56438A
51353F490E9F13D343410BE2F34A3FC3B846C36D4479562B9E6C825D6CE88E9B
045894DC10B68326A69F9BCE3A1112CCEC7FAE1C6D1E38504DA25C13D5AB71CA
01DB5DC73ABF800D29C488E71EBDEC95DD9EA596F871ECD2B7672B2E2C1C5374
35F58AAE064545BCCF19F1854DC30F29F5A09E6ECEE60D32D88CEF6F26372891
1C1B5229300F836C69D43C504891B7FE2246A40C72E59705A29002751DD3812E
4AF609B0426006145FB04D76CE28EEF5C8E657AD491B97086FDDA0B5A8EBD1B1
78B764D2C8CA1036C2EEEDBF8E0C2ADA978CB95F974CE4691DAF94C78EB8519B
A19E0DBA8EEB14038DA9DB915782FFC1E792EA4945384BB765AC4D2DDEC40AAD
F05EA874448AE5CAD68BD56F997A2D7377195176EEAA09FB91DD3527B8B50A87
6347D5F9C5DF506A54B351E9E013BDDBAEC83B6294A42CCDC17ACD440485704E
F8D939B5DDEC74738B988200B32D42122459718EED890E4B6F300C38BA62EEFD
3159953D4E453F12E210E8495057AEB3AEE7BFCEAF60DD349D5C231BD824C6A7
9DB172ACC6A0A5E477E33906F19D011620052DF82DA0FE4178C1447710C2FEE2
9C82A6CFD29D8A846D744AE36CED11C0A9E39972BAA2A06A12CB73D65981E5C1
87DD331C258F0094CA4C8845394670F0163756388A079D37BC282205BB52B312
B1422C44DE8FDCC1C794606300ABC9365F4FDBA3FAEE19845E26E2797372BA8D
590B6E50BF3F0DD4F73E9F38F7DA76DBE5C51498766322716BAB6C98FF1915AB
20AF7510376BA5CB3E7DB9BE861885FF8274FF001A1DEC47C6AD5E4ACDC538C4
B8248ED4304FBE7CDC271B4C6905CFCE775FBE0813FDEA29D0D31E749895F8DE
00A1F0ED4CD157C7299D0239A9C82D1915AB177E041F944D191CD38096D63C47
1C190BCBEF9FDAC5CC0E22541660CDED6139837A1FF4350BEEB8112D469DF3F0
D076303F7587F42147756F6BE8CA7A13E5CB0FAC3DA10A1073D8EF5C14798AC8
0A3CC9EA93457FAA8AB898B2912EFAB850CF099E005BF5132B5B5D0C92D38594
1388E224C5D9DF9C79F8EB3BE9C25268AFEE6D07923F8C9B48BCB11281FBC315
ACBA8CC4D1209148627D5DC61A4FFE259EECF10F7128E88B2F086B0C8EB30E31
4BD3270379594617A984FCB7408811593D5AC155DF28F5750116B350E80359B7
00225DE3CF241A1A7D27EEE3AED08505C4AFE9DC1F61B528E8EF6B6500DD51D2
8A036EE401CBBD310C48BCE1FA5A770F033BB56B747FE330B69D218CF47926BD
A71333D1DEF1F99F67BF4CF3E7B025781605B9640153F207742D00BAF00FFCDB
A30CDD400D3C5FE451045638F519DB3DE1A86927F097DBA51836C3785D46A342
D6D7B7F03D037F1A9DC389035532CE822663DA97616F351B8DFFB7FEE0F8F3DE
E65D2EE43A0A03D88EDB8E48489F157380D93C33C4B4DB526D9F2436A800CDE7
0B45A6DA2591434291AC933D51FEA261B7BB0BB53ED9A33D39BC436D9FE6C02F
6148E87AF5C3F68D277F7861587796CA8A6695CBFAB2AFB12CBFC981E7A2A090
6FA8F23285066B64BB785632E3FBAA44AC1D85133322A893F83D5AB3AD5F2BF3
193E605C34BD7FFA0B2D55BAF3B152065AF210AD21818F9E0BB24E1F3EF420AC
9D0C806794FFB00B3B59983E4446B3F8ECD902DA981891608AC52A29293F0BE7
97C74EFE2704950DB44B70F3A999DBF34FA527913FD2F027BD23EFCC4FDCFD11
B81BE10A71B30E3221A5E8BD3D8AFD4B2D24105B15B7B882FFDCF3F8E5982186
E3AC19A52289752DB619247B328022A35B3C9AE740D969068F940FB427EF0AB4
65A5785D118041CC724DAFFBD4E8698A7BCAFB36DA8456CC8FFD4FEE6C7354A9
344AA61D63246EAD064FFEABC2B4F7FB991D6B461556DDB267A3B6A19439E6FE
66A16493779A8513C8E9E8DF2146FF31CAA6724B0E6BD56F9281C0183B69F8D4
BE80705E85DACF5B8A14AC945B500163B32A1A6C6DDDE356ED4190E1A4A09368
EDDE5EA0133890903C60869AAA53E1EE726CD1CC04CD13686B7B8859D8E863CD
027CDF3427F3A1FF0908277FAA8E87E00F3D64D3D3A47C9E5B4BD3AFE25CE260
BA5169650A49C36E12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D47BE08ED6CE96278050BA67680A3B973613647
A93FAEC756FC253B3693FA2D6491B276EF45751EFB306961788E7C15297A5822
AFC5A2DABD0DBBFF0BE135267EA6B9D1B4E4760ED14895FFE1F8C3F564830001
EFA901B8442BD2D98561BAB9A0FD939E0F856E4D2EB04A9A4496704109B8A84C
EA06AB0999427B3B1BE776004AE906D0F22159C051D88CF573A0255D99B56781
CF326CD11919AA40B096769CD6D0ADF3ACEC7957621084ACF21AF1F265416628
86B67FCBDE9370D4F5C6F5CC67EBB0A2727E074090DBCA459AFA1A4778AED4C9
AE5400775223E684BFCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /a0 put
dup 1 /a1 put
dup 3 /a3 put
dup 8 /a8 put
dup 19 /a19 put
dup 24 /a24 put
dup 26 /a26 put
dup 40 /a40 put
dup 65 /a65 put
dup 67 /a67 put
dup 83 /a83 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26F87A2D962A4B4F385DDAE01
08FA1128BEC3C5C7CFE44F545DB4D47458F156E9EAC6EC03071C48E803B3F6BD
82EC1423B7C34CDDE9C577433F1C341D02F22D91A94A03AD5E49DAE414F444AA
0F4354783F96A82D6D0DA26F7B3450EED7F3C71DE5567FE41E13EBC781064CA6
2E9F8016920F08A3DFD779299D1FF6860C9F4998043DD974E4589A06FBDDC408
1F7AD7561B2DDAE18BDF2381C19FEDBBD5DD6EFE2B3839EF0969782164434CA1
112ED571D8903F82D9467266900DBBC56948C9ECF29F191DA94564F7629D6D5A
7FB912252AA32047509F0ADBCAC269D90D21B6267482DA41318B845DC8D1B806
B8B9D4990080BF54C81E36A318B451524138EF7B689213BB0A4EEC25D7D21174
B7D93A5F7EB09AC479ABE778278F1BDEBD5918356AE17ECBA85DAD52985DAA45
786E41635856E12F8BE3ACE0A5D315496ABDA253607D6CA1DBA9C1BF02203A0E
4D7622DDBF9F3E714B49D2D8351472EED64C7C27554D656765A71B8792D44D95
743A28653D640F274D887CB4899C69966C98DB1738EB6A2B15A637F0599BBF2F
E42659C2559E5FE935BB6AA3E13FE0A7615F21B1F2C79323BD99F2B22C76FBA7
875D811D802F8976D475D46F6DC447ACAEE5C672E39986FE0AC2B612088B7B09
CD3B79F6EAF2AA24715FF2AEB37E7E429226B306C0CBC0032BDFFF8F945A943C
462B9305E0C18FAC95A61855B805E237CB34BA182DE0CDDDB707FE6D8DA0AB1B
E534E874DE47A619439DB739909F3C5BBD2FF054FEA3C549E19A6EE24C17120B
DA52C79841CED04A860A737E9155A3F6DD79E69DD64A2040EF751C817B59657E
F65729BF391D58C198DC3487708AED507FF4553134DD114BE13D03381C425672
D52ED7DF593D61AAF973165EC8BBF180A8F49EEEDB49CB7EF1BFC2A052D3A7FC
32856639FB3DB41085DF35B577115A10C1E67742753B66BCC408415B542CDA94
8D43CA83DA50968228D9FF5C4B88A8C1E44DBA5E03144DCB9D160F1C2674A337
99D980CAE48257CE92DA001E184E5142A312E86B273DA83DE6D149DF4B528E82
45603A08ED7CB627187E6D8123EA81B4ECC24EBB4A71D26C9E0F0C3976F6F0ED
54C7B1EF17FD370154B270FA7C180D3C949943FA1B2BB7C82937BD2B466DE0A8
A0430053D236A57311043D17A220CF2023FC3A1A62163D3979C6F43FC7982CDC
DA75135EC7A39E791BCB32653F51ECDEE1942019A4017F31F7B91923F0516272
F4BB5ED5DAA9FAC00CBFF9CB7E7E9A6063A3EC0ACE05EC8B444F2FD2192D8036
207E19A967642500FB58ECACAEE979AE51F4BAE57068D8D8DAC8277AE2AC3D7D
33729927BE422168C06AE2677CAF41EEFB3395036FECA779656EA26EBAF34D26
3FD11BD09BDC0C9F41783022D5AF576CBB6C8B72798837DDF688513C397A3485
DD7D4574201B29E352322ED6277C58EB68BE27D156A5B9CAD20C17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Fourier-Math-Letters
%!PS-AdobeFont-1.0: Fourier-Math-Letters 001.004
%%CreationDate: Sat Oct 30 17:27:29 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 162 /Delta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -247 972 755} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
72A7B8AEA5D41576411085046EB76258673C5CF40021E812997FA677D59CE155
7C55D36F8B6501F00808AEE2A8934EF6E7DF27A6D20490B6AD5EE97365B26935
6D798248ACD56BE774DE447B7979B08E595DB252D6EAC137A081AB9E002A195F
08D19ABEE28C95E9EB56094AACD6A73761A3E376674258165DCB3565F51AAE71
E9E3BEA4BB485DF2A75CD2A4335B926A3CFA77EC6765989F03A680DA1A20D708
470FD9A1DB35B2C937E5FD9AA6266283CD76E05138D55F0932678F1088EF5E7D
EFA66BBBECD836DE750970D76D32957258C0B88132232100F446B1885E4E29EA
B8959844D652017B77C98E7ED6D7FC65E1A01EB35DC733347DA3B63F9ACE67A6
975D81865DC92F610E531602C57AF9FCAB91E2EB7A5A39DD2EF594A1E2E5570B
896D14CC26EB1A42F74F76F2231DD03A6824AA2D1005943DDAF2910597A36559
E4BD2F9380A95F7FE63996A81EBBD94329601C7B1DC913319E879728A46CC916
CCC5A010A86E5C572AB48BC20494C889CCAA475A1782731922CAB36A7EE9AFD9
7CEA3215DD9F8FC10F8D4C3F94311A56C45FFD85FB0A91F315F33490242094D2
1996C1071EAEBA4792B29201666254BF49CB393ED233BC236B6BD7617A918696
D74A776613FB94DBD590A7893CA7FE1606C576DEB3E4D7DF25A7A5FE84A8DFD0
9BF199780DBAA1832D07BFBACCB7B8E9DDA897665613728537094E1E8933F961
EBB5ED1BFA4EE2856B8982377719ECF1D7B187015A90CA694AE0ECB4E32BB9E6
AB395207397C971034AD10D252B419D2C1D8841ED02492B3F2A9D73EFF9C12AE
9F92D8858A5ACAB071F8E0ADBE0794A62FB244F098A3940C82C391F0326B9F50
39B18EBFD2C105167F452AF2841C1AA728F941530ECE5D9C861EC8569D27AEC9
D0C1990DC37113A33454016B20B867FC61B8801E168543797ECDB84855FE5930
BD9570ED61C24D94BB8BC0A27D0FD6A910E2FA78B2A058EA51951A2CBED99275
6972251698C73A94D57FCB838710383EEBEFCEDFA674184AB0138C55F58EE708
2FC4949E9D4DFAD13E3543B67052CD04D314DB659DD45AE9EEE8E188190A0FFF
328F448B24D2B1B028D29F838A52A9CBCC9086AB4D09E359B41CF74AED5B75C0
1085ED28E722B7CB9131013B77B216FE145E5E49AF9C37C2B2F371B1559D8BEB
245FFAA7955250F08E8F5069A6EC77FD3EEFDC15E662E4E766AE5F6AD0EDD28F
3A7F53DB8790493D8EC144A3C3B1586B501DC98F5451F815FF783CDE0A5A0B34
5E8350B8F483C8FE939C71DD0FF87700CE95F21C4C1C9C326172364A0C3D6EC3
8928BFBF73E85DA1EF9EB934479F0419EF52FEC5FF841305A8927C1BDC558808
B1AADE9680499B21830A38C7B58AF68CFECB09313F5745B02B4BB60F1DF993BD
3A75A2F670122E4593F79A14185F16340F67B8F9BD9F4C10B1CA1196BC062E04
A4E5BDC058475F8331F31E58AF3A560C46F0F9A0A0E9FA210EE25DA7A7BF3103
A69A69CDC3FD3C02304CF8B73656C4128FA56827DD7392D7A101E273541B8FFD
8A9F88AF4511A0614101B04CBDDA982E68D06BEF3405EEEAF0EEB7B2AB63CD47
F5B92B2B648967423CFAAB98D4F6646BE196A30A2E76058489FB52C989ED0DF3
B9E74B76D3B8E7C7F223AD7CFFE2D64B8D629B0FF914A78973D4A2F25950B4F9
AF47B4B109FDDE4AC32BAC078A3FA2E50E00AA5E733D7447537DBBE82840469D
6D9A4054EF6423585D81CE61F170B4A39C22DA4A43A3D089565479F0681CD635
EFD41B3BDA5BA453B43C2B28E55CAA9995285FCFA1441EAA7CDBCA61A02134E3
3482870E2FE86BCBF16EE5A0464F44A77D57B9D7B28244FF5A4316FCF991C59B
9C92E45C73AAF019BB29668CE2F33D6D135D5A39A44889166DD4543ED49ABA09
3B9835E728151FF4A7E4EF615E562EB56F74D6A4262A40720C94BE6BB3C58A2B
E86E6C16A35BE9170EEDCC2799E8E182E091609AFD576DF9DB4C741114DB16AA
98B10ECE0C3E84EDCB6ABB64778168EC3EA23E0A1A18F3C95992607C823085E6
C99DEA4FB3BD1E977A370D18615E86F1603B8C38698F41EB8E0E0245B304B2A9
C6BA7931DB5BD31ABDEA7494D1A4AD1C08C9883CB4C001D0B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.001
%%Title: wasy10
%Version: 001.001
%%CreationDate: Wed Jan 15 15:09:25 2020
%%Creator: Michael Sharpe
%Copyright: Glyph unchanged from version 2.0 were copied from the
%Copyright: wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
%Copyright: Glyphs that are new or changed are copyright (c) 2019--2020
%Copyright: by Michael Sharpe using mftrace as the starting point.
% Generated by FontForge 20190801 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /wasy10 def
/FontBBox {-23 -1667 1720 752 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright \050c\051 1998 by Taco Hoekwater. \012Glyphs that are new or changed are copyright \050c\051 2019--2020 by Michael Sharpe using mftrace as the starting point. ) readonly def
% Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
% Glyphs that are new or changed are copyright (c) 2019--2020 by Michael Sharpe using mftrace as the starting point.
/FullName (wasy10) readonly def
/FamilyName (wasy) readonly def
/Weight (Regular) readonly def
/FSType 0 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /eigthnote put
dup 35 /Circle put
dup 44 /smiley put
dup 46 /sun put
dup 47 /frownie put
dup 71 /LEFTCIRCLE put
dup 78 /Euro put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE30585F628C5960F4BA7A0E78D80B
EA23A0384400281199F7528220D2F21D031A35321A044226094B6ED6DB52413E
0BC02D4EAA6BB6C3D02F5D5E4983DFAE1209911A8DDC998656E07B4EEAEF13DE
50FAB8A7D9346FDBBBF1EAF791BE7E3B4BBA8D381C5C32DCB4436D5834A17B60
26188D4C558BC1ED012EA8DED9DF22A29EAE8673C46D0CFF7F5EB4080882EF91
2FF746A93A7B15CFC25341DED2CC7041F5D2FFCE348F17C86124EDBD259F3D7A
A299B032DF19B1C8C6EF386EE2B3655A09E37996670E1878051E7B77C73B0250
EFA23B7014FD87F1D8F38F07EC2ACAF188606F724E436A3D5B001AF774C0BBB2
3B48D49C1D59D3FB5768719967A1086B0C955D8E90D69C2C18593A7EF0CE7A9B
A82AFC9604DDF32B61B5220CEA41E570BF9F9BF018876411E06807D45AEBD705
125665794E0C88DFCBBC57A43A8F7747B4A09C3941DCC35D91F9E238DEE5F56F
4D6E6032FC16C459482F4E32286E48F60DA55F2B5B1B86F3C934052B798067D0
254ECF5D61EDF99B3A6D86DB44265F4545D81B7A002D62C32A22D311876DC636
1CDE6DEFB5164BC751EAFF248E4D6CAB3FCA084FF2565070A0129CAA66035751
8A94EC45A9827D8398C0CAA83B3D4B032C75896D666161D5FB3F6C8F13B692A8
ED5B89F4654956A01FCF6295D4EFF3C7269DD46C0D06362CF44C087C14B0F984
A6CC760D2E439EFC1EFCE34DAAE9C0B017F709E18F64E7762F92A2723CD0728E
11ADE47D1A7AD0B9B75624B220C906D34D1FDB479E312B51DA3721CEF9576B50
F00CE281CC5AC9CA854C150636E2A4BBF26C0CB72843B7E8978C6923B20DF073
7D15F9069ED5C3CE92F4C2AB437BCEAC02473A6E023091F026B8AF8FDE54045D
BA32607DAB9EBE64BB05DDA506E90BDC38D7A94015DBF365B3F727D14E612395
6675298F00239CAB003959FE119E726D4B10B063CE62B1E648DDE9E995ADE22B
AED269BC6481FAC38C9D66CBFB5FA8CC6840F18F49FCA60F6E8D93CD2FE35A98
CB61C80B2F424A61789815DA278578D2AF26831B9B2FBD158D9E0A1620F754CB
09CADBA9303BDC3FAF2DAC469918FE4EDB23B019ABF14F41D32008726CF7A37C
BCC79CF6ECCA075AF7701676E2B3FCE63EA618889A2C0AEF1704DC92873355FC
26CF3A96AC332DBC5C50C97F7E94531169CD22B867371E2BC993B88B9FDA9A8E
48B09176BF39708928502BE11D606AB6076D1AA7F4C88869E2D53DBEE0A70B1D
BD9977A5F4C77183F4CF9B18D3648CE4046A4A17B5C3E9DAF063B335EECF830F
146463EC39A2CFE5B796DD7A53DE942A51CFE578B7FE2C68B0B149678284CC8E
88F53ADA6A0E0105619E50B9CD8A5E22CA076321BF296045FA2394E8C0F13C8A
A04DDF182EB9B278C77FF85029614AA25C250C84A7ED5BECBDAE3D7C09AF01A4
44FC7743D5331E935F94F2A58AA9394588881EF3502D2581E3A21E12FD05D033
B7BB01DD0B9469C910B7A7DFC502BB1A8598FC3ED021147E2BE3B76ED36626C9
3D93B10D9F47DB9287A12F77AE150E4FDDAE8346CD6EA2A4080A732B877EA2DE
D6026CFA1807B087EAB33C9D778DB1DD2B545FF4B9938D2EE9029BD66526CBA0
ADAF315B8E1DEF18FEA368F63489F8963D45A7BAE85AAB0339569338D455D8D3
55DBB8548F0D58ED841F891E7D24B704DA1DC584BF3F662B3E1C1D25A0626495
EDA33E19A4A7E61F818AAF7966EC96004C09C4D8C5AADACC89C52E4241BB747C
37DB43119263FD5919726B50D4D2004F7295D860A2974B73A9E8B594BC88BF28
8931FD635A654243F2DB2D8BFFF3D0D13EE0E48203BB19E97A02E63F8B30EBEE
9FCA1B8B7B45FBB5A5A347B174992DB8D542BEC631C8069D0DF3B6F3A3CB1D76
B0AAC17CCAD6353F06651B9D5B09C17883D34A2C289B000983EE6FC981248775
8BEC50CE0C7C1C1CC33160B2617450B1B61F32572C4946A32BADCDAE25A4270D
0D5D9C6112033C467CA867769AC53093BD9DDA18158C7F8B0BF0F3B22DA67E7E
C571ADC7C213612AB1A2FECFD8B025C2CD224195F91A18B8B8E03397A988482D
22A585867F2B8469A5DFC4AAE701C1AF738E8D2751636084BEC4B57D0AC795E2
D79AC4B8DEDB52BAEDC245455943A3DFE5422C5E45E5D0CD32FA9B260F525B34
0DC1C81FED5A23A13FBD66C14903261166E217CC46FE08016C3DC5161B74DE04
DA7417CCD3048C2190616F793DB31310AA0A8F45140EE4FAEF37C6C0F2D5F535
AE93682E855B1BDD6CE955627283F6F5F66F1571346ABD5D7CBD7A792B3DB478
0894591B13CE7070F27AA426B145A147B8823D214AFF3495192D41FB10A63104
AD5F9CF990CCBB01C6ECBE840BD48DEEA590BF99760E2DC5ECDFCCE4922C000B
0531CBCA370AE364B05486B6A1E5378A10FB3CFE695C7BEA1FF3167597A4E9FD
85E1BC8FCD58CEDD5B6DE63297243EFB20D792FC6BA87AD98A0BAEC9D3F17AE9
CBA28D27B0C8FE22CC936FA22C7FDE983CAF43514254512222EFCF4530BFC848
1C361522D9BEC6A0A706A7D126CF50373AB7D47B509AE6F5C4B100BE8334ABE7
1E1D921DD21A2D91C2C88736994B723070FEDE72BBA18E184B027F08FB8C4E85
D8F183D2C20E7518C87E73EFC86063DE74AB46A38EF4A83D2E4D14BBA67CDAEB
CA79A797C3A4F27AA9924D6616FC860CCAA34024F2CB6A8B9DEBA5BE370090A6
41FC06A1499A5C7EDF2289B4B60A5055543FB599415C638471E3F0B4BC31E3C7
CF994BE8DE8672207703D00D9E6A248413954EAD2376003C4BD53477FC1821C7
E3630875D508C65B66FBBBF11FC3780E630A24EFB520A6F60B505174A51177D5
4798FF0F3074A82D3474850D054DBD9ED91FCB13DD58D02216A81D7104422533
65225052ECAC849E46968514D49014716D5975AEC37D2CCA662CFC638EEB59E5
E1B9022D2E4700F5F4896B8AFA47B404344C8CDACF7FA1C6FF8AF6320D750231
B552FB90F122BBE19AABF32A44BE6C9CEAD20573503B88047D7DFC82E5FB15EB
0718985144596D3F26675EB99BE87FE541973976EF232F76C9D0C0793684D68F
E95129C3217C3EB75C4DB38FAAEEAD1FDAA01C73B0C7D5DCF94A693014ED9690
2B67BCDC6AFEA2CDA4C53332359B80AB857F875A51E9BBED3C9E9AB2A8A79B5A
871AE3191381240CC0667E2ED796A8D6BC9CE98F2B71D9862615A73ADB4AEAA4
56ACCF3FA9FD5C0D7DE2197E5C93A16F02FBD40708F6E4BDDD108241F68A7BCA
1C18DCBF936D800446E46A852229C5B4F6A84675CD614593B5F1AAE52753EE91
7C1B899C55451B2E0D7EE6C005CB90E0EF638B210931772B298BD43EDDF7277E
E29785EE54F083421685CE1D1A785AA70597CBD2D2F88310824B2832924F86F4
9214FEBB4B3AE05A12F0D235D85CD8790A1CFD6359EBFA90EBE9B7BF54177F19
A364AB1ACE2D780F5624CF53DE046A36EFB35B52F053DFF90C7807FC42516B6F
7F7138E02333C892AC77F0EA6EB3037ECFF18C13247D13EB838401FE050B089D
46DAF81E1F113DD4256BE6504185EAF8D48F2D1C731BA03475A731A5E011E6FF
BA0C1AFA5DDB5810F103314980E425643F788913901474B269347E7E5EAC3E41
E80D42533F9FD3EF5242B4CC36E5ACB6352C07E4E66CE479534E5243F266EBC3
C1B5145E5FF84B8F6FFC947AFF63C8F3E58057CB7DDF52D82621176D9E9E7AEB
DAAE3D81E8DE5E0B8B5DF13C561AE27C95E50C6A392E98880D8D5F103AB051DB
B351416D29AD25D461566FA336987EA7A9788E339B4425CF6422C4162F9967EE
44F33A75C620A6611954071EEC065CD4D528C9B692144A8C7D307182B8E4BB83
2F2AEEDF5DDD29980A49ED0160638FE807BCC97058AD6C6223F9E1E530FA0A05
CB23A4F5FC73A69E122EA7DC1F917FAEF2B8A2051B48C7E16D84FB09DFDA92B9
F1E566893756802559F142765897BB83C0311F492902B6E86EFC149284205132
94CE31D691804C05012F33947757652856B7DF695DA5023A0BA6C3F668A5B308
328D75737903DE371E86CD89F135FCB57B19A98C547104AC30364E9D5E07EDD0
4407A1F001998214B591B3A91226C41148BA6021089182CD63A32D31B5446224
5D3DEE81BAAF6BECA0AE2A880253D7E2718929B8111DEAB20A4B507F2E56550E
FCD532CE6A752298088DF392FBFB02141EA660218F5F63583BF2B5146D744675
8F7C265AFF6F5AC9AB8DCFD39ABF76A7AF5BA30A3E51F1878C9AEC6E4CAF0FD8
771328E383FD6A8A03190A36E07AA035875C1E5E6757328BDB70910F2D332CCE
4E29783C71DDFC6C65D0488727A1D2EE2E001DBF2670CBCBF45F0919BD3EC674
9042CA4DF5AB8F4833CD8BAEFD996CD0FE093F02828D90F78FB51104D5F33C6F
0D11440E3BB234828304A06ED81CA1ABEC72C1A8D199D594F481F850B7A41A71
3DF2701848D1A7E1B258DEAA01F9617097035B277B4B69C58D684102896FAA8C
0E6C6C9A494ED7D3226E9B421C02F7A9AE8DAD57CED20C4830286580EBDCAE9E
3300DEB85A6778A2FD2C0A3464AA20E43ABD5A71B00138ED9794BAA198B91452
438F0B7AD7F0BE75306B98E645A9F0F58DDBA0A30C52D66A239698492AEA2C45
3856BF599A1D1D09444ED4232B46FF4F301A09EC2759F88FE5F86380FE3EEA8D
B69A80613CC1140DE94649F2301DC05B65D68B3FD0F3C305EB539E50D021CCD5
C73A30298EE1CE57725508B8ECFAFBBD03B224793174F322076DFD6B4ADE232D
8A456D7A5DF34B70D15E72996CBA0CE999FB1923F290439F2AA53E235FA60A63
52F244DE8C891183CA8D73B58B8F5EA123DCA7A871EAACC802C3552D1F3B6341
D2ADC0FD0D91BB100443263BF538DECE9A09CFE533ECF8C30A45E46C34FC9D01
C1A7A4E4BE53405815ED49FF997F09A70899C32563E50A3AEB826BEE7CF1E907
47D7BD37AF5A825B074D7EFED7FF48B212D79FF51D46E347813C841A40BD3EF6
55343F8335BEB7AB74E08A6A6CCC6D2537EBB837982831CA71121A88D22835C0
82BE9A1C273FBCE1E8E614CD0747F84A7EB7108ECD7E7E0ED110A404B1D0AC70
DF7C8F85CE95024237F8384A2668182B01A59CDCDCF5CB81C54D13ACA6E790A8
C5DB578056CD24095A95F1EAE09B68197E9BC58088AA4966ED8D71EBEC4A4317
3FD664605328BC75417B8A2F6687030FC13E21DC2F8B3DAA7BD11B8451760E71
9804EB45F0DDB70ACD48236B3D141D8BB6B107C05E890748AE4E2C27BA452B94
636C13BF1320C73490D0383FCF7E9E1952BAC42C29E625FB4F039C49B3BF2716
3AE0CD80768A5CBEE641832D131753DBBE41596B635680956447FDDCF6DBBC87
3EF4115F4CB2849DB24C3B4AEE6AC2496F80490CC0D453BE6C819809BF74E866
2DE84298DAA154B2C1E2DDACFF56B9A5427344AA14D654A3B94EAABAF59538EF
5ACB99506E240D7C1FBFA460A7C3C560ECA67742B1664200DF92A579DAD00F8E
C84FB49E2E97DAA1196250F6EF8F051B05CD1FDBECE1BC066FB9D63F5A9BB852
DA3C0519ADF87769CCB30C4286AE3CB80D741E55FD47D12F416D09C455BC0868
0626BCE9E26F25843A22CFF2576923A6B54858DEC89BAE02A5BFECD87F75DCCA
2F6909D4F1DF4039982E89501BB76D51D8F96E09337DEB8E432FCC99779E538D
B6DF4813703E931D45AFBFC36EA70DAAE3500974670C712ED584935E9C4702BC
95F56593710E9675B4356BF89FBA8C9D78BE9D15DEAB6FD8DDF30CBE54FFD830
DB940C58776C1FC06C37677595D14C409323B9CB66442E90FCA7C0191E7A2574
6C988C409CDF89DE98A8410501524321C015C86D3236F31FAE31880548444286
9A2B1A2F5587569AD2095452AEEE0CA96D5B78090961FF2BC633CBAFA285EE59
838E88571924240435BE33E29429E8B97531E4D08F48CDF9E118D2D25AA002FE
41D7075547A23CADBE3F9DD22EF55061B9C024FC55A110F72312555880511C05
7E7AB5F8E5F14905B68200937827D22A9321B10F692FF42BF0B2B7F5F96EB570
A692DD25752290B09537C6098E566AF8228797C10B49BB7F6FCC7CD8431602D5
CBC99169A1A3D96A64F07A16E9FCEAA4D4E7F94F778EB4CFD6355465E567519D
FF073038FD2702811C8CFE79876678C9A97CB68B7553263C6737DA8A44A6118C
4C3298DBC067153C3CCC0023AB8C4755F0441EAC57B5E4BDEEB988B57E8DE17A
99A2BCE76045338FB196192F398FEB4CAA238AA39033826586B6C49761EFCAED
43970A02CCA0F56B4D26EF5C157C7FBFB9F1984B25482256F15846468728B179
3F609262DC5E3AE3D8E54EA95A61315420C64A341A4528DD3D540D435F38A520
F6E546111611FA42103F01724321
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Cal
%!PS-AdobeFont-1.0: Fourier-Math-Cal 001.004
%%CreationDate: Sat Oct 30 17:08:49 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Cal) readonly def
/FamilyName (Fourier-Math-Cal) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Cal def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {17 -274 1252 724} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
71FFD7441F153F65EC489AED623132F7F0AA967C97A2E6C705F58130577D30FE
722A0CE1882455CFC9882D1055821847FF648509DA92A3EE12F984224F7F1904
F3395261ABA61816ECEF5BAB29D1AB8C21A8F46620894FC69C70DAB3226A0DD9
9CE0FBDF78469648F29A99C677B9FDDC8B90082BB7C984DC5C42930D1315FD26
EA08F21054360D1981E79A6EEEF345CC1B9D85A6983CB5E833C9F3CA972A2C88
B6220FBB013192E7B2F79DC214DD0964F4DA52469E9500ED2ADABDB0D259FDAA
648EE5A0339A6EFFDFBFEB97BAC430C00291576483521C8D406E8FA4DC48C7D9
6830DF6FBF39E9153229816D94F6BDDABA2B4759E1FB3DEB54C47D66E283E45F
3BC1B675DA1D8DDC10F24EAB54445658EDD0AC1ECEA12CBA6DA205698F18056D
DB1CCC0A8D93AA9EACBE2B5093275823AB48AD9B7B1A217505522EB1C2F09074
1D7EC269452BD0896C0B1F30769BD683103F7FB568F80576476B511F5ED74F46
E2F35F191BAEAE8C91D87401A8C28DCF476FF0CB9661DE7B93284BC8E2429CEC
A964C815F35C33B2B6E795088998E0EF2CD048D1D54FEC5014B1AD8A46618748
6D1446CEACDF027D1B238173F8FB6C828F10C8FFAEA574888C851EEDF4629C38
4D71F7D93FD74FE5402D7D788D76E28ECE97DCEA9FEDC5985599B679C052E445
3E16B23D20A619B501A088D5A6578CD0F56CCED1F2039876D4FC648DB69CE3CE
9EA0C3B37F27CFD4AB23D96B5BA02308081972E9E62A93B2DC9A37AC4A63E626
F1488017A209F97B3217B85127A8AAB35BD704F9614733E2C55D3004A753ACF4
CBFC509E71BEB3AA1179EC2955F527022F86711D2DDE84B112D18F375E1BAF0F
1DCFFB6A138B1CA05072340D5703F28DCD60FD4F3AF2EE0061AE9AAA0E39384A
E806173146EC48A331E5E3A8F900D7F580E976A3672054A8A2DCF66E132A720B
37F5C9D5DB8401B8BF5879DC472CC0113E27D529AC7265E93F51DCF7A4203C25
CFC3E853E2FEAD9EFFF3BBB849BAB875FF430A8555B7BC6501DA81B1BFA806A3
53E3217EA4E3C6B388B9306AC2B7BD973BFF3E39CC5C4F39303C2B0728CAFFE3
C5B6A3B6132EA83ECEEA7A270247B42BFDC3D46FD72DEC1FA73437080EDCEC04
DF35DC49777BD36938E591D8D8AC90126D06F7B7C2BFE4F6BEA7A13CBF5701F0
925CE2A7432B33308F262A06BF14B6EE20C4144397EBC24D878C2EF41505801E
80D44192B4267A538C9DB82EA1B401676F6268CCABE71D9C2D8DB59C2E58537E
08E7B1F5247E315B20FA3F32E2A69EF068A4BD88A45683BD7521ADB3C2A78601
8FC0DB09F98D6613341AD917AD3962D12E22023F95076A56361CA1906134904B
ADC9F026771AFC9FED26DCC1CEBD7FBC25302DDC78D686E67667BA824113CDCF
19BC7F03E768D109FFC55CAACCD1F6B8BD9AD518D6E86B1AE06921A28F0AFB9A
BB6AA7C8592651382C6609A2DABB7A2A5F7444D81AA66A8791531D1957AAE4DC
4B45E30F64D1644FB80C34FFD3C34EFD6787031F21DC0316207988216849AF2D
9C4CA389DA5CF542069E56C1DE390DD4DD286019B7C773C62F78793D932A97AB
ABD57A76F0F1E3C4ED9B7C90A553204425722A4F611BD1F455BEFA49A7216F8F
ACB3B98090F887F64661081B57610CE55FF07453FC1E48C6A9F0C842D3D7D28C
BC88AFE0FF3407525BE23BDC9E46B28EE347A06396A9481D8DCA2390972B883A
EDDD9001F47830A7B1255496B7D323DE105436DDC980CD75404FA33A678C3D98
302E764EAB7E5F6D5A46EDFBB77EED0B833688C9230D9D5A9093C035173CC4AC
1027F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Alternate-Roman
%!PS-AdobeFont-1.0: Fourier-Alternate-Roman 001.004
%%CreationDate: Sun Sep 14 11:38:05 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Alternate-Roman) readonly def
/FamilyName (Fourier-Alternate-Roman) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Alternate-Roman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /euro put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-33 -242 712 705} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6E6DDD501A8B0E65BE747DB309417A7D065AFBA06D5DB8E3D03B3FD43B0ECB
D4F39A80CE61E0F4FBADA453BFCE3C6B9CE462D62D370BCD3DE038C405023983
EDC758BC3FE4676D7C7E425368D9BE8307FE6D67C848B5CAAD44C85CF6A5010B
5654BB1119047F7CB5CB59F5D19F65237AF4FD514CD08D342AEDE2E5F7D8398E
690BE6AA86CDC35106522B730BA8985D6CD76DF67D9F5C346F6F2CD29444B158
D8AFFC5CE1924E4606B0ED12901491632E0B40C327C6C900589C2BAC0C9BD55C
2743AAE42D5A4246ACBD38B613B1B22B57403DAF3B396EECFCEF0482092DE233
BFA45E317263104DE54C191DA32FCB291FC37733333BF5D95EDD0CDD6F56308E
D38D01B0718B704285B35245190F69DD07B598698D669E5712492321986601F8
A68DDD5AA40404BEC5ADC0E452ED444E2C9B1545936EDD403DFF01CC6D7C645C
91509391F46E021C9E7CF2E911B1304B45C5AC797B2088E5847DAF94ED377393
4CDDFA64449EABB6F2652B6DC69E7D3DCABA5B42747A54A5A2D12609A559606B
44D0C0E6EC19223E3D377BA37E0C46BE0D16D82B9359D2E2A584BC8815ACA894
C383F11A62ECF2213FED7E5489083C0CAB7D9C2637227D4DADEFB207D44CB577
9C5C18AE9CC5B073647C8B52902F08EB7D99B8DD0ECEBDBBC125461A812A3BCE
D9A15FCC901B4A17272D46FA1B680238F27E25FD059559FE02194CC1E4C123DE
7A6F8F17B59DF0DC5D8AB577C5A733CEAB343CFE654304F15EC2DA9280AAB2F0
925E7596A9C8E94991CE54D1921495D8C1D4AAF504842617F5F8151319A54846
5B1B09C2AFB4CB49CD2AE8D5312E0176259B2BB71FCA295F8AB26953CEE0CF73
0BAE460689F536EA9B1352602A778B1395CA8A5501F32FCFDB65FD73EE6D4CAE
4B4F7A0129106AD36022EFAB434B57ED948DF2957D94BBA8A5F8BA3E0E1809D3
042B7CC8E66CC64634F06039254F3061A17C8CE0099A6CF35C3636F9996332C8
77FAEF06756200910B3EA272EF33244ECEF4405FCA6641C7DE5F269A3D435B3F
0ADA000A5730DBBB76F11C8B1B65488D844BC6564F9D52703D887DF2BD7B0F26
CBAF9B836A57B80B8C514B48EE2EB1A7978656C7AA698D93599D9EA93EBA791A
6E52479CB99EFA005CC74D1A2B338B46B7AFAE06A747FDA06F719D6DA461CA95
D6F1B634BE4DCCB0F847E8C4DC1D12D8E83214A47D617FE02515C1BAC88C63FD
A6D36209C3EED215D3ACA2A4946392003099D565A32EEA6546BC68DF7EC7B042
0AFDCB4CB4BFDFDB83FFF532C766C9F507FBE2500858967A7C4A300F4170AB80
6B8D8FD2D2C79AEF68FA39EB55317F7F032B8655B8FCF1F0B2CF5A61EBACCF62
703C6CB60AD2B04F32F5CA9402EB7EA4677CDBA5D71671D9A26CF07604618A9C
2F3CAABDC8BCF4747637505038EB5C6B4C657F7580F6BC0FD12CE8F4559745F1
E89028064CA68183BFB7EAA2258CF3BA78E3C359B1D014013182F34E6A826C99
DB89045D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB2578337771A93B1617F5419CBF89D2FCCF53FF8496A
2F09540CD2E6BACA74151E5CB66BCC1F03B3C9BA42AF2F157AF42FDB1930D18C
3A4D3375828E4EF07D846331B46D1FB5BE1FB12BCB8D2A832FCFD5CCEC74EB45
6CA3DFA6FE50ED4ED9072B120A89C364951DB2F4A495B09D615356D057D21102
1FE53E0BC1264E300B94D15AAB28CD6564C86FA62D5D1AC3AE942B437B9BAA4C
3BC9383BDD3F17ECAB959CA7511ABA497FCF85FDAB081054D266E94B7DFB4AE3
465778B83FCBDA79DAB82C42FF8294E59EDA94D3BB252D1FF6D197C9B9A94B8F
9A74458A9A7357E7533DF3175AA1BC4A976DC9D2D80CF89D2FBBF74F876028A0
B0283D660337D47BD6845D95263021B9711FF8F4A8073376B5C154EC3E566837
FE4BAEB3BCDE7236ECEC04214D39DB8F92396C5D29AEB5E469FDBC4831ED933C
40FD2DD2DAB06EC31F17BB7D93593DE84A7B5C63B63C2B6367C26D249792FA3C
3BA89475C5B81C6CF52850E95BF90A454AF6CCBC960F46ADD3A18DE1F895AEAE
0DCDE8AAED87610C2B5E1C0542A01A77528E5C27039DCF4F445227FF7C68468D
E3602C3B505323AA5C9AEBC8EBE661AA9C2949FA02073BC0A7F58A7BDBFFCDCD
9E4BB1F57C075931FB244590ACC141E310CA0A0A09281D3E62C529AD6F4C749D
FA334C32EA47D403F13845FC36CADCB3F8CFBD1E782E0E46FF798C2CF89EB7D2
CC8AC81E76AB8C31864306D9AB7ED8F02258A3870DC1B0C5ECDF97B61BF9E57F
37B1C0728CC6EFCD02A1D4F730384DF0C1D69651B1885F54BDC577EDA94A5F80
116D83A6363D965F07FF04C079DA39E1AB50B44D547BF93516AB89F3A05B1B29
0696B6576A5FCE31C5F19D1BA50D3B0EA52186ADA86B1A236F2157E12FFC9D80
CC738B18E0040E5B5AF45E59EAE120CBFCD52F4527DD87BC3DE74A67CB22781C
482CA681EFB431B8757102E69801AF26ADD429DB489F429B608DC54B8898C4F7
D0676DBEAE6BECFFFD0856933A3730D29260DED7E3C2BFCB790E0DBFFFF066B7
7F225EB043A2525888557F6E9C1C24B89E426DD97A0A2EBFCFB93C72B5FA17C0
059A95AE4BD1D156FEF121AFDA835E53295E3C85C8416E8156E80C8A3B83181B
ED0ED365B500C7093DD4F978024F807E9993541A3E8C59BA5C51EE6F262A21B9
BE85AF0CCD8D5B824C6D40DBE007822CA24FEA4FE62ABD3BB73B943B5ACF858B
CA0DA5AF5A64DEE8D4B9B9BBE81C094B841F84F59E05007B8526F290F5E73B41
D87267453A0DEDBBB8ACB078B088821A9F12D88EC167CC64BE116BC3DFC67B2A
37D4B3683E142248C650907EF404E3EFEE64B7AC6F89A5F903D6D667BB6DB1E6
1CBF349DDBEFFC14D250F4BA26C0942BEA97167EBF2E2610A742D8B8EE6605B6
894796C51EE3DCE38C845D804EB69B11D9C51C350EA6767BA0E132544D049278
597232979209C1B48738B5B3BDC9B2DEE08656A4F46C8D98E70D3A5E2446C03C
38241F7642C28D896127EBAD3E49030BF702F04CA80EA8F93AB3ECDA18C85A31
7B12DBC16F50A81FD9AAFBE2EAB9CE383B7C5DDE3F1E6D448FC89B90C2734A82
7BC95EF64BC6BCC0595A895140463590309D998A2E7FCA40C7A6247FC26D4F32
2DE2F009B9889051FF864D0C52FEFFB2ACCEDD68D9A20774E5F311E52B1FE21A
8ADDD95602AD49AD5B0793275B569BAEFF229A45F7F4324A2EAA6107CFC7E37E
5E2E14EBBF748D99960C5F4FBC2BF8E94379A2D2DB980DDDC1F2F67B56EB9484
E7008254771D998E5AB55EAB1728DCCF3CCD0C90F2B9539FF583442648DAF5EC
6302E290FB44FA3A8366CBD71C842A00430D78906ACE661BFF07FA5FA1FD1DC6
9E210087C16D9093D5A34CC4ACF2F51BFA6F594B4D5B408D4FDC8547DBB905F6
648E218A2A7872E5E47D00744E616C295C14A0E27CC21D13774FBEA068366839
ADD49634114168D743B3AA0FF50FB54CC7DC126671C9D2CB472E0C58D81F4A4B
F83492D16D11BA90C3015E3571F1200683DFC704DEDFA0B111D4BF5FDC9CF7E5
E5521E2A1777BC487DBA053B56CDCB7AB442C92AEDDCBB833961543A83EE1F04
07BC9CBA535EB2BCB663C24F8CFD95D766E44A674FB036D89937CDF63631AB80
9AEFD18225D436C660B26E72AE9C6CDA0D5169708981CB270F5EB5A859022334
8E50A697F01195920917D81C2F3486C4F7C25F884FF9CB6195E96F945E70E7A9
1F2D0650120F5703C0F03486119D0F73CDC53CF2E2108E455770A9597CB66F5C
C7CA4DF707E27F1FA4DEE91CE3D388AD6F045B012ACDEAC77A45BC268B74AD57
6C865F625827B8C045ABE5EF7E9904235C1C8B3051893F2AFEDC6371FB02C405
02BE6FEDE306E8FCC4B608B471E6A8E493FB9ABB764C7CA8DE5E61CBE2F070CE
E5772B8D856334A29805B71FDB02BBC4249C8D84B647522C99585E78A0FE0658
EE9CA27A82AF7A9EC3C3DACFAA937A60F49BF8F9B4D83F5CABCFAE6515928933
D4355629B7288212F066CE197359A66300A620AC524A7F60DC22D5FEDA041CA4
3E3C92A5F8A65C64455B58752AAC58FA76B08A8157F92E6A39E5CFB649B69E0E
8403D5B382C23B112241F07D1C079E561E172C920C58C4D09950C59D0B797449
E228C80186EFB3A7E67A974693F104E59979F5D15F17BFFC669614D7E4F756B4
399BA6FF7DF40D9FD78D5A33CE2A6001DB66202118946D66BA0971925C6AB022
4772F8147234C76856546516FDACB9A7F6881A7F8CE68790E7F19A835BC6EFC4
99EB384DC7963F7E26BB7BA94962EA0B9E9FE61140BD5B80F9D79C8F460237CB
8D25D9EF7D8CD60FFC744E9A8C6C0B36B00162D97159E9328914AFB0F6E91182
F5D6814AB810238D433CAEDE97BBBE555BF3362241A2AEB1DE5FBABBC4BE4D04
2DBDD5C6B1CEE106241C8BE038ADD1FA7291B28FB3DC5990D7194B18684E880C
D30B27909CFAE9ABCDD6CEC9C72D99FBAB75CC79FA651F01F72A65608248E964
FCA0D0BF38ECB02D64A39987B28E2ED9DBFDE3DB3136A1160A52E24E948DCA5C
D34748A18E26E068F16140D74062D7B46959218034C721F5EF420C1D801AE1C9
A4366AEBC06030382FD79729426BA208FEB6872FD6E32A41AEDF7A9A1D2A485E
14007DBC2067EC814CCC3D954789154DD37FCD05662D9807FE63B0C712FEB927
211D7EBCC6E5B86179E16BEB0F3765A660A476F69FB162D224B1A059AA16DBEA
265E3D4F5AEAA7A8880FD2548212AE8E49B72D08ABE4F2457325AE045F9AF979
094B58B665034152313C46219AA16E210DFCFDF130B91426F4F6704E1038E66B
747B3D5D884AA3747B7A4854EFCB522711D4302A5C63F547BC746A9ADC136D91
52B3104EE2433F680225415A4A7B63F4B43B193A4D04BDDA109DA80AB582FE54
F0B93AB7FBB8C47A097279CB1A91A9939EE658BD6D9B72485E31544D9B05B28F
67C0139C36299413DD9556FF41405AB4179BA7936703FA5D06EA46307E529304
D0A9E8B79EA6F972184585CE610E1EF805A187E4ADE018595CAA6C23D8D37278
6790926B1E9E1FFD3D6432232F9124DBBF37CA230A0F7C55280348D40D3DE3B9
061F7B4B1CBF8F38957F6156A34D04D3AE96EF148ECA56FA55F2F55F4110AA1E
09D5152F89FDFD66939DCC2A7AD2D7F9612EDE8B62C9D122C11502FD8CF7E810
7C082B956F1457EFB0CD12B76397D56023EEDC6A1D084930052FCEEF950021DF
BF2455AC25572C316525B9138695EED597EE4928827028654DD939DDB00630CD
5126B33BF5AF4E11C66C0FD2726E5471F8D8344C35A99620B2750B7A35B605D7
72001C12A392750F3D2FA8E6F3F088037B45A02F86F6354EE6272EC1F39B8555
7D495AD15E818AB8A8EF5FCAC1154498E0872FC0135192132947A8FED0D43498
ADFDFBA62DA37C733BDD4A19E976C26753D44BEEB2FB66E7F06A8C30563B8197
1217CBDAEE90C47F34A8908A279B73A0615FB6A29144F3A400043F51E8AC307B
FE04BD7CE6070FF71BF765EF0305CACACFE6CB04EE8EC4C464EC59730B3BDABD
D51FEF0B1C42169287DA4464564F7FE2F46D1576A4D235D182DA5BBD35B37BF2
FF4A56C71FE1D42E2637E891885516C7B7569E6264B5047D6A6B38AC2CFCDD78
9B3B95A4D6BDB195AE734D6A600056A639805EFA48E9BCB2FFF243628AADD12B
D37893C0C39735C944C04B91A97F0352DBB2319F01919A10F3E5C518F5DEC996
3DB7ABA88F67E4E36BE32E2D9ED539FF3BEDA0DF7853C726BA0277E6A66024E9
3EF30761CD3BE3057B1AC3ED1E8A477E0F2202AD5B6F8884D1E7384887EE721F
64CA0E019E03AB3AE26CC84147CE7EF4D761C49DE74E56FF11A0A9B677C3604A
F861EBA0C41AC12D9BC0CEBF5B3B31F1F1240F7E1B8B5517850D70A0EC5AA55A
9FACDFEDF479FDEDA3AA402CF579689B20A942EDBB45A0487CDEF44ECA5D3582
3E6456314E65083022A07F2D990392C923A50DA0B2258A377F54AAA1B40AC36D
D143DDE55E91EB119CF93097437EC3F625F17BDA24AC618011E948916F6D25B2
2AE70D0FB6EDB5E58E81BC90B90A84060923040FF3397C8222B226407E6C99CF
8458D54F3891887D55419A48F8732769836EDC94CF2A654946B67B1A6CD16895
BD4124898CF665ABF045D585B4BAB5F16B9428EB069C5449C46F7771561C6615
39DE63A0A4CAEBF36980A570B49B9E07A0A9B9AFED4AC2D75E5EEE904BF0ED16
190B173E5C99CB752E8167DEA1649F500D793AF3A31E8098ED0013F46882309A
FF1455A0356EB1DD223E5C6F0FF3D683011C316FB5446A9665CE1B31E08B0E2E
2FBB0EF98074CE61244C8A754E31B617238217989DEA87C2B543AF8400A300B8
CF4ACD3E6437DAAA082106922245BAA2CF92BBDD30D76ACFA1FA3A0E2C081B2E
AFFBBC84D27BD1990907176F2DF6E8DD6D41B5BE8C6F4A9032FCFC5AC382DC23
7A9613E00CAA69A5C5981A8BDE36275E76E150AA6359038BF9D4C6A93A13FA28
1E4DA5F7981C347F55648DEB1624DE7A468D721F0FBBCD330714719EF03D2112
9B5E90CFA18ED7CEA83C924ABA53A4B5F5A18A5544EC33D4681EE42A70E2511D
4BA37126A78B86E482EC5ADE2041CC87EFE4FAAD65E979A31E97AA86AEAB1BF3
2F993BF06D7821F77CC61260CF2B224FAC5E77FD4E22234FCB717C430D07CD44
75810C2C358A9E10E1101604074DE702F789EDA0E6FFD1D82CD63CA29E638C11
CBE3772C1D6753588ED0ED38C61CEFF42F921D984A370A32701FCF13FF11FF54
BE1ADED806B9A1B84FDD52053C95A9ECF1744DC1F4A7326701969CECE3555AE9
E80DDB6945E47010505C0F1C9BEF2F8F6B29C7E2A837CA9897E6CA75CDB2D6A3
3D9F309FDBEE7B1B2AE92274032BCA544E518E779904CFA40536E83FC0FA007D
9E366875396F0F27B249EBF2F16B8B5699B56A5CC8F738AB3EC8184211C879D1
CF9073F795F8C1C09955D1054B627593929AE9B13B0ECF9DBF326C93ED8B9865
75A8AF594F4E1E7C56699240C3DDA8287F5633E73904BB452366840F81255512
19988ABE4475896057C0FB1CE5F4BF8AA7BB7B19259E25EB90EFE1889FAC418A
A9E8A9EDE9E4D41577EF6A8A8FE7596CF45186DE778496AED5784D36A9972879
45B0DE47D1FF06DE8EC56BC15E328D8A85976B5C067402CC77A43AA3954CD6E2
A68EF8DA9CC4B7F1ADE6305BED5E3FA48408747E322DEBAA6D7065140BF2AB6B
6D3EDB65BDE792F00F91712191008C03514B0FBD3918F7F9AB0E2313EBBF0DF5
60192FA198348A587B58694DF4BB1CA807C0263E59EC3D9134ABD970E5167F82
EE00522535E18F311192E2B3AEB92F8E68EDEC98663B091C368DD0A2F9B4C1F5
01B59C73A14DBF808F6C9677B9FD8ECC3B296B2CA802CAE1C90459BD10DC1D96
F5D2CC4A47937AEB8D7DC985E6F91134723AB6ACCD87432ACEFAD0D66C70760A
4FEC450DA5AAC3E9E93C8DF81A7F869EE05968E23C6402606AD1695BE2B2B189
6646DE2F2D23DB3E4EB8D83F6BAC2D60B3946D7234C576598846CE7FD82BA645
769B48F4B3F6CD9319FCF538940573E4347711F4281D565836EAD7ECB1DC8F5E
FEAFE65C0024A622FFB66DB183109E98D21F131F43A3B1B035692A1DB12CF4A1
D997AA300A10987F3AF63A689258F253D8CC1845BE0BF8AFAEB13A107876C1FF
EA382270C40AB8925A9118B20AE29B2279B090B1974266D69D6D241F4B4E1CA9
5D4E35128C03F4B604869BA3162CA8336CE9EB5D2927F8DD438BD36DBA30908C
CA468DCD1A6F52B5222EDD901286FFCECC01B36C0A765C51A69F772B272BA1D7
5FBFE3F294E01915A8F572310413DF01252A975826378D10C31251A30C273AAE
2D9A96C60903B7F59EBBBEE36D4CD8D1F8188B88AAA27D75E8066A38DFE2DF77
08C11FABFF0D9A294FCE8BEF8302691920A3E5D10156E6B4C8E6D1FAB04EC960
AA9FE0440B1F2FB5CA4142510AA2D167A4961DA62F42DA5875F74FAD1C0AE5C4
1D3476A7B612419305DE4283D9697E326BBD38A510FAF48D12C151FB675A9F85
4A0F76AD90590DEDA063D84B9FC3F38B91B2574852CDBCDA506EBC1310C0587B
0D39FEF42687B7C011676096B77438B710F8E4FCE213D4A6014F0974CE3E56F9
767076BD7D9AFC3DE686F0F459CA587BEF9D0ACF9023E2C046AF567B6B50C2DC
5492A341BE6AE4784AB3BF2DB17F82FA935DCE779E86CEBA71BCB2D03C8DBD57
2A77368F9222026DA68CAD32972B74958AC50E37FF18CF8E8358F06E7FAD20D7
CFB9559E50C59BC719F03DAF7BB40FE7408E89026F9DC9BE9C3E097424219541
779D2E90D9D0C1A11D046FFC2E82A586E09220F73B34E36223D3641C40E9037A
FBF7946FFD81288D8526F3F73E12772A33A53C5DB01892BA825627EA358732DB
D16148E0305735D4B837922ACFDA3FC6DE822ABE5E897B589040F644E6A61AD2
0C07376BA75FFF81A16126CFA18DF69F5293AEF56D6A047950A5DEECAC0343D7
D1BC84420E30E8336A8A1384FF862419D4B6FADF11C8F2047D2D0B20A82CA079
5308A119C2E23BF42E40A7E71AE4B1A5013C51D864A713DA2BA13C04DB3A50CC
0E74977CCF2F59D3214F7C9906E081B8C8CCD24B4F33B77E60BEF1D5A30FBAD7
69E73652B90264B53FF382042F8037CA29B60B59FF62AD2BDCB8674296ED08D9
5A852D8C0AF811250DFFAEFF608090AFBEE85F8B579C0580229487114148CB0D
ACB429B4A1838733EACD30A472C619287B95D6EC2684D3ECA5D92228AF2DC718
E26691AAAECEA8B392BC6CE65D5869318FD4860E31EB5606A299D0B221D2AC40
981275F76B9F2C2A595E438E520CFB2A048E44A841BD38FDE64ECF3FCDE73840
5C0B1B125EE2D03A7785D88FED47F7047DF813B1487F0140265A3651D63F2F1B
7BD7BF23DF0F9B36FF5C2E03B423BE213ACD5E5CE40A45367F7E7A1845D49DF9
50BCBD94E012ABE0EEBCD93A445161DDFCFC11E9297F17761210C2A4C6897251
65A20A6124A48469CC3E794189C4BB064779C78C55711C7291A3530B70EEFC08
A59E9098D1E4383D8B0711A44D4CEE4803CEDB8BEC56AB00B9749393FE8A21B7
ACE6313F30CE2B5F9716C97859CC29509D43A44E5697B348A88333ECBEA17C1B
1B9EEB53E59259E4BDE1F3FEAC0410F82017FE21D3317947DD3A9465EBE245D5
180AEB17B0F91CD560ABD37A453D3B6AD4E78AB7962CA01A231B6FDD49BC65A2
B632777453843185DD4D7B0874E9A7E9230E368145C452103F17C97C2062CFE8
8521F4D4C70FCC5D77140E93A1929991449CC828E431F5D5E857FE541FBB2F53
0AAA7AEAD8E8D01FF9712A261E4C7CCB3192514FDE7FD39D89935AB6DEAB29EF
C376C133D18E8F7DAC6A251E447E2AE99C58BEE8C4FEF4F8D62648C13494F6AA
EE8F8F5AAA41E7DD6D6025BDF23E464EEA52BAC397CF94A4FF64010925B1AAF1
E4A1D7FF09DCD2AA78E9FACFA6C247BCB05EF6C78FD6EC072D2DD76CCD173B36
793FB201235F5BE15207412794E7B18E462B56FA01A5639B09F456BE47637D3A
D9BB4ED8A81794BEC8EA3F5CFB7A331B81AB6AD013E01BDE50EBEEA74AD524C9
D9D5CF2C88E77177E24AF95CFFEA3741E6B69E6AB6C38F046885467D102C678C
1589658587FBDA6251A62F728F2A08A17BA22DCF6675946E76A8D9DD6F6FE073
289450FEFBBFEF27C8FFCA656288AC5F8B4FC74C5658724E580B9FA11ECC73DF
D0A9748205EE8EB79A9A8CA22F5E0ED14498596EC2DAF86AF50234C1BCC45E15
0208BF66F30F363B63B7AF76D2715536765E7EDAD92720919042337595799C01
0F27F0E08F262289680CEE86AF22B56926C2EE60E2349BBE139B448EB76CBF8F
769C12683B0F194A25972C8240C07CD4D9FC7FE85159BF0E1C332823CD9F39D7
870B439A85EB9D3B3AB5EAC07DD7D6F2068A39F818EF662E0027E53683591FE5
04A2609F711D6B86D4C7393770A1670C9EF387AF8C2F54737FB2841530D6CEA8
49013396B5E234A67E50DD236810238D433CAEDE942AE59C67773BCB796D8B1C
35CA834BB2FA5F71FD080165D4175D1E052CCD8C3ED6AB497108CF0AE8B33D24
9B1AE96ECB6872BE7965743DF08E4877E4A44996962B4A4F20144C3372D5693D
C6198F24E59A8110780FE5348D07D51ED4DFBE5464B96CB34369AD260BA095DA
536D8445CEDD0620A7B8280C7068E189EE031A8081AAA523C72A640DDB045D60
2D8B972215CAE0BD115722E3B5982BE226BC8EB465008FF041CBBDC56ACA4D12
F0C604165082EEED9014DCF73DFE770248B946F5671FDDB22D49CEB9C8AB0847
6CA9764FF142488602AFE71B601105C6C02FF335BD0A2C84DEA70EA208529B9D
0AD61A81DD5755096D248047900EEDF828892C486B2BFC9819D72EDE10ECCC6B
EFFABC07D30362931D8A48A3708F6B08AA892C31792C3AC31DA0C4C22FAFFA57
355A1CD785162700BC9A105F4E6B44871F4CA631C3C6BBFB2340B1B99E3E3C04
8EB7CC70FD5A6FA0B3FC85DEC4CBEA82E7D4E50494390281BD15752699317549
0B3A2E0A307F381C02EE3CA09BCC84E6186C4E78246CDD0331B8BA6EDCD612C4
02F58A640ECFD4895BB5C98BDEBEBE9E4105AAE163EA4F91076921FA88667A55
2EC7E6336DEFA8934F9030BFB668D5073710260AAC1C9A7C55E1CA3F7AAE5B45
1FD4AE99966CABB45635BB6704C34087F7AAB701423C3AFEAB5FCD6CB5F09C63
EAB7FC4DE2E33F06DFB8454F8BAEB5D578919880FC21FEC40F4059F0DBBA4409
1623A7692003B424B7B662DC9046D0EEA6D4B13C67FA867641477FE03426A07F
54287A4095A4DBC4C96C77064AFC354B0F4D3E8D78F002D6D10151FF96E6CA56
B062BEF3C3C575B40CC03F1C0A22D557EDC89EE5D7D9C711DF7E6E5A3D062A7E
6A09108C991212AF1F4BAB5483E72CC4DEF46FD4A1B1D92C9048EBA53DC608E4
2083116B055401F24F7AC8AB1186D810025A7A42413CCE44DF1376DE8F773591
D26C1AEA920B51201DD57599D864E86EE18DC4110C37CC3A38D7694940E07D8D
A4EEC9329F12B7A6E0B2A673C6AE865ACEC29A918CCB79BEBB6AB1758B699625
68306811190712F1FB5D69271E29C9F4724ABFA5F049895AD2EAD722B6A7EDB4
D2013A511132BE1A965A3DF1717B7AB5ABCA940202CD1FE6403FE35D5AEDA6D6
74DF1268561146AF9446C4CC0E5DDFC15CF9F7B2EC1AAEF434AC7159161AF121
1824B21B30BB0A05688DAB1CFBD8F2143E8CBFDAD30897B392858E012949C810
8911D05EACD9A0C93A754709851C386D3C81B051C4464738B49BED7327642196
AA489F88B5052CED04D954E81827D19AA2884F7E7F986D7BC3B3B23A057ABA64
8D342FB18C12974B1394D8919470B6A24B53CBB1C502E2E97DD256A50AFB004E
AD69D14FE25FBBA2848A06EF9D2C23FDB25B1D02898BD0A95181295E2DFA79A9
F2D664FCF5A4442342F04207BC58CF7AF754F16CDAA815999F53CB9256C7109E
9B82D49241BBE0673325A012714A67E9049F6B929D69251B05FEF368C75E7B54
E634E512DE6A7851CDC1874610A1EFE1B68978C705C67E3062895E706E124E9F
B1DCAC3EC41F2937219185AB6C5A1DC46938ECBE0665DC37B28D3D69F8E7FF6A
D19614EB0F5846CC35E9DB372E35F3CD8ACD95552DEBD03393C1F59E6B8D2820
016DA25CD4FE56093016C65322569DEF5535C4CC3B2FE44F27EFB111761C7CB2
82EB41F66203DD8A41EE4E5C9FF0F0DF2734EAA3B4E36DF25C19158A2A873B44
935E86B08D56331402015614C10DC809D696F930ADDBB994E1887E1DB52B9433
D88983E7F5E8F21ACE8E6E2EB23BBF72416FDE6274B66B0E9E0A7E7D287E82D3
557C8A5956F4DF0B9E4BDAA0E839B78CAECE73ED7DBFB6CF8EFD8FBB81FFC513
9DC022A39B30E223790A3C7897C554BD1896F42D3FE075521A8C020C7B7FF352
DE57D9BE94BB27F85B0CB9C15859CDC7C181F1FD74C92F1612E9C4197D0F3807
73AC3BCB388C4BBE70907F1C6D1EA8F0912E1D19FC86629220B4238A0B2C80A2
8FB47F9FA32D39E7D1C344D53E1ABB74BA952ED16BBF7AE7E4D06992086429F2
871C57088082D695E481C9DD9F83370A2960A97D970CE8CD628E10A111F78FBF
9B4B19E81AB0484CACCEE4E12B030AE0D5E7B3CB4F458C94BCA7D82DF15B440B
B45129A551B8800C7A5ED568D5B95B2C3E25C5D283A30A29335B1956C5AC301A
59E7C875825C0F25867BAC3A262EABE2E3D3A829F97844CA06C0F25A3784772D
659C671836CFB8AE453C2D57AF9597B991CB93D7A67DB09D855C3A01F721D169
7918B3CDE9696E3C0B9538A6DA7E28D047902C95EFB2DDCEA20B171D27E364F9
986989A607C27EB51D2EC0D90AB406A2F61E353CD7684A19AA8FB98C5CF24C71
5CFC76B176E12295C35B6057F8FC209EC759CEF05B47768367D1C32985569674
3DD330E981BCC374C8718F8E96EBE70EAD65D49BC68C4444484CD1C054616467
55AAB3A04EF82E8F06BE111E399EAB2264845D433BAF60DBEB9D60CA975EB439
742646C11B2B610145A156E5F6AD8A8258C16B801EDB7D4D7710B0D9BFD4316B
44C8DD70C8BBFC9168E23A66FDA1CBAF4B0D544E70294868E303C6290111A402
1ADA8CBBF14237EB5742C5DE1D41C70EB1B00C5F181C231DC100679DBB611729
156754600B46975ED404695B3C587DABF1A684250E204E042700F9B209734840
2B479A4F1BD804A81518A9249D9063C0F4441BFF33D94359731741FB171A65DC
7E90B0173E4E835D9A879B43216CA6C79B553A0B82964F47818C018A04229DFC
3B3503260DFD80F95CE121CA4B37D4996BEEC4002EB296E6C8B200B3E204CF2F
99B43CCA6B78C7DE9C02A746F89245D33F42DAC4B919A0691AFEDE983F7D4668
5B38B3A98705DBE09FAB23E59DF47F9FFD68785D7274F6001AC7D98A422438DE
3E6AF936E925ABEA63932160D828D45384F242E9062322CF4C5CCDA58CAF8A51
0C59E399D3E4F2897B529CF5430B973C23D369F2EF00B7567C76724B62BB0C1A
526BF8AB8D93449AB8234612A117DC1A5CED78C2B74114DB4FE4ADDC43A96020
B6267C736158D714CD29BB1F2976569639F4CF087C0C6D85C5725607F6CC29D8
12F6ECA8AEC76DF3988DCFC922061BC307671ED7E0D015457FBA3A994ADDCD9A
A43DB0BCD7A8480579D22A53938C822141D6CB491B726A41B5539A862C93438C
17C7DDA310FB751A11BEF388D2B78205DC5ED1B38F5E8939E20422FC0A9CBECB
F7799380D4EFFD55C41739E0FDAF892A6E6455356E0523E8AE5B0EF2861766AC
D41A7CF34562D23EC75C7511B9648934E12A5DE4D307EDF9F72D7E87E6904E62
49ADC832EB590185C18D12C08F5A4F7DD506869872CB35084BC83F6F5BE5C568
59B7C691BF6F55C1D8F5215DF3E5096E4F24CABB1BECDCB23458C568DA7969BF
C570977171382AAA6582A4F21A5012C6D79E8B548CF09A0A31E8B166081D7AC0
79AFEF3C858CA3A619BAF5F604C045915D966B6E92878510674F0D664442CDBF
39D261AE34E4F64A28A14E10C83E5A39AC02EF749E35D17CE2E0FE385B9B05BE
4DF3BC25DFEFAE4490774588E3C72477A4DC69335048094B65B470B1EBCB848C
B48D052CA2AB1D782582A5B967BDB97B345DEEB17C4A73DACE4870776479E2CE
A2B6F679C1FFA0D1D41114B05B42BC2BDE2567985FD115242349DFF7E7601D68
842AB7FF09E7A787826AB13446DF7783B259549339B595022711047F8C04BFBC
4EF58AB31DE56B115B6AEB0C7C09AB5728842301409B2D0F89566576C8F81B61
840517B421C3EEC2D7AB1F03C22DA4FEA94E2FF4F7625863942F6E01E70BAECA
8B33865EE192105638B16D7ACC7A96BE2C76E1F6C3379112822E6F96CA5EE9F3
5ED1658F66110A91152B104FEF087C1000ADD77822AA8DF28B86909EE7F7BEBD
A961FFAFA81A3E8AFA12F26905F99BC5D9D9726B575177D0A011F2DD281DB363
AFE598C3EDA16E64902235363FAA0663A4B8159DF6FBA1D55BB33E4FA6A9B4BF
512D04C91125C2CF812CE6C953A9185381872F693579FD3100AB42260343B38B
6AAF0D464E58F149C2EEB29157F727533F23937159C1F3108A629B798021E949
93E7BD6884B791DB372B24CFD3A6DAFFCE28FCE0683CCAC8F7D431B32955F66F
4555D99F2E2D3BC1A6DA969041B18B8F2602F1CD499D32A90E401AB64F51D9A0
E89A2DA0E766FCC593B3EED2D6B53C9905027EDB3CD26EAD4201905F43A61120
4B4A2404F524D5A61FC31229770B03D68856A83BE89CCE2240C38A1054F86D61
828763822DDBEBFD3DEDD4C85EE513D30E78D7EE31786EF26B3E4BC6EF17A0C3
5970004D6AB05F60956DFDD111342CA54EF5C62A6FA7DB6E8949FF0CFACD9BD1
03BD0F3D3ECE37E58386A054E413499BBFC48DECA68EF5AD699DBBA6C5667F89
41D342499CEC4EE601315F22820258C81966AE4C1EA849834684622865C61E39
E4D5CBFA1EE75AFE94913335C1FEF98DE62DD1DF45C7C96F9B701005F70710DF
9C927D131F1900350FC8E67D174E8E17073AC9D62BD4121CA8CB98B720CA0030
4A0819C9611A2547C5BC8818DA606EBC53AB04EB3F71B2CDC0269D62BD5E2952
10689CD521E02384855145CE18434FB8AC508C2BDEA81E30866FCE337DF5E6D6
F6653368C5BF7E6B88518FB84AF75B80C768699ABFECFD7091CED76AE4B15242
86438503E44E678C2200F5903407A8120127B290C2EBE7C0FBEF8F4ACB96C905
A083FD5DB9A946E211C0C293B29A52D0E52968C16535A7C8DE64FEBF951C45C4
0418FB7DCBF59F902D743EC142FFD2FA9A043FBB452044142D048FADBFAE7C5B
0AE02E957ED6B4F03DB1EB4F2BC8932740EEC24F6F4E57C1B97CFD63EBE413BB
A3175803D18C78B6B43CBFC10C824B8C420DDC095DC50F7165003969B4C042D3
E33C7B564BB26AF6A2A135861893532D5DFD5F54944DBE9722CBBB7C651CA23B
3E5AA73298C2A8920A8F0B4B82D0D950BF906FAC79246CB30580293219FF0F3B
D1802F812CA2A5D128C769A9024A6BE4ABE276F5FC00E7D19B2B3C2A043E714D
34196C70343BF3BCA92718FC5D2DAEE26C1B8E74F8DC576347F1E34CC40A0203
8F8F96D2654D75C5843D5ECDF79B7EDFC1EA7A290E230547567C9F43CACB6BD4
7DB8EF6D00B21D3E9CCE112431E40C7F800AB2FBFCE5915AC77B8E74E7B5263F
45CF9219BC1C9B9DE91E49074CFB8A3ADE0A72A98688705B450A4C2E3CB63E4B
F8F224DC38BC21A8BCE583A60D42663033E423DDF10F8520CF7C5F21F492DA79
B107CAA7CFA8068B52A5FE8EF569026CE3BB5CF736189E5CE58830377B7CABF3
4FCE13B5202504C973919F62EAF6D72B3F63435C8BFAF950B0D353F6D90D2F2A
8E89774CD99E3A69197B94152BFE7B25E4A8396D491C469EF65AFE38F22870B1
BF342E39EB1AE0CA9D81760B343B02006165ED56CA36F6C590B8A4453550F6D4
F4DCECD14AEA4511FD8CB76884CDEEE684C55664BD7BCFFFC12014A7E1A4D626
372FC90C30B19A2C3D9BFF74B90E6D56CD9EDF5FA06ABC1541C66B6E3F5C3423
7A9D7E8628C6705888749867F53CA0F628D62C202195FE5FBAB1E6FDBCD48995
C429AC1F00CF544EDD8B18656411277E82D8964ADC8B3BCB51BD5D7E8255F719
9C443B64C2471E14A710D68D232129C0640CA9B66267AFCD7D1F0448D8FB59AF
431C71E8591DA5273BC4598E07386E7FCDF7A99F99DAAC4B65AE499E60A8350B
0064880FF14C3CDAD2FA4CE7306CBC1AF67ED38684C8C403065F6BFB3C295BBC
5DAA5E6B2C5E2EFA25D2B8CAF324FB7FA008BC4C6714E29FC9D521DDC7230AD1
2CE7FF42345559FB52F05D741D9F27010D3BC71A63EADB75A67D7101BAF16F1E
3271C306ACB269623F0C5FE1D9EE519ADC3D106B9C389EB2AFB30037ABABB211
962B74010C31FA40A6036DAF982B25B3B563CBDAE1BD1C50AC212AA3299B34B6
74804193025A21645B04500A956D621B1AE94C020B659842041548A56E631ACF
44F091E116580881482E6FFC5687BE8A1880DD287E0DCCEA95F59F2FF6A5CA34
8F2FA24045F57B2DD3371D227AC9FE6135983A27C59DD7367401F9594C90C728
AA165F6ABCC84C49ABAD46ABB639747628EF27459CEC34DB3E70F51D805F936C
D5EF5A8E33C525B525D942C19BC4C31D89FB9581B8A36D9F8823462033C4E41D
B32994BC3DA19CDC70B277DDE73DF68B227D3BA33FB7AEDDB1C80AE58B639738
0D5AAA5B3901DD918F19AA165D7346382DF47D4F436337C6CEB07D5CF39B3F12
0AB7C50527251BBA5B33CAF6D5743525082848F761128BD976623855A9EDB82B
F78F267C1327DB96EBD9BE8A48F4257BC3EDFF93F2494BBAC5E67FC6FE641BEB
945F8403B128B7237C52E6AE34830C6D92366527E017C67DA25989AE516F6D02
A95E957406CA199F6A296D00D0FBA1F4DF5A0984B17F5DF4922F419CEED5F5DB
78AF4DB3BA2469D989C519BE9186E3E071D37E54D04690A2572ADFAD6620C0E9
103FD75F0D6D2F71E93B13AC96BA8980F60CC8A76188D44D60773BD5A6BB5091
8803A247771278D54D2A20775232FC04856101A521E7DFC37C7A2D8D380A8F16
171E7A0B71820EAAA60BFD0B76FE3D6E90BE6D2B1E929E1AEFFBB70CE8D17521
8F7A03A24A18E6347C1EAFEF725BBFEC1F4864F9DAB155F9EDF623528E313163
520336E7E4F1496220CA709F7146CE351F17E8486D62240B25895355278858E2
61DA17DBE9EDEBA29D03D72794F2306C9F454A8319295742DB79C9152DDFDF8B
75ABD1231EF876A3B1D7BC897C5AE045360F17C7F2C75D634015999ECFD9E432
587FD0AF63FCDD50D9F9BD33961EE42A6483C8C9AF064CDC4E85105DA8977381
846A4CAE90CAA17CBD873B3BDDECC3AE7E39A4E80B52747406DD87E55DB01070
3134DF56E86D29C4D52D34C94156E36E33E16AD46C86281555FB3852ED0C33F6
094FCA120094BF03823777033554E86D952D845A14265DD224D50A3EE640AE68
BECCF57368EB8732B57135C13AAF26D877EB05C0988C44A2CE3CA4D483B6CAF5
5A3C5BBB8A1DEE6B9FFC84D532ACA99B4D642A4B9BA33015BCCB8C7EF0C83B97
25F1BF7AFE121915CDF19E79AFA7BE3C75F5B9B93D41FF8F3F798CE35A5F7ABD
112823B3AC62FBCC8BB55E374AC810781ADB46761923AE590B19236CF096199E
A5AC1C001C9224870C079E356818E5A775732CE34A649205DDC2F7C9237AB747
464D09550A434113C64B6D5CCEA0AA68FF6FBDF5495FD95C16E39C34151EDD0B
87F395D4B52A71B7564BA704B2FF9D23A231400925B2C0F6536FB889B42B49A6
F163D2B618B3C984862E69BF8B6B07CF8B795295A4392456ED1318BDD1A6DC1F
F9A0D88B9871C5094E75A9ADD386C6691CB83164E6B1C5486BBD6BA2EE8E2566
4AC2BEA4680F71004FDD167E9233EA3C786BD5EDB11ABF62D8DD706410D79962
C76702956058494BA80B5301C2BFDEA87C12952E075CB8FEFF8925186A6B42CC
5915B11DC5A543F5EAAAFE824C1CA796273BC10957A09837FDD409C4B7995520
301F541ED967C7F434A6ACC0890579005B863B70AC888BCA46AA1D74AE6614C1
98E2A14DA531FFEE7AB7308222F699BB38E50D8043C183CED5A2E49943904952
8B65BC216B4F10649945220E05C424F852C6F409C40EEE3AACA285D16226E185
5B909D7E7D1A0E9B0833B286ECA1788636F4396E822D01C622610F9381334F51
9F613A4FDA9B67B497C99C937839C8C50CD21B1D821C16F04A1E34B7AC5AC747
5F4723A4B0DBC2721A7C56371222D0282D22B8E3C76FD2470FD8BFDF1BF1F89A
9639DE88457418E156B2777ADDFA92747E6A6565814144A8329447BA6E8E6B47
0AF50B48168681122FAD14CA49EAD21C40093567C29E9F025C02A5A91684A82D
6D0DA5370442D4F79F78A959DD092C7EA848C0A3CAAA5ECB1615771C1FEFBCC4
E641039F8259756DC6924652D1ECA956CBBAE24D9A75EFF065A1C9E9FF88C8AE
7F6F271E811F2CE5B1E40EFD42E75236D381802CC489ED3CD3B39412DFC97C0E
D365B99EC015EA7D8BCD70F89F1A2BFB4412B717C011A142E79573D8CE6294E5
C95605A0FE045C1A47233D3336BA1195EC1C67CB5D950750791153368D9CBA05
7D5B93FFF9F1FDC46BAC3284A0EB9D24393D5F5770E44D4F8FB1F7AF204B8BCF
518F1482B42618ACB528571BCE762950055AC33AB9CDD17DF985DB917899DA29
96517E9C041CD5AC3C1F1ECDD214FA4B9D3BAD36D43B1DE4458707EFE257EC09
35F7DF0D5D287566A776F52E09B942FA847ECE2064C26D0AFA2A51A8DDD604F7
A2AA8AE8931669EB290E4DC26AAC7298EFDE01EACDD0EAC72A141707485A165D
3599489E5DDC31F7C7DAB8F22269E06580A57C71A0F74B0CF43E2D28DB1151B4
B7C21A7120048107DBF12E733330DA540E4E89BB2E5993CF80F61633656F1063
7F4AD83B533BEC4BEE3DE3ADE8EE5483EABCD8B75A0CBC00F611EDFCCD2F24EA
149C123C7D40592A2A47546003A2F5D8AABAE313DA9EB74C7E5E8411CCF1A6A2
4974F8186788E3EF028103AED63E04B24F572EA34A6D5EC3D9BFBE43358A42A0
6506D1B8CC4B98F68C7E153F7664F7F2ED6670128E0CB6F406C0107322A0772C
C0C6D9ECA84483848E64F8F4E0DFAEC1B18520C9890C2AE7D9BCAF984FD14BFA
5B21EE2FEE900A8E8C0951A4839199A51461CBDD1AFE42C68EAEEBC231459E7F
10683A716D360D88545606525830F59999BCCF93598FF9A71C296439D283775D
109A46F6FDA533048E5A52972BFFBEF2B68A2301BAF750BAF674B814EFC31BAE
97CE0479E6FD664331384143E5C9C6D9F4AF6169AF0BEAED865872F8EA1BF617
75C0ED995C57C2864AC8257D229CD28A3904455F42FEA752C00410C49419B8EE
BD166A76F54F4D576E3CDF2AD73CF79123587383391662D78F08C47E8220A155
86CAC0D77E8298B0300C7730E953306D399554B347264CAB235458B1A9F2A264
2D2E196FE13C9FDE3EA3E89779C4B43CBC62C8D5AC5A1AD8D3E0034A1A294D31
AE37A4812221B9952D632281C3D968DC3E7AF124CFCAAD3ACCF3E2492D8EC399
56498B8E271E3D416A9BA42053AD6B4743CE1B19729445C7FFC69C385C75FF3E
836A26D2959F7B186AEE11E328DCFE7BA2AD586BDDE6A81991578DE57A38A268
E39196FB21504ADFBCA6CDFAD1416C3F856567AD49E9FD453B69C4A305161589
956E8FF68B24D8F85C0EF27F34DD890515F9E842849290E077C1D6269BAFAAAB
7BC94287F275D0353D65AE6AEE7EF95F66DD112D5B2EE503CBDAEB0E6208CEEF
743A9D704304C530EC3986317F88D55BE4B7FA9E77723E20282381206F639E35
F569B25871EC4DCFCAACE876FC4FCC0057C81A22579A75BEDB28B1AD69E2C476
0CCBB11A75E72160273CC8207C89F74FA75EC4F78F717ECB980BE78008FC098D
5B247170CBB7C5713848EAAB071182415A530447C1CDE396250D42A755898C13
6B040E15FF9BEF0C8D16DDD76EB1E50AEF2919A038A9BDF35B68776D1879545B
8A75A92B6BE347CD265596C10E74C5D10694F0C647F1A034C7A2528A2C5A23DE
3B69AABBD5F566531EBB6CA6F4FFCD7423B7F4751A4A7465FFD5E95D415BC30B
02C5923A03EDA067F880FA2F18451F62B799727D22B1DB7B2F2E7DB193D8C0D0
1B0220B7099052D9D0EA629FDD356BF4DDD1EA623D833A235492832BF95F65F4
55BD9F24470D82E439EECD8DDDF1CE70CDB60BAA7B424DD956870C6DEA454A58
3448D6B4894744ED400170A547568D973B435EAFF95E099F60F5850EA538C64C
45710E260F2568414FD9C0B8FE36E761E24A3310DDEFECEA15F81C9B27CFE1F2
84E7335BFC03FAE739BA48C34B4C9D7D5C2F8C4820CD506A28279795A84DFA8B
35E44687DA2536957572ECC7C7C010440C2DEF08C3A57EB0ABF6F8644EC0A6BA
106A0053CBC5CAA6E58E5A37E1023B18A23CF60FFF62D238BA7C003162652433
D16C3CA4DFC33DB5419D006D5F27C7882DBA0F76617582649CE82AC7EED394E3
056E0FE250F8EBB5EBDFAA528E3357819503800E1B9D12480DD2067340EFC54D
AB24EBED0B3F063B2EDEF184F53B26AB4E24BB791F3366B74741872F896655BE
B4331046A10B4FDE500C02889B9DE1D23C968F84F0663A6715E3B05ABEC53883
D64BA312F57A92447901FCC2680425D5B69D11449B6DF01D71260DFE0461F6CB
6C6E0746D4FD06C56E72F633296F19702B8956B469BB137142465BE8DEABAE12
F284B746356F264E0AC290075FB9C20C8DA41F3692DF07766BBC7D7BAC8B6DC8
9050D64970D1F60CEF2C847FFF18A1F2074C399DF23FE1D05F9F794608416A35
7CC883FEDEB6F40B6F79903FF51C79467B432DDA0BB6125291B9BD0E63C002EB
732DE6CF4AC90962E6A796F8FC3EB8D269436C1378BAF67905410A6B57779A8D
86A190F5664BE5EE50C450905EEA13D916AE8D0138D12A5A23DE696AB3B583A3
A6A72C05E6CDC0F427CF90FA8FAFCC7B8F5F2834FE480E31CC25102F45AA7ADB
92ACB6DE6786EBCF8AD1DD8EFA9E880B111EEFE1653CFCCEE10D02ECCE0D6D5F
8B463D9C070388BF6573E13ABDE043AAD77E5B234A3E1BC39CD6905C4C881E73
8195A370B1E319D1E75D77B8C1431D5987771EE9E0606E9F695D78B0D3A9CD16
1470563A5E1A5D31C899529D5FB67D15944E303AD78626074C82D6BF147021EB
4A07A7E84F22739ACA6F820309AFF9B06FB88D0CCFBAF7CD56AE4D24E676C252
7C02CECD1F9E75E459258C682827546F97C87C8D2E88BF423050BCF754FCA5AD
0051BB04B12507B63F2F11029010687687530D10E56C81C508C55C61995D0493
E3F650BC1F9FB9DC3FD7C0C364A78DB162A0109F913E3D237EBE6AB2F9568494
FFBAA4C281137F766C0CB1B36EBEC43E96DFC867B269EE83592A0AE6C58DA95D
0EB5D4AEBF614D2BE07843778C3305E4A12FE29FA9A3385BFD5F95B0608D430A
5AA373B328528417602DB8AC1A1E7C5BBC02ABC273D09A5C36EEEA92E2E86429
5A3BE49055AA8BAE4B627BA805B07944854C507BB634B952856D0FE6FA512436
89FB581F4C15A192B14B772415822DCFB3FDA6F5BA3584CB383645D54FB134A2
DE919D8E9B7574A9471F5EAE7D94D8AA69D6584EA63F7B6C8DE57DC8EBC61382
10701233839116F2CA15E21C0921AB97D05FCD8E927F77B84FFB0C881931A110
39D4F8475F58323D6FFA232000AA57065154C8ADDA480CB90B483EFC09116D79
44759C8E31B7F097A49D3ABF279C7147CF94B26C0C2AE4D1600EA41D372FC617
6B27D9593745DB7BA7555FC40E3AF4B16E59DA5A7D460D57290AED077024ABED
7158E1B6E04358A48240721689B24E50A10D8540DFB4BFA10C446D6B5C3386DD
BAB8DA100A39CAFAA717E0FC170AEE68DC51C1F03E1C9A742B203328AF6F7277
93316DE7B5D05BC66BBDD9C4B892C5A28AE5B41C60CAACAF8141C45E8E5E633F
02A37E3704E60D807D06EE38C190319ED741E7C298ACD85CEC70D88963ABAF73
5E059CD920F315AE0E3CF9A65F6AAFE5361E34F2A2206DDAC21616BF3511A775
87296BA6F97E272B3427289621C332C1C7ADCA2EA19F7F17F9FC13124111166C
DD2B1EF791DB54221F3245FA0CBD189F9AAA49F24AA53BE3E60D03F39FD013CC
3098BAE61821C800DE1BF36F9C9C1ECF277FED702E56A4669E48B87B378200A5
895C27C04A692295701A2504115EAA869E6C1D8C8FDAAE1A848CED007E3A779A
F619FAAC4B07019513B6CEC73C0B88234C05629E01C7E89475DE698416F57CF6
B4D81A2947AE8402E7120295413B637100F9F22C9208069293BE9E64017B3699
85473A35FE76E0DE3F4E978401A5AB60ED3656FD1CC7AFB55683509AB42EBBEA
2B683A6352468980DB87F4BAD202F3BEDC3091CA80159E71EA8709A24BA74815
FA82B7565CEF2AA24EEB398BCFFFFA0D7FD0DBA15D73ABB7F45E667D2F4737FB
94DAEF6724DA206564041C55D2F34147A134AC9075D89E630D6294C4CB2AC198
FC5D557D27B16E1741E9EC32ED63497DE8308310DAED63D9848166AF47E85D01
05963DEA691FB8C14A778209D85660589A7C2A9EDC210C61AD4A053198F77D79
F7F5B5BFD0BDCAC43C32E3C9111F7B29A771CF93AE6A9DEF4DC0148D6F6DC205
A809E64FB915DD2C2411786C4EF538118ED746EC86D49D8EB781DE78BD45BBF7
E819000702CD45B3904507A02044DBD0E02B96E5E6B600601FB89C79892CABA5
83CB1643BF2BFF249A4CB81E2874569003CEA3F9508EE2536A53A7DA8F3BF67C
9CBD9A8502CCE9571C291099A0B37DDF6A144EB6323E518AD26512FF9F254225
67B31CD5E0A9FD1F9718061DD9CC7FEAF7B7C7B980FA5BC796BC5131021AF96C
B0841A55CB8B4A7D5640EAE6F383F95629204F87C0B7BB3C160EFBAB5642C7B0
08CF1B24A9C483A4137087BF04F7CCF9BC630CBF928190CCD80D987E7C371768
70ACA763A8A3FBAD7C0252276201BF80593A832716CB9B27C5FAC3501C5918BB
84EFDB5EA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesSeconde.dvi)
@start /Fa 213[0 0 0 0 39[{}4 83.022 /XYBTIP-Medium rf
/Fb 213[0 0 0 0 39[{}4 83.022 /XYATIP-Medium rf /Fc 58[33
33[33 13 162[{}3 45.8281 /Fourier-Math-Symbols rf /Fd
140[48 3[63 1[102 3[32 50[58 54[{ TeXBase1Encoding ReEncodeFont }5
109.987 /Utopia-Regular rf /Fe 138[32 1[23 3[31 33 1[15
2[16 32 28 1[27 3[28 29[37 35 10[28 1[28 28 28 28 28
28 48[{ TeXBase1Encoding ReEncodeFont }19 53.4661 /Utopia-Regular
rf /Ff 57[44 44 33[44 163[{}3 61.1042 /Fourier-Math-Symbols
rf /Fg 141[19 12[26 49[26 26 50[{ TeXBase1Encoding ReEncodeFont }4
49.6466 /Utopia-Regular rf /Fh 157[26 26 28[35 30 29
29 65[{ TeXBase1Encoding ReEncodeFont }6 45.8281 /Utopia-Italic
rf /Fi 198[24 24 24 24 24 24 24 24 24 24 48[{
 TeXBase1Encoding ReEncodeFont }10 45.8281 /Utopia-Regular
rf /Fk 162[52 1[52 91[{ TeXBase1Encoding ReEncodeFont }2
158.413 /Utopia-Regular rf /Fl 162[63 1[63 91[{
 TeXBase1Encoding ReEncodeFont }2 190.034 /Utopia-Regular
rf /Fm 165[54 8[58 2[58 9[54 68[{}4 76.3801 /Fourier-Math-BlackBoard
rf /Fn 92[37 163[{}1 51.9385 /Fourier-Math-Symbols rf
/Fo 151[32 37[33 66[{ TeXBase1Encoding ReEncodeFont }2
51.9385 /Utopia-Italic rf /Fp 205[28 50[{
 TeXBase1Encoding ReEncodeFont }1 51.9385 /Utopia-Regular
rf /Fs 135[32 2[38 21 1[25 9[37 2[28 3[34 24[47 6[38
65[{ TeXBase1Encoding ReEncodeFont }9 61.1042 /Utopia-Italic
rf /Ft 65[47 7[34 34 31 31 2[42 13[30 30 35[34 34 34
34 8[76 76 70[55 41[{}15 76.3801 /Fourier-Math-Extension
rf /Fu 221[90 34[{}1 76.3802 /fourier-orns rf /Fv 4[37
16[31 31 45[27 15[27 20[31 28[31 30 1[31 37 21 27 24
36 37 35 38 56 17 1[17 18 37 32 19 31 37 30 37 32 3[20
1[20 11[47 2[35 16[16 16 2[32 32 32 32 32 32 32 32 1[16
1[16 2[21 21 17 36[37 2[{ TeXBase1Encoding ReEncodeFont }49
61.1042 /Utopia-Regular rf /Fw 134[27 30 1[30 1[20 2[32
34 2[53 4[35 29 2[34 26 32 33 11[46 2[37 1[36 1[44 53
33 38 20 20 45 1[33 35 44 38 37 36 65[{ TeXBase1Encoding ReEncodeFont }
29 58.049 /Utopia-Italic rf /Fx 159[33 96[{}1 58.049
/Fourier-Math-Letters-Italic rf /Fy 242[83 13[{}1 83.022
/CMSY10 rf /Fz 204[36 36 36 49[{ TeXBase1Encoding ReEncodeFont }3
68.7422 /Utopia-Regular rf /FA 172[62 15[21 1[42 24[83
13[83 1[83 4[62 10[83 4[21 1[42 83{}11 83.022 /LINE10
rf /FB 133[36 36 39 60 39 47 26 1[31 43 45 41 47 70 3[24
46 38 24 1[45 34 43 43 10[49 61 46 41 49 58 47 58 58
70 43 50 27 26 59 54 44 46 58 50 48 48 65[{
 TeXBase1Encoding ReEncodeFont }43 76.3802 /Utopia-Italic
rf /FC 93[54 47 161[{}2 76.3802 /Fourier-Math-Letters
rf /FD 62[53 4[50 6[42 84[44 96[{}4 76.3802 /Fourier-Math-Letters-Italic
rf /FE 177[58 6[65 23[67 67 1[67 8[65 23[46 11[{}7 83.022
/wasy10 rf /FF 190[66 65[{}1 76.3802 /Fourier-Math-Cal
rf /FG 34[45 20[55 55 55 55 59 6[55 55 3[55 55 17[55
1[55 21 55 34[59 59 59 11[64 5[21 13[55 55 27[59 8[0
3[45 78 15[76 33[{}26 76.3802 /Fourier-Math-Symbols rf
/FH 57[42 42 19[29 13[42 1[42 48[48 63[17 14[58 33[{}8
58.049 /Fourier-Math-Symbols rf /FI 22[30 30 109[28 5[20
25 23 1[35 33 36 4[17 2[19 30 3[30 30[37 37 1[23 5[31
31 31 31 31 31 31 31 31 31 1[15 1[15 44[{
 TeXBase1Encoding ReEncodeFont }28 58.049 /Utopia-Regular
rf /FJ 221[38 34[{}1 76.3802 /Fourier-Alternate-Roman
rf /FK 4[46 1[46 4[44 4[22 22 3[39 39 39 38 4[40 1[40
22[46 8[49 4[34 10[27 4[34 14[67 4[76 38 31 8[78 14[26
1[26 37 39 37 59 38 46 26 33 30 45 46 44 47 70 21 40
21 22 46 40 24 39 46 38 46 40 3[25 1[25 3[72 48 60 47
41 49 58 46 58 60 72 43 1[27 27 61 56 44 46 60 52 49
49 1[30 1[44 1[20 20 40 40 40 40 40 40 40 40 40 40 35
20 30 20 44 1[27 27 21 1[64 3[18 23[31 5[47 47 2[{
 TeXBase1Encoding ReEncodeFont }100 76.3802 /Utopia-Regular
rf /FL 6[48 15[40 40 30[48 24[30 54[40 40 1[40 48 28
34 34 46 47 45 49 72 24 1[24 24 48 41 26 40 46 38 46
42 8[48 1[49 60 48 1[52 1[50 59 56 70 3[29 1[55 45 48
2[52 49 6[21 43 43 43 43 43 43 43 43 43 43 1[21 1[21
4[19 36[49 2[{ TeXBase1Encoding ReEncodeFont }58 76.3802
/Utopia-Bold rf /FM 22[57 57 30[69 80[57 1[57 69 41 49
48 66 68 64 70 104 34 2[35 69 59 38 57 67 54 67 60 12[69
1[75 1[71 84 81 6[80 65 13[62 62 62 62 62 62 62 62 4[31
4[28 39[{ TeXBase1Encoding ReEncodeFont }41 109.987 /Utopia-Bold
rf /FN 22[47 112[45 4[40 36 2[53 5[27 1[48 1[47 55 45
31[63 67[{ TeXBase1Encoding ReEncodeFont }11 91.6562
/Utopia-Regular rf /FO 22[68 82[66 32[80 45 58 1[78 1[76
82 122 3[38 80 2[68 79 65 1[69 13[71 5[125 77[{
 TeXBase1Encoding ReEncodeFont }17 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Rappels de calcul et de g\351om\351trie)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Nombres r\351els)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (G\351om\351trie rep\351r\351e)
/OUT pdfmark end
 -246
-246 a -246 -246 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (\311tudes graphiques de fonctions)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Probabilit\351s)
/OUT pdfmark end
 -246 -246
a -246 -246 a
SDict begin [/Count -0/Dest (section.15) cvn/Title (Fractions et manipulation de formules)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (\311quations de droites)
/OUT pdfmark end
 -246 -246 a -246
-246 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (Pourcentages, taux d'\351volution)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.8) cvn/Title (Op\351rations sur les vecteurs)
/OUT pdfmark end
 -246 -246 a -246 -246
a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246 -246 a -246 -246 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246
-246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246
a 0 TeXcolorgray 0 TeXcolorgray 1162 166 a FO(M)n(ath\351matiques)30
b(\226)f(S)n(econde)1496 577 y FN(C)o(orr)q(ig\351s)18
b(des)j(exer)n(cices)-246 937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end

-246 937 a -246 937 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246 937 a FM(T)-10 b(able)22 b(des)h(mati\350r)n
(es)p 0 0 1 TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a FL(1)67
b(Rappels)14 b(de)i(calcul)e(et)i(de)g(g\351om\351tr)q(ie)1045
1120 y
SDict begin 12 H.L end
 1045 1120 a 1045 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1045 1120 a 0 TeXcolorgray
3058 w FL(2)p 0 0 1 TeXcolorrgb -246 1293 a
SDict begin H.S end
 -246 1293
a FL(2)67 b(N)n(ombr)o(es)15 b(r\351els)375 1293 y
SDict begin 12 H.L end
 375
1293 a 375 1293 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 375 1293 a 0 TeXcolorgray 3685 w FL(13)p
0 0 1 TeXcolorrgb -246 1466 a
SDict begin H.S end
 -246 1466 a FL(3)67 b(G\351om\351tr)q(ie)
15 b(r)o(ep\351r\351e)532 1466 y
SDict begin 12 H.L end
 532 1466 a 532 1466
a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 532 1466 a 0 TeXcolorgray 3528 w FL(17)p 0 0 1 TeXcolorrgb
-246 1639 a
SDict begin H.S end
 -246 1639 a FL(4)67 b(\311)o(tudes)16 b(graphiques)e(de)i
(fonctions)981 1639 y
SDict begin 12 H.L end
 981 1639 a 981 1639 a
SDict begin [/Subtype /Link/Dest (section.4) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 981 1639
a 0 TeXcolorgray 3079 w FL(24)p 0 0 1 TeXcolorrgb -246
1811 a
SDict begin H.S end
 -246 1811 a FL(5)67 b(P)o(robabilit\351s)300 1811
y
SDict begin 12 H.L end
 300 1811 a 300 1811 a
SDict begin [/Subtype /Link/Dest (section.5) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 300 1811 a 0 TeXcolorgray 3760
w FL(34)p 0 0 1 TeXcolorrgb -246 1984 a
SDict begin H.S end
 -246 1984 a FL(15)24
b(F)m(ractions)15 b(et)h(manipulation)f(de)h(for)q(mules)1234
1984 y
SDict begin 12 H.L end
 1234 1984 a 1234 1984 a
SDict begin [/Subtype /Link/Dest (section.15) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1234 1984 a 0 TeXcolorgray
2826 w FL(39)p 0 0 1 TeXcolorrgb -246 2157 a
SDict begin H.S end
 -246 2157
a FL(6)67 b(\311quations)14 b(de)i(droites)595 2157 y
SDict begin 12 H.L end

595 2157 a 595 2157 a
SDict begin [/Subtype /Link/Dest (section.6) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 595 2157 a 0 TeXcolorgray 3465
w FL(42)p 0 0 1 TeXcolorrgb -246 2329 a
SDict begin H.S end
 -246 2329 a FL(7)67
b(P)m(our)o(centages,)13 b(taux)j(d)n('\351v)o(olution)962
2329 y
SDict begin 12 H.L end
 962 2329 a 962 2329 a
SDict begin [/Subtype /Link/Dest (section.7) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 962 2329 a 0 TeXcolorgray
3098 w FL(55)p 0 0 1 TeXcolorrgb -246 2502 a
SDict begin H.S end
 -246 2502
a FL(8)67 b(O)o(p\351rations)14 b(sur)i(les)f(v)o(ecteurs)825
2502 y
SDict begin 12 H.L end
 825 2502 a 825 2502 a
SDict begin [/Subtype /Link/Dest (section.8) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 825 2502 a 0 TeXcolorgray
3235 w FL(60)p 0 TeXcolorgray 1930 5895 a FK(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x FM(1)105 b(R)o(appels)23 b(de)f(calcul)i(et)f
(de)f(g\351om\351tr)q(ie)-246 -52 y
SDict begin H.S end
 -246 -52 a -246 -52
a
SDict begin 12 H.A end
 -246 -52 a -246 -52 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246 -52 a 0 TeXcolorgray 73
x FL(Ex)o(er)o(cice)14 b(1)p 0 TeXcolorgray 42 w FK(Dans)i(chaque)i
(question,)i(on)d(obtient)h(la)g(r\351ponse)g(\340)f(l)o('aide)h(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351.)-246 64
y
SDict begin H.S end
 -246 64 a -246 64 a
SDict begin 12 H.A end
 -246 64 a -246 64 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 64 a 0
TeXcolorgray -141 160 a FK(1.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1435 212 1239 4 v 1435 311 4 100 v 1488
282 a(N)n(ombr)o(e)f(de)h(personnes)p 2302 311 V 145
w(4)p 2526 311 V 144 w(6)p 2670 311 V 1435 315 1239 4
v 1435 414 4 100 v 1653 384 a(F)l(ar)q(ine)h(\(en)f(g\))p
2302 414 V 268 w(250)p 2526 414 V 114 w(?)p 2670 414
V 1435 418 1239 4 v 1435 517 4 100 v 1660 487 a(Lait)h(\(en)f(mL\))p
2302 517 V 276 w(500)p 2526 517 V 114 w(?)p 2670 517
V 1435 521 1239 4 v 1435 620 4 100 v 1779 590 a(\214ufs)p
2302 620 V 435 w(4)p 2526 620 V 144 w(6)p 2670 620 V
1435 624 1239 4 v -38 743 a(P)n(our)g(6)g(personnes)o(,)j(il)e(faut)822
710 y FI(250)p FH(\243)p FI(6)p 822 723 165 5 v 889 772
a(4)1011 743 y FG(\306)1090 710 y FI(1)6 b(500)p 1090
723 130 5 v 1139 772 a(4)1243 743 y FG(\306)15 b FK(375)j(g)f(de)g(far)
q(ine)o(,)1860 710 y FI(500)p FH(\243)p FI(6)p 1860 723
165 5 v 1927 772 a(4)2049 743 y FG(\306)2128 710 y FI(3)6
b(000)p 2128 723 130 5 v 2177 772 a(4)2281 743 y FG(\306)14
b FK(750)19 b(mL)f(de)f(lait)h(et,)g(bien)g(s\373r)-5
b(,)18 b(6)g(\234ufs)o(.)-246 785 y
SDict begin H.S end
 -246 785 a -246 785
a
SDict begin 12 H.A end
 -246 785 a -246 785 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 785 a 0 TeXcolorgray -141
869 a FK(2.)p 0 TeXcolorgray 43 w(Les)g(6)g(yaour)q(ts)f(p\350sent)i(6)
10 b FG(\243)g FK(125)16 b FG(\306)e FK(750)19 b(g.)p
0 TeXcolorgray 0 TeXcolorgray 1541 952 1027 4 v 1541
1052 4 100 v 1594 1022 a(masse)f(\(en)g(g\))p 2074 1052
V 102 w(1000)p 2339 1052 V 105 w(750)p 2563 1052 V 1541
1055 1027 4 v 1541 1155 4 100 v 1625 1125 a(pr)q(ix)f(\(en)h
FE(N)p FK(\))p 2074 1155 V 194 w(2)p 2339 1155 V 214
w(?)p 2563 1155 V 1541 1158 1027 4 v -38 1291 a(J)n(e)f(payer)o(ai)325
1258 y FI(750)p FH(\243)p FI(2)p 325 1271 165 5 v 343
1319 a(1)6 b(000)514 1291 y FG(\306)593 1258 y FI(1)g(500)p
593 1271 130 5 v 593 1319 a(1)g(000)747 1291 y FG(\306)14
b FK(1,)8 b(5)18 b FE(N)p FK(.)-246 1333 y
SDict begin H.S end
 -246 1333
a -246 1333 a
SDict begin 12 H.A end
 -246 1333 a -246 1333 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 1333 a 0 TeXcolorgray
-141 1417 a FK(3.)p 0 TeXcolorgray 43 w(G\351n\351r)o(alement,)i(dans)d
(ce)h(type)f(de)g(question,)j(il)d(vaut)h(mieux)h(conver)q(tir)e(en)h
(minutes)p 0 0 1 TeXcolorrgb 2575 1417 a
SDict begin H.S end
 2575 1417 a
-30 x FI(1)2612 1417 y
SDict begin 12 H.L end
 2612 1417 a 2612 1417 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2612 1417
a 0 TeXcolorgray FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1528 1500 1051 4 v 1528 1599 4 100 v 1605 1570 a(temps)h(\(en)e(min\))p
2208 1599 V 127 w(60)p 2392 1599 V 134 w(?)p 2576 1599
V 1528 1603 1051 4 v 1528 1702 4 100 v 1582 1673 a(distance)g(\(en)h
(km\))p 2208 1702 V 103 w(20)p 2392 1702 V 104 w(45)p
2576 1702 V 1528 1706 1051 4 v -38 1850 a(On)f(mettr)o(a)342
1817 y FI(60)p FH(\243)p FI(45)p 342 1830 165 5 v 394
1879 a(20)531 1850 y FG(\306)599 1829 y FA(\032)611 1817
y FI(20)o FH(\243)p FI(3)p FH(\243)p FI(45)p 611 1830
238 5 v 688 1897 a FA(\032)699 1885 y FI(20)872 1850
y FG(\306)d FK(135)19 b(min,)g(soit)f(2)f(h)h(15)g(min)g(\(puisque)h
(135)d FG(\306)e FK(120)c FG(\305)g FK(15\).)-246 1901
y
SDict begin H.S end
 -246 1901 a -246 1901 a
SDict begin 12 H.A end
 -246 1901 a -246 1901 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246
1901 a 0 TeXcolorgray -141 1976 a FK(4.)p 0 TeXcolorgray
43 w(L)-10 b('\351nonc\351)19 b(donne)e(les)i(infor)q(mations)f(r)o
(ecens\351es)h(dans)e(le)h(tableau)g(ci-dessous)g(et)g(demande)f(de)h
(compl\351ter)g(la)g(case)3554 1973 y Fz(1)3530 1976
y Fy(\015)p FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1629
2057 850 4 v 1629 2157 4 100 v 1696 2127 a(F)o(lor)q(ins)p
2002 2157 V 118 w(7)p 2146 2157 V 113 w(?)p 2289 2157
V 2366 2124 a Fz(1)2342 2127 y Fy(\015)p 2475 2157 V
1629 2160 850 4 v 1629 2260 4 100 v 1685 2230 a FK(Pistoles)p
2002 2260 V 106 w(6)p 2146 2260 V 1 0 0 TeXcolorrgb 104
w(4)p 0 TeXcolorgray 2289 2260 V 0 TeXcolorgray 2366
2227 a Fz(2)p 0 TeXcolorgray 2342 2230 a Fy(\015)p 2475
2260 V 1629 2263 850 4 v 1629 2363 4 100 v 1682 2333
a FK(Deniers)p 2002 2363 V 113 w(?)p 2146 2363 V 1 0 0
TeXcolorrgb 104 w(5)p 0 TeXcolorgray 2289 2363 V 1 0 0
TeXcolorrgb 104 w(30)p 0 TeXcolorgray 2475 2363 V 1629
2366 850 4 v -38 2484 a(On)f(compl\350te)i(d)n('abor)o(d)d(la)i(case)
981 2481 y Fz(2)958 2484 y Fy(\015)f FK(:)h(en)f(\351change)h(de)f(30)i
(deniers)o(,)f(on)f(a)h(4)10 b FG(\243)g FK(30)g FG(\245)g
FK(5)16 b FG(\306)e FK(24)19 b(pistoles)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1629 2567 V 1629 2667 4 100 v 1696 2637
a(F)o(lor)q(ins)p 2002 2667 V 1 0 0 TeXcolorrgb 118 w(7)p
0 TeXcolorgray 2146 2667 V 113 w(?)p 2289 2667 V 0 TeXcolorgray
2366 2634 a Fz(1)p 0 TeXcolorgray 2342 2637 a Fy(\015)p
2475 2667 V 1629 2670 850 4 v 1629 2770 4 100 v 1685
2740 a FK(Pistoles)p 2002 2770 V 1 0 0 TeXcolorrgb 106
w(6)p 0 TeXcolorgray 2146 2770 V 104 w(4)p 2289 2770
V 1 0 0 TeXcolorrgb 104 w(24)p 0 TeXcolorgray 2475 2770
V 1629 2773 850 4 v 1629 2873 4 100 v 1682 2843 a(Deniers)p
2002 2873 V 113 w(?)p 2146 2873 V 104 w(5)p 2289 2873
V 104 w(30)p 2475 2873 V 1629 2876 850 4 v -38 3031 a(On)e(peut)i
(alors)e(compl\351ter)i(la)e(case)1086 3028 y Fz(1)1063
3031 y Fy(\015)g FK(:)h(en)f(\351change)h(de)f(30)h(deniers)o(,)h(on)e
(a)2280 2998 y FI(7)p FH(\243)p FI(24)p 2280 3011 135
5 v 2332 3059 a(6)2439 3031 y FG(\306)2518 2998 y FI(7)p
FH(\243)p FI(4)p FH(\243)2669 3020 y FA(\003)2664 2998
y FI(6)p 2518 3011 176 5 v 2595 3099 a FA(\003)2590 3077
y FI(6)2718 3031 y FG(\306)d FK(28)k(\003or)q(ins)o(.)-246
3143 y
SDict begin H.S end
 -246 3143 a -246 3143 a
SDict begin 12 H.A end
 -246 3143 a -246 3143
a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3143 a -246 3161 a
SDict begin H.S end
 -246 3161 a -246 3161 a
SDict begin 12 H.A end
 -246
3161 a -246 3161 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246 3161 a 0 TeXcolorgray 78 x FL(Ex)o(er)o(cice)c
(2)p 0 TeXcolorgray 0 TeXcolorgray 147 w FK(1.)p 0 TeXcolorgray
42 w(On)j(compl\350te)i(deux)f(tableaux)g(de)f(propor)q(tionnalit\351)i
(\(on)e(tr)o(availle)i(en)e(min)h(et)g(en)g(km\))f(:)p
0 TeXcolorgray 0 TeXcolorgray 452 3354 1072 4 v 452 3453
4 100 v 528 3423 a(temps)i(\(en)e(min\))p 1131 3453 V
127 w(60)p 1315 3453 V 144 w(?)p 1519 3453 V 452 3457
1072 4 v 452 3556 4 100 v 505 3526 a(distance)h(\(en)f(km\))p
1131 3556 V 123 w(3)p 1315 3556 V 124 w(0,5)p 1519 3556
V 452 3560 1072 4 v 0 TeXcolorgray 0 TeXcolorgray 2615
3354 1011 4 v 2615 3453 4 100 v 2692 3423 a(temps)i(\(en)e(min\))p
3295 3453 V 127 w(60)p 3479 3453 V 114 w(?)p 3622 3453
V 2615 3457 1011 4 v 2615 3556 4 100 v 2668 3526 a(distance)h(\(en)g
(km\))p 3295 3556 V 103 w(15)p 3479 3556 V 104 w(5)p
3622 3556 V 2615 3560 1011 4 v -38 3726 a(S)n(t\351phane)h(nage)497
3689 y FI(60)p FH(\243)p FI(0,5)p 497 3706 181 5 v 571
3754 a(3)701 3726 y FG(\306)780 3693 y FI(30)p 780 3706
62 5 v 796 3754 a(3)866 3726 y FG(\306)14 b FK(10)k(min,)h(puis)f(il)g
(cour)q(t)1649 3693 y FI(60)p FH(\243)p FI(5)p 1649 3706
135 5 v 1685 3754 a(15)1807 3726 y FG(\306)1886 3693
y FI(300)p 1886 3706 93 5 v 1902 3754 a(15)2003 3726
y FG(\306)c FK(20)k(min.)-246 3768 y
SDict begin H.S end
 -246 3768 a -246
3768 a
SDict begin 12 H.A end
 -246 3768 a -246 3768 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 3768 a 0 TeXcolorgray
-141 3852 a FK(2.)p 0 TeXcolorgray 43 w(S)n(t\351phane)h(a)e(par)o
(cour)q(u)g(un)h(total)g(de)f(5)10 b FG(\305)g FK(0,)e(5)16
b FG(\306)e FK(5,)8 b(5)19 b(km,)f(en)g(10)10 b FG(\305)g
FK(20)16 b FG(\306)e FK(30)19 b(min.)p 0 TeXcolorgray
0 TeXcolorgray 1518 3933 1072 4 v 1518 4033 4 100 v 1595
4003 a(temps)g(\(en)e(min\))p 2198 4033 V 137 w(30)p
2402 4033 V 114 w(60)p 2586 4033 V 1518 4036 1072 4 v
1518 4136 4 100 v 1571 4106 a(distance)h(\(en)g(km\))p
2198 4136 V 103 w(5,5)p 2402 4136 V 134 w(?)p 2586 4136
V 1518 4139 1072 4 v -38 4287 a(La)f(vitesse)j(mo)n(yenne)d(de)g(S)n
(t\351phane)j(sur)d(l)o('ensemble)j(de)d(son)h(par)o(cours)f(est)h
(donc)2502 4250 y FI(60)p FH(\243)p FI(5,5)p 2502 4267
181 5 v 2562 4315 a(30)2707 4287 y FG(\306)2775 4262
y FA(\032)2786 4250 y FI(30)o FH(\243)p FI(2)p FH(\243)p
FI(5,5)p 2786 4267 253 5 v 2871 4334 a FA(\032)2881 4322
y FI(30)3063 4287 y FG(\306)c FK(11)k(km/h.)-246 4389
y
SDict begin H.S end
 -246 4389 a -246 4389 a
SDict begin 12 H.A end
 -246 4389 a -246 4389 a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246
4389 a 0 TeXcolorgray 92 x FL(Ex)o(er)o(cice)c(3)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1225 5519
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.69983 a add def
/d 0.0 a add neg def /h 114.9489 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1225 5519 a 837 5746 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 113.81097 113.81097 199.1692
113.81097 199.1692 56.90549 56.90549 56.90549  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 199.1692 68.2864 187.78827
68.2864 187.78827 56.90549 199.1692 56.90549  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 187.78827 113.81097 187.78827
102.43004 199.1692 102.43004 199.1692 113.81097  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 56.90549 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 113.81097 199.1692 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 113.81097 199.1692 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.49803 0 1  setrgbcolor  [ 113.81097
56.90549 101.7393 56.90549 101.7393 68.97714 113.81097 68.97714  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 1.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
113.81097 142.26372 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
56.90549 142.26372 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 837 5746 a
tx@Dict begin { 148.52335 91.04869 } PutCoor PutBegin  end
 837 5746 a 51 x FK(2)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 154.78299 125.1919 } PutCoor PutBegin  end
 837 5746 a 51 x FK(3)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 154.78299 51.21501 } PutCoor PutBegin  end
 837 5746 a 51 x FK(3)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 80.80568 51.21501 } PutCoor PutBegin  end
 837 5746 a 51 x FK(2)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 51.21501 62.02676 } PutCoor PutBegin  end
 837 5746 a 6 w FB(A)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 201.44547 60.31967 } PutCoor PutBegin  end
 837 5746 a FB(B)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 201.44547 117.22516 } PutCoor PutBegin  end
 837 5746 a 835 5745 a FB(C)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 116.08723 117.22516 } PutCoor PutBegin  end
 837 5746 a FB(D)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 108.1205 45.52455 } PutCoor PutBegin  end
 837 5746 a 2 w FB(H)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 2675 5519 a
currentpoint initclip moveto
 2675 5519 a 0 TeXcolorgray -246
5569 1757 4 v -154 5646 a Fv(1)q(.)p 0 TeXcolorgray -76
5646 a
SDict begin H.S end
 -76 5646 a -76 5646 a
SDict begin H.R end
 -76 5646 a -76 5646 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -76
5646 a 0 TeXcolorgray Fv(Les)g(calculs)g(ne)g(sont)f(pas)h(toujours)g
(plus)f(faciles)i(en)f(minutes)f(qu)n('en)i(heur)o(es)o(,)f(mais)g(c)n
('est)g(g\351n\351r)o(alement)h(le)g(cas)o(.)p 0 TeXcolorgray
0 TeXcolorgray 1930 5895 a FK(2)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -163 a FK(Le)18 b(tr)o(ap\350ze)g(est)g(constitu\351)h(:)p
0 TeXcolorgray -76 -63 a(\225)p 0 TeXcolorgray 42 w(d)n('un)f(r)o
(ectangle)f FB(B)9 b(H)f(D)t(C)h FK(,)19 b(d)n('air)o(e)e
FD(`)10 b FG(\243)g FB(L)18 b FG(\306)c FK(3)c FG(\243)g
FK(2)16 b FG(\306)e FK(6)k(;)p 0 TeXcolorgray -76 37
a(\225)p 0 TeXcolorgray 42 w(d)n('un)g(tr)q(iangle)23
b FB(A)5 b(H)j(D)d FK(,)18 b(d)n('air)o(e)905 4 y Fw(B)6
b FH(\243)p Fw(h)p 905 17 123 5 v 951 65 a FI(2)1052
37 y FG(\306)1131 4 y FI(2)p FH(\243)p FI(2)p 1131 17
104 5 v 1167 65 a(2)1258 37 y FG(\306)14 b FK(2.)-246
136 y(Donc)j(l)o('air)o(e)h(du)f(tr)o(ap\350ze)h(est)g(6)10
b FG(\305)g FK(2)15 b FG(\306)f FK(8.)-246 286 y FL(R)o(emarque)g(:)k
FK(On)f(peut)h(aussi)h(utiliser)f(la)g(for)q(mule)g(\(hors-progr)o
(amme\))g(:)1301 509 y FF(A)1367 521 y FI(tr)o(ap\350ze)1580
509 y FG(\306)1659 453 y FK(\()p FB(B)g FG(\305)10 b
FB(b)t FK(\))g FG(\243)g FB(h)p 1659 490 358 5 v 1817
566 a FK(2)2040 509 y FG(\306)2120 453 y FK(\(5)g FG(\305)g
FK(3\))g FG(\243)g FK(2)p 2120 490 326 5 v 2262 566 a(2)2469
509 y FG(\306)k FK(8.)-246 649 y
SDict begin H.S end
 -246 649 a -246 649
a
SDict begin 12 H.A end
 -246 649 a -246 649 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 649 a 0 TeXcolorgray 101
x FL(Ex)o(er)o(cice)g(4)p 0 TeXcolorgray 42 w FK(Le)j(losange)h(est)g
(\253)c(la)j(moiti\351)d(\273)36 b(d)n('un)18 b(r)o(ectangle)f(de)g
(c\364t\351s)h FD(`)f FK(et)h FB(L)s FK(,)g(donc)f(son)h(air)o(e)f(est)
2730 717 y Fx(`)p FH(\243)p Fw(L)p 2730 730 111 5 v 2769
779 a FI(2)2850 750 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1331 1635 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 149.09253 a add def
/d 0.0 a add neg def /h 92.18704 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 1635 a 473 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 142.26372 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 142.26372 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 142.26372 28.45274
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
1331 2108 a
tx@Dict begin { 18.4941 119.50143 } PutCoor PutBegin  end
 1331 2108 a 1 0 0 TeXcolorrgb 57 x FD(`)p
0 TeXcolorgray 1331 2108 a
tx@Dict begin  PutEnd  end
 1331 2108 a 1331 2108 a
tx@Dict begin { 78.24504 81.37486 } PutCoor PutBegin  end
 1331
2108 a 1 0 0 TeXcolorrgb 53 x FB(L)p 0 TeXcolorgray 1331
2108 a
tx@Dict begin  PutEnd  end
 1331 2108 a 2569 1635 a
currentpoint initclip moveto
 2569 1635 a -246 1718
a
SDict begin H.S end
 -246 1718 a -246 1718 a
SDict begin 12 H.A end
 -246 1718 a -246 1718 a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246
1718 a 0 TeXcolorgray 117 x FL(Ex)o(er)o(cice)d(5)p 0
TeXcolorgray 42 w(Rappels)g(:)p 0 TeXcolorgray -76 1934
a FK(\225)p 0 TeXcolorgray 42 w(une)19 b(hauteur)g(est)g(une)g(droite)f
(qui)h(passe)g(par)g(un)f(sommet)i(et)f(qui)g(est)g(perpendiculair)o(e)
h(au)e(c\364t\351)h(oppos\351)g(\(les)g(hauteurs)h(sont)f(tr)o
(ac\351es)-3 2034 y(en)e(pointill\351s)j(bleus\))9 b(;)p
0 TeXcolorgray -76 2134 a(\225)p 0 TeXcolorgray 42 w(le)16
b(fait)g(que)h(les)f(hauteurs)h(soient)g(\253)12 b(concour)o(antes)g
(\273)33 b(signi\002e)16 b(qu)n('elles)i(passent)f(toutes)g(les)f
(trois)g(par)g(un)g(m\352me)h(point)g(\226)e(qu)n('on)i(appelle)-3
2233 y(\253)d(or)q(thocentr)o(e)j(du)g(tr)q(iangle)d(\273)34
b(\(nomm\351)16 b FB(O)22 b FK(sur)17 b(la)h(\002gur)o(e)e
(ci-dessous\).)p 0 TeXcolorgray 0 TeXcolorgray 1152 3491
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.3404 a add def
/d 0.0 a add neg def /h 138.28035 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1152 3491 a 1015 3619 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 59.32503
93.77257 70.23923 88.61395 65.08061 77.70018 54.16684 82.85837  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 112.67305
112.67305 121.20853 104.13713 112.67305 95.60123 104.13713 104.13713
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 82.90004
28.63725 82.85924 40.70891 94.93047 40.74973 94.97127 28.67805  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 196.32375 29.02191 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 82.51277 142.83289 196.32375 29.02191
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 82.51277 142.83289
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 82.90004 28.63725 82.51277
142.83289   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 112.67305 112.67305 28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.32503 93.77257 196.32375
29.02191   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 82.71683
82.71683   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1015 3619 a
tx@Dict begin { 87.06532 68.85558 } PutCoor PutBegin  end
 1015 3619 a 0 0 1 TeXcolorrgb 1013 3618 a
FB(O)p 0 TeXcolorgray 1015 3619 a
tx@Dict begin  PutEnd  end
 1015 3619 a 2748 3491
a
currentpoint initclip moveto
 2748 3491 a -246 3574 a
SDict begin H.S end
 -246 3574 a -246 3574 a
SDict begin 12 H.A end
 -246
3574 a -246 3574 a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 3574 a 0 TeXcolorgray 117 x FL(Ex)o(er)o(cice)e
(6)p 0 TeXcolorgray 42 w FK(On)j(note)j FB(H)25 b FK(le)18
b(pied)g(de)f(la)h(hauteur)g(issue)h(de)k FB(A)d FK(dans)d(le)h(tr)q
(iangle)23 b FB(A)s(B)5 b(C)k FK(.)p 0 TeXcolorgray 0
TeXcolorgray 1241 4802 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 170.71645 a add def
/d 0.0 a add neg def /h 120.63936 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1241 4802 a 1246 4878 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 56.90549 28.45274
56.90549 40.5244 68.97714 40.5244 68.97714 28.45274  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.9 0.9  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 28.45274 56.90549
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1246 4878 a
tx@Dict begin { 59.18175 114.94888 } PutCoor PutBegin  end
 1246
4878 a 6 w FB(A)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246 4878 a
tx@Dict begin { 142.26372 17.07181 } PutCoor PutBegin  end
 1246
4878 a FB(B)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246 4878 a
tx@Dict begin { 19.91682 17.07181 } PutCoor PutBegin  end
 1246
4878 a 1244 4877 a FB(C)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246
4878 a
tx@Dict begin { 55.76756 17.07181 } PutCoor PutBegin  end
 1246 4878 a 2 w FB(H)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246
4878 a
tx@Dict begin { 86.49614 17.07181 } PutCoor PutBegin  end
 1246 4878 a 2 w FB(I)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 2659
4802 a
currentpoint initclip moveto
 2659 4802 a -246 4986 a FK([)-214 4985 y FB(A)c(H)-94
4986 y FK(])-52 4985 y(est)18 b(une)g(hauteur)h(dans)e(les)h(tr)q
(iangles)g FB(B)9 b(I)15 b(A)22 b FK(et)16 b FB(C)11
b(I)k(A)s FK(,)j(donc)882 5202 y FF(A)948 5214 y Fw(B)8
b(I)j(A)1082 5202 y FG(\306)p 1 0 0 TeXcolorrgb 1161
5146 a FB(B)e(I)p 0 TeXcolorgray 21 w FG(\243)16 b FB(A)5
b(H)p 1161 5183 297 5 v 1288 5259 a FK(2)2412 5202 y
FF(A)2476 5214 y Fw(C)k(I)i(A)2611 5202 y FG(\306)p 1 0 0
TeXcolorrgb 2688 5146 a FB(C)g(I)p 0 TeXcolorgray 21
w FG(\243)16 b FB(A)5 b(H)p 2690 5183 V 2819 5259 a FK(2)2997
5202 y(.)-246 5374 y(Or)p 1 0 0 TeXcolorrgb 17 w FB(B)k(I)p
0 TeXcolorgray 26 w FG(\306)p 1 0 0 TeXcolorrgb 12 w
FB(C)i(I)p 0 TeXcolorgray 28 w FK(puisque)21 b FB(I)28
b FK(et)17 b(le)h(milieu)h(de)1003 5375 y([)1029 5374
y FB(B)5 b(C)1141 5375 y FK(])1175 5374 y(,)17 b(donc)g
FB(B)9 b(I)15 b(A)23 b FK(et)15 b FB(C)c(I)k(A)22 b FK(ont)17
b(la)h(m\352me)h(air)o(e)o(.)p 0 TeXcolorgray 1930 5895
a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246
a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray
83 x FL(Ex)o(er)o(cice)14 b(7)p 0 TeXcolorgray 0 TeXcolorgray
147 w FK(1.)p 0 TeXcolorgray 42 w(La)k(n\351gation)g(de)p
0 0 1 TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb 1521
-5 a(T)-8 b(ous)p 1521 14 164 5 v 0 TeXcolorgray 18 w(les)18
b(hommes)p 0 0 1 TeXcolorrgb 20 w(sont)g(mor)q(tels)p
2134 14 434 5 v 0 TeXcolorgray 1 w(.)p 0 0 1 TeXcolorrgb
0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray -38 153
a(est)p 1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb
1542 312 a(Il)f(existe)p 1542 330 263 5 v 0 TeXcolorgray
19 w(un)h(homme)p 1 0 0 TeXcolorrgb 18 w(immor)q(tel)p
2220 330 325 5 v 0 TeXcolorgray 2 w(.)p 1 0 0 TeXcolorrgb
0 TeXcolorgray 1 0 0 TeXcolorrgb 0 TeXcolorgray -246
393 a
SDict begin H.S end
 -246 393 a -246 393 a
SDict begin 12 H.A end
 -246 393 a -246 393 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246
393 a 0 TeXcolorgray -141 484 a FK(2.)p 0 TeXcolorgray
43 w(La)f(n\351gation)i(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 1333 642 a(Il)d(existe)p 1333 660 263
5 v 0 TeXcolorgray 19 w(un)i(desser)q(t)p 0 0 1 TeXcolorrgb
17 w(sans)g(sucr)o(e)p 1987 660 356 5 v 0 TeXcolorgray
17 w(\340)g(la)f(cantine)o(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 0 TeXcolorgray -38 800 a(est)p 1 0 0
TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb 1349 958
a(T)-8 b(ous)p 1349 977 164 5 v 0 TeXcolorgray 19 w(les)18
b(desser)q(ts)p 1 0 0 TeXcolorrgb 18 w(sont)g(sucr\351s)p
1939 977 388 5 v 0 TeXcolorgray 18 w(\340)f(la)g(cantine)o(.)p
1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb 0
TeXcolorgray -38 1166 a FL(R)o(emarque)f(:)k FK(Dans)g(les)h(deux)f
(exemples)i(que)f(nous)g(venons)g(de)f(tr)o(aiter)-5
b(,)21 b(pour)f(\351cr)q(ir)o(e)f(la)i(n\351gation)f(d)n('une)h(phr)o
(ase)o(,)g(il)g(suf\002t)f(de)g(r)o(empla-)-38 1266 y(cer)i(les)h(\253)
15 b(tous)h(\273)45 b(par)22 b(\253)15 b(il)23 b(existe)17
b(\273)22 b(,)g(et)h(r\351ciproquement)9 b(;)24 b(et)f(d)n('inverser)g
(les)g(conclusions)h(\(exemple)g(:)f(immor)q(tel/mor)q(tel\).)h(C'est)g
(une)-38 1366 y(technique)19 b(qui)f(fonctionne)h(toujours)o(.)-246
1399 y
SDict begin H.S end
 -246 1399 a -246 1399 a
SDict begin 12 H.A end
 -246 1399 a -246 1399
a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 1399 a 0 TeXcolorgray -141 1494 a FK(3.)p 0 TeXcolorgray
43 w(La)e(n\351gation)i(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 1078 1653 a(Il)e(existe)p 1078 1671
263 5 v 0 TeXcolorgray 19 w(un)g(pays)h(dans)f(lequel)p
0 0 1 TeXcolorrgb 19 w(tous)p 2057 1671 150 5 v 0 TeXcolorgray
18 w(les)h(hommes)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
20 w(savent)g(lir)o(e)p 2657 1671 353 5 v 0 TeXcolorgray(.)p
0 0 1 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray
-38 1811 a(est)p 0 TeXcolorgray 0 TeXcolorgray 1061 1969
a(Dans)p 1 0 0 TeXcolorrgb 17 w(tous)p 1258 1987 150
5 v 0 TeXcolorgray 18 w(les)g(pays)o(,)p 1 0 0 TeXcolorrgb
18 w(il)g(existe)p 1731 1987 259 5 v 0 TeXcolorgray 18
w(un)g(homme)h(qui)p 1 0 0 TeXcolorrgb 18 w(ne)e(sait)h(pas)g(lir)o(e)p
2536 2004 491 5 v 0 TeXcolorgray(.)p 1 0 0 TeXcolorrgb
0 TeXcolorgray 1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0
TeXcolorrgb 0 TeXcolorgray -246 2067 a
SDict begin H.S end
 -246 2067 a -246
2067 a
SDict begin 12 H.A end
 -246 2067 a -246 2067 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 2067 a 0 TeXcolorgray
-141 2141 a FK(4.)p 0 TeXcolorgray 43 w(Le)g(contr)o(air)o(e)f(de)h
(\253)c(\352tr)o(e)j(all\351)h(en)g(Angleterr)o(e)f(ou)h(en)g(Espagne)c
(\273)35 b(est)18 b(\253)c(n)-6 b('\352tr)o(e)18 b(all\351)g(ni)g(en)g
(Angleterr)o(e)o(,)f(ni)h(en)f(Espagne)d(\273,)19 b(donc)e(la)h
(n\351gation)-38 2241 y(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 830 2399 a(T)-8 b(ous)p 830 2417 164
5 v 0 TeXcolorgray 19 w(les)18 b(\351l\350ves)h(de)e(la)h(classe)p
0 0 1 TeXcolorrgb 18 w(sont)g(d\351j\340)f(all\351s)i(en)e(Angleterr)o
(e)g(ou)h(en)f(Espagne)p 1753 2436 1505 5 v 0 TeXcolorgray
19 w(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb
0 TeXcolorgray -38 2557 a(est)p 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 713 2715 a(Il)g(existe)p 713 2733 263
5 v 0 TeXcolorgray 18 w(un)h(\351l\350ve)h(de)e(la)g(classe)h(qui)p
1 0 0 TeXcolorrgb 18 w(n)-6 b('est)19 b(jamais)f(all\351)g(en)g
(Angleterr)o(e)o(,)f(ni)g(en)h(Espagne)p 1831 2752 1543
5 v 0 TeXcolorgray 1 w(.)p 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 0 TeXcolorgray -246 2815 a
SDict begin H.S end
 -246 2815
a -246 2815 a
SDict begin 12 H.A end
 -246 2815 a -246 2815 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246 2815 a 0 TeXcolorgray
-141 2888 a FK(5.)p 0 TeXcolorgray 43 w(C)o(omme)h(dans)e(l)o('exemple)
j(pr\351c\351dent,)f(le)e(contr)o(air)o(e)h(de)f(\253)d(ni...)k(ni...)c
(\273)35 b(est)18 b(\253)c(ou)g(\273.)j(Donc)g(la)g(n\351gation)h(de)p
0 TeXcolorgray 0 TeXcolorgray 1290 3046 a(Chlo\351)p
0 0 1 TeXcolorrgb 19 w(n)-6 b('aime)18 b(ni)g(les)g(fr)o(aises)o(,)h
(ni)f(les)g(fr)o(amboises)p 1511 3074 1287 5 v 0 TeXcolorgray
1 w(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray -38 3204 a(est)p
0 TeXcolorgray 0 TeXcolorgray 1364 3362 a(Chlo\351)p
1 0 0 TeXcolorrgb 18 w(aime)g(les)h(fr)o(aises)f(ou)g(les)g(fr)o
(amboises)p 1584 3380 1139 5 v 0 TeXcolorgray 1 w(.)p
1 0 0 TeXcolorrgb 0 TeXcolorgray -246 3495 a
SDict begin H.S end
 -246 3495
a -246 3495 a
SDict begin 12 H.A end
 -246 3495 a -246 3495 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 3495 a -246
3514 a
SDict begin H.S end
 -246 3514 a -246 3514 a
SDict begin 12 H.A end
 -246 3514 a -246 3514
a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 3514 a -246 3514 a
SDict begin H.S end
 -246 3514 a -246 3514 a
SDict begin 12 H.A end
 -246
3514 a -246 3514 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246 3514 a 0 TeXcolorgray 91 x FL(Ex)o(er)o(cice)c
(8)p 0 TeXcolorgray 0 TeXcolorgray 147 w FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 90 w(\(a\))p 0 TeXcolorgray 41 w(On)j(identi\002e)h(A)f
(et)g(B)h(dans)f(l)o('implication)j(:)p 0 TeXcolorgray
0 TeXcolorgray 1185 3763 a(S)o(i)e(un)f(nombr)o(e)h(se)f(ter)q(mine)i
(par)e(5)1265 3814 y Ft(|)p 1299 3814 411 10 v 411 w({z)p
1778 3814 V 411 w(})1726 3893 y FI(A)2223 3763 y FK(,)h(alors)f(il)h
(est)g(multiple)i(de)d(5)2446 3814 y Ft(|)p 2480 3814
247 10 v 247 w({z)p 2795 3814 V 247 w(})2743 3893 y FI(B)3085
3763 y FK(.)145 4025 y(C)o(ette)h(implication)i(est)e(vr)o(aie)g
(\(cours)f(du)g(pr)q(imair)o(e\).)-246 4056 y
SDict begin H.S end
 -246 4056
a -246 4056 a
SDict begin 12 H.A end
 -246 4056 a -246 4056 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 4056 a 0 TeXcolorgray
4 4153 a FK(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 86
w(\225)p 0 TeXcolorgray 41 w(L)-10 b('implication)21
b(contr)o(apos\351e)d(est)p 0 TeXcolorgray 0 TeXcolorgray
1024 4253 a(S)o(i)g(un)f(nombr)o(e)h(n)-6 b('est)18 b(pas)g(multiple)i
(de)d(5)1104 4304 y Ft(|)p 1138 4304 518 10 v 518 w({z)p
1724 4304 V 518 w(})1612 4383 y FI(non)c(B)2275 4253
y FK(,)18 b(alors)f(il)h(ne)g(se)f(ter)q(mine)i(pas)f(par)f(5)2498
4304 y Ft(|)p 2532 4304 360 10 v 360 w({z)p 2960 4304
V 360 w(})2849 4383 y FI(non)d(A)3363 4253 y FK(.)262
4456 y(C)o(ette)20 b(contr)o(apos\351e)g(est)g(vr)o(aie)o(,)f(puisque)i
(l)o('implication)g(or)q(iginale)e(l)o('est)h(\(cf)f(l)o('\351nonc\351)
h(:)f(quand)g(une)g(implication)i(est)e(vr)o(aie)o(,)g(sa)262
4556 y(contr)o(apos\351e)g(l)o('est)g(aussi\).)p 0 TeXcolorgray
190 4705 a(\225)p 0 TeXcolorgray 41 w(L)-10 b('implication)21
b(r\351ciproque)c(est)p 0 TeXcolorgray 0 TeXcolorgray
1244 4805 a(S)o(i)h(un)f(nombr)o(e)g(est)h(multiple)i(de)d(5)1324
4856 y Ft(|)p 1358 4856 418 10 v 418 w({z)p 1844 4856
V 418 w(})1791 4935 y FI(B)2296 4805 y FK(,)g(alors)h(il)g(se)f(ter)q
(mine)i(par)e(5)2519 4856 y Ft(|)p 2553 4856 240 10 v
240 w({z)p 2861 4856 V 240 w(})2809 4935 y FI(A)3144
4805 y FK(.)262 5008 y(Elle)i(est)f(fausse)o(,)h(comme)f(le)g(montr)o
(e)g(le)f(contr)o(e-exemple)j(suivant)e(:)f(10)i(est)f(multiple)i(de)d
(5,)h(mais)g(il)g(ne)f(se)h(ter)q(mine)g(pas)g(par)f(5.)-246
5039 y
SDict begin H.S end
 -246 5039 a -246 5039 a
SDict begin 12 H.A end
 -246 5039 a -246 5039
a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 5039 a 0 TeXcolorgray -141 5136 a FK(2.)p 0 TeXcolorgray
43 w(L)-10 b('implication)p 0 TeXcolorgray 0 TeXcolorgray
1074 5294 a(S)o(i)17 b(un)h(nombr)o(e)f(se)h(ter)q(mine)g(par)f(0)1153
5346 y Ft(|)p 1187 5346 411 10 v 411 w({z)p 1666 5346
V 411 w(})1614 5424 y FI(A)2112 5294 y FK(,)g(alors)h(il)f(est)h
(multiple)i(de)d(10)2335 5346 y Ft(|)p 2369 5346 267
10 v 267 w({z)p 2704 5346 V 267 w(})2651 5424 y FI(B)3014
5294 y FK(.)-38 5553 y(et)h(sa)f(r\351ciproque)p 0 TeXcolorgray
1930 5895 a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1074 -163 a FK(S)o(i)17
b(un)h(nombr)o(e)f(est)h(multiple)i(de)d(10)1153 -111
y Ft(|)p 1187 -111 438 10 v 438 w({z)p 1693 -111 V 438
w(})1641 -33 y FI(B)2166 -163 y FK(,)g(alors)h(il)g(se)f(ter)q(mine)i
(par)e(0)2389 -111 y Ft(|)p 2423 -111 240 10 v 240 w({z)p
2731 -111 V 240 w(})2679 -33 y FI(A)3014 -163 y FK(.)-38
99 y(sont)h(vr)o(aies)g(toutes)h(les)f(deux.)-246 165
y
SDict begin H.S end
 -246 165 a -246 165 a
SDict begin 12 H.A end
 -246 165 a -246 165 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 165
a 0 TeXcolorgray 133 x FL(Ex)o(er)o(cice)c(9)p 0 TeXcolorgray
42 w FK(S)o(oit)24 b FB(A)s(B)5 b(C)27 b FK(un)17 b(tr)q(iangle)-246
331 y
SDict begin H.S end
 -246 331 a -246 331 a
SDict begin 12 H.A end
 -246 331 a -246 331 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246
331 a 0 TeXcolorgray -141 427 a FK(1.)p 0 TeXcolorgray
43 w FL(Th\351or\350me)d(de)i(P)q(ythagor)o(e.)p 0 TeXcolorgray
0 TeXcolorgray 1192 570 a FK(S)o(i)23 b FB(A)s(B)5 b(C)27
b FK(est)18 b(r)o(ectangle)f(en)24 b FB(A)s FK(,)17 b(alors)h
FB(B)5 b(C)2406 540 y FI(2)2456 570 y FG(\306)20 b FB(A)s(B)2637
540 y FI(2)2683 570 y FG(\305)10 b FB(B)5 b(C)2860 540
y FI(2)2896 570 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1373 1549 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88808 a add def
/d 0.0 a add neg def /h 107.55135 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1373 1549 a 873 1657 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
28.45274 85.35823 40.5244 97.42989 40.5244 97.42989 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 199.1692 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 28.45274 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
873 1657 a
tx@Dict begin { 73.9773 113.81097 } PutCoor PutBegin  end
 873 1657 a 871 1711 a FB(C)873 1657 y
tx@Dict begin  PutEnd  end
 873
1657 a 873 1657 a
tx@Dict begin { 73.9773 28.45274 } PutCoor PutBegin  end
 873 1657 a 879 1711 a FB(A)873 1657
y
tx@Dict begin  PutEnd  end
 873 1657 a 873 1657 a
tx@Dict begin { 204.85966 31.29819 } PutCoor PutBegin  end
 873 1657 a 54 x FB(B)873 1657
y
tx@Dict begin  PutEnd  end
 873 1657 a 2734 1549 a
currentpoint initclip moveto
 2734 1549 a -246 1592 a
SDict begin H.S end
 -246
1592 a -246 1592 a
SDict begin 12 H.A end
 -246 1592 a -246 1592 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 1592
a 0 TeXcolorgray -141 1707 a FK(2.)p 0 TeXcolorgray 43
w FL(Th\351or\350me)14 b(contrapos\351)g(de)i(P)q(ythagor)o(e.)p
0 TeXcolorgray 0 TeXcolorgray 1092 1865 a FK(S)o(i)h
FB(B)5 b(C)1283 1835 y FI(2)1333 1865 y FG(6\306)21 b
FB(A)s(B)1515 1835 y FI(2)1561 1865 y FG(\305)10 b FB(B)5
b(C)1738 1835 y FI(2)1773 1865 y FK(,)18 b(alors)23 b
FB(A)s(B)5 b(C)27 b FK(n)-6 b('est)19 b(pas)e(r)o(ectangle)h(en)23
b FB(A)s FK(.)-246 1927 y
SDict begin H.S end
 -246 1927 a -246 1927 a
SDict begin 12 H.A end
 -246
1927 a -246 1927 a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 1927 a 0 TeXcolorgray -141 2023
a FK(3.)p 0 TeXcolorgray 43 w FL(Th\351or\350me)14 b(r\351ciproque)f
(de)j(P)q(ythagor)o(e.)p 0 TeXcolorgray 0 TeXcolorgray
1192 2181 a FK(S)o(i)h FB(B)5 b(C)1383 2151 y FI(2)1433
2181 y FG(\306)20 b FB(A)s(B)1614 2151 y FI(2)1660 2181
y FG(\305)10 b FB(B)5 b(C)1837 2151 y FI(2)1873 2181
y FK(,)17 b(alors)24 b FB(A)s(B)5 b(C)27 b FK(est)18
b(r)o(ectangle)f(en)24 b FB(A)s FK(.)-38 2339 y(Le)18
b(th\351or\350me)h(r\351ciproque)e(est)h(bien)g(s\373r)f(vr)o(ai,)i
(comme)f(vous)g(l)o('avez)g(appr)q(is)f(au)h(coll\350ge)o(.)-38
2503 y Fu(")p FK(En)25 b(devoir)-5 b(,)26 b(le)f(corr)o(ecteur)g(ser)o
(a)g(tr\350s)g(attentif)i(au)e(nom)h(du)f(th\351or\350me)h(utilis\351)h
(dans)e(les)h(d\351monstr)o(ations)h(:)e(th\351or\350me)o(,)h
(th\351or\350me)-38 2603 y(contr)o(apos\351)18 b(ou)g(th\351or\350me)h
(r\351ciproque)f(\226)f(il)h(ne)f(faudr)o(a)h(pas)g(confondr)o(e)9
b(!)-246 2686 y
SDict begin H.S end
 -246 2686 a -246 2686 a
SDict begin 12 H.A end
 -246 2686 a -246
2686 a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 2686 a -246 2705 a
SDict begin H.S end
 -246 2705 a -246 2705
a
SDict begin 12 H.A end
 -246 2705 a -246 2705 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 2705 a 0 TeXcolorgray
97 x FL(Ex)o(er)o(cice)14 b(10)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(P)n(our)j(constr)q(uir)o(e)g(la)g
(\002gur)o(e)o(,)f(on)i(tr)o(ace)f(successivement)k(:)p
0 TeXcolorgray 7 2916 a(\225)p 0 TeXcolorgray 42 w(Le)d(segment)492
2917 y([)518 2916 y FB(E)8 b(F)626 2917 y FK(])658 2916
y(.)p 0 TeXcolorgray 7 3016 a(\225)p 0 TeXcolorgray 42
w(La)17 b(perpendiculair)o(e)i(\340)806 3017 y([)831
3016 y FB(E)8 b(F)939 3017 y FK(])981 3016 y(passant)18
b(par)g FB(E)9 b FK(.)p 0 TeXcolorgray 7 3115 a(\225)p
0 TeXcolorgray 42 w(U)m(n)18 b(ar)o(c)e(de)h(cer)o(cle)g(de)g(centr)o
(e)g FB(F)m FK(,)h(de)f(r)o(ayon)f(7)i(cm.)g(Il)e(coupe)j(la)e
(perpendiculair)o(e)i(que)f(nous)g(venons)g(de)f(tr)o(acer)g(en)f
FB(G)6 b FK(.)p 0 TeXcolorgray 0 TeXcolorgray 197 4528
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 190.29268 a add def
/d 0.0 a add neg def /h 156.14926 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 197 4528 a 753 4396 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ -22.76228
0.0 -22.76228 9.65736 -13.1049 9.65736 -13.1049 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04913 0.0 -22.76228 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 753 4396 a
tx@Dict begin { 22.76228 -4.55238 } PutCoor PutBegin  end
 753
4396 a 51 x FK(5)17 b(cm)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -22.76228 140.21574 -22.76228 -15.93352
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 2.1976990745518967 def /t1 2.5472509907369547
def /dt t1 t sub 49 div def /F@pstplot (1.*7.*cos(t)+0.*7.*sin(t)+4.|0.*7.*cos(t)+1.*7.*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 22.76228 mul
exch 22.76228 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30
22.76228 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 22.76228 mul gt {
moveto } { dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -22.76228 111.51212 91.04913 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 753 4396 a
tx@Dict begin { 34.14342 64.1898 } PutCoor PutBegin  end
 753
4396 a 51 x FK(7)g(cm)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396
a
tx@Dict begin { -34.14342 -6.82875 } PutCoor PutBegin  end
 753 4396 a FB(E)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396 a
tx@Dict begin { 94.23582 -6.82875 } PutCoor PutBegin  end
 753
4396 a FB(F)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396 a
tx@Dict begin { -32.77774 114.72174 } PutCoor PutBegin  end
 753 4396
a 751 4395 a FB(G)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 1777 4528 a
currentpoint initclip moveto
 1777
4528 a 0 TeXcolorgray 2050 4645 9 1414 v 0 TeXcolorgray
2095 3315 a FK(D)o('apr\350s)24 b FL(le)d(th\351or\350me)g(de)h(P)q
(ythagor)o(e)g FK(dans)h FB(E)8 b(F)g(G)29 b FK(r)o(ectangle)24
b(en)2095 3414 y FB(E)39 b FK(:)2869 3599 y FB(F)8 b(G)2981
3565 y FI(2)3030 3599 y FG(\306)14 b FB(E)8 b(F)3207
3565 y FI(2)3251 3599 y FG(\305)i FB(E)c(G)3428 3565
y FI(2)2940 3735 y FK(7)2980 3701 y FI(2)3030 3735 y
FG(\306)14 b FK(5)3139 3701 y FI(2)3185 3735 y FG(\305)c
FB(E)c(G)3362 3701 y FI(2)2935 3871 y FK(49)15 b FG(\306)f
FK(25)c FG(\305)g FB(E)c(G)3366 3837 y FI(2)2778 4008
y FK(49)k FG(\241)g FK(25)17 b FG(\306)d FB(E)6 b(G)3211
3973 y FI(2)2871 4080 y FG(p)p 2935 4080 82 5 v 69 x
FK(24)15 b FG(\306)f FB(E)6 b(G)2095 4361 y FK(C)o(onclusion)19
b(:)f FB(E)6 b(G)20 b FG(\306)2740 4296 y(p)p 2803 4296
V 2803 4361 a FK(24)f(cm.)2095 4528 y Fu(")p FK(S)o(auf)f(si)f(l)o
('\351nonc\351)i(le)f(demande)o(,)f(ne)g(donnez)g(pas)g(de)g(valeur)g
(ap-)2095 4628 y(proch\351e)o(.)-246 4727 y
SDict begin H.S end
 -246 4727
a -246 4727 a
SDict begin 12 H.A end
 -246 4727 a -246 4727 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 4727 a 0 TeXcolorgray
-141 4842 a FK(2.)p 0 TeXcolorgray 43 w(Le)h(plus)g(gr)o(and)f
(c\364t\351)h(est)726 4843 y([)751 4842 y FB(B)5 b(C)863
4843 y FK(])897 4842 y(,)18 b(donc)f(le)g(tr)q(iangle)h(ne)g(pourr)o
(ait)g(\352tr)o(e)f(r)o(ectangle)g(qu)n('en)24 b FB(A)s
FK(.)-38 4956 y(On)17 b(calcule)h(:)1139 5035 y FB(B)5
b(C)1251 5005 y FI(2)1301 5035 y FG(\306)14 b FK(6)1410
5005 y FI(2)1460 5035 y FG(\306)g FK(36)1145 5135 y FB(A)s(B)1251
5105 y FI(2)1297 5135 y FG(\305)i FB(A)o(C)1474 5105
y FI(2)1523 5135 y FG(\306)e FK(5)1632 5105 y FI(2)1677
5135 y FG(\305)c FK(4)1782 5105 y FI(2)1832 5135 y FG(\306)k
FK(25)c FG(\305)g FK(16)17 b FG(\306)d FK(41)2344 4977
y Ft(\276)2399 5087 y FB(B)5 b(C)2511 5052 y FI(2)2561
5087 y FG(6\306)20 b FB(A)s(B)2742 5052 y FI(2)2788 5087
y FG(\305)c FB(A)o(C)2965 5052 y FI(2)3000 5087 y FK(.)-38
5280 y(D)o('apr\350s)h FL(la)e(contrapos\351e)e(du)k(th\351or\350me)e
(de)h(P)q(ythagor)o(e)p FK(,)21 b FB(A)s(B)5 b(C)26 b
FK(n)-6 b('est)19 b(pas)f(r)o(ectangle)f(en)24 b FB(A)s
FK(.)-246 5366 y
SDict begin H.S end
 -246 5366 a -246 5366 a
SDict begin 12 H.A end
 -246 5366 a
-246 5366 a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246 5366 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)14
b(11)p 0 TeXcolorgray 47 w FB(A)s(B)5 b(C)k(D)d(E)i(F)g(G)g(H)26
b FK(est)18 b(un)g(par)o(all\351l\351pip\350de)i(r)o(ectangle)d(tel)i
(que)k FB(A)s(B)f FG(\306)15 b FB(B)5 b(C)24 b FG(\306)14
b FK(6)k(et)d FB(C)6 b(G)21 b FG(\306)14 b FK(3.)p 0
TeXcolorgray 1930 5895 a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 895 913 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 254.15918 a add def
/d 0.0 a add neg def /h 139.57541 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 895 913 a 1693
839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.49803 0 1  setrgbcolor  [ -85.35823
0.0 -73.9773 0.0 -62.59595 5.69046 -73.9773 5.69046  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.49803 0 1  setrgbcolor  [ 74.11884
14.65575 85.35823 11.38092 85.35823 0.0 74.10971 2.81201  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 0.0 -28.45274 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 -85.35823 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 85.35823 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 28.45274 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 85.35823 -28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 -85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 113.81097 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 0.0 -85.35823 85.35823  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 28.45274 -28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 -28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 -28.45274 28.45274   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ -62.59595 5.69046
-73.9773 5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ -73.9773 0.0
-62.59595 5.69046   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 74.11884 14.65575
74.10971 2.81201   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35823 11.38092
74.11884 14.65575   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1693 839 a
tx@Dict begin { -57.4308 25.54086 } PutCoor PutBegin  end
 1693 839 a 52 x FK(6)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 0.5683 8.5359 } PutCoor PutBegin  end
 1693 839 a 52 x FK(6)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 89.21742 47.23164 } PutCoor PutBegin  end
 1693 839 a 52 x FK(3)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -38.41138 33.0856 } PutCoor PutBegin  end
 1693 839 a 6 w FB(A)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -83.36545 5.69046 } PutCoor PutBegin  end
 1693 839 a FB(B)1693 839
y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 87.33145 4.79306 } PutCoor PutBegin  end
 1693 839 a 1691 838 a FB(C)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 143.91566 33.0856 } PutCoor PutBegin  end
 1693 839 a FB(D)1693 839
y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -26.7808 118.43384 } PutCoor PutBegin  end
 1693 839 a FB(E)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 1693 839 a
tx@Dict begin { -83.36545 90.1413 } PutCoor PutBegin  end
 1693 839 a FB(F)1693 839 y
tx@Dict begin  PutEnd  end
 1693 839
a 1693 839 a
tx@Dict begin { 83.9355 90.1413 } PutCoor PutBegin  end
 1693 839 a 1691 838 a FB(G)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 1693 839 a
tx@Dict begin { 143.91566 118.43384 } PutCoor PutBegin  end
 1693 839 a 2 w FB(H)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 3005 913 a
currentpoint initclip moveto
 3005 913 a -246 1063 a FK(On)18 b(utilise)h(deux)e
(fois)h(de)f(suite)i(le)f(th\351or\350me)h(de)e(Pythagor)o(e)f(:)-246
1251 y(Dans)23 b FB(A)s(B)5 b(C)27 b FK(r)o(ectangle)17
b(en)h FB(B)6 b FK(,)642 1550 y FB(A)o(C)748 1515 y FI(2)797
1550 y FG(\306)20 b FB(A)s(B)978 1515 y FI(2)1024 1550
y FG(\305)10 b FB(B)5 b(C)1201 1515 y FI(2)642 1686 y
FB(A)o(C)748 1652 y FI(2)797 1686 y FG(\306)14 b FK(6)906
1652 y FI(2)952 1686 y FG(\305)c FK(6)1057 1652 y FI(2)642
1822 y FB(A)o(C)748 1788 y FI(2)797 1822 y FG(\306)k
FK(36)c FG(\305)g FK(36)642 1959 y FB(A)o(C)748 1924
y FI(2)797 1959 y FG(\306)k FK(72)426 2083 y(\(I)o(nutile)k(de)f
(donner)6 b FB(A)o(C)26 b FK(!\))p 0 TeXcolorgray 1946
2113 9 946 v 0 TeXcolorgray 1992 1251 a(Dans)c FB(A)o(C)6
b(G)23 b FK(r)o(ectangle)17 b(en)f FB(C)9 b FK(,)2774
1534 y FB(A)o(G)2881 1499 y FI(2)2929 1534 y FG(\306)21
b FB(A)o(C)3111 1499 y FI(2)3155 1534 y FG(\305)8 b FB(C)e(G)3334
1499 y FI(2)2774 1670 y FB(A)o(G)2881 1636 y FI(2)2929
1670 y FG(\306)15 b FK(72)10 b FG(\305)g FK(3)3194 1636
y FI(2)2774 1806 y FB(A)o(G)2881 1772 y FI(2)2929 1806
y FG(\306)15 b FK(72)10 b FG(\305)g FK(9)2774 1942 y
FB(A)o(G)2881 1908 y FI(2)2929 1942 y FG(\306)15 b FK(81)2809
2083 y FB(A)o(G)k FG(\306)2999 2014 y(p)p 3062 2014 82
5 v 3062 2083 a FK(81)c FG(\306)g FK(9)-246 2270 y(C)o(onclusion)20
b(:)j FB(A)o(G)d FG(\306)14 b FK(9.)-246 2333 y
SDict begin H.S end
 -246
2333 a -246 2333 a
SDict begin 12 H.A end
 -246 2333 a -246 2333 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246 2333
a 0 TeXcolorgray 125 x FL(Ex)o(er)o(cice)g(12)p 0 TeXcolorgray
41 w FK(S)n(ur)21 b(la)e(\002gur)o(e)g(ci-dessous)i(\(qui)f(n)-6
b('est)21 b(pas)f(\340)g(l)o('\351chelle\),)i(le)f(segment)2305
2459 y([)2332 2458 y FB(M)7 b(K)2471 2459 y FK(])2516
2458 y(mesur)o(e)21 b(3)f(cm,)g(le)h(segment)3397 2459
y([)3424 2458 y FB(M)9 b(N)3570 2459 y FK(])3615 2458
y(mesur)o(e)21 b(5)f(cm)g(et)-246 2558 y FB(h)f FG(\306)14
b FK(1,)8 b(2)19 b(cm.)p 0 TeXcolorgray 0 TeXcolorgray
1260 3670 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.16391 a add def
/d 0.0 a add neg def /h 124.05399 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 3670 a 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 28.45274 28.45274 28.45274
40.5244 40.5244 40.5244 40.5244 28.45274  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8  setgray  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 105.84424 55.76756 115.50156
48.52457 108.25856 38.86723 98.60124 46.11023  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8  setgray  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 105.84424 55.76756 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1180 3736 a
tx@Dict begin { 88.20367 49.7923 } PutCoor PutBegin  end
 1180 3736 a 57 x FB(h)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1180 3736 a
tx@Dict begin { 17.64055 27.31482 } PutCoor PutBegin  end

1180 3736 a -1 x FB(K)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 142.26372 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1180 3736 a
tx@Dict begin { 145.10916 21.62392 } PutCoor PutBegin  end
 1180 3736 a 2 w
FB(N)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 28.45274 113.81097
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1180 3736 a
tx@Dict begin { 31.86693 116.08723 } PutCoor PutBegin  end
 1180 3736 a 2 w FB(M)1180 3736
y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 85.35823 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1180 3736 a
tx@Dict begin { 79.66776 19.34766 } PutCoor PutBegin  end
 1180 3736 a FB(P)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a
2640 3670 a
currentpoint initclip moveto
 2640 3670 a -246 3722 a
SDict begin H.S end
 -246 3722 a -246
3722 a
SDict begin 12 H.A end
 -246 3722 a -246 3722 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 3722 a 0 TeXcolorgray
-141 3833 a FK(1.)p 0 TeXcolorgray 43 w FF(A)29 3845
y Fw(M)7 b(N)f(P)201 3833 y FG(\306)281 3800 y Fw(M)h(N)f
FH(\243)p Fw(h)p 280 3813 193 5 v 361 3862 a FI(2)497
3833 y FG(\306)576 3797 y FI(5)p FH(\243)p FI(1,2)p 576
3814 150 5 v 635 3862 a(2)750 3833 y FG(\306)14 b FK(3)k(cm)985
3803 y FI(2)1020 3833 y FK(.)-246 3873 y
SDict begin H.S end
 -246 3873 a
-246 3873 a
SDict begin 12 H.A end
 -246 3873 a -246 3873 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246 3873 a 0 TeXcolorgray
-141 3965 a FK(2.)p 0 TeXcolorgray 43 w(On)f(a)g(aussi)h
FF(A)400 3977 y Fw(M)7 b(N)f(P)572 3965 y FG(\306)651
3933 y Fw(P)i(N)e FH(\243)q Fw(M)g(K)p 651 3946 244 5
v 758 3994 a FI(2)905 3965 y FK(,)17 b(donc)g(3)e FG(\306)1268
3933 y Fw(P)8 b(N)e FH(\243)p FI(3)p 1268 3946 167 5
v 1336 3994 a(2)1445 3965 y FK(,)17 b(soit)1625 3982
y FA(\001)1625 3965 y FK(3)11 b FG(\243)f FK(2)15 b FG(\306)f
FB(P)c(N)19 b FG(\243)2064 3982 y FA(\001)2064 3965 y
FK(3)f(;)f(et)h(donc)f FB(P)10 b(N)23 b FG(\306)14 b
FK(2)k(cm.)-246 4005 y
SDict begin H.S end
 -246 4005 a -246 4005 a
SDict begin 12 H.A end
 -246 4005
a -246 4005 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 4005 a 0 TeXcolorgray -141 4087 a
FK(3.)p 0 TeXcolorgray 43 w(\(N)n(on)e(d\351taill\351.\))j(Il)e(faut)h
(calculer)f(successivement)k FB(K)14 b(N)9 b FK(,)16
b(puis)j FB(K)12 b(P)25 b FK(et)20 b FB(M)7 b(P)-9 b
FK(.)-38 4198 y Fu(")p FK(On)18 b(ne)f(sait)h(pas)o(,)g(\340)g(ce)f
(stade)o(,)g(que)h FB(P)25 b FK(est)18 b(le)g(milieu)h(de)1700
4199 y([)1726 4198 y FB(K)14 b(N)1857 4199 y FK(])1889
4198 y(.)p 0 TeXcolorgray 7 4294 a(\225)p 0 TeXcolorgray
42 w(P)n(our)j FB(K)d(N)9 b FK(,)16 b(on)i(utilise)h(le)f
(th\351or\350me)h(de)e(Pythagor)o(e)f(dans)i(le)f(tr)q(iangle)h
FB(K)c(M)9 b(N)g FK(.)17 b(On)h(obtient)g FB(K)c(N)22
b FG(\306)14 b FK(4)k(cm.)p 0 TeXcolorgray 7 4394 a(\225)p
0 TeXcolorgray 42 w FB(K)12 b(P)22 b FG(\306)14 b FB(K)g(N)k
FG(\241)10 b FB(P)g(N)24 b FG(\306)14 b FK(4)c FG(\241)g
FK(2)15 b FG(\306)f FK(2)k(cm.)p 0 TeXcolorgray 7 4494
a(\225)p 0 TeXcolorgray 42 w(En\002n,)f(pour)h(calculer)g
FB(P)10 b(M)d FK(,)18 b(on)g(utilise)h(le)f(th\351or\350me)g(de)g
(Pythagor)o(e)e(dans)h(le)h(tr)q(iangle)g FB(K)c(M)7
b(P)-9 b FK(.)18 b(On)f(obtient)j FB(M)7 b(P)23 b FG(\306)3556
4429 y(p)p 3619 4429 82 5 v 3619 4494 a FK(13)18 b(cm)q(.)-246
4573 y
SDict begin H.S end
 -246 4573 a -246 4573 a
SDict begin 12 H.A end
 -246 4573 a -246 4573
a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 4573 a -246 4589 a
SDict begin H.S end
 -246 4589 a -246 4589 a
SDict begin 12 H.A end
 -246
4589 a -246 4589 a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246 4589 a 0 TeXcolorgray 92 x FL(Ex)o(er)o(cice)c
(13)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(Les)k(c\364t\351s)g(de)f(l)o('angle)i(droit)d(d)n('un)i(tr)q
(iangle)f(r)o(ectangle)h(mesur)o(ent)i FB(a)h FK(et)d
FB(b)q FK(,)g(l)o('hypot\351nuse)i(mesur)o(e)e FB(c)5
b FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1373 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88808 a add def
/d 0.0 a add neg def /h 107.55135 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1373
5646 a 873 5754 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
28.45274 85.35823 40.5244 97.42989 40.5244 97.42989 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 199.1692 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 28.45274 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
873 5754 a
tx@Dict begin { 147.95418 74.54604 } PutCoor PutBegin  end
 873 5754 a 38 x FB(c)873 5754 y
tx@Dict begin  PutEnd  end
 873 5754 a
873 5754 a
tx@Dict begin { 131.45152 25.60728 } PutCoor PutBegin  end
 873 5754 a 875 5792 a FB(a)873 5754 y
tx@Dict begin  PutEnd  end
 873
5754 a 873 5754 a
tx@Dict begin { 69.70912 71.13185 } PutCoor PutBegin  end
 873 5754 a 57 x FB(b)873 5754 y
tx@Dict begin  PutEnd  end
 873
5754 a 2734 5646 a
currentpoint initclip moveto
 2734 5646 a 0 TeXcolorgray 1930 5895
a FK(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-38 -163 a FK(D)o('apr\350s)17 b(le)h(th\351or\350me)h(de)e(Pythagor)o
(e)o(,)f FB(c)1202 -193 y FI(2)1252 -163 y FG(\306)g
FB(a)1370 -193 y FI(2)1415 -163 y FG(\305)10 b FB(b)1527
-193 y FI(2)1562 -163 y FK(,)17 b(donc)1824 24 y FB(c)i
FG(\306)1947 -58 y Ft(p)p 2023 -58 241 5 v 2025 24 a
FB(a)2072 0 y FI(2)2117 24 y FG(\305)10 b FB(b)2229 0
y FI(2)2264 24 y FK(.)-246 98 y
SDict begin H.S end
 -246 98 a -246 98 a
SDict begin 12 H.A end
 -246
98 a -246 98 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246 98 a 0 TeXcolorgray -141 204 a FK(2.)p
0 TeXcolorgray 43 w(L)-10 b('af\002r)q(mation)p 0 TeXcolorgray
0 TeXcolorgray 1179 339 a(P)n(our)17 b(tous)h(nombr)o(es)g(positifs)j
FB(a)g FK(et)d FB(b)q FK(,)2353 269 y FG(p)p 2416 269
241 5 v 2418 339 a FB(a)2465 315 y FI(2)2510 339 y FG(\305)10
b FB(b)2622 315 y FI(2)2671 339 y FG(\306)16 b FB(a)e
FG(\305)c FB(b)q FK(.)-38 475 y(est)18 b(F)-5 b(A)l(USSE)9
b(!)19 b(V)-5 b(oici)18 b(deux)f(justi\002cations)i(:)p
0 TeXcolorgray 7 587 a(\225)p 0 TeXcolorgray 42 w FL(P)m(ar)c(le)g
(calcul.)h FK(Il)g(suf\002t)i(de)g(donner)f(un)h(contr)o(e-exemple)h(:)
e(on)h(choisit)i FB(a)e FG(\306)c FK(4)k(et)g FB(b)g
FG(\306)c FK(3.)k(Dans)f(ce)g(cas)732 689 y Ft(p)p 809
689 V 811 771 a FB(a)858 747 y FI(2)903 771 y FG(\305)10
b FB(b)1015 747 y FI(2)1064 771 y FG(\306)1133 689 y
Ft(p)p 1209 689 227 5 v 82 x FK(4)1249 747 y FI(2)1295
771 y FG(\305)g FK(3)1400 747 y FI(2)1450 771 y FG(\306)1519
703 y(p)p 1582 703 197 5 v 1582 771 a FK(16)g FG(\305)g
FK(9)16 b FG(\306)1863 703 y(p)p 1926 703 82 5 v 1926
771 a FK(25)f FG(\306)g FK(5)146 b(est)18 b(diff\351r)o(ent)g(de)148
b FB(a)14 b FG(\305)c FB(b)18 b FG(\306)d FK(4)10 b FG(\305)g
FK(3)15 b FG(\306)f FK(7.)p 0 TeXcolorgray 7 939 a(\225)p
0 TeXcolorgray 42 w FL(G\351om\351tr)q(iquement)q(.)782
869 y FG(p)p 845 869 241 5 v 847 939 a FB(a)894 915 y
FI(2)939 939 y FG(\305)c FB(b)1051 915 y FI(2)1105 939
y FK(est)19 b(la)g(longueur)g(de)g(l)o('hypot\351nuse)j
FB(c)i FK(du)19 b(tr)q(iangle)f(r)o(ectangle)h(de)g(la)g(question)h(1)9
b(;)19 b(tandis)g(que)j FB(a)15 b FG(\305)c FB(b)80 1039
y FK(est)19 b(la)f(somme)h(des)g(longueurs)g(des)f(c\364t\351s)h(de)f
(l)o('angle)h(droit.)f(Or)g(cette)g(somme)i(est)f(str)q(ictement)h
(plus)f(gr)o(ande)f(que)g(celle)h(de)f(l)o('hypo-)80
1138 y(t\351nuse)o(,)g(puisque)i(le)d(chemin)i(le)f(plus)g(cour)q(t)f
(d)n('un)h(point)h(\340)e(un)g(autr)o(e)h(est)g(la)f(ligne)h(droite)o
(.)-246 1219 y
SDict begin H.S end
 -246 1219 a -246 1219 a
SDict begin 12 H.A end
 -246 1219 a -246
1219 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 1219 a 0 TeXcolorgray 110 x FL(Ex)o(er)o(cice)c(14)p
0 TeXcolorgray 41 w FK(S)o(oit)24 b FB(A)c FK(un)e(point)h(et)e
FC(\242)h FK(une)g(droite)f(du)g(plan.)h(Le)g(projet\351)g(or)q
(thogonal)g(de)23 b FB(A)d FK(sur)d FC(\242)h FK(est)g(le)g(point)i
FB(H)26 b FK(de)17 b FC(\242)h FK(tel)g(que)g(\()6 b
FB(A)f(H)j FK(\))14 b FG(?)g FC(\242)p FK(.)-246 1372
y
SDict begin H.S end
 -246 1372 a -246 1372 a
SDict begin 12 H.A end
 -246 1372 a -246 1372 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246
1372 a 0 TeXcolorgray -141 1465 a FK(1.)p 0 TeXcolorgray
43 w(On)j(tr)o(ace)h(la)f(perpendiculair)o(e)i(\340)e
FC(\242)g FK(passant)i(par)k FB(A)s FK(.)17 b(Elle)i(coupe)f
FC(\242)g FK(en)i FB(H)8 b FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1296 2577 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 182.66698 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1296 2577 a 1910 2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.6 def /x1 3.82 def /dx x1 x sub
49 div def /F@pstplot ((--1.2932--1.42*x)/4.02)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.6 def /x1 3.82
def /dx x1 x sub 49 div def /F@pstplot ((-4.87--4.02*x)/-1.42)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial 1910 2426 a
tx@Dict begin { -43.24829 8.5359 } PutCoor PutBegin  end
 1910 2426 a 54 x
FC(\242)1910 2426 y
tx@Dict begin  PutEnd  end
 1910 2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1910 2426 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1910 2426 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1910 2426 a
tx@Dict begin  PutEnd  end
 1910
2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1910 2426
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1910 2426 a 0.30196 0.30196 1 TeXcolorrgb 2 w FB(H)p
0 TeXcolorgray 1910 2426 a
tx@Dict begin  PutEnd  end
 1910 2426 a 2812 2577 a
currentpoint initclip moveto
 2812
2577 a -246 2613 a
SDict begin H.S end
 -246 2613 a -246 2613 a
SDict begin 12 H.A end
 -246 2613
a -246 2613 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 2613 a 0 TeXcolorgray -141 2725 a
FK(2.)p 0 TeXcolorgray 43 w(P)m(ar)16 b(constr)q(uction,)i(le)f(tr)q
(iangle)22 b FB(A)5 b(M)k(H)26 b FK(est)17 b(r)o(ectangle)g(en)h
FB(H)8 b FK(,)18 b(donc)e(son)h(hypot\351nuse)25 b FB(A)5
b(M)24 b FK(est)17 b(str)q(ictement)h(plus)g(gr)o(ande)e(que)h(le)g
(c\364t\351)g(de)-38 2825 y(l)o('angle)h(droit)23 b FB(A)5
b(H)26 b FK(\(c)n('est)17 b(le)h(m\352me)h(r)o(aisonnement)g(que)f
(celui)h(de)e(l)o('exer)o(cice)h(pr\351c\351dent\))g(:)1876
2993 y FB(A)5 b(M)22 b FG(\310)e FB(A)5 b(H)j FK(.)p
0 TeXcolorgray 0 TeXcolorgray 1253 4109 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1253 4109 a
1867 3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.6 def /x1 4.18 def /dx x1 x sub
49 div def /F@pstplot ((--1.2932--1.42*x)/4.02)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.6 def /x1 4.18
def /dx x1 x sub 49 div def /F@pstplot ((-4.87--4.02*x)/-1.42)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial
1867 3958 a
tx@Dict begin { -43.24829 8.5359 } PutCoor PutBegin  end
 1867 3958 a 53 x FC(\242)1867 3958 y
tx@Dict begin  PutEnd  end
 1867
3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5.12128 83.08195 81.44693 37.92294
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867
3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1 TeXcolorrgb 2 w FB(H)p
0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867 3958 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 81.44693 37.92294   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958 a
tx@Dict begin { 83.65112 43.81703 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1
TeXcolorrgb 2 w FB(M)p 0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867
3958 a 2855 4109 a
currentpoint initclip moveto
 2855 4109 a -246 4145 a
SDict begin H.S end
 -246 4145
a -246 4145 a
SDict begin 12 H.A end
 -246 4145 a -246 4145 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246 4145 a 0 TeXcolorgray
-141 4257 a FK(3.)p 0 TeXcolorgray 43 w(Le)18 b(segment)374
4258 y([)406 4257 y FB(A)5 b(H)526 4258 y FK(])568 4257
y(est)18 b(la)g(hauteur)p 0 0 1 TeXcolorrgb 1048 4257
a
SDict begin H.S end
 1048 4257 a -30 x FI(2)1084 4257 y
SDict begin 12 H.L end
 1084 4257 a 1084
4257 a
SDict begin [/Subtype /Link/Dest (Hfootnote.2) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1084 4257 a 0 TeXcolorgray 17 w FK(issue)h(de)k
FB(A)d FK(dans)d(le)h(tr)q(iangle)24 b FB(A)s(B)5 b(C)k
FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1253 5371 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1253
5371 a 1867 5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5.12128 83.08195 81.44693 37.92294
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -36.14725 -3.61563 5.12128 83.08195
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 81.44693 37.92294 -36.14725 -3.61563
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 5.12128 83.08195 27.77068
18.96255   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867
5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1 TeXcolorrgb 2 w FB(H)p
0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867 5220 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 81.44693 37.92294   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220 a
tx@Dict begin { 83.65112 43.81703 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1
TeXcolorrgb 1865 5219 a FB(C)p 0 TeXcolorgray 1867 5220
a
tx@Dict begin  PutEnd  end
 1867 5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.49019 0.49019 1  setrgbcolor
 [ -36.14725 -3.61563   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1867 5220 a
tx@Dict begin { -46.94684 1.13791 } PutCoor PutBegin  end
 1867 5220 a 0.49019 0.49019 1 TeXcolorrgb
FB(B)p 0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867 5220 a 2855 5371
a
currentpoint initclip moveto
 2855 5371 a 0 TeXcolorgray -246 5481 1757 4 v -154
5557 a Fv(2)q(.)p 0 TeXcolorgray -76 5557 a
SDict begin H.S end
 -76 5557
a -76 5557 a
SDict begin H.R end
 -76 5557 a -76 5557 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.2) cvn /DEST pdfmark
end
 -76 5557 a 0 TeXcolorgray
Fv(Le)k(mot)g Fs(hauteur)h Fv(est)f(polys\351mique)g(\(il)g(a)f
(plusieurs)g(sens\))g(:)h(le)g(segment)1699 5558 y([)1724
5557 y Fs(A)5 b(H)1820 5558 y Fv(])1853 5557 y(peut)12
b(\352tr)o(e)h(appel\351)h Fs(hauteur)p Fv(,)d(la)i(droite)2797
5558 y(\()2823 5557 y Fs(A)5 b(H)2919 5558 y Fv(\))2953
5557 y(peut)13 b(\351galement)g(\352tr)o(e)g(appel\351e)h
Fs(hauteur)c Fv(;)h(en\002n)-246 5646 y(la)j(longueur)19
b Fs(A)5 b(H)20 b Fv(peut)14 b(elle)h(aussi)e(\352tr)o(e)h(appel\351e)h
Fs(hauteur)h Fv(\226)d(c)n('est)h(cette)h(longueur)l(,)g(par)e(exemple)
o(,)j(que)e(l)o('on)g(r)o(etrouve)g(dans)e(la)i(formule)3108
5620 y Fo(B)5 b Fn(\243)p Fo(h)p 3108 5631 110 4 v 3149
5669 a Fp(2)3241 5646 y Fv(pour)14 b(l)o('air)o(e)g(du)f(triangle)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1930 5895 a FK(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(15)p 0 TeXcolorgray 41 w FK(On)j(r\351sout)i(les)f(\351quations)h(:)
-1 455 y FB(x)c FG(\305)10 b FK(7)15 b FG(\306)g FK(18)-97
580 y FB(x)g FG(\305)22 596 y FA(\001)22 580 y FK(7)p
1 0 0 TeXcolorrgb 2 w FG(\241)119 596 y FA(\001)119 580
y FK(7)p 0 TeXcolorgray 14 w FG(\306)g FK(18)p 1 0 0
TeXcolorrgb FG(\241)p FK(7)p 0 TeXcolorgray 115 704 a
FB(x)k FG(\306)c FK(11)-246 1240 y(La)j(solution)h(est)h
FB(x)f FG(\306)c FK(11)p 0 TeXcolorgray 604 1258 9 1304
v 0 TeXcolorgray 872 315 a(3)r FB(x)g FG(\305)10 b FK(4)15
b FG(\306)g FK(19)776 439 y(3)r FB(x)g FG(\305)937 455
y FA(\001)937 439 y FK(4)p 1 0 0 TeXcolorrgb 2 w FG(\241)1034
455 y FA(\001)1034 439 y FK(4)p 0 TeXcolorgray 14 w FG(\306)g
FK(19)p 1 0 0 TeXcolorrgb FG(\241)p FK(4)p 0 TeXcolorgray
987 564 a(3)r FB(x)20 b FG(\306)15 b FK(15)977 710 y
FA(\001)977 694 y FK(3)s FB(x)p 977 731 87 5 v 0 0 1
TeXcolorrgb 1001 827 a FA(\001)1001 811 y FK(3)p 0 TeXcolorgray
1088 750 a FG(\306)1168 694 y FK(15)p 1168 731 82 5 v
0 0 1 TeXcolorrgb 1188 807 a(3)p 0 TeXcolorgray 1030
914 a FB(x)k FG(\306)c FK(5)649 1240 y(La)j(solution)h(est)h
FB(x)f FG(\306)c FK(5.)p 0 TeXcolorgray 1498 1258 9 1304
v 0 TeXcolorgray 1752 201 a(3,)8 b(5)r FB(x)15 b FG(\241)10
b FK(9)17 b FG(\306)d FK(5)1657 325 y(3,)8 b(5)r FB(x)15
b FG(\241)1886 341 y FA(\001)1886 325 y FK(9)p 1 0 0
TeXcolorrgb 2 w FG(\305)1983 341 y FA(\001)1983 325 y
FK(9)p 0 TeXcolorgray 15 w FG(\306)f FK(5)p 1 0 0 TeXcolorrgb
FG(\305)p FK(9)p 0 TeXcolorgray 1868 450 a(3,)8 b(5)r
FB(x)21 b FG(\306)14 b FK(14)1850 576 y FA(\010)1893
554 y(\010)1858 565 y FK(3,)8 b(5)s FB(x)p 1858 601 156
5 v 0 0 1 TeXcolorrgb 1873 689 a FA(\010)1916 668 y(\010)1881
678 y FK(3,)g(5)p 0 TeXcolorgray 2038 621 a FG(\306)2131
565 y FK(14)p 2117 601 110 5 v 0 0 1 TeXcolorrgb 2117
678 a(3,)g(5)p 0 TeXcolorgray 1979 829 a FB(x)20 b FG(\306)2131
773 y FK(14)p 2117 810 V 2117 886 a(3,)8 b(5)1544 1041
y(Or)1674 1008 y FI(14)p 1666 1021 77 5 v 1666 1070 a(3,5)1774
1041 y FG(\306)1868 1008 y FI(14)p FH(\243)p FI(2)p 1860
1021 150 5 v 1860 1070 a(3,5)p FH(\243)p FI(2)2041 1041
y FG(\306)2127 1008 y FI(28)p 2127 1021 62 5 v 2142 1070
a(7)2219 1041 y FG(\306)21 b FK(4,)1544 1141 y(donc)e(la)g(solution)h
(est)i FB(x)f FG(\306)1544 1240 y FK(4.)p 0 TeXcolorgray
2393 1258 9 1304 v 0 TeXcolorgray 2595 214 a FB(x)15
b FG(\305)10 b FK(1)16 b FG(\306)e(\241)p FK(2)r FB(x)h
FG(\241)10 b FK(5)2453 339 y FB(x)15 b FG(\305)10 b FK(1)p
0 1 0 TeXcolorrgb FG(\305)p FK(2)r FB(x)p 0 TeXcolorgray
22 w FG(\306)2831 333 y FA(\030)2906 314 y(\030)2839
339 y FG(\241)p FK(2)r FB(x)16 b FG(\241)10 b FK(5)p
0 1 0 TeXcolorrgb FG(\305)-8 b FA(\010)3163 329 y(\010)3151
339 y FK(2)r FB(x)p 0 TeXcolorgray 2553 463 a FK(3)r
FB(x)15 b FG(\305)10 b FK(1)16 b FG(\306)e(\241)p FK(5)2457
588 y(3)r FB(x)h FG(\305)2618 604 y FA(\001)2618 588
y FK(1)p 1 0 0 TeXcolorrgb 2 w FG(\241)2715 604 y FA(\001)2715
588 y FK(1)p 0 TeXcolorgray 15 w FG(\306)f(\241)p FK(5)p
1 0 0 TeXcolorrgb FG(\241)p FK(1)p 0 TeXcolorgray 2669
712 a(3)r FB(x)20 b FG(\306)14 b(\241)p FK(6)2658 858
y FA(\001)2659 842 y FK(3)r FB(x)p 2659 879 87 5 v 0 0 1
TeXcolorrgb 2682 976 a FA(\001)2682 959 y FK(3)p 0 TeXcolorgray
2770 899 a FG(\306)2849 842 y(\241)p FK(6)p 2849 879
96 5 v 0 0 1 TeXcolorrgb 2876 956 a(3)p 0 TeXcolorgray
2711 1063 a FB(x)20 b FG(\306)14 b(\241)p FK(2)2439 1240
y(La)j(solution)j(est)g FB(x)f FG(\306)14 b(\241)p FK(2.)p
0 TeXcolorgray 3288 1258 9 1304 v 0 TeXcolorgray 3476
222 a FG(\241)p FK(2)r FB(x)h FG(\305)10 b FK(4)16 b
FG(\306)e FK(3)r FB(x)h FG(\241)10 b FK(6)3334 347 y
FG(\241)p FK(2)r FB(x)15 b FG(\305)10 b FK(4)p 0 1 0
TeXcolorrgb FG(\241)p FK(3)r FB(x)p 0 TeXcolorgray 22
w FG(\306)c FA(\010)3829 337 y(\010)3817 347 y FK(3)r
FB(x)16 b FG(\241)10 b FK(6)p 0 1 0 TeXcolorrgb FG(\241)-8
b FA(\010)4086 337 y(\010)4074 347 y FK(3)r FB(x)p 0
TeXcolorgray 3476 471 a FG(\241)p FK(5)r FB(x)15 b FG(\305)10
b FK(4)16 b FG(\306)e(\241)p FK(6)3380 596 y FG(\241)p
FK(5)r FB(x)h FG(\305)3596 612 y FA(\001)3596 596 y FK(4)p
1 0 0 TeXcolorrgb 2 w FG(\241)3693 612 y FA(\001)3693
596 y FK(4)p 0 TeXcolorgray 15 w FG(\306)f(\241)p FK(6)p
1 0 0 TeXcolorrgb FG(\241)p FK(4)p 0 TeXcolorgray 3591
720 a FG(\241)p FK(5)r FB(x)21 b FG(\306)14 b(\241)p
FK(10)3573 839 y FA(\010)3602 825 y(\010)3582 837 y FG(\241)p
FK(5)r FB(x)p 3582 874 142 5 v 0 0 1 TeXcolorrgb 3597
952 a FA(\010)3625 938 y(\010)3605 950 y FG(\241)p FK(5)p
0 TeXcolorgray 3748 893 a FG(\306)3827 837 y(\241)p FK(10)p
3827 874 136 5 v 0 0 1 TeXcolorrgb 3847 950 a FG(\241)p
FK(5)p 0 TeXcolorgray 3689 1053 a FB(x)20 b FG(\306)14
b FK(2)3334 1240 y(La)j(solution)i(est)h FB(x)g FG(\306)14
b FK(2.)-246 1340 y
SDict begin H.S end
 -246 1340 a -246 1340 a
SDict begin 12 H.A end
 -246 1340
a -246 1340 a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 1340 a 0 TeXcolorgray 100 x FL(Ex)o(er)o(cice)g(16)p
0 TeXcolorgray 41 w FK(Les)k(deux)g(plateaux)h(de)e(la)g(balance)h
(ci-dessous)g(sont)g(en)g(\351quilibr)o(e)o(.)g(Les)g(poids)g(noirs)f
(ont)h(tous)g(la)g(m\352me)g(masse)j FB(M)k FK(kg.)p
0 TeXcolorgray 0 TeXcolorgray 1213 2283 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 177.54483 a add def
/d 0.0 a add neg def /h 88.31741 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1213 2283 a
1241 2438 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 164.74118 72.15639 164.74118
83.53754 150.51482 83.53754 150.51482 72.15639  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 16.787 71.24605 16.787
82.6272 2.56064 82.6272 2.56064 71.24605  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 36.98865 71.24605 36.98865
82.6272 22.76227 82.6272 22.76227 71.24605  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 56.3363 71.47354 56.3363
82.85469 42.10992 82.85469 42.10992 71.47354  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 114.94888 72.61172 137.71117
72.61172 137.71117 95.60152 114.94888 95.37401  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 42.67911 102.43027 42.67911
91.04913 14.22636 91.04913 14.22636 102.43027  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 68.28685 85.35823 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 68.28685 85.35823 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 68.28685 0.0 68.28685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 68.28685 113.81097 68.28685
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 150.51482 83.53754 150.51482 72.15639
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 164.74118 83.53754 150.51482 83.53754
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 164.74118 72.15639 164.74118 83.53754
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 150.51482 72.15639 164.74118 72.15639
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2.56064 82.6272 2.56064 71.24605  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 16.787 82.6272 2.56064 82.6272   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 16.787 71.24605 16.787 82.6272   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2.56064 71.24605 16.787 71.24605  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76227 82.6272 22.76227 71.24605
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 36.98865 82.6272 22.76227 82.6272 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 36.98865 71.24605 36.98865 82.6272
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76227 71.24605 36.98865 71.24605
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.10992 82.85469 42.10992 71.47354
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.3363 82.85469 42.10992 82.85469
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.3363 71.47354 56.3363 82.85469 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.10992 71.47354 56.3363 71.47354
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 137.71117 95.60152 114.94888 95.37401
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 137.71117 72.61172 137.71117 95.60152
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 114.94888 72.61172 137.71117 72.61172
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 114.94888 95.37401 114.94888 72.61172
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1241 2438 a
tx@Dict begin { 115.23369 86.95209 } PutCoor PutBegin  end
 1241 2438 a 57 x FK(10)19 b(kg)1241 2438
y
tx@Dict begin  PutEnd  end
 1241 2438 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 14.22636 91.04913 14.22636 102.43027
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 91.04913 14.22636 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 102.43027 42.67911 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 14.22636 102.43027 42.67911 102.43027
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1241 2438 a
tx@Dict begin { 21.33955 100.60924 } PutCoor PutBegin  end
 1241 2438 a 57 x FK(7)f(kg)1241 2438 y
tx@Dict begin  PutEnd  end
 1241
2438 a 2687 2283 a
currentpoint initclip moveto
 2687 2283 a -246 2466 a FK(Le)g(fait)g(que)g(la)g
(balance)f(soit)h(en)g(\351quilibr)o(e)g(se)f(tr)o(aduit)h(par)f(l)o
('\351quation)1662 2648 y(3)r FB(M)i FG(\305)10 b FK(7)k
FG(\306)h FK(10)10 b FG(\305)i FB(M)7 b FK(.)-246 2831
y(On)18 b(la)f(r\351sout)h(:)1538 3113 y(3)r FB(M)g FG(\305)10
b FK(7)p 0 1 0 TeXcolorrgb FG(\241)r FB(M)p 0 TeXcolorgray
23 w FG(\306)k FK(10)c FG(\305)2139 3123 y FA(\032)2153
3113 y(\032)-87 b FB(M)p 0 1 0 TeXcolorrgb 9 w FG(\241)2275
3123 y FA(\032)2288 3113 y(\032)h FB(M)p 0 TeXcolorgray
1672 3238 a FK(2)r FB(M)19 b FG(\305)10 b FK(7)15 b FG(\306)f
FK(10)1577 3362 y(2)r FB(M)k FG(\305)1772 3378 y FA(\001)1772
3362 y FK(7)p 1 0 0 TeXcolorrgb 1 w FG(\241)1868 3378
y FA(\001)1868 3362 y FK(7)p 0 TeXcolorgray 15 w FG(\306)c
FK(10)p 1 0 0 TeXcolorrgb FG(\241)p FK(7)p 0 TeXcolorgray
1788 3487 a(2)r FB(M)23 b FG(\306)14 b FK(3)1778 3633
y FA(\001)1778 3617 y FK(2)s FB(M)p 1778 3654 121 5 v
0 0 1 TeXcolorrgb 1818 3750 a FA(\001)1818 3734 y FK(2)p
0 TeXcolorgray 1923 3673 a FG(\306)2002 3617 y FK(3)p
2002 3654 41 5 v 0 0 1 TeXcolorrgb 2002 3730 a(2)p 0
TeXcolorgray 1831 3837 a FB(M)22 b FG(\306)14 b FK(1,)8
b(5)-246 4020 y(C)o(onclusion)20 b(:)d(la)g(solution)i(est)h
FB(M)i FG(\306)15 b FK(1,)8 b(5.)-246 4097 y
SDict begin H.S end
 -246 4097
a -246 4097 a
SDict begin 12 H.A end
 -246 4097 a -246 4097 a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 4097 a 0 TeXcolorgray
122 x FL(Ex)o(er)o(cice)14 b(17)p 0 TeXcolorgray 41 w
FK(Le)j(stade)g(des)g(Gones)h(compte)g(15)12 b(000)19
b(places)o(.)e(Il)f(y)g(a)j FB(x)j FK(places)17 b(dans)g(les)g(vir)o
(ages)h(et)f(les)g(autr)o(es)g(dans)f(les)i(tr)q(ibunes)o(.)f(U)m(ne)g
(place)g(en)-246 4319 y(vir)o(age)h(co\373te)g(15)g FJ(")g
FK(et)f(une)h(place)g(dans)g(les)g(tr)q(ibunes)g(co\373te)g(25)g
FJ(")p FK(.)-246 4468 y(A)n(ujour)o(d)n('hui,)h(le)f(stade)f(est)h
(plein)h(et)e(la)h(r)o(ecette)f(est)h(de)g(295)12 b(000)20
b FJ(")p FK(.)-246 4516 y
SDict begin H.S end
 -246 4516 a -246 4516 a
SDict begin 12 H.A end
 -246
4516 a -246 4516 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 4516 a 0 TeXcolorgray -141 4612
a FK(1.)p 0 TeXcolorgray 43 w(Il)d(y)f(a)k FB(x)i FK(places)c(dans)g
(les)g(vir)o(ages)o(,)g(donc)f(\(15)8 b(000)i FG(\241)i
FB(x)5 b FK(\))20 b(places)f(dans)e(les)h(tr)q(ibunes)o(.)g(La)f(r)o
(ecette)h(totale)g(en)g FJ(")f FK(est)h(donc)1634 4794
y(15)10 b FG(\243)i FB(x)j FG(\305)10 b FK(25)g FG(\243)g
FK(\(15)e(000)i FG(\241)i FB(x)5 b FK(\).)-38 4977 y(C)o(omme)19
b(cette)f(r)o(ecette)f(est)h(295)12 b(000)21 b FJ(")p
FK(,)e FB(x)k FK(est)18 b(solution)h(de)e(l)o('\351quation)1542
5160 y(15)r FB(x)e FG(\305)10 b FK(25\(15)e(000)i FG(\241)i
FB(x)5 b FK(\))19 b FG(\306)c FK(295)8 b(000.)-246 5252
y
SDict begin H.S end
 -246 5252 a -246 5252 a
SDict begin 12 H.A end
 -246 5252 a -246 5252 a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246
5252 a 0 TeXcolorgray -141 5357 a FK(2.)p 0 TeXcolorgray
43 w(On)17 b(r\351sout)h(l)o('\351quation)i(de)d(la)g(question)i
(pr\351c\351dente)g(:)p 0 TeXcolorgray 1930 5895 a(8)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1542 20 a FK(15)r FB(x)15 b FG(\305)10 b FK(25\(15)e(000)i
FG(\241)i FB(x)5 b FK(\))20 b FG(\306)14 b FK(295)8 b(000)1255
145 y(15)r FB(x)15 b FG(\305)10 b FK(25)g FG(\243)g FK(15)e(000)i
FG(\305)g FK(2)q(5)g FG(\243)h FK(\()p FG(\241)r FB(x)5
b FK(\))20 b FG(\306)14 b FK(295)8 b(000)1555 269 y(15)r
FB(x)15 b FG(\305)10 b FK(375)e(000)i FG(\241)g FK(25)r
FB(x)26 b FG(\306)14 b FK(295)8 b(000)1703 394 y FG(\241)p
FK(10)r FB(x)15 b FG(\305)10 b FK(375)e(000)19 b FG(\306)14
b FK(295)8 b(000)1396 518 y FG(\241)p FK(10)r FB(x)15
b FG(\305)1644 526 y FA(\030)1729 505 y(\030)1812 485
y(\030)1831 480 y(\030)1652 518 y FK(375)8 b(000)p 1 0 0
TeXcolorrgb 5 w FG(\241)1952 526 y FA(\030)2035 505 y(\030)2118
485 y(\030)2137 480 y(\030)1960 518 y FK(375)g(000)p
0 TeXcolorgray 18 w FG(\306)14 b FK(295)8 b(000)p 1 0 0
TeXcolorrgb FG(\241)p FK(375)g(000)p 0 TeXcolorgray 2029
643 a FG(\241)p FK(10)r FB(x)21 b FG(\306)14 b(\241)p
FK(80)8 b(000)2011 751 y FA(\030)2080 733 y(\030)p 0 0 1
TeXcolorrgb 2019 757 a FG(\241)p FK(10)p 0 TeXcolorgray
3 w FB(x)p 2019 794 183 5 v 0 0 1 TeXcolorrgb 2034 864
a FA(\030)2104 846 y(\030)2042 870 y FG(\241)p FK(10)p
0 TeXcolorgray 2226 813 a FG(\306)2305 757 y(\241)p FK(80)g(000)p
2305 794 266 5 v 0 0 1 TeXcolorrgb 2370 870 a FG(\241)p
FK(10)p 0 TeXcolorgray 2167 973 a FB(x)20 b FG(\306)14
b FK(8000.)-38 1220 y(C)o(onclusion)19 b(:)f(il)f(y)g(a)i
FB(x)h FG(\306)14 b FK(8)8 b(000)19 b(places)g(dans)e(les)h(vir)o(ages)
g(\(et)g(donc)f(7)12 b(000)19 b(dans)e(les)i(tr)q(ibunes\).)-246
1306 y
SDict begin H.S end
 -246 1306 a -246 1306 a
SDict begin 12 H.A end
 -246 1306 a -246 1306
a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 1306 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)14
b(18)p 0 TeXcolorgray 598 1634 a FB(A)j FG(\306)742 1578
y FK(5)p 742 1615 41 5 v 742 1691 a(6)803 1634 y FG(\305)878
1578 y FK(2)p 878 1615 V 878 1691 a(3)943 1634 y FG(\306)1022
1578 y FK(5)p 1022 1615 V 1022 1691 a(6)1083 1634 y FG(\305)1158
1578 y FK(2)10 b FG(\243)g FK(2)p 1158 1615 157 5 v 1158
1691 a(3)g FG(\243)g FK(2)1338 1634 y FG(\306)1417 1578
y FK(5)p 1417 1615 41 5 v 1417 1691 a(6)1478 1634 y FG(\305)1553
1578 y FK(4)p 1553 1615 V 1553 1691 a(6)1618 1634 y FG(\306)1697
1578 y FK(5)g FG(\305)g FK(4)p 1697 1615 157 5 v 1755
1691 a(6)1877 1634 y FG(\306)1956 1578 y FK(9)p 1956
1615 41 5 v 1956 1691 a(6)2021 1634 y FG(\306)2100 1578
y FK(3)g FG(\243)2215 1594 y FA(\001)2215 1578 y FK(3)p
2100 1615 157 5 v 2100 1695 a(2)g FG(\243)2215 1711 y
FA(\001)2215 1695 y FK(3)2281 1634 y FG(\306)2360 1578
y FK(3)p 2360 1615 41 5 v 2360 1691 a(2)593 1836 y FB(B)22
b FG(\306)742 1780 y FK(3)p 742 1817 V 742 1893 a(4)803
1836 y FG(\241)878 1780 y FK(1)p 878 1817 V 878 1893
a(6)943 1836 y FG(\306)1022 1780 y FK(3)10 b FG(\243)g
FK(3)p 1022 1817 157 5 v 1022 1893 a(4)g FG(\243)g FK(3)1198
1836 y FG(\241)1273 1780 y FK(1)g FG(\243)g FK(2)p 1273
1817 V 1273 1893 a(6)g FG(\243)g FK(2)1454 1836 y FG(\306)1553
1780 y FK(9)p 1533 1817 82 5 v 1533 1893 a(12)1634 1836
y FG(\241)1729 1780 y FK(2)p 1709 1817 V 1709 1893 a(12)1814
1836 y FG(\306)1893 1780 y FK(9)g FG(\241)g FK(2)p 1893
1817 157 5 v 1931 1893 a(12)2074 1836 y FG(\306)2173
1780 y FK(7)p 2153 1817 82 5 v 2153 1893 a(12)590 2034
y FB(C)23 b FG(\306)14 b FK(2)c FG(\305)858 1978 y FK(1)p
858 2015 41 5 v 858 2091 a(5)923 2034 y FG(\306)1002
1978 y FK(2)p 1002 2015 V 1002 2091 a(1)1063 2034 y FG(\305)1138
1978 y FK(1)p 1138 2015 V 1138 2091 a(5)1202 2034 y FG(\306)1281
1978 y FK(2)g FG(\243)g FK(5)p 1281 2015 157 5 v 1281
2091 a(1)g FG(\243)g FK(5)1458 2034 y FG(\305)1533 1978
y FK(1)p 1533 2015 41 5 v 1533 2091 a(5)1598 2034 y FG(\306)1677
1978 y FK(10)p 1677 2015 82 5 v 1697 2091 a(5)1778 2034
y FG(\305)1853 1978 y FK(1)p 1853 2015 41 5 v 1853 2091
a(5)1918 2034 y FG(\306)1997 1978 y FK(11)p 1997 2015
82 5 v 2017 2091 a(5)585 2243 y FB(D)20 b FG(\306)763
2187 y FK(3)p 742 2224 V 742 2300 a(10)844 2243 y FG(\243)919
2187 y FK(5)p 919 2224 41 5 v 919 2300 a(6)983 2243 y
FG(\306)1083 2187 y FK(3)10 b FG(\243)g FK(5)p 1062 2224
197 5 v 1062 2300 a(10)g FG(\243)g FK(6)1283 2243 y FG(\306)1362
2187 y FK(15)p 1362 2224 82 5 v 1362 2300 a(60)1468 2243
y FG(\306)1596 2198 y FA(\032)1611 2187 y(\032)-89 b
FK(15)p 1547 2224 197 5 v 1539 2311 a FA(\032)1553 2300
y(\032)g FK(15)11 b FG(\243)f FK(4)1768 2243 y FG(\306)1847
2187 y FK(1)p 1847 2224 41 5 v 1847 2300 a(4)596 2457
y FB(E)21 b FG(\306)14 b FK(2)c FG(\243)858 2401 y FK(5)p
858 2437 V 858 2514 a(6)919 2457 y FG(\241)994 2401 y
FK(4)p 994 2437 V 994 2514 a(9)1059 2457 y FG(\306)1138
2401 y FK(2)g FG(\243)g FK(5)p 1138 2437 157 5 v 1196
2514 a(6)1314 2457 y FG(\241)1389 2401 y FK(4)p 1389
2437 41 5 v 1389 2514 a(9)1454 2457 y FG(\306)1533 2401
y FK(10)g FG(\243)g FK(3)p 1533 2437 197 5 v 1553 2514
a(6)g FG(\243)g FK(3)1750 2457 y FG(\241)1825 2401 y
FK(4)g FG(\243)g FK(2)p 1825 2437 157 5 v 1825 2514 a(9)g
FG(\243)g FK(2)2005 2457 y FG(\306)2084 2401 y FK(30)p
2084 2437 82 5 v 2084 2514 a(18)2186 2457 y FG(\241)2281
2401 y FK(8)p 2261 2437 V 2261 2514 a(18)2366 2457 y
FG(\306)2445 2401 y FK(30)g FG(\241)g FK(8)p 2445 2437
197 5 v 2503 2514 a(18)2666 2457 y FG(\306)2745 2401
y FK(22)p 2745 2437 82 5 v 2745 2514 a(18)2850 2457 y
FG(\306)2929 2401 y FK(11)g FG(\243)3084 2417 y FA(\001)3084
2401 y FK(2)p 2929 2437 197 5 v 2950 2518 a(9)g FG(\243)3065
2534 y FA(\001)3065 2518 y FK(2)3150 2457 y FG(\306)3230
2401 y FK(11)p 3230 2437 82 5 v 3250 2514 a(9)595 2675
y FB(F)24 b FG(\306)14 b FK(4)c FG(\241)g FK(3)g FG(\243)974
2618 y FK(5)p 974 2655 41 5 v 974 2732 a(6)1039 2675
y FG(\306)1118 2618 y FK(4)p 1118 2655 V 1118 2732 a(1)1178
2675 y FG(\241)1253 2618 y FK(3)g FG(\243)g FK(5)p 1253
2655 157 5 v 1311 2732 a(6)1434 2675 y FG(\306)1513 2618
y FK(4)g FG(\243)g FK(6)p 1513 2655 V 1513 2732 a(1)g
FG(\243)g FK(6)1689 2675 y FG(\241)1764 2618 y FK(15)p
1764 2655 82 5 v 1785 2732 a(6)1870 2675 y FG(\306)1949
2618 y FK(24)p 1949 2655 V 1969 2732 a(6)2050 2675 y
FG(\241)2125 2618 y FK(15)p 2125 2655 V 2145 2732 a(6)2230
2675 y FG(\306)2309 2618 y FK(24)g FG(\241)g FK(15)p
2309 2655 238 5 v 2408 2732 a(6)2571 2675 y FG(\306)2650
2618 y FK(9)p 2650 2655 41 5 v 2650 2732 a(6)2715 2675
y FG(\306)2794 2618 y FK(3)g FG(\243)2909 2634 y FA(\001)2909
2618 y FK(3)p 2794 2655 157 5 v 2794 2735 a(2)g FG(\243)2909
2752 y FA(\001)2909 2735 y FK(3)2974 2675 y FG(\306)3053
2618 y FK(3)p 3053 2655 41 5 v 3053 2732 a(2)589 2887
y FB(G)20 b FG(\306)763 2831 y FK(6)p 742 2868 82 5 v
742 2944 a(10)844 2887 y FG(\243)919 2831 y FK(15)p 919
2868 V 939 2944 a(8)1024 2887 y FG(\306)1103 2831 y FK(6)10
b FG(\243)g FK(15)p 1103 2868 197 5 v 1103 2944 a(10)g
FG(\243)g FK(8)1324 2887 y FG(\306)1403 2831 y FK(90)p
1403 2868 82 5 v 1403 2944 a(80)1508 2887 y FG(\306)1587
2831 y FK(9)g FG(\243)1694 2842 y FA(\032)1709 2831 y(\032)-90
b FK(10)p 1587 2868 197 5 v 1587 2944 a(8)10 b FG(\243)1694
2955 y FA(\032)1709 2944 y(\032)-90 b FK(10)1808 2887
y FG(\306)1887 2831 y FK(9)p 1887 2868 41 5 v 1887 2944
a(8)581 3105 y FB(H)23 b FG(\306)732 2995 y Ft(\265)777
3049 y FK(2)p 777 3086 V 777 3162 a(3)827 2995 y Ft(\266)861
3017 y FI(2)910 3105 y FG(\306)989 3049 y FK(2)p 989
3086 V 989 3162 a(3)1050 3105 y FG(\243)1125 3049 y FK(2)p
1125 3086 V 1125 3162 a(3)1190 3105 y FG(\306)1269 3049
y FK(2)10 b FG(\243)g FK(2)p 1269 3086 157 5 v 1269 3162
a(3)g FG(\243)g FK(3)1449 3105 y FG(\306)1529 3049 y
FK(4)p 1529 3086 41 5 v 1529 3162 a(9)-246 3259 y
SDict begin H.S end
 -246
3259 a -246 3259 a
SDict begin 12 H.A end
 -246 3259 a -246 3259 a
SDict begin [/View [/XYZ H.V]/Dest (exo.19) cvn /DEST pdfmark end
 -246 3259
a 0 TeXcolorgray 81 x FL(Ex)o(er)o(cice)k(19)p 0 TeXcolorgray
41 w FK(Le)k(p\350r)o(e)f(donne)h(le)g(tiers)g(de)f(la)g(somme)i
(n\351cessair)o(e)f(et)g(le)g(petit-fr\350r)o(e)g(donne)g(le)g(quar)q
(t,)f(donc)g(\340)g(eux)h(deux)g(ils)g(en)f(donnent)1324
3500 y(1)p 1324 3537 41 5 v 1324 3613 a(3)1384 3556 y
FG(\305)1460 3500 y FK(1)p 1460 3537 V 1460 3613 a(4)1524
3556 y FG(\306)1603 3500 y FK(1)10 b FG(\243)g FK(4)p
1603 3537 157 5 v 1603 3613 a(3)g FG(\243)g FK(4)1780
3556 y FG(\305)1855 3500 y FK(1)g FG(\243)g FK(3)p 1855
3537 V 1855 3613 a(4)g FG(\243)g FK(3)2035 3556 y FG(\306)2135
3500 y FK(4)p 2114 3537 82 5 v 2114 3613 a(12)2216 3556
y FG(\305)2311 3500 y FK(3)p 2291 3537 V 2291 3613 a(12)2396
3556 y FG(\306)2495 3500 y FK(7)p 2475 3537 V 2475 3613
a(12)2566 3556 y(.)-246 3777 y(Ainsi)18 b(il)f(r)o(este)214
3744 y FI(5)p 198 3757 62 5 v 198 3805 a(12)286 3777
y FK(du)g(pr)q(ix)g(\340)g(payer)f(\340)h(la)g(charge)f(du)h(gr)o
(and-fr\350r)o(e)o(.)f(Or)g(on)i(sait)f(que)h(le)f(gr)o(and)f(fr\350r)o
(e)h(a)g(donn\351)g(10)h FE(N)p FK(,)f(donc)f(le)i(pr)q(ix)f(du)f(livr)
o(e)i(\(soit)4074 3744 y FI(12)p 4074 3757 V 4074 3805
a(12)-246 3876 y FK(du)g(pr)q(ix\))e(est)i(\351gal)g(\340)1419
3954 y(12)p 1419 3991 82 5 v 1439 4068 a(5)1520 4011
y FG(\243)10 b FK(10)15 b FG(\306)1759 3954 y FK(12)10
b FG(\243)g FK(10)p 1759 3991 238 5 v 1858 4068 a(5)2021
4011 y FG(\306)2100 3954 y FK(120)p 2100 3991 122 5 v
2141 4068 a(5)2246 4011 y FG(\306)k FK(24)k FE(N)p FK(.)-246
4247 y FL(R)o(emarque)c(:)j FK(Il)g(peut)h(\352tr)o(e)f(agr\351able)g
(de)g(pr\351senter)h(les)g(choses)g(avec)f(le)h(sch\351ma)g(ci-dessous)
g(:)g(chaque)f(petite)i(tr)o(anche)f(r)o(epr\351sente)3827
4215 y FI(1)p 3812 4228 62 5 v 3812 4276 a(12)3901 4247
y FK(du)f(pr)q(ix)-246 4356 y(du)g(livr)o(e)g(et)g(vaut)g(2)h
FE(N)p FK(.)e(Ainsi,)i(les)776 4323 y FI(5)p 761 4336
V 761 4385 a(12)849 4356 y FK(du)f(pr)q(ix)g(pay\351)f(\(c)n
('est-\340-dir)o(e)h(le)g(pr)q(ix)g(pay\351)g(par)f(le)i(gr)o
(and-fr\350r)o(e\))d(valent)j(5)9 b FG(\243)g FK(2)15
b FG(\306)f FK(10)k FE(N)9 b FK(;)16 b(et)h(la)g(valeur)g(totale)h(du)
-246 4456 y(livr)o(e)g(est)g(12)10 b FG(\243)g FK(2)16
b FG(\306)e FK(24)k FE(N)p FK(.)p 0 TeXcolorgray 0 TeXcolorgray
455 5157 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 360.21182 a add def
/d 0.0 a add neg def /h 73.40813 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 455 5157 a 998 5445 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  [ -56.90549 85.35823
85.35823 85.35823 85.35823 56.90549 -56.90549 56.90549  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 0.8 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 56.90549 -56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 85.35823 284.52744 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 85.35823 284.52744 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 56.90549 -56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 56.90549 -28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 0.0 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 56.90549 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 56.90549 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 56.90549 170.71646 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 56.90549 199.1692 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 56.90549 227.62195 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 56.90549 256.07469 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 56.90549 -56.90549
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 85.35823 85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 56.90549 -56.90549
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 998 5445 a
tx@Dict begin { -32.72047 98.44667 } PutCoor PutBegin  end
 998
5445 a 0 0 1 TeXcolorrgb 57 x FK(par)q(t)f(du)g(gr)o(and)g(fr\350r)o(e)
p FG(\306)d FK(10)k FE(N)p 0 TeXcolorgray 998 5445 a
tx@Dict begin  PutEnd  end

998 5445 a 998 5445 a
tx@Dict begin { -50.07666 75.11522 } PutCoor PutBegin  end
 998 5445 a 57 x FK(2)g FE(N)998
5445 y
tx@Dict begin  PutEnd  end
 998 5445 a 998 5445 a
tx@Dict begin { 42.67911 51.7842 } PutCoor PutBegin  end
 998 5445 a 57 x FK(valeur)g(totale)g(du)f
(livr)o(e)p FG(\306)e FK(24)j FE(N)998 5445 y
tx@Dict begin  PutEnd  end
 998 5445
a 3445 5157 a
currentpoint initclip moveto
 3445 5157 a -246 5240 a
SDict begin H.S end
 -246 5240 a -246
5240 a
SDict begin 12 H.A end
 -246 5240 a -246 5240 a
SDict begin [/View [/XYZ H.V]/Dest (exo.20) cvn /DEST pdfmark end
 -246 5240 a 0 TeXcolorgray
1930 5895 a FK(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FL(Ex)o(er)o(cice)14 b(20)p
0 TeXcolorgray 669 46 a FB(A)j FG(\306)813 -10 y FK(2)853
-40 y FI(15)930 -10 y FG(\243)10 b FK(3)1035 -40 y FI(6)p
813 27 257 5 v 813 103 a FK(2)853 79 y FI(12)930 103
y FG(\243)g FK(3)1035 79 y FI(4)1094 46 y FG(\306)1174
-10 y FK(2)1214 -40 y FI(15)p 1174 27 107 5 v 1174 103
a FK(2)1214 79 y FI(12)1300 46 y FG(\243)1375 -10 y FK(3)1415
-40 y FI(6)p 1375 27 76 5 v 1375 103 a FK(3)1415 79 y
FI(4)1475 46 y FG(\306)k FK(2)1584 12 y FI(15)p FH(\241)p
FI(12)1763 46 y FG(\243)c FK(3)1868 12 y FI(6)p FH(\241)p
FI(4)1991 46 y FG(\306)k FK(2)2100 12 y FI(3)2146 46
y FG(\243)c FK(3)2251 12 y FI(2)2300 46 y FG(\306)15
b FK(8)10 b FG(\243)g FK(9)15 b FG(\306)f FK(72)664 262
y FB(B)22 b FG(\306)813 206 y FK(5)853 176 y FI(3)899
206 y FG(\243)10 b FK(5)1004 176 y FI(6)p 813 243 227
5 v 889 319 a FK(5)929 295 y FI(7)1064 262 y FG(\306)1143
206 y FK(5)1183 176 y FI(3)p FH(\305)p FI(6)p 1143 243
149 5 v 1179 319 a FK(5)1219 295 y FI(7)1315 262 y FG(\306)1394
206 y FK(5)1434 176 y FI(9)p 1394 243 76 5 v 1394 319
a FK(5)1434 295 y FI(7)1494 262 y FG(\306)k FK(5)1603
228 y FI(9)p FH(\241)p FI(7)1725 262 y FG(\306)g FK(5)1834
228 y FI(2)1884 262 y FG(\306)g FK(25)661 478 y FB(C)23
b FG(\306)871 422 y FK(2)911 391 y FI(18)p 813 458 223
5 v 813 535 a FK(8)10 b FG(\243)g FK(2)968 511 y FI(12)1059
478 y FG(\306)1214 422 y FK(2)1254 391 y FI(18)p 1139
458 257 5 v 1139 535 a FK(2)1179 511 y FI(3)1224 535
y FG(\243)g FK(2)1329 511 y FI(12)1420 478 y FG(\306)1535
422 y FK(2)1575 391 y FI(18)p 1499 458 179 5 v 1499 535
a FK(2)1539 511 y FI(3)p FH(\305)p FI(12)1702 478 y FG(\306)1781
422 y FK(2)1821 391 y FI(18)p 1781 458 107 5 v 1781 535
a FK(2)1821 511 y FI(15)1911 478 y FG(\306)15 b FK(2)2021
443 y FI(18)p FH(\241)p FI(15)2204 478 y FG(\306)f FK(2)2313
443 y FI(3)2363 478 y FG(\306)g FK(8)656 694 y FB(D)20
b FG(\306)889 637 y FK(6)929 607 y FI(6)p 813 674 227
5 v 813 750 a FK(2)853 726 y FI(5)899 750 y FG(\243)10
b FK(3)1004 726 y FI(4)1064 694 y FG(\306)1143 637 y
FK(\(2)g FG(\243)g FK(3\))1352 607 y FI(6)p 1143 674
245 5 v 1152 750 a FK(2)1192 726 y FI(5)1238 750 y FG(\243)g
FK(3)1343 726 y FI(4)1412 694 y FG(\306)1491 637 y FK(2)1531
607 y FI(6)1576 637 y FG(\243)g FK(3)1681 607 y FI(6)p
1491 674 227 5 v 1491 750 a FK(2)1531 726 y FI(5)1576
750 y FG(\243)g FK(3)1681 726 y FI(4)1741 694 y FG(\306)1820
637 y FK(2)1860 607 y FI(6)p 1820 674 76 5 v 1820 750
a FK(2)1860 726 y FI(5)1916 694 y FG(\243)1991 637 y
FK(3)2031 607 y FI(6)p 1991 674 V 1991 750 a FK(3)2031
726 y FI(4)2090 694 y FG(\306)15 b FK(2)2200 659 y FI(6)p
FH(\241)p FI(5)2318 694 y FG(\243)10 b FK(3)2423 659
y FI(6)p FH(\241)p FI(4)2545 694 y FG(\306)k FK(2)2654
659 y FI(1)2700 694 y FG(\243)c FK(3)2805 659 y FI(2)2855
694 y FG(\306)k FK(2)c FG(\243)g FK(9)15 b FG(\306)f
FK(18)666 929 y FB(E)22 b FG(\306)813 803 y Ft(\241)843
868 y FK(10)923 837 y FI(4)959 803 y Ft(\242)989 823
y FI(3)p 813 910 211 5 v 860 986 a FK(10)940 962 y FI(8)1048
929 y FG(\306)1127 873 y FK(10)1207 843 y FI(4)p FH(\243)p
FI(3)p 1127 910 189 5 v 1163 986 a FK(10)1243 962 y FI(8)1339
929 y FG(\306)1419 873 y FK(10)1499 843 y FI(12)p 1419
910 147 5 v 1434 986 a FK(10)1514 962 y FI(8)1590 929
y FG(\306)14 b FK(10)1739 895 y FI(12)p FH(\241)p FI(8)1892
929 y FG(\306)g FK(10)2041 895 y FI(4)2092 929 y FG(\306)g
FK(10)8 b(000)666 1145 y FB(F)24 b FG(\306)813 1089 y
FK(4)853 1058 y FI(5)p 813 1125 76 5 v 813 1202 a FK(8)853
1178 y FI(3)913 1145 y FG(\306)992 1089 y FK(\(2)1059
1058 y FI(2)1094 1089 y FK(\))1121 1058 y FI(5)p 992
1125 164 5 v 992 1202 a FK(\(2)1059 1178 y FI(3)1094
1202 y FK(\))1121 1178 y FI(3)1180 1145 y FG(\306)1259
1089 y FK(2)1299 1058 y FI(2)p FH(\243)p FI(5)p 1259
1125 149 5 v 1259 1202 a FK(2)1299 1178 y FI(3)p FH(\243)p
FI(3)1431 1145 y FG(\306)1510 1089 y FK(2)1550 1058 y
FI(10)p 1510 1125 107 5 v 1526 1202 a FK(2)1566 1178
y FI(9)1641 1145 y FG(\306)14 b FK(2)1750 1110 y FI(10)p
FH(\241)p FI(9)1903 1145 y FG(\306)g FK(2)660 1370 y
FB(G)20 b FG(\306)813 1314 y FK(10)893 1283 y FI(10)970
1314 y FG(\305)10 b FK(10)1115 1283 y FI(8)p 813 1350
338 5 v 924 1427 a FK(10)1004 1403 y FI(7)1175 1370 y
FG(\306)1255 1314 y FK(10)1335 1283 y FI(10)p 1255 1350
147 5 v 1270 1427 a FK(10)1350 1403 y FI(7)1421 1370
y FG(\305)1496 1314 y FK(10)1576 1283 y FI(8)p 1496 1350
116 5 v 1496 1427 a FK(10)1576 1403 y FI(7)1637 1370
y FG(\306)k FK(10)1786 1335 y FI(10)p FH(\241)p FI(7)1935
1370 y FG(\305)c FK(10)2080 1335 y FI(8)p FH(\241)p FI(7)2203
1370 y FG(\306)k FK(10)2352 1335 y FI(3)2398 1370 y FG(\305)c
FK(10)2543 1335 y FI(1)2594 1370 y FG(\306)k FK(1)8 b(000)i
FG(\305)g FK(1)17 b FG(\306)d FK(1)8 b(001)-246 1502
y
SDict begin H.S end
 -246 1502 a -246 1502 a
SDict begin 12 H.A end
 -246 1502 a -246 1502 a
SDict begin [/View [/XYZ H.V]/Dest (exo.21) cvn /DEST pdfmark end
 -246
1502 a 0 TeXcolorgray 85 x FL(Ex)o(er)o(cice)14 b(21)p
0 TeXcolorgray 41 w FK(P)n(our)26 b(r)o(anger)g(les)h(nombr)o(es)g(par)
f(or)o(dr)o(e)f(croissant,)h(on)h(les)g(\351cr)q(it)f(sous)h(for)q(me)g
(d\351cimale)o(,)g(en)g(\351cr)q(ivant)f(\340)g(chaque)h(fois)h(quatr)o
(e)-246 1687 y(chiffr)o(es)18 b(apr\350s)g(la)g(virgule)f(pour)h
(simpli\002er)h(les)f(compar)o(aisons)o(.)-246 1821 y(On)23
b(r)o(appelle)i(avant)e(cela)h(que)f(10)797 1791 y FH(\241)p
FI(3)895 1821 y FG(\306)1017 1765 y FK(1)p 980 1802 116
5 v 980 1878 a(10)1060 1854 y FI(3)1125 1821 y FG(\306)1271
1765 y FK(1)p 1210 1802 163 5 v 1210 1878 a(1000)1402
1821 y FG(\306)36 b FK(0,)8 b(00)1493 1866 y Ft(|)p 1527
1866 7 10 v 7 w({z)p 1602 1866 V 7 w(})1477 1945 y FI(3)k(z\351ros)1667
1821 y FK(1,)24 b(donc)f(multiplier)i(un)f(nombr)o(e)f(par)f(10)2950
1791 y FH(\241)p FI(3)3051 1821 y FK(r)o(evient)i(\340)f(d\351caler)g
(la)g(virgule)g(de)g(3)-246 2030 y(r)o(angs)18 b(vers)f(la)h(gauche)f
(\(le)h(r)o(aisonnement)h(est)f(le)g(m\352me)h(pour)f(10)1765
2000 y FH(\241)p FI(2)1842 2030 y FK(\).)645 2304 y FB(A)f
FG(\306)d FK(35,)8 b(4)i FG(\243)g FK(10)1082 2270 y
FH(\241)p FI(3)2969 2304 y FG(\306)k FK(0,)8 b(0354)639
2429 y FB(B)23 b FG(\306)14 b FK(0,)8 b(034)2002 b FG(\306)14
b FK(0,)8 b(0340)637 2565 y FB(C)23 b FG(\306)14 b FK(3,)8
b(6)i FG(\243)g FK(10)1042 2531 y FH(\241)p FI(2)1135
2565 y FG(\306)15 b FK(0,)8 b(036)1576 b FG(\306)14 b
FK(0,)8 b(0360)631 2736 y FB(D)21 b FG(\306)789 2680
y FK(355)p 789 2716 122 5 v 792 2793 a(10)872 2769 y
FI(4)935 2736 y FG(\306)1058 2680 y FK(355)p 1014 2716
211 5 v 1014 2793 a(10)8 b(000)2969 2736 y FG(\306)14
b FK(0,)8 b(0355)642 2949 y FB(E)22 b FG(\306)809 2893
y FK(7)p 789 2930 82 5 v 789 3006 a(60)890 2949 y FG(\243)985
2893 y FK(3)p 965 2930 V 965 3006 a(10)1070 2949 y FG(\306)1190
2893 y FK(7)10 b FG(\243)g FK(3)p 1149 2930 238 5 v 1149
3006 a(60)g FG(\243)g FK(10)1411 2949 y FG(\306)1588
2893 y FK(7)g FG(\243)1703 2909 y FA(\001)1703 2893 y
FK(3)p 1490 2930 354 5 v 1490 3010 a(20)g FG(\243)1645
3026 y FA(\001)1645 3010 y FK(3)i FG(\243)e FK(10)1867
2949 y FG(\306)1987 2893 y FK(7)p 1946 2930 122 5 v 1946
3006 a(200)2969 2949 y FG(\306)k FK(0,)8 b(0350)-246
3151 y(C)o(onclusion)20 b(:)d FB(B)22 b FG(\307)14 b
FB(E)22 b FG(\307)e FB(A)d FG(\307)d FB(D)21 b FG(\307)12
b FB(C)d FK(.)-246 3217 y
SDict begin H.S end
 -246 3217 a -246 3217 a
SDict begin 12 H.A end
 -246
3217 a -246 3217 a
SDict begin [/View [/XYZ H.V]/Dest (exo.22) cvn /DEST pdfmark end
 -246 3217 a 0 TeXcolorgray 128 x FL(Ex)o(er)o(cice)
14 b(22)p 0 TeXcolorgray 41 w FK(A)-5 b(vant)22 b(de)f(commencer)-5
b(,)23 b(il)e(est)h(utile)h(de)e(se)g(r)o(appeler)i(que)e(10)i(cm=1)e
(dm)9 b(;)21 b(et)h(que)f(1)h FD(`)c FG(\306)g FK(1)j(dm)3090
3313 y FI(3)3125 3345 y FK(.)g(A)n(utr)o(ement)h(dit,)f(un)h(litr)o(e)f
(est)h(le)-246 3445 y(volume)f(d)n('un)f(cube)f(qui)h(mesur)o(e)f(1)h
(dm)f(sur)h(1)f(dm)g(sur)h(1)f(dm,)h(ou)f(encor)o(e)g(10)h(cm)g(sur)f
(10)h(cm)f(sur)h(10)g(cm)f(\(la)g(\002gur)o(e)f(ci-dessous)j(n)-6
b('est)20 b(bien)f(s\373r)-246 3545 y(pas)f(\340)f(l)o('\351chelle\).)p
0 TeXcolorgray 0 TeXcolorgray 1260 4736 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.1639 a add def
/d 0.0 a add neg def /h 131.45152 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 4736 a
1596 4472 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 56.90549 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 0.0 56.90549   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1596 4472 a
tx@Dict begin { 16.50264 -4.55254 } PutCoor PutBegin  end
 1596 4472 a 57 x FK(1)g(dm)1596 4472 y
tx@Dict begin  PutEnd  end
 1596
4472 a 1596 4472 a
tx@Dict begin { -28.45274 32.4361 } PutCoor PutBegin  end
 1596 4472 a 57 x FK(1)g(dm)1596 4472
y
tx@Dict begin  PutEnd  end
 1596 4472 a 1596 4472 a
tx@Dict begin { 76.82231 14.79555 } PutCoor PutBegin  end
 1596 4472 a 57 x FK(1)g(dm)1596
4472 y
tx@Dict begin  PutEnd  end
 1596 4472 a 1596 4472 a
tx@Dict begin { 26.17647 35.28156 } PutCoor PutBegin  end
 1596 4472 a 57 x FK(1)g
FD(`)1596 4472 y
tx@Dict begin  PutEnd  end
 1596 4472 a 2640 4736 a
currentpoint initclip moveto
 2640 4736 a
-246 4958 a FK(On)g(r)o(emplit)h(d)n('eau)g(un)f(aquar)q(ium)h(r)o
(ectangulair)o(e)e(dont)h(la)h(largeur)e(est)i(80)f(cm,)h(la)f
(profondeur)g(30)h(cm)f(et)h(la)f(hauteur)h(40)g(cm.)f(On)g(dispose)h
(d)n('un)-246 5057 y(robinet)f(dont)h(le)g(d\351bit)f(est)h(de)f(6)h
(litr)o(es)g(par)f(minute)o(.)-246 5101 y
SDict begin H.S end
 -246 5101 a
-246 5101 a
SDict begin 12 H.A end
 -246 5101 a -246 5101 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 5101 a 0 TeXcolorgray
-141 5197 a FK(1.)p 0 TeXcolorgray 43 w(Les)h(dimensions)h(de)e(l)o
('aquar)q(ium)i(sont)f(:)1025 5371 y(largeur)c FG(\306)g
FK(8)k(dm,)155 b(profondeur)14 b FG(\306)g FK(3)k(dm,)155
b(hauteur)15 b FG(\306)f FK(4)k(dm,)-38 5546 y(donc)f(son)h(volume)h
(est)1795 5646 y(8)10 b FG(\243)g FK(3)g FG(\243)g FK(4)16
b FG(\306)e FK(96)19 b FD(`)p FK(.)p 0 TeXcolorgray 1909
5895 a(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 994 926
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 255.20395 a add def
/d 0.0 a add neg def /h 141.11893 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 994 926 a 910 946 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 21.33955 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 106.69777 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 128.03732 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 213.39554 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 256.07465 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 85.35822 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 910 946 a
tx@Dict begin { 122.08083 17.51845 } PutCoor PutBegin  end
 910 946 a 57 x FK(8)18
b(dm)910 946 y
tx@Dict begin  PutEnd  end
 910 946 a 910 946 a
tx@Dict begin { 19.8912 68.34283 } PutCoor PutBegin  end
 910 946 a 57 x FK(4)g(dm)910
946 y
tx@Dict begin  PutEnd  end
 910 946 a 910 946 a
tx@Dict begin { 236.70636 31.57625 } PutCoor PutBegin  end
 910 946 a 57 x FK(3)g(dm)910
946 y
tx@Dict begin  PutEnd  end
 910 946 a 3113 926 a
currentpoint initclip moveto
 3113 926 a -246 966 a
SDict begin H.S end
 -246
966 a -246 966 a
SDict begin 12 H.A end
 -246 966 a -246 966 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 966 a 0 TeXcolorgray
-141 1079 a FK(2.)p 0 TeXcolorgray 43 w(On)i(peut)i(se)f(passer)g(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351)i(:)e(le)h(d\351bit)g(du)f
(robinet)g(est)h(de)f(6)h FD(`)p FK(/min,)h(donc)e(il)h(faut)g(96)11
b FG(\245)g FK(6)19 b FG(\306)f FK(16)j(min)g(pour)-38
1178 y(r)o(emplir)d(les)g(96)g FD(`)f FK(de)g(l)o('aquar)q(ium.)-246
1260 y
SDict begin H.S end
 -246 1260 a -246 1260 a
SDict begin 12 H.A end
 -246 1260 a -246 1260
a
SDict begin [/View [/XYZ H.V]/Dest (exo.23) cvn /DEST pdfmark end
 -246 1260 a 0 TeXcolorgray 113 x FL(Ex)o(er)o(cice)d(23)p
0 TeXcolorgray 41 w FK(On)j(utilise)j(les)e(identit\351s)h(r)o
(emarquables)e(pour)h(calculer)f(:)464 1648 y(99)544
1614 y FI(2)594 1648 y FG(\306)d FK(\(100)c FG(\241)g
FK(1\))952 1614 y FI(2)1003 1648 y FG(\306)k FK(100)1192
1614 y FI(2)1239 1648 y FG(\241)c FK(2)g FG(\243)g FK(100)g
FG(\243)g FK(1)g FG(\305)g FK(1)1769 1614 y FI(2)1822
1648 y FG(\306)k FK(10)8 b(000)i FG(\241)g FK(200)g FG(\305)g
FK(1)20 b FG(\306)14 b FK(9)8 b(801)687 b(\(IR)17 b(n\2602\))423
1785 y(103)543 1750 y FI(2)594 1785 y FG(\306)d FK(\(100)c
FG(\305)g FK(3\))952 1750 y FI(2)1003 1785 y FG(\306)k
FK(100)1192 1750 y FI(2)1239 1785 y FG(\305)c FK(2)g
FG(\243)g FK(100)g FG(\243)g FK(3)g FG(\305)g FK(3)1769
1750 y FI(2)1822 1785 y FG(\306)k FK(10)8 b(000)i FG(\305)g
FK(600)g FG(\305)g FK(9)20 b FG(\306)14 b FK(10)8 b(609)647
b(\(IR)17 b(n\2601\))342 1921 y(71)10 b FG(\243)g FK(69)17
b FG(\306)d FK(\(70)c FG(\305)g FK(1\)\(70)g FG(\241)g
FK(1\))17 b FG(\306)d FK(70)1327 1886 y FI(2)1373 1921
y FG(\241)c FK(1)1478 1886 y FI(2)1528 1921 y FG(\306)k
FK(4)8 b(900)i FG(\241)g FK(1)17 b FG(\306)d FK(4)8 b(899)1219
b(\(IR)17 b(n\2603\))395 2057 y(2,)8 b(05)543 2023 y
FI(2)594 2057 y FG(\306)14 b FK(\(2)c FG(\305)g FK(0,)e(05\))980
2023 y FI(2)1031 2057 y FG(\306)15 b FK(2)1141 2023 y
FI(2)1186 2057 y FG(\305)10 b FK(2)g FG(\243)g FK(2)g
FG(\243)g FK(0,)e(05)i FG(\305)g FK(0,)e(05)1852 2023
y FI(2)1907 2057 y FG(\306)14 b FK(4)c FG(\305)g FK(0,)e(2)i
FG(\305)g FK(0,)e(0025)20 b FG(\306)14 b FK(4,)8 b(2025)534
b(\(IR)17 b(n\2601\))286 2193 y(4,)8 b(3)i FG(\243)g
FK(3,)e(7)17 b FG(\306)d FK(\(4)c FG(\305)g FK(0,)e(3\)\(4)i
FG(\241)g FK(0,)e(3\))18 b FG(\306)c FK(4)1344 2159 y
FI(2)1389 2193 y FG(\241)c FK(0,)e(3)1562 2159 y FI(2)1613
2193 y FG(\306)14 b FK(16)c FG(\241)g FK(0,)e(09)18 b
FG(\306)c FK(15,)8 b(91)1093 b(\(IR)17 b(n\2603\))-246
2369 y FL(R)o(emarque)i(:)j FK(C)o(omment)i(calculer)f(0,)8
b(05)1004 2338 y FI(2)1063 2369 y FK(de)22 b(t\352te)9
b(?)22 b(C)o(omme)i(0,)8 b(05)1807 2338 y FI(2)1863 2369
y FG(\306)19 b FK(0,)8 b(05)k FG(\243)g FK(0,)c(05)26
b(et)d(que)f(0,)8 b(05)24 b(a)e(deux)h(chiffr)o(es)g(apr\350s)f(la)h
(virgule)o(,)f(0,)8 b(05)4000 2338 y FI(2)4059 2369 y
FK(en)-246 2468 y(aur)o(a)18 b(2)10 b FG(\305)g FK(2)15
b FG(\306)f FK(4.)k(Il)f(ne)h(r)o(este)f(alors)h(plus)g(qu)n('\340)g
(calculer)g(5)1445 2438 y FI(2)1494 2468 y FG(\306)c
FK(25)19 b(pour)e(pouvoir)i(conclur)o(e)e(:)g(0,)8 b(05)2638
2438 y FI(2)2689 2468 y FG(\306)15 b FK(0,)8 b(0025.)-246
2568 y(A)o(ttention)19 b(cependant)f(\340)f(cette)h(m\351thode)h(:)e
(les)h(der)q(niers)g(chiffr)o(es)g(du)f(r\351sultat)h(peuvent)h(\352tr)
o(e)f(des)f(0,)h(comme)g(dans)g(l)o('exemple)i(suivant)e(:)1514
2743 y(0,)8 b(05)i FG(\243)g FK(0,)e(0006)19 b FG(\306)c
FK(0,)8 b(000030,)-246 2918 y(puisque)20 b(6)10 b FG(\243)g
FK(5)15 b FG(\306)f FK(30)k(et)g(que)g(le)g(r\351sultat)g(doit)g(avoir)
f(2)10 b FG(\305)g FK(4)16 b FG(\306)e FK(6)j(chiffr)o(es)h(apr\350s)g
(la)g(virgule)g(\(le)f(der)q(nier)-5 b(,)18 b(ici,)f(\351tant)i(un)e
(0\).)-246 3002 y
SDict begin H.S end
 -246 3002 a -246 3002 a
SDict begin 12 H.A end
 -246 3002 a
-246 3002 a
SDict begin [/View [/XYZ H.V]/Dest (exo.24) cvn /DEST pdfmark end
 -246 3002 a 0 TeXcolorgray 111 x FL(Ex)o(er)o(cice)d(24)p
0 TeXcolorgray 41 w FK(Le)k(c\364t\351)g(du)f(gr)o(and)g(carr\351)f
(mesur)o(e)k FB(a)14 b FG(\305)c FB(b)q FK(,)18 b(donc)f(son)h(air)o(e)
f(est)h(\()r FB(a)c FG(\305)c FB(b)t FK(\))2283 3083
y FI(2)2317 3113 y FK(.)-246 3213 y(D)o('un)15 b(autr)o(e)g
(c\364t\351,)h(le)g(gr)o(and)f(carr\351)f(peut)j(\352tr)o(e)e
(d\351coup\351)h(en)g(quatr)o(e)f(par)q(ties)h(:)f(un)h(carr\351)f(de)g
(c\364t\351)i FB(a)t FK(,)f(donc)f(d)n('air)o(e)h FB(a)3166
3183 y FI(2)3216 3213 y FK(\(hachur\351)g(en)g(bleu\),)f(un)h(carr\351)
-246 3313 y(de)j(c\364t\351)h FB(b)q FK(,)f(donc)g(d)n('air)o(e)g
FB(b)563 3282 y FI(2)616 3313 y FK(\(hachur\351)h(en)f(ver)q(t\))g(et)g
(deux)h(r)o(ectangles)f(de)g(c\364t\351s)i FB(a)i FK(et)c
FB(b)q FK(,)h(donc)f(d)n('air)o(es)i FB(a)15 b FG(\243)c
FB(b)22 b FK(\(hachur\351s)e(en)f(rouge\).)g(Ainsi)g(l)o('air)o(e)-246
3412 y(du)f(gr)o(and)e(carr\351)h(est-elle)i(aussi)f(\351gale)g(\340)
1642 3512 y FB(a)1689 3478 y FI(2)1734 3512 y FG(\305)10
b FB(b)1846 3478 y FI(2)1891 3512 y FG(\305)g FK(2)g
FG(\243)i FB(a)i FG(\243)c FB(b)q FK(.)-246 3657 y(En)18
b(compar)o(ant)g(avec)f(la)h(pr)o(emi\350r)o(e)f(m\351thode)i(de)e
(calcul)h(de)f(l)o('air)o(e)o(,)h(on)f(obtient)h(la)g(r)o(elation)f
(attendue)i(:)1542 3833 y(\()1571 3832 y FB(a)14 b FG(\305)c
FB(b)1740 3833 y FK(\))1767 3798 y FI(2)1816 3832 y FG(\306)16
b FB(a)1934 3798 y FI(2)1979 3832 y FG(\305)10 b FK(2)r
FB(a)t(b)k FG(\305)c FB(b)2302 3798 y FI(2)2337 3832
y FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1230 5032 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 173.56189 a add def
/d 0.0 a add neg def /h 133.15862 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1230
5032 a 1532 4782 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor   0.8 SLW 0
0 1  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  56.90549 0.0
lineto 0.0 0.0 lineto closepath gsave 90 rotate  /clipType { clip }
def 45.0 rotate 0.8 SLW 0 0 1  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor   0.8 SLW 1
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 2. def /x1 3. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  85.35823 0.0
lineto 56.90549 0.0 lineto closepath gsave 90 rotate  /clipType { clip
} def 45.0 rotate 0.8 SLW 1 0 0  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor   0.8 SLW 1
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  56.90549 85.35823
lineto  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { /lineto load stopped
{ moveto } if } def /ArrowB { } def /ArrowInside { } def    /x 2. def
/x1 0. def /dx x1 x sub 49 div def /F@pstplot (3.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  0.0 56.90549 lineto closepath gsave 90 rotate  /clipType { clip
} def 45.0 rotate 0.8 SLW 1 0 0  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor   0.8 SLW 0
1 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 2. def /x1 3. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  85.35823 85.35823
lineto  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { /lineto load stopped
{ moveto } if } def /ArrowB { } def /ArrowInside { } def    /x 3. def
/x1 2. def /dx x1 x sub 49 div def /F@pstplot (3.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  56.90549 56.90549 lineto closepath gsave 90 rotate  /clipType
{ clip } def 45.0 rotate 0.8 SLW 0 1 0  setrgbcolor 5.69046 0.0 0.0
LineFill  grestore gsave 0.8 SLW 0 1 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1532 4782 a
tx@Dict begin { 24.185 -3.98335 } PutCoor PutBegin  end
 1532 4782 a 1534 4819 a FB(a)1532 4782 y
tx@Dict begin  PutEnd  end

1532 4782 a 1532 4782 a
tx@Dict begin { 68.2864 -3.98335 } PutCoor PutBegin  end
 1532 4782 a 57 x FB(b)1532 4782
y
tx@Dict begin  PutEnd  end
 1532 4782 a 1532 4782 a
tx@Dict begin { -12.51927 29.02191 } PutCoor PutBegin  end
 1532 4782 a 1534 4819 a FB(a)1532
4782 y
tx@Dict begin  PutEnd  end
 1532 4782 a 1532 4782 a
tx@Dict begin { -12.51927 74.54604 } PutCoor PutBegin  end
 1532 4782 a 57 x FB(b)1532
4782 y
tx@Dict begin  PutEnd  end
 1532 4782 a 2670 5032 a
currentpoint initclip moveto
 2670 5032 a -246 5108
a
SDict begin H.S end
 -246 5108 a -246 5108 a
SDict begin 12 H.A end
 -246 5108 a -246 5108 a
SDict begin [/View [/XYZ H.V]/Dest (exo.25) cvn /DEST pdfmark end
 -246
5108 a -246 5114 a
SDict begin H.S end
 -246 5114 a -246 5114 a
SDict begin 12 H.A end
 -246 5114
a -246 5114 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 5114 a 0 TeXcolorgray 113 x FL(Ex)o(er)o(cice)k(25)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compar)o(er)g(les)h(fr)o(actions)i FB(a)e
FG(\306)1511 5194 y FI(4)p 1511 5207 31 5 v 1511 5256
a(5)1569 5227 y FK(et)g FB(b)g FG(\306)1792 5194 y FI(5)p
1792 5207 V 1792 5256 a(6)1833 5227 y FK(,)f(on)h(les)g(r\351duit)g(au)
f(m\352me)i(d\351nominateur)g(:)1394 5447 y FB(a)f FG(\306)1534
5391 y FK(4)10 b FG(\243)g FK(6)p 1534 5428 157 5 v 1534
5504 a(5)g FG(\243)g FK(6)1714 5447 y FG(\306)1793 5391
y FK(24)p 1793 5428 82 5 v 1793 5504 a(30)2030 5447 y(,)155
b FB(b)18 b FG(\306)2345 5391 y FK(5)10 b FG(\243)g FK(5)p
2345 5428 157 5 v 2345 5504 a(6)g FG(\243)g FK(5)2526
5447 y FG(\306)2605 5391 y FK(25)p 2605 5428 82 5 v 2605
5504 a(30)2696 5447 y(.)-38 5646 y(C)o(omme)19 b(24)c
FG(\307)f FK(25,)19 b(on)e(obtient)j FB(a)e FG(\307)c
FB(b)q FK(.)p 0 TeXcolorgray 1909 5895 a(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(On)26 b(compar)o(e)h(\340)f(pr\351sent)i
FB(c)h FG(\306)932 -195 y FI(524)p 932 -182 93 5 v 932
-134 a(525)1061 -163 y FK(et)d FB(d)31 b FG(\306)1317
-195 y FI(525)p 1317 -182 V 1317 -134 a(526)1419 -163
y FK(.)c(On)f(r\351duit)h(l\340)g(aussi)g(au)g(m\352me)h
(d\351nominateur)-5 b(,)29 b(mais)e(on)g(n)-6 b('effectue)29
b(aucun)e(calcul)-38 -63 y(\(comme)18 b(nous)g(allons)h(le)e(voir)-5
b(,)18 b(ce)g(n)-6 b('est)18 b(pas)g(n\351cessair)o(e\))g(:)1416
153 y FB(c)h FG(\306)1549 97 y FK(524)10 b FG(\243)g
FK(526)p 1549 133 319 5 v 1549 210 a(525)g FG(\243)g
FK(526)2023 153 y(,)155 b FB(d)21 b FG(\306)2343 97 y
FK(525)10 b FG(\243)g FK(525)p 2343 133 V 2343 210 a(526)g
FG(\243)g FK(525)2672 153 y(.)-38 358 y(Les)18 b(d\351nominateurs)h
(sont)f(identiques)o(,)i(donc)d(il)h(suf\002t)g(de)f(compar)o(er)g(les)
h(num\351r)o(ateurs)o(.)h(D)o('apr\350s)e(l)o('identit\351)j(r)o
(emarquable)d(n\2603,)1179 541 y(524)10 b FG(\243)g FK(526)17
b FG(\306)e FK(\(525)10 b FG(\241)g FK(1\)\(525)g FG(\305)g
FK(1\))17 b FG(\306)e FK(525)2366 507 y FI(2)2412 541
y FG(\241)10 b FK(1)2517 507 y FI(2)2567 541 y FG(\306)k
FK(525)2756 507 y FI(2)2803 541 y FG(\241)c FK(1.)-38
724 y(C)o(e)18 b(nombr)o(e)f(est)h(str)q(ictement)h(inf\351r)q(ieur)f
(\340)f(525)10 b FG(\243)g FK(525)17 b FG(\306)e FK(525)1791
694 y FI(2)1827 724 y FK(,)j(donc)f FB(c)i FG(\307)c
FB(d)7 b FK(.)-246 801 y
SDict begin H.S end
 -246 801 a -246 801 a
SDict begin 12 H.A end
 -246 801
a -246 801 a
SDict begin [/View [/XYZ H.V]/Dest (exo.26) cvn /DEST pdfmark end
 -246 801 a 0 TeXcolorgray 122 x FL(Ex)o(er)o(cice)14
b(26)p 0 TeXcolorgray 41 w FK(La)21 b(par)q(tie)g(hachur\351e)h(de)e
(la)h(\002gur)o(e)e(de)i(gauche)g(est)g(un)g(r)o(ectangle)g(de)f
(c\364t\351s)h(\()r FB(a)15 b FG(\241)c FB(b)t FK(\))21
b(et)g(\()r FB(a)15 b FG(\305)c FB(b)t FK(\),)20 b(donc)h(son)g(air)o
(e)f(est)h(\351gale)g(\340)g(\()r FB(a)15 b FG(\241)-246
1023 y FB(b)t FK(\)\()r FB(a)f FG(\305)c FB(b)t FK(\).)-246
1122 y(Quant)19 b(\340)g(la)f(par)q(tie)h(hachur\351e)h(de)e(la)h
(\002gur)o(e)f(de)g(droite)o(,)g(c)n('est)h(un)g(carr\351)f(de)h
(c\364t\351)i FB(a)h FK(duquel)e(on)e(a)h(r)o(etir\351)f(un)h(carr\351)
f(de)h(c\364t\351)g FB(b)q FK(.)f(S)o(on)h(air)o(e)g(est)g(donc)-246
1222 y(\351gale)f(\340)h FB(a)57 1192 y FI(2)102 1222
y FG(\241)10 b FB(b)214 1192 y FI(2)249 1222 y FK(.)-246
1321 y(L)-10 b('identit\351)20 b(r)o(emarquable)d(n\2603)g(nous)h(dit)g
(que)g(\()r FB(a)c FG(\241)c FB(b)t FK(\)\()r FB(a)k
FG(\305)c FB(b)t FK(\))j FG(\306)j FB(a)1717 1291 y FI(2)1762
1321 y FG(\241)10 b FB(b)1874 1291 y FI(2)1909 1321 y
FK(,)17 b(donc)g(les)h(air)o(es)f(des)h(deux)f(zones)h(hachur\351es)g
(sont)g(les)g(m\352mes)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1100 2564 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 204.86188 a add def
/d 0.0 a add neg def /h 136.57458 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1100 2564 a -284 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 17.07182 51.21547 85.35912
51.21547 85.35912 -17.07182 17.07182 -17.07182  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 17.07182 -17.07182 68.2873
-17.07182 68.2873 68.2873 17.07182 68.2873  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 90 rotate  /clipType { clip } def
45.0 rotate 0.8 SLW 0.5  setgray 7.96672 0.0 0.0 LineFill  grestore
gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 85.35912 51.21547 85.35912
68.2873 68.2873 68.2873 68.2873 51.21547  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 187.79005 51.21547 187.79005
-17.07182 119.50276 -17.07182 119.50276 51.21547  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 90 rotate  /clipType { clip } def
45.0 rotate 0.8 SLW 0.5  setgray 7.96672 0.0 0.0 LineFill  grestore
gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 187.79005 34.14365 170.71823
34.14365 170.71823 51.21547 187.79005 51.21547  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 -17.07182 17.07182
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 51.21547 85.35912
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 51.21547 85.35912
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 -17.07182 17.07182
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 68.2873 17.07182 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 -17.07182 68.2873 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 -17.07182 68.2873
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 68.2873 17.07182 -17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 7.34074 65.72661 } PutCoor PutBegin  end
 1100 2280 a 57 x FB(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280
a 1100 2280 a
tx@Dict begin { 73.7504 -3.4143 } PutCoor PutBegin  end
 1100 2280 a 57 x FB(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100
2280 a 1100 2280 a
tx@Dict begin { 5.80435 20.48613 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a FB(a)1100
2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 84.33484
-27.65627 47.11813 -27.65627   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 16.7303
-27.65627 47.11813 -27.65627   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1100 2280 a
tx@Dict begin { 47.28902 -21.33977 } PutCoor PutBegin  end
 1100
2280 a 1102 2318 a FB(a)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 68.2873 68.2873 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 68.2873 68.2873 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 51.21547 85.35912
68.2873   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 51.21547 85.35912 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 119.50276 -17.07182 119.50276
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 -17.07182 119.50276
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 51.21547 187.79005
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 119.50276 51.21547 187.79005
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 152.11 -22.19342 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a FB(a)1100 2280 y
tx@Dict begin  PutEnd  end

1100 2280 a 1100 2280 a
tx@Dict begin { 109.25955 23.90044 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a FB(a)1100
2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71823 51.21547 187.79005
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71823 34.14365 170.71823
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 34.14365 170.71823
34.14365   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 51.21547 187.79005
34.14365   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 175.1568 66.58 } PutCoor PutBegin  end
 1100 2280 a 57 x FB(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280
a 1100 2280 a
tx@Dict begin { 189.83858 52.0691 } PutCoor PutBegin  end
 1100 2280 a 57 x FB(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100
2280 a 2800 2564 a
currentpoint initclip moveto
 2800 2564 a -246 2647 a
SDict begin H.S end
 -246 2647
a -246 2647 a
SDict begin 12 H.A end
 -246 2647 a -246 2647 a
SDict begin [/View [/XYZ H.V]/Dest (exo.27) cvn /DEST pdfmark end
 -246 2647 a 0 TeXcolorgray
116 x FL(Ex)o(er)o(cice)c(27)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1115 3651 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 201.10605 a add def
/d 0.0 a add neg def /h 95.94356 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1115 3651 a -23 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 17.07182 17.07182 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.07182 85.35912 17.07182 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 68.2873 187.79005 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 96.45569 17.07182 17.07182 85.35912
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 54.7806 50.21907 57.45276 53.32521
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 68.2873 96.45569 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.3805 40.47523 140.37651 44.04898
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1092 3651 a
tx@Dict begin { 8.5359 51.21547 } PutCoor PutBegin  end
 1092 3651 a 51 x
FK(4)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a 1092 3651 a
tx@Dict begin { 192.91165 43.02106 } PutCoor PutBegin  end
 1092 3651 a
51 x FK(3)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 17.07182 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1092 3651 a
tx@Dict begin { 5.1216 18.7791 } PutCoor PutBegin  end
 1092 3651 a 2 w FB(M)1092 3651
y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 187.79005 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1092 3651 a
tx@Dict begin { 189.49733 18.43759 } PutCoor PutBegin  end
 1092 3651 a 2 w FB(N)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 17.07182 85.35912
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1092 3651 a
tx@Dict begin { 9.21866 85.35912 } PutCoor PutBegin  end

1092 3651 a 6 w FB(A)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 187.79005 68.2873
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1092 3651 a
tx@Dict begin { 189.15582 69.65306 } PutCoor PutBegin  end
 1092 3651 a FB(B)1092
3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 96.45569 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1092 3651 a
tx@Dict begin { 96.62657 20.82764 } PutCoor PutBegin  end
 1092 3651 a FB(P)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a
1092 3651 a
tx@Dict begin { 51.21547 5.1216 } PutCoor PutBegin  end
 1092 3651 a 1094 3650 a FB(x)1092 3651 y
tx@Dict begin  PutEnd  end

1092 3651 a 1092 3651 a
tx@Dict begin { 136.57458 5.1216 } PutCoor PutBegin  end
 1092 3651 a -1 x FK(10)c FG(\241)i
FB(x)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a 2785 3651 a
currentpoint initclip moveto
 2785 3651 a
-246 3834 a FK(On)18 b(pose)i FB(M)7 b(P)23 b FG(\306)16
b FB(x)5 b FK(,)18 b(on)f(a)h(donc)f FB(P)10 b(N)23 b
FG(\306)16 b FB(M)9 b(N)19 b FG(\241)12 b FB(M)7 b(P)24
b FG(\306)14 b FK(10)c FG(\241)i FB(x)5 b FK(.)-246 3933
y(D)o('apr\350s)17 b(le)h(th\351or\350me)h(de)e(Pythagor)o(e)g(dans)g
(chacun)h(des)f(deux)h(tr)q(iangles)f(r)o(ectangles)24
b FB(A)5 b(M)i(P)26 b FK(et)19 b FB(N)9 b(B)e(P)41 b
FK(:)514 4361 y FB(A)s(P)620 4327 y FI(2)669 4361 y FG(\306)16
b FB(M)7 b(P)872 4327 y FI(2)918 4361 y FG(\305)12 b
FB(M)h(A)1119 4327 y FI(2)514 4497 y FB(A)s(P)620 4463
y FI(2)669 4497 y FG(\306)j FB(x)784 4463 y FI(2)830
4497 y FG(\305)10 b FK(4)935 4463 y FI(2)514 4633 y FB(A)s(P)620
4599 y FI(2)669 4633 y FG(\306)16 b FB(x)784 4599 y FI(2)830
4633 y FG(\305)10 b FK(16)p 0 TeXcolorgray 1946 4892
9 843 v 0 TeXcolorgray 1992 4317 a FB(B)d(P)2102 4282
y FI(2)2152 4317 y FG(\306)14 b FB(P)c(N)2345 4282 y
FI(2)2390 4317 y FG(\305)g FB(B)f(N)2579 4282 y FI(2)1992
4453 y FB(B)e(P)2102 4419 y FI(2)2152 4453 y FG(\306)14
b FK(\(10)c FG(\241)i FB(x)5 b FK(\))2476 4419 y FI(2)2522
4453 y FG(\305)10 b FK(3)2627 4419 y FI(2)1992 4589 y
FB(B)d(P)2102 4555 y FI(2)2152 4589 y FG(\306)14 b FK(10)2301
4555 y FI(2)2347 4589 y FG(\241)c FK(2)g FG(\243)g FK(10)g
FG(\243)i FB(x)j FG(\305)d FB(x)2849 4555 y FI(2)2897
4589 y FG(\305)e FK(9)147 b(\(on)17 b(d\351veloppe)i(gr\342ce)e(\340)g
(l)o('IR)h(n\2602\))1992 4726 y FB(B)7 b(P)2102 4691
y FI(2)2152 4726 y FG(\306)14 b FK(100)c FG(\241)g FK(20)r
FB(x)15 b FG(\305)d FB(x)2663 4691 y FI(2)2712 4726 y
FG(\305)e FK(9)1992 4862 y FB(B)d(P)2102 4827 y FI(2)2152
4862 y FG(\306)16 b FB(x)2267 4827 y FI(2)2312 4862 y
FG(\241)10 b FK(20)r FB(x)15 b FG(\305)10 b FK(109)-246
5061 y(On)18 b(sait)f(que)24 b FB(A)s(P)e FG(\306)15
b FB(B)7 b(P)-9 b FK(,)19 b(donc)k FB(A)s(P)795 5031
y FI(2)844 5061 y FG(\306)14 b FB(B)7 b(P)1023 5031 y
FI(2)1076 5061 y FK(;)17 b(et)h(d)n('apr\350s)g(les)g(deux)g(calculs)g
(ci-dessus)g(:)1531 5267 y FA(\000)1546 5252 y(\000)1541
5255 y FB(x)1585 5220 y FI(2)1630 5255 y FG(\305)10 b
FK(16)16 b FG(\306)1852 5267 y FA(\000)1867 5252 y(\000)1862
5255 y FB(x)1906 5220 y FI(2)1951 5255 y FG(\241)10 b
FK(20)r FB(x)15 b FG(\305)10 b FK(109.)-246 5437 y(Il)17
b(n)-6 b('y)17 b(a)g(plus)i(qu)n('\340)e(r\351soudr)o(e)g(:)p
0 TeXcolorgray 1909 5895 a(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1678 12 a FK(16)15 b FG(\306)g(\241)p
FK(20)r FB(x)g FG(\305)10 b FK(109)1502 137 y(16)p 1 0 0
TeXcolorrgb FG(\241)p FK(109)p 0 TeXcolorgray 16 w FG(\306)15
b(\241)p FK(20)r FB(x)g FG(\305)2091 146 y FA(\010)2147
118 y(\010)2099 137 y FK(109)p 1 0 0 TeXcolorrgb 3 w
FG(\241)2269 146 y FA(\010)2324 118 y(\010)2277 137 y
FK(109)p 0 TeXcolorgray 1613 251 a FG(\241)p FK(93)p
1613 288 136 5 v 0 0 1 TeXcolorrgb 1613 364 a FG(\241)p
FK(20)p 0 TeXcolorgray 1773 307 a FG(\306)1844 245 y
FA(\030)1914 227 y(\030)1853 251 y FG(\241)p FK(20)s
FB(x)p 1853 288 183 5 v 0 0 1 TeXcolorrgb 1868 358 a
FA(\030)1937 340 y(\030)1876 364 y FG(\241)p FK(20)p
0 TeXcolorgray 1609 467 a(4,)8 b(65)16 b FG(\306)h FB(x)-246
642 y FK(C)o(onclusion)j(:)f FB(M)7 b(P)23 b FG(\306)14
b FK(4,)8 b(65.)-246 717 y
SDict begin H.S end
 -246 717 a -246 717 a
SDict begin 12 H.A end
 -246
717 a -246 717 a
SDict begin [/View [/XYZ H.V]/Dest (exo.28) cvn /DEST pdfmark end
 -246 717 a 0 TeXcolorgray 120 x FL(Ex)o(er)o(cice)14
b(28)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1227
1908 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.13065 a add def
/d 0.0 a add neg def /h 118.93227 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1227 1908 a 1010 1993 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 56.90549
28.45274 56.90549 40.5244 68.97714 40.5244 68.97714 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1010 1993 a
tx@Dict begin { 95.60123 25.03854 } PutCoor PutBegin  end
 1010 1993 a 1012 2031 a FB(x)1010 1993 y
tx@Dict begin  PutEnd  end

1010 1993 a 1010 1993 a
tx@Dict begin { 38.12657 72.26978 } PutCoor PutBegin  end
 1010 1993 a 1014 2031 a FB(y)1010
1993 y
tx@Dict begin  PutEnd  end
 1010 1993 a 1010 1993 a
tx@Dict begin { 120.63979 75.11522 } PutCoor PutBegin  end
 1010 1993 a 51 x FK(13)1010
1993 y
tx@Dict begin  PutEnd  end
 1010 1993 a 2673 1908 a
currentpoint initclip moveto
 2673 1908 a -246 1970
a
SDict begin H.S end
 -246 1970 a -246 1970 a
SDict begin 12 H.A end
 -246 1970 a -246 1970 a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246
1970 a 0 TeXcolorgray -141 2082 a FK(1.)p 0 TeXcolorgray
43 w(D)o('apr\350s)j(le)h(th\351or\350me)h(de)e(Pythagor)o(e)o(,)1724
2182 y FB(x)1768 2148 y FI(2)1814 2182 y FG(\305)d FB(y)1926
2148 y FI(2)1975 2182 y FG(\306)g FK(13)2124 2148 y FI(2)2174
2182 y FG(\306)g FK(169.)-38 2340 y(D)o('apr\350s)j(l)o('IR)i(n\2601,)f
(\()r FB(x)d FG(\305)f FB(y)7 b FK(\))757 2310 y FI(2)807
2340 y FG(\306)17 b FB(x)923 2310 y FI(2)968 2340 y FG(\305)d
FB(y)1080 2310 y FI(2)1126 2340 y FG(\305)c FK(2)r FB(x)g(y)q
FK(.)20 b(Or)f FB(x)1510 2310 y FI(2)1556 2340 y FG(\305)14
b FB(y)1668 2310 y FI(2)1718 2340 y FG(\306)g FK(169,)20
b(et)2041 2298 y Fw(x)t FH(\243)s Fw(y)p 2040 2321 113
5 v 2081 2369 a FI(2)2177 2340 y FG(\306)15 b FK(30,)k(puisque)g(c)n
('est)g(l)o('air)o(e)f(du)g(tr)q(iangle)o(.)f(On)h(en)g(d\351duit)i
FB(x)15 b FG(\243)f FB(y)23 b FG(\306)-38 2440 y FK(30)10
b FG(\243)g FK(2)16 b FG(\306)e FK(60,)19 b(puis)1107
2539 y(\()r FB(x)c FG(\305)f FB(y)7 b FK(\))1329 2505
y FI(2)1379 2539 y FG(\306)p 0 0 1 TeXcolorrgb 16 w FB(x)1494
2505 y FI(2)1539 2539 y FG(\305)14 b FB(y)1651 2505 y
FI(2)p 0 TeXcolorgray 1696 2539 a FG(\305)c FK(2)p 1 0 0
TeXcolorrgb 2 w FB(x)g(y)p 0 TeXcolorgray 22 w FG(\306)p
0 0 1 TeXcolorrgb 15 w FK(169)p 0 TeXcolorgray 11 w FG(\305)g
FK(2)g FG(\243)p 1 0 0 TeXcolorrgb 10 w FK(60)p 0 TeXcolorgray
16 w FG(\306)15 b FK(169)10 b FG(\305)g FK(120)17 b FG(\306)d
FK(289.)-38 2684 y(F)o(inalement,)20 b(comme)f(\()r FB(x)c
FG(\305)f FB(y)7 b FK(\))898 2654 y FI(2)947 2684 y FG(\306)14
b FK(289,)1745 2784 y FB(x)h FG(\305)f FB(y)22 b FG(\306)1995
2715 y(p)p 2058 2715 122 5 v 2058 2784 a FK(289)16 b
FG(\306)e FK(17.)-246 2847 y
SDict begin H.S end
 -246 2847 a -246 2847 a
SDict begin 12 H.A end

-246 2847 a -246 2847 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 2847 a 0 TeXcolorgray -141
2941 a FK(2.)p 0 TeXcolorgray 43 w(On)j(utilise)i(cette)f(fois)g(l)o
('IR)g(n\2602)g(:)1128 3041 y(\()r FB(x)d FG(\241)f FB(y)7
b FK(\))1350 3007 y FI(2)1399 3041 y FG(\306)p 0 0 1
TeXcolorrgb 16 w FB(x)1514 3007 y FI(2)1560 3041 y FG(\305)14
b FB(y)1672 3007 y FI(2)p 0 TeXcolorgray 1717 3041 a
FG(\241)c FK(2)p 1 0 0 TeXcolorrgb 2 w FB(x)g(y)p 0 TeXcolorgray
22 w FG(\306)p 0 0 1 TeXcolorrgb 14 w FK(169)p 0 TeXcolorgray
11 w FG(\241)g FK(2)g FG(\243)p 1 0 0 TeXcolorrgb 10
w FK(60)p 0 TeXcolorgray 17 w FG(\306)k FK(169)c FG(\241)g
FK(120)17 b FG(\306)e FK(49.)-38 3199 y(Or)k FB(x)c FG(\241)f
FB(y)22 b FG(\270)14 b FK(0,)k(puisque)j FB(x)i FK(est)18
b(plus)g(gr)o(and)f(que)22 b FB(y)r FK(,)c(donc)1785
3374 y FB(x)d FG(\241)f FB(y)22 b FG(\306)2035 3305 y(p)p
2099 3305 82 5 v 69 x FK(49)15 b FG(\306)f FK(7.)-38
3562 y Fu(")p FK(S)o(i)k(on)f(ne)h(savait)g(pas)f(lequel)i(des)f(deux)f
(c\364t\351s)h(est)g(le)g(plus)h(gr)o(and,)d(on)i(pourr)o(ait)g(avoir)h
FB(x)c FG(\241)f FB(y)22 b FG(\306)14 b(\241)p FK(7)k(!!!)-38
3721 y(On)f(sait)h(\340)f(pr\351sent)i(que)h FB(x)15
b FG(\305)f FB(y)21 b FG(\306)15 b FK(17)j(et)i FB(x)15
b FG(\241)f FB(y)21 b FG(\306)14 b FK(7.)k(On)g(ajoute)g(membr)o(e)g
(\340)f(membr)o(e)g(ces)h(\351galit\351s)g(et)g(on)g(en)f(d\351duit)j
FB(x)37 b FK(:)1654 4009 y(\()r FB(x)15 b FG(\305)f FB(y)7
b FK(\))j FG(\305)g FK(\()r FB(x)15 b FG(\241)f FB(y)7
b FK(\))15 b FG(\306)f FK(17)c FG(\305)g FK(7)1763 4133
y FB(x)15 b FG(\305)1885 4165 y FA(\001)1886 4133 y FB(y)j
FG(\305)12 b FB(x)j FG(\241)2129 4165 y FA(\001)2130
4133 y FB(y)22 b FG(\306)14 b FK(24)2076 4279 y FA(\001)2076
4264 y FK(2)s FB(x)p 2076 4300 87 5 v 2099 4397 a FA(\001)2100
4381 y FK(2)2188 4320 y FG(\306)2267 4264 y FK(24)p 2267
4300 82 5 v 2287 4377 a(2)2129 4484 y FB(x)20 b FG(\306)14
b FK(12)-38 4672 y(En\002n,)j(comme)k FB(x)15 b FG(\305)f
FB(y)22 b FG(\306)14 b FK(17,)k(on)g(trouve)j FB(y)g
FG(\306)14 b FK(17)c FG(\241)i FB(x)21 b FG(\306)14 b
FK(17)c FG(\241)g FK(12)17 b FG(\306)d FK(5.)-38 4785
y(C)o(onclusion)19 b(:)h FB(x)f FG(\306)14 b FK(12,)23
b FB(y)e FG(\306)14 b FK(5.)-246 4930 y
SDict begin H.S end
 -246 4930 a -246
4930 a
SDict begin 12 H.A end
 -246 4930 a -246 4930 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -246 4930 a 130 x FM(2)105
b(N)m(ombr)n(es)24 b(r\351els)-246 5145 y
SDict begin H.S end
 -246 5145 a
-246 5145 a
SDict begin 12 H.A end
 -246 5145 a -246 5145 a
SDict begin [/View [/XYZ H.V]/Dest (exo.29) cvn /DEST pdfmark end
 -246 5145 a -246
5132 a
SDict begin H.S end
 -246 5132 a -246 5132 a
SDict begin 12 H.A end
 -246 5132 a -246 5132
a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 5132 a 0 TeXcolorgray 112 x FL(Ex)o(er)o(cice)14
b(29)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w FG(\241)p FK(7)g FG(2)h Fm(Q)p FK(.)i
FL(VRAI.)-38 5388 y FK(J)m(usti\002cation)h(:)g FG(\241)p
FK(7)c FG(\306)622 5332 y(\241)p FK(7)p 622 5369 96 5
v 649 5445 a(1)727 5388 y(,)j(donc)h FG(\241)p FK(7)c
FG(2)h Fm(Q)i FK(\(il)g(s)m('\351cr)q(it)h(comme)g(le)g(quotient)h(de)e
(deux)h(entiers\).)-246 5458 y
SDict begin H.S end
 -246 5458 a -246 5458
a
SDict begin 12 H.A end
 -246 5458 a -246 5458 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 5458 a 0 TeXcolorgray
-141 5533 a FK(2.)p 0 TeXcolorgray 43 w FG(\241)p FK(7)d
FG(2)f Fm(N)p FK(.)j FL(F)-5 b(A)m(UX.)-38 5646 y FK(J)m
(usti\002cation)18 b(:)g FG(\241)p FK(7)f(est)h(str)q(ictement)h
(n\351gatif,)g(donc)e(ce)g(n)-6 b('est)18 b(pas)g(un)g(entier)g(natur)o
(el.)p 0 TeXcolorgray 1909 5895 a(13)p 0 TeXcolorgray
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -138
a FK(3.)p 0 TeXcolorgray 43 w FG(\241)27 -195 y FK(13)p
27 -158 82 5 v 47 -81 a(4)132 -138 y FG(2)15 b Fm(Z)p
FK(.)i FL(F)-5 b(A)m(UX.)-38 49 y FK(J)m(usti\002cation)18
b(:)g FG(\241)498 -7 y FK(13)p 498 30 V 518 106 a(4)603
49 y FG(\306)c(\241)p FK(3,)8 b(25)19 b(a)e(des)h(chiffr)o(es)g
(apr\350s)g(la)f(virgule)o(,)h(donc)f(il)g(n)-6 b('est)19
b(pas)f(entier)-5 b(.)-38 236 y FL(R)o(emarque)17 b(:)k
FK(P)n(our)f(obtenir)862 180 y(13)p 862 217 V 883 293
a(4)971 236 y FG(\306)d FK(3,)8 b(25)23 b(sans)e(calculatr)q(ice)o(,)f
(trois)h(possibilit\351s)i(:)2477 233 y Fz(1)2454 236
y Fy(\015)d FK(Diviser)h(de)f(t\352te)i(13)f(par)g(2)g(deux)f(fois)i
(de)e(suite)i(\226)4086 233 y Fz(2)4063 236 y Fy(\015)-38
409 y FK(P)n(oser)17 b(la)g(division)i(\226)619 406 y
Fz(3)596 409 y Fy(\015)e FK(R)o(emarquer)g(que)1258 353
y(13)p 1258 389 V 1278 466 a(4)1363 409 y FG(\306)1442
353 y FK(12)p 1442 389 V 1462 466 a(4)1543 409 y FG(\305)1618
353 y FK(1)p 1618 389 41 5 v 1618 466 a(4)1683 409 y
FG(\306)d FK(3)c FG(\305)g FK(0,)e(25)17 b FG(\306)d
FK(3,)8 b(25.)-246 480 y
SDict begin H.S end
 -246 480 a -246 480 a
SDict begin 12 H.A end
 -246 480
a -246 480 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246 480 a 0 TeXcolorgray -141 611 a FK(4.)p
0 TeXcolorgray 43 w FG(\241)27 554 y FK(13)p 27 591 82
5 v 47 667 a(4)132 611 y FG(2)15 b Fm(D)p FK(.)i FL(VRAI.)-38
798 y FK(J)m(usti\002cation)h(:)g FG(\241)498 742 y FK(13)p
498 778 V 518 855 a(4)603 798 y FG(\306)c(\241)p FK(3,)8
b(25)19 b(a)e(deux)h(chiffr)o(es)g(apr\350s)g(la)f(virgule)o(,)h(donc)f
(il)g(est)h(d\351cimal.)-246 869 y
SDict begin H.S end
 -246 869 a -246 869
a
SDict begin 12 H.A end
 -246 869 a -246 869 a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 869 a 0 TeXcolorgray -141
945 a FK(5.)p 0 TeXcolorgray 43 w(5,)8 b(824)17 b FG(2)d
Fm(D)p FK(.)k FL(VRAI.)-38 1059 y FK(J)m(usti\002cation)g(:)g(5,)8
b(824)19 b(a)f(trois)f(chiffr)o(es)h(apr\350s)g(la)f(virgule)o(,)h
(donc)f(il)g(est)h(d\351cimal)-246 1093 y
SDict begin H.S end
 -246 1093 a
-246 1093 a
SDict begin 12 H.A end
 -246 1093 a -246 1093 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -246 1093 a 0 TeXcolorgray
-141 1188 a FK(6.)p 0 TeXcolorgray 43 w(5,)8 b(824)17
b FG(2)d Fm(Q)p FK(.)j FL(VRAI.)-38 1302 y FK(J)m(usti\002cation)h
(n\2601)g(:)f(5,)8 b(824)20 b(est)e(d\351cimal)g(\(cf)f(question)i
(pr\351c\351dente\),)g(donc)e(il)g(est)h(r)o(ationnel)h(d)n('apr\350s)f
(le)g(cours)f(\()p Fm(D)e FG(\275)f Fm(Q)p FK(\).)-38
1450 y(J)m(usti\002cation)k(n\2602)g(:)f(5,)8 b(824)17
b FG(\306)848 1394 y FK(5)8 b(824)p 848 1431 171 5 v
848 1507 a(1)g(000)1028 1450 y(,)18 b(donc)f(5,)8 b(824)16
b FG(2)f Fm(Q)i FK(\(il)h(s)m('\351cr)q(it)f(comme)h(le)g(quotient)h
(de)e(deux)h(entiers\).)-246 1522 y
SDict begin H.S end
 -246 1522 a -246
1522 a
SDict begin 12 H.A end
 -246 1522 a -246 1522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -246 1522 a 0 TeXcolorgray
-141 1652 a FK(7.)p 0 TeXcolorgray -28 1596 a(10)p -28
1633 82 5 v -8 1709 a(6)77 1652 y FG(2)d Fm(D)p FK(.)i
FL(F)-5 b(A)m(UX.)-38 1789 y FK(J)m(usti\002cation)18
b(:)g(On)f(pose)h(la)g(division)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1887 1944 a(1)33 b(0)1798 2043 y FG(\241)p
1871 2070 147 4 v 107 w FK(6)1960 2143 y(4)h(0)1871 2243
y FG(\241)p 1944 2269 V 34 w FK(3)g(6)2034 2342 y(4)p
2125 2371 4 499 v 2127 1970 183 4 v 2180 1944 a(6)2180
2043 y(1)6 b(,)h(6)-38 2545 y(C)o(omme)17 b(on)f(obtient)g(deux)g(fois)
h(le)f(m\352me)h(r)o(este)e(\(4\),)h(\347a)f(va)h(continuer)h
(ind\351\002niment.)g(C)o(onclusion)h(:)3060 2489 y(10)p
3060 2526 82 5 v 3081 2602 a(6)3166 2545 y FG(\306)c
FK(1,)8 b(666)g FG(\242)g(\242)g(\242)27 b FK(n)-6 b('est)16
b(pas)h(d\351cimal,)-38 2668 y(puisqu)n('il)i(a)e(une)h(in\002nit\351)h
(de)e(chiffr)o(es)h(apr\350s)g(la)f(virgule)o(.)-246
2701 y
SDict begin H.S end
 -246 2701 a -246 2701 a
SDict begin 12 H.A end
 -246 2701 a -246 2701
a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -246 2701 a 0 TeXcolorgray -141 2832 a FK(8.)p 0 TeXcolorgray
-28 2775 a(17)p -28 2812 82 5 v -28 2889 a(11)77 2832
y FG(2)e Fm(D)p FK(.)i FL(F)-5 b(A)m(UX.)-38 2969 y FK(J)m
(usti\002cation)18 b(:)g(On)f(pose)h(la)g(division)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1814 3123 a(1)33 b(7)1725
3223 y FG(\241)p 1798 3249 147 4 v 34 w FK(1)g(1)1887
3322 y(6)g(0)1798 3422 y FG(\241)p 1871 3448 V 34 w FK(5)g(5)1960
3521 y(5)h(0)1871 3621 y FG(\241)p 1944 3648 V 34 w FK(4)g(4)2034
3721 y(6)p 2125 3750 4 698 v 2127 3150 256 4 v 2180 3123
a(1)f(1)2180 3223 y(1)6 b(,)h(5)33 b(4)-38 3924 y(C)o(omme)13
b(on)g(obtient)g(deux)g(fois)g(le)g(m)q(\352me)h(r)o(este)f(\(6)q(\),)g
(\347a)g(va)g(cont)q(inue)q(r)g(ind\351\002nim)q(ent.)h(C)o(on)q(clusi)
q(on)f(:)3027 3868 y(17)p 3027 3905 82 5 v 3027 3981
a(11)3132 3924 y FG(\306)h FK(1,)8 b(5454)g FG(\242)g(\242)g(\242)25
b FK(n)-6 b('est)13 b(pas)g(d\351cimal,)-38 4046 y(puisqu)n('il)19
b(a)e(une)h(in\002nit\351)h(de)e(chiffr)o(es)h(apr\350s)g(la)f(virgule)
o(.)-246 4131 y
SDict begin H.S end
 -246 4131 a -246 4131 a
SDict begin 12 H.A end
 -246 4131 a -246
4131 a
SDict begin [/View [/XYZ H.V]/Dest (exo.30) cvn /DEST pdfmark end
 -246 4131 a -246 4150 a
SDict begin H.S end
 -246 4150 a -246 4150
a
SDict begin 12 H.A end
 -246 4150 a -246 4150 a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -246 4150 a 0 TeXcolorgray
95 x FL(Ex)o(er)o(cice)d(30)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 1361 4345 a FB(I)1391 4357
y FI(1)1441 4345 y FG(\306)1510 4346 y FK([)1536 4345
y(1;)8 b(4)1644 4346 y(])1827 4345 y FB(I)1857 4357 y
FI(2)1907 4345 y FG(\306)1976 4346 y FK([)2001 4345 y(5;)g
FG(\3051)2202 4346 y FK([)2384 4345 y FB(I)2414 4357
y FI(3)2464 4345 y FG(\306)2534 4346 y FK(])2559 4345
y FG(\241)p FK(2;)g(0)2722 4346 y([)p 0 TeXcolorgray
0 TeXcolorgray 670 4854 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 333.46617 a add def
/d 0.0 a add neg def /h 51.7842 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 670 4854 a 1180 4651 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 272.00815  0 -61.45802  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -61.45802
 272.00815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 27.31482  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 272.00815
0.0 -61.45802 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1165 4748 a FI(0)205 b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)-2414
b FH(\241)p FI(1)-309 b FH(\241)p FI(2)1180 4651 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 264.6106 0.0 142.26372
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 0.0 -56.90549 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1180 4651 a
tx@Dict begin { 62.59595 14.22636 } PutCoor PutBegin  end
 1180
4651 a 1 0 0 TeXcolorrgb 1182 4705 a FB(I)1212 4717 y
FI(1)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180 4651
a
tx@Dict begin { 204.29048 14.22636 } PutCoor PutBegin  end
 1180 4651 a 0 0 1 TeXcolorrgb 1182 4705 a FB(I)1212
4717 y FI(2)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a
1180 4651 a
tx@Dict begin { -35.28156 14.22636 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 1182 4705 a
FB(I)1212 4717 y FI(3)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180
4651 a 1180 4651 a
tx@Dict begin { -60.31967 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 135
x Fl(])p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180
4651 a
tx@Dict begin { -3.41418 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 135 x Fl([)p 0 TeXcolorgray
1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180 4651 a
tx@Dict begin { 25.03854 9.10507 } PutCoor PutBegin  end
 1180 4651 a 1 0 0
TeXcolorrgb 135 x Fl([)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180
4651 a 1180 4651 a
tx@Dict begin { 110.39677 9.10507 } PutCoor PutBegin  end
 1180 4651 a 1 0 0 TeXcolorrgb 135
x Fl(])p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180
4651 a
tx@Dict begin { 138.84952 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 0 1 TeXcolorrgb 135 x Fl([)p 0 TeXcolorgray
1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 3438 4854 a
currentpoint initclip moveto
 3438 4854 a -246
4898 a
SDict begin H.S end
 -246 4898 a -246 4898 a
SDict begin 12 H.A end
 -246 4898 a -246 4898
a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -246 4898 a 0 TeXcolorgray -141 5012 a FK(2.)p 0 TeXcolorgray
1287 5112 a FB(I)1317 5124 y FI(1)1368 5112 y FG(\306)1437
5113 y FK([)1462 5112 y FG(\241)p FK(1;)8 b(1)1625 5113
y([)1808 5112 y FB(I)1838 5124 y FI(2)1888 5112 y FG(\306)1957
5113 y FK(])1982 5112 y(3;)g FG(\3051)2183 5113 y FK([)2366
5112 y FB(I)2396 5124 y FI(3)2446 5112 y FG(\306)2515
5113 y FK(])2540 5112 y FG(\2411)p FK(;)g FG(\241)p FK(2)2796
5113 y(])p 0 TeXcolorgray 0 TeXcolorgray 433 5622 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 390.37166 a add def
/d 0.0 a add neg def /h 51.7842 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 433
5622 a 1888 5418 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 215.10266  0 -175.269  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -175.269
 215.10266  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 27.31482  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 215.10266
0.0 -175.269 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1873 5515 a FI(0)205
b(1)g(2)h(3)f(4)g(5)g(6)h(7)-1942 b FH(\241)p FI(1)-309
b FH(\241)p FI(2)f FH(\241)p FI(3)h FH(\241)p FI(4)g
FH(\241)p FI(5)g FH(\241)p FI(6)1888 5418 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 -28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 264.6106 0.0 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 0.0 -175.269
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1888 5418 a
tx@Dict begin { -8.5359 14.22636 } PutCoor PutBegin  end
 1888
5418 a 1 0 0 TeXcolorrgb 1890 5472 a FB(I)1920 5484 y
FI(1)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888 5418
a
tx@Dict begin { 147.385 14.22636 } PutCoor PutBegin  end
 1888 5418 a 0 0 1 TeXcolorrgb 1890 5472 a FB(I)1920
5484 y FI(2)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a
1888 5418 a
tx@Dict begin { -128.03734 14.22636 } PutCoor PutBegin  end
 1888 5418 a 0 1 0 TeXcolorrgb 1890 5472 a
FB(I)1920 5484 y FI(3)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888
5418 a 1888 5418 a
tx@Dict begin { -60.31967 9.10507 } PutCoor PutBegin  end
 1888 5418 a 0 1 0 TeXcolorrgb 135
x Fl(])p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888
5418 a
tx@Dict begin { -31.86693 9.10507 } PutCoor PutBegin  end
 1888 5418 a 1 0 0 TeXcolorrgb 135 x Fl([)p 0 TeXcolorgray
1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888 5418 a
tx@Dict begin { 25.03854 9.10507 } PutCoor PutBegin  end
 1888 5418 a 1 0 0
TeXcolorrgb 135 x Fl([)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888
5418 a 1888 5418 a
tx@Dict begin { 81.94403 9.10507 } PutCoor PutBegin  end
 1888 5418 a 0 0 1 TeXcolorrgb 135
x Fl(])p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 3674
5622 a
currentpoint initclip moveto
 3674 5622 a -246 5688 a
SDict begin H.S end
 -246 5688 a -246 5688
a
SDict begin 12 H.A end
 -246 5688 a -246 5688 a
SDict begin [/View [/XYZ H.V]/Dest (exo.31) cvn /DEST pdfmark end
 -246 5688 a 0 TeXcolorgray
1909 5895 a FK(14)p 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(31)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(5)h FG(2)517 -162 y FK([)542 -163 y(2;)8
b(6)650 -162 y([)-246 -137 y
SDict begin H.S end
 -246 -137 a -246 -137 a
SDict begin 12 H.A end

-246 -137 a -246 -137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -246 -137 a 0 TeXcolorgray -141
-34 a FK(2.)p 0 TeXcolorgray 43 w FG(\241)p FK(2)15 b
FG(\335)131 -33 y FK(])156 -34 y FG(\241)p FK(2;)8 b(1)319
-33 y(])-246 -8 y
SDict begin H.S end
 -246 -8 a -246 -8 a
SDict begin 12 H.A end
 -246 -8 a -246
-8 a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -246 -8 a 0 TeXcolorgray -141 95 a FK(3.)p 0 TeXcolorgray
43 w FD(\274)14 b FG(2)85 96 y FK(])111 95 y(3;)8 b(4)219
96 y([)263 95 y(\(on)17 b(r)o(appelle)i(que)f FD(\274)c
FG(\274)g FK(3,)8 b(14\))-246 179 y
SDict begin H.S end
 -246 179 a -246 179
a
SDict begin 12 H.A end
 -246 179 a -246 179 a
SDict begin [/View [/XYZ H.V]/Dest (exo.32) cvn /DEST pdfmark end
 -246 179 a -246 197 a
SDict begin H.S end
 -246 197
a -246 197 a
SDict begin 12 H.A end
 -246 197 a -246 197 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -246 197 a 0 TeXcolorgray
97 x FL(Ex)o(er)o(cice)14 b(32)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(5)c FG(\243)g(j)g(\241)g
FK(6)p FG(j)16 b(\306)e FK(5)c FG(\243)g FK(6)16 b FG(\306)e
FK(30)-246 321 y
SDict begin H.S end
 -246 321 a -246 321 a
SDict begin 12 H.A end
 -246 321 a -246
321 a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -246 321 a 0 TeXcolorgray -141 423 a FK(2.)p 0
TeXcolorgray 43 w FG(j)p FK(3)p FG(j)c(\305)g(j)g(\241)g
FK(3)p FG(j)17 b(\306)d FK(3)c FG(\305)g FK(3)15 b FG(\306)f
FK(6)-246 450 y
SDict begin H.S end
 -246 450 a -246 450 a
SDict begin 12 H.A end
 -246 450 a -246
450 a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -246 450 a 0 TeXcolorgray -141 552 a FK(3.)p 0
TeXcolorgray 43 w FG(j)p FK(5)p FG(j)c(\241)g(j)g(\241)g
FK(5)p FG(j)17 b(\306)d FK(5)c FG(\241)g FK(5)15 b FG(\306)f
FK(0)-246 578 y
SDict begin H.S end
 -246 578 a -246 578 a
SDict begin 12 H.A end
 -246 578 a -246
578 a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -246 578 a 0 TeXcolorgray -141 681 a FK(4.)p 0
TeXcolorgray 43 w FG(j)c(\241)g FK(4)p FG(j)g(\243)g(j)p
FK(2)p FG(j)17 b(\306)d FK(4)c FG(\243)g FK(2)15 b FG(\306)f
FK(8)-246 707 y
SDict begin H.S end
 -246 707 a -246 707 a
SDict begin 12 H.A end
 -246 707 a -246
707 a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -246 707 a 0 TeXcolorgray -141 810 a FK(5.)p 0
TeXcolorgray 43 w FG(j)p FK(7)c FG(\241)g FK(4)p FG(j)16
b(\306)e(j)p FK(3)p FG(j)h(\306)f FK(3)-246 836 y
SDict begin H.S end
 -246
836 a -246 836 a
SDict begin 12 H.A end
 -246 836 a -246 836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -246 836 a 0 TeXcolorgray
-141 939 a FK(6.)p 0 TeXcolorgray 43 w FG(j)p FK(4)c
FG(\241)g FK(7)p FG(j)16 b(\306)e(j)c(\241)g FK(3)p FG(j)16
b(\306)e FK(3)-246 965 y
SDict begin H.S end
 -246 965 a -246 965 a
SDict begin 12 H.A end
 -246 965
a -246 965 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -246 965 a 0 TeXcolorgray -141 1067 a FK(7.)p
0 TeXcolorgray 43 w FG(j)p FK(4)c FG(\241)g FK(3)p FG(j)g(\305)g(j)p
FK(5)g FG(\241)g FK(6)p FG(j)18 b(\306)c(j)p FK(1)p FG(j)c(\305)g(j)g
(\241)g FK(1)p FG(j)17 b(\306)d FK(1)c FG(\305)g FK(1)16
b FG(\306)e FK(2)-246 1094 y
SDict begin H.S end
 -246 1094 a -246 1094 a
SDict begin 12 H.A end

-246 1094 a -246 1094 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -246 1094 a 0 TeXcolorgray -141
1196 a FK(8.)p 0 TeXcolorgray 43 w FG(j)p FK(5)c FG(\241)g
FK(11)p FG(j)g(\305)g FK(2)g FG(\243)g(j)p FK(7)g FG(\241)g
FK(8)p FG(j)19 b(\306)14 b(j)c(\241)g FK(6)p FG(j)g(\305)g
FK(2)g FG(\243)g(j)g(\241)g FK(1)p FG(j)18 b(\306)c FK(6)c
FG(\305)g FK(2)g FG(\243)g FK(1)17 b FG(\306)d FK(6)c
FG(\305)g FK(2)15 b FG(\306)f FK(8)-246 1223 y
SDict begin H.S end
 -246 1223
a -246 1223 a
SDict begin 12 H.A end
 -246 1223 a -246 1223 a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -246 1223 a 0 TeXcolorgray
-141 1325 a FK(9.)p 0 TeXcolorgray 43 w FG(j)p FK(8)c
FG(\241)g FK(5)p FG(j)g(\243)g(j)p FK(7)g FG(\241)g FK(10)p
FG(j)18 b(\306)d(j)p FK(3)p FG(j)10 b(\243)g(j)g(\241)g
FK(3)p FG(j)16 b(\306)f FK(3)10 b FG(\243)g FK(3)15 b
FG(\306)f FK(9)-246 1351 y
SDict begin H.S end
 -246 1351 a -246 1351 a
SDict begin 12 H.A end
 -246
1351 a -246 1351 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -246 1351 a 0 TeXcolorgray -181 1454
a FK(10.)p 0 TeXcolorgray 43 w FG(j)p FK(15)c FG(\241)g
FK(6)p FG(j)g(\241)g FK(4)g FG(\243)g(j)p FK(1)g FG(\241)g
FK(4)p FG(j)19 b(\306)14 b(j)p FK(9)p FG(j)c(\241)g FK(4)g
FG(\243)g(j)g(\241)g FK(3)p FG(j)18 b(\306)c FK(9)c FG(\241)g
FK(4)g FG(\243)g FK(3)16 b FG(\306)e FK(9)c FG(\241)g
FK(12)16 b FG(\306)f(\241)p FK(3)-246 1532 y
SDict begin H.S end
 -246 1532
a -246 1532 a
SDict begin 12 H.A end
 -246 1532 a -246 1532 a
SDict begin [/View [/XYZ H.V]/Dest (exo.33) cvn /DEST pdfmark end
 -246 1532 a -246
1551 a
SDict begin H.S end
 -246 1551 a -246 1551 a
SDict begin 12 H.A end
 -246 1551 a -246 1551
a
SDict begin [/View [/XYZ H.V]/Dest (Item.60) cvn /DEST pdfmark end
 -246 1551 a 0 TeXcolorgray 102 x FL(Ex)o(er)o(cice)f(33)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)j(r\351sout)h(l)o('\351quation)i FG(j)r FB(x)15
b FG(\241)10 b FK(2)p FG(j)16 b(\306)e FK(3.)-38 1852
y FL(M\351thode)i(n\2601)f(:)i(av)o(ec)d(la)h(d\351\002nition)h(de)g
(la)f(v)o(aleur)f(absolue.)-38 1993 y FK(Les)k(nombr)o(es)f(dont)h(la)f
(valeur)h(absolue)g(vaut)g(3)g(sont)g(3)f(et)h FG(\241)p
FK(3.)-38 2100 y(Donc)f(dir)o(e)f(que)823 2200 y FG(j)r
FB(x)f FG(\241)10 b FK(2)p FG(j)16 b(\306)e FK(3)-38
2325 y(r)o(evient)k(\340)f(dir)o(e)g(que)410 2467 y FB(x)e
FG(\241)10 b FK(2)16 b FG(\306)e FK(3)146 b(ou)18 b(que)149
b FB(x)15 b FG(\241)10 b FK(2)15 b FG(\306)f(\241)p FK(3)-38
2616 y(Donc)244 2865 y FB(x)h FG(\241)363 2881 y FA(\001)363
2865 y FK(2)c FG(\305)479 2881 y FA(\001)479 2865 y FK(2)k
FG(\306)f FK(3)c FG(\305)g FK(2)148 b(ou)166 b FB(x)15
b FG(\241)1281 2881 y FA(\001)1281 2865 y FK(2)c FG(\305)1397
2881 y FA(\001)1397 2865 y FK(2)k FG(\306)f(\241)p FK(3)c
FG(\305)g FK(2)244 2990 y FB(x)20 b FG(\306)14 b FK(5)494
b(ou)166 b FB(x)19 b FG(\306)14 b(\241)p FK(1)-38 3264
y(C)o(onclusion)19 b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h
FB(x)f FG(\306)14 b FK(5)k(et)i FB(x)f FG(\306)14 b(\241)p
FK(1.)p 0 TeXcolorgray 2050 3283 9 1514 v 0 TeXcolorgray
2095 1852 a FL(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
2088 y FK(Dir)o(e)h(que)2956 2263 y FG(j)r FB(x)f FG(\241)10
b FK(2)p FG(j)16 b(\306)e FK(3)2095 2487 y(r)o(evient)k(\340)g(dir)o(e)
e(que)i(la)g(distance)g(entr)o(e)h FB(x)k FK(et)17 b(2)h(est)g
(\351gale)g(\340)f(3.)p 0 TeXcolorgray 0 TeXcolorgray
2268 3018 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 205.39366 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2268 3018 a 2610 2921 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -41.25638  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -41.25638
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -41.25638 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2595
3018 a FI(0)64 b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)h(3.0)f(3.5)g(4.0)g
(4.5)g(5.0)-1397 b FH(\241)p FI(0.5)-237 b FH(\241)p
FI(1.0)2610 2921 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2610 2921 a
tx@Dict begin { -8.5359 28.45274 } PutCoor PutBegin  end
 2610
2921 a 1 0 0 TeXcolorrgb 57 x FK(distance)18 b FG(\306)f
FK(3)p 0 TeXcolorgray 2610 2921 a
tx@Dict begin  PutEnd  end
 2610 2921 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2610 2921 a
tx@Dict begin { 76.82231 28.45274 } PutCoor PutBegin  end
 2610 2921 a 1 0 0 TeXcolorrgb 57 x FK(distance)h
FG(\306)f FK(3)p 0 TeXcolorgray 2610 2921 a
tx@Dict begin  PutEnd  end
 2610 2921
a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3973 3018 a
currentpoint initclip moveto
 3973 3018 a 2095 3264 a FK(On)g(voit)h(qu)n('il)h(y)d(a)i
(deux)f(solutions)i(:)h FB(x)f FG(\306)c FK(5)i(et)j
FB(x)g FG(\306)14 b(\241)p FK(1.)-246 3363 y
SDict begin H.S end
 -246 3363
a -246 3363 a
SDict begin 12 H.A end
 -246 3363 a -246 3363 a
SDict begin [/View [/XYZ H.V]/Dest (Item.61) cvn /DEST pdfmark end
 -246 3363 a 0 TeXcolorgray
-141 3478 a FK(2.)p 0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o
('\351quation)i FG(j)r FB(x)15 b FG(\241)10 b FK(1)p
FG(j)16 b(\306)e FK(4.)-38 3677 y FL(M\351thode)i(n\2601)f(:)i(av)o(ec)
d(la)h(d\351\002nition)h(de)g(la)f(v)o(aleur)f(absolue.)-38
3818 y FK(Les)k(nombr)o(es)f(dont)h(la)f(valeur)h(absolue)g(vaut)g(4)g
(sont)g(4)f(et)h FG(\241)p FK(4.)-38 3925 y(Donc)f(dir)o(e)f(que)823
4024 y FG(j)r FB(x)f FG(\241)10 b FK(1)p FG(j)16 b(\306)e
FK(4)-38 4149 y(r)o(evient)k(\340)f(dir)o(e)g(que)410
4291 y FB(x)e FG(\241)10 b FK(1)16 b FG(\306)e FK(4)146
b(ou)18 b(que)149 b FB(x)15 b FG(\241)10 b FK(1)15 b
FG(\306)f(\241)p FK(4)-38 4441 y(Donc)244 4690 y FB(x)h
FG(\241)363 4706 y FA(\001)363 4690 y FK(1)c FG(\305)479
4706 y FA(\001)479 4690 y FK(1)k FG(\306)f FK(4)c FG(\305)g
FK(1)148 b(ou)166 b FB(x)15 b FG(\241)1281 4706 y FA(\001)1281
4690 y FK(1)c FG(\305)1397 4706 y FA(\001)1397 4690 y
FK(1)k FG(\306)f(\241)p FK(4)c FG(\305)g FK(1)244 4814
y FB(x)20 b FG(\306)14 b FK(5)494 b(ou)166 b FB(x)19
b FG(\306)14 b(\241)p FK(3)-38 5088 y(C)o(onclusion)19
b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h FB(x)f
FG(\306)14 b FK(5)k(et)i FB(x)f FG(\306)14 b(\241)p FK(3.)p
0 TeXcolorgray 2050 5107 9 1514 v 0 TeXcolorgray 2095
3677 a FL(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
3898 y FK(Dir)o(e)h(que)2956 4058 y FG(j)r FB(x)f FG(\241)10
b FK(1)p FG(j)16 b(\306)e FK(4)2095 4267 y(r)o(evient)k(\340)g(dir)o(e)
e(que)i(la)g(distance)g(entr)o(e)h FB(x)k FK(et)17 b(1)h(est)g
(\351gale)g(\340)f(4.)p 0 TeXcolorgray 0 TeXcolorgray
2095 4860 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.29915 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2095 4860 a 2910 4763 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -98.16187  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -98.16187
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -98.16187 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2895
4860 a FI(0)64 b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)g(3.0)h(3.5)f(4.0)g
(4.5)g(5.0)-1397 b FH(\241)p FI(0.5)-237 b FH(\241)p
FI(1.0)g FH(\241)p FI(1.5)f FH(\241)p FI(2.0)h FH(\241)p
FI(2.5)g FH(\241)p FI(3.0)2910 4763 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-85.35823 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2910
4763 a
tx@Dict begin { -51.21501 28.45274 } PutCoor PutBegin  end
 2910 4763 a 1 0 0 TeXcolorrgb 57 x FK(distance)18
b FG(\306)f FK(4)p 0 TeXcolorgray 2910 4763 a
tx@Dict begin  PutEnd  end
 2910 4763
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2910 4763 a
tx@Dict begin { 51.21501 28.45274 } PutCoor PutBegin  end
 2910 4763 a 1 0 0
TeXcolorrgb 57 x FK(distance)h FG(\306)f FK(4)p 0 TeXcolorgray
2910 4763 a
tx@Dict begin  PutEnd  end
 2910 4763 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -85.35823
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4273 4860 a
currentpoint initclip moveto
 4273 4860 a 2095
5088 a FK(On)g(voit)h(qu)n('il)h(y)d(a)i(deux)f(solutions)i(:)h
FB(x)f FG(\306)c FK(5)i(et)j FB(x)g FG(\306)14 b(\241)p
FK(3.)-246 5188 y
SDict begin H.S end
 -246 5188 a -246 5188 a
SDict begin 12 H.A end
 -246 5188 a
-246 5188 a
SDict begin [/View [/XYZ H.V]/Dest (Item.62) cvn /DEST pdfmark end
 -246 5188 a 0 TeXcolorgray -141 5302 a FK(3.)p
0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o('\351quation)i
FG(j)r FB(x)15 b FG(\305)10 b FK(2)p FG(j)16 b(\306)e
FK(2.)p 0 TeXcolorgray 1909 5895 a(15)p 0 TeXcolorgray
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FL(M\351thode)16 b(n\2601)f(:)i(av)o(ec)d(la)
h(d\351\002nition)h(de)g(la)f(v)o(aleur)f(absolue.)-38
-3 y FK(Les)k(nombr)o(es)f(dont)h(la)f(valeur)h(absolue)g(vaut)g(2)g
(sont)g(2)f(et)h FG(\241)p FK(2.)-38 109 y(Donc)f(dir)o(e)f(que)823
209 y FG(j)r FB(x)f FG(\305)10 b FK(2)p FG(j)16 b(\306)e
FK(2)-38 354 y(r)o(evient)k(\340)f(dir)o(e)g(que)410
528 y FB(x)e FG(\305)10 b FK(2)16 b FG(\306)e FK(2)146
b(ou)18 b(que)149 b FB(x)15 b FG(\305)10 b FK(2)15 b
FG(\306)f(\241)p FK(2)-38 716 y(Donc)244 1003 y FB(x)h
FG(\305)363 1019 y FA(\001)363 1003 y FK(2)c FG(\241)479
1019 y FA(\001)479 1003 y FK(2)k FG(\306)f FK(2)c FG(\241)g
FK(2)148 b(ou)166 b FB(x)15 b FG(\305)1281 1019 y FA(\001)1281
1003 y FK(2)c FG(\241)1397 1019 y FA(\001)1397 1003 y
FK(2)k FG(\306)f(\241)p FK(2)c FG(\241)g FK(2)244 1128
y FB(x)20 b FG(\306)14 b FK(0)494 b(ou)166 b FB(x)19
b FG(\306)14 b(\241)p FK(4)-38 1440 y(C)o(onclusion)19
b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h FB(x)f
FG(\306)14 b FK(0)k(et)i FB(x)f FG(\306)14 b(\241)p FK(4.)p
0 TeXcolorgray 2050 1458 9 1705 v 0 TeXcolorgray 2095
-163 a FL(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
3 y FK(Il)i(y)g(a)g(une)h(vr)o(aie)g(dif\002cult\351)g(:)g(l)o
('\351galit\351)h FG(j)r FB(x)c FG(\305)10 b FK(2)p FG(j)15
b(\306)g FK(2)i(se)h(r\351\351cr)q(it)2902 186 y FG(j)r
FB(x)d FG(\241)10 b FK(\()p FG(\241)p FK(2\))p FG(j)15
b(\306)f FK(2)2095 370 y(\(il)26 b(faut)h(absolument)g(fair)o(e)f
(appar)o(a\356tr)o(e)h(un)f(\253)16 b FG(\241)g FK(\273)51
b(pour)27 b(pouvoir)2095 469 y(interpr\351ter)19 b(en)f(ter)q(mes)g(de)
f(distance\).)h(Donc)e(dir)o(e)h(que)2956 653 y FG(j)r
FB(x)e FG(\305)10 b FK(2)p FG(j)16 b(\306)e FK(2)2095
836 y(r)o(evient)k(\340)g(dir)o(e)e(que)i(la)g(distance)g(entr)o(e)h
FB(x)k FK(et)17 b FG(\241)p FK(2)h(est)g(\351gale)g(\340)f(2.)p
0 TeXcolorgray 0 TeXcolorgray 2445 1280 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 162.71454 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2445 1280 a
3496 1183 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 36.09993  0 -126.61461  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -126.61461
 36.09993  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 36.09993
0.0 -126.61461 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3481 1280 a FI(0)64 b(0.5)-334
b FH(\241)p FI(0.5)-237 b FH(\241)p FI(1.0)g FH(\241)p
FI(1.5)f FH(\241)p FI(2.0)h FH(\241)p FI(2.5)g FH(\241)p
FI(3.0)g FH(\241)p FI(3.5)g FH(\241)p FI(4.0)3496 1183
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-113.81097 14.22636 -85.35823 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 14.22636 -85.35823 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3496 1183 a
tx@Dict begin { -99.5846 28.45274 } PutCoor PutBegin  end
 3496 1183 a 1 0 0
TeXcolorrgb 57 x FK(dist.)18 b FG(\306)f FK(2)p 0 TeXcolorgray
3496 1183 a
tx@Dict begin  PutEnd  end
 3496 1183 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 14.22636 -28.45274 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 14.22636 -28.45274 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3496 1183 a
tx@Dict begin { -42.67911 28.45274 } PutCoor PutBegin  end
 3496
1183 a 1 0 0 TeXcolorrgb 57 x FK(dist.)h FG(\306)f FK(2)p
0 TeXcolorgray 3496 1183 a
tx@Dict begin  PutEnd  end
 3496 1183 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ -56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 0.0 0.0 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3796 1280 a
currentpoint initclip moveto
 3796
1280 a 2095 1440 a FK(On)g(voit)h(qu)n('il)h(y)d(a)i(deux)f(solutions)i
(:)h FB(x)f FG(\306)c FK(0)i(et)j FB(x)g FG(\306)14 b(\241)p
FK(4.)-246 1539 y
SDict begin H.S end
 -246 1539 a -246 1539 a
SDict begin 12 H.A end
 -246 1539 a
-246 1539 a
SDict begin [/View [/XYZ H.V]/Dest (Item.63) cvn /DEST pdfmark end
 -246 1539 a 0 TeXcolorgray -141 1654 a FK(4.)p
0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o('\351quation)i
FG(j)r FB(x)15 b FG(\241)10 b FK(2)p FG(j)16 b(\306)e(j)r
FB(x)h FG(\241)10 b FK(6)p FG(j)p FK(.)-38 1768 y(C)o(onfor)q
(m\351ment)25 b(\340)d(l)o('indication,)j(on)e(tr)o(availle)h(avec)f
(la)g(distance)g(:)g(dir)o(e)f(que)h FG(j)r FB(x)18 b
FG(\241)12 b FK(2)p FG(j)21 b(\306)e(j)r FB(x)f FG(\241)12
b FK(6)p FG(j)p FK(,)24 b(c)n('est)g(dir)o(e)e(que)h(la)g(distance)g
(entr)o(e)i FB(x)j FK(et)-38 1867 y(2)22 b(est)h(la)f(m\352me)h(que)g
(la)f(distance)h(entr)o(e)h FB(x)j FK(et)22 b(6.)h(A)n(utr)o(ement)f
(dit,)j FB(x)i FK(est)22 b(\340)g(\351gale)h(distance)f(de)g(2)g(et)h
(de)e(6.)i(Il)e(y)h(a)f(un)i(seul)g(nombr)o(e)h FB(x)j
FK(qui)-38 1967 y(convienne)19 b(:)e(le)h(milieu)h(de)e(l)o('inter)q
(valle)1184 1968 y([)1209 1967 y(2;)8 b(6)1317 1968 y(])1352
1967 y(,)17 b(c)n('est-\340-dir)o(e)i FB(x)h FG(\306)14
b FK(4.)p 0 TeXcolorgray 0 TeXcolorgray 1345 2402 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 170.71646 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1345
2402 a 1109 2305 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 199.1692  0 28.45274  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 28.45274
 199.1692  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 28.45274 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1094 2402 a FI(0)64
b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)g(3.0)g(3.5)g(4.0)g(4.5)h(5.0)f(5.5)g
(6.0)g(6.5)-1494 b(0.5)41 b(1.0)1109 2305 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
170.71646 14.22636 128.03734 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 14.22636 128.03734 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1109 2305 a
tx@Dict begin { 51.21501 28.45274 } PutCoor PutBegin  end
 1109 2305 a 1 0 0 TeXcolorrgb 57 x FK(4)18
b(est)g(\340)f(\351gale)g(distance)h(de)f(2)h(et)g(6)p
0 TeXcolorgray 1109 2305 a
tx@Dict begin  PutEnd  end
 1109 2305 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 71.13185 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 14.22636 71.13185 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2762 2402 a
currentpoint initclip moveto
 2762 2402 a -38 2560 a FK(C)o(onclusion)h(:)f(il)f(y)g(a)g
(une)h(seule)h(solution,)i FB(x)f FG(\306)14 b FK(4.)-246
2645 y
SDict begin H.S end
 -246 2645 a -246 2645 a
SDict begin 12 H.A end
 -246 2645 a -246 2645
a
SDict begin [/View [/XYZ H.V]/Dest (exo.34) cvn /DEST pdfmark end
 -246 2645 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)g(34)p
0 TeXcolorgray 41 w FK(C)o(ommen\347ons)20 b(par)d(deux)h(exemples)h(:)
p 0 TeXcolorgray -76 2859 a(\225)p 0 TeXcolorgray 42
w(si)g FB(x)h FG(\306)14 b FK(3,)k(alors)463 2788 y FG(p)p
526 2788 82 5 v 528 2859 a FB(x)572 2835 y FI(2)622 2859
y FG(\306)691 2788 y(p)p 755 2788 76 5 v 71 x FK(3)795
2835 y FI(2)844 2859 y FG(\306)914 2794 y(p)p 977 2794
41 5 v 977 2859 a FK(9)d FG(\306)f FK(3.)p 0 TeXcolorgray
-76 2958 a(\225)p 0 TeXcolorgray 42 w(si)19 b FB(x)h
FG(\306)14 b(\241)p FK(3,)k(alors)518 2888 y FG(p)p 581
2888 82 5 v 583 2958 a FB(x)627 2934 y FI(2)677 2958
y FG(\306)746 2885 y Ft(p)p 822 2885 184 5 v 73 x FK(\()p
FG(\241)p FK(3\))971 2934 y FI(2)1021 2958 y FG(\306)1090
2893 y(p)p 1153 2893 41 5 v 1153 2958 a FK(9)d FG(\306)f
FK(3.)-246 3058 y(On)19 b(compr)o(end)f(que)h(quand)i
FB(x)i FK(est)c(positif,)i(on)d(aur)o(a)h(toujours)1678
2987 y FG(p)p 1742 2987 82 5 v 1744 3058 a FB(x)1788
3034 y FI(2)1838 3058 y FG(\306)f FB(x)i FG(\306)c(j)r
FB(x)5 b FG(j)19 b FK(;)f(tandis)h(que)g(dans)f(le)h(cas)g(o\371)h
FB(x)k FK(est)19 b(n\351gatif,)g(le)g(signe)g FG(\241)f
FK(\253)c(dispa-)-246 3157 y(r)o(a\356t)g(\273)35 b(lorsqu)n('on)18
b(\351l\350ve)g(au)g(carr\351,)f(ce)g(qui)h(donne)g(\002nalement)1674
3087 y FG(p)p 1737 3087 V 1739 3157 a FB(x)1783 3134
y FI(2)1833 3157 y FG(\306)c(j)r FB(x)5 b FG(j)p FK(.)-246
3257 y(A)n(utr)o(ement)18 b(dit,)g(quel)g(que)g(soit)i
FB(x)j FK(\(y)16 b(compr)q(is)i(si)i FB(x)g FG(\306)14
b FK(0\),)k(on)f(a)g(l)o('\351galit\351)1775 3374 y Ft(p)p
1851 3374 V 1853 3456 a FB(x)1897 3432 y FI(2)1947 3456
y FG(\306)d(j)r FB(x)5 b FG(j)p FK(.)-246 3535 y
SDict begin H.S end
 -246
3535 a -246 3535 a
SDict begin 12 H.A end
 -246 3535 a -246 3535 a
SDict begin [/View [/XYZ H.V]/Dest (exo.35) cvn /DEST pdfmark end
 -246 3535
a -246 3553 a
SDict begin H.S end
 -246 3553 a -246 3553 a
SDict begin 12 H.A end
 -246 3553 a -246
3553 a
SDict begin [/View [/XYZ H.V]/Dest (Item.64) cvn /DEST pdfmark end
 -246 3553 a 0 TeXcolorgray 103 x FL(Ex)o(er)o(cice)14
b(35)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(Dir)o(e)19 b(que)h FG(j)r FB(x)d FG(\241)11
b FK(2)p FG(j)18 b(\307)g FK(3,)i(c)n('est)h(dir)o(e)f(que)g(la)h
(distance)g(entr)o(e)h FB(x)j FK(et)c(2)g(est)f(str)q(ictement)i
(inf\351r)q(ieur)o(e)f(\340)f(3.)h(On)f(voit)h(que)f(les)j
FB(x)j FK(qui)-38 3755 y(conviennent)20 b(sont)e(tous)g(les)g(nombr)o
(es)f(de)g(l)o('inter)q(valle)1674 3756 y(])1700 3755
y FG(\241)p FK(1;)8 b(5)1863 3756 y([)1906 3755 y(\(extr\351mit\351s)19
b(ex)o(clues)o(,)h(puisque)f(l)o('in\351galit\351)g(est)f(str)q
(icte\).)p 0 TeXcolorgray 0 TeXcolorgray 1201 4198 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 205.39366 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end

1201 4198 a 1544 4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -41.25638  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -41.25638
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -41.25638 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1529 4198 a FI(0)63
b(0.5)41 b(1.0)h(1.5)f(2.0)g(2.5)g(3.0)g(3.5)g(4.0)g(4.5)g(5.0)-1397
b FH(\241)p FI(0.5)-237 b FH(\241)p FI(1.0)1544 4101
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544 4101 a
tx@Dict begin { -8.5359 28.45274 } PutCoor PutBegin  end
 1544 4101 a 1 0 0
TeXcolorrgb 57 x FK(distance)18 b FG(\306)f FK(3)p 0
TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544
4101 a
tx@Dict begin { 76.82231 28.45274 } PutCoor PutBegin  end
 1544 4101 a 1 0 0 TeXcolorrgb 57 x FK(distance)h
FG(\306)f FK(3)p 0 TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 -28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544 4101 a
tx@Dict begin { 138.84952 9.10507 } PutCoor PutBegin  end

1544 4101 a 0 1 0 TeXcolorrgb 134 x Fl([)p 0 TeXcolorgray
1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101 a 1544 4101 a
tx@Dict begin { -31.86693 9.10507 } PutCoor PutBegin  end
 1544 4101 a 0 1 0
TeXcolorrgb 134 x Fl(])p 0 TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544
4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2906 4198
a
currentpoint initclip moveto
 2906 4198 a -246 4242 a
SDict begin H.S end
 -246 4242 a -246 4242 a
SDict begin 12 H.A end
 -246
4242 a -246 4242 a
SDict begin [/View [/XYZ H.V]/Dest (Item.65) cvn /DEST pdfmark end
 -246 4242 a 0 TeXcolorgray -141 4356
a FK(2.)p 0 TeXcolorgray 43 w(Les)24 b(points)g(de)f(l)o('inter)q
(valle)j(ci-dessous)e(sont)g(les)g(nombr)o(es)h FB(x)j
FK(dont)23 b(la)h(distance)f(\340)g(8)h(est)f(inf\351r)q(ieur)o(e)h(ou)
f(\351gale)h(\340)f(2)g(\(donc)g(extr\351mit\351s)-38
4456 y(incluses\))9 b(;)19 b(autr)o(ement)f(dit,)g(ce)f(sont)h(les)g
(nombr)o(es)h FB(x)k FK(tels)18 b(que)1879 4638 y FG(j)r
FB(x)d FG(\241)10 b FK(8)p FG(j)16 b(\267)e FK(2.)p 0
TeXcolorgray 0 TeXcolorgray 1109 5119 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 227.62195 a add def
/d 0.0 a add neg def /h 45.52455 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1109 5119 a 164
5001 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 341.43292  0 113.81097  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 113.81097
 341.43292  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-14.22636  def /maxTickline 14.79555  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 341.43292
0.0 113.81097 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 149 5098 a FI(0)205 b(1)g(2)g(3)h(4)f(5)g(6)g
(7)g(8)h(9)189 b(10)175 b(11)-2409 b(1)205 b(2)g(3)h(4)164
5001 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 284.52744 0.0 170.71646
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 164 5001
a
tx@Dict begin { 167.30226 7.96672 } PutCoor PutBegin  end
 164 5001 a 0 1 0 TeXcolorrgb 112 x Fk([)p 0 TeXcolorgray
164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a 164 5001 a
tx@Dict begin { 281.11324 7.96672 } PutCoor PutBegin  end
 164 5001 a 0 1 0 TeXcolorrgb
112 x Fk(])p 0 TeXcolorgray 164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
284.52744 14.22636 241.84831 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
227.62195 14.22636 241.84831 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
164 5001 a
tx@Dict begin { 179.25237 28.45274 } PutCoor PutBegin  end
 164 5001 a 1 0 0 TeXcolorrgb 57 x FK(dist.)18
b FG(\306)f FK(2)p 0 TeXcolorgray 164 5001 a
tx@Dict begin  PutEnd  end
 164 5001
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
170.71646 14.22636 184.94283 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
227.62195 14.22636 184.94283 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 164 5001 a
tx@Dict begin { 233.31241 28.45274 } PutCoor PutBegin  end
 164 5001 a 1 0 0
TeXcolorrgb 57 x FK(dist.)h FG(\306)f FK(2)p 0 TeXcolorgray
164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 227.62195
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2999 5119 a
currentpoint initclip moveto
 2999 5119 a -246 5186 a
SDict begin H.S end
 -246 5186 a -246
5186 a
SDict begin 12 H.A end
 -246 5186 a -246 5186 a
SDict begin [/View [/XYZ H.V]/Dest (exo.36) cvn /DEST pdfmark end
 -246 5186 a 0 TeXcolorgray
133 x FL(Ex)o(er)o(cice)d(36)p 0 TeXcolorgray 41 w FK(Le)23
b(but)f(de)g(l)o('exer)o(cice)h(est)g(de)f(prouver)h(que)1569
5254 y FG(p)p 1632 5254 41 5 v 1632 5319 a FK(2)g(n)-6
b('est)23 b(pas)g(un)f(nombr)o(e)h(r)o(ationnel.)h(P)n(our)d(cela,)i
(on)f(fait)h(un)g(r)o(aisonnement)i(par)-246 5418 y(l)o('absur)o(de)18
b(:)f(on)g(suppose)i(que)691 5353 y FG(p)p 754 5353 V
754 5418 a FK(2)f(est)g(r)o(ationnel,)g(c)n('est-\340-dir)o(e)f(qu)n
('on)h(peut)g(l)o('\351cr)q(ir)o(e)f(sous)h(for)q(me)g(de)f(fr)o
(action)g(irr\351ductible)3551 5353 y FG(p)p 3615 5353
V 65 x FK(2)d FG(\306)3749 5376 y Fw(p)p 3748 5399 40
5 v 3750 5447 a(q)3798 5418 y FK(,)k(o\371)h FB(p)j FK(et)e
FB(q)-246 5526 y FK(sont)e(deux)g(entiers)g(str)q(ictement)h(positifs)o
(.)g(Il)e(faut,)h(par)q(tant)g(de)f(l\340,)h(aboutir)f(\340)g(une)h
(absur)o(dit\351.)p 0 TeXcolorgray 1909 5895 a(16)p 0
TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.66) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(1.)p 0 TeXcolorgray 43 w(On)17 b(par)q(t)g(de)g(l)o
('\351galit\351)633 -228 y FG(p)p 697 -228 41 5 v 65
x FK(2)e FG(\306)832 -205 y Fw(p)p 831 -182 40 5 v 833
-134 a(q)881 -163 y FK(,)i(on)h(\351l\350ve)g(au)f(carr\351)g(et)h(on)f
(multiplie)j(par)g FB(q)2227 -193 y FI(2)2293 -163 y
FK(:)1840 87 y FG(p)p 1903 87 41 5 v 1903 156 a FK(2)1944
103 y FI(2)1993 156 y FG(\306)2062 46 y Ft(\265)2108
100 y FB(p)p 2106 137 53 5 v 2109 213 a(q)2169 46 y Ft(\266)2203
67 y FI(2)1938 359 y FK(2)15 b FG(\306)2074 303 y FB(p)p
2072 340 V 2075 416 a(q)2145 359 y FG(\243)2222 303 y
FB(p)p 2220 340 V 2223 416 a(q)1938 593 y FK(2)g FG(\306)2074
537 y FB(p)2125 507 y FI(2)p 2072 574 88 5 v 2075 650
a FB(q)2124 626 y FI(2)1797 827 y FK(2)p 1 0 0 TeXcolorrgb
FG(\243)r FB(q)1943 793 y FI(2)p 0 TeXcolorgray 1993
827 a FG(\306)2074 771 y FB(p)2125 741 y FI(2)p 2072
808 V 2064 926 a FA(\000)2085 904 y(\000)2075 899 y FB(q)2124
869 y FI(2)p 1 0 0 TeXcolorrgb 2169 827 a FG(\243)2226
854 y FA(\023)2246 829 y(\023)2226 827 y FB(q)2275 793
y FI(2)p 0 TeXcolorgray 1852 1024 a FK(2)r FB(q)1943
990 y FI(2)1993 1024 y FG(\306)h FB(p)2115 990 y FI(2)-246
1124 y
SDict begin H.S end
 -246 1124 a -246 1124 a
SDict begin 12 H.A end
 -246 1124 a -246 1124
a
SDict begin [/View [/XYZ H.V]/Dest (Item.67) cvn /DEST pdfmark end
 -246 1124 a 0 TeXcolorgray -141 1207 a FK(2.)p 0 TeXcolorgray
43 w(C)o(ommen\347ons)i(par)e(un)h(exemple)h(:)e(pr)o(enons)h(un)g
(nombr)o(e)f(qui)h(\253)c(se)j(ter)q(mine)h(par)f(4)d(\273)32
b(\(donc)16 b(le)g(chiffr)o(e)h(des)f(unit\351s)i(est)f(4\).)f(Le)h
(carr\351)f(de)g(ce)-38 1306 y(nombr)o(e)h(va)g(\253)d(se)j(ter)q
(miner)h(par)g(6)c(\273,)j(puisque)i(4)1403 1276 y FI(2)1453
1306 y FG(\306)14 b FK(16.)19 b(A)n(utr)o(ement)f(dit,)f(le)h(chiffr)o
(e)g(des)f(unit\351s)i(du)e(carr\351)g(est)h(6.)-38 1418
y(A)-5 b(vec)15 b(la)h(m\352me)h(technique)o(,)g(on)f(voit)g(que)g(si)g
(le)f(chiffr)o(e)h(des)g(unit\351s)h(est)f(9,)g(celui)h(du)e(carr\351)g
(est)h(1)g(\(puisque)h(9)3182 1388 y FI(2)3231 1418 y
FG(\306)e FK(81\))9 b(;)16 b(etc)o(.)g(On)f(r)o(emplit)i(ainsi)-38
1518 y(le)h(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray
878 1580 2352 4 v 878 1679 4 100 v 931 1650 a(Chiffr)o(e)g(des)g
(unit\351s)g(de)h FB(p)p 1792 1679 V 144 w FK(0)p 1935
1679 V 103 w(1)p 2079 1679 V 104 w(2)p 2222 1679 V 103
w(3)p 2366 1679 V 104 w(4)p 2509 1679 V 103 w(5)p 2653
1679 V 104 w(6)p 2796 1679 V 103 w(7)p 2939 1679 V 104
w(8)p 3083 1679 V 103 w(9)p 3226 1679 V 878 1683 2352
4 v 878 1782 4 100 v 931 1753 a(Chiffr)o(e)f(des)g(unit\351s)g(de)h
FB(p)1707 1722 y FI(2)p 1792 1782 V 1845 1753 a FK(0)p
1935 1782 V 103 w(1)p 2079 1782 V 104 w(4)p 2222 1782
V 103 w(9)p 2366 1782 V 104 w(6)p 2509 1782 V 103 w(5)p
2653 1782 V 104 w(6)p 2796 1782 V 103 w(9)p 2939 1782
V 104 w(4)p 3083 1782 V 103 w(1)p 3226 1782 V 878 1786
2352 4 v -246 1823 a
SDict begin H.S end
 -246 1823 a -246 1823 a
SDict begin 12 H.A end
 -246 1823
a -246 1823 a
SDict begin [/View [/XYZ H.V]/Dest (Item.68) cvn /DEST pdfmark end
 -246 1823 a 0 TeXcolorgray -141 1913 a
FK(3.)p 0 TeXcolorgray 43 w(P)n(our)f(avoir)h(le)g(chiffr)o(e)g(des)f
(unit\351s)i(de)f(2)r FB(q)1221 1883 y FI(2)1256 1913
y FK(,)g(il)g(suf\002t)g(de)f(r)o(epr)o(endr)o(e)g(la)g(deuxi\350me)j
(ligne)e(du)f(tableau)h(pr\351c\351dent)h(et)f(de)f(multiplier)j(par)e
(2.)-38 2013 y(P)m(ar)f(exemple)o(,)j(si)e(le)h(chiffr)o(e)f(des)g
(unit\351s)h(de)h FB(q)k FK(est)19 b(7,)h(alors)f(celui)h(de)g
FB(q)2087 1982 y FI(2)2141 2013 y FK(est)f(9)h(;)f(et)g(celui)h(de)f(2)
r FB(q)2822 1982 y FI(2)2875 2013 y FK(est)h(8)f(\(puisque)i(2)11
b FG(\243)g FK(9)16 b FG(\306)g FK(18\).)k(On)e(r)o(emplit)-38
2112 y(ainsi)g(le)g(nouveau)g(tableau)g(:)p 0 TeXcolorgray
0 TeXcolorgray 859 2174 2391 4 v 859 2274 4 100 v 912
2244 a(Chiffr)o(e)g(des)f(unit\351s)i(de)g FB(q)p 1811
2274 V 184 w FK(0)p 1955 2274 V 104 w(1)p 2098 2274 V
103 w(2)p 2241 2274 V 104 w(3)p 2385 2274 V 103 w(4)p
2528 2274 V 104 w(5)p 2672 2274 V 103 w(6)p 2815 2274
V 103 w(7)p 2959 2274 V 104 w(8)p 3102 2274 V 103 w(9)p
3246 2274 V 859 2277 2391 4 v 859 2377 4 100 v 912 2347
a(Chiffr)o(e)f(des)f(unit\351s)i(de)e(2)r FB(q)1726 2317
y FI(2)p 1811 2377 V 1864 2347 a FK(0)p 1955 2377 V 104
w(2)p 2098 2377 V 103 w(8)p 2241 2377 V 104 w(8)p 2385
2377 V 103 w(2)p 2528 2377 V 104 w(0)p 2672 2377 V 103
w(2)p 2815 2377 V 103 w(8)p 2959 2377 V 104 w(8)p 3102
2377 V 103 w(2)p 3246 2377 V 859 2380 2391 4 v -246 2417
a
SDict begin H.S end
 -246 2417 a -246 2417 a
SDict begin 12 H.A end
 -246 2417 a -246 2417 a
SDict begin [/View [/XYZ H.V]/Dest (Item.69) cvn /DEST pdfmark end
 -246
2417 a 0 TeXcolorgray -141 2507 a FK(4.)p 0 TeXcolorgray
43 w(D)o('apr\350s)k(la)g(question)i(1,)f(2)r FB(q)831
2477 y FI(2)884 2507 y FG(\306)e FB(p)1010 2477 y FI(2)1045
2507 y FK(.)h(Les)h(nombr)o(es)g(2)r FB(q)1644 2477 y
FI(2)1700 2507 y FK(et)i FB(p)1840 2477 y FI(2)1895 2507
y FK(\351tant)e(\351gaux,)g(ils)g(ont)g(le)f(m\352me)i(chiffr)o(e)f
(des)f(unit\351s)o(.)h(Or)f(dans)h(nos)f(deux)-38 2607
y(tableaux,)e(le)f(seul)h(chiffr)o(e)f(en)g(commun)h(des)f
(deuxi\350mes)h(lignes)g(est)f(le)g(0)g(;)g(et)g(on)g(l)o('obtient)i
(lorsque)e(le)h(chiffr)o(e)f(des)g(unit\351s)h(de)g FB(p)k
FK(est)c(0,)f(et)-38 2706 y(lorsque)g(le)g(chiffr)o(e)g(des)f
(unit\351s)i(de)g FB(q)k FK(est)18 b(0)g(ou)f(5.)-246
2738 y
SDict begin H.S end
 -246 2738 a -246 2738 a
SDict begin 12 H.A end
 -246 2738 a -246 2738
a
SDict begin [/View [/XYZ H.V]/Dest (Item.70) cvn /DEST pdfmark end
 -246 2738 a 0 TeXcolorgray -141 2831 a FK(5.)p 0 TeXcolorgray
43 w(S)n(upposons)25 b(que)518 2766 y FG(p)p 582 2766
41 5 v 65 x FK(2)e(soit)g(r)o(ationnel)h(:)f(on)g(peut)g(donc)g(l)o
('\351cr)q(ir)o(e)f(sous)i(for)q(me)e(de)h(fr)o(action)g
(irr\351ductible)3167 2766 y FG(p)p 3231 2766 V 65 x
FK(2)d FG(\306)3376 2788 y Fw(p)p 3375 2812 40 5 v 3377
2859 a(q)3425 2831 y FK(.)j(D)o('apr\350s)f(la)h(question)-38
2939 y(pr\351c\351dente)o(,)18 b FB(p)j FK(se)16 b(ter)q(mine)g(par)g
(0)f(et)j FB(q)j FK(se)16 b(ter)q(mine)g(par)g(0)g(ou)f(5.)h(M)o(ais)g
(alors)i FB(p)j FK(et)d FB(q)j FK(sont)16 b(tous)g(deux)g(multiples)i
(de)d(5,)h(et)g(donc)f(la)h(fr)o(action)-27 2996 y Fw(p)p
-28 3019 V -26 3067 a(q)39 3039 y FK(n)-6 b('est)18 b(pas)g
(irr\351ductible)o(,)g(en)f(contr)o(adiction)h(avec)g(l)o
('hypoth\350se)i(que)e(nous)g(avons)g(faite)g(au)f(d\351par)q(t.)-38
3221 y(C)o(onclusion)i(:)f(supposant)h(que)940 3156 y
FG(p)p 1003 3156 41 5 v 1003 3221 a FK(2)f(\351tait)g(r)o(ationnel,)h
(on)f(aboutit)g(\340)f(une)h(absur)o(dit\351)9 b(;)17
b(c)n('est)h(donc)f(que)3056 3156 y FG(p)p 3119 3156
V 3119 3221 a FK(2)h(est)g(irr)o(ationnel)h(:)3716 3156
y FG(p)p 3780 3156 V 65 x FK(2)14 b FG(\335)h Fm(Q)p
FK(.)-246 3364 y
SDict begin H.S end
 -246 3364 a -246 3364 a
SDict begin 12 H.A end
 -246 3364 a
-246 3364 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -246 3364 a 132 x FM(3)105 b(G\351om\351tr)q(ie)23
b(r)n(ep\351r\351e)-246 3605 y
SDict begin H.S end
 -246 3605 a -246 3605
a
SDict begin 12 H.A end
 -246 3605 a -246 3605 a
SDict begin [/View [/XYZ H.V]/Dest (exo.37) cvn /DEST pdfmark end
 -246 3605 a -246 3593 a
SDict begin H.S end
 -246
3593 a -246 3593 a
SDict begin 12 H.A end
 -246 3593 a -246 3593 a
SDict begin [/View [/XYZ H.V]/Dest (Item.71) cvn /DEST pdfmark end
 -246 3593
a 0 TeXcolorgray 87 x FL(Ex)o(er)o(cice)14 b(37)p 0 TeXcolorgray
0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 934 5208 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 269.73187 a add def
/d 0.0 a add neg def /h 176.97607 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 934 5208 a 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 147.385 0.0 -122.34688 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 77.96066 0.0 -99.01541   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 147.385  0 -122.34688  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 147.385  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.01541  def /maxTickline 77.96066  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.96066
0.0 -99.01541   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 147.385
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 77.96066  0 -99.01541  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -99.01541
 77.96066  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 147.385  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.96066
0.0 -99.01541   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 147.385
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1935 4483 a FI(0)205 b(1)g(2)g(3)g(4)-1233 b FH(\241)p
FI(1)-309 b FH(\241)p FI(2)g FH(\241)p FI(3)g FH(\241)p
FI(4)1861 4405 y(0)1819 4641 y FH(\241)p FI(1)1819 4877
y FH(\241)p FI(2)1819 5113 y FH(\241)p FI(3)1861 4169
y(1)1861 3933 y(2)1950 4386 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 71.13185 0.0 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 46.20705 27.54231 51.67001
31.63943   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 47.91458 25.26604 53.37755
29.36316   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -56.90549 71.13185
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 88.88615 -29.36316 94.34912
-25.26604   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 90.59369 -31.63943 96.05666
-27.54231   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 -14.22636 -113.81097
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -73.31783 18.71638 -68.94588
23.9627   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -85.35823 -28.45274
-14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 12.04039 -52.41545 16.41234
-47.16913   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1950
4386 a 0.30196 0.30196 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1950 4386 a
tx@Dict begin { 116.08723 -51.21501 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1 TeXcolorrgb
FB(B)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 71.13185
0.0   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 73.40813 4.55254 } PutCoor PutBegin  end
 1950 4386 a 0 1 0
TeXcolorrgb 2 w FB(I)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950
4386 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -113.81097 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386
a
tx@Dict begin { -111.5347 62.59595 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1 TeXcolorrgb 1948 4385
a FB(C)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 59.18175 -79.66776 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1
TeXcolorrgb FB(D)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -28.45274
-14.22636   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { -36.98865 -21.05518 } PutCoor PutBegin  end

1950 4386 a 0 1 0 TeXcolorrgb 1955 4377 a FB(J)p 0 TeXcolorgray
1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a 3173 5208 a
currentpoint initclip moveto
 3173 5208 a -246
5245 a
SDict begin H.S end
 -246 5245 a -246 5245 a
SDict begin 12 H.A end
 -246 5245 a -246 5245
a
SDict begin [/View [/XYZ H.V]/Dest (Item.72) cvn /DEST pdfmark end
 -246 5245 a 0 TeXcolorgray 10 5357 a FK(\(a\))p 0 TeXcolorgray
41 w(On)17 b(a)23 b FB(A)s FK(\()15 b(1)409 5403 y Fw(x)444
5413 y Fh(A)496 5357 y FK(;)41 b(2)544 5403 y Fw(y)577
5413 y Fh(A)613 5357 y FK(\))16 b(et)i FB(B)7 b FK(\()16
b(4)822 5403 y Fw(x)854 5413 y Fh(B)910 5357 y FK(;)26
b FG(\241)p FK(2)971 5403 y Fw(y)1001 5413 y Fh(B)1051
5357 y FK(\).)17 b(On)g(calcule)i(les)f(coor)o(donn\351es)f(de)i
FB(I)42 b FK(:)983 5617 y FB(I)1027 5530 y Ft(\263)1071
5561 y FB(x)1116 5573 y Fw(A)1170 5561 y FG(\305)12 b
FB(x)1278 5573 y Fw(B)p 1069 5598 257 5 v 1177 5674 a
FK(2)1336 5617 y(;)1378 5561 y FB(y)1421 5573 y Fw(A)1475
5561 y FG(\305)i FB(y)1583 5573 y Fw(B)p 1374 5598 256
5 v 1482 5674 a FK(2)1640 5530 y Ft(\264)1828 5617 y
FB(I)1872 5507 y Ft(\265)1916 5561 y FK(1)c FG(\305)g
FK(4)p 1916 5598 157 5 v 1974 5674 a(2)2082 5617 y(;)2121
5561 y(2)g FG(\305)g FK(\()p FG(\241)p FK(2\))p 2121
5598 265 5 v 2233 5674 a(2)2395 5507 y Ft(\266)2586 5617
y FB(I)2630 5507 y Ft(\265)2675 5561 y FK(5)p 2675 5598
41 5 v 2675 5674 a(2)2725 5617 y(;)2763 5561 y(0)p 2763
5598 V 2763 5674 a(2)2814 5507 y Ft(\266)3004 5617 y
FB(I)3048 5618 y FK(\()3075 5617 y(2,)e(5;)g(0)3251 5618
y(\))3289 5617 y(.)p 0 TeXcolorgray 1909 5895 a(17)p
0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.73) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 4 -163
a FK(\(b\))p 0 TeXcolorgray 635 -33 a FB(A)s(B)22 b FG(\306)825
-136 y Ft(q)p 902 -136 771 5 v 902 -32 a FK(\()930 -33
y FB(x)971 -21 y Fw(B)1029 -33 y FG(\241)12 b FB(x)1141
-21 y Fw(A)1185 -32 y FK(\))1211 -62 y FI(2)1257 -33
y FG(\305)1322 -97 y Ft(\241)1355 -33 y FB(y)1394 -21
y Fw(B)1451 -33 y FG(\241)i FB(y)1563 -21 y Fw(A)1607
-97 y Ft(\242)1637 -76 y FI(2)1686 -33 y FG(\306)1755
-136 y Ft(q)p 1831 -136 620 5 v 104 x FK(\()1858 -33
y(4)c FG(\241)g FK(1)2013 -32 y(\))2041 -62 y FI(2)2086
-33 y FG(\305)2151 -32 y FK(\()2178 -33 y FG(\241)p FK(2)g
FG(\241)g FK(2)2388 -32 y(\))2416 -62 y FI(2)2465 -33
y FG(\306)2534 -136 y Ft(q)p 2611 -136 335 5 v 2611 -33
a FK(3)2651 -57 y FI(2)2696 -33 y FG(\305)2761 -32 y
FK(\()2788 -33 y FG(\241)p FK(4)2883 -32 y(\))2910 -62
y FI(2)2960 -33 y FG(\306)3029 -102 y(p)p 3092 -102 197
5 v 3092 -33 a FK(9)g FG(\305)g FK(16)16 b FG(\306)3373
-102 y(p)p 3436 -102 82 5 v 3436 -33 a FK(25)f FG(\306)g
FK(5.)-246 48 y
SDict begin H.S end
 -246 48 a -246 48 a
SDict begin 12 H.A end
 -246 48 a -246 48
a
SDict begin [/View [/XYZ H.V]/Dest (Item.74) cvn /DEST pdfmark end
 -246 48 a -246 48 a
SDict begin H.S end
 -246 48 a -246 48 a
SDict begin 12 H.A end
 -246 48 a -246
48 a
SDict begin [/View [/XYZ H.V]/Dest (Item.75) cvn /DEST pdfmark end
 -246 48 a 0 TeXcolorgray -141 131 a FK(2.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w(On)i(a)e
FB(C)9 b FK(\()p FG(\241)p FK(4)421 177 y Fw(x)452 187
y Fh(C)520 131 y FK(;)41 b(2)569 177 y Fw(y)598 187 y
Fh(C)637 131 y FK(\))17 b(et)g FB(D)6 b FK(\()18 b(2)855
177 y Fw(x)887 187 y Fh(D)948 131 y FK(;)25 b FG(\241)p
FK(3)1006 177 y Fw(y)1036 187 y Fh(D)1089 131 y FK(\).)17
b(On)g(calcule)h(les)g(coor)o(donn\351es)g(de)k FB(J)39
b FK(:)839 404 y FB(J)882 316 y Ft(\263)926 347 y FB(x)965
359 y Fw(C)1025 347 y FG(\305)12 b FB(x)1133 359 y Fw(D)p
924 384 263 5 v 1035 461 a FK(2)1197 404 y(;)1239 347
y FB(y)1276 359 y Fw(C)1336 347 y FG(\305)i FB(y)1444
359 y Fw(D)p 1235 384 V 1346 461 a FK(2)1507 316 y Ft(\264)1698
404 y FB(J)1741 294 y Ft(\265)1785 347 y FG(\241)p FK(4)c
FG(\305)g FK(2)p 1785 384 212 5 v 1871 461 a(2)2006 404
y(;)2045 347 y(2)g FG(\305)g FK(\()p FG(\241)p FK(3\))p
2045 384 265 5 v 2157 461 a(2)2319 294 y Ft(\266)2513
404 y FB(J)2556 294 y Ft(\265)2600 347 y FG(\241)p FK(2)p
2600 384 96 5 v 2627 461 a(2)2705 404 y(;)2744 347 y
FG(\241)p FK(1)p 2744 384 V 2771 461 a(2)2849 294 y Ft(\266)3043
404 y FB(J)3086 405 y FK(\()3112 404 y FG(\241)p FK(1;)e
FG(\241)p FK(0,)g(5)3398 405 y(\))3435 404 y(.)-246 557
y
SDict begin H.S end
 -246 557 a -246 557 a
SDict begin 12 H.A end
 -246 557 a -246 557 a
SDict begin [/View [/XYZ H.V]/Dest (Item.76) cvn /DEST pdfmark end
 -246 557
a 0 TeXcolorgray 4 637 a FK(\(b\))p 0 TeXcolorgray 604
767 a FB(C)h(D)20 b FG(\306)810 664 y Ft(q)p 887 664
784 5 v 887 768 a FK(\()916 767 y FB(x)957 779 y Fw(D)1020
767 y FG(\241)12 b FB(x)1126 779 y Fw(C)1176 768 y FK(\))1203
738 y FI(2)1248 767 y FG(\305)1313 702 y Ft(\241)1347
767 y FB(y)1386 779 y Fw(D)1450 767 y FG(\241)i FB(y)1556
779 y Fw(C)1605 702 y Ft(\242)1635 724 y FI(2)1684 767
y FG(\306)1753 663 y Ft(q)p 1830 663 729 5 v 1830 768
a FK(\()1856 767 y(2)c FG(\241)g FK(\()p FG(\241)p FK(4\))2120
768 y(\))2148 737 y FI(2)2193 767 y FG(\305)2258 768
y FK(\()2285 767 y FG(\241)p FK(3)g FG(\241)g FK(2)2495
768 y(\))2523 738 y FI(2)2572 767 y FG(\306)2641 664
y Ft(q)p 2717 664 335 5 v 103 x FK(6)2757 743 y FI(2)2803
767 y FG(\305)2868 768 y FK(\()2895 767 y FG(\241)p FK(5)2990
768 y(\))3017 738 y FI(2)3066 767 y FG(\306)3135 698
y(p)p 3199 698 238 5 v 69 x FK(36)g FG(\305)g FK(25)16
b FG(\306)3520 698 y(p)p 3583 698 82 5 v 3583 767 a FK(61)q(.)-246
865 y
SDict begin H.S end
 -246 865 a -246 865 a
SDict begin 12 H.A end
 -246 865 a -246 865 a
SDict begin [/View [/XYZ H.V]/Dest (exo.38) cvn /DEST pdfmark end
 -246
865 a -246 883 a
SDict begin H.S end
 -246 883 a -246 883 a
SDict begin 12 H.A end
 -246 883 a -246
883 a
SDict begin [/View [/XYZ H.V]/Dest (Item.77) cvn /DEST pdfmark end
 -246 883 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)e(38)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 847 2970 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 290.78706 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 847 2970 a 1201
2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 248.10796 0.0 -42.67911 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 158.19717 0.0 -75.11522   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 248.10796  0 -42.67911  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -42.67911
 248.10796  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-75.11522  def /maxTickline 158.19717  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.19717
0.0 -75.11522   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 248.10796
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 158.19717  0 -75.11522  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -75.11522
 158.19717  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.67911  def /maxTickline 248.10796  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.19717
0.0 -75.11522   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 248.10796
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1186 2443 a FI(0)205 b(1)g(2)g(3)h(4)f(5)g(6)g
(7)g(8)-2177 b FH(\241)p FI(1)1112 2366 y(0)1070 2602
y FH(\241)p FI(1)1070 2838 y FH(\241)p FI(2)1112 2130
y(1)1112 1893 y(2)1112 1657 y(3)1112 1421 y(4)1112 1185
y(5)1201 2346 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 -56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 142.26372 142.26372 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 85.35823 199.1692 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -56.90549 56.90549 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 99.5846 42.67911 0.0
-56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.20068 -10.53345 46.37202
-5.70479   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 53.21255 -8.52158 48.3839
-3.69292   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 199.1692 142.26372 99.5846
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 150.7853 89.05115 145.95663
93.8798   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 152.79716 91.06302 147.9685
95.89168   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 99.5846 42.67911 56.90549
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 75.8307 61.60434 80.65936
66.433   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 99.5846
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 118.50983 18.92522 123.33849
23.75388   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1201 2346 a
tx@Dict begin { -9.10507 -49.50792 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201
2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 199.1692 142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1201 2346
a
tx@Dict begin { 201.44547 147.95418 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1 TeXcolorrgb FB(B)p 0
TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1201 2346 a
tx@Dict begin { 59.18175 91.04869 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1
TeXcolorrgb 1199 2345 a FB(C)p 0 TeXcolorgray 1201 2346
a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 142.26372 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1201 2346 a
tx@Dict begin { 147.95418 5.69046 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1 TeXcolorrgb
FB(D)p 0 TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 99.5846 42.67911
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3261 2970 a
currentpoint initclip moveto
 3261 2970 a -246
3014 a
SDict begin H.S end
 -246 3014 a -246 3014 a
SDict begin 12 H.A end
 -246 3014 a -246 3014
a
SDict begin [/View [/XYZ H.V]/Dest (Item.78) cvn /DEST pdfmark end
 -246 3014 a 0 TeXcolorgray -141 3128 a FK(2.)p 0 TeXcolorgray
43 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g(de)h
FB(M)39 b FK(:)802 3334 y FB(M)888 3247 y Ft(\263)931
3278 y FB(x)976 3290 y Fw(A)1030 3278 y FG(\305)12 b
FB(x)1138 3290 y Fw(B)p 929 3315 257 5 v 1037 3391 a
FK(2)1195 3334 y(;)1238 3278 y FB(y)1281 3290 y Fw(A)1334
3278 y FG(\305)i FB(y)1442 3290 y Fw(B)p 1234 3315 256
5 v 1341 3391 a FK(2)1499 3247 y Ft(\264)1687 3334 y
FB(M)1773 3224 y Ft(\265)1817 3278 y FK(0)c FG(\305)g
FK(7)p 1817 3315 157 5 v 1875 3391 a(2)1983 3334 y(;)2022
3278 y FG(\241)p FK(2)g FG(\305)g FK(5)p 2022 3315 212
5 v 2107 3391 a(2)2243 3224 y Ft(\266)2433 3334 y FB(M)2519
3224 y Ft(\265)2563 3278 y FK(7)p 2563 3315 41 5 v 2563
3391 a(2)2614 3334 y(;)2652 3278 y(3)p 2652 3315 V 2652
3391 a(2)2703 3224 y Ft(\266)2893 3334 y FB(M)2979 3335
y FK(\()3006 3334 y(3,)e(5;)g(1,)g(5)3250 3335 y(\))3288
3334 y(.)-38 3559 y(P)o(uis)18 b(celles)g(de)i FB(M)517
3528 y FH(0)570 3559 y FK(:)780 3794 y FB(M)857 3760
y FH(0)887 3707 y Ft(\263)931 3738 y FB(x)970 3750 y
Fw(C)1030 3738 y FG(\305)12 b FB(x)1138 3750 y Fw(D)p
929 3775 263 5 v 1040 3851 a FK(2)1202 3794 y(;)1244
3738 y FB(y)1281 3750 y Fw(C)1341 3738 y FG(\305)i FB(y)1449
3750 y Fw(D)p 1240 3775 V 1351 3851 a FK(2)1512 3707
y Ft(\264)1700 3794 y FB(M)1777 3760 y FH(0)1807 3684
y Ft(\265)1851 3738 y FK(2)c FG(\305)g FK(5)p 1851 3775
157 5 v 1909 3851 a(2)2017 3794 y(;)2056 3738 y(3)g FG(\305)g
FK(0)p 2056 3775 V 2114 3851 a(2)2222 3684 y Ft(\266)2412
3794 y FB(M)2489 3760 y FH(0)2519 3684 y Ft(\265)2564
3738 y FK(7)p 2564 3775 41 5 v 2564 3851 a(2)2614 3794
y(;)2652 3738 y(3)p 2652 3775 V 2652 3851 a(2)2703 3684
y Ft(\266)2893 3794 y FB(M)2970 3760 y FH(0)3000 3795
y FK(\()3027 3794 y(3,)e(5;)g(1,)g(5)3271 3795 y(\))3309
3794 y(.)-246 3914 y
SDict begin H.S end
 -246 3914 a -246 3914 a
SDict begin 12 H.A end
 -246 3914
a -246 3914 a
SDict begin [/View [/XYZ H.V]/Dest (Item.79) cvn /DEST pdfmark end
 -246 3914 a 0 TeXcolorgray -141 4000 a
FK(3.)p 0 TeXcolorgray 43 w(On)16 b(constate)i(dans)f(la)g(question)h
(pr\351c\351dente)g(que)h FB(M)j FG(\306)16 b FB(M)1771
3970 y FH(0)1793 4000 y FK(,)h(les)h(diagonales)2330
4001 y([)2361 4000 y FB(A)s(B)2467 4001 y FK(])2510 4000
y(et)2592 4001 y([)2615 4000 y FB(C)9 b(D)2738 4001 y
FK(])2780 4000 y(du)17 b(quadr)q(ilat\350r)o(e)22 b FB(A)o(C)9
b(B)e(D)24 b FK(se)17 b(coupent)h(donc)-38 4100 y(en)27
b(leur)g(milieu.)i(D)o('apr\350s)e(une)h(propr)q(i\351t\351)f(du)g
(coll\350ge)o(,)g(cela)g(entr)o(a\356ne)h(que)34 b FB(A)o(C)9
b(B)e(D)33 b FK(est)28 b(un)f(par)o(all\351logr)o(amme)o(,)i(puis)f
(que)f(ses)h(c\364t\351s)-38 4199 y(oppos\351s)19 b(sont)f(de)f
(m\352me)i(longueur)f(:)f FB(B)7 b(D)22 b FG(\306)e FB(A)o(C)9
b FK(,)15 b FB(C)9 b(B)22 b FG(\306)e FB(A)s(D)t FK(.)-246
4233 y
SDict begin H.S end
 -246 4233 a -246 4233 a
SDict begin 12 H.A end
 -246 4233 a -246 4233
a
SDict begin [/View [/XYZ H.V]/Dest (Item.80) cvn /DEST pdfmark end
 -246 4233 a 0 TeXcolorgray -141 4328 a FK(4.)p 0 TeXcolorgray
43 w(On)d(calcule)h(les)g(longueurs)25 b FB(A)o(C)g FK(et)16
b FB(C)9 b(B)39 b FK(:)p 0 TeXcolorgray 7 4477 a(\225)p
0 TeXcolorgray 48 w FB(A)o(C)22 b FG(\306)274 4379 y
Ft(q)p 351 4379 772 5 v 351 4478 a FK(\()380 4477 y FB(x)419
4489 y Fw(C)479 4477 y FG(\241)12 b FB(x)591 4489 y Fw(A)635
4478 y FK(\))661 4448 y FI(2)707 4477 y FG(\305)772 4413
y Ft(\241)805 4477 y FB(y)842 4489 y Fw(C)902 4477 y
FG(\241)i FB(y)1014 4489 y Fw(A)1058 4413 y Ft(\242)1087
4435 y FI(2)1136 4477 y FG(\306)1206 4401 y Ft(p)p 1282
4401 674 5 v 77 x FK(\()1309 4477 y(2)c FG(\241)g FK(0)1464
4478 y(\))1492 4448 y FI(2)1537 4477 y FG(\305)1602 4478
y FK(\()1629 4477 y(3)g FG(\241)g FK(\()p FG(\241)p FK(2\))1893
4478 y(\))1920 4448 y FI(2)1969 4477 y FG(\306)2038 4407
y(p)p 2102 4407 227 5 v 70 x FK(2)2142 4453 y FI(2)2188
4477 y FG(\305)g FK(5)2293 4453 y FI(2)2342 4477 y FG(\306)2412
4413 y(p)p 2475 4413 197 5 v 2475 4477 a FK(4)g FG(\305)g
FK(25)16 b FG(\306)2755 4413 y(p)p 2819 4413 82 5 v 64
x FK(29)q(.)p 0 TeXcolorgray 7 4629 a(\225)p 0 TeXcolorgray
40 w FB(C)9 b(B)22 b FG(\306)276 4530 y Ft(q)p 352 4530
771 5 v 100 x FK(\()381 4629 y FB(x)422 4641 y Fw(B)480
4629 y FG(\241)12 b FB(x)586 4641 y Fw(C)636 4630 y FK(\))662
4600 y FI(2)708 4629 y FG(\305)773 4565 y Ft(\241)806
4629 y FB(y)845 4641 y Fw(B)902 4629 y FG(\241)i FB(y)1008
4641 y Fw(C)1058 4565 y Ft(\242)1088 4586 y FI(2)1137
4629 y FG(\306)1206 4553 y Ft(p)p 1282 4553 565 5 v 77
x FK(\()1309 4629 y(7)c FG(\241)g FK(2)1464 4630 y(\))1492
4600 y FI(2)1537 4629 y FG(\305)1602 4630 y FK(\()1629
4629 y(5)g FG(\241)g FK(3)1784 4630 y(\))1812 4600 y
FI(2)1861 4629 y FG(\306)1930 4559 y(p)p 1994 4559 227
5 v 70 x FK(5)2034 4605 y FI(2)2080 4629 y FG(\305)g
FK(2)2185 4605 y FI(2)2234 4629 y FG(\306)2304 4564 y(p)p
2367 4564 197 5 v 2367 4629 a FK(25)g FG(\305)g FK(4)16
b FG(\306)2647 4564 y(p)p 2711 4564 82 5 v 65 x FK(29)q(.)-38
4743 y(On)h(constate)h(que)24 b FB(A)o(C)f FG(\306)12
b FB(C)d(B)d FK(,)18 b(donc)f(d)n('apr\350s)h(la)f(question)i
(pr\351c\351dente)g(:)1687 4926 y FB(B)7 b(D)21 b FG(\306)g
FB(A)o(C)h FG(\306)12 b FB(C)d(B)22 b FG(\306)f FB(A)s(D)t
FK(.)-38 5123 y(C)o(onclusion)e(:)f(le)f(quadr)q(ilat\350r)o(e)23
b FB(A)o(C)9 b(B)e(D)24 b FK(a)18 b(quatr)o(e)f(c\364t\351s)h(de)f
(m\352me)i(longueur)-5 b(,)18 b(donc)f(c)n('est)h(un)g(losange)o(.)-246
5208 y
SDict begin H.S end
 -246 5208 a -246 5208 a
SDict begin 12 H.A end
 -246 5208 a -246 5208
a
SDict begin [/View [/XYZ H.V]/Dest (exo.39) cvn /DEST pdfmark end
 -246 5208 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)c(39)p
0 TeXcolorgray 0 TeXcolorgray 1909 5895 a FK(18)p 0 TeXcolorgray
eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1149 1691
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1149 1691 a 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 103.56796 0.0 -89.34158 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 127.46815 0.0 -105.84424   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 103.56796  0 -89.34158  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -89.34158
 103.56796  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-105.84424  def /maxTickline 127.46815  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 127.46815
0.0 -105.84424   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 103.56796
0.0 -89.34158 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 127.46815  0 -105.84424  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -105.84424
 127.46815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-89.34158  def /maxTickline 103.56796  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 127.46815
0.0 -105.84424   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 103.56796
0.0 -89.34158 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1876 910 a FI(0)205
b(1)g(2)g(3)-997 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)g
FH(\241)p FI(3)1802 832 y(0)1760 1068 y FH(\241)p FI(1)1760
1304 y FH(\241)p FI(2)1760 1541 y FH(\241)p FI(3)1802
596 y(1)1802 360 y(2)1802 123 y(3)1891 813 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ -56.90549
28.45274 -47.24815 35.69574 -40.00558 26.0384 -49.66248 18.79541  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 28.45274 28.45274 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -10.64111 -27.54231 -16.10408 -31.63943
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -12.34865 -25.26604 -17.81161 -29.36316
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 -56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.91042 67.5466 -3.18669 73.00957 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 3.18669 69.25414 -0.91042 74.7171 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 -85.35823 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1891 813 a
tx@Dict begin { 59.18175 118.36351 } PutCoor PutBegin  end
 1891
813 a 0.30196 0.30196 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1891 813 a
tx@Dict begin  PutEnd  end
 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -56.90549 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1891 813 a
tx@Dict begin { -66.57932 32.4361 } PutCoor PutBegin  end
 1891 813 a 0.30196 0.30196 1 TeXcolorrgb FB(B)p
0 TeXcolorgray 1891 813 a
tx@Dict begin  PutEnd  end
 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1891 813 a
tx@Dict begin { 34.1432 -84.2203 } PutCoor PutBegin  end
 1891 813 a 0.30196 0.30196 1
TeXcolorrgb 1889 812 a FB(C)p 0 TeXcolorgray 1891 813
a
tx@Dict begin  PutEnd  end
 1891 813 a 2751 1691 a
currentpoint initclip moveto
 2751 1691 a -246 1874 a FK(On)18
b(calcule)g(la)f(longueur)h(des)g(trois)f(c\364t\351s)h(:)p
0 TeXcolorgray -76 2009 a(\225)p 0 TeXcolorgray 48 w
FB(A)s(B)k FG(\306)193 1910 y Ft(q)p 269 1910 771 5 v
100 x FK(\()298 2009 y FB(x)339 2021 y Fw(B)397 2009
y FG(\241)12 b FB(x)509 2021 y Fw(A)553 2010 y FK(\))579
1980 y FI(2)624 2009 y FG(\305)689 1944 y Ft(\241)723
2009 y FB(y)762 2021 y Fw(B)819 2009 y FG(\241)i FB(y)931
2021 y Fw(A)975 1944 y Ft(\242)1005 1966 y FI(2)1054
2009 y FG(\306)1123 1933 y Ft(p)p 1199 1933 620 5 v 77
x FK(\()1226 2009 y FG(\241)p FK(2)c FG(\241)g FK(2)1436
2010 y(\))1464 1980 y FI(2)1509 2009 y FG(\305)1574 2010
y FK(\()1601 2009 y(1)g FG(\241)g FK(4)1756 2010 y(\))1784
1980 y FI(2)1833 2009 y FG(\306)1902 1935 y Ft(p)p 1979
1935 444 5 v 1979 2009 a FK(\()p FG(\241)p FK(4\))2128
1985 y FI(2)2173 2009 y FG(\305)g FK(\()p FG(\241)p FK(3\))2387
1985 y FI(2)2436 2009 y FG(\306)2505 1944 y(p)p 2569
1944 197 5 v 65 x FK(16)g FG(\305)g FK(9)16 b FG(\306)2849
1944 y(p)p 2912 1944 82 5 v 2912 2009 a FK(25)g FG(\306)e
FK(5.)p 0 TeXcolorgray -76 2160 a(\225)p 0 TeXcolorgray
48 w FB(A)o(C)22 b FG(\306)191 2062 y Ft(q)p 268 2062
772 5 v 268 2161 a FK(\()297 2160 y FB(x)336 2172 y Fw(C)396
2160 y FG(\241)12 b FB(x)508 2172 y Fw(A)552 2161 y FK(\))578
2131 y FI(2)624 2160 y FG(\305)689 2096 y Ft(\241)722
2160 y FB(y)759 2172 y Fw(C)819 2160 y FG(\241)i FB(y)931
2172 y Fw(A)975 2096 y Ft(\242)1004 2117 y FI(2)1053
2160 y FG(\306)1123 2084 y Ft(p)p 1199 2084 620 5 v 77
x FK(\()1226 2160 y(1)c FG(\241)g FK(2)1381 2161 y(\))1409
2131 y FI(2)1454 2160 y FG(\305)1519 2161 y FK(\()1546
2160 y FG(\241)p FK(3)g FG(\241)g FK(4)1756 2161 y(\))1784
2131 y FI(2)1833 2160 y FG(\306)1902 2087 y Ft(p)p 1978
2087 444 5 v 73 x FK(\()p FG(\241)p FK(1\))2127 2136
y FI(2)2172 2160 y FG(\305)g FK(\()p FG(\241)p FK(7\))2386
2136 y FI(2)2436 2160 y FG(\306)2505 2096 y(p)p 2568
2096 197 5 v 2568 2160 a FK(1)g FG(\305)g FK(49)16 b
FG(\306)2849 2096 y(p)p 2912 2096 82 5 v 2912 2160 a
FK(50)q(.)p 0 TeXcolorgray -76 2312 a(\225)p 0 TeXcolorgray
42 w FB(B)5 b(C)24 b FG(\306)193 2213 y Ft(q)p 269 2213
771 5 v 100 x FK(\()298 2312 y FB(x)337 2324 y Fw(C)397
2312 y FG(\241)12 b FB(x)505 2324 y Fw(B)553 2313 y FK(\))579
2283 y FI(2)625 2312 y FG(\305)690 2248 y Ft(\241)723
2312 y FB(y)760 2324 y Fw(C)820 2312 y FG(\241)i FB(y)928
2324 y Fw(B)975 2248 y Ft(\242)1005 2269 y FI(2)1054
2312 y FG(\306)1123 2236 y Ft(p)p 1199 2236 729 5 v 77
x FK(\()1226 2312 y(1)c FG(\241)g FK(\()p FG(\241)p FK(2\))1490
2313 y(\))1518 2282 y FI(2)1563 2312 y FG(\305)1628 2313
y FK(\()1655 2312 y FG(\241)p FK(3)g FG(\241)g FK(1)1865
2313 y(\))1893 2283 y FI(2)1942 2312 y FG(\306)2011 2236
y Ft(p)p 2087 2236 335 5 v 76 x FK(3)2127 2288 y FI(2)2173
2312 y FG(\305)2238 2313 y FK(\()2265 2312 y FG(\241)p
FK(4)2360 2313 y(\))2387 2283 y FI(2)2436 2312 y FG(\306)2505
2247 y(p)p 2569 2247 197 5 v 65 x FK(9)g FG(\305)g FK(16)16
b FG(\306)2849 2247 y(p)p 2913 2247 82 5 v 65 x FK(25)f
FG(\306)f FK(5.)-240 2412 y FB(A)s(B)22 b FG(\306)15
b FB(B)5 b(C)k FK(,)18 b(donc)23 b FB(A)s(B)5 b(C)27
b FK(est)18 b(isoc\350le)g(en)g FB(B)5 b FK(.)18 b(On)f(utilise)j(le)d
(th\351or\350me)i(r\351ciproque)f(de)f(Pythagor)o(e)g(pour)g(prouver)h
(qu)n('il)g(est)g(r)o(ectangle)f(:)1036 2613 y FB(A)o(C)1142
2583 y FI(2)1191 2613 y FG(\306)1260 2549 y(p)p 1324
2549 V 64 x FK(50)1405 2564 y FI(2)1454 2613 y FG(\306)d
FK(50)1036 2713 y FB(A)s(B)1142 2683 y FI(2)1188 2713
y FG(\305)c FB(B)5 b(C)1365 2683 y FI(2)1415 2713 y FG(\306)15
b FK(5)1525 2683 y FI(2)1570 2713 y FG(\305)10 b FK(5)1675
2683 y FI(2)1725 2713 y FG(\306)k FK(25)c FG(\305)g FK(25)17
b FG(\306)d FK(50)2237 2522 y Ft(\))2306 2656 y FB(A)o(C)2412
2621 y FI(2)2461 2656 y FG(\306)20 b FB(A)s(B)2642 2621
y FI(2)2688 2656 y FG(\305)10 b FB(B)5 b(C)2865 2621
y FI(2)2901 2656 y FK(.)-246 2864 y(D)o('apr\350s)17
b(le)h(th\351or\350me)h(r\351ciproque)f(de)f(Pythagor)o(e)o(,)22
b FB(A)s(B)5 b(C)27 b FK(est)18 b(r)o(ectangle)f(en)h
FB(B)5 b FK(.)-246 2949 y
SDict begin H.S end
 -246 2949 a -246 2949 a
SDict begin 12 H.A end
 -246
2949 a -246 2949 a
SDict begin [/View [/XYZ H.V]/Dest (exo.40) cvn /DEST pdfmark end
 -246 2949 a -246 2967 a
SDict begin H.S end
 -246 2967
a -246 2967 a
SDict begin 12 H.A end
 -246 2967 a -246 2967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.81) cvn /DEST pdfmark end
 -246 2967 a 0 TeXcolorgray
131 x FL(Ex)o(er)o(cice)14 b(40)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p
0 TeXcolorgray 48 w FB(A)s(B)22 b FG(\306)717 2999 y
Ft(q)p 793 2999 771 5 v 100 x FK(\()822 3098 y FB(x)863
3110 y Fw(B)920 3098 y FG(\241)12 b FB(x)1032 3110 y
Fw(A)1076 3099 y FK(\))1103 3069 y FI(2)1148 3098 y FG(\305)1213
3034 y Ft(\241)1247 3098 y FB(y)1286 3110 y Fw(B)1343
3098 y FG(\241)i FB(y)1455 3110 y Fw(A)1499 3034 y Ft(\242)1529
3055 y FI(2)1578 3098 y FG(\306)1647 3024 y Ft(p)p 1723
3024 565 5 v 74 x FK(\(1)c FG(\241)g FK(6\))1932 3074
y FI(2)1978 3098 y FG(\305)g FK(\(5)g FG(\241)g FK(0\))2252
3074 y FI(2)2302 3098 y FG(\306)2371 3024 y Ft(p)p 2448
3024 335 5 v 2448 3098 a FK(\()p FG(\241)p FK(5\))2597
3074 y FI(2)2642 3098 y FG(\305)g FK(5)2747 3074 y FI(2)2796
3098 y FG(\306)2866 3033 y(p)p 2929 3033 238 5 v 2929
3098 a FK(25)g FG(\305)g FK(25)17 b FG(\306)3250 3033
y(p)p 3313 3033 82 5 v 3313 3098 a FK(50)q(.)p 0 TeXcolorgray
7 3250 a(\225)p 0 TeXcolorgray 48 w FB(A)o(C)22 b FG(\306)274
3151 y Ft(q)p 351 3151 772 5 v 351 3251 a FK(\()380 3250
y FB(x)419 3262 y Fw(C)479 3250 y FG(\241)12 b FB(x)591
3262 y Fw(A)635 3251 y FK(\))661 3221 y FI(2)707 3250
y FG(\305)772 3185 y Ft(\241)805 3250 y FB(y)842 3262
y Fw(C)902 3250 y FG(\241)i FB(y)1014 3262 y Fw(A)1058
3185 y Ft(\242)1087 3207 y FI(2)1136 3250 y FG(\306)1206
3176 y Ft(p)p 1282 3176 565 5 v 74 x FK(\(0)c FG(\241)g
FK(6\))1491 3226 y FI(2)1537 3250 y FG(\305)g FK(\(2)g
FG(\241)g FK(0\))1811 3226 y FI(2)1861 3250 y FG(\306)1930
3176 y Ft(p)p 2006 3176 335 5 v 74 x FK(\()p FG(\241)p
FK(6\))2155 3226 y FI(2)2200 3250 y FG(\305)g FK(2)2305
3226 y FI(2)2355 3250 y FG(\306)2424 3185 y(p)p 2488
3185 197 5 v 65 x FK(36)g FG(\305)g FK(4)16 b FG(\306)2768
3185 y(p)p 2832 3185 82 5 v 65 x FK(40)q(.)p 0 TeXcolorgray
7 3401 a(\225)p 0 TeXcolorgray 42 w FB(B)5 b(C)24 b FG(\306)276
3302 y Ft(q)p 352 3302 771 5 v 100 x FK(\()381 3401 y
FB(x)420 3413 y Fw(C)480 3401 y FG(\241)12 b FB(x)588
3413 y Fw(B)636 3402 y FK(\))662 3372 y FI(2)708 3401
y FG(\305)773 3337 y Ft(\241)806 3401 y FB(y)843 3413
y Fw(C)903 3401 y FG(\241)i FB(y)1011 3413 y Fw(B)1058
3337 y Ft(\242)1088 3358 y FI(2)1137 3401 y FG(\306)1206
3328 y Ft(p)p 1282 3328 565 5 v 73 x FK(\(0)c FG(\241)g
FK(1\))1491 3377 y FI(2)1537 3401 y FG(\305)g FK(\(2)g
FG(\241)g FK(5\))1811 3377 y FI(2)1861 3401 y FG(\306)1930
3328 y Ft(p)p 2007 3328 444 5 v 2007 3401 a FK(\()p FG(\241)p
FK(1\))2156 3377 y FI(2)2201 3401 y FG(\305)g FK(\()p
FG(\241)p FK(3\))2415 3377 y FI(2)2464 3401 y FG(\306)2533
3336 y(p)p 2597 3336 157 5 v 65 x FK(1)g FG(\305)g FK(9)15
b FG(\306)2837 3336 y(p)p 2900 3336 82 5 v 2900 3401
a FK(10)q(.)-38 3515 y(On)i(a)g(donc)g(:)1037 3613 y
FB(A)s(B)1143 3583 y FI(2)1193 3613 y FG(\306)1262 3549
y(p)p 1325 3549 V 1325 3613 a FK(50)1407 3564 y FI(2)1456
3613 y FG(\306)d FK(50)1037 3731 y FB(A)o(C)1143 3701
y FI(2)1187 3731 y FG(\305)c FB(B)5 b(C)1364 3701 y FI(2)1414
3731 y FG(\306)1483 3667 y(p)p 1547 3667 V 64 x FK(40)1628
3682 y FI(2)1673 3731 y FG(\305)1738 3667 y(p)p 1802
3667 V 64 x FK(10)1883 3682 y FI(2)1932 3731 y FG(\306)14
b FK(40)c FG(\305)g FK(10)17 b FG(\306)d FK(50)2444 3532
y Ft(\))2514 3665 y FB(A)s(B)2620 3630 y FI(2)2669 3665
y FG(\306)21 b FB(A)o(C)2851 3630 y FI(2)2895 3665 y
FG(\305)10 b FB(B)5 b(C)3072 3630 y FI(2)3108 3665 y
FK(.)-38 3876 y(D)o('apr\350s)17 b(le)h(th\351or\350me)h(r\351ciproque)
e(de)g(Pythagor)o(e)o(,)23 b FB(A)s(B)5 b(C)27 b FK(est)18
b(r)o(ectangle)f(en)f FB(C)9 b FK(.)-246 3910 y
SDict begin H.S end
 -246
3910 a -246 3910 a
SDict begin 12 H.A end
 -246 3910 a -246 3910 a
SDict begin [/View [/XYZ H.V]/Dest (Item.82) cvn /DEST pdfmark end
 -246 3910
a 0 TeXcolorgray -141 4005 a FK(2.)p 0 TeXcolorgray 43
w(D)o('apr\350s)17 b(la)g(for)q(mule)i(du)e(cours)g(:)1104
4227 y FB(I)1148 4140 y Ft(\263)1192 4171 y FB(x)1237
4183 y Fw(A)1291 4171 y FG(\305)12 b FB(x)1399 4183 y
Fw(B)p 1190 4207 257 5 v 1298 4284 a FK(2)1456 4227 y(;)1499
4171 y FB(y)1542 4183 y Fw(A)1595 4171 y FG(\305)i FB(y)1703
4183 y Fw(B)p 1495 4207 256 5 v 1602 4284 a FK(2)1760
4140 y Ft(\264)1948 4227 y FB(I)1992 4117 y Ft(\265)2037
4171 y FK(6)c FG(\305)g FK(1)p 2037 4207 157 5 v 2095
4284 a(2)2203 4227 y(;)2241 4171 y(0)g FG(\305)g FK(5)p
2241 4207 V 2299 4284 a(2)2407 4117 y Ft(\266)2598 4227
y FB(I)2642 4228 y FK(\()2669 4227 y(3,)e(5)19 b(;)25
b(2,)8 b(5)2949 4228 y(\))2986 4227 y(.)-246 4380 y
SDict begin H.S end
 -246
4380 a -246 4380 a
SDict begin 12 H.A end
 -246 4380 a -246 4380 a
SDict begin [/View [/XYZ H.V]/Dest (Item.83) cvn /DEST pdfmark end
 -246 4380
a 0 TeXcolorgray -141 4460 a FK(3.)p 0 TeXcolorgray 43
w(Le)16 b(tr)q(iangle)23 b FB(A)s(B)5 b(C)25 b FK(\351tant)17
b(r)o(ectangle)f(en)e FB(C)9 b FK(,)16 b(le)h(milieu)i
FB(I)27 b FK(de)15 b(l)o('hypot\351nuse)2187 4461 y([)2218
4460 y FB(A)s(B)2324 4461 y FK(])2366 4460 y(est)i(le)f(centr)o(e)g(de)
g FC(\241)g FK(\(r)o(appel)h(de)e(l)o('\351nonc\351\))9
b(;)18 b(et)e(le)g(r)o(ayon)g(de)-38 4559 y FC(\241)h
FK(est)313 4680 y FB(r)24 b FG(\306)17 b FB(I)e(A)j FG(\306)616
4577 y Ft(q)p 693 4577 744 5 v 693 4681 a FK(\()721 4680
y FB(x)766 4692 y Fw(A)820 4680 y FG(\241)12 b FB(x)930
4692 y Fw(I)962 4681 y FK(\))989 4651 y FI(2)1034 4680
y FG(\305)1099 4615 y Ft(\241)1133 4680 y FB(y)1176 4692
y Fw(A)1230 4680 y FG(\241)i FB(y)1340 4692 y Fw(I)1371
4615 y Ft(\242)1401 4637 y FI(2)1450 4680 y FG(\306)1519
4603 y Ft(p)p 1596 4603 703 5 v 1596 4680 a FK(\(6)c
FG(\241)g FK(3,)e(5\))1873 4656 y FI(2)1919 4680 y FG(\305)i
FK(\(0)g FG(\241)g FK(2,)e(5\))2261 4656 y FI(2)2312
4680 y FG(\306)2382 4603 y Ft(p)p 2458 4603 473 5 v 77
x FK(2,)g(5)2566 4656 y FI(2)2612 4680 y FG(\305)i FK(\()p
FG(\241)p FK(2,)e(5\))2894 4656 y FI(2)2944 4680 y FG(\306)3014
4608 y Ft(p)p 3090 4608 376 5 v 72 x FK(6,)g(25)i FG(\305)g
FK(6,)e(25)18 b FG(\306)3548 4608 y Ft(p)p 3625 4608
150 5 v 3625 4680 a FK(12,)8 b(5)r(.)-246 4761 y
SDict begin H.S end
 -246
4761 a -246 4761 a
SDict begin 12 H.A end
 -246 4761 a -246 4761 a
SDict begin [/View [/XYZ H.V]/Dest (Item.84) cvn /DEST pdfmark end
 -246 4761
a 0 TeXcolorgray -141 4844 a FK(4.)p 0 TeXcolorgray 43
w(S)o(avoir)18 b(si)j FB(H)8 b FK(\(3,)g(5)20 b(;)27
b(6\))19 b(appar)q(tient)g(\340)g FC(\241)f FK(r)o(evient)h(\340)f
(savoir)h(si)g(la)g(longueur)i FB(I)11 b(H)28 b FK(est)19
b(\351gale)g(\340)g FB(r)29 b FK(ou)18 b(non.)i(On)e(calcule)h(cette)h
(longueur)f(avec)f(la)-38 4943 y(for)q(mule)g(du)f(cours)h(:)432
5140 y FB(I)11 b(H)24 b FG(\306)622 5044 y Ft(q)p 698
5044 758 5 v 96 x FK(\()r FB(x)770 5152 y Fw(H)835 5140
y FG(\241)12 b FB(x)945 5152 y Fw(I)978 5140 y FK(\))1005
5116 y FI(2)1049 5140 y FG(\305)e FK(\()t FB(y)1186 5152
y Fw(H)1252 5140 y FG(\241)k FB(y)1362 5152 y Fw(I)1393
5140 y FK(\))1420 5116 y FI(2)1469 5140 y FG(\306)1538
5063 y Ft(p)p 1615 5063 772 5 v 1615 5140 a FK(\(3,)8
b(5)i FG(\241)g FK(3,)e(5\))1960 5116 y FI(2)2007 5140
y FG(\305)i FK(\(6)g FG(\241)g FK(2,)e(5\))2349 5116
y FI(2)2400 5140 y FG(\306)2469 5063 y Ft(p)p 2546 5063
296 5 v 2546 5140 a FK(0)2586 5116 y FI(2)2631 5140 y
FG(\305)i FK(3,)e(5)2804 5116 y FI(2)2855 5140 y FG(\306)2924
5069 y Ft(p)p 3001 5069 307 5 v 3001 5140 a FK(0)i FG(\305)g
FK(12,)e(25)17 b FG(\306)3390 5069 y Ft(p)p 3467 5069
191 5 v 3467 5140 a FK(12,)8 b(25)r(.)-38 5338 y(C)o(omme)255
5279 y FG(p)p 318 5279 V 318 5338 a FK(12,)g(25)17 b
FG(6\306)592 5279 y(p)p 656 5279 150 5 v 59 x FK(12,)8
b(5)r(,)17 b(le)h(point)g(H)f(n)-6 b('appar)q(tient)19
b(pas)f(\340)f FC(\241)p FK(.)-38 5502 y FL(N.B.)26 b
FK(La)e(\002gur)o(e)g(est)h(trompeuse)o(,)h(puisqu)n('on)g(a)e(l)o
('impr)o(ession)j(que)g FB(H)33 b FK(est)25 b(sur)g FC(\241)p
FK(.)f(En)h(r\351alit\351,)h(si)e(vous)i(avez)e(pr)q(is)g(1)h(cm)g
(comme)g(unit\351)-38 5602 y(gr)o(aphique)o(,)18 b(le)g(point)i
FB(H)26 b FK(est)18 b(\340)f(environ)h(trois)g(cheveux)g(\(au)f(sens)h
(propr)o(e\))f(du)g(cer)o(cle)o(.)p 0 TeXcolorgray 1909
5895 a(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 899 1706
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 253.22923 a add def
/d 0.0 a add neg def /h 235.01949 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 899 1706 a 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -28.45274 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.9481 0.0 -41.54118 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 187.2191 0.0 -50.07666   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 769.36198  0 -39.83366  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -39.83366
 769.36198  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-50.07666  def /maxTickline 363.05684  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 363.05684
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 769.36198
0.0 -39.83366 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 363.05684  0 -50.07666  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -50.07666
 363.05684  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-39.83366  def /maxTickline 769.36198  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 363.05684
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 769.36198
0.0 -39.83366 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1215 1387 a FI(0)204
b(1)i(2)f(3)g(4)g(5)g(6)h(7)f(8)g(9)190 b(10)174 b(11)g(12)h(13)f(14)g
(15)g(16)g(17)h(18)f(19)g(20)g(21)h(22)f(23)g(24)g(25)g(26)-6445
b FH(\241)p FI(1)1141 1309 y(0)1099 1545 y FH(\241)p
FI(1)1141 1073 y(1)1141 837 y(2)1141 600 y(3)1141 364
y(4)1141 128 y(5)1141 -108 y(6)1141 -345 y(7)1141 -581
y(8)1141 -817 y(9)1110 -1053 y(10)1110 -1289 y(11)1110
-1525 y(12)1230 1290 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  [ 0.0 56.90549
4.83691 71.13185 18.7789 66.29494 14.22636 52.06856  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.25
.setopacityalpha  fill  grestore gsave 2.0 SLW 0 1 0 0  setcmykcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 142.26372 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 0.0 28.45274 142.26372  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 0.0 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor   99.5846 71.13185
2 copy moveto 100.72252 0 CLW mul round sub dup 0 rmoveto 0 360 arc
closepath  gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1230 1290 a
tx@Dict begin { 181.813 59.75093 } PutCoor PutBegin  end
 1230
1290 a 0 1 0 TeXcolorrgb 53 x FC(\241)p 0 TeXcolorgray
1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1230 1290 a
tx@Dict begin { 168.44019 9.67383 } PutCoor PutBegin  end
 1230 1290 a 0 0 1 TeXcolorrgb 6 w FB(A)p
0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 28.45274
142.26372   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { 25.60728 148.52335 } PutCoor PutBegin  end
 1230 1290 a 0 0 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 0.0 56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { -11.09654 61.7424 } PutCoor PutBegin  end

1230 1290 a 0 0 1 TeXcolorrgb 1228 1289 a FB(C)p 0 TeXcolorgray
1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 99.5846 71.13185
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1230 1290 a
tx@Dict begin { 102.14523 75.11522 } PutCoor PutBegin  end
 1230 1290 a 0 0 1 TeXcolorrgb 2 w FB(I)p
0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 99.5846 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /StandardSymL 0. [1.8
0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.  1.  scale
<B4> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { 106.4134 157.628 } PutCoor PutBegin  end
 1230 1290 a 1 0 0
TeXcolorrgb 2 w FB(H)p 0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230
1290 a 3001 1706 a
currentpoint initclip moveto
 3001 1706 a -246 1781 a
SDict begin H.S end
 -246 1781
a -246 1781 a
SDict begin 12 H.A end
 -246 1781 a -246 1781 a
SDict begin [/View [/XYZ H.V]/Dest (exo.41) cvn /DEST pdfmark end
 -246 1781 a 0 TeXcolorgray
119 x FL(Ex)o(er)o(cice)14 b(41)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 785 3921 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 280.54405 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 785 3921 a 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 196.89293 0.0 -83.65112 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 133.7278 0.0 -99.5846   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 196.89293  0 -83.65112  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -83.65112
 196.89293  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.5846  def /maxTickline 133.7278  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.7278
0.0 -99.5846   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 196.89293
0.0 -83.65112 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 133.7278  0 -99.5846  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -99.5846
 133.7278  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-83.65112  def /maxTickline 196.89293  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.7278
0.0 -99.5846   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 196.89293
0.0 -83.65112 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1465 3191 a FI(0)205 b(1)g(2)g(3)g(4)h(5)f(6)-1706 b
FH(\241)p FI(1)-309 b FH(\241)p FI(2)1391 3113 y(0)1349
3350 y FH(\241)p FI(1)1349 3586 y FH(\241)p FI(2)1349
3822 y FH(\241)p FI(3)1391 2877 y(1)1391 2641 y(2)1391
2405 y(3)1391 2169 y(4)1480 3094 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 113.81097 -56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 0.0 113.81097  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 170.71646 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 0.0 113.81097 -85.35823 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 14.22636 -56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -0.98813 3.54877 -1.83516
10.32462   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1.83516 3.90173 0.98813
10.67758   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 112.82283 17.77515 111.9758
24.551   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.64613 18.12811 114.7991
24.90396   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -85.35823 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 81.68788 -36.02483 87.6167
-32.63669   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 83.09975 -38.49516 89.02856
-35.10703   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 113.81097 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 32.12308 64.47757 26.19426
61.08943   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 30.71121 66.9479 24.7824
63.55977   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1480 3094 a
tx@Dict begin { 2.27626 119.50143 } PutCoor PutBegin  end
 1480
3094 a 0.30196 0.30196 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71646 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1480 3094 a
tx@Dict begin { 172.99272 34.1432 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1 TeXcolorrgb
FB(B)p 0 TeXcolorgray 1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1480 3094 a
tx@Dict begin { 121.20853 -83.08195 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1
TeXcolorrgb 1478 3093 a FB(C)p 0 TeXcolorgray 1480 3094
a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1480 3094 a
tx@Dict begin { -63.7343 7.39755 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1 TeXcolorrgb
FB(D)p 0 TeXcolorgray 1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 56.90549 14.22636
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3115 3921 a
currentpoint initclip moveto
 3115 3921 a -246
3983 a
SDict begin H.S end
 -246 3983 a -246 3983 a
SDict begin 12 H.A end
 -246 3983 a -246 3983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.85) cvn /DEST pdfmark end
 -246 3983 a 0 TeXcolorgray -141 4096 a FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Le)18
b(milieu)h(du)e(segment)841 4097 y([)872 4096 y FB(A)o(C)978
4097 y FK(])1020 4096 y(a)g(pour)g(coor)o(donn\351es)1210
4224 y Ft(\263)1254 4255 y FB(x)1299 4267 y Fw(A)1353
4255 y FG(\305)12 b FB(x)1459 4267 y Fw(C)p 1252 4292
258 5 v 1360 4368 a FK(2)1519 4311 y(;)1561 4255 y FB(y)1604
4267 y Fw(A)1658 4255 y FG(\305)i FB(y)1764 4267 y Fw(C)p
1557 4292 257 5 v 1665 4368 a FK(2)1823 4224 y Ft(\264)2009
4201 y(\265)2053 4255 y FK(0)c FG(\305)g FK(4)p 2053
4292 157 5 v 2111 4368 a(2)2219 4311 y(;)2258 4255 y(4)g
FG(\305)g FK(\()p FG(\241)p FK(3\))p 2258 4292 265 5
v 2370 4368 a(2)2532 4201 y Ft(\266)2721 4312 y FK(\()2748
4311 y(2)17 b(;)26 b(0,)8 b(5)2959 4312 y(\))2995 4311
y(.)p 0 TeXcolorgray 7 4522 a(\225)p 0 TeXcolorgray 42
w(Le)18 b(milieu)h(du)e(segment)841 4523 y([)866 4522
y FB(B)7 b(D)985 4523 y FK(])1029 4522 y(a)17 b(pour)h(coor)o
(donn\351es)1205 4650 y Ft(\263)1248 4681 y FB(x)1289
4693 y Fw(B)1347 4681 y FG(\305)12 b FB(x)1455 4693 y
Fw(D)p 1246 4718 263 5 v 1357 4794 a FK(2)1519 4737 y(;)1561
4681 y FB(y)1600 4693 y Fw(B)1657 4681 y FG(\305)i FB(y)1765
4693 y Fw(D)p 1557 4718 262 5 v 1668 4794 a FK(2)1829
4650 y Ft(\264)2014 4627 y(\265)2058 4681 y FK(6)c FG(\305)g
FK(\()p FG(\241)p FK(2\))p 2058 4718 265 5 v 2170 4794
a(2)2333 4737 y(;)2371 4681 y(1)g FG(\305)g FK(0)p 2371
4718 157 5 v 2429 4794 a(2)2538 4627 y Ft(\266)2726 4738
y FK(\()2753 4737 y(2)17 b(;)26 b(0,)8 b(5)2964 4738
y(\))3000 4737 y(.)-38 4961 y(Les)18 b(diagonales)g(du)f(quadr)q
(ilat\350r)o(e)23 b FB(A)s(B)5 b(C)k(D)24 b FK(se)18
b(coupent)h(en)f(leur)f(milieu,)j(donc)d(c)n('est)h(un)f(par)o
(all\351logr)o(amme)j(\(propr)q(i\351t\351)d(du)h(coll\350ge\).)-38
5120 y Fu(")p FK(S)o(i)j(vous)h(donnez)e(un)h(nom)h(aux)f(milieux)i
(des)e(diagonales)g FL(av)o(ant)d(de)h(fair)o(e)f(les)g(calculs)p
FK(,)i(donnez-leur)h(des)g(noms)h(diff\351r)o(ents)f(:)g(avant)-38
5220 y(de)c(fair)o(e)g(les)h(calculs)o(,)h(on)e(n)-6
b('a)18 b(pas)g(encor)o(e)f(prouv\351)h(que)g(les)g(milieux)h
(\351taient)g(les)f(m\352mes)o(.)-246 5250 y
SDict begin H.S end
 -246 5250
a -246 5250 a
SDict begin 12 H.A end
 -246 5250 a -246 5250 a
SDict begin [/View [/XYZ H.V]/Dest (Item.86) cvn /DEST pdfmark end
 -246 5250 a 0 TeXcolorgray
-141 5346 a FK(2.)p 0 TeXcolorgray 43 w(On)f(calcule)h(la)g(longueur)g
(des)f(diagonales)h(:)p 0 TeXcolorgray 7 5494 a(\225)p
0 TeXcolorgray 48 w FB(A)o(C)k FG(\306)274 5395 y Ft(q)p
351 5395 772 5 v 351 5495 a FK(\()380 5494 y FB(x)419
5506 y Fw(C)479 5494 y FG(\241)12 b FB(x)591 5506 y Fw(A)635
5495 y FK(\))661 5465 y FI(2)707 5494 y FG(\305)772 5430
y Ft(\241)805 5494 y FB(y)842 5506 y Fw(C)902 5494 y
FG(\241)i FB(y)1014 5506 y Fw(A)1058 5430 y Ft(\242)1087
5451 y FI(2)1136 5494 y FG(\306)1206 5420 y Ft(p)p 1282
5420 620 5 v 74 x FK(\(4)c FG(\241)g FK(0\))1491 5470
y FI(2)1537 5494 y FG(\305)g FK(\()p FG(\241)p FK(3)g
FG(\241)g FK(4\))1866 5470 y FI(2)1916 5494 y FG(\306)1985
5420 y Ft(p)p 2061 5420 335 5 v 74 x FK(4)2101 5470 y
FI(2)2147 5494 y FG(\305)g FK(\()p FG(\241)p FK(7\))2361
5470 y FI(2)2410 5494 y FG(\306)2479 5429 y(p)p 2543
5429 238 5 v 65 x FK(16)g FG(\305)g FK(49)16 b FG(\306)2864
5429 y(p)p 2927 5429 82 5 v 2927 5494 a FK(65)q(.)p 0
TeXcolorgray 7 5646 a(\225)p 0 TeXcolorgray 42 w FB(B)7
b(D)21 b FG(\306)284 5547 y Ft(q)p 360 5547 782 5 v 100
x FK(\()389 5646 y FB(x)430 5658 y Fw(D)494 5646 y FG(\241)12
b FB(x)602 5658 y Fw(B)649 5647 y FK(\))676 5617 y FI(2)721
5646 y FG(\305)786 5581 y Ft(\241)820 5646 y FB(y)859
5658 y Fw(D)922 5646 y FG(\241)i FB(y)1030 5658 y Fw(B)1077
5581 y Ft(\242)1107 5603 y FI(2)1156 5646 y FG(\306)1225
5572 y Ft(p)p 1302 5572 620 5 v 1302 5646 a FK(\()p FG(\241)p
FK(2)c FG(\241)g FK(6\))1566 5622 y FI(2)1611 5646 y
FG(\305)g FK(\(0)g FG(\241)g FK(1\))1885 5622 y FI(2)1935
5646 y FG(\306)2004 5572 y Ft(p)p 2081 5572 444 5 v 2081
5646 a FK(\()p FG(\241)p FK(8\))2230 5622 y FI(2)2275
5646 y FG(\305)g FK(\()p FG(\241)p FK(1\))2489 5622 y
FI(2)2538 5646 y FG(\306)2607 5581 y(p)p 2671 5581 197
5 v 65 x FK(64)g FG(\305)g FK(1)16 b FG(\306)2951 5581
y(p)p 3015 5581 82 5 v 65 x FK(65)q(.)p 0 TeXcolorgray
1909 5895 a(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FK(Les)18 b(diagonales)g(du)f(par)o
(all\351logr)o(amme)26 b FB(A)s(B)5 b(C)k(D)24 b FK(sont)18
b(de)f(m\352me)i(longueur)-5 b(,)19 b(donc)e(c)n('est)h(un)f(r)o
(ectangle)h(\(propr)q(i\351t\351)f(du)g(coll\350ge\).)-246
-79 y
SDict begin H.S end
 -246 -79 a -246 -79 a
SDict begin 12 H.A end
 -246 -79 a -246 -79 a
SDict begin [/View [/XYZ H.V]/Dest (exo.42) cvn /DEST pdfmark end
 -246
-79 a -246 -62 a
SDict begin H.S end
 -246 -62 a -246 -62 a
SDict begin 12 H.A end
 -246 -62 a -246
-62 a
SDict begin [/View [/XYZ H.V]/Dest (Item.87) cvn /DEST pdfmark end
 -246 -62 a 0 TeXcolorgray 95 x FL(Ex)o(er)o(cice)d(42)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(Le)k(sym\351tr)q(ique)g(de)f(2)h(par)f(r)o(appor)q(t)h(\340)f(5,)8
b(5)18 b(est)g(9.)p 0 TeXcolorgray 0 TeXcolorgray 776
671 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 307.85844 a add def
/d 0.0 a add neg def /h 67.14848 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 776 671 a 889 397 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 294.20126  0 -13.65718  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -13.65718
 294.20126  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-33.00528  def /maxTickline 34.1432  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 294.20126
0.0 -13.65718 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 874 494 a FI(0)205
b(1)g(2)g(3)h(4)f(5)g(6)g(7)h(8)f(9)889 397 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 -3.41418 105.27505
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 108.1205 -3.41418 108.1205
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 256.07469 0.0 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.85966 -3.41418 204.85966
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 207.70511 -3.41418 207.70511
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07469 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3332 671 a
currentpoint initclip moveto
 3332
671 a -246 711 a
SDict begin H.S end
 -246 711 a -246 711 a
SDict begin 12 H.A end
 -246 711 a -246
711 a
SDict begin [/View [/XYZ H.V]/Dest (Item.88) cvn /DEST pdfmark end
 -246 711 a 0 TeXcolorgray -141 825 a FK(2.)p 0
TeXcolorgray 43 w(On)26 b(g\351n\351r)o(alise)h(le)g(tr)o(avail)f(de)g
(la)g(question)i(pr\351c\351dente)f(:)f FB(c)32 b FK(est)27
b(le)f(sym\351tr)q(ique)h(de)h FB(a)i FK(par)c(r)o(appor)q(t)g(\340)g
FB(b)k FK(lorsque)d FB(b)j FK(est)c(le)h(milieu)h(du)-38
924 y(segment)19 b(qui)e(va)h(de)h FB(a)i FK(\340)c FB(c)5
b FK(.)p 0 TeXcolorgray 0 TeXcolorgray 776 1563 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 307.85844 a add def
/d 0.0 a add neg def /h 67.14848 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 776
1563 a 889 1289 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 -3.41418 105.27505
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 108.1205 -3.41418 108.1205
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 256.07469 0.0 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.85966 -3.41418 204.85966
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 207.70511 -3.41418 207.70511
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 889 1289 a
tx@Dict begin { 48.36957 -4.55254 } PutCoor PutBegin  end
 889 1289 a 891 1326
a FB(a)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a 889 1289 a
tx@Dict begin { 148.52335 -4.55254 } PutCoor PutBegin  end
 889 1289 a 57
x FB(b)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a 889 1289 a
tx@Dict begin { 248.67712 -4.55254 } PutCoor PutBegin  end
 889 1289 a 37
x FB(c)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07469 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3332 1563 a
currentpoint initclip moveto
 3332 1563 a -38
1716 a FK(A)n(utr)o(ement)18 b(dit)f FB(b)h FG(\306)601
1683 y Fw(a)s FH(\305)p Fw(c)p 600 1696 110 5 v 640 1745
a FI(2)719 1716 y FK(,)g(ce)f(qui)h(donne)g FB(b)p 1 0 0
TeXcolorrgb 4 w FG(\243)p FK(2)p 0 TeXcolorgray 14 w
FG(\306)1459 1683 y Fw(a)s FH(\305)p Fw(c)p 1458 1696
V 1503 1784 a FA(\003)1498 1762 y FI(2)p 1 0 0 TeXcolorrgb
1577 1716 a FG(\243)1632 1732 y FA(\001)1632 1716 y FK(2)p
0 TeXcolorgray 1 w(,)f(soit)h(2)p FB(b)h FG(\306)d FB(a)e
FG(\305)c FB(c)23 b FK(;)17 b(et)h(donc)1876 1906 y FB(c)i
FG(\306)14 b FK(2)p FB(b)g FG(\241)e FB(a)t FK(.)-246
1983 y
SDict begin H.S end
 -246 1983 a -246 1983 a
SDict begin 12 H.A end
 -246 1983 a -246 1983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.89) cvn /DEST pdfmark end
 -246 1983 a 0 TeXcolorgray -141 2095 a FK(3.)p 0 TeXcolorgray
43 w(On)17 b(place)f FB(C)9 b FK(,)17 b(sym\351tr)q(ique)i(du)e(point)
24 b FB(A)c FK(par)e(r)o(appor)q(t)f(au)h(point)g FB(B)5
b FK(.)p 0 TeXcolorgray 0 TeXcolorgray 984 4298 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 257.78178 a add def
/d 0.0 a add neg def /h 255.5055 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 984
4298 a 1470 2814 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -170.71646 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 199.1692 0.0 -58.61258 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 76.82231 0.0 -178.68318   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 199.1692  0 -58.61258  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -58.61258
 199.1692  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-178.68318  def /maxTickline 76.82231  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 76.82231
0.0 -178.68318   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -58.61258 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 76.82231  0 -178.68318  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -178.68318
 76.82231  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-58.61258  def /maxTickline 199.1692  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 76.82231
0.0 -178.68318   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -58.61258 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1455 2911 a FI(0)205
b(1)g(2)h(3)f(4)g(5)g(6)-1705 b FH(\241)p FI(1)-309 b
FH(\241)p FI(2)1381 2833 y(0)1340 3070 y FH(\241)p FI(1)1340
3306 y FH(\241)p FI(2)1340 3542 y FH(\241)p FI(3)1340
3779 y FH(\241)p FI(4)1340 4015 y FH(\241)p FI(5)1340
4251 y FH(\241)p FI(6)1381 2597 y(1)1381 2361 y(2)1470
2814 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 92.4714 -49.7923 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.80258 3.01997 62.65802
6.53314   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 58.26611 0.58002 64.12157
4.0932   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 -156.49008
92.4714 -49.7923   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 120.82126 -103.6778 126.6767
-100.16463   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 122.28479 -106.11775
128.14023 -102.60457   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1470 2814 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1470
2814 a 0.30196 0.30196 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1470 2814 a
tx@Dict begin  PutEnd  end
 1470 2814 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 92.4714 -49.7923   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1470 2814 a
tx@Dict begin { 95.03206 -44.3862 } PutCoor PutBegin  end
 1470 2814 a 0.30196 0.30196 1 TeXcolorrgb
FB(B)p 0 TeXcolorgray 1470 2814 a
tx@Dict begin  PutEnd  end
 1470 2814 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 -156.49008   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1470 2814 a
tx@Dict begin { 158.76636 -150.79962 } PutCoor PutBegin  end
 1470 2814 a 0.30196 0.30196 1
TeXcolorrgb 1468 2813 a FB(C)p 0 TeXcolorgray 1470 2814
a
tx@Dict begin  PutEnd  end
 1470 2814 a 3124 4298 a
currentpoint initclip moveto
 3124 4298 a -38 4451 a FK(P)m(ar)21
b(d\351\002nition)g(d)n('une)h(sym\351tr)q(ie)g(centr)o(ale)o(,)g
FB(B)29 b FK(est)22 b(le)g(milieu)h(du)e(segment)2268
4452 y([)2299 4451 y FB(A)o(C)2405 4452 y FK(])2438 4451
y(,)g(donc)g(d)n('apr\350s)h(la)f(for)q(mule)h(du)f(cours)h(pour)f(le)h
(milieu)-38 4551 y(d)n('un)c(segment)g(:)1435 4677 y
FB(x)1476 4689 y Fw(B)1538 4677 y FG(\306)1619 4621 y
FB(x)1664 4633 y Fw(A)1718 4621 y FG(\305)12 b FB(x)1824
4633 y Fw(C)p 1617 4658 258 5 v 1725 4734 a FK(2)2030
4677 y(,)158 b FB(y)2247 4689 y Fw(B)2309 4677 y FG(\306)2392
4621 y FB(y)2435 4633 y Fw(A)2488 4621 y FG(\305)14 b
FB(y)2594 4633 y Fw(C)p 2388 4658 257 5 v 2496 4734 a
FK(2)2654 4677 y(.)-38 4859 y(A)n(utr)o(ement)k(dit,)g(en)f(r)o
(empla\347ant)h(avec)g(les)g(donn\351es)g(de)f(l)o('\351nonc\351)i(:)
1396 5068 y(3,)8 b(25)16 b FG(\306)1639 5012 y FK(1)10
b FG(\305)i FB(x)1795 5024 y Fw(C)p 1639 5049 207 5 v
1722 5125 a FK(2)2002 5068 y(,)155 b FG(\241)p FK(1,)8
b(75)16 b FG(\306)2475 5012 y FK(2)10 b FG(\305)k FB(y)2631
5024 y Fw(C)p 2475 5049 V 2558 5125 a FK(2)2691 5068
y(.)-38 5280 y(En)j(r)o(aisonnant)i(comme)f(dans)g(la)f(question)i
(pr\351c\351dente)o(,)f(on)g(obtient)1055 5456 y FB(x)1094
5468 y Fw(C)1158 5456 y FG(\306)d FK(2)10 b FG(\243)g
FK(3,)e(25)i FG(\241)g FK(1)17 b FG(\306)d FK(5,)8 b(5)148
b(,)158 b FB(y)2163 5468 y Fw(C)2227 5456 y FG(\306)14
b FK(2)c FG(\243)g FK(\()p FG(\241)p FK(1,)e(75\))i FG(\241)g
FK(2)18 b FG(\306)c(\241)p FK(5,)8 b(5.)-38 5646 y(C)o(onclusion)19
b(:)d FB(C)9 b FK(\(5,)f(5)18 b(;)25 b FG(\241)p FK(5,)8
b(5\).)-246 5721 y
SDict begin H.S end
 -246 5721 a -246 5721 a
SDict begin 12 H.A end
 -246 5721
a -246 5721 a
SDict begin [/View [/XYZ H.V]/Dest (exo.43) cvn /DEST pdfmark end
 -246 5721 a 0 TeXcolorgray 1909 5895 a
FK(21)p 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FL(Ex)o(er)o(cice)14
b(43)p 0 TeXcolorgray 41 w FK(C)o(et)k(exer)o(cice)g(d)n('introduction)
g(\340)f(la)g(notion)h(de)g(vecteur)f(appelle)j(quelques)f(commentair)o
(es)g(:)-246 -116 y
SDict begin H.S end
 -246 -116 a -246 -116 a
SDict begin 12 H.A end
 -246 -116
a -246 -116 a
SDict begin [/View [/XYZ H.V]/Dest (Item.90) cvn /DEST pdfmark end
 -246 -116 a 0 TeXcolorgray -141 -8 a FK(1.)p
0 TeXcolorgray 43 w(La)e(t\351l\351cabine)i FB(E)8 b(F)g(G)g(H)25
b FK(glisse)18 b(pour)g(aboutir)f(\340)g(la)h(position)j
FB(I)14 b(J)8 b(K)k(L)s FK(.)19 b(C)o(e)f(d\351placement)h(est)f
(appel\351)h(\253)14 b(tr)o(anslation)k(de)f(vecteur)3775
-62 y FG(\241)-18 b(!)3781 -8 y FB(A)s(B)22 b FK(\273.)-246
25 y
SDict begin H.S end
 -246 25 a -246 25 a
SDict begin 12 H.A end
 -246 25 a -246 25 a
SDict begin [/View [/XYZ H.V]/Dest (Item.91) cvn /DEST pdfmark end
 -246 25
a 0 TeXcolorgray -141 133 a FK(2.)p 0 TeXcolorgray 43
w(Le)i(vecteur)348 80 y FG(\241)-19 b(!)354 133 y FB(A)s(B)31
b FK(a)23 b(\351t\351)h(r)o(epr\351sent\351)g(en)g(violet)g(sur)g(la)f
(\002gur)o(e)o(,)f(il)i(est)g(\351gal)f(\340)g(chacun)h(des)g(vecteurs)
2998 80 y FG(\241)-40 b(!)2998 133 y FB(E)10 b(I)g FK(,)3133
80 y FG(\241)-38 b(!)3133 133 y FB(F)15 b(J)8 b FK(,)3270
80 y FG(\241)-33 b(\241)g(!)3268 133 y FB(G)6 b(K)35
b FK(et)3502 80 y FG(\241)-35 b(\241)g(!)3504 133 y FB(H)8
b(L)t FK(.)23 b(On)g(peut)i(donc)-38 233 y(\351cr)q(ir)o(e)1610
279 y FG(\241)-19 b(!)1616 332 y FB(A)s(B)22 b FG(\306)1806
279 y(\241)-40 b(!)1806 332 y FB(E)10 b(I)24 b FG(\306)1981
279 y(\241)-38 b(!)1981 332 y FB(F)15 b(J)22 b FG(\306)2158
279 y(\241)-33 b(\241)g(!)2156 332 y FB(G)6 b(K)26 b
FG(\306)2361 279 y(\241)-35 b(\241)g(!)2363 332 y FB(H)8
b(L)d FK(.)-246 391 y
SDict begin H.S end
 -246 391 a -246 391 a
SDict begin 12 H.A end
 -246 391
a -246 391 a
SDict begin [/View [/XYZ H.V]/Dest (Item.92) cvn /DEST pdfmark end
 -246 391 a 0 TeXcolorgray -141 496 a FK(3.)p
0 TeXcolorgray 43 w(P)n(our)21 b(aller)i(de)k FB(A)e
FK(\340)d FB(B)6 b FK(,)22 b(on)g(avance)g(de)g(4)g(carr)o(eaux)f(en)i
(abscisse)f(et)g(on)g(descend)g(de)g(1)g(carr)o(eau)f(en)i(or)o
(donn\351e)9 b(;)21 b(on)h(dit)g(que)3783 443 y FG(\241)-19
b(!)3789 496 y FB(A)s(B)29 b FK(a)22 b(pour)-38 643 y(abscisse)c(4)g
(et)f(pour)h(or)o(donn\351e)f FG(\241)p FK(1.)h(On)f(note)1369
589 y FG(\241)-18 b(!)1375 643 y FB(A)s(B)1490 533 y
Ft(\265)1552 591 y FK(4)1525 691 y FG(\241)p FK(1)1620
533 y Ft(\266)1662 643 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1093 2121 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56676 a add def
/d 0.0 a add neg def /h 157.62799 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1093 2121 a 1896 1908 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 109.8276 0.0 -96.73915 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 132.0207 0.0 -25.60728   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 109.8276  0 -96.73915  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -96.73915
 109.8276  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-25.60728  def /maxTickline 132.0207  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -25.60728   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.8276
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 132.0207  0 -25.60728  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -25.60728
 132.0207  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-96.73915  def /maxTickline 109.8276  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -25.60728   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.8276
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1881 2005 a FI(0)204
b(1)i(2)f(3)-997 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)g
FH(\241)p FI(3)1807 1692 y(1)1807 1455 y(2)1807 1219
y(3)1807 983 y(4)1896 1908 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ -85.35823 28.45274
-28.45274 28.45274 -28.45274 85.35823 -85.35823 85.35823  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 28.45274 0.0 85.35823
0.0 85.35823 56.90549 28.45274 56.90549  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 85.35823 -85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 28.45274 -28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -85.35823 28.45274 -28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -85.35823 85.35823 -85.35823
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 56.90549 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 85.35823 -56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 85.35823 -56.90549 113.81097   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 56.90549 -28.45274 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 56.90549 -85.35823 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 0.0 -85.35823 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 0.0 -28.45274 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1896 1908 a
tx@Dict begin { -54.62921 119.50143 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { 59.18175 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908
a 1896 1908 a
tx@Dict begin { -83.08195 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
FB(E)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908
a
tx@Dict begin { -26.17647 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb FB(F)p 0
TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { -26.17647 34.1432 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 1894 1907 a FB(G)p
0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { -83.08195 34.1432 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 2 w FB(H)p 0 TeXcolorgray
1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { 29.59065 59.75093 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1
TeXcolorrgb 2 w FB(I)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896
1908 a 1896 1908 a
tx@Dict begin { 87.63449 62.59595 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
1901 1899 a FB(J)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908
a 1896 1908 a
tx@Dict begin { 87.63449 5.69046 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
-1 x FB(K)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896
1908 a
tx@Dict begin { 30.729 2.84544 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb FB(L)p
0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 2807 2121 a
currentpoint initclip moveto
 2807
2121 a -246 2204 a
SDict begin H.S end
 -246 2204 a -246 2204 a
SDict begin 12 H.A end
 -246 2204
a -246 2204 a
SDict begin [/View [/XYZ H.V]/Dest (exo.44) cvn /DEST pdfmark end
 -246 2204 a -246 2206 a
SDict begin H.S end
 -246 2206 a -246
2206 a
SDict begin 12 H.A end
 -246 2206 a -246 2206 a
SDict begin [/View [/XYZ H.V]/Dest (Item.93) cvn /DEST pdfmark end
 -246 2206 a 0 TeXcolorgray
114 x FL(Ex)o(er)o(cice)14 b(44)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
939 3616 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 268.59395 a add def
/d 0.0 a add neg def /h 147.95416 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 939 3616 a 1813 3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.3189 0.0 -105.27505 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 80.80568 0.0 -67.14848   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.3189  0 -105.27505  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -105.27505
 163.3189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 80.80568  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -67.14848   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -105.27505 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 80.80568  0 -67.14848  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -67.14848
 80.80568  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-105.27505  def /maxTickline 163.3189  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -67.14848   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -105.27505 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1798 3155 a FI(0)205
b(1)g(2)g(3)g(4)h(5)-1470 b FH(\241)p FI(1)-309 b FH(\241)p
FI(2)g FH(\241)p FI(3)1724 3078 y(0)1682 3314 y FH(\241)p
FI(1)1682 3550 y FH(\241)p FI(2)1724 2841 y(1)1724 2605
y(2)1813 3058 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 56.90549 -85.35823 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 0.0 28.45274 -56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -85.35823 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1813 3058 a
tx@Dict begin { -95.03206 6.25963 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813
3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1813 3058
a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1 TeXcolorrgb FB(B)p 0
TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813 3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1813 3058 a
tx@Dict begin { 19.91682 -52.35294 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1
TeXcolorrgb 2 w FB(I)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813
3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 142.26372 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1813 3058
a
tx@Dict begin { 144.53998 5.69046 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1 TeXcolorrgb 1818 3049
a FB(J)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813 3058 a 3169
3616 a
currentpoint initclip moveto
 3169 3616 a -246 3660 a
SDict begin H.S end
 -246 3660 a -246 3660
a
SDict begin 12 H.A end
 -246 3660 a -246 3660 a
SDict begin [/View [/XYZ H.V]/Dest (Item.94) cvn /DEST pdfmark end
 -246 3660 a 0 TeXcolorgray
-141 3774 a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(calcule)h(les)g(coor)o
(donn\351es)g(de)1026 3720 y FG(\241)-19 b(!)1032 3774
y FB(A)s(B)39 b FK(:)1321 3934 y FG(\241)-19 b(!)1327
3988 y FB(A)s(B)1442 3878 y Ft(\265)1478 3936 y FB(x)1519
3948 y Fw(B)1576 3936 y FG(\241)12 b FB(x)1688 3948 y
Fw(A)1480 4036 y FB(y)1519 4048 y Fw(B)1576 4036 y FG(\241)i
FB(y)1688 4048 y Fw(A)1732 3878 y Ft(\266)1921 3934 y
FG(\241)-19 b(!)1927 3988 y FB(A)s(B)2042 3878 y Ft(\265)2076
3936 y FK(1)10 b FG(\241)g FK(\()p FG(\241)p FK(3\))2130
4036 y(2)g FG(\241)g FK(0)2340 3878 y Ft(\266)2529 3934
y FG(\241)-19 b(!)2535 3988 y FB(A)s(B)2650 3878 y Ft(\265)2684
3936 y FK(4)2684 4036 y(2)2724 3878 y Ft(\266)2767 3988
y FK(.)-246 4149 y
SDict begin H.S end
 -246 4149 a -246 4149 a
SDict begin 12 H.A end
 -246 4149
a -246 4149 a
SDict begin [/View [/XYZ H.V]/Dest (Item.95) cvn /DEST pdfmark end
 -246 4149 a 0 TeXcolorgray -141 4257 a
FK(3.)p 0 TeXcolorgray 43 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g
(de)1026 4203 y FG(\241)-53 b(!)1028 4257 y FB(I)14 b(J)41
b FK(:)1385 4342 y FG(\241)-53 b(!)1387 4395 y FB(I)14
b(J)1472 4285 y Ft(\265)1508 4344 y FB(x)1553 4356 y
Fw(J)1594 4344 y FG(\241)e FB(x)1704 4356 y Fw(I)1510
4444 y FB(y)1553 4456 y Fw(J)1594 4444 y FG(\241)i FB(y)1704
4456 y Fw(I)1736 4285 y Ft(\266)1925 4342 y FG(\241)-53
b(!)1927 4395 y FB(I)14 b(J)2011 4285 y Ft(\265)2100
4344 y FK(5)c FG(\241)g FK(1)2045 4444 y(0)g FG(\241)g
FK(\()p FG(\241)p FK(2\))2310 4285 y Ft(\266)2498 4342
y FG(\241)-53 b(!)2500 4395 y FB(I)14 b(J)2585 4285 y
Ft(\265)2619 4344 y FK(4)2619 4444 y(2)2660 4285 y Ft(\266)2702
4395 y FK(.)-38 4617 y(C)o(onclusion)19 b(:)f(les)g(vecteurs)830
4563 y FG(\241)-19 b(!)836 4617 y FB(A)s(B)25 b FK(et)1043
4563 y FG(\241)-53 b(!)1045 4617 y FB(I)14 b(J)26 b FK(ont)18
b(les)g(m\352mes)h(coor)o(donn\351es)o(,)f(donc)f(ils)h(sont)g
(\351gaux)g(:)2852 4563 y FG(\241)-19 b(!)2858 4617 y
FB(A)s(B)22 b FG(\306)3048 4563 y(\241)-53 b(!)3050 4617
y FB(I)14 b(J)c FK(.)p 0 TeXcolorgray 1909 5895 a(22)p
0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.45) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(45)p 0 TeXcolorgray 41 w FK(On)j(consid\350r)o(e)h(les)g(points)25
b FB(A)s FK(\()p FG(\241)p FK(3;)8 b FG(\241)p FK(2\),)18
b FB(B)7 b FK(\(5;)h FG(\241)p FK(2\),)17 b FB(C)9 b
FK(\(1;)f(4\),)18 b FB(D)6 b FK(\()p FG(\241)p FK(1;)i(1\),)19
b FB(E)8 b FK(\(3;)g(1\),)18 b FB(F)10 b FK(\(5;)e(4\).)p
0 TeXcolorgray 0 TeXcolorgray 901 1306 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 252.66048 a add def
/d 0.0 a add neg def /h 198.03128 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 901 1306 a 1719
730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -42.67911 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 115.66034 0.0 -73.83499 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -64.01866 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.45486 0.0 -52.06856   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 115.66034  0 -73.83499  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -73.83499
 115.66034  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-52.06856  def /maxTickline 96.45486  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.45486
0.0 -52.06856   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 115.66034
0.0 -73.83499 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.45486  0 -52.06856  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -52.06856
 96.45486  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-73.83499  def /maxTickline 115.66034  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.45486
0.0 -52.06856   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 115.66034
0.0 -73.83499 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1704 827 a FI(0)145 b(1)h(2)h(3)f(4)g(5)-1115
b FH(\241)p FI(1)-250 b FH(\241)p FI(2)g FH(\241)p FI(3)1630
749 y(0)1588 927 y FH(\241)p FI(1)1588 1104 y FH(\241)p
FI(2)1630 572 y(1)1630 395 y(2)1630 218 y(3)1630 41 y(4)1719
730 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 -42.67911 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 21.33955 85.35822 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 -42.67911 21.33955 85.35822
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 64.01866 21.33955 -21.33955 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 21.33955 85.35822
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 64.01866 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 64.01866 21.33955 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 -21.33955 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -64.01866 -42.67911
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { -69.56682 -38.41125 } PutCoor PutBegin  end
 1719 730 a 6 w FB(A)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 106.69777 -42.67911
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1719 730 a
tx@Dict begin { 108.40497 -40.11845 } PutCoor PutBegin  end
 1719
730 a FB(B)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 21.33955 85.35822
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1719 730 a
tx@Dict begin { 23.04675 87.91885 } PutCoor PutBegin  end
 1719 730 a 1717 729 a FB(C)1719
730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -21.33955 21.33955
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { -29.87524 25.18051 } PutCoor PutBegin  end
 1719 730 a FB(D)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 64.01866 21.33955
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1719 730 a
tx@Dict begin { 70.42058 16.21794 } PutCoor PutBegin  end
 1719 730 a FB(E)1719
730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 106.69777 85.35822
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { 108.40497 87.91885 } PutCoor PutBegin  end
 1719 730 a FB(F)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a 2999
1306 a
currentpoint initclip moveto
 2999 1306 a -246 1253 a FK(Il)18 b(y)g(a)g(trop)g(de)f
(possibilit\351s)k(pour)e(que)g(les)f(justi\002e)i(toutes)o(.)f(J)n(e)f
(vais)g(me)h(contenter)g(de)f(donner)g(un)h(couple)g(de)f(vecteurs)h
(\351gaux,)g(avec)f(la)h(justi\002-)-246 1352 y(cation)9
b(;)18 b(puis)g(donner)g(toutes)g(les)h(autr)o(es)e(\351galit\351s)h
(possibles)o(,)i(mais)e(sans)g(les)g(justi\002er)g(:)-246
1386 y
SDict begin H.S end
 -246 1386 a -246 1386 a
SDict begin 12 H.A end
 -246 1386 a -246 1386
a
SDict begin [/View [/XYZ H.V]/Dest (Item.96) cvn /DEST pdfmark end
 -246 1386 a 0 TeXcolorgray -141 1481 a FK(1.)p 0 TeXcolorgray
43 w FL(U)l(ne)d(\351galit\351)g(et)h(sa)f(justi\002cation.)-38
1555 y FG(\241)-33 b(\241)h(!)-38 1608 y FB(D)t(C)23
b FG(\306)167 1555 y(\241)-25 b(!)167 1608 y FB(E)8 b(F)h
FK(.)17 b(En)h(effet,)g(ces)g(vecteurs)g(ont)g(les)g(m\352mes)h(coor)o
(donn\351es)f(:)p 0 TeXcolorgray 7 1748 a(\225)p 0 TeXcolorgray
80 1695 a FG(\241)-33 b(\241)h(!)80 1748 y FB(D)t(C)209
1638 y Ft(\265)245 1697 y FB(x)284 1709 y Fw(C)344 1697
y FG(\241)12 b FB(x)452 1709 y Fw(D)248 1796 y FB(y)285
1808 y Fw(C)344 1796 y FG(\241)i FB(y)452 1808 y Fw(D)506
1638 y Ft(\266)695 1695 y FG(\241)-33 b(\241)h(!)695
1748 y FB(D)t(C)824 1638 y Ft(\265)858 1697 y FK(1)10
b FG(\241)g FK(\()p FG(\241)p FK(1\))912 1796 y(4)g FG(\241)g
FK(1)1123 1638 y Ft(\266)1311 1695 y FG(\241)-32 b(\241)f(!)1311
1748 y FB(D)t(C)1441 1638 y Ft(\265)1475 1697 y FK(2)1475
1796 y(3)1515 1638 y Ft(\266)1558 1748 y FK(.)p 0 TeXcolorgray
7 1956 a(\225)p 0 TeXcolorgray 80 1902 a FG(\241)-24
b(!)80 1956 y FB(E)8 b(F)195 1846 y Ft(\265)231 1904
y FB(x)272 1916 y Fw(F)328 1904 y FG(\241)k FB(x)436
1916 y Fw(E)234 2004 y FB(y)273 2016 y Fw(F)328 2004
y FG(\241)i FB(y)436 2016 y Fw(E)481 1846 y Ft(\266)670
1902 y FG(\241)-24 b(!)670 1956 y FB(E)8 b(F)785 1846
y Ft(\265)819 1904 y FK(5)i FG(\241)g FK(3)819 2004 y(4)g
FG(\241)g FK(1)976 1846 y Ft(\266)1164 1902 y FG(\241)-24
b(!)1164 1956 y FB(E)8 b(F)1279 1846 y Ft(\265)1313 1904
y FK(2)1313 2004 y(3)1354 1846 y Ft(\266)1396 1956 y
FK(.)-246 2048 y
SDict begin H.S end
 -246 2048 a -246 2048 a
SDict begin 12 H.A end
 -246 2048 a
-246 2048 a
SDict begin [/View [/XYZ H.V]/Dest (Item.97) cvn /DEST pdfmark end
 -246 2048 a 0 TeXcolorgray -141 2129 a FK(2.)p
0 TeXcolorgray 43 w FL(T)-7 b(outes)15 b(les)h(autr)o(es)e
(\351galit\351s.)-38 2202 y FG(\241)-21 b(!)-40 2255
y FB(C)9 b(F)24 b FG(\306)156 2202 y(\241)-34 b(\241)g(!)156
2255 y FB(D)6 b(E)420 2202 y FG(\241)-21 b(!)420 2255
y FB(F)8 b(C)23 b FG(\306)614 2202 y(\241)-34 b(\241)g(!)614
2255 y FB(E)8 b(D)878 2202 y FG(\241)-33 b(\241)h(!)876
2255 y FB(C)9 b(D)20 b FG(\306)1082 2202 y(\241)-24 b(!)1082
2255 y FB(F)10 b(E)1336 2202 y FG(\241)-33 b(\241)h(!)1336
2255 y FB(D)t(C)23 b FG(\306)1540 2202 y(\241)-32 b(\241)f(!)1546
2255 y FB(A)s(D)1808 2202 y FG(\241)-24 b(!)1808 2255
y FB(E)8 b(F)23 b FG(\306)1998 2202 y(\241)-32 b(\241)f(!)2004
2255 y FB(A)s(D)2266 2202 y FG(\241)g(\241)g(!)2266 2255
y FB(D)12 b(A)17 b FG(\306)2470 2202 y(\241)-32 b(\241)f(!)2468
2255 y FB(C)9 b(D)2738 2202 y FG(\241)-33 b(\241)g(!)2738
2255 y FB(D)12 b(A)17 b FG(\306)2942 2202 y(\241)-24
b(!)2942 2255 y FB(F)10 b(E)3196 2202 y FG(\241)-22 b(!)3202
2255 y FB(A)s(E)21 b FG(\306)3389 2202 y(\241)-34 b(\241)g(!)3389
2255 y FB(D)6 b(F)3653 2202 y FG(\241)-21 b(!)3653 2255
y FB(E)14 b(A)j FG(\306)3847 2202 y(\241)-34 b(\241)g(!)3847
2255 y FB(F)10 b(D)4111 2202 y FG(\241)-21 b(!)4109 2255
y FB(C)9 b(E)22 b FG(\306)-38 2302 y(\241)-22 b(!)-38
2355 y FB(E)8 b(B)218 2302 y FG(\241)-22 b(!)218 2355
y FB(E)6 b(C)22 b FG(\306)411 2302 y(\241)-22 b(!)411
2355 y FB(B)7 b(E)-38 2519 y Fu(")p FK(A)o(ttention)19
b(\340)e(l)o('or)o(dr)o(e)f(des)h(lettr)o(es)9 b(!)18
b(P)m(ar)f(exemple)o(,)1548 2466 y FG(\241)-32 b(\241)f(!)1548
2519 y FB(D)t(C)24 b FG(\306)1753 2466 y(\241)-24 b(!)1753
2519 y FB(E)8 b(F)h FK(,)18 b(mais)2080 2466 y FG(\241)-32
b(\241)f(!)2080 2519 y FB(D)t(C)24 b FG(6\306)2285 2466
y(\241)-24 b(!)2285 2519 y FB(F)10 b(E)24 b FK(\(il)18
b(y)e(a)h(un)h(probl\350me)f(de)g(sens)h(:)f(le)h(vecteur)3733
2466 y FG(\241)-33 b(\241)h(!)3733 2519 y FB(D)t(C)26
b FK(\253)14 b(monte)-38 2631 y(vers)j(le)h(haut)f(et)h(la)f(droite)c
(\273)c(;)16 b(tandis)i(que)1211 2578 y FG(\241)-24 b(!)1211
2631 y FB(F)10 b(E)24 b FK(\253)13 b(descend)18 b(vers)f(le)g(bas)g(et)
g(la)g(gauche)c(\273)35 b(\226)17 b(l)o('err)o(eur)g(se)g(d\351tecte)h
(aussi)g(bien)f(s\373r)g(en)h(calculant)-38 2731 y(les)g(coor)o
(donn\351es\).)-246 2807 y
SDict begin H.S end
 -246 2807 a -246 2807 a
SDict begin 12 H.A end
 -246
2807 a -246 2807 a
SDict begin [/View [/XYZ H.V]/Dest (exo.46) cvn /DEST pdfmark end
 -246 2807 a 0 TeXcolorgray 123 x FL(Ex)o(er)o(cice)c
(46)p 0 TeXcolorgray 41 w FK(En)22 b(physique)o(,)h(un)f(vecteur)g(r)o
(epr\351sente)g(une)h(for)o(ce)o(,)e(et)g(la)h(longueur)g(\(ou)g(nor)q
(me\))g(du)f(vecteur)h(corr)o(espond)f(\340)h(l)o('intensit\351)i(de)d
(la)-246 3048 y(for)o(ce)o(.)c(L)-10 b('\351galit\351)264
2957 y Ft(\260)264 3003 y(\260)264 3049 y(\260)306 2994
y FG(\241)-46 b(!)306 3048 y FB(P)356 3060 y FI(2)392
2957 y Ft(\260)392 3003 y(\260)392 3049 y(\260)448 3048
y FG(\306)14 b FK(2)565 2957 y Ft(\260)565 3003 y(\260)565
3049 y(\260)608 2994 y FG(\241)-46 b(!)608 3048 y FB(P)658
3060 y FI(1)694 2957 y Ft(\260)694 3003 y(\260)694 3049
y(\260)753 3048 y FK(signi\002e)18 b(que)g(la)f(masse)i(2)e(a)h(un)f
(poids)h(deux)g(fois)g(plus)g(impor)q(tant)h(que)f(celui)g(de)f(la)h
(masse)g(1.)p 0 TeXcolorgray 0 TeXcolorgray 1213 4556
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 177.54527 a add def
/d 0.0 a add neg def /h 165.026 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1213 4556 a 2125 4840 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 56.90549 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 67.71767 0.0 -109.8276 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 199.1692 0.0 34.1432   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -85.35823
85.35823 -85.35823 142.26372   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -28.45274
56.90549 -28.45274 170.71646   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2125 4840 a
tx@Dict begin { -73.9773 128.03734 } PutCoor PutBegin  end
 2125 4840 a 31 x FG(\241)-46 b(!)2125 4925
y FB(P)2175 4937 y FI(1)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125
4840 a
tx@Dict begin { -17.07181 128.03734 } PutCoor PutBegin  end
 2125 4840 a 31 x FG(\241)g(!)2125 4925 y FB(P)2175
4937 y FI(2)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125 4840 a
tx@Dict begin { -98.44667 160.47345 } PutCoor PutBegin  end
 2125
4840 a 51 x FK(masse)18 b(1)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125
4840 a
tx@Dict begin { -45.52455 190.63329 } PutCoor PutBegin  end
 2125 4840 a 51 x FK(masse)g(2)2125 4840 y
tx@Dict begin  PutEnd  end
 2125
4840 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  [ -85.35823 142.26372
  false NArray  /DS 8.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  [ -28.45274 170.71646
  false NArray  /DS 11.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2687 4556 a
currentpoint initclip moveto
 2687 4556 a 0 TeXcolorgray
1909 5895 a FK(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.47) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 121 x FL(Ex)o(er)o(cice)
14 b(47)p 0 TeXcolorgray 41 w FK(L)-10 b('image)19 b(du)e(tr)q(iangle)
23 b FB(A)s(B)5 b(C)27 b FK(par)18 b(la)f(tr)o(anslation)i(de)e
(vecteur)2040 -162 y FG(\241)-57 b(!)2052 -125 y FB(u)2123
-235 y Ft(\265)2184 -176 y FK(5)2157 -76 y FG(\241)p
FK(3)2252 -235 y Ft(\266)2304 -125 y FK(est)18 b(le)f(tr)q(iangle)h
FB(D)6 b(E)i(F)l FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1045 1976 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 218.09026 a add def
/d 0.0 a add neg def /h 232.601 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1045 1976 a 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 21.33955 64.01866
0.0 -85.35822 -42.67911 42.67911  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ 128.03732 0.0 106.69777
-149.37688 64.01866 -21.33955  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0.8 1 0.8  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 -85.35822 -42.67911
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 21.33955 64.01866 0.0
-85.35822   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -42.67911 42.67911 21.33955
64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
64.01866 -21.33955 -42.67911 42.67911   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 -149.37688 0.0 -85.35822   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
128.03732 0.0 21.33955 64.01866   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 -149.37688
64.01866 -21.33955   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03732 0.0 106.69777
-149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 -21.33955 128.03732
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1498 661 a
tx@Dict begin { 72.55435 53.34888 } PutCoor PutBegin  end
 1498
661 a 0.49803 0 1 TeXcolorrgb 84 x FG(\241)-57 b(!)1510
783 y FB(u)1581 672 y Ft(\265)1642 731 y FK(5)1615 831
y FG(\241)p FK(3)1710 672 y Ft(\266)p 0 TeXcolorgray
1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -42.67911 42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1498 661 a
tx@Dict begin { -40.9719 46.94695 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1 TeXcolorrgb 6
w FB(A)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -85.35822   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { -11.95009 -81.09036 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33955 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { 23.04675 67.43306 } PutCoor PutBegin  end
 1498
661 a 0.30196 0.30196 1 TeXcolorrgb 1496 660 a FB(C)p
0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01866 -21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1498 661 a
tx@Dict begin { 65.72586 -17.0717 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1
TeXcolorrgb FB(D)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 106.69777 -149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { 110.53873 -145.96246 } PutCoor PutBegin  end
 1498
661 a 0.30196 0.30196 1 TeXcolorrgb FB(E)p 0 TeXcolorgray
1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1498 661 a
tx@Dict begin { 129.74452 4.26784 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1 TeXcolorrgb FB(F)p
0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -149.37688 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.46106 0.0 -54.6292 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 74.26155 0.0 -158.33945   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.46106  0 -54.6292  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -54.6292
 163.46106  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-158.33945  def /maxTickline 74.26155  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.26155
0.0 -158.33945   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.46106
0.0 -54.6292 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 74.26155  0 -158.33945  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -158.33945
 74.26155  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.6292  def /maxTickline 163.46106  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.26155
0.0 -158.33945   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.46106
0.0 -54.6292 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1483 758 a FI(0)146
b(1)g(2)g(3)g(4)h(5)f(6)g(7)-1469 b FH(\241)p FI(1)-250
b FH(\241)p FI(2)1409 681 y(0)1368 858 y FH(\241)p FI(1)1368
1035 y FH(\241)p FI(2)1368 1212 y FH(\241)p FI(3)1368
1390 y FH(\241)p FI(4)1368 1567 y FH(\241)p FI(5)1368
1744 y FH(\241)p FI(6)1368 1921 y FH(\241)p FI(7)1409
504 y(1)1409 327 y(2)2855 1976 y
currentpoint initclip moveto
 2855 1976 a -246 2104
a
SDict begin H.S end
 -246 2104 a -246 2104 a
SDict begin 12 H.A end
 -246 2104 a -246 2104 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -246
2104 a 149 x FM(4)105 b(\311)n(tudes)23 b(graphiques)g(de)f(fonctions)
-246 2364 y
SDict begin H.S end
 -246 2364 a -246 2364 a
SDict begin 12 H.A end
 -246 2364 a -246
2364 a
SDict begin [/View [/XYZ H.V]/Dest (exo.48) cvn /DEST pdfmark end
 -246 2364 a 0 TeXcolorgray 73 x FL(Ex)o(er)o(cice)14
b(48)p 0 TeXcolorgray 41 w FK(U)m(n)27 b(vo)n(yageur)e(de)h(commer)o
(ce)g(\()p FG(\306)g FK(un)g(r)o(epr\351sentant\))h(fait)g(une)f(note)h
(de)f(fr)o(ais)g(pour)h(chaque)f(jour)h(de)e(tr)o(avail)i(o\371)f(il)h
(utilise)g(sa)-246 2537 y(voitur)o(e)o(.)18 b(Il)e(r)o(e\347oit)i(une)g
(par)q(t)f(\002xe)g(de)g(30)h FE(N)p FK(,)f(et)h(une)g(indemnit\351)h
(de)e(0,5)i FE(N)p FK(/km.)-246 2686 y FL(R)o(emarque)f(:)j
FK(On)h(peut)g(penser)g(que)g(l)o('indemnit\351)i(kilom\351tr)q(ique)f
(ser)q(t)f(\340)f(r)o(embourser)g(les)h(fr)o(ais)g(de)f(d\351placement)
i(\(par)e(exemple)i(si)f(le)g(r)o(epr\351-)-246 2786
y(sentant)d(utilise)g(sa)f(propr)o(e)e(voitur)o(e\))9
b(;)18 b(et)f(que)h(la)g(par)q(t)f(\002xe)g(ser)q(t)g(\340)g(payer)g
(les)h(r)o(epas)o(.)-246 2834 y
SDict begin H.S end
 -246 2834 a -246 2834
a
SDict begin 12 H.A end
 -246 2834 a -246 2834 a
SDict begin [/View [/XYZ H.V]/Dest (Item.98) cvn /DEST pdfmark end
 -246 2834 a 0 TeXcolorgray
-141 2929 a FK(1.)p 0 TeXcolorgray 43 w(S)o('il)h(fait)e(120)i(km)f
(dans)f(la)h(jour)q(n\351e)o(,)f(le)h(montant)h(de)e(la)g(note)h(de)g
(fr)o(ais)g(est)g(de)1532 3112 y(30)10 b FG(\305)g FK(120)g
FG(\243)g FK(0,)e(5)19 b FG(\306)14 b FK(30)c FG(\305)g
FK(60)17 b FG(\306)d FK(90)k FE(N)p FK(.)-246 3206 y
SDict begin H.S end

-246 3206 a -246 3206 a
SDict begin 12 H.A end
 -246 3206 a -246 3206 a
SDict begin [/View [/XYZ H.V]/Dest (Item.99) cvn /DEST pdfmark end
 -246
3206 a 0 TeXcolorgray -141 3309 a FK(2.)p 0 TeXcolorgray
43 w(On)f(note)j FB(x)j FK(le)17 b(nombr)o(e)h(de)f(km)g(par)o(cour)q
(us)g(par)h(le)f(vo)n(yageur)g(de)g(commer)o(ce)o(,)h(et)25
b FB(f)19 b FK(\()r FB(x)5 b FK(\))17 b(le)h(montant)h(de)e(la)g(note)h
(de)g(fr)o(ais)o(.)f(On)h(a)f(alors)1543 3492 y FB(f)i
FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(30)c FG(\305)i
FB(x)j FG(\243)10 b FK(0,)e(5)18 b FG(\306)c FK(0,)8
b(5)r FB(x)15 b FG(\305)10 b FK(30.)-246 3593 y
SDict begin H.S end
 -246
3593 a -246 3593 a
SDict begin 12 H.A end
 -246 3593 a -246 3593 a
SDict begin [/View [/XYZ H.V]/Dest (Item.100) cvn /DEST pdfmark end
 -246 3593
a 0 TeXcolorgray -141 3689 a FK(3.)p 0 TeXcolorgray 43
w(La)k(fonction)22 b FB(f)34 b FK(est)14 b(af\002ne)o(,)g(puisque)22
b FB(f)f FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(0,)8
b(5)r FB(x)f FG(\305)r FK(30)14 b(\(c)n('est)g(bien)g(une)g(fonction)g
(de)g(la)g(for)q(me)22 b FB(f)i FK(\()r FB(x)5 b FK(\))14
b FG(\306)i FB(a)6 b(x)h FG(\305)r FB(b)q FK(,)14 b(avec)i
FB(a)i FG(\306)c FK(0,)8 b(5)14 b(et)g FB(b)20 b FG(\306)14
b FK(30\).)g(S)o(a)-38 3789 y(courbe)j(r)o(epr\351sentative)i(est)f
(donc)f(une)h(droite)o(,)f(que)h(l)o('on)g(tr)o(ace)f(\340)g(par)q(tir)
h(d)n('un)f(tableau)h(de)f(valeurs)h(avec)g(deux)f(valeurs)9
b(;)18 b(par)g(exemple)h(:)p 0 TeXcolorgray 0 TeXcolorgray
654 3908 666 4 v 654 4008 4 100 v 762 3978 a FB(x)p 908
4008 V 180 w FK(0)p 1092 4008 V 124 w(120)p 1317 4008
V 654 4011 666 4 v 654 4111 4 100 v 715 4081 a FB(f)g
FK(\()r FB(x)5 b FK(\))p 908 4111 V 103 w(30)p 1092 4111
V 124 w(90)p 1317 4111 V 654 4114 666 4 v 608 4308 a
FB(f)19 b FK(\(0\))14 b FG(\306)g FK(0,)8 b(5)i FG(\243)g
FK(0)g FG(\305)g FK(30)18 b FG(\306)c FK(30)527 4433
y FB(f)19 b FK(\(120\))c FG(\306)f FK(0,)8 b(5)i FG(\243)g
FK(120)g FG(\305)g FK(30)19 b FG(\306)14 b FK(90)p 0
TeXcolorgray 2050 4480 9 576 v 0 TeXcolorgray 2095 3988
a(On)21 b(place)h(les)g(points)h(de)e(coor)o(donn\351es)g(\(0;)8
b(30\))23 b(et)f(\(120;)8 b(90\),)23 b(puis)2095 4087
y(on)18 b(tr)o(ace)g(la)g(droite)g(\226)g(en)g(r\351alit\351)h(un)f
(segment,)i(puisqu)n('on)g(va)d(de)h(0)2095 4187 y(\340)f(200)i(en)f
(abscisses)o(.)-38 4726 y FL(R)o(emarque)e(:)j FK(On)h(a)f(choisi)h
(les)g(valeurs)h(0)f(et)f(120,)i(mais)g(on)e(peut)i(pr)o(endr)o(e)e(n)
-6 b('impor)q(te)20 b(quelles)h(valeurs)g(\226)e(l)o('avantage)i(de)e
(0,)h(c)n('est)g(que)g(le)-38 4826 y(calcul)e(est)g(facile)9
b(;)18 b(et)f(l)o('avantage)i(de)e(120,)i(c)n('est)f(qu)n('on)g(a)f
(d\351j\340)g(fait)h(le)g(calcul)g(dans)f(la)h(question)h(1.)p
0 TeXcolorgray 1909 5895 a(24)p 0 TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.25) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1331 1478
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.20155 a add def
/d 0.0 a add neg def /h 207.61046 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 1478 a 1482 1378 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 15 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 156.01645 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22714
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 195.5174 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22272
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 156.01645  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 156.01645  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 195.5174  def /dT 932100 abs 65536 div viceversa
{ neg } if def /DT 20. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.71114  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.71114  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 195.5174  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 195.5174  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.01645  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.42271  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1467 1475 a FI(0)71
b(20)56 b(40)g(60)g(80)41 b(100)25 b(120)g(140)g(160)g(180)1393
1397 y(0)1362 1279 y(10)1362 1161 y(20)1362 1042 y(30)1362
924 y(40)1362 806 y(50)1362 688 y(60)1362 570 y(70)1362
452 y(80)1362 334 y(90)1331 216 y(100)1331 98 y(110)1331
-21 y(120)1482 1378 y
tx@Dict begin { 92.44766 11.51305 } PutCoor PutBegin  end
 1482 1378 a 57 x FK(km)17 b(par)o(cour)q(us)1482
1378 y
tx@Dict begin  PutEnd  end
 1482 1378 a 1482 1378 a
tx@Dict begin { 4.1484 180.28 } PutCoor PutBegin  end
 1482 1378 a 57 x FK(montant)h(de)f(la)
1482 1534 y(note)h(de)f(fr)o(ais)1482 1378 y
tx@Dict begin  PutEnd  end
 1482 1378
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.22717 184.95285
0.0 42.68143   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 106.70357 0.0
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 0.0 64.00223
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.68143   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.3363 128.04428   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2777 1478 a
currentpoint initclip moveto
 2777 1478 a -246
1522 a
SDict begin H.S end
 -246 1522 a -246 1522 a
SDict begin 12 H.A end
 -246 1522 a -246 1522
a
SDict begin [/View [/XYZ H.V]/Dest (Item.101) cvn /DEST pdfmark end
 -246 1522 a 0 TeXcolorgray -141 1636 a FK(4.)p 0 TeXcolorgray
43 w(Le)j(vo)n(yageur)e(de)h(commer)o(ce)g(a)g(une)h(note)g(de)f(fr)o
(ais)g(de)g(75)h FE(N)p FK(.)f(P)n(our)g(d\351ter)q(miner)g(le)h(nombr)
o(e)f(de)g(km)g(par)o(cour)q(us)g(dans)g(la)g(jour)q(n\351e)o(,)h(il)f
(y)g(a)-38 1736 y(deux)e(m\351thodes)i(:)p 0 TeXcolorgray
7 1850 a(\225)p 0 TeXcolorgray 42 w FL(G)o(raphiquement)q(.)d
FK(On)i(voit)f(qu)n('il)i(a)e(par)o(cour)q(u)f(90)j(km)e
(\(pointill\351s)j(rouges\))p 0 0 1 TeXcolorrgb 2390
1850 a
SDict begin H.S end
 2390 1850 a -30 x FI(3)2425 1850 y
SDict begin 12 H.L end
 2425 1850 a
2425 1850 a
SDict begin [/Subtype /Link/Dest (Hfootnote.3) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2425 1850 a 0 TeXcolorgray FK(.)p 0 TeXcolorgray
7 1950 a(\225)p 0 TeXcolorgray 42 w FL(P)m(ar)d(le)h(calcul.)h
FK(On)h(r)o(etir)o(e)f(les)i(fr)o(ais)g(\002xes)f(:)g(90)11
b FG(\241)g FK(30)20 b FG(\306)d FK(60)k FE(N)e FK(d)n('indemnit\351)j
(kilom\351tr)q(ique)o(.)g(P)o(uis)o(,)f(comme)g(chaque)g(km)g(compte)g
(pour)80 2049 y(0,)8 b(5)18 b FE(N)p FK(,)f(on)h(divise)g(:)g(45)10
b FG(\245)g FK(0,)e(5)17 b FG(\306)d FK(45)c FG(\243)g
FK(2)16 b FG(\306)e FK(90)k(km)q(.)p 0 0 1 TeXcolorrgb
1536 2049 a
SDict begin H.S end
 1536 2049 a -30 x FI(4)1571 2049 y
SDict begin 12 H.L end
 1571 2049
a 1571 2049 a
SDict begin [/Subtype /Link/Dest (Hfootnote.4) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1571 2049 a 0 TeXcolorgray -246 2126 a
SDict begin H.S end

-246 2126 a -246 2126 a
SDict begin 12 H.A end
 -246 2126 a -246 2126 a
SDict begin [/View [/XYZ H.V]/Dest (exo.49) cvn /DEST pdfmark end
 -246
2126 a -246 2145 a
SDict begin H.S end
 -246 2145 a -246 2145 a
SDict begin 12 H.A end
 -246 2145
a -246 2145 a
SDict begin [/View [/XYZ H.V]/Dest (Item.102) cvn /DEST pdfmark end
 -246 2145 a 0 TeXcolorgray 103 x FL(Ex)o(er)o(cice)c(49)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Lorsqu)n('on)k
(t\351l\351charge)g(50)g(M)n(o)m(,)f(on)h(paye)f(3)g
FE(N)p FK(.)p 0 TeXcolorgray 7 2348 a(\225)p 0 TeXcolorgray
42 w(Lorsqu)n('on)i(t\351l\351charge)f(150)h(M)n(o)m(,)e(les)i(100)g
(pr)o(emiers)f(co\373tent)h(3)f FE(N)9 b FK(;)17 b(et)h(les)h(50)f
(suivants)h(co\373tent)g(50)10 b FG(\243)g FK(0,)e(04)18
b FG(\306)d FK(2)j FE(N)p FK(.)f(On)h(paye)f(donc)g(au)80
2448 y(total)h(3)10 b FG(\305)g FK(2)15 b FG(\306)f FK(5)k
FE(N)p FK(.)-246 2463 y
SDict begin H.S end
 -246 2463 a -246 2463 a
SDict begin 12 H.A end
 -246
2463 a -246 2463 a
SDict begin [/View [/XYZ H.V]/Dest (Item.103) cvn /DEST pdfmark end
 -246 2463 a 0 TeXcolorgray -141 2576
a FK(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(le)f(tableau)g(de)f
(valeurs)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1241 2689
1626 4 v 1241 2788 4 100 v 1294 2758 a(N)n(ombr)o(e)e(de)i(M)n(o)p
1862 2788 V 102 w(0)p 2006 2788 V 104 w(50)p 2190 2788
V 104 w(100)p 2414 2788 V 104 w(150)p 2639 2788 V 105
w(200)p 2863 2788 V 1241 2792 1626 4 v 1241 2891 4 100
v 1294 2861 a(P)o(r)q(ix)f(\340)g(payer)p 1862 2891 V
218 w(3)p 2006 2891 V 124 w(3)p 2190 2891 V 164 w(3)p
2414 2891 V 185 w(5)p 2639 2891 V 184 w(7)p 2863 2891
V 1241 2894 1626 4 v -38 3018 a FL(R)o(emarque)d(:)j
FK(jusqu)n('\340)i(100)g(M)n(o)m(,)e(on)g(paye)g(3)h
FE(N)p FK(.)f(Ensuite)o(,)i(chaque)f(nouvelle)h(tr)o(anche)f(de)f(50)h
(M)n(o)f(est)h(factur\351e)g(2)g FE(N)p FK(.)-246 3052
y
SDict begin H.S end
 -246 3052 a -246 3052 a
SDict begin 12 H.A end
 -246 3052 a -246 3052 a
SDict begin [/View [/XYZ H.V]/Dest (Item.104) cvn /DEST pdfmark end
 -246
3052 a 0 TeXcolorgray -141 3147 a FK(3.)p 0 TeXcolorgray
43 w(On)g(constr)q(uit)h(la)f(courbe)g(qui)h(donne)f(le)h(pr)q(ix)f
(pay\351)g(en)h(fonction)g(du)f(nombr)o(e)g(de)g(M)n(o)g
(t\351l\351charg\351s)o(.)h(Elle)g(est)g(constante)g(sur)g(l)o('inter)q
(valle)-38 3248 y([)-13 3247 y(0;)8 b(100)175 3248 y(])211
3247 y(,)17 b(puis)i(af\002ne)e(sur)h(l)o('inter)q(valle)1140
3248 y([)1165 3247 y(100;)8 b(200)1433 3248 y(])1470
3247 y(.)17 b(Il)g(faut)h(donc)f(utiliser)i(une)f(r\350gle)f(pour)h
(effectuer)h(le)f(tr)o(ac\351)p 0 0 1 TeXcolorrgb 3282
3247 a
SDict begin H.S end
 3282 3247 a -30 x FI(5)3317 3247 y
SDict begin 12 H.L end
 3317 3247 a
3317 3247 a
SDict begin [/Subtype /Link/Dest (Hfootnote.5) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3317 3247 a 0 TeXcolorgray FK(.)p 0 TeXcolorgray
0 TeXcolorgray 1212 4805 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 202.76924 a add def
/d 0.0 a add neg def /h 177.37851 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1212 4805 a 1381 4660 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 182.46393 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 10 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.95384 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33865
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 182.46393  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 182.46393  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.95384  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.42677  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.95384  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.95384  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 182.46393  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1366 4757 a FI(0)130 b(50)100 b(100)84 b(150)g(200)g(250)g(300)h(350)
1292 4680 y(0)1292 4503 y(1)1292 4325 y(2)1292 4148 y(3)1292
3971 y(4)1292 3794 y(5)1292 3617 y(6)1381 4660 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 42.6773 64.01866
0.0 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35461 149.37688
42.6773 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 98.16206 0.0
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 0.0 59.74823
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1381 4660 a
tx@Dict begin { 87.53294 11.3057 } PutCoor PutBegin  end
 1381 4660 a 57 x
FK(N)n(ombr)o(e)16 b(de)h(M)n(o)1381 4660 y
tx@Dict begin  PutEnd  end
 1381 4660
a 1381 4660 a
tx@Dict begin { 1.34561 146.62965 } PutCoor PutBegin  end
 1381 4660 a 54 x FK(P)o(r)q(ix)1381 4660
y
tx@Dict begin  PutEnd  end
 1381 4660 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33865 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6773 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01596 106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35461 149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2895 4805 a
currentpoint initclip moveto
 2895
4805 a -246 4849 a
SDict begin H.S end
 -246 4849 a -246 4849 a
SDict begin 12 H.A end
 -246 4849
a -246 4849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.105) cvn /DEST pdfmark end
 -246 4849 a 0 TeXcolorgray -141 4963 a
FK(4.)p 0 TeXcolorgray 43 w(Il)g(y)f(a)i(deux)f(m\351thodes)i(:)p
0 TeXcolorgray 7 5077 a(\225)p 0 TeXcolorgray 42 w FL(G)o(raphiquement)
q(.)d FK(On)i(voit)f(qu)n('on)h(a)f(t\351l\351charg\351)h(140)h(M)n(o)e
(\(pointill\351s)i(rouges\).)p 0 TeXcolorgray 7 5177
a(\225)p 0 TeXcolorgray 42 w FL(P)m(ar)c(le)h(calcul.)g
FK(J'ai)h(pay\351)h(4,60)i FE(N)p FK(,)d(donc)g(3)10
b FG(\305)g FK(1,)e(60)21 b FE(N)p FK(.)c(J'ai)h(donc)f
(t\351l\351charg\351)h(1,)8 b(60)i FG(\245)g FK(0,)e(04)19
b FG(\306)c FK(40)j(M)n(o)g(au-del\340)g(du)f(100)3579
5153 y Fg(e)3606 5177 y FK(.)h(A)n(utr)o(ement)g(dit,)80
5277 y(j)o('ai)f(t\351l\351charg\351)h(140)h(M)n(o)m(.)p
0 TeXcolorgray -246 5348 1757 4 v -154 5425 a Fv(3)q(.)p
0 TeXcolorgray -76 5425 a
SDict begin H.S end
 -76 5425 a -76 5425 a
SDict begin H.R end
 -76 5425
a -76 5425 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.3) cvn /DEST pdfmark
end
 -76 5425 a 0 TeXcolorgray Fv(La)14 b(m\351thode)h(gr)o
(aphique)f(est)g(simple)o(,)g(mais)f(la)h(r\351ponse)g(pourr)o(ait)g
(\352tr)o(e)g(impr\351cise)o(.)-154 5504 y(4)q(.)p 0
TeXcolorgray -76 5504 a
SDict begin H.S end
 -76 5504 a -76 5504 a
SDict begin H.R end
 -76 5504
a -76 5504 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.4) cvn /DEST pdfmark
end
 -76 5504 a 0 TeXcolorgray Fv(On)f(peut)h(aussi)f
(r\351soudr)o(e)h(l)o('\351quation)g(0,)6 b(5)q Fs(x)12
b Ff(\305)c Fv(30)14 b Ff(\306)e Fv(75.)-154 5583 y(5)q(.)p
0 TeXcolorgray -76 5583 a
SDict begin H.S end
 -76 5583 a -76 5583 a
SDict begin H.R end
 -76 5583
a -76 5583 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.5) cvn /DEST pdfmark
end
 -76 5583 a 0 TeXcolorgray Fv(On)h(parle)h(de)g(fonction)g
(\253)d(af\002ne)k(par)e(mor)o(ceaux)e(\273.)p 0 TeXcolorgray
0 TeXcolorgray 1909 5895 a FK(25)p 0 TeXcolorgray eop
end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.26) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.50) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(50)p 0 TeXcolorgray 41 w FK(Les)22 b(gar)o(es)f(de)g(C)o(alais)h(et)g
(de)f(Boulogne-sur)o(-M)n(er)h(sont)g(distantes)g(de)g(30)g(km.)g(U)m
(n)g(tr)o(ain)f(par)q(t)h(\340)f(12)h(h)f(de)h(Boulogne-sur)o(-M)n(er)f
(en)-246 -63 y(dir)o(ection)g(de)g(C)o(alais)h(et)f(roule)g(\340)g(la)g
(vitesse)i(de)e(40)h(km/h.)g(U)m(n)f(tr)o(ain)h(par)q(t)e(de)h(C)o
(alais)h(\340)f(12)h(h)f(15)h(et)f(fait)h(route)f(en)g(sens)h(inverse)g
(\340)f(la)g(vitesse)i(de)-246 37 y(60)c(km/h.)-246 67
y
SDict begin H.S end
 -246 67 a -246 67 a
SDict begin 12 H.A end
 -246 67 a -246 67 a
SDict begin [/View [/XYZ H.V]/Dest (Item.106) cvn /DEST pdfmark end
 -246 67 a 0
TeXcolorgray -141 180 a FK(1.)p 0 TeXcolorgray 43 w(Le)h(tr)o(ain)g
(qui)h(par)q(t)e(\340)h(12)g(h)g(de)g(Boulogne-sur)o(-M)n(er)g(roule)g
(\340)f(la)h(vitesse)i(de)e(40)g(km/h,)h(donc)e(il)i(par)o(cour)q(t)e
(40)h(km)g(en)h(60)f(min.)h(P)n(our)e(savoir)-38 280
y(quand)e(il)h(arr)q(ive)f(\340)g(C)o(alais)o(,)i(on)e(compl\350te)i
(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1528 367 1051 4 v 1528 466 4 100 v 1605
437 a(temps)g(\(en)e(min\))p 2208 466 V 127 w(60)p 2392
466 V 134 w(?)p 2576 466 V 1528 470 1051 4 v 1528 569
4 100 v 1582 540 a(distance)g(\(en)h(km\))p 2208 569
V 103 w(40)p 2392 569 V 104 w(30)p 2576 569 V 1528 573
1051 4 v -38 711 a(Le)g(tr)o(ain)g(mettr)o(a)502 678
y FI(60)p FH(\243)p FI(30)p 502 691 165 5 v 554 740 a(40)691
711 y FG(\306)770 678 y FI(1)6 b(800)p 770 691 130 5
v 804 740 a(40)924 711 y FG(\306)14 b FK(45)k(min)g(pour)g(arr)q(iver)e
(\340)h(C)o(alais)o(,)i(donc)e(il)h(y)f(ser)o(a)h(\340)f(12)h(h)f(45.)
-38 875 y(P)n(our)h(le)i(tr)o(ain)f(qui)h(par)q(t)f(de)f(C)o(alais)o(,)
j(le)e(calcul)h(est)g(plus)g(facile)g(:)f(il)g(roule)g(\340)g(60)h
(km/h,)g(donc)f(par)o(cour)q(t)f(60)i(km)f(en)h(60)f(min)9
b(;)20 b(et)f(ainsi)h(30)g(km)-38 975 y(en)e(30)g(min.)g(C)o(omme)h(il)
f(par)q(t)f(\340)g(12)h(h)g(15,)g(il)g(arr)q(ive)f(\340)g(12)h(h)g(45)g
(lui)g(aussi.)-38 1139 y(On)f(peut)i(ainsi)f(r)o(epr\351senter)g(la)f
(mar)o(che)h(des)f(deux)g(tr)o(ains)i(:)p 0 TeXcolorgray
0 TeXcolorgray 769 2544 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 309.42352 a add def
/d 0.0 a add neg def /h 159.1932 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 769 2544 a 1389 2374 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 213.39554 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 128.03732 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 234.73509  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 234.73509  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 138.70709  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 138.70709  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 138.70709  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 234.73509  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1389 2374 a
tx@Dict begin { -8.53569 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h)1389 2374 y
tx@Dict begin  PutEnd  end
 1389
2374 a 1389 2374 a
tx@Dict begin { 29.87524 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h10)1389 2374
y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 72.55435 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h20)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 115.23346 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h30)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 157.91257 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h40)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 200.59167 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fe(12h50)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -6.40192 3.84096 } PutCoor PutBegin  end
 1389 2374 a 36 x Fe(0)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 45.23975 } PutCoor PutBegin  end
 1389 2374 a 36 x Fe(10)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 88.34573 } PutCoor PutBegin  end
 1389 2374 a 36 x Fe(20)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -44.81319 8.53569 } PutCoor PutBegin  end
 1389 2374 a 1418 2442
a Fe(Boulogne)p 1389 2378 289 4 v 1389 2482 4 107 v 1674
2482 V 1389 2484 289 4 v 1389 2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a 1389
2374 a
tx@Dict begin { -44.81319 136.57301 } PutCoor PutBegin  end
 1389 2374 a 1418 2442 a Fe(C)o(alais)p 1389 2378
203 4 v 1389 2470 4 95 v 1588 2470 V 1389 2472 203 4
v 1389 2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 131.87828 } PutCoor PutBegin  end
 1389 2374 a 36
x Fe(30)1389 2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 96.02798 -7.25536 } PutCoor PutBegin  end
 1389 2374
a 0 1 0 TeXcolorrgb 40 x Fe(12h27)p 0 TeXcolorgray 1389
2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 0.0
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 0.0 64.01866
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.23346 0.0 115.23346
76.82251   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
3338 2544 a
currentpoint initclip moveto
 3338 2544 a -246 2588 a
SDict begin H.S end
 -246 2588 a -246
2588 a
SDict begin 12 H.A end
 -246 2588 a -246 2588 a
SDict begin [/View [/XYZ H.V]/Dest (Item.107) cvn /DEST pdfmark end
 -246 2588 a 0 TeXcolorgray
-140 2702 a FK(2.)p 0 TeXcolorgray 42 w(N)n(ous)25 b(allons)i(d\351ter)
q(miner)f(l)o('heur)o(e)h(de)e(croisement)h(des)g(tr)o(ains)g(par)g(le)
g(calcul.)g(Gr)o(aphiquement,)i(cela)e(corr)o(espond)f(\340)h(l)o
('abscisse)h(du)-38 2802 y(point)18 b(d)n('intersection)i(des)d
(courbes)o(.)-38 2966 y(\300)24 b(12h15,)k(le)e(tr)o(ain)f(qui)h(par)q
(t)f(de)g(Boulogne-sur)o(-M)n(er)g(a)g(par)o(cour)q(u)f(10)i(km)g
(\(facile)f(\340)g(v\351r)q(i\002er\),)g(il)h(est)f(donc)g(\340)g(20)h
(km)g(de)f(C)o(alais)o(.)g(C'est)-38 3066 y(l)o('heur)o(e)19
b(\340)e(laquelle)i(le)f(deuxi\350me)h(tr)o(ain)f(par)q(t.)g(C)o(omme)h
(l)o('un)f(roule)g(\340)f(40)i(km/h)f(et)g(l)o('autr)o(e)g(\340)f(60)i
(km/h,)f(tout)h(se)f(passe)g(comme)h(si)f(un)f(seul)-38
3165 y(tr)o(ain)h(devait)f(par)o(cour)q(ir)g(20)h(km)f(\340)h(la)f
(vitesse)i(de)e(40)10 b FG(\305)g FK(60)17 b FG(\306)d
FK(100)19 b(km/h.)f(On)f(compl\350te)j(un)d(tableau)h(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1508
3252 1092 4 v 1508 3352 4 100 v 1585 3322 a(temps)f(\(en)g(min\))p
2188 3352 V 147 w(60)p 2412 3352 V 154 w(?)p 2596 3352
V 1508 3355 1092 4 v 1508 3455 4 100 v 1561 3425 a(distance)g(\(en)g
(km\))p 2188 3455 V 103 w(100)p 2412 3455 V 104 w(20)p
2596 3455 V 1508 3458 1092 4 v -28 3564 a FI(60)p FH(\243)p
FI(20)p -28 3577 165 5 v 8 3625 a(100)161 3597 y FG(\306)240
3564 y FI(1)6 b(200)p 240 3577 130 5 v 259 3625 a(100)394
3597 y FG(\306)14 b FK(12,)k(donc)f(il)h(faudr)o(ait)g(12)g(min)g(\340)
f(ce)h(tr)o(ain)f(pour)h(par)o(cour)q(ir)e(20)j(km.)f(Ainsi,)g(les)g
(deux)f(tr)o(ains)h(se)g(croiseront-ils)g(\340)1445 3779
y(12)h(h)e(15)h(min)11 b FG(\305)f FK(12)19 b(min)c FG(\306)f
FK(12)k(h)g(27)g(min)q(.)-246 3878 y
SDict begin H.S end
 -246 3878 a -246
3878 a
SDict begin 12 H.A end
 -246 3878 a -246 3878 a
SDict begin [/View [/XYZ H.V]/Dest (exo.51) cvn /DEST pdfmark end
 -246 3878 a 0 TeXcolorgray
101 x FL(Ex)o(er)o(cice)c(51)p 0 TeXcolorgray 41 w FK(J)n(e)k(me)i
(contenter)o(ai)g(du)e(gr)o(aphique)o(,)i(donc)e(je)h(ne)g(fer)o(ai)g
(pas)g(les)h(calculs)f(pour)g(avoir)g(les)g(heur)o(es)g(exactes)h(des)e
(deux)h(r)o(encontr)o(es)f(\226)-246 4078 y(elles)h(s)m('obtiennent)g
(avec)f(les)g(m\352mes)h(techniques)g(que)f(dans)f(l)o('exer)o(cice)i
(pr\351c\351dent.)p 0 TeXcolorgray 0 TeXcolorgray 829
5618 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 269.94522 a add def
/d 0.0 a add neg def /h 172.42363 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 829 5618 a 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 240.06998 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 156.20569 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 240.06998  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 240.06998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.20569  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.20569
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.06998
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 156.20569  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 156.20569  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 240.06998  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.20569
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.06998
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { -4.26784 -3.20079 } PutCoor PutBegin  end
 1077
5484 a 56 x FK(9h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { 56.76329 -3.20079 } PutCoor PutBegin  end

1077 5484 a 56 x FK(10h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077
5484 a
tx@Dict begin { 122.06227 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 56 x FK(11h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484
a 1077 5484 a
tx@Dict begin { 185.22716 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 56 x FK(12h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077
5484 a 1077 5484 a
tx@Dict begin { -8.53569 4.26784 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(0)1077 5484 y
tx@Dict begin  PutEnd  end

1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 25.60739 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(10)1077 5484
y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 46.94695 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(20)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 68.2865 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(30)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 89.62605 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(40)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 110.9656 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(50)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 132.30516 } PutCoor PutBegin  end
 1077 5484 a 51 x FK(60)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 96.02798 64.01866
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 138.70709 64.01866
96.02798 64.01866   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 234.73509 128.03732
138.70709 64.01866   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { 7.25536 35.42374 } PutCoor PutBegin  end
 1077 5484 a 0.30196 0.30196 1
TeXcolorrgb 56 x FK(C)n(ycliste)p 0 TeXcolorgray 1077
5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 42.67911 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 0.0 42.67911
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03732 0.0 106.69777
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 128.03732
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 80.02332 0.0 80.02332
53.34888   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { 72.12779 -3.20079 } PutCoor PutBegin  end
 1077
5484 a 0 1 0 TeXcolorrgb 56 x FK(10h15)p 0 TeXcolorgray
1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71643 0.0 170.71643
85.35822   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1077 5484 a
tx@Dict begin { 157.91257 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 0 1 0 TeXcolorrgb 56 x FK(11h40)p
0 TeXcolorgray 1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { 6.40192 139.98741 } PutCoor PutBegin  end
 1077
5484 a 1 0 0 TeXcolorrgb 56 x FK(A)n(utomobile)p 0 TeXcolorgray
1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -27.74147 8.53569 } PutCoor PutBegin  end
 1077 5484 a 1106
5566 a FK(A)p 1077 5487 105 4 v 1077 5592 4 108 v 1179
5592 V 1077 5594 105 4 v 1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077
5484 a
tx@Dict begin { -27.74147 136.57301 } PutCoor PutBegin  end
 1077 5484 a 1106 5566 a FK(B)p 1077 5487 106 4
v 1077 5592 4 108 v 1180 5592 V 1077 5594 106 4 v 1077
5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 80.02332
53.34888   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 170.71643
85.35822   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3071 5618 a
currentpoint initclip moveto
 3071
5618 a -246 5701 a
SDict begin H.S end
 -246 5701 a -246 5701 a
SDict begin 12 H.A end
 -246 5701
a -246 5701 a
SDict begin [/View [/XYZ H.V]/Dest (exo.52) cvn /DEST pdfmark end
 -246 5701 a 0 TeXcolorgray 1909 5895 a
FK(26)p 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.27) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FL(Ex)o(er)o(cice)14
b(52)p 0 TeXcolorgray 41 w FK(Le)i(taux)f(d)n('anticorps)h(\(en)f
(g/l\))g(pr\351sents)h(dans)f(le)h(sang)f(d)n('un)g(nourr)q(isson)h(en)
f(fonction)h(de)f(l)o('\342ge)g(\(en)g(mois\),)h(depuis)g(la)f
(naissance)-246 -63 y(jusqu)n('\340)k(l)o('\342ge)f(de)f(12)h(mois)o(,)
h(est)f(donn\351)g(par)f(la)g(for)q(mule)i(suivante)f(:)1542
96 y FB(f)h FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(0,)8
b(1)r FB(x)1922 62 y FI(2)1969 96 y FG(\241)i FK(1,)e(6)r
FB(x)15 b FG(\305)10 b FK(12.)-246 164 y
SDict begin H.S end
 -246 164 a -246
164 a
SDict begin 12 H.A end
 -246 164 a -246 164 a
SDict begin [/View [/XYZ H.V]/Dest (Item.108) cvn /DEST pdfmark end
 -246 164 a 0 TeXcolorgray
-141 256 a FK(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b FB(f)36 b FK(sur)1346 257 y([)1372
256 y(0;)8 b(12)1520 257 y(])1564 256 y(avec)17 b(un)h(pas)g(de)f(2)32
b(:)p -38 317 4184 4 v -38 417 4 100 v 69 387 a FB(x)p
216 417 V 370 w FK(0)p 777 417 V 521 w(2)p 1338 417 V
520 w(4)p 1899 417 V 521 w(6)p 2459 417 V 521 w(8)p 3020
417 V 501 w(10)p 3581 417 V 481 w(12)p 4142 417 V -38
420 4184 4 v -38 520 4 100 v 23 490 a FB(f)19 b FK(\()r
FB(x)5 b FK(\))p 216 520 V 291 w(12)p 777 520 V 467 w(9,)j(2)p
1338 520 V 453 w(7,)g(2)p 1899 520 V 487 w(6)p 2459 520
V 487 w(5,)g(6)p 3020 520 V 487 w(6)p 3581 520 V 487
w(7,)g(2)p 4142 520 V -38 523 4184 4 v -38 619 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)p 0 TeXcolorgray 7 714 a(\225)p
0 TeXcolorgray 50 w FB(f)h FK(\(0\))14 b FG(\306)g FK(0,)8
b(1)i FG(\243)g FK(0)531 684 y FI(2)578 714 y FG(\241)g
FK(1,)e(6)i FG(\243)g FK(0)g FG(\305)g FK(12)18 b FG(\306)c
FK(12.)p 0 TeXcolorgray 7 814 a(\225)p 0 TeXcolorgray
50 w FB(f)19 b FK(\(12\))14 b FG(\306)h FK(0,)8 b(1)i
FG(\243)g FK(12)612 784 y FI(2)659 814 y FG(\241)g FK(1,)e(6)i
FG(\243)g FK(12)g FG(\305)g FK(12)19 b FG(\306)14 b FK(7,)8
b(2.)-246 843 y
SDict begin H.S end
 -246 843 a -246 843 a
SDict begin 12 H.A end
 -246 843 a -246
843 a
SDict begin [/View [/XYZ H.V]/Dest (Item.109) cvn /DEST pdfmark end
 -246 843 a 0 TeXcolorgray -141 935 a FK(2.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 816 3491 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 298.264 a add def
/d 0.0 a add neg def /h 301.74582 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

816 3491 a 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 260.34248 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 260.34248 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 277.26994  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 277.26994  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 273.3746  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 273.3746  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 273.3746  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 277.26994  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 975 3352 a FI(0)146
b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)131 b(10)115 b(11)g(12)901
3274 y(0)901 3097 y(1)901 2920 y(2)901 2743 y(3)901 2566
y(4)901 2389 y(5)901 2212 y(6)901 2034 y(7)901 1857 y(8)901
1680 y(9)870 1503 y(10)870 1326 y(11)870 1149 y(12)990
3255 y
tx@Dict begin { 209.3771 16.31041 } PutCoor PutBegin  end
 990 3255 a 54 x FK(\342ge)17 b(\(en)g(mois\))990
3255 y
tx@Dict begin  PutEnd  end
 990 3255 a 990 3255 a
tx@Dict begin { 22.52675 272.21411 } PutCoor PutBegin  end
 990 3255 a 58 x FK(T)-8
b(aux)18 b(d)n('anticorps)h(\(en)e(g/)p FD(`)p FK(\))990
3255 y
tx@Dict begin  PutEnd  end
 990 3255 a 990 3255 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 990 3255 a 990 3255 a
tx@Dict begin { 170.71643 119.50162 } PutCoor PutBegin  end
 990
3255 a 990 3255 a
tx@Dict begin ps@rot  RotBegin  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -8. def /x1
4. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/5.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0.30196
0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 990 3255 a
tx@Dict begin RotEnd  end
 990 3255 a 990 3255 a
tx@Dict begin  PutEnd  end
 990 3255
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
234.73509 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 990 3255 a
tx@Dict begin { 154.25069 152.09608 } PutCoor PutBegin  end
 990 3255 a 1 0 0
TeXcolorrgb 78 x Fd(6)25 b(mois)p 0 TeXcolorgray 990
3255 a
tx@Dict begin  PutEnd  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 138.70709 0.0
138.70709   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
990 3255 a
tx@Dict begin { -16.35176 142.81148 } PutCoor PutBegin  end
 990 3255 a 1 0 0 TeXcolorrgb 51 x FK(6,5)p
0 TeXcolorgray 990 3255 a
tx@Dict begin  PutEnd  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 256.07465   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.67911 196.32382   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35822 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71643 119.50162   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 213.39554 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07465 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 234.73509 138.70709   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 3292 3491 a
currentpoint initclip moveto
 3292
3491 a -246 3522 a
SDict begin H.S end
 -246 3522 a -246 3522 a
SDict begin 12 H.A end
 -246 3522
a -246 3522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.110) cvn /DEST pdfmark end
 -246 3522 a 0 TeXcolorgray -141 3632 a
FK(3.)p 0 TeXcolorgray 43 w(Le)18 b(taux)g(d)n('anticorps)g(\340)f(la)g
(naissance)i(est)f(de)f(12)h(g/)p FD(`)p FK(.)-246 3662
y
SDict begin H.S end
 -246 3662 a -246 3662 a
SDict begin 12 H.A end
 -246 3662 a -246 3662 a
SDict begin [/View [/XYZ H.V]/Dest (Item.111) cvn /DEST pdfmark end
 -246
3662 a 0 TeXcolorgray -141 3753 a FK(4.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(:)p 0 TeXcolorgray
0 TeXcolorgray 991 3806 a

 991 3806 a 991 3806 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 3806
a
 0 setgray
 991 3806 a 168 w FB(x)991 3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806
a 117 w FB(f)1159 3807 y FK(\()1188 3806 y FB(x)1232
3807 y FK(\))991 3806 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806 a FK(0)991
3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806 a FK(8)991 3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.24191 ] concat

 pgfs


 991 3806
a
 0 setgray
 991 3806 a FK(12)991 3806 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991
3806 a
 0 setgray
 991 3806 a FK(12)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806
a 991 3806 a
 0 setgray
 991 3806 a FK(12)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991
3806 a 991 3806 a
 0 setgray
 991 3806 a FK(5.6)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 3806
a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991 3806 a
 0 setgray
 991 3806 a FK(5.6)991 3806 y


 pgfr

 restore

 restore

 save

0 TeXcolorgray
 81.52844 -42.22433 moveto

 141.85318 -69.58568 lineto

 pgfstr

 save

 [0.91064 -0.41304 0.41304 0.91064 141.85316 -69.58566 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991
3806 a
 0 setgray
 991 3806 a FK(7.2)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806
a 991 3806 a
 0 setgray
 991 3806 a FK(7.2)991 3806 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.78467 -70.5778 moveto

 226.89287 -43.79526 lineto

 pgfstr

 save

 [0.91081 0.41269 -0.41269 0.91081 226.89287 -43.79527 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 4658 a FK(Le)g(taux)g(d)n('anticorps)g(est)g
(minimal)h(\340)e(l)o('\342ge)h(de)f(8)h(mois)o(.)-246
4687 y
SDict begin H.S end
 -246 4687 a -246 4687 a
SDict begin 12 H.A end
 -246 4687 a -246 4687
a
SDict begin [/View [/XYZ H.V]/Dest (Item.112) cvn /DEST pdfmark end
 -246 4687 a 0 TeXcolorgray -141 4778 a FK(5.)p 0 TeXcolorgray
43 w(D)o('apr\350s)f(le)h(gr)o(aphique)o(,)g(le)g(taux)g(d)n
('anticorps)g(est)g(inf\351r)q(ieur)g(\340)f(6,5)i(g/)p
FD(`)d FK(pendant)j(6)e(mois)i(\(du)e(5)2845 4755 y Fg(e)2888
4778 y FK(au)g(11)3071 4755 y Fg(e)3115 4778 y FK(mois\).)-246
4857 y
SDict begin H.S end
 -246 4857 a -246 4857 a
SDict begin 12 H.A end
 -246 4857 a -246 4857
a
SDict begin [/View [/XYZ H.V]/Dest (exo.53) cvn /DEST pdfmark end
 -246 4857 a 0 TeXcolorgray 107 x FL(Ex)o(er)o(cice)d(53)p
0 TeXcolorgray 41 w FK(On)j(consid\350r)o(e)h(la)f(fonction)27
b FB(f)36 b FK(d\351\002nie)17 b(sur)1513 4965 y([)1538
4964 y FG(\241)p FK(1;)8 b(3)1701 4965 y(])1745 4964
y(par)1709 5123 y FB(f)19 b FK(\()r FB(x)5 b FK(\))14
b FG(\306)i FB(x)1981 5089 y FI(2)2027 5123 y FG(\241)10
b FK(2)r FB(x)5 b FK(.)-246 5191 y
SDict begin H.S end
 -246 5191 a -246 5191
a
SDict begin 12 H.A end
 -246 5191 a -246 5191 a
SDict begin [/View [/XYZ H.V]/Dest (Item.113) cvn /DEST pdfmark end
 -246 5191 a 0 TeXcolorgray
-141 5283 a FK(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b FB(f)36 b FK(sur)1346 5284
y([)1372 5283 y FG(\241)p FK(1;)8 b(3)1535 5284 y(])1578
5283 y(avec)18 b(un)f(pas)h(de)f(0,)8 b(5)33 b(:)p -38
5344 4184 4 v -38 5443 4 100 v 69 5413 a FB(x)p 216 5443
V 280 w FG(\241)p FK(1)p 652 5443 V 307 w FG(\241)p FK(0,)8
b(5)p 1088 5443 V 335 w(0)p 1525 5443 V 362 w(0,)g(5)p
1961 5443 V 362 w(1)p 2397 5443 V 362 w(1,)g(5)p 2833
5443 V 363 w(2)p 3270 5443 V 362 w(2,)g(5)p 3706 5443
V 363 w(3)p 4142 5443 V -38 5447 4184 4 v -38 5546 4
100 v 23 5516 a FB(f)19 b FK(\()r FB(x)5 b FK(\))p 216
5546 V 249 w(3)p 652 5546 V 342 w(1,)j(25)p 1088 5546
V 343 w(0)p 1525 5546 V 314 w FG(\241)p FK(0,)g(75)p
1961 5546 V 288 w FG(\241)p FK(1)p 2397 5546 V 287 w
FG(\241)p FK(0,)g(75)p 2833 5546 V 315 w(0)p 3270 5546
V 342 w(1,)g(25)p 3706 5546 V 343 w(3)p 4142 5546 V -38
5550 4184 4 v -38 5646 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 1909 5895 a(27)p 0 TeXcolorgray eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.28) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FK(\225)p 0 TeXcolorgray
50 w FB(f)19 b FK(\()p FG(\241)p FK(1\))14 b FG(\306)g
FK(\()p FG(\241)p FK(1\))512 -193 y FI(2)557 -163 y FG(\241)c
FK(2)g FG(\243)g FK(\()p FG(\241)p FK(1\))15 b FG(\306)f
FK(1)c FG(\305)g FK(2)16 b FG(\306)e FK(3.)p 0 TeXcolorgray
7 -63 a(\225)p 0 TeXcolorgray 50 w FB(f)19 b FK(\(0,)8
b(5\))15 b FG(\306)f FK(0,)8 b(5)485 -93 y FI(2)531 -63
y FG(\241)i FK(2)g FG(\243)g FK(0,)e(5)17 b FG(\306)d
FK(0,)8 b(25)i FG(\241)g FK(1)17 b FG(\306)d(\241)p FK(0,)8
b(75.)-246 -30 y
SDict begin H.S end
 -246 -30 a -246 -30 a
SDict begin 12 H.A end
 -246 -30 a -246
-30 a
SDict begin [/View [/XYZ H.V]/Dest (Item.114) cvn /DEST pdfmark end
 -246 -30 a 0 TeXcolorgray -141 66 a FK(2.)p 0 TeXcolorgray
43 w(C)o(ourbe)17 b(r)o(epr\351sentative)i(de)25 b FB(f)51
b FK(:)p 0 TeXcolorgray 0 TeXcolorgray 1144 1768 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 219.28143 a add def
/d 0.0 a add neg def /h 194.85048 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1144
1768 a 1684 1315 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -42.67912 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 154.2045 0.0 -65.07693 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 42.67912 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67912 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 140.31113 0.0 -54.53935   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 42.67912 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 154.2045  0 -65.07693  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -65.07693
 154.2045  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.53935  def /maxTickline 140.31113  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 42.67912
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 140.31113
0.0 -54.53935   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 154.2045
0.0 -65.07693 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 140.31113  0 -54.53935  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.53935
 140.31113  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-65.07693  def /maxTickline 154.2045  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 140.31113
0.0 -54.53935   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 154.2045
0.0 -65.07693 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1669 1412 a FI(0)323
b(1)g(2)g(3)-1469 b FH(\241)p FI(1)1595 1335 y(0)1553
1689 y FH(\241)p FI(1)1595 981 y(1)1595 626 y(2)1684
1315 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1684 1315 a 1684 1315 a
tx@Dict begin { 42.67912 -42.67912 } PutCoor PutBegin  end
 1684 1315 a 1684 1315
a
tx@Dict begin ps@rot  RotBegin  end
 1684 1315 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 42.67912 mul F@pstplot 42.67912 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 42.67912
mul gt { moveto } { dup -1.e30 42.67912 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 42.67912 mul gt { moveto } { dup -1.e30 42.67912 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1684 1315 a
tx@Dict begin RotEnd  end
 1684 1315 a 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -34.14342 95.60146 -34.14342
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 95.60146 -34.14342
95.60146   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1684 1315 a
tx@Dict begin { -42.67912 -12.23273 } PutCoor PutBegin  end
 1684 1315 a 0 1 0 TeXcolorrgb 52 x FG(\241)p
FK(0,)8 b(8)p 0 TeXcolorgray 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a
1684 1315 a
tx@Dict begin { 6.4016 99.19562 } PutCoor PutBegin  end
 1684 1315 a 0 1 0 TeXcolorrgb 52 x FK(2,)g(24)p
0 TeXcolorgray 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 103.03658 42.67912 -17.67833
42.67912   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -17.67833 42.67912 -17.67833
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 103.03658 42.67912 103.03658
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial 1684 1315 a
tx@Dict begin { 96.02802 -4.48633 } PutCoor PutBegin  end
 1684
1315 a 1 0 0 TeXcolorrgb 52 x FK(2,)g(4)p 0 TeXcolorgray
1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a 1684 1315 a
tx@Dict begin { -32.90022 -5.0822 } PutCoor PutBegin  end
 1684 1315 a 1 0 0
TeXcolorrgb 52 x FG(\241)p FK(0,)g(4)p 0 TeXcolorgray
1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a 2964 1768 a
currentpoint initclip moveto
 2964 1768 a -246
1812 a
SDict begin H.S end
 -246 1812 a -246 1812 a
SDict begin 12 H.A end
 -246 1812 a -246 1812
a
SDict begin [/View [/XYZ H.V]/Dest (Item.115) cvn /DEST pdfmark end
 -246 1812 a 0 TeXcolorgray -141 1926 a FK(3.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g FG(\241)p FK(0,)8 b(8)18
b(par)25 b FB(f)36 b FK(est)1219 2025 y FB(f)19 b FK(\()p
FG(\241)p FK(0,)8 b(8\))15 b FG(\306)f FK(\()p FG(\241)p
FK(0,)8 b(8\))1780 1991 y FI(2)1826 2025 y FG(\241)i
FK(2)g FG(\243)g FK(\()p FG(\241)p FK(0,)e(8\))16 b FG(\306)e
FK(0,)8 b(64)i FG(\305)g FK(1,)e(6)18 b FG(\306)c FK(2,)8
b(24.)-38 2174 y(On)17 b(a)g(tr)o(ac\351)h(des)f(pointill\351s)j(ver)q
(ts)d(sur)h(le)g(gr)o(aphique)g(qui)g(con\002r)q(ment)g(ce)f
(r\351sultat)h(\226)g(si)g(on)f(a)g(de)g(bons)h(yeux)9
b(!)-246 2208 y
SDict begin H.S end
 -246 2208 a -246 2208 a
SDict begin 12 H.A end
 -246 2208 a -246
2208 a
SDict begin [/View [/XYZ H.V]/Dest (Item.116) cvn /DEST pdfmark end
 -246 2208 a 0 TeXcolorgray -141 2303 a FK(4.)p
0 TeXcolorgray 43 w(Les)18 b(ant\351c\351dents)h(de)e(1)h(par)25
b FB(f)36 b FK(sont)18 b FG(\241)p FK(0,)8 b(4)19 b(et)e(2,)8
b(4)19 b(environ)f(\(voir)f(pointill\351s)j(rouges\).)-246
2336 y
SDict begin H.S end
 -246 2336 a -246 2336 a
SDict begin 12 H.A end
 -246 2336 a -246 2336
a
SDict begin [/View [/XYZ H.V]/Dest (Item.117) cvn /DEST pdfmark end
 -246 2336 a 0 TeXcolorgray -141 2431 a FK(5.)p 0 TeXcolorgray
43 w(Les)h(solutions)h(l)o('in\351quation)31 b FB(f)19
b FK(\()r FB(x)5 b FK(\))17 b FG(\307)g FK(1)k(sont)g(tous)g(les)g
(nombr)o(es)g(dont)f(l)o('image)i(est)f(str)q(ictement)h(inf\351r)q
(ieur)o(e)e(\340)h FG(\241)p FK(1.)f(C)o(es)i(solutions)g(sont)-38
2531 y(tous)c(les)g(nombr)o(es)g(de)f(l)o('inter)q(valle)1053
2532 y(])1078 2531 y FG(\241)p FK(0,)8 b(4;)g(2;)g(4)1377
2532 y([)1423 2531 y(environ.)-246 2556 y
SDict begin H.S end
 -246 2556 a
-246 2556 a
SDict begin 12 H.A end
 -246 2556 a -246 2556 a
SDict begin [/View [/XYZ H.V]/Dest (Item.118) cvn /DEST pdfmark end
 -246 2556 a 0 TeXcolorgray
-141 2660 a FK(6.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b FB(f)51 b FK(:)p 0 TeXcolorgray
0 TeXcolorgray 991 2746 a

 991 2746 a 991 2746 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 2746
a
 0 setgray
 991 2746 a 168 w FB(x)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746
a 117 w FB(f)1159 2747 y FK(\()1188 2746 y FB(x)1232
2747 y FK(\))991 2746 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746 a FG(\241)p
FK(1)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746 a FK(1)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs



991 2746 a
 0 setgray
 991 2746 a FK(3)991 2746 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 2746 a
 /pgfsc{}def/pgffc{}def
 991
2746 a 991 2746 a
 0 setgray
 991 2746 a FK(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 2746
a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FK(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991
2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FG(\241)p FK(1)991
2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991 2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FG(\241)p
FK(1)991 2746 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09744 -41.14923 moveto

 142.20209 -69.78137 lineto

 pgfstr

 save

 [0.9106 -0.41315 0.41315 0.9106 142.20207 -69.78136 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 991 2746
a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FK(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 991
2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FK(3)991 2746
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 3500 a
SDict begin H.S end
 -246 3500
a -246 3500 a
SDict begin 12 H.A end
 -246 3500 a -246 3500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.119) cvn /DEST pdfmark end
 -246 3500 a 0 TeXcolorgray
-141 3614 a FK(7.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(signe)h(de)25 b FB(f)51 b FK(:)p 0 TeXcolorgray
0 TeXcolorgray 1073 3701 a

 1073 3701 a 1073 3701 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073
3701 a
 0 setgray
 1073 3701 a 167 w FB(x)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 3701 a
 0 setgray

1073 3701 a 117 w FB(f)1241 3702 y FK(\()1270 3701 y
FB(x)1314 3702 y FK(\))1073 3701 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701
a FG(\241)p FK(1)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70421 -12.9651 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a
FK(0)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FK(2)1073 3701
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FK(3)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 3701
a
 0 setgray
 1073 3701 a FG(\305)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701
a FK(0)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FG(\241)1073
3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FK(0)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073
3701 a
 0 setgray
 1073 3701 a FG(\305)1073 3701 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4265 a
SDict begin H.S end
 -246
4265 a -246 4265 a
SDict begin 12 H.A end
 -246 4265 a -246 4265 a
SDict begin [/View [/XYZ H.V]/Dest (exo.54) cvn /DEST pdfmark end
 -246 4265
a 0 TeXcolorgray 132 x FL(Ex)o(er)o(cice)14 b(54)p 0
TeXcolorgray 41 w FK(On)j(consid\350r)o(e)h(la)f(fonction)k
FB(g)27 b FK(d\351\002nie)17 b(sur)1511 4398 y([)1537
4397 y(1;)8 b(4)1645 4398 y(])1689 4397 y(par)1731 4614
y FB(g)i FK(\()r FB(x)5 b FK(\))14 b FG(\306)i FB(x)f
FG(\241)2097 4558 y FK(6)p 2094 4595 47 5 v 2096 4671
a FB(x)2150 4614 y FK(.)-246 4739 y
SDict begin H.S end
 -246 4739 a -246
4739 a
SDict begin 12 H.A end
 -246 4739 a -246 4739 a
SDict begin [/View [/XYZ H.V]/Dest (Item.120) cvn /DEST pdfmark end
 -246 4739 a 0 TeXcolorgray
-141 4819 a FK(1.)p 0 TeXcolorgray 43 w(On)i(fait)h(un)g(tableau)g(de)f
(valeurs)h(pour)26 b FB(f)36 b FK(sur)1346 4820 y([)1372
4819 y(1;)8 b(4)1480 4820 y(])1523 4819 y(avec)18 b(un)f(pas)h(de)f(0,)
8 b(5)33 b(:)p -38 4889 4184 4 v -38 4989 4 100 v 69
4959 a FB(x)p 214 4989 V 368 w FK(1)p 775 4989 V 487
w(1,)8 b(5)p 1337 4989 V 488 w(2)p 1898 4989 V 486 w(2,)g(5)p
2459 4989 V 488 w(3)p 3020 4989 V 487 w(3,)g(5)p 3581
4989 V 487 w(4)p 4142 4989 V -38 4992 4184 4 v -38 5091
4 100 v 17 5062 a FB(g)i FK(\()r FB(x)5 b FK(\))p 214
5091 V 284 w FG(\241)p FK(5)p 775 5091 V 431 w FG(\241)p
FK(2,)j(5)p 1337 5091 V 433 w FG(\241)p FK(1)p 1898 5091
V 459 w(0,)g(1)p 2459 5091 V 488 w(1)p 3020 5091 V 466
w(1,)g(79)p 3581 5091 V 434 w(2,)g(5)p 4142 5091 V -38
5095 4184 4 v -38 5199 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 7 5299 a(\225)p 0 TeXcolorgray 44 w FB(g)10
b FK(\(2\))k FG(\306)g FK(2)c FG(\241)432 5266 y FI(6)p
432 5279 31 5 v 432 5327 a(2)487 5299 y FG(\306)15 b
FK(2)10 b FG(\241)g FK(3)15 b FG(\306)f(\241)p FK(1.)p
0 TeXcolorgray 7 5407 a(\225)p 0 TeXcolorgray 44 w FB(g)c
FK(\(1,)e(5\))14 b FG(\306)h FK(1,)8 b(5)i FG(\241)593
5375 y FI(6)p 570 5388 77 5 v 570 5436 a(1,5)671 5407
y FG(\306)15 b FK(1,)8 b(5)i FG(\241)g FK(4)16 b FG(\306)e(\241)p
FK(2,)8 b(5.)-38 5546 y FL(R)o(emarque)14 b(:)e FK(L)-10
b('\351nonc\351)17 b(demande)e(d)n('arrondir)e(\340)i(10)1551
5516 y FH(\241)p FI(2)1643 5546 y FK(pr\350s)h(par)e(ex)o(c\350s)o(.)i
(C)o(ela)f(signi\002e)g(qu)n('il)h(faut)f(donner)g(deux)g(chiffr)o(es)h
(apr\350s)f(la)g(virgule)-38 5646 y(et)j(arrondir)e(par)h(valeur)h
(sup\351r)q(ieur)o(e)g(le)g(deuxi\350me)g(chiffr)o(e)g(apr\350s)g(la)f
(virgule)o(.)h(P)m(ar)f(exemple)k FB(g)10 b FK(\(3,)e(5\))15
b FG(\306)f FK(1,)8 b(7857)g FG(\242)g(\242)g(\242)18
b(\274)c FK(1,)8 b(79.)p 0 TeXcolorgray 1909 5895 a(28)p
0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.29) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.121) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(C)o(ourbe)17 b(r)o(epr\351sentative)i(de)
g FB(g)41 b FK(:)p 0 TeXcolorgray 0 TeXcolorgray 1305
2200 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 180.39072 a add def
/d 0.0 a add neg def /h 274.28485 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1305 2200 a 1664 825 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -142.26372 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 137.14243 0.0 -43.24829 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 108.68968 0.0 -165.59517   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 137.14243  0 -43.24829  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -43.24829
 137.14243  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-165.59517  def /maxTickline 108.68968  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 108.68968
0.0 -165.59517   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 137.14243
0.0 -43.24829 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 108.68968  0 -165.59517  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -165.59517
 108.68968  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-43.24829  def /maxTickline 137.14243  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 108.68968
0.0 -165.59517   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 137.14243
0.0 -43.24829 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1649 922 a FI(0)205
b(1)g(2)g(3)g(4)-1232 b FH(\241)p FI(1)1575 845 y(0)1533
1081 y FH(\241)p FI(1)1533 1317 y FH(\241)p FI(2)1533
1553 y FH(\241)p FI(3)1533 1790 y FH(\241)p FI(4)1533
2026 y FH(\241)p FI(5)1575 608 y(1)1575 372 y(2)1575
136 y(3)1664 825 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 4 def /dx
x1 x sub 199 div def /F@pstplot (x-6.0/x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 91.04869 37.69978 0.0
37.69978   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 91.04869 0.0 91.04869
37.69978   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1664 825 a
tx@Dict begin { 88.20367 -14.79555 } PutCoor PutBegin  end
 1664 825 a 0 1 0
TeXcolorrgb 51 x FK(3,)8 b(2)p 0 TeXcolorgray 1664 825
a
tx@Dict begin  PutEnd  end
 1664 825 a 1664 825 a
tx@Dict begin { -28.45274 42.67911 } PutCoor PutBegin  end
 1664 825 a 0 1 0 TeXcolorrgb
51 x FK(1,)g(325)p 0 TeXcolorgray 1664 825 a
tx@Dict begin  PutEnd  end
 1664 825
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -28.45274 0.0
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 56.90549
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial 2803 2200 a
currentpoint initclip moveto
 2803 2200 a -246
2244 a
SDict begin H.S end
 -246 2244 a -246 2244 a
SDict begin 12 H.A end
 -246 2244 a -246 2244
a
SDict begin [/View [/XYZ H.V]/Dest (Item.122) cvn /DEST pdfmark end
 -246 2244 a 0 TeXcolorgray -141 2358 a FK(3.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g(3,)8 b(2)18 b(par)h FB(g)27
b FK(est)1375 2493 y FB(g)10 b FK(\(3,)e(2\))14 b FG(\306)g
FK(3,)8 b(2)i FG(\241)1897 2436 y FK(6)p 1863 2473 110
5 v 1863 2550 a(3,)e(2)1997 2493 y FG(\306)14 b FK(3,)8
b(2)i FG(\241)g FK(1,)e(875)18 b FG(\306)c FK(1,)8 b(325.)-38
2675 y(On)17 b(a)g(tr)o(ac\351)h(des)f(pointill\351s)j(ver)q(ts)d(sur)h
(le)g(gr)o(aphique)g(qui)g(con\002r)q(ment)g(ce)f(r\351sultat.)-246
2709 y
SDict begin H.S end
 -246 2709 a -246 2709 a
SDict begin 12 H.A end
 -246 2709 a -246 2709
a
SDict begin [/View [/XYZ H.V]/Dest (Item.123) cvn /DEST pdfmark end
 -246 2709 a 0 TeXcolorgray -141 2804 a FK(4.)p 0 TeXcolorgray
43 w(L)-10 b('unique)19 b(solution)g(de)f(l)o('\351quation)j
FB(g)10 b FK(\()r FB(x)5 b FK(\))14 b FG(\306)g(\241)p
FK(1)k(\(donc)e(l)o('unique)k(ant\351c\351dent)e(de)f
FG(\241)p FK(1)h(par)h FB(g)10 b FK(\))17 b(est)h(2)f(\(pointill\351s)j
(rouges\).)-246 2838 y
SDict begin H.S end
 -246 2838 a -246 2838 a
SDict begin 12 H.A end
 -246 2838
a -246 2838 a
SDict begin [/View [/XYZ H.V]/Dest (Item.124) cvn /DEST pdfmark end
 -246 2838 a 0 TeXcolorgray -141 2933 a
FK(5.)p 0 TeXcolorgray 43 w(Les)i(solutions)i(l)o('in\351quation)i
FB(g)10 b FK(\()r FB(x)5 b FK(\))17 b FG(\270)i(\241)p
FK(1)j(sont)g(tous)g(les)g(nombr)o(es)g(dont)f(l)o('image)i(est)f
(sup\351r)q(ieur)o(e)g(ou)g(\351gale)g(\340)f FG(\241)p
FK(1.)h(C)o(es)g(solutions)i(sont)-38 3033 y(tous)18
b(les)g(nombr)o(es)g(de)f(l)o('inter)q(valle)1053 3034
y([)1078 3033 y(2;)8 b(4)1186 3034 y(])1221 3033 y(.)-246
3058 y
SDict begin H.S end
 -246 3058 a -246 3058 a
SDict begin 12 H.A end
 -246 3058 a -246 3058
a
SDict begin [/View [/XYZ H.V]/Dest (Item.125) cvn /DEST pdfmark end
 -246 3058 a 0 TeXcolorgray -141 3162 a FK(6.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(de)h FB(g)41
b FK(:)p 0 TeXcolorgray 0 TeXcolorgray 1345 3249 a

 1345
3249 a 1345 3249 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1345 3249 a
 0 setgray
 1345 3249 a 168 w FB(x)1345
3249 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.7696 ] concat

 pgfs


 1345 3249 a
 0 setgray
 1345 3249 a 112 w FB(g)1513 3250 y
FK(\()1542 3249 y FB(x)1586 3250 y FK(\))1345 3249 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 170.08086 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 170.08086 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 170.08086 -85.04042 lineto

 170.08086 0.0 lineto

 closepath

 170.08086 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs



1345 3249 a
 0 setgray
 1345 3249 a FK(1)1345 3249 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 1345 3249 a
 0 setgray

1345 3249 a FK(4)1345 3249 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 63.14587 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 65.13843 -79.01295 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a
1345 3249 a
 0 setgray
 1345 3249 a FG(\241)p FK(5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 63.14587 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 65.13843 -79.01295 ] concat

 pgfs


 1345
3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a 1345 3249 a
 0 setgray
 1345 3249 a FG(\241)p
FK(5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -40.4615 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a 1345 3249 a
 0 setgray

1345 3249 a FK(2.5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -40.4615 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249
a 1345 3249 a
 0 setgray
 1345 3249 a FK(2.5)1345 3249 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 82.39542 -70.74854 moveto

 141.8527 -43.79747 lineto

 pgfstr

 save

 [0.91075 0.41281 -0.41281 0.91075 141.85269 -43.79749 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4003 a
SDict begin H.S end
 -246 4003 a -246 4003 a
SDict begin 12 H.A end
 -246
4003 a -246 4003 a
SDict begin [/View [/XYZ H.V]/Dest (Item.126) cvn /DEST pdfmark end
 -246 4003 a 0 TeXcolorgray -141 4117
a FK(7.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)h
FB(g)41 b FK(:)p 0 TeXcolorgray 0 TeXcolorgray 1321 4204
a

 1321 4204 a 1321 4204 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a 167
w FB(x)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.76205 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a 112 w FB(g)1489
4205 y FK(\()1517 4204 y FB(x)1561 4205 y FK(\))1321
4204 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 178.5874 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 178.5874 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 178.5874 -59.52911 lineto

 178.5874 0.0 lineto

 closepath

 178.5874 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 47.17615 -12.99 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FK(1)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 98.90782 -12.95016 ] concat

 pgfs


 1321
4204 a
 0 setgray
 1321 4204 a FG(\274)14 b FK(2.4)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1321
4204 a
 0 setgray
 1321 4204 a FK(4)1321 4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -41.11218 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321
4204 a FG(\241)1321 4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FK(0)1321
4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -42.24297 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FG(\305)1321 4204 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246
4768 a
SDict begin H.S end
 -246 4768 a -246 4768 a
SDict begin 12 H.A end
 -246 4768 a -246 4768
a
SDict begin [/View [/XYZ H.V]/Dest (exo.55) cvn /DEST pdfmark end
 -246 4768 a -246 4787 a
SDict begin H.S end
 -246 4787 a -246 4787 a
SDict begin 12 H.A end
 -246
4787 a -246 4787 a
SDict begin [/View [/XYZ H.V]/Dest (Item.127) cvn /DEST pdfmark end
 -246 4787 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)g
(55)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
45 w FB(x)22 b FK(est)c(une)g(longueur)-5 b(,)19 b(donc)g
FB(x)h FG(\270)14 b FK(0.)k(P)m(ar)f(ailleurs)o(,)i(la)f(longueur)i
FB(x)i FK(ne)c(peut)g(pas)g(d\351passer)g(4)g(\(car)k
FB(A)s(B)g FG(\306)15 b FK(4\).)-38 5016 y(C)o(onclusion)k(:)f(on)f(a)g
(l)o('encadr)o(ement)1897 5115 y(0)d FG(\267)i FB(x)k
FG(\267)14 b FK(4.)-246 5166 y
SDict begin H.S end
 -246 5166 a -246 5166
a
SDict begin 12 H.A end
 -246 5166 a -246 5166 a
SDict begin [/View [/XYZ H.V]/Dest (Item.128) cvn /DEST pdfmark end
 -246 5166 a 0 TeXcolorgray
-141 5279 a FK(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 48 w FB(A)s(P)22 b FG(\306)e
FB(A)s(D)c FG(\241)10 b FB(D)c(P)23 b FG(\306)14 b FK(4)c
FG(\241)i FB(x)5 b FK(.)p 0 TeXcolorgray 1909 5895 a(29)p
0 TeXcolorgray eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.30) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FK(\225)p 0 TeXcolorgray
42 w(L)-10 b('air)o(e)17 b(du)h(r)o(ectangle)23 b FB(A)5
b(M)k(N)g(P)25 b FK(est)968 20 y FF(A)1038 32 y Fw(A)t(M)7
b(N)f(P)1250 20 y FG(\306)20 b FB(A)5 b(M)18 b FG(\243)e
FB(A)s(P)1250 145 y FG(\306)g FB(x)f FG(\243)1440 146
y FK(\()1468 145 y(4)10 b FG(\241)i FB(x)1629 146 y FK(\))2722
145 y(\(car)22 b FB(A)s(P)g FG(\306)14 b FK(4)c FG(\241)i
FB(x)5 b FK(\))1250 269 y FG(\306)16 b FB(x)f FG(\243)10
b FK(4)g FG(\305)i FB(x)j FG(\243)10 b FK(\()p FG(\241)r
FB(x)5 b FK(\))891 b(\(on)17 b(d\351veloppe\))1250 405
y FG(\306)d FK(4)r FB(x)h FG(\241)d FB(x)1526 371 y FI(2)1563
405 y FK(.)-246 518 y
SDict begin H.S end
 -246 518 a -246 518 a
SDict begin 12 H.A end
 -246 518
a -246 518 a
SDict begin [/View [/XYZ H.V]/Dest (Item.129) cvn /DEST pdfmark end
 -246 518 a 0 TeXcolorgray -141 603 a FK(3.)p
0 TeXcolorgray 43 w(La)17 b(fonction)27 b FB(f)36 b FK(est)18
b(d\351\002nie)g(pour)f(0)e FG(\267)h FB(x)k FG(\267)14
b FK(4)k(par)1813 702 y FB(f)h FK(\()r FB(x)5 b FK(\))14
b FG(\306)g FK(4)r FB(x)h FG(\241)d FB(x)2246 668 y FI(2)2283
702 y FK(.)-38 866 y(A)n(utr)o(ement)18 b(dit,)26 b FB(f)18
b FK(\()r FB(x)5 b FK(\))18 b(donne)f(l)o('air)o(e)h(du)f(r)o(ectangle)
23 b FB(A)5 b(M)k(N)g(P)26 b FK(pour)18 b(une)g(valeur)f(donn\351e)h
(de)i FB(x)5 b FK(.)-246 929 y
SDict begin H.S end
 -246 929 a -246 929 a
SDict begin 12 H.A end

-246 929 a -246 929 a
SDict begin [/View [/XYZ H.V]/Dest (Item.130) cvn /DEST pdfmark end
 -246 929 a 0 TeXcolorgray 10 1024
a FK(\(a\))p 0 TeXcolorgray 41 w(T)-8 b(ableau)18 b(de)f(valeurs)h(:)p
145 1060 4002 4 v 145 1160 4 100 v 252 1130 a FB(x)p
398 1160 V 297 w FK(0)p 814 1160 V 341 w(0,)8 b(5)p 1230
1160 V 343 w(1)p 1646 1160 V 341 w(1,)g(5)p 2062 1160
V 343 w(2)p 2478 1160 V 341 w(2,)g(5)p 2894 1160 V 343
w(3)p 3310 1160 V 341 w(3,)g(5)p 3726 1160 V 343 w(4)p
4142 1160 V 145 1163 4002 4 v 145 1263 4 100 v 206 1233
a FB(f)19 b FK(\()r FB(x)5 b FK(\))p 398 1263 V 239 w(0)p
814 1263 V 321 w(1,)j(75)p 1230 1263 V 323 w(3)p 1646
1263 V 321 w(3,)g(75)p 2062 1263 V 323 w(4)p 2478 1263
V 321 w(3,)g(75)p 2894 1263 V 323 w(3)p 3310 1263 V 321
w(1,)g(75)p 3726 1263 V 323 w(0)p 4142 1263 V 145 1266
4002 4 v 145 1396 a(C)o(ourbe)17 b(r)o(epr\351sentative)i(:)p
0 TeXcolorgray 0 TeXcolorgray 1451 2836 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.30225 a add def
/d 0.0 a add neg def /h 163.31888 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1451 2836 a
1673 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 140.55661 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 136.57324 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 140.55661  0 -26.74564  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -26.74564
 140.55661  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.74564  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57324
0.0 -26.74564   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 140.55661
0.0 -26.74564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 136.57324  0 -26.74564  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -26.74564
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.74564  def /maxTickline 140.55661  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57324
0.0 -26.74564   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 140.55661
0.0 -26.74564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1658 2711 a FI(0)204 b(1)i(2)f(3)g(4)1584
2397 y(1)1584 2161 y(2)1584 1924 y(3)1584 1688 y(4)1673
2614 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1673 2614 a 1673 2614 a
tx@Dict begin { 56.90549 113.81097 } PutCoor PutBegin  end
 1673 2614 a 1673 2614
a
tx@Dict begin ps@rot  RotBegin  end
 1673 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1673 2614 a
tx@Dict begin RotEnd  end
 1673 2614 a 1673 2614 a
tx@Dict begin  PutEnd  end
 1673 2614 a 2840
2836 a
currentpoint initclip moveto
 2840 2836 a -246 2879 a
SDict begin H.S end
 -246 2879 a -246 2879
a
SDict begin 12 H.A end
 -246 2879 a -246 2879 a
SDict begin [/View [/XYZ H.V]/Dest (Item.131) cvn /DEST pdfmark end
 -246 2879 a 0 TeXcolorgray
4 2994 a FK(\(b\))p 0 TeXcolorgray 41 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b FB(f)50 b FK(:)p 0 TeXcolorgray
0 TeXcolorgray 1082 3081 a

 1082 3081 a 1082 3081 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1082
3081 a
 0 setgray
 1082 3081 a 168 w FB(x)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 1082 3081 a
 0 setgray

1082 3081 a 118 w FB(f)1251 3082 y FK(\()1279 3081 y
FB(x)1323 3082 y FK(\))1082 3081 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081
a FK(0)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081 a FK(2)1082
3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.24191 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081 a FK(4)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -79.01295 ] concat

 pgfs


 1082
3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082 3081 a FK(0)1082
3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082 3081
a FK(0)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 151.48398 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -40.4615 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081
a
 0 setgray
 1082 3081 a FK(4)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 151.48398 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -40.4615 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081
a 1082 3081 a
 0 setgray
 1082 3081 a FK(4)1082 3081 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09747 -72.23705 moveto

 145.49968 -42.11142 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 145.49968 -42.11142 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082
3081 a FK(0)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082
3081 a
 0 setgray
 1082 3081 a FK(0)1082 3081 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 164.1379 -41.12527 moveto

 230.5401 -71.2509 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 230.5401 -71.2509 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 3835 a
SDict begin H.S end
 -246 3835 a -246 3835 a
SDict begin 12 H.A end
 -246
3835 a -246 3835 a
SDict begin [/View [/XYZ H.V]/Dest (Item.132) cvn /DEST pdfmark end
 -246 3835 a 0 TeXcolorgray 12 3949
a FK(\(c\))p 0 TeXcolorgray 41 w(La)18 b(fonction)28
b FB(f)38 b FK(atteint)20 b(son)f(maximum)i(lorsque)h
FB(x)f FG(\306)15 b FK(2,)20 b(donc)e(l)o('air)o(e)h(du)g(r)o(ectangle)
24 b FB(A)5 b(M)k(N)g(P)27 b FK(est)20 b(maximale)g(lorsque)i
FB(x)f FG(\306)16 b FK(2,)j(c)n('est-)145 4049 y(\340-dir)o(e)d(quand)k
FB(M)25 b FK(est)17 b(le)h(milieu)h(du)f(segment)1560
4050 y([)1591 4049 y FB(A)s(B)1697 4050 y FK(])1732 4049
y(.)-246 4134 y
SDict begin H.S end
 -246 4134 a -246 4134 a
SDict begin 12 H.A end
 -246 4134 a -246
4134 a
SDict begin [/View [/XYZ H.V]/Dest (exo.56) cvn /DEST pdfmark end
 -246 4134 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)c(56)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 887 5639
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.07468 a add def
/d 0.0 a add neg def /h 156.49008 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 887 5639 a 1444 5185 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 188.9262 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 101.86087 0.0 -54.62921   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 188.9262  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 188.9262  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.62921  def /maxTickline 101.86087  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 101.86087  0 -54.62921  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.62921
 101.86087  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 188.9262  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1429 5282 a FI(0)205
b(1)h(2)f(3)g(4)g(5)g(6)-1705 b FH(\241)p FI(1)-309 b
FH(\241)p FI(2)1356 5205 y(0)1314 5441 y FH(\241)p FI(1)1356
4969 y(1)1356 4732 y(2)1356 4496 y(3)1444 5185 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -28.45274 -56.90549 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 0.0 -28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 113.81097 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 14.22636 0.0
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 56.90549 0.0
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 56.90549 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03734 56.90549 128.03734
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 128.03734
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 156.49008
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 128.03734
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1444 5185 a
tx@Dict begin { -18.4941 17.64055 } PutCoor PutBegin  end
 1444
5185 a 0 1 0 TeXcolorrgb 51 x FK(0,)8 b(5)p 0 TeXcolorgray
1444 5185 a
tx@Dict begin  PutEnd  end
 1444 5185 a 1444 5185 a
tx@Dict begin { 119.50143 -8.5359 } PutCoor PutBegin  end
 1444 5185 a 1 0 0
TeXcolorrgb 51 x FK(4,)g(5)p 0 TeXcolorgray 1444 5185
a
tx@Dict begin  PutEnd  end
 1444 5185 a 1444 5185 a
tx@Dict begin { 147.95418 -8.5359 } PutCoor PutBegin  end
 1444 5185 a 1 0 0 TeXcolorrgb
51 x FK(5,)g(5)p 0 TeXcolorgray 1444 5185 a
tx@Dict begin  PutEnd  end
 1444 5185
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 128.03734
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 156.49008
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3013 5639 a
currentpoint initclip moveto
 3013
5639 a 0 TeXcolorgray 1909 5895 a FK(30)p 0 TeXcolorgray
eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.31) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.133) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(1.)p 0 TeXcolorgray 43 w(L)-10 b('image)18 b(de)g(3)f(par)25
b FB(f)37 b FK(est)18 b(0,)8 b(5)18 b(\(pointill\351s)i(ver)q(ts\).)
-246 -129 y
SDict begin H.S end
 -246 -129 a -246 -129 a
SDict begin 12 H.A end
 -246 -129 a -246
-129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.134) cvn /DEST pdfmark end
 -246 -129 a 0 TeXcolorgray -141 -34 a FK(2.)p
0 TeXcolorgray 43 w(Les)e(solutions)h(de)e(l)o('\351quation)28
b FB(f)19 b FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(2)k(sont)g(4,)8
b(5)19 b(et)e(5,)8 b(5)19 b(\(pointill\351s)g(rouges\).)-246
0 y
SDict begin H.S end
 -246 0 a -246 0 a
SDict begin 12 H.A end
 -246 0 a -246 0 a
SDict begin [/View [/XYZ H.V]/Dest (Item.135) cvn /DEST pdfmark end
 -246 0 a 0 TeXcolorgray
-141 95 a FK(3.)p 0 TeXcolorgray 43 w(Les)f(solutions)i(de)d(l)o
('in\351quation)28 b FB(f)19 b FK(\()r FB(x)5 b FK(\))15
b FG(\270)f FK(2)k(sont)g(tous)g(les)h(nombr)o(es)e(de)h(l)o('inter)q
(valle)2525 96 y([)2550 95 y(4,)8 b(5)19 b(;)25 b(5,)8
b(5)2830 96 y(])2874 95 y(:)18 b(c)n('est)g(sur)g(cet)g(inter)q(valle)h
(que)f(la)g(courbe)-38 195 y(est)g(au)f(dessus)i(de)e(2)g(\(par)q(ties)
h(de)f(la)h(courbe)f(et)g(de)h(l)o('axe)g(des)f(abscisses)i(r)o
(epass\351es)f(en)g(or)o(ange\).)-246 228 y
SDict begin H.S end
 -246 228
a -246 228 a
SDict begin 12 H.A end
 -246 228 a -246 228 a
SDict begin [/View [/XYZ H.V]/Dest (Item.136) cvn /DEST pdfmark end
 -246 228 a 0 TeXcolorgray
-141 324 a FK(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b FB(f)51 b FK(:)p 0 TeXcolorgray
0 TeXcolorgray 636 411 a

 636 411 a 636 411 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 636 411
a
 0 setgray
 636 411 a 168 w FB(x)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a
118 w FB(f)805 412 y FK(\()834 411 y FB(x)878 412 y FK(\))636
411 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 340.16171 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 340.16171 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 340.16171 -85.04042 lineto

 340.16171 0.0 lineto

 closepath

 340.16171 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FG(\241)p FK(2)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 636
411 a
 0 setgray
 636 411 a FK(0)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FK(5)636
411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 323.55753 -17.21701 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FK(6)636 411 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FK(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FK(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FG(\241)p FK(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636
411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411 a FG(\241)p FK(1)636
411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09723 -41.12665 moveto

 142.20247 -69.77762 lineto

 pgfstr

 save

 [0.9105 -0.41336 0.41336 0.9105 142.20247 -69.77762 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411
a 636 411 a
 0 setgray
 636 411 a FK(3)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411
a 636 411 a
 0 setgray
 636 411 a FK(3)636 411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411 a
FK(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411
a FK(1)636 411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 249.17833 -41.15018 moveto

 315.58054 -71.2758 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 315.58054 -71.2758 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 1165
a
SDict begin H.S end
 -246 1165 a -246 1165 a
SDict begin 12 H.A end
 -246 1165 a -246 1165 a
SDict begin [/View [/XYZ H.V]/Dest (Item.137) cvn /DEST pdfmark end
 -246
1165 a 0 TeXcolorgray -141 1279 a FK(5.)p 0 TeXcolorgray
43 w(Le)18 b(maximum)h(de)25 b FB(f)36 b FK(est)18 b(3,)g(son)g
(minimum)i(est)e FG(\241)p FK(1)f(\(points)i(bleus\).)-246
1312 y
SDict begin H.S end
 -246 1312 a -246 1312 a
SDict begin 12 H.A end
 -246 1312 a -246 1312
a
SDict begin [/View [/XYZ H.V]/Dest (Item.138) cvn /DEST pdfmark end
 -246 1312 a 0 TeXcolorgray -141 1408 a FK(6.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)25 b FB(f)51
b FK(:)p 0 TeXcolorgray 0 TeXcolorgray 1073 1495 a

 1073
1495 a 1073 1495 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a 167 w FB(x)1073
1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a 117 w FB(f)1241 1496 y
FK(\()1270 1495 y FB(x)1314 1496 y FK(\))1073 1495 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs



1073 1495 a
 0 setgray
 1073 1495 a FG(\241)p FK(2)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 1073
1495 a
 0 setgray
 1073 1495 a FG(\241)p FK(1)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 1495
a
 0 setgray
 1073 1495 a FK(2)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495
a FK(6)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FG(\305)1073
1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FK(0)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073
1495 a
 0 setgray
 1073 1495 a FG(\241)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073
1495 a FK(0)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FG(\305)1073
1495 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 2059 a
SDict begin H.S end
 -246 2059 a -246 2059 a
SDict begin 12 H.A end
 -246 2059
a -246 2059 a
SDict begin [/View [/XYZ H.V]/Dest (exo.57) cvn /DEST pdfmark end
 -246 2059 a 0 TeXcolorgray 133 x FL(Ex)o(er)o(cice)14
b(57)p 0 TeXcolorgray 41 w FK(On)27 b(dispose)g(d)n('une)h(cl\364tur)o
(e)e(de)h(100)g(m\350tr)o(es)h(de)e(long)h(pour)f(d\351limiter)i(un)f
(terr)o(ain)g(r)o(ectangulair)o(e)f(le)h(long)g(d)n('une)g(r)q
(ivi\350r)o(e)g(\(la)-246 2292 y(cl\364tur)o(e)18 b(est)g(en)g
(pointill\351s)h(\227)f(on)f(ne)h(met)g(pas)g(de)f(cl\364tur)o(e)h(le)g
(long)f(de)g(la)h(r)q(ivi\350r)o(e\).)f(On)g(note)j FB(x)j
FK(et)c FB(x)2734 2262 y FH(0)2773 2292 y FK(les)f(longueurs)h(des)e
(c\364t\351s)h(du)f(terr)o(ain.)p 0 TeXcolorgray 0 TeXcolorgray
1123 3583 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.1692 a add def
/d 0.0 a add neg def /h 142.26372 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1123 3583 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 1  setrgbcolor  [ 28.45274 85.35823
170.71646 85.35823 170.71646 113.81097 28.45274 113.81097  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.7
0.7 1  setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0  setrgbcolor  [ 142.26372 85.35823
142.26372 28.45274 56.90549 28.45274 56.90549 85.35823  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.7 1 0.7  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 0.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 28.45274 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1123 3583 a
tx@Dict begin { 43.81703 56.90549 } PutCoor PutBegin  end
 1123
3583 a 1125 3621 a FB(x)1123 3583 y
tx@Dict begin  PutEnd  end
 1123 3583 a 1123
3583 a
tx@Dict begin { 146.24707 56.90549 } PutCoor PutBegin  end
 1123 3583 a 1125 3621 a FB(x)1123 3583 y
tx@Dict begin  PutEnd  end
 1123
3583 a 1123 3583 a
tx@Dict begin { 95.60123 22.76227 } PutCoor PutBegin  end
 1123 3583 a 1125 3646 a FB(x)1169
3616 y FH(0)1123 3583 y
tx@Dict begin  PutEnd  end
 1123 3583 a 2777 3583 a
currentpoint initclip moveto
 2777
3583 a -246 3766 a FK(On)h(voudr)o(ait)f(d\351limiter)i(le)f(terr)o
(ain)g(le)f(plus)i(gr)o(and)e(possible)o(.)-246 3799
y
SDict begin H.S end
 -246 3799 a -246 3799 a
SDict begin 12 H.A end
 -246 3799 a -246 3799 a
SDict begin [/View [/XYZ H.V]/Dest (Item.139) cvn /DEST pdfmark end
 -246
3799 a -246 3799 a
SDict begin H.S end
 -246 3799 a -246 3799 a
SDict begin 12 H.A end
 -246 3799
a -246 3799 a
SDict begin [/View [/XYZ H.V]/Dest (Item.140) cvn /DEST pdfmark end
 -246 3799 a 0 TeXcolorgray -141 3894 a
FK(1.)p 0 TeXcolorgray 0 TeXcolorgray 43 w(\(a\))p 0
TeXcolorgray 43 w FB(x)23 b FK(est)c(une)g(longueur)-5
b(,)20 b(donc)h FB(x)f FG(\270)15 b FK(0.)k(P)m(ar)g(ailleurs)o(,)h(la)
e(longueur)k FB(x)h FK(appar)o(a\356t)d(deux)e(fois)i(sur)e(la)h
(\002gur)o(e)o(,)e(donc)j FB(x)k FK(ne)18 b(peut)i(pas)f(d\351passer)97
3994 y(50)f(\(car)e(2)10 b FG(\243)g FK(50)16 b FG(\306)e
FK(100\).)97 4108 y(C)o(onclusion)19 b(:)e(on)h(a)f(l)o('encadr)o
(ement)1944 4208 y(0)d FG(\267)j FB(x)i FG(\267)14 b
FK(50.)-246 4258 y
SDict begin H.S end
 -246 4258 a -246 4258 a
SDict begin 12 H.A end
 -246 4258
a -246 4258 a
SDict begin [/View [/XYZ H.V]/Dest (Item.141) cvn /DEST pdfmark end
 -246 4258 a 0 TeXcolorgray -44 4372 a FK(\(b\))p
0 TeXcolorgray 41 w(Le)j(p\351r)q(im\350tr)o(e)o(,)h(100)h(m,)f(s)m
('obtient)g(en)g(faisant)g(le)g(calcul)1957 4472 y FB(x)d
FG(\305)d FB(x)j FG(\305)d FB(x)2243 4437 y FH(0)2266
4472 y FK(,)97 4621 y(donc)1885 4721 y(2)r FB(x)j FG(\305)d
FB(x)2092 4686 y FH(0)2129 4721 y FG(\306)i FK(100)19
b(;)97 4870 y(et)e(donc)1896 4970 y FB(x)1940 4936 y
FH(0)1975 4970 y FG(\306)e FK(100)10 b FG(\241)g FK(2)r
FB(x)5 b FK(.)-246 5020 y
SDict begin H.S end
 -246 5020 a -246 5020 a
SDict begin 12 H.A end
 -246
5020 a -246 5020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.142) cvn /DEST pdfmark end
 -246 5020 a 0 TeXcolorgray -36 5134
a FK(\(c\))p 0 TeXcolorgray 41 w(L)-10 b('air)o(e)17
b(du)g(terr)o(ain)h(est)941 5316 y FB(x)d FG(\243)d FB(x)1106
5282 y FH(0)1143 5316 y FG(\306)k FB(x)f FG(\243)1333
5317 y FK(\()1360 5316 y(100)10 b FG(\241)g FK(2)r FB(x)1641
5317 y FK(\))2690 5316 y(\(car)19 b FB(x)2888 5282 y
FH(0)2923 5316 y FG(\306)c FK(100)10 b FG(\241)g FK(2)r
FB(x)5 b FK(\))1143 5441 y FG(\306)16 b FB(x)f FG(\243)10
b FK(100)g FG(\305)i FB(x)j FG(\243)10 b FK(\()p FG(\241)p
FK(2)r FB(x)5 b FK(\))846 b(\(on)17 b(d\351veloppe\))1143
5577 y FG(\306)d FK(100)r FB(x)h FG(\241)10 b FK(2)r
FB(x)1539 5543 y FI(2)1577 5577 y FK(.)p 0 TeXcolorgray
1909 5895 a(31)p 0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.32) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.143) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(d\351\002nit)h(\340)f(pr\351sent)
h(la)g(fonction)26 b FB(f)36 b FK(sur)1248 -162 y([)1273
-163 y(0;)8 b(50)1421 -162 y(])1465 -163 y(par)1752 -63
y FB(f)19 b FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(100)r
FB(x)h FG(\241)10 b FK(2)r FB(x)2305 -97 y FI(2)2343
-63 y FK(.)-38 86 y(A)n(utr)o(ement)18 b(dit,)26 b FB(f)18
b FK(\()r FB(x)5 b FK(\))18 b(donne)f(l)o('air)o(e)h(du)f(terr)o(ain)h
(pour)g(une)g(valeur)f(donn\351e)h(de)i FB(x)5 b FK(.)-246
120 y
SDict begin H.S end
 -246 120 a -246 120 a
SDict begin 12 H.A end
 -246 120 a -246 120 a
SDict begin [/View [/XYZ H.V]/Dest (Item.144) cvn /DEST pdfmark end
 -246
120 a 0 TeXcolorgray -38 215 a FK(\(a\))p 0 TeXcolorgray
41 w(T)-8 b(ableau)18 b(de)f(valeurs)h(:)p 97 251 4050
4 v 97 351 4 100 v 204 321 a FB(x)p 350 351 V 261 w FK(0)p
695 351 V 305 w(5)p 1040 351 V 284 w(10)p 1385 351 V
265 w(15)p 1729 351 V 265 w(20)p 2074 351 V 264 w(25)p
2419 351 V 265 w(30)p 2763 351 V 265 w(35)p 3108 351
V 265 w(40)p 3453 351 V 264 w(45)p 3798 351 V 265 w(50)p
4142 351 V 97 354 4050 4 v 97 454 4 100 v 158 424 a FB(f)h
FK(\()r FB(x)5 b FK(\))p 350 454 V 203 w(0)p 695 454
V 264 w(450)p 1040 454 V 225 w(800)p 1385 454 V 205 w(1050)p
1729 454 V 184 w(1200)p 2074 454 V 185 w(1250)p 2419
454 V 185 w(1200)p 2763 454 V 184 w(1050)p 3108 454 V
205 w(800)p 3453 454 V 225 w(450)p 3798 454 V 265 w(0)p
4142 454 V 97 457 4050 4 v -246 472 a
SDict begin H.S end
 -246 472 a -246
472 a
SDict begin 12 H.A end
 -246 472 a -246 472 a
SDict begin [/View [/XYZ H.V]/Dest (Item.145) cvn /DEST pdfmark end
 -246 472 a 0 TeXcolorgray
-44 552 a FK(\(b\))p 0 TeXcolorgray 41 w(C)o(ourbe)17
b(r)o(epr\351sentative)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1369 2021 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 181.11247 a add def
/d 0.0 a add neg def /h 166.8665 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1369 2021 a 1582 1895 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 161.83543 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.7478
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 149.7092 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45444
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 161.83543  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 161.83543  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 149.7092  def /dT 1864790 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 2.84544  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 149.7092
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 161.83543
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 149.7092  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 149.7092  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 161.83543  def /dT 1490800 abs 65536 div viceversa
{ neg } if def /DT 200. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.11374  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.11374  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 149.7092
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 161.83543
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1567 1992 a FI(0)189
b(10)175 b(20)f(30)g(40)g(50)1493 1914 y(0)1431 1725
y(200)1431 1536 y(400)1431 1347 y(600)1431 1158 y(800)1401
970 y(1000)1401 781 y(1200)1582 1895 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0.0 def /x1 50.0 def
/dx x1 x sub 199 div def /F@pstplot (100*x-2*x^(2))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 2.84544 mul F@pstplot 0.11374 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 0.11374 mul gt { moveto } { dup -1.e30 0.11374 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 0.11374 mul gt { moveto } { dup -1.e30 0.11374
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 2873 2021 a
currentpoint initclip moveto
 2873 2021 a -246
2065 a
SDict begin H.S end
 -246 2065 a -246 2065 a
SDict begin 12 H.A end
 -246 2065 a -246 2065
a
SDict begin [/View [/XYZ H.V]/Dest (Item.146) cvn /DEST pdfmark end
 -246 2065 a 0 TeXcolorgray -36 2179 a FK(\(c\))p 0
TeXcolorgray 49 w FB(f)45 b FK(atteint)29 b(son)e(maximum)i(lorsque)h
FB(x)f FG(\306)24 b FK(25,)k(donc)f(la)g(sur)q(face)g(du)g(terr)o(ain)h
(est)g(maximale)g(lorsque)i FB(x)f FG(\306)24 b FK(25.)k(Dans)f(ce)g
(cas)o(,)i FB(x)4045 2149 y FH(0)4091 2179 y FG(\306)97
2278 y FK(100)10 b FG(\241)g FK(2)g FG(\243)g FK(25)17
b FG(\306)e FK(50.)j(A)n(utr)o(ement)g(dit,)g(le)f(terr)o(ain)h(de)f
(sur)q(face)h(maximale)h(mesur)o(e)f(50)g(m)g(sur)f(25)i(m.)-246
2356 y
SDict begin H.S end
 -246 2356 a -246 2356 a
SDict begin 12 H.A end
 -246 2356 a -246 2356
a
SDict begin [/View [/XYZ H.V]/Dest (exo.58) cvn /DEST pdfmark end
 -246 2356 a 0 TeXcolorgray 122 x FL(Ex)o(er)o(cice)14
b(58)p 0 TeXcolorgray 41 w FK(On)j(constr)q(uit)h(la)g(courbe)f(r)o
(epr\351sentative)i(d)n('une)f(fonction)27 b FB(f)17
b FK(,)g(d\351\002nie)h(sur)2495 2479 y([)2521 2478 y
FG(\241)p FK(2;)8 b(3)2684 2479 y(])2727 2478 y(et)18
b(v\351r)q(i\002ant)g(les)g(conditions)g(suivantes)h(:)p
0 TeXcolorgray -76 2577 a(\225)p 0 TeXcolorgray 50 w
FB(f)36 b FK(est)18 b(croissante)g(sur)f(l)o('inter)q(valle)1062
2578 y([)1088 2577 y FG(\241)p FK(2;)8 b(1)1251 2578
y(])1285 2577 y(;)p 0 TeXcolorgray -76 2677 a(\225)p
0 TeXcolorgray 50 w FB(f)36 b FK(est)18 b(af\002ne)f(sur)h(l)o('inter)q
(valle)907 2678 y([)932 2677 y(1;)8 b(3)1040 2678 y(])1092
2677 y(;)p 0 TeXcolorgray -76 2777 a(\225)p 0 TeXcolorgray
50 w FB(f)19 b FK(\()p FG(\241)p FK(2\))14 b FG(\306)g(\241)p
FK(4)k(et)25 b FB(f)19 b FK(\(3\))c FG(\306)f FK(1)j(;)p
0 TeXcolorgray -76 2876 a(\225)p 0 TeXcolorgray 42 w(les)h(solutions)h
(de)e(l)o('\351quation)28 b FB(f)19 b FK(\()r FB(x)5
b FK(\))14 b FG(\306)g FK(2)k(sont)g FG(\241)p FK(1)f(et)h(2.)-246
2976 y(Il)f(y)g(a)g(plusieurs)i(\351tapes)g(:)-246 3009
y
SDict begin H.S end
 -246 3009 a -246 3009 a
SDict begin 12 H.A end
 -246 3009 a -246 3009 a
SDict begin [/View [/XYZ H.V]/Dest (Item.147) cvn /DEST pdfmark end
 -246
3009 a 0 TeXcolorgray -141 3105 a FK(1.)p 0 TeXcolorgray
43 w(P)n(our)e(commencer)-5 b(,)19 b(on)e(utilise)j(l)o('ensemble)f(de)
f(d\351\002nition)g(:)f(on)h(sait)f(qu)n('il)i(faut)f(tr)o(acer)f(la)g
(courbe)h(sur)f(l)o('inter)q(valle)3463 3106 y([)3488
3105 y FG(\241)p FK(2;)8 b(3)3651 3106 y(])3695 3105
y(\(zones)17 b(ver)q(tes)-38 3204 y(ex)o(clues\).)-246
3229 y
SDict begin H.S end
 -246 3229 a -246 3229 a
SDict begin 12 H.A end
 -246 3229 a -246 3229
a
SDict begin [/View [/XYZ H.V]/Dest (Item.148) cvn /DEST pdfmark end
 -246 3229 a 0 TeXcolorgray -141 3333 a FK(2.)p 0 TeXcolorgray
43 w(Ensuite)o(,)k(on)e(sait)i(que)28 b FB(f)19 b FK(\()p
FG(\241)p FK(2\))d FG(\306)g(\241)p FK(4)k(et)28 b FB(f)19
b FK(\(3\))e FG(\306)f FK(1,)k(donc)f(la)h(courbe)f(r)o
(epr\351sentative)j(passe)e(par)g(les)g(points)h(de)e(coor)o
(donn\351es)h(\()p FG(\241)p FK(2;)8 b FG(\241)p FK(4\))20
b(et)-38 3433 y(\(3;)8 b(1\))18 b(\(plac\351s)g(en)g(bleu\).)-246
3465 y
SDict begin H.S end
 -246 3465 a -246 3465 a
SDict begin 12 H.A end
 -246 3465 a -246 3465
a
SDict begin [/View [/XYZ H.V]/Dest (Item.149) cvn /DEST pdfmark end
 -246 3465 a 0 TeXcolorgray -141 3562 a FK(3.)p 0 TeXcolorgray
43 w(Les)g(solutions)g(de)f(l)o('\351quation)27 b FB(f)19
b FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(2)j(sont)h
FG(\241)p FK(1)f(et)g(2,)h(donc)e(la)h(courbe)g(r)o(epr\351sentative)h
(passe)g(par)f(les)g(points)h(de)f(coor)o(donn\351es)g(\()p
FG(\241)p FK(1;)8 b(2\))-38 3661 y(et)18 b(\(2;)8 b(2\))19
b(\(plac\351s)f(en)h(rouge\).)e(De)g(plus)o(,)j(la)e(courbe)f(r)o
(epr\351sentative)j(ne)e(coupe)h(nulle)g(par)q(t)f(ailleurs)h(la)f
(droite)f(hor)q(izontale)h(qui)h(passe)g(par)-38 3761
y(l)o('or)o(donn\351e)f(2)g(\(tr)o(ac\351e)f(\351galement)i(en)f(rouge)
o(,)e(en)i(pointill\351s\).)-246 3794 y
SDict begin H.S end
 -246 3794 a -246
3794 a
SDict begin 12 H.A end
 -246 3794 a -246 3794 a
SDict begin [/View [/XYZ H.V]/Dest (Item.150) cvn /DEST pdfmark end
 -246 3794 a 0 TeXcolorgray
-141 3890 a FK(4.)p 0 TeXcolorgray 43 w(La)13 b(fonction)21
b FB(f)35 b FK(est)13 b(af\002ne)g(sur)873 3891 y([)901
3890 y(1;)8 b(3)1009 3891 y(])1044 3890 y(,)13 b(donc)g(sa)g(courbe)g
(r)o(epr\351sentative)g(sur)g(cet)g(inter)q(v)q(alle)h(est)g(un)g(se)q
(gment)q(.)f(On)h(tr)o(ace)f(l'un)q(ique)h(se)q(gment)-38
3989 y(passant)k(par)g(les)g(points)g(d\351j\340)g(plac\351s)g(\(en)g
(or)o(ange\).)-246 4023 y
SDict begin H.S end
 -246 4023 a -246 4023 a
SDict begin 12 H.A end
 -246
4023 a -246 4023 a
SDict begin [/View [/XYZ H.V]/Dest (Item.151) cvn /DEST pdfmark end
 -246 4023 a 0 TeXcolorgray -141 4118
a FK(5.)p 0 TeXcolorgray 43 w(En\002n)23 b FB(f)34 b
FK(est)15 b(croissante)h(sur)f(l)o('inter)q(valle)1217
4119 y([)1243 4118 y FG(\241)p FK(2;)8 b(1)1406 4119
y(])1440 4118 y(,)15 b(donc)g(on)g(tr)o(ace)g(une)h(courbe)f(\253)d
(qui)j(monte)d(\273)30 b(sur)16 b(cet)f(inter)q(valle)i(\(en)e(noir\).)
g(Il)f(faut)i(aussi)-38 4218 y(bien)h(s\373r)h(qu)n('elle)h(passe)f
(par)f(les)i(points)f(d\351j\340)g(plac\351s)o(.)-38
4357 y FL(R)o(emarque)12 b(:)j FK(P)n(our)g(cette)h(der)q(ni\350r)o(e)f
(\351tape)o(,)h(il)f(y)g(a)g(plusieurs)j(dessins)e(possibles)o(.)h(S)n
(ur)e(le)h(gr)o(aphique)h(j)o('ai)e(choisi)h(de)f(tr)o(acer)g(deux)h
(segments)-38 4457 y(par)h(facilit\351)i(\(technique\),)g(mais)f(vous)g
(pouvez)g(fair)o(e)f(une)h(courbe)f(\340)g(main)h(lev\351e)h(qui)f(ne)g
(soit)g(pas)f(droite)o(.)-246 4610 y(La)h(courbe)f(\002nale)h(est)f(tr)
o(ac\351e)h(en)g(noir)f(et)h(en)g(or)o(ange)o(.)p 0 TeXcolorgray
1909 5895 a(32)p 0 TeXcolorgray eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.33) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1071 1668
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 211.68846 a add def
/d 0.0 a add neg def /h 230.46738 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1071 1668 a 1770 638 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 127.46815 0.0 -84.2203 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 106.4134 0.0 -124.05397   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 127.46815  0 -84.2203  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -84.2203
 127.46815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-124.05397  def /maxTickline 106.4134  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 106.4134
0.0 -124.05397   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 127.46815
0.0 -84.2203 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 106.4134  0 -124.05397  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -124.05397
 106.4134  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-84.2203  def /maxTickline 127.46815  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 106.4134
0.0 -124.05397   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 127.46815
0.0 -84.2203 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1755 735 a FI(0)205
b(1)h(2)f(3)-997 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)1682
657 y(0)1640 893 y FH(\241)p FI(1)1640 1130 y FH(\241)p
FI(2)1640 1366 y FH(\241)p FI(3)1640 1602 y FH(\241)p
FI(4)1682 421 y(1)1682 185 y(2)1682 -52 y(3)1770 638
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ -56.90549 112.10387
-56.90549 -129.74443 -89.91077 -129.74443 -89.91077 112.10387  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.8
1 0.8  setrgbcolor  0.25 .setopacityalpha  fill  grestore gsave 2.0
SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0
 2.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ 133.15863 112.10387
133.15863 -129.74443 85.35823 -129.74443 85.35823 112.10387  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.8
1 0.8  setrgbcolor  0.25 .setopacityalpha  fill  grestore gsave 2.0
SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0
 2.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.96 def /x1 4.48
def /dx x1 x sub 49 div def /F@pstplot ((--2.-0.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 85.35823
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 56.90549 -56.90549 -113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 -28.45274 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
-113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -28.45274
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2829 1668 a
currentpoint initclip moveto
 2829
1668 a -246 1751 a
SDict begin H.S end
 -246 1751 a -246 1751 a
SDict begin 12 H.A end
 -246 1751
a -246 1751 a
SDict begin [/View [/XYZ H.V]/Dest (exo.59) cvn /DEST pdfmark end
 -246 1751 a 0 TeXcolorgray 116 x FL(Ex)o(er)o(cice)14
b(59)p 0 TeXcolorgray 41 w FK(Les)23 b(courbes)f(en)g(for)q(me)h(de)e
(O)l(,)i(de)e(T)i(et)f(de)f(M)h(ne)h(sont)f(pas)h(les)f(courbes)g(r)o
(epr\351sentatives)i(de)e(fonctions)o(,)i(puisqu)n('un)g(nombr)o(e)-246
1967 y(aur)o(ait)18 b(plusieurs)i(images)e(\(pointill\351s)h(rouges\).)
-246 2066 y(En)c(r)o(evanche)o(,)f(la)h(lettr)o(e)g(V)g(n)-6
b('a)14 b(pas)h(ce)g(probl\350me)g(et)g(r)o(epr\351sente)g(bien)g(la)g
(courbe)f(d)n('une)h(fonction)h(\(exemple)g(:)f(la)f(courbe)h(de)f(la)h
(fonction)g(d\351\002nie)-246 2166 y(par)26 b FB(f)19
b FK(\()r FB(x)5 b FK(\))14 b FG(\306)g FK(2)p FG(j)r
FB(x)5 b FG(j)18 b FK(pour)i FB(x)g FG(2)572 2167 y FK([)598
2166 y FG(\241)p FK(1;)8 b(1)761 2167 y(])804 2166 y(est)18
b(en)g(for)q(me)g(de)f(V)6 b(\).)p 0 TeXcolorgray 0 TeXcolorgray
1119 2630 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 200.08177 a add def
/d 0.0 a add neg def /h 42.67957 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1119 2630 a 1587 2885 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray   -34.14365 51.21547 2 copy
moveto 17.07181 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.07182 34.14365 0.0 68.2873   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14365 68.2873 17.07182 34.14365
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35912 68.2873 51.21547 68.2873 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.2873 34.14365 68.2873 68.2873  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.43094 68.2873 102.43094 34.14365
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.50276 51.21547 102.43094 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57458 68.2873 119.50276 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57458 34.14365 136.57458 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -34.14365 71.7016 -34.14365
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 68.2873 71.7016 68.2873
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 102.43094 71.7016 102.43094
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 2781 2630 a
currentpoint initclip moveto
 2781 2630 a -246
2813 a FK(D)o('une)16 b(mani\350r)o(e)g(g\351n\351r)o(ale)o(,)h(on)f(r)
o(econna\356t)g(une)g(fonction)h(\(et)f(la)g(courbe)g(r)o
(epr\351sentative)h(d)n('une)g(fonction\))f(au)g(fait)h(que)f(tout)h
(nombr)o(e)e(r\351el)h(a)g FL(au)-246 2913 y(plus)g(une)h
FK(image)g(\(donc)g(0)h(ou)f(1)h(image\).)-246 2998 y
SDict begin H.S end

-246 2998 a -246 2998 a
SDict begin 12 H.A end
 -246 2998 a -246 2998 a
SDict begin [/View [/XYZ H.V]/Dest (exo.60) cvn /DEST pdfmark end
 -246
2998 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)c(60)p
0 TeXcolorgray 41 w FK(Dans)j(tout)h(l)o('exer)o(cice)o(,)g(les)g
(longueurs)g(sont)g(expr)q(im\351es)h(en)f(cm,)g(les)g(air)o(es)f(en)h
(cm)2682 3088 y Fg(2)2726 3112 y FK(et)f(les)h(volumes)h(en)f(cm)3441
3088 y Fg(3)3468 3112 y FK(.)-246 3160 y
SDict begin H.S end
 -246 3160 a
-246 3160 a
SDict begin 12 H.A end
 -246 3160 a -246 3160 a
SDict begin [/View [/XYZ H.V]/Dest (Item.152) cvn /DEST pdfmark end
 -246 3160 a -246
3160 a
SDict begin H.S end
 -246 3160 a -246 3160 a
SDict begin 12 H.A end
 -246 3160 a -246 3160
a
SDict begin [/View [/XYZ H.V]/Dest (Item.153) cvn /DEST pdfmark end
 -246 3160 a 0 TeXcolorgray -141 3255 a FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 43 w FB(x)k
FK(est)c(une)g(longueur)-5 b(,)18 b(donc)h FB(x)h FG(\270)14
b FK(0.)k(D)o('autr)o(e)e(par)q(t,)h(la)g(longueur)j
FB(x)j FK(appar)o(a\356t)18 b(deux)f(fois)o(,)h(donc)f(comme)h(la)g
(plaque)g(de)f(m\351tal)h(a)f(pour)145 3355 y(c\364t\351)g(15,)k
FB(x)h FK(ne)c(peut)g(d\351passer)g(7,)8 b(5.)19 b(A)n(utr)o(ement)f
(dit)g(:)p 0 TeXcolorgray 0 TeXcolorgray 1673 3513 a
FB(x)k FK(est)c(compr)q(is)g(entr)o(e)g(0)f(et)h(7,)8
b(5.)-246 3574 y
SDict begin H.S end
 -246 3574 a -246 3574 a
SDict begin 12 H.A end
 -246 3574 a
-246 3574 a
SDict begin [/View [/XYZ H.V]/Dest (Item.154) cvn /DEST pdfmark end
 -246 3574 a 0 TeXcolorgray 4 3671 a FK(\(b\))p
0 TeXcolorgray 41 w(Dans)16 b(cette)i(question,)i(on)d(pr)o(end)i
FB(x)h FG(\306)14 b FK(3.)k(Il)e(r)o(este)i(alors)g(15)10
b FG(\241)g FK(2)g FG(\243)g FK(3)16 b FG(\306)e FK(9)k(cm)g(pour)f(le)
h(c\364t\351)g(du)f(carr\351)g(centr)o(al.)p 0 TeXcolorgray
0 TeXcolorgray 651 4875 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 113.92433 a add def
/d 0.0 a add neg def /h 131.05283 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 651 4875 a 1187 4664 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 0.0 -39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 19.91684 19.91684 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 19.91684 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 79.66736 39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -59.75052 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -59.75052 79.66736 -59.75052 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 79.66736 -59.75052 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 99.5842 -39.83368 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 99.5842 -39.83368 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 79.66736 19.91684 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 79.66736 19.91684 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1187 4664 a
tx@Dict begin { -11.95021 94.80405 } PutCoor PutBegin  end
 1187
4664 a 51 x FK(9)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187 4664 a
tx@Dict begin { 32.6636 50.1905 } PutCoor PutBegin  end

1187 4664 a 51 x FK(9)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187 4664
a
tx@Dict begin { 13.14517 91.21915 } PutCoor PutBegin  end
 1187 4664 a 51 x FK(3)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187
4664 a
tx@Dict begin { 27.88345 76.879 } PutCoor PutBegin  end
 1187 4664 a 51 x FK(3)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -59.75052
-9.95842 -19.91684 -9.95842   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 39.83368
-9.95842 -19.91684 -9.95842   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1187 4664 a
tx@Dict begin { -13.14517 -12.74677 } PutCoor PutBegin  end
 1187 4664 a 51 x
FK(15)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 79.66736 19.91684 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 79.66736 19.91684 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial
1597 4875 a
currentpoint initclip moveto
 1597 4875 a 0 TeXcolorgray 0 TeXcolorgray
2602 4703 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 135.83298 a add def
/d 0.0 a add neg def /h 110.33916 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2602 4703 a 3069 4614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 0.0 -39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 39.83368 39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 59.75052 39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 59.75052 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 59.75052 -19.91684 59.75052
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 39.83368 59.75052 59.75052
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3069 4614 a
tx@Dict begin { -50.58864 11.95021 } PutCoor PutBegin  end
 3069 4614 a 51 x
FK(3)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a 3069 4614 a
tx@Dict begin { -1.59337 -1.99179 } PutCoor PutBegin  end
 3069 4614 a
51 x FK(9)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a 3069 4614 a
tx@Dict begin { 55.36879 23.50172 } PutCoor PutBegin  end
 3069 4614
a 51 x FK(9)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 59.75052 -19.91684 39.83368
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 49.7921 39.83368 -19.91684 39.83368
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 39.83368 -29.87526 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3730 4703 a
currentpoint initclip moveto
 3730 4703 a 145
5089 a FK(Le)g(volume)i(de)e(la)h(bo\356te)f(est)h(\351gal)g(\340)1709
5189 y FB(L)c FG(\243)c FD(`)g FG(\243)g FB(h)19 b FG(\306)14
b FK(9)c FG(\243)g FK(9)g FG(\243)g FK(3)16 b FG(\306)e
FK(243.)-246 5239 y
SDict begin H.S end
 -246 5239 a -246 5239 a
SDict begin 12 H.A end
 -246 5239
a -246 5239 a
SDict begin [/View [/XYZ H.V]/Dest (Item.155) cvn /DEST pdfmark end
 -246 5239 a 0 TeXcolorgray -141 5353 a
FK(2.)p 0 TeXcolorgray 43 w(\300)j(par)q(tir)g(de)g(l\340,)g(je)h(r)o
(egroupe)f(la)g(corr)o(ection)g(des)h(sous-questions)o(.)-38
5517 y(Le)g(carr\351)e(du)i(fond)f(a)g(pour)h(c\364t\351)g(15)10
b FG(\241)i FB(x)j FG(\241)d FB(x)21 b FG(\306)14 b FK(15)c
FG(\241)g FK(2)r FB(x)5 b FK(,)20 b(et)e(la)f(hauteur)h(de)g(la)f
(bo\356te)h(est)i FB(x)5 b FK(.)p 0 TeXcolorgray 1909
5895 a(33)p 0 TeXcolorgray eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.34) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1513 998
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 130.20027 a add def
/d 0.0 a add neg def /h 149.77585 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1513 998 a 2126 756 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 0.0 -45.52457 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 22.76228 22.76228 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 22.76228 22.76228 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 91.04913 45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 22.76228 -45.52457 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -68.28685 22.76228 -45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -68.28685 91.04913 -68.28685 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 91.04913 -68.28685 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 113.81142 -45.52457 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 113.81142 -45.52457 113.81142
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 91.04913 22.76228 113.81142
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 91.04913 22.76228 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2126 756 a
tx@Dict begin { -25.03865 108.34834 } PutCoor PutBegin  end
 2126 756 a 51 x FK(15)10
b FG(\241)g FK(2)r FB(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756
a
tx@Dict begin  gsave STV CP T /ps@rot 90. def grestore  end
 2126 756 a 2126 756 a
tx@Dict begin { 37.33012 43.24818 } PutCoor PutBegin  end
 2126 756 a 2126 756 a
tx@Dict begin ps@rot  RotBegin  end
 2126 756
a 51 x FK(15)g FG(\241)g FK(2)r FB(x)2126 756 y
tx@Dict begin RotEnd  end
 2126
756 a 2126 756 a
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756 a
tx@Dict begin { 15.02318 104.2513 } PutCoor PutBegin  end
 2126 756 a 2128
794 a FB(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756 a
tx@Dict begin { 31.86705 87.86243 } PutCoor PutBegin  end
 2126 756
a 2128 794 a FB(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -68.28685
-11.38113 -22.76228 -11.38113   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 45.52457
-11.38113 -22.76228 -11.38113   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2126 756 a
tx@Dict begin { -15.02318 -14.56784 } PutCoor PutBegin  end
 2126 756 a 51 x FK(15)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 22.76228 -45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 91.04913 22.76228 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 91.04913 22.76228 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 22.76228 -45.52457 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial 2594 998 a
currentpoint initclip moveto
 2594
998 a -38 1156 a FK(Donc)17 b(le)h(volume)g(de)f(la)h(bo\356te)g(est)
1461 1255 y FB(L)c FG(\243)c FD(`)g FG(\243)g FB(h)19
b FG(\306)14 b FK(\(15)c FG(\241)g FK(2)r FB(x)5 b FK(\))10
b FG(\243)g FK(\(15)g FG(\241)g FK(2)r FB(x)5 b FK(\))10
b FG(\243)i FB(x)5 b FK(.)-38 1420 y(On)17 b(d\351veloppe)i(cette)f
(expr)o(ession)h(:)1025 1602 y FB(V)d FK(\()r FB(x)5
b FK(\))14 b FG(\306)1273 1603 y FK(\()1300 1602 y(15)c
FG(\241)g FK(2)r FB(x)1541 1603 y FK(\))1580 1602 y FG(\243)1645
1603 y FK(\()1672 1602 y(15)g FG(\241)g FK(2)r FB(x)1913
1603 y FK(\))1952 1602 y FG(\243)i FB(x)1204 1727 y FG(\306)1273
1728 y FK(\()1300 1727 y(15)e FG(\243)g FK(15)g FG(\305)g
FK(15)g FG(\243)g FK(\()p FG(\241)p FK(2)r FB(x)5 b FK(\))10
b FG(\305)g FK(\()p FG(\241)p FK(2)r FB(x)5 b FK(\))10
b FG(\243)g FK(15)g FG(\305)g FK(\()p FG(\241)p FK(2)r
FB(x)c FK(\))k FG(\243)g FK(\()p FG(\241)p FK(2)r FB(x)5
b FK(\))2926 1728 y(\))2969 1727 y FG(\243)12 b FB(x)1204
1863 y FG(\306)1273 1799 y Ft(\241)1303 1863 y FK(225)e
FG(\241)g FK(30)r FB(x)15 b FG(\241)10 b FK(30)r FB(x)15
b FG(\305)10 b FK(4)r FB(x)1986 1829 y FI(2)2027 1799
y Ft(\242)2066 1863 y FG(\243)i FB(x)1204 1999 y FG(\306)i
FK(225)r FB(x)h FG(\241)10 b FK(30)r FB(x)1640 1965 y
FI(2)1689 1999 y FG(\241)g FK(30)r FB(x)1880 1965 y FI(2)1926
1999 y FG(\305)g FK(4)r FB(x)2077 1965 y FI(3)1204 2135
y FG(\306)k FK(4)r FB(x)1359 2101 y FI(3)1405 2135 y
FG(\241)c FK(60)r FB(x)1596 2101 y FI(2)1643 2135 y FG(\305)g
FK(225)r FB(x)5 b FK(.)-38 2383 y(On)17 b(fait)h(un)g(tableau)g(de)f
(valeurs)h(pour)e FB(V)32 b FK(sur)1358 2384 y([)1383
2383 y(0;)8 b(7,)g(5)1559 2384 y(])1604 2383 y(avec)17
b(un)h(pas)g(de)f(0,)8 b(5,)19 b(puis)f(on)g(constr)q(uit)g(sa)f
(courbe)g(r)o(epr\351sentative)o(.)p -38 2426 4184 4
v -38 2526 4 100 v 75 2496 a FB(x)p 227 2526 V 217 w
FK(0)p 472 2526 V 170 w(0,)8 b(5)p 717 2526 V 171 w(1)p
961 2526 V 171 w(1,)g(5)p 1206 2526 V 171 w(2)p 1451
2526 V 170 w(2,)g(5)p 1695 2526 V 171 w(3)p 1940 2526
V 170 w(3,)g(5)p 2185 2526 V 172 w(4)p 2429 2526 V 170
w(4,)g(5)p 2674 2526 V 171 w(5)p 2919 2526 V 170 w(5,)g(5)p
3164 2526 V 171 w(6)p 3408 2526 V 171 w(6,)g(5)p 3653
2526 V 171 w(7)p 3898 2526 V 170 w(7,)g(5)p 4142 2526
V -38 2529 4184 4 v -38 2628 4 100 v 13 2599 a FB(V)16
b FK(\()r FB(x)5 b FK(\))p 227 2628 V 153 w(0)p 472 2628
V 184 w(98)p 717 2628 V 145 w(169)p 961 2628 V 125 w(216)p
1206 2628 V 124 w(242)p 1451 2628 V 125 w(250)p 1695
2628 V 125 w(243)p 1940 2628 V 124 w(224)p 2185 2628
V 125 w(196)p 2429 2628 V 125 w(162)p 2674 2628 V 124
w(125)p 2919 2628 V 145 w(88)p 3164 2628 V 165 w(54)p
3408 2628 V 165 w(26)p 3653 2628 V 185 w(7)p 3898 2628
V 204 w(0)p 4142 2628 V -38 2632 4184 4 v 0 TeXcolorgray
0 TeXcolorgray 1034 3843 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 245.64108 a add def
/d 0.0 a add neg def /h 137.90868 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1034 3843 a 1270 3666 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.18834 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33865
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 17 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 116.57002 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22636
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 217.18834  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 217.18834  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 116.57002  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 116.57002
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.18834
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 116.57002  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 116.57002  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 217.18834  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.42677  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 116.57002
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.18834
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1255 3763 a FI(0)205 b(1)g(2)h(3)f(4)g(5)g(6)g(7)1181
3686 y(0)1151 3508 y(50)1120 3331 y(100)1120 3154 y(150)1120
2977 y(200)1270 3666 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 7.5 def
/dx x1 x sub 199 div def /F@pstplot (225.0*x-60.0*x^(2.0)+4.0*x^(3.0))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
0.42677 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x dx
add def xy  dup 1.e30 0.42677 mul gt { moveto } { dup -1.e30 0.42677
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 0.42677 mul gt { moveto } { dup
-1.e30 0.42677 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
3073 3843 a
currentpoint initclip moveto
 3073 3843 a -38 4051 a FK(C)o(onclusion)19
b(:)f(d)n('apr\350s)f(le)h(gr)o(aphique)o(,)h(le)e(volume)i(est)f
(maximal)h(lorsque)h FB(x)g FG(\306)14 b FK(2,)8 b(5.)-246
4198 y
SDict begin H.S end
 -246 4198 a -246 4198 a
SDict begin 12 H.A end
 -246 4198 a -246 4198
a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -246 4198 a 131 x FM(5)105 b(P)o(r)o(obabilit\351s)-246
4413 y
SDict begin H.S end
 -246 4413 a -246 4413 a
SDict begin 12 H.A end
 -246 4413 a -246 4413
a
SDict begin [/View [/XYZ H.V]/Dest (exo.61) cvn /DEST pdfmark end
 -246 4413 a -246 4398 a
SDict begin H.S end
 -246 4398 a -246 4398 a
SDict begin 12 H.A end
 -246
4398 a -246 4398 a
SDict begin [/View [/XYZ H.V]/Dest (Item.156) cvn /DEST pdfmark end
 -246 4398 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)
14 b(61)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p
0 TeXcolorgray 43 w(C)o(omme)f(on)g(ne)g(r)o(emet)g(pas)g(le)g(pr)o
(emier)g(jeton)g(av)q(ant)g(de)g(tir)o(er)g(le)g(deuxi)q(\350me,)g(il)g
(n)-6 b('e)q(st)13 b(p)q(as)g(pos)q(sible)g(d)n(')q(obtenir)g(un)h
(\253)c(double)h(\273.)-38 4612 y(L)-10 b('univers)19
b(est)f(donc)1376 4712 y FB(U)k FG(\306)1528 4713 y FK({)1554
4712 y(\(1,)8 b(2\);)g(\(1,)g(3\);)g(\(2,)g(1\);)g(\(2,)g(3\);)g(\(3,)g
(1)q(\);)g(\(3,)g(2)q(\))2668 4713 y(})2708 4712 y(.)-246
4772 y
SDict begin H.S end
 -246 4772 a -246 4772 a
SDict begin 12 H.A end
 -246 4772 a -246 4772
a
SDict begin [/View [/XYZ H.V]/Dest (Item.157) cvn /DEST pdfmark end
 -246 4772 a 0 TeXcolorgray -141 4876 a FK(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)27 b FB(A)17 b FK(:)d(\253)g(un)j(des)h
(jetons)g(por)q(te)g(le)g(n\2601)c(\273)j(s)m('\351cr)q(it)h(sous)g
(for)q(me)f(ensembliste)1595 5058 y FB(A)g FG(\306)1730
5059 y FK({)1756 5058 y(\(1,)8 b(2\);)g(\(1,)g(3\);)g(\(2,)g(1\);)g
(\(3,)g(1\))2488 5059 y(})-38 5241 y(\(on)17 b(conser)q(ve)i(tous)f
(les)g(\351v\351nements)i(\351l\351mentair)o(es)f(o\371)f(appar)o
(a\356t)g(le)g(chiffr)o(e)g(1\).)-38 5405 y(Il)f(y)f(a)i(4)f(cas)h
(favor)o(ables)g(\340)23 b FB(A)s FK(,)17 b(et)h(6)f(cas)h(possibles)h
(dans)e(l)o('univers)o(,)j(donc)d FB(P)8 b FK(\()e FB(A)s
FK(\))13 b FG(\306)2423 5372 y FI(4)p 2423 5385 31 5
v 2423 5434 a(6)2477 5405 y FG(\306)2557 5372 y FI(2)p
2557 5385 V 2557 5434 a(3)2597 5405 y FK(.)-246 5500
y
SDict begin H.S end
 -246 5500 a -246 5500 a
SDict begin 12 H.A end
 -246 5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (exo.62) cvn /DEST pdfmark end
 -246
5500 a 0 TeXcolorgray 1909 5895 a FK(34)p 0 TeXcolorgray
eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.35) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.158) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(62)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(L)-10 b('univers)19 b(est)419 20 y
FB(U)k FG(\306)572 21 y FK({)598 20 y(\(1,)8 b(1\);)g(\(1,)g(2\);)g
(\(1,)g(3\);)g(\(1,)g(4\);)g(\(2,)g(1\);)g(\(2)q(,)g(2)q(\);)g(\(2,)g
(3)q(\);)g(\(2,)h(4\);)f(\(3,)h(1\);)f(\(3)q(,)g(2)q(\);)g(\(3,)g(3)q
(\);)g(\(3,)h(4\);)f(\(4,)h(1\);)f(\(4)q(,)g(2)q(\);)g(\(4,)g(3)q(\);)g
(\(4,)h(4\))3624 21 y(})3664 20 y(.)-38 203 y(Il)17 b(compor)q(te)g(4)
10 b FG(\243)g FK(4)16 b FG(\306)e FK(16)k(\351l\351ments)o(.)-246
234 y
SDict begin H.S end
 -246 234 a -246 234 a
SDict begin 12 H.A end
 -246 234 a -246 234 a
SDict begin [/View [/XYZ H.V]/Dest (Item.159) cvn /DEST pdfmark end
 -246
234 a 0 TeXcolorgray -141 331 a FK(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)21 b FB(B)h FK(:)14 b(\253)g(au)j(moins)i
(l)o('un)f(des)g(deux)f(d\351s)h(tombe)g(sur)f(4)d(\273)j(s)m('\351cr)q
(it)h(sous)g(for)q(me)g(ensembliste)1303 514 y FB(B)k
FG(\306)1442 515 y FK({)1468 514 y(\(1,)8 b(4\);)g(\(2,)g(4\);)g(\(3,)g
(4\);)g(\(4,)g(1\);)g(\(4,)g(2\);)h(\(4,)f(3)q(\);)g(\(4,)g(4)q(\))2773
515 y(})-38 697 y(\(on)17 b(conser)q(ve)i(tous)f(les)g
(\351v\351nements)i(\351l\351mentair)o(es)f(o\371)f(appar)o(a\356t)g
(au)g(moins)g(un)g(4\).)-38 811 y(Il)f(y)f(a)i(7)f(cas)h(favor)o(ables)
g(\340)f FB(B)5 b FK(.)-246 844 y
SDict begin H.S end
 -246 844 a -246 844
a
SDict begin 12 H.A end
 -246 844 a -246 844 a
SDict begin [/View [/XYZ H.V]/Dest (Item.160) cvn /DEST pdfmark end
 -246 844 a 0 TeXcolorgray -141
940 a FK(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17 b(les)h(questions)h
(pr\351c\351dentes)o(,)h FB(P)8 b FK(\()p FB(B)f FK(\))14
b FG(\306)1446 907 y FI(7)p 1431 920 62 5 v 1431 969
a(16)1502 940 y FK(.)-246 1035 y
SDict begin H.S end
 -246 1035 a -246 1035
a
SDict begin 12 H.A end
 -246 1035 a -246 1035 a
SDict begin [/View [/XYZ H.V]/Dest (exo.63) cvn /DEST pdfmark end
 -246 1035 a -246 1054 a
SDict begin H.S end
 -246
1054 a -246 1054 a
SDict begin 12 H.A end
 -246 1054 a -246 1054 a
SDict begin [/View [/XYZ H.V]/Dest (Item.161) cvn /DEST pdfmark end
 -246 1054
a 0 TeXcolorgray 85 x FL(Ex)o(er)o(cice)g(63)p 0 TeXcolorgray
0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray 43 w(L)-10
b('univers)19 b(est)895 1322 y FB(U)j FG(\306)1047 1323
y FK({)1073 1322 y(RRR)q(;)8 b(RRB)q(;)g(RBR)q(;)g(RBB)q(;)g(BRR)q(;)g
(BRB)q(;)g(BBR)q(;)g(BBB)r(;)g(VRR)q(;)g(VRB)q(;)g(VBR)q(;)g(VBB)3155
1323 y(})3189 1322 y(.)-38 1504 y(Il)17 b(compor)q(te)g(3)10
b FG(\243)g FK(2)g FG(\243)g FK(2)17 b FG(\306)d FK(12)k
(\351l\351ments)p 0 0 1 TeXcolorrgb 1162 1504 a
SDict begin H.S end
 1162
1504 a -30 x FI(6)1200 1504 y
SDict begin 12 H.L end
 1200 1504 a 1200 1504 a
SDict begin [/Subtype /Link/Dest (Hfootnote.6) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end

1200 1504 a 0 TeXcolorgray FK(.)-246 1536 y
SDict begin H.S end
 -246 1536
a -246 1536 a
SDict begin 12 H.A end
 -246 1536 a -246 1536 a
SDict begin [/View [/XYZ H.V]/Dest (Item.162) cvn /DEST pdfmark end
 -246 1536 a 0 TeXcolorgray
-141 1633 a FK(2.)p 0 TeXcolorgray 43 w(Le)g(contr)o(air)o(e)f(de)1249
1733 y FB(A)g FK(:)e(\253)f(la)j(tenue)h(du)f(footballeur)i(compor)q
(te)f(du)f(bleu)d(\273)-38 1882 y(est)p 1114 2029 57
5 v 1120 2096 a FB(A)j FK(:)e(\253)f(la)j(tenue)h(du)f(footballeur)i
FL(ne)d FK(compor)q(te)i FL(pas)f FK(de)g(bleu)d(\273.)-38
2246 y(Il)j(s)m('\351cr)q(it)g(sous)h(for)q(me)g(ensembliste)p
1796 2279 V 1802 2345 a FB(A)f FG(\306)1937 2346 y FK({)1963
2345 y(RRR;)8 b(VRR)2285 2346 y(})-38 2495 y(\226)17
b(il)h(n)-6 b('y)17 b(a)g(que)h(deux)g(tenues)h(qui)f(n)-6
b('ont)18 b(pas)g(de)f(bleu)9 b(!)-38 2676 y(On)17 b(en)h(d\351duit)f
FB(P)493 2589 y Ft(\263)p 525 2610 V 531 2676 a FB(A)582
2589 y Ft(\264)628 2676 y FG(\306)722 2644 y FI(2)p 707
2657 62 5 v 707 2705 a(12)778 2676 y FK(,)h(puis)1426
2839 y FB(P)8 b FK(\()e FB(A)s FK(\))13 b FG(\306)h FK(1)c
FG(\241)g FB(P)1852 2752 y Ft(\263)p 1885 2773 57 5 v
1891 2839 a FB(A)1942 2752 y Ft(\264)1987 2839 y FG(\306)2066
2783 y FK(12)p 2066 2820 82 5 v 2066 2896 a(12)2168 2839
y FG(\241)2263 2783 y FK(2)p 2243 2820 V 2243 2896 a(12)2348
2839 y FG(\306)2427 2783 y FK(10)p 2427 2820 V 2427 2896
a(12)2532 2839 y FG(\306)2611 2783 y FK(5)p 2611 2820
41 5 v 2611 2896 a(6)2662 2839 y(.)-246 2963 y
SDict begin H.S end
 -246 2963
a -246 2963 a
SDict begin 12 H.A end
 -246 2963 a -246 2963 a
SDict begin [/View [/XYZ H.V]/Dest (exo.64) cvn /DEST pdfmark end
 -246 2963 a -246
2982 a
SDict begin H.S end
 -246 2982 a -246 2982 a
SDict begin 12 H.A end
 -246 2982 a -246 2982
a
SDict begin [/View [/XYZ H.V]/Dest (Item.163) cvn /DEST pdfmark end
 -246 2982 a 0 TeXcolorgray 80 x FL(Ex)o(er)o(cice)k(64)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(Il)25 b(y)h(a)g(6)h(choix)f(possibles)i(pour)f(le)f(vainqueur)i
(de)e(la)g(course)o(,)g(puis)i(5)e(pour)h(le)f(deuxi\350me)i(\(puisqu)n
('il)g(est)f(diff\351r)o(ent)g(du)-38 3161 y(vainqueur\))9
b(;)18 b(et)g(en\002n)f(4)h(pour)g(le)f(troisi\350me)o(.)i(Donc)e(au)g
(total)1815 3344 y(6)10 b FG(\243)g FK(5)g FG(\243)g
FK(4)17 b FG(\306)d FK(120)-38 3527 y(podiums)19 b(diff\351r)o(ents)f
(possibles)o(.)-246 3558 y
SDict begin H.S end
 -246 3558 a -246 3558 a
SDict begin 12 H.A end
 -246
3558 a -246 3558 a
SDict begin [/View [/XYZ H.V]/Dest (Item.164) cvn /DEST pdfmark end
 -246 3558 a 0 TeXcolorgray -141 3655
a FK(2.)p 0 TeXcolorgray 43 w(I)o(maginons)g(que)f(les)i(chevaux)f
(soient)g(num\351rot\351s)h(de)e(1)h(\340)f(12)h(et)g(que)g(le)f
(classement)j(de)d(la)g(course)h(soit)p 0 TeXcolorgray
0 TeXcolorgray 1019 3799 a(1)1059 3775 y Fg(er)1122 3799
y FK(:)f(Cheval)h(n\2607)271 b(2)1838 3775 y Fg(e)1882
3799 y FK(:)17 b(Cheval)h(n\2604)271 b(3)2598 3775 y
Fg(e)2642 3799 y FK(:)17 b(Cheval)h(n\26010)-38 3942
y(Dans)f(ce)g(cas)o(,)h(le)f(tier)o(c\351)h(dans)f(l)o('or)o(dr)o(e)g
(est)h(\(7,)8 b(4,)g(10\))19 b(;)e(et)h(les)g(tier)o(c\351s)g(dans)f
(le)h(d\351sor)o(dr)o(e)e(sont)1263 4125 y(\(4,)8 b(7,)g(10\))20
b(;)25 b(\(4,)8 b(10,)g(7\))20 b(;)8 b(\(10,)g(7,)g(4\))20
b(;)8 b(\(10,)g(4,)g(7\))19 b(;)8 b(\(7,)g(10,)g(4\).)-38
4322 y(Il)17 b(y)f(a)i(5)f(cas)h(favor)o(ables)g(\340)f
FB(T)t FK(,)g(donc)1756 4457 y FB(P)8 b FK(\()p FB(T)k
FK(\))i FG(\306)2056 4400 y FK(5)p 2016 4437 122 5 v
2016 4514 a(120)2162 4457 y FG(\306)2261 4400 y FK(1)p
2241 4437 82 5 v 2241 4514 a(24)2332 4457 y(.)-246 4580
y
SDict begin H.S end
 -246 4580 a -246 4580 a
SDict begin 12 H.A end
 -246 4580 a -246 4580 a
SDict begin [/View [/XYZ H.V]/Dest (exo.65) cvn /DEST pdfmark end
 -246
4580 a -246 4599 a
SDict begin H.S end
 -246 4599 a -246 4599 a
SDict begin 12 H.A end
 -246 4599
a -246 4599 a
SDict begin [/View [/XYZ H.V]/Dest (Item.165) cvn /DEST pdfmark end
 -246 4599 a 0 TeXcolorgray 80 x FL(Ex)o(er)o(cice)g(65)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)j(r)o(aisonne)h(comme)h(dans)e(l)o('exer)o(cice)h
(pr\351c\351dent)g(:)g(il)g(y)f(a)g(8)10 b FG(\243)g
FK(7)g FG(\243)g FK(6)16 b FG(\306)e FK(336)19 b(podiums)f(possibles)o
(.)-246 4712 y
SDict begin H.S end
 -246 4712 a -246 4712 a
SDict begin 12 H.A end
 -246 4712 a -246
4712 a
SDict begin [/View [/XYZ H.V]/Dest (Item.166) cvn /DEST pdfmark end
 -246 4712 a 0 TeXcolorgray -141 4808 a FK(2.)p
0 TeXcolorgray 43 w(On)25 b(va)h(r)o(egar)o(der)e(l)o('\351v\351nement)
29 b(contr)o(air)o(e)c(et)h(r\351pondr)o(e)g(\340)f(la)h(question)i(:)d
(\253)16 b(C)o(ombien)27 b(y)e(a-t-il)i(de)e(podiums)i
FL(ne)e FK(compor)q(tant)i FL(aucun)-38 4907 y FK(Am\351r)q(icain)9
b(?)14 b(\273)-38 5022 y(C)o(omme)19 b(5)e(des)h(8)g(par)q(ticipants)g
(ne)g(sont)g(pas)g(Am\351r)q(icains)o(,)g(le)f(nombr)o(e)h(de)f
(podiums)h(sans)g(aucun)g(Am\351r)q(icain)f(est)h(5)10
b FG(\243)g FK(4)g FG(\243)g FK(3)17 b FG(\306)d FK(60.)-38
5186 y(On)j(r)o(evient)h(\340)f(la)h(question)h(initiale)g(:)e(il)h(r)o
(este)g(336)10 b FG(\241)g FK(60)17 b FG(\306)d FK(276)k(podiums)h
(avec)f(au)f(moins)i(un)e(Am\351r)q(icain.)-246 5269
y
SDict begin H.S end
 -246 5269 a -246 5269 a
SDict begin 12 H.A end
 -246 5269 a -246 5269 a
SDict begin [/View [/XYZ H.V]/Dest (exo.66) cvn /DEST pdfmark end
 -246
5269 a 0 TeXcolorgray -246 5239 1757 4 v -154 5316 a
Fv(6)q(.)p 0 TeXcolorgray -76 5316 a
SDict begin H.S end
 -76 5316 a -76 5316
a
SDict begin H.R end
 -76 5316 a -76 5316 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.6) cvn /DEST pdfmark
end
 -76 5316 a 0 TeXcolorgray Fv(L)-8
b('op\351r)o(ation)18 b(3)9 b Ff(\243)g Fv(2)g Ff(\243)g
Fv(2)18 b(vient)f(du)f(fait)h(qu)n('il)g(y)g(a)f(trois)g(couleurs)h(de)
g(maillot,)g(2)g(couleurs)h(de)e(short)h(et)g(2)g(couleurs)h(de)e
(chaussettes)o(.)h(On)f(pourr)o(ait)h(r)o(epr\351senter)g(la)f
(situation)-246 5395 y(avec)e(un)g(arbr)o(e)f(pour)h(\352tr)o(e)g
(s\373r)f(de)h(n)-5 b('oublier)13 b(aucune)i(tenue)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1909 5895 a FK(35)p 0 TeXcolorgray
eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.36) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FL(Ex)o(er)o(cice)14
b(66)p 0 TeXcolorgray 41 w FK(On)h(r)o(egroupe)f(la)h(corr)o(ection)g
(des)g(deux)g(questions)o(.)i(On)d(utilise)j(des)e(symboles)h
(diff\351r)o(ents)g(pour)f(chacun)g(des)g(\351v\351nements)o(,)k(mais)
-246 -63 y(un)f(seul)g(tableau)g(suf\002t)g(:)1030 219
y FG(~)152 b FB(A)17 b FK(:)e(\253)f(la)j(somme)h(des)g(deux)f(faces)h
(est)g(\351gale)g(\340)f(5)d(\273)j(;)1030 344 y FG(|)147
b FB(B)22 b FK(:)15 b(\253)f(exactement)k(un)g(des)f(deux)h(d\351s)f
(tombe)h(sur)g(4)c(\273)j(;)1030 468 y FG(})144 b FB(C)23
b FK(:)15 b(\253)f(on)j(tir)o(e)g(deux)g(num\351ros)i(impairs)14
b(\273.)p 0 TeXcolorgray 0 TeXcolorgray 1272 593 1357
4 v 1272 792 4 200 v 1325 762 a(D\351)j(1)1581 662 y(D\351)g(2)1276
792 y
 save /setgray { pop } def
 1276 792 a @beginspecial @setspecial
  0.99626401 0.99626401 scale 0.39998 setlinewidth  0 24 moveto 61.69995
0 lineto stroke
 
@endspecial
1276 792 a
 restore
 1276 792 a 1788 792 4 200 v 1888 714 a FK(1)p
2027 792 V 161 w(2)p 2189 792 V 140 w(3)p 2386 792 V
178 w(4)p 2625 792 V 1272 795 1357 4 v 1272 895 4 100
v 1511 865 a(1)p 1788 895 V 328 w FG(})p 2027 895 V 2189
895 V 321 w(})p 2386 895 V 121 w(~)g(|)p 2625 895 V 1272
898 1357 4 v 1272 998 4 100 v 1511 968 a FK(2)p 1788
998 V 2027 998 V 2189 998 V 708 w FG(~)p 2386 998 V 159
w(|)p 2625 998 V 1272 1001 1357 4 v 1272 1101 4 100 v
1511 1071 a FK(3)p 1788 1101 V 328 w FG(})p 2027 1101
V 142 w(~)p 2189 1101 V 120 w(})p 2386 1101 V 159 w(|)p
2625 1101 V 1272 1104 1357 4 v 1272 1204 4 100 v 1511
1174 a FK(4)p 1788 1204 V 290 w FG(~)g(|)p 2027 1204
V 104 w(|)p 2189 1204 V 120 w(|)p 2386 1204 V 2625 1204
V 1272 1207 1357 4 v -246 1355 a FK(Il)g(y)g(a)g(4)10
b FG(\243)g FK(4)15 b FG(\306)g FK(16)j(cases)g(dans)f(le)h(tableau.)g
(Il)f(y)f(a)i(4)p FG(~)p FK(,)g(6)p FG(|)g FK(et)g(4)p
FG(})g FK(dans)f(le)h(tableau,)g(donc)1025 1573 y FB(P)8
b FK(\()e FB(A)s FK(\))14 b FG(\306)1304 1517 y FK(4)p
1284 1554 82 5 v 1284 1630 a(16)1389 1573 y FG(\306)1468
1517 y FK(1)p 1468 1554 41 5 v 1468 1630 a(4)1519 1573
y(,)154 b FB(P)8 b FK(\()p FB(B)f FK(\))15 b FG(\306)1972
1517 y FK(6)p 1951 1554 82 5 v 1951 1630 a(16)2057 1573
y FG(\306)2136 1517 y FK(3)p 2136 1554 41 5 v 2136 1630
a(8)2186 1573 y(,)155 b FB(P)8 b FK(\()n FB(C)h FK(\))k
FG(\306)2640 1517 y FK(4)p 2620 1554 82 5 v 2620 1630
a(16)2725 1573 y FG(\306)2804 1517 y FK(1)p 2804 1554
41 5 v 2804 1630 a(4)2854 1573 y(.)-246 1713 y
SDict begin H.S end
 -246 1713
a -246 1713 a
SDict begin 12 H.A end
 -246 1713 a -246 1713 a
SDict begin [/View [/XYZ H.V]/Dest (exo.67) cvn /DEST pdfmark end
 -246 1713 a 0 TeXcolorgray
82 x FL(Ex)o(er)o(cice)h(67)p 0 TeXcolorgray 41 w FK(On)j(place)h(dans)
g(un)g(tableau)f(un)h(symbole)g(pour)g(chaque)g(\351v\351nement)i(:)
1036 1978 y FG(~)153 b FB(A)17 b FK(:)d(\253)g(la)j(F)o(r)o(ance)g
(joue)d(\273)k(;)1037 2102 y FG(|)146 b FB(B)23 b FK(:)14
b(\253)g(le)j(match)h(oppose)h(la)f(F)o(r)o(ance)f(\340)g(l)o
('Allemagne)d(\273)19 b(;)1036 2227 y FG(\304)145 b FB(C)23
b FK(:)14 b(\253)g(le)j(match)h(oppose)h(deux)f(pays)f(du)g(Benelux)d
(\273)q(.)p 0 TeXcolorgray 0 TeXcolorgray 1195 2351 1510
4 v 1195 2451 4 100 v 1424 2451 V 1481 2421 a(F)o(r)o(a)p
1646 2451 V 120 w(All)p 1868 2451 V 117 w(I)n(ta)p 2062
2451 V 103 w(Bel)p 2274 2451 V 103 w(PB)p 2472 2451 V
104 w(L)o(ux)p 2701 2451 V 1195 2454 1510 4 v 1195 2554
4 100 v 1256 2524 a(F)o(r)o(a)p 1424 2554 V 0 TeXcolorgray
1427 2554 219 100 v 0 TeXcolorgray 1646 2554 4 100 v
331 w FG(~|)p 1868 2554 V 120 w(~)p 2062 2554 V 144 w(~)p
2274 2554 V 146 w(~)p 2472 2554 V 155 w(~)p 2701 2554
V 1195 2557 1510 4 v 1195 2657 4 100 v 1266 2627 a FK(All)p
1424 2657 V 120 w FG(~|)p 1646 2657 V 0 TeXcolorgray
1649 2657 219 100 v 0 TeXcolorgray 1868 2657 4 100 v
2062 2657 V 2274 2657 V 2472 2657 V 2701 2657 V 1195
2660 1510 4 v 1195 2760 4 100 v 1266 2730 a FK(I)n(ta)p
1424 2760 V 150 w FG(~)p 1646 2760 V 1868 2760 V 0 TeXcolorgray
1871 2760 191 100 v 0 TeXcolorgray 2062 2760 4 100 v
2274 2760 V 2472 2760 V 2701 2760 V 1195 2763 1510 4
v 1195 2863 4 100 v 1257 2833 a FK(Bel)p 1424 2863 V
141 w FG(~)p 1646 2863 V 1868 2863 V 2062 2863 V 0 TeXcolorgray
2065 2863 210 100 v 0 TeXcolorgray 2274 2863 4 100 v
779 w(\304)p 2472 2863 V 155 w(\304)p 2701 2863 V 1195
2866 1510 4 v 1195 2966 4 100 v 1264 2936 a FK(PB)p 1424
2966 V 148 w FG(~)p 1646 2966 V 1868 2966 V 2062 2966
V 574 w(\304)p 2274 2966 V 0 TeXcolorgray 2277 2966 195
100 v 0 TeXcolorgray 2472 2966 4 100 v 360 w(\304)p 2701
2966 V 1195 2969 1510 4 v 1195 3069 4 100 v 1249 3039
a FK(L)o(ux)p 1424 3069 V 133 w FG(~)p 1646 3069 V 1868
3069 V 2062 3069 V 574 w(\304)p 2274 3069 V 146 w(\304)p
2472 3069 V 0 TeXcolorgray 2476 3069 226 100 v 0 TeXcolorgray
2701 3069 4 100 v 1195 3072 1510 4 v -246 3220 a Fu(")p
FK(Il)j(faut)h(ex)o(clur)o(e)g(la)g(diagonale)o(,)f(car)g(une)h
(\351quipe)g(ne)g(peut)h(jouer)f(contr)o(e)f(elle-m\352me)o(.)i(Il)e(n)
-6 b('y)17 b(a)g(donc)g(que)h(30)h(cases)o(.)-246 3370
y(D)o('apr\350s)e(le)h(tableau)g(:)1339 3503 y FB(P)8
b FK(\()e FB(A)s FK(\))14 b FG(\306)1598 3446 y FK(10)p
1598 3483 82 5 v 1598 3560 a(30)1703 3503 y FG(\306)1782
3446 y FK(1)p 1782 3483 41 5 v 1782 3560 a(3)1833 3503
y(,)154 b FB(P)8 b FK(\()p FB(B)f FK(\))15 b FG(\306)2285
3446 y FK(2)p 2265 3483 82 5 v 2265 3560 a(30)2370 3503
y FG(\306)2470 3446 y FK(1)p 2450 3483 V 2450 3560 a(15)2541
3503 y(.)-246 3725 y(Les)g(pays)f(du)g(Benelux)h(sont)g(la)f(Belgique)o
(,)h(les)g(P)m(ays-B)o(as)f(\(N)n(ederland\))f(et)h(le)h(L)o
(uxembourg,)f(d)n('o\371)h(les)f FG(\304)h FK(en)f(bas)g(\340)g(droite)
f(du)h(tableau.)h(On)f(obtient)-246 3824 y FB(P)8 b FK(\()n
FB(C)h FK(\))14 b FG(\306)29 3792 y FI(6)p 13 3805 62
5 v 13 3853 a(30)99 3824 y FG(\306)178 3792 y FI(1)p
178 3805 31 5 v 178 3853 a(5)219 3824 y FK(.)-246 3920
y
SDict begin H.S end
 -246 3920 a -246 3920 a
SDict begin 12 H.A end
 -246 3920 a -246 3920 a
SDict begin [/View [/XYZ H.V]/Dest (exo.68) cvn /DEST pdfmark end
 -246
3920 a 0 TeXcolorgray 104 x FL(Ex)o(er)o(cice)g(68)p
0 TeXcolorgray 41 w FK(On)j(place)h(dans)g(un)g(tableau)f(un)h(symbole)
g(pour)g(chaque)g(\351v\351nement)i(:)833 4206 y FG(~)153
b FB(A)17 b FK(:)d(\253)g(les)k(deux)g(jetons)g(choisis)h(sont)f
(identiques)c(\273)19 b(;)834 4331 y FG(|)147 b FB(B)22
b FK(:)14 b(\253)g(exactement)19 b(un)f(des)f(deux)h(jetons)h(r)o
(epr\351sente)f(un)g(visage)c(\273)j(;)p 0 TeXcolorgray
0 TeXcolorgray 1444 4580 1013 4 v 1444 4680 4 100 v 1614
4680 V 1667 4650 a FE(.)p 1783 4680 V 103 w(G)-65 b(#)p
1951 4680 V 109 w(\013)p 2113 4680 V 109 w(,)p 2283 4680
V 103 w(/)p 2453 4680 V 1444 4683 1013 4 v 1444 4783
4 100 v 1497 4753 a(.)p 1614 4783 V 106 w FG(~)p 1783
4783 V 1951 4783 V 2113 4783 V 441 w(|)p 2283 4783 V
111 w(|)p 2453 4783 V 1444 4786 1013 4 v 1444 4885 4
100 v 1498 4856 a FE(G)g(#)p 1614 4885 V 1783 4885 V
276 w FG(~)p 1951 4885 V 2113 4885 V 272 w(|)p 2283 4885
V 111 w(|)p 2453 4885 V 1444 4889 1013 4 v 1444 4988
4 100 v 1507 4959 a FE(\013)p 1614 4988 V 1783 4988 V
1951 4988 V 451 w FG(~)p 2113 4988 V 107 w(|)p 2283 4988
V 111 w(|)p 2453 4988 V 1444 4992 1013 4 v 1444 5091
4 100 v 1497 5061 a FE(,)p 1614 5091 V 106 w FG(|)p 1783
5091 V 110 w(|)p 1951 5091 V 106 w(|)p 2113 5091 V 107
w(~)p 2283 5091 V 2453 5091 V 1444 5095 1013 4 v 1444
5194 4 100 v 1497 5164 a FE(/)p 1614 5194 V 106 w FG(|)p
1783 5194 V 110 w(|)p 1951 5194 V 106 w(|)p 2113 5194
V 2283 5194 V 277 w(~)p 2453 5194 V 1444 5198 1013 4
v -246 5346 a FK(On)18 b(obtient)g(:)1431 5463 y FB(P)8
b FK(\()e FB(A)s FK(\))14 b FG(\306)1710 5407 y FK(5)p
1690 5444 82 5 v 1690 5520 a(25)1795 5463 y FG(\306)1874
5407 y FK(1)p 1874 5444 41 5 v 1874 5520 a(5)1925 5463
y(,)154 b FB(P)8 b FK(\()p FB(B)f FK(\))15 b FG(\306)2357
5407 y FK(12)p 2357 5444 82 5 v 2357 5520 a(25)2448 5463
y(.)-246 5587 y
SDict begin H.S end
 -246 5587 a -246 5587 a
SDict begin 12 H.A end
 -246 5587 a -246
5587 a
SDict begin [/View [/XYZ H.V]/Dest (exo.69) cvn /DEST pdfmark end
 -246 5587 a 0 TeXcolorgray 1909 5895 a FK(36)p
0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.37) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FL(Ex)o(er)o(cice)14
b(69)p 0 TeXcolorgray 41 w FK(P)n(our)j(simpli\002er)i(et)f(sans)g(r)q
(ien)f(enlever)h(\340)f(la)h(g\351n\351r)o(alit\351)h(du)e(r)o
(aisonnement,)j(on)d(suppose)i(que)f(les)h(questions)g(sont)f
(num\351rot\351es)-246 -63 y(de)f(1)h(\340)f(6)h(en)g(histoir)o(e)g(et)
f(de)h(1)f(\340)g(5)h(en)g(g\351ogr)o(aphie)o(,)g(et)f(que)h(le)g
(candidat)f(conna\356t)h(les)g(questions)h(n\2601,)f(2,)g(3)g(en)g
(histoir)o(e)o(,)g(n\2601)f(et)h(2)g(en)f(g\351ogr)o(aphie)o(.)-246
37 y(Dans)g(le)h(tableau)g(ci-dessous)o(,)h(les)f(questions)h(connues)g
(sont)f(\351cr)q(ites)f(en)h(bleu,)g(les)g(questions)h(inconnues)g
(sont)f(\351cr)q(ites)g(en)g(rouge)o(.)-246 184 y(On)g(a)f(color)q
(i\351)g(les)h(cases)g(de)f(trois)g(couleurs)i(:)p 0
TeXcolorgray -76 283 a(\225)p 0 TeXcolorgray 42 w(en)e(ver)q(t)h(:)f
(le)h(candidat)f(conna\356t)h(les)g(deux)f(questions)9
b(;)p 0 TeXcolorgray -76 383 a(\225)p 0 TeXcolorgray
42 w(en)17 b(or)o(ange)h(:)f(le)h(candidat)f(conna\356t)h(une)g(seule)h
(des)e(deux)h(questions)9 b(;)p 0 TeXcolorgray -76 483
a(\225)p 0 TeXcolorgray 42 w(en)17 b(magenta)h(:)g(le)g(candidat)f(ne)g
(conna\356t)h(aucune)g(des)g(deux)f(questions)o(.)p 0
TeXcolorgray 0 TeXcolorgray 1275 590 1350 4 v 1275 790
4 200 v 1328 759 a(G\351o)1569 660 y(H)o(ist)1279 790
y
 save /setgray { pop } def
 1279 790 a @beginspecial @setspecial
  0.99626401 0.99626401 scale 0.39998 setlinewidth  0 24 moveto 58.03992
0 lineto stroke
 
@endspecial 1279
790 a
 restore
 1279 790 a 1761 790 4 200 v 0 0 1 TeXcolorrgb 1814
712 a FK(1)p 0 TeXcolorgray 1904 790 V 0 0 1 TeXcolorrgb
103 w(2)p 0 TeXcolorgray 2047 790 V 0 0 1 TeXcolorrgb
104 w(3)p 0 TeXcolorgray 2191 790 V 1 0 0 TeXcolorrgb
103 w(4)p 0 TeXcolorgray 2334 790 V 1 0 0 TeXcolorrgb
104 w(5)p 0 TeXcolorgray 2478 790 V 1 0 0 TeXcolorrgb
103 w(6)p 0 TeXcolorgray 2621 790 V 1275 793 1350 4 v
1275 893 4 100 v 0 0 1 TeXcolorrgb 1499 863 a(1)p 0 TeXcolorgray
1761 893 V 0 1 0 TeXcolorrgb 1764 893 141 100 v 0 TeXcolorgray
1904 893 4 100 v 0 1 0 TeXcolorrgb 1907 893 141 100 v
0 TeXcolorgray 2047 893 4 100 v 0 1 0 TeXcolorrgb 2051
893 141 100 v 0 TeXcolorgray 2191 893 4 100 v 1 0.5 0
TeXcolorrgb 2194 893 141 100 v 0 TeXcolorgray 2334 893
4 100 v 1 0.5 0 TeXcolorrgb 2338 893 141 100 v 0 TeXcolorgray
2478 893 4 100 v 1 0.5 0 TeXcolorrgb 2481 893 141 100
v 0 TeXcolorgray 2621 893 4 100 v 1275 896 1350 4 v 1275
996 4 100 v 0 0 1 TeXcolorrgb 1499 966 a(2)p 0 TeXcolorgray
1761 996 V 0 1 0 TeXcolorrgb 1764 996 141 100 v 0 TeXcolorgray
1904 996 4 100 v 0 1 0 TeXcolorrgb 1907 996 141 100 v
0 TeXcolorgray 2047 996 4 100 v 0 1 0 TeXcolorrgb 2051
996 141 100 v 0 TeXcolorgray 2191 996 4 100 v 1 0.5 0
TeXcolorrgb 2194 996 141 100 v 0 TeXcolorgray 2334 996
4 100 v 1 0.5 0 TeXcolorrgb 2338 996 141 100 v 0 TeXcolorgray
2478 996 4 100 v 1 0.5 0 TeXcolorrgb 2481 996 141 100
v 0 TeXcolorgray 2621 996 4 100 v 1275 999 1350 4 v 1275
1098 4 100 v 1 0 0 TeXcolorrgb 1499 1069 a(3)p 0 TeXcolorgray
1761 1098 V 1 0.5 0 TeXcolorrgb 1764 1098 141 100 v 0
TeXcolorgray 1904 1098 4 100 v 1 0.5 0 TeXcolorrgb 1907
1098 141 100 v 0 TeXcolorgray 2047 1098 4 100 v 1 0.5 0
TeXcolorrgb 2051 1098 141 100 v 0 TeXcolorgray 2191 1098
4 100 v 0 1 0 0 TeXcolorcmyk 2194 1098 141 100 v 0 TeXcolorgray
2334 1098 4 100 v 0 1 0 0 TeXcolorcmyk 2338 1098 141
100 v 0 TeXcolorgray 2478 1098 4 100 v 0 1 0 0 TeXcolorcmyk
2481 1098 141 100 v 0 TeXcolorgray 2621 1098 4 100 v
1275 1102 1350 4 v 1275 1201 4 100 v 1 0 0 TeXcolorrgb
1499 1172 a(4)p 0 TeXcolorgray 1761 1201 V 1 0.5 0 TeXcolorrgb
1764 1201 141 100 v 0 TeXcolorgray 1904 1201 4 100 v
1 0.5 0 TeXcolorrgb 1907 1201 141 100 v 0 TeXcolorgray
2047 1201 4 100 v 1 0.5 0 TeXcolorrgb 2051 1201 141 100
v 0 TeXcolorgray 2191 1201 4 100 v 0 1 0 0 TeXcolorcmyk
2194 1201 141 100 v 0 TeXcolorgray 2334 1201 4 100 v
0 1 0 0 TeXcolorcmyk 2338 1201 141 100 v 0 TeXcolorgray
2478 1201 4 100 v 0 1 0 0 TeXcolorcmyk 2481 1201 141
100 v 0 TeXcolorgray 2621 1201 4 100 v 1275 1205 1350
4 v 1275 1304 4 100 v 1 0 0 TeXcolorrgb 1499 1274 a(5)p
0 TeXcolorgray 1761 1304 V 1 0.5 0 TeXcolorrgb 1764 1304
141 100 v 0 TeXcolorgray 1904 1304 4 100 v 1 0.5 0 TeXcolorrgb
1907 1304 141 100 v 0 TeXcolorgray 2047 1304 4 100 v
1 0.5 0 TeXcolorrgb 2051 1304 141 100 v 0 TeXcolorgray
2191 1304 4 100 v 0 1 0 0 TeXcolorcmyk 2194 1304 141
100 v 0 TeXcolorgray 2334 1304 4 100 v 0 1 0 0 TeXcolorcmyk
2338 1304 141 100 v 0 TeXcolorgray 2478 1304 4 100 v
0 1 0 0 TeXcolorcmyk 2481 1304 141 100 v 0 TeXcolorgray
2621 1304 4 100 v 1275 1308 1350 4 v -246 1450 a(C)o(onclusion)j(:)d
(il)h(y)f(a)g(6)10 b FG(\243)g FK(5)15 b FG(\306)f FK(30)19
b(cases)e(au)h(total,)g(6)g(ver)q(tes)g(et)f(15)h(or)o(anges)o(,)h
(donc)e(:)p 0 TeXcolorgray -76 1550 a(\225)p 0 TeXcolorgray
42 w(la)g(probabilit\351)h(que)g(le)f(candidat)g(connaisse)i(les)f
(deux)g(questions)h(est)2176 1517 y FI(6)p 2161 1530
62 5 v 2161 1579 a(30)2247 1550 y FG(\306)2326 1517 y
FI(1)p 2326 1530 31 5 v 2326 1579 a(5)2384 1550 y FK(;)p
0 TeXcolorgray -76 1659 a(\225)p 0 TeXcolorgray 42 w(la)e
(probabilit\351)h(que)g(le)f(candidat)g(connaisse)i(une)f(seule)h(des)e
(deux)h(questions)h(est)2532 1626 y FI(15)p 2532 1639
62 5 v 2532 1687 a(30)2618 1659 y FG(\306)2697 1626 y
FI(1)p 2697 1639 31 5 v 2697 1687 a(2)2738 1659 y FK(.)-246
1752 y
SDict begin H.S end
 -246 1752 a -246 1752 a
SDict begin 12 H.A end
 -246 1752 a -246 1752
a
SDict begin [/View [/XYZ H.V]/Dest (exo.70) cvn /DEST pdfmark end
 -246 1752 a -246 1770 a
SDict begin H.S end
 -246 1770 a -246 1770 a
SDict begin 12 H.A end
 -246
1770 a -246 1770 a
SDict begin [/View [/XYZ H.V]/Dest (Item.167) cvn /DEST pdfmark end
 -246 1770 a 0 TeXcolorgray 85 x FL(Ex)o(er)o(cice)14
b(70)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g(de)f(l)o
('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 901 1938 2305 4 v 901 2037
4 100 v 1477 2037 V 1530 2007 a(VT)q(T)p 2052 2037 V
2103 1991 149 4 v 432 w(VT)q(T)p 2628 2037 4 100 v 433
w(T)-8 b(otal)p 3203 2037 V 901 2041 2305 4 v 901 2140
4 100 v 954 2110 a(Escalade)p 1477 2140 V 273 w(3)p 2052
2140 V 535 w(7)p 2628 2140 V 536 w(10)p 3203 2140 V 901
2144 2305 4 v 901 2243 4 100 v 952 2197 84 4 v 954 2213
a(Es)p 1031 2197 82 4 v(ca)p 1109 2197 151 4 v(lade)p
1477 2243 4 100 v 273 w(13)p 2052 2243 V 495 w(9)p 2628
2243 V 536 w(22)p 3203 2243 V 901 2247 2305 4 v 901 2346
4 100 v 954 2316 a(T)g(otal)p 1477 2346 V 406 w(16)p
2052 2346 V 495 w(16)p 2628 2346 V 496 w(32)p 3203 2346
V 901 2350 2305 4 v -38 2517 a FL(R)o(emarque)16 b(:)k
FK(on)h(sait)f(qu)n('il)h(y)f(a)g(autant)g(d)n('\351l\350ves)i(qui)e
(pr)o(atiquent)i(le)f(VT)q(T)g(que)g(d)n('\351l\350ves)h(qui)e(ne)h(le)
f(pr)o(atiquent)i(pas)o(,)f(donc)f(16)h(\351l\350ves)g(le)-38
2616 y(pr)o(atiquent)e(et)f(16)g(ne)g(le)f(pr)o(atiquent)j(pas)o(.)-246
2647 y
SDict begin H.S end
 -246 2647 a -246 2647 a
SDict begin 12 H.A end
 -246 2647 a -246 2647
a
SDict begin [/View [/XYZ H.V]/Dest (Item.168) cvn /DEST pdfmark end
 -246 2647 a 0 TeXcolorgray -141 2743 a FK(2.)p 0 TeXcolorgray
43 w(P)m(ar)d(lectur)o(e)h(du)f(tableau)h(:)f FB(P)8
b FK(\()e FB(A)s FK(\))14 b FG(\306)1044 2710 y FI(3)p
1029 2723 62 5 v 1029 2772 a(32)1117 2743 y FK(et)k FB(P)8
b FK(\()p FB(B)f FK(\))15 b FG(\306)1474 2710 y FI(9)p
1458 2723 V 1458 2772 a(32)1530 2743 y FK(.)-38 2904
y(Le)g(calcul)f(du)g(nombr)o(e)h(de)f(cas)g(favor)o(ables)h(\340)d
FB(C)23 b FK(est)15 b(moins)g(\351vident)h(et)e(peut)i(\352tr)o(e)e
(men\351)h(de)f(plusieurs)i(fa\347ons)f(diff\351r)o(entes)o(.)g(P)m(ar)
f(exemple)i(:)p 0 TeXcolorgray 7 3017 a(\225)p 0 TeXcolorgray
42 w(ajouter)25 b(ceux)h(qui)f(font)h(du)f(VT)q(T)h(\340)f(ceux)g(qui)g
(font)h(de)f(l)o('escalade)o(,)g(puis)h(r)o(etr)o(ancher)f(les)h
(\351l\350ves)g(qui)g(pr)o(atiquent)g(les)g(deux)f(spor)q(ts)80
3117 y(\(sinon)18 b(ils)g(sont)g(compt\351s)h(deux)e(fois\))h(:)g(16)10
b FG(\305)g FK(10)g FG(\241)g FK(3)17 b FG(\306)d FK(23.)p
0 TeXcolorgray 7 3216 a(\225)p 0 TeXcolorgray 42 w(ajouter)g(ceux)g
(qui)g(ne)g(font)g(que)g(du)g(VT)q(T)-8 b(,)14 b(ceux)g(qui)g(ne)g
(font)g(que)g(de)g(l)o('escalade)o(,)g(et)g(ceux)g(qui)g(pr)o(atiquent)
g(les)g(deux)g(spor)q(ts)g(:)g(13)r FG(\305)q FK(7)r
FG(\305)q FK(3)21 b FG(\306)80 3316 y FK(23.)p 0 TeXcolorgray
7 3416 a(\225)p 0 TeXcolorgray 42 w(r)o(emarquer)c(que)f
FB(C)26 b FK(est)18 b(le)f(contr)o(air)o(e)h(de)f FB(B)25
b FK(et)18 b(donc)f(fair)o(e)g(le)h(calcul)f(:)h(32)10
b FG(\241)g FK(9)16 b FG(\306)e FK(23.)p 0 TeXcolorgray
7 3515 a(\225)p 0 TeXcolorgray 42 w(etc)o(.)-38 3629
y(Dans)j(tous)h(les)g(cas)f(on)h(obtient)g FB(P)8 b FK(\()n
FB(C)h FK(\))k FG(\306)1201 3596 y FI(23)p 1201 3609
V 1201 3657 a(32)1272 3629 y FK(.)-246 3722 y
SDict begin H.S end
 -246 3722
a -246 3722 a
SDict begin 12 H.A end
 -246 3722 a -246 3722 a
SDict begin [/View [/XYZ H.V]/Dest (exo.71) cvn /DEST pdfmark end
 -246 3722 a -246
3740 a
SDict begin H.S end
 -246 3740 a -246 3740 a
SDict begin 12 H.A end
 -246 3740 a -246 3740
a
SDict begin [/View [/XYZ H.V]/Dest (Item.169) cvn /DEST pdfmark end
 -246 3740 a 0 TeXcolorgray 84 x FL(Ex)o(er)o(cice)h(71)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compl\351ter)h(le)g(tableau,)g(on)g(calcule)g(:)p
0 TeXcolorgray 7 3923 a(\225)p 0 TeXcolorgray 42 w(5\045)f(de)h(10)12
b(000)20 b(valent)e(500)9 b(;)p 0 TeXcolorgray 7 4023
a(\225)p 0 TeXcolorgray 42 w(10)f(000)i FG(\241)g FK(500)18
b FG(\306)d FK(9)8 b(500)h(;)p 0 TeXcolorgray 7 4122
a(\225)p 0 TeXcolorgray 42 w(4\045)17 b(de)h(9)12 b(500)19
b(valent)f(380)9 b(;)p 0 TeXcolorgray 7 4222 a(\225)p
0 TeXcolorgray 42 w(on)17 b(compl\350te)i(le)f(r)o(este)g(du)f(tableau)
h(avec)f(des)h(additions/soustr)o(actions)o(.)p 0 TeXcolorgray
0 TeXcolorgray 980 4305 2149 4 v 980 4405 4 100 v 1477
4405 V 1530 4375 a(Animaux)g(sains)p 2085 4405 V 104
w(Animaux)g(malades)p 2807 4405 V 126 w(T)-8 b(otal)p
3125 4405 V 980 4408 2149 4 v 980 4508 4 100 v 1043 4478
a(T)g(est)18 b(positif)p 1477 4508 V 307 w(380)p 2085
4508 V 545 w(500)p 2807 4508 V 400 w(880)p 3125 4508
V 980 4511 2149 4 v 980 4611 4 100 v 1033 4581 a(T)-8
b(est)18 b(n\351gatif)p 1477 4611 V 270 w(9)12 b(120)p
2085 4611 V 559 w(0)p 2807 4611 V 413 w(9)g(120)p 3125
4611 V 980 4614 2149 4 v 980 4714 4 100 v 1144 4684 a(T)-8
b(otal)p 1477 4714 V 382 w(9)12 b(500)p 2085 4714 V 519
w(500)p 2807 4714 V 353 w(10)g(000)p 3125 4714 V 980
4717 2149 4 v -246 4758 a
SDict begin H.S end
 -246 4758 a -246 4758 a
SDict begin 12 H.A end
 -246
4758 a -246 4758 a
SDict begin [/View [/XYZ H.V]/Dest (Item.170) cvn /DEST pdfmark end
 -246 4758 a -246 4758 a
SDict begin H.S end
 -246 4758
a -246 4758 a
SDict begin 12 H.A end
 -246 4758 a -246 4758 a
SDict begin [/View [/XYZ H.V]/Dest (Item.171) cvn /DEST pdfmark end
 -246 4758 a 0 TeXcolorgray
-141 4887 a FK(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 41 w FB(P)c FK(\()r FB(M)f FK(\))14
b FG(\306)471 4831 y FK(500)p 426 4868 211 5 v 426 4944
a(10)8 b(000)661 4887 y FG(\306)14 b FK(0,)8 b(05)19
b(\(c)n('est)f(le)g(5)g(\045)f(d\351j\340)g(donn\351)h(par)f(l)o
('\351nonc\351\).)145 5074 y FB(P)8 b FK(\()p FB(T)k
FK(\))i FG(\306)449 5017 y FK(880)p 405 5054 V 405 5130
a(10)8 b(000)640 5074 y FG(\306)14 b FK(0,)8 b(088.)-246
5145 y
SDict begin H.S end
 -246 5145 a -246 5145 a
SDict begin 12 H.A end
 -246 5145 a -246 5145
a
SDict begin [/View [/XYZ H.V]/Dest (Item.172) cvn /DEST pdfmark end
 -246 5145 a 0 TeXcolorgray 4 5223 a FK(\(b\))p 0 TeXcolorgray
41 w(500)24 b(des)e(880)i(animaux)g(ayant)f(un)g(test)g(positif)i(sont)
e(malades)o(,)h(donc)e(la)h(probabilit\351)g(qu)n('un)h(animal)f(ayant)
g(un)g(test)g(positif)i(soit)145 5323 y(malade)17 b(est)544
5290 y FI(500)p 544 5303 93 5 v 544 5352 a(880)661 5323
y FG(\274)d FK(57\045.)-246 5366 y
SDict begin H.S end
 -246 5366 a -246 5366
a
SDict begin 12 H.A end
 -246 5366 a -246 5366 a
SDict begin [/View [/XYZ H.V]/Dest (Item.173) cvn /DEST pdfmark end
 -246 5366 a 0 TeXcolorgray
12 5450 a FK(\(c\))p 0 TeXcolorgray 41 w(T)-8 b(ous)18
b(les)g(animaux)h(malades)f(ont)g(un)f(test)i(positif,)g(donc)e(la)g
(probabilit\351)h(qu)n('un)g(animal)g(malade)g(ait)g(un)g(test)g
(positif)h(est)f(1.)-246 5532 y
SDict begin H.S end
 -246 5532 a -246 5532
a
SDict begin 12 H.A end
 -246 5532 a -246 5532 a
SDict begin [/View [/XYZ H.V]/Dest (exo.72) cvn /DEST pdfmark end
 -246 5532 a -246 5550 a
SDict begin H.S end
 -246
5550 a -246 5550 a
SDict begin 12 H.A end
 -246 5550 a -246 5550 a
SDict begin [/View [/XYZ H.V]/Dest (Item.174) cvn /DEST pdfmark end
 -246 5550
a 0 TeXcolorgray 96 x FL(Ex)o(er)o(cice)c(72)p 0 TeXcolorgray
0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)
g(donn\351es)g(de)f(l)o('\351nonc\351)i(par)f(un)f(tableau)h(d)n
('effectifs)i(:)p 0 TeXcolorgray 1909 5895 a(37)p 0 TeXcolorgray
eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.38) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 370 -242
3368 4 v 370 -143 4 100 v 1300 -143 V 1353 -173 a FK(A)o(bonn\351s)17
b(au)h(soir)p 2111 -143 V 257 w(P)m(as)g(abonn\351s)g(au)f(soir)p
2923 -143 V 132 w(T)-8 b(otal)p 3734 -143 V 370 -139
3368 4 v 370 -40 4 100 v 423 -70 a(A)o(bonn\351s)18 b(au)f(matin)p
1300 -40 V 300 w(50)p 2111 -40 V 731 w(20)p 2923 -40
V 732 w(70)p 3734 -40 V 370 -36 3368 4 v 370 63 4 100
v 423 33 a(P)m(as)g(abonn\351s)h(au)g(matin)p 1300 63
V 174 w(50)p 2111 63 V 731 w(160)p 2923 63 V 692 w(210)p
3734 63 V 370 66 3368 4 v 370 166 4 100 v 423 136 a(T)-8
b(otal)p 1300 166 V 760 w(100)p 2111 166 V 691 w(180)p
2923 166 V 692 w(280)p 3734 166 V 370 169 3368 4 v -246
207 a
SDict begin H.S end
 -246 207 a -246 207 a
SDict begin 12 H.A end
 -246 207 a -246 207 a
SDict begin [/View [/XYZ H.V]/Dest (Item.175) cvn /DEST pdfmark end
 -246
207 a -246 207 a
SDict begin H.S end
 -246 207 a -246 207 a
SDict begin 12 H.A end
 -246 207 a -246
207 a
SDict begin [/View [/XYZ H.V]/Dest (Item.176) cvn /DEST pdfmark end
 -246 207 a 0 TeXcolorgray -141 317 a FK(2.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w FB(P)8 b FK(\()p FB(S)d FK(\))13 b FG(\306)392 285
y FI(100)p 392 298 93 5 v 392 346 a(280)640 317 y FB(P)703
230 y Ft(\263)p 735 251 80 5 v 737 317 a FB(M)815 230
y Ft(\264)861 317 y FG(\306)940 285 y FI(210)p 940 298
93 5 v 940 346 a(280)1042 317 y FK(.)-246 377 y
SDict begin H.S end
 -246
377 a -246 377 a
SDict begin 12 H.A end
 -246 377 a -246 377 a
SDict begin [/View [/XYZ H.V]/Dest (Item.177) cvn /DEST pdfmark end
 -246 377 a 0 TeXcolorgray
4 455 a FK(\(b\))p 0 TeXcolorgray 41 w(La)k(probabilit\351)h(que)g(le)f
(pensionnair)o(e)i(soit)f(abonn\351)g(aux)f(deux)h(jour)q(naux)g(est)
1864 682 y FB(P)1927 683 y FK(\()1954 682 y FB(S)d FG(\\)d
FB(M)2154 683 y FK(\))2195 682 y FG(\306)2295 626 y FK(50)p
2275 663 122 5 v 2275 739 a(280)2406 682 y(.)-246 782
y
SDict begin H.S end
 -246 782 a -246 782 a
SDict begin 12 H.A end
 -246 782 a -246 782 a
SDict begin [/View [/XYZ H.V]/Dest (Item.178) cvn /DEST pdfmark end
 -246 782
a 0 TeXcolorgray 12 874 a FK(\(c\))p 0 TeXcolorgray 41
w(On)17 b(choisit)h(au)g(hasar)o(d)e(un)i(pensionnair)o(e)h(abonn\351)e
(au)h FB(Matin)p FK(.)f(La)h(probabilit\351)g(qu)n('il)g(soit)g(aussi)g
(abonn\351)g(au)f FB(Soir)j FK(est)3760 841 y FI(50)p
3760 854 62 5 v 3760 903 a(70)3832 874 y FK(.)-246 966
y
SDict begin H.S end
 -246 966 a -246 966 a
SDict begin 12 H.A end
 -246 966 a -246 966 a
SDict begin [/View [/XYZ H.V]/Dest (exo.73) cvn /DEST pdfmark end
 -246 966
a -246 983 a
SDict begin H.S end
 -246 983 a -246 983 a
SDict begin 12 H.A end
 -246 983 a -246 983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.179) cvn /DEST pdfmark end
 -246 983 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(73)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(Les)k(nombr)o(es)f(pairs)h(sont)g(2,)g(4,)g(6,)g(.)10
b(.)g(.,)19 b(100.)g(Il)e(y)f(en)i(a)f(50,)i(donc)1752
1270 y FB(P)8 b FK(\()e FB(A)s FK(\))14 b FG(\306)2031
1214 y FK(50)p 2011 1251 122 5 v 2011 1327 a(100)2157
1270 y FG(\306)g FK(0,)8 b(5.)-38 1475 y(Les)18 b(multiples)i(de)d(5)h
(sont)1243 1575 y(5)d FG(\306)f FK(5)c FG(\243)p 1 0 0
TeXcolorrgb 10 w FK(1)p 0 TeXcolorgray 1 w(,)26 b(10)15
b FG(\306)f FK(5)c FG(\243)p 1 0 0 TeXcolorrgb 10 w FK(2)p
0 TeXcolorgray 1 w(,)26 b(15)15 b FG(\306)f FK(5)c FG(\243)p
1 0 0 TeXcolorrgb 10 w FK(3)p 0 TeXcolorgray 1 w(,)26
b FG(\242)8 b(\242)g(\242)17 b FK(,)26 b(100)16 b FG(\306)e
FK(5)c FG(\243)p 1 0 0 TeXcolorrgb 10 w FK(20)p 0 TeXcolorgray
2 w(.)-38 1717 y(Il)17 b(y)f(en)i(a)f(20,)i(donc)1753
1851 y FB(P)8 b FK(\()p FB(B)f FK(\))14 b FG(\306)2031
1795 y FK(20)p 2010 1832 V 2010 1908 a(100)2156 1851
y FG(\306)g FK(0,)8 b(2.)-246 1951 y
SDict begin H.S end
 -246 1951 a -246
1951 a
SDict begin 12 H.A end
 -246 1951 a -246 1951 a
SDict begin [/View [/XYZ H.V]/Dest (Item.180) cvn /DEST pdfmark end
 -246 1951 a 0 TeXcolorgray
-141 2028 a FK(2.)p 0 TeXcolorgray 43 w(L)-10 b('\351v\351nement)28
b FB(A)14 b FG(\\)d FB(B)25 b FK(s)m('\351cr)q(it)18
b(\253)c(le)19 b(nombr)o(e)f(est)h(pair)g(et)g(multiple)i(de)d(5)c
(\273,)19 b(ou)f(de)g(fa\347on)h(plus)h(simple)g(\(et)e(plus)i
(explicite\))g(\253)14 b(le)19 b(nombr)o(e)f(est)-38
2128 y(multiple)i(de)d(10)d(\273.)-246 2157 y
SDict begin H.S end
 -246 2157
a -246 2157 a
SDict begin 12 H.A end
 -246 2157 a -246 2157 a
SDict begin [/View [/XYZ H.V]/Dest (Item.181) cvn /DEST pdfmark end
 -246 2157 a 0 TeXcolorgray
-141 2252 a FK(3.)p 0 TeXcolorgray 43 w(Les)k(multiples)i(de)d(10)i
(sont)f(10,)g(20,)g(30,)h(.)10 b(.)g(.,)19 b(100.)g(Il)d(y)h(en)h(a)f
(10,)i(donc)1687 2457 y FB(P)8 b FK(\()e FB(A)13 b FG(\\)d
FB(B)d FK(\))14 b FG(\306)2097 2401 y FK(10)p 2077 2438
122 5 v 2077 2514 a(100)2222 2457 y FG(\306)g FK(0,)8
b(1.)-38 2650 y(D)o('apr\350s)17 b(une)h(for)q(mule)g(du)f(cours)h(:)
1088 2820 y FB(P)8 b FK(\()e FB(A)13 b FG([)d FB(B)d
FK(\))14 b FG(\306)h FB(P)8 b FK(\()e FB(A)s FK(\))k
FG(\305)g FB(P)e FK(\()p FB(B)f FK(\))j FG(\241)g FB(P)e
FK(\()e FB(A)13 b FG(\\)d FB(B)d FK(\))15 b FG(\306)f
FK(0,)8 b(5)i FG(\305)g FK(0,)e(2)i FG(\241)g FK(0,)e(1)19
b FG(\306)14 b FK(0,)8 b(6.)-246 2901 y
SDict begin H.S end
 -246 2901 a -246
2901 a
SDict begin 12 H.A end
 -246 2901 a -246 2901 a
SDict begin [/View [/XYZ H.V]/Dest (exo.74) cvn /DEST pdfmark end
 -246 2901 a -246 2910
a
SDict begin H.S end
 -246 2910 a -246 2910 a
SDict begin 12 H.A end
 -246 2910 a -246 2910 a
SDict begin [/View [/XYZ H.V]/Dest (Item.182) cvn /DEST pdfmark end
 -246
2910 a 0 TeXcolorgray 101 x FL(Ex)o(er)o(cice)14 b(74)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)19 b FB(A)s FG([)p FB(B)6
b FK(,)13 b(s)m('\351cr)q(it)g(\253)e(au)i(moins)h(l)o(')q(un)f(des)h
(deux)f(f)q(eux)h(est)g(ver)q(t)d(\273.)i(C)o(et)g(\351)q(v\351n)q(eme)
q(nt)g(s)q(e)g(produit)g(\340)h(coup)f(s)q(\373r)-5 b(,)14
b(pui)q(sque)-38 3111 y(les)k(deux)g(feux)g(ne)f(sont)h(jamais)h(tous)f
(les)g(deux)g(rouges)f(en)g(m\352me)i(temps)g(\(cf)e(\351nonc\351\).)h
(On)g(a)f(donc)1833 3281 y FB(P)8 b FK(\()e FB(A)13 b
FG([)d FB(B)d FK(\))15 b FG(\306)f FK(1.)-246 3361 y
SDict begin H.S end

-246 3361 a -246 3361 a
SDict begin 12 H.A end
 -246 3361 a -246 3361 a
SDict begin [/View [/XYZ H.V]/Dest (Item.183) cvn /DEST pdfmark end
 -246
3361 a 0 TeXcolorgray -141 3463 a FK(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)21 b(\253)14 b(Pierr)o(e)i(a)h(les)h
(deux)g(feux)g(ver)q(ts)c(\273)34 b(s)m('\351cr)q(it)24
b FB(A)13 b FG(\\)d FB(B)c FK(,)18 b(donc)f(d)n('apr\350s)g(une)i(for)q
(mule)f(du)f(cours)o(,)h(sa)f(probabilit\351)h(est)g(:)1122
3633 y FB(P)8 b FK(\()e FB(A)13 b FG(\\)d FB(B)d FK(\))15
b FG(\306)f FB(P)8 b FK(\()e FB(A)s FK(\))k FG(\305)g
FB(P)e FK(\()p FB(B)f FK(\))j FG(\241)g FB(P)e FK(\()e
FB(A)13 b FG([)d FB(B)d FK(\))15 b FG(\306)g FK(0,)8
b(8)i FG(\305)g FK(0,)e(5)i FG(\241)g FK(1)18 b FG(\306)c
FK(0,)8 b(3.)-246 3714 y
SDict begin H.S end
 -246 3714 a -246 3714 a
SDict begin 12 H.A end
 -246
3714 a -246 3714 a
SDict begin [/View [/XYZ H.V]/Dest (exo.75) cvn /DEST pdfmark end
 -246 3714 a -246 3723 a
SDict begin H.S end
 -246 3723
a -246 3723 a
SDict begin 12 H.A end
 -246 3723 a -246 3723 a
SDict begin [/View [/XYZ H.V]/Dest (Item.184) cvn /DEST pdfmark end
 -246 3723 a 0 TeXcolorgray
101 x FL(Ex)o(er)o(cice)14 b(75)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(On)j(suppose)i(que)f
FB(P)8 b FK(\()e FB(A)s FK(\))14 b FG(\306)g FK(0,)8
b(4,)19 b FB(P)8 b FK(\()p FB(B)f FK(\))15 b FG(\306)f
FK(0,)8 b(6)18 b(et)g FB(P)8 b FK(\()e FB(A)13 b FG([)d
FB(B)d FK(\))15 b FG(\306)f FK(0,)8 b(9.)-246 3851 y
SDict begin H.S end

-246 3851 a -246 3851 a
SDict begin 12 H.A end
 -246 3851 a -246 3851 a
SDict begin [/View [/XYZ H.V]/Dest (Item.185) cvn /DEST pdfmark end
 -246
3851 a 0 TeXcolorgray 10 3946 a FK(\(a\))p 0 TeXcolorgray
41 w(D)o('apr\350s)17 b(une)h(for)q(mule)g(du)f(cours)o(,)1179
4116 y FB(P)8 b FK(\()e FB(A)13 b FG(\\)d FB(B)d FK(\))15
b FG(\306)f FB(P)8 b FK(\()e FB(A)s FK(\))k FG(\305)g
FB(P)e FK(\()p FB(B)f FK(\))j FG(\241)g FB(P)e FK(\()e
FB(A)13 b FG([)d FB(B)d FK(\))15 b FG(\306)g FK(0,)8
b(4)i FG(\305)g FK(0,)e(6)i FG(\241)g FK(0,)e(9)18 b
FG(\306)d FK(0,)8 b(1.)-246 4197 y
SDict begin H.S end
 -246 4197 a -246 4197
a
SDict begin 12 H.A end
 -246 4197 a -246 4197 a
SDict begin [/View [/XYZ H.V]/Dest (Item.186) cvn /DEST pdfmark end
 -246 4197 a 0 TeXcolorgray
4 4298 a FK(\(b\))p 0 TeXcolorgray 41 w(D)o('un)17 b(c\364t\351)g
FB(P)8 b FK(\()e FB(A)s FK(\))k FG(\243)g FB(P)e FK(\()p
FB(B)f FK(\))15 b FG(\306)f FK(0,)8 b(4)i FG(\243)g FK(0,)e(6)17
b FG(\306)d FK(0,)8 b(24)19 b(;)f(de)f(l)o('autr)o(e)h
FB(P)8 b FK(\()e FB(A)13 b FG(\\)d FB(B)d FK(\))15 b
FG(\306)f FK(0,)8 b(1.)145 4410 y(C)o(onclusion)19 b(:)e
FB(P)8 b FK(\()e FB(A)13 b FG(\\)d FB(B)d FK(\))15 b
FG(6\306)f FB(P)8 b FK(\()e FB(A)s FK(\))k FG(\243)g
FB(P)e FK(\()p FB(B)f FK(\),)18 b(donc)23 b FB(A)d FK(et)e
FB(B)25 b FK(ne)18 b(sont)g(pas)f(ind\351pendants)o(.)-246
4438 y
SDict begin H.S end
 -246 4438 a -246 4438 a
SDict begin 12 H.A end
 -246 4438 a -246 4438
a
SDict begin [/View [/XYZ H.V]/Dest (Item.187) cvn /DEST pdfmark end
 -246 4438 a -246 4438 a
SDict begin H.S end
 -246 4438 a -246 4438 a
SDict begin 12 H.A end
 -246
4438 a -246 4438 a
SDict begin [/View [/XYZ H.V]/Dest (Item.188) cvn /DEST pdfmark end
 -246 4438 a 0 TeXcolorgray -141 4532
a FK(2.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(L)-10 b('\351v\351nement)26 b FB(A)13
b FG(\\)d FB(B)25 b FK(s)m('\351cr)q(it)18 b(\253)c(la)j(car)q(te)g
(est)h(un)g(roi)e(rouge)e(\273.)j(Il)g(y)f(a)i(deux)f(rois)g(rouges)g
(dans)h(le)f(jeu,)i(donc)1737 4737 y FB(P)8 b FK(\()e
FB(A)13 b FG(\\)d FB(B)d FK(\))15 b FG(\306)2148 4681
y FK(2)p 2127 4718 82 5 v 2127 4794 a(32)2233 4737 y
FG(\306)f FK(0,)8 b(0625.)-246 4865 y
SDict begin H.S end
 -246 4865 a -246
4865 a
SDict begin 12 H.A end
 -246 4865 a -246 4865 a
SDict begin [/View [/XYZ H.V]/Dest (Item.189) cvn /DEST pdfmark end
 -246 4865 a 0 TeXcolorgray
4 4957 a FK(\(b\))p 0 TeXcolorgray 41 w(Il)16 b(y)h(a)g(16)h(car)q(tes)
f(rouges)h(dans)f(le)h(jeu,)g(donc)f FB(P)8 b FK(\()e
FB(A)s FK(\))14 b FG(\306)1750 4924 y FI(16)p 1750 4937
62 5 v 1750 4986 a(32)1836 4957 y FG(\306)g FK(0,)8 b(5.)145
5078 y(Il)16 b(y)h(a)g(4)h(rois)f(dans)g(le)h(jeu,)g(donc)g
FB(P)8 b FK(\()p FB(B)f FK(\))14 b FG(\306)1397 5045
y FI(4)p 1381 5058 V 1381 5107 a(32)1467 5078 y FG(\306)g
FK(0,)8 b(125.)145 5190 y FB(P)g FK(\()e FB(A)s FK(\))k
FG(\243)g FB(P)e FK(\()p FB(B)f FK(\))14 b FG(\306)g
FK(0,)8 b(5)i FG(\243)g FK(0,)e(125)18 b FG(\306)d FK(0,)8
b(0625)17 b FG(\306)d FB(P)8 b FK(\()e FB(A)13 b FG(\\)d
FB(B)d FK(\),)18 b(donc)23 b FB(A)d FK(et)e FB(B)25 b
FK(sont)18 b(ind\351pendants)o(.)145 5347 y FL(R)o(emarque)f(:)k
FK(Le)h(mot)f(\253)15 b(ind\351pendants)h(\273)42 b(est)22
b(confor)q(me)f(\340)g(l)o('id\351e)h(intuitive)h(que)f(l)o('on)g(s)m
('en)g(fait)f(:)g(deux)h(\351v\351nements)i(sont)d(ind\351-)145
5446 y(pendants)16 b(lorsque)h(la)e(r\351alisation)i(de)f(l)o('un)g(n)
-6 b('a)16 b(pas)g(d)n('incidence)g(sur)g(celle)g(de)g(l)o('autr)o(e)o
(.)g(Dans)e(l)o('exemple)19 b(de)c(la)h(question)h(2,)f(si)g(vous)145
5546 y(savez)g(que)h(la)f(car)q(te)g(est)h(rouge)o(,)f(cela)h(ne)g
(change)f(pas)h(la)g(probabilit\351)f(que)h(ce)g(soit)g(un)g(roi)9
b(;)16 b(et)g(r\351ciproquement,)j(si)e(vous)g(savez)f(que)145
5646 y(c)n('est)h(un)h(roi,)f(vous)h(n)-6 b('en)18 b(tir)o(ez)f(aucune)
h(infor)q(mation)h(sur)e(sa)g(couleur)-5 b(.)p 0 TeXcolorgray
1909 5895 a(38)p 0 TeXcolorgray eop end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.39) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.190) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(3.)p 0 TeXcolorgray 43 w(Dans)17 b(cette)h(question,)h(on)e
(suppose)j(que)e FB(P)8 b FK(\()e FB(A)s FK(\))13 b FG(\306)h
FK(0,)8 b(4,)19 b FB(P)8 b FK(\()e FB(A)13 b FG([)d FB(B)d
FK(\))15 b FG(\306)f FK(0,)8 b(7)19 b(;)e(et)h(que)g(les)g
(\351v\351nements)26 b FB(A)20 b FK(et)e FB(B)25 b FK(sont)18
b(ind\351pendants)o(.)-38 -1 y(D)o('apr\350s)f(une)h(for)q(mule)g(du)f
(cours)h(et)g(la)f(propr)q(i\351t\351)h(d)n('ind\351pendance)g(:)625
290 y FB(P)8 b FK(\()e FB(A)13 b FG([)d FB(B)d FK(\))15
b FG(\306)f FB(P)8 b FK(\()e FB(A)s FK(\))k FG(\305)g
FB(P)e FK(\()p FB(B)f FK(\))j FG(\241)g FB(P)e FK(\()e
FB(A)13 b FG(\\)d FB(B)d FK(\))625 414 y FB(P)h FK(\()e
FB(A)13 b FG([)d FB(B)d FK(\))15 b FG(\306)f FB(P)8 b
FK(\()e FB(A)s FK(\))k FG(\305)g FB(P)e FK(\()p FB(B)f
FK(\))j FG(\241)g FB(P)e FK(\()e FB(A)s FK(\))k FG(\243)g
FB(P)e FK(\()p FB(B)f FK(\))664 b(\(on)17 b(utilise)i(l)o
('ind\351pendance)r(\))812 539 y(0,)8 b(7)16 b FG(\306)e
FK(0,)8 b(4)i FG(\305)g FB(P)e FK(\()p FB(B)f FK(\))j
FG(\241)g FK(0,)e(4)i FG(\243)g FB(P)e FK(\()p FB(B)f
FK(\))812 663 y(0,)h(7)16 b FG(\306)e FK(0,)8 b(4)i FG(\305)i
FB(x)j FG(\241)10 b FK(0,)e(4)r FB(x)1096 b FK(\(on)17
b(pose)j FB(x)g FG(\306)14 b FB(P)8 b FK(\()p FB(B)f
FK(\)\))812 788 y(0,)h(7)16 b FG(\306)e FK(0,)8 b(4)i
FG(\305)g FK(0,)e(6)r FB(x)627 913 y FK(0,)g(7)i FG(\241)g
FK(0,)e(4)18 b FG(\306)997 924 y FA(\010)1040 902 y(\010)1005
913 y FK(0,)8 b(4)j FG(\305)f FK(0,)e(6)r FB(x)15 b FG(\241)1410
924 y FA(\010)1455 902 y(\010)1418 913 y FK(0,)8 b(4)1028
b(\(on)17 b(r\351sout)h(l)o('\351quation)r(\))802 1027
y(0,)8 b(3)p 802 1064 110 5 v 802 1140 a(0,)g(6)936 1084
y FG(\306)1006 1038 y FA(\010)1049 1017 y(\010)1015 1027
y FK(0,)g(6)s FB(x)p 1015 1064 156 5 v 1030 1151 a FA(\010)1073
1130 y(\010)1038 1140 y FK(0,)g(6)812 1254 y(0,)g(5)16
b FG(\306)g FB(x)5 b FK(.)-38 1446 y(C)o(onclusion)19
b(:)f FB(P)8 b FK(\()p FB(B)f FK(\))14 b FG(\306)h FK(0,)8
b(5.)-246 1584 y
SDict begin H.S end
 -246 1584 a -246 1584 a
SDict begin 12 H.A end
 -246 1584 a
-246 1584 a
SDict begin [/View [/XYZ H.V]/Dest (section.15) cvn /DEST pdfmark end
 -246 1584 a 138 x FM(15)105 b(F)l(ractions)23
b(et)g(manipulation)g(de)g(for)q(mules)-246 1831 y
SDict begin H.S end
 -246
1831 a -246 1831 a
SDict begin 12 H.A end
 -246 1831 a -246 1831 a
SDict begin [/View [/XYZ H.V]/Dest (exo.76) cvn /DEST pdfmark end
 -246 1831
a -246 1836 a
SDict begin H.S end
 -246 1836 a -246 1836 a
SDict begin 12 H.A end
 -246 1836 a -246
1836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.191) cvn /DEST pdfmark end
 -246 1836 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(76)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 49 w FB(A)j FG(\306)553 1886 y FI(1)p 553
1899 31 5 v 553 1947 a(8)604 1919 y FG(\305)679 1886
y FI(5)p 679 1899 V 679 1947 a(8)734 1919 y FG(\306)813
1886 y FI(6)p 813 1899 V 813 1947 a(8)868 1919 y FG(\306)947
1886 y FI(3)p 947 1899 V 947 1947 a(4)-246 1959 y
SDict begin H.S end
 -246
1959 a -246 1959 a
SDict begin 12 H.A end
 -246 1959 a -246 1959 a
SDict begin [/View [/XYZ H.V]/Dest (Item.192) cvn /DEST pdfmark end
 -246 1959
a 0 TeXcolorgray -141 2050 a FK(2.)p 0 TeXcolorgray 43
w FB(B)22 b FG(\306)111 2017 y FI(2)p 111 2030 31 5 v
111 2079 a(3)162 2050 y FG(\241)237 2017 y FI(1)p 237
2030 V 237 2079 a(2)292 2050 y FG(\306)371 2017 y FI(4)p
371 2030 V 371 2079 a(6)422 2050 y FG(\241)497 2017 y
FI(3)p 497 2030 V 497 2079 a(6)552 2050 y FG(\306)631
2017 y FI(1)p 631 2030 V 631 2079 a(6)-246 2090 y
SDict begin H.S end
 -246
2090 a -246 2090 a
SDict begin 12 H.A end
 -246 2090 a -246 2090 a
SDict begin [/View [/XYZ H.V]/Dest (Item.193) cvn /DEST pdfmark end
 -246 2090
a 0 TeXcolorgray -141 2181 a FK(3.)p 0 TeXcolorgray 41
w FB(C)h FG(\306)112 2148 y FI(5)p 112 2161 31 5 v 112
2210 a(6)163 2181 y FG(\241)238 2148 y FI(3)p 238 2161
V 238 2210 a(4)293 2181 y FG(\306)372 2148 y FI(10)p
372 2161 62 5 v 372 2210 a(12)454 2181 y FG(\241)544
2148 y FI(9)p 529 2161 V 529 2210 a(12)615 2181 y FG(\306)709
2148 y FI(1)p 694 2161 V 694 2210 a(12)-246 2221 y
SDict begin H.S end
 -246
2221 a -246 2221 a
SDict begin 12 H.A end
 -246 2221 a -246 2221 a
SDict begin [/View [/XYZ H.V]/Dest (Item.194) cvn /DEST pdfmark end
 -246 2221
a 0 TeXcolorgray -141 2312 a FK(4.)p 0 TeXcolorgray 43
w FB(D)e FG(\306)135 2280 y FI(4)p 120 2293 62 5 v 120
2341 a(15)201 2312 y FG(\243)276 2280 y FI(5)p 276 2293
31 5 v 276 2341 a(6)331 2312 y FG(\306)426 2280 y FI(4)p
FH(\243)p FI(5)p 410 2293 135 5 v 410 2341 a(15)p FH(\243)p
FI(6)569 2312 y FG(\306)648 2280 y FI(20)p 648 2293 62
5 v 648 2341 a(90)734 2312 y FG(\306)813 2280 y FI(2)p
813 2293 31 5 v 813 2341 a(9)-246 2352 y
SDict begin H.S end
 -246 2352 a
-246 2352 a
SDict begin 12 H.A end
 -246 2352 a -246 2352 a
SDict begin [/View [/XYZ H.V]/Dest (Item.195) cvn /DEST pdfmark end
 -246 2352 a 0 TeXcolorgray
-141 2444 a FK(5.)p 0 TeXcolorgray 43 w FB(E)h FG(\306)109
2411 y FI(5)p 109 2424 31 5 v 109 2472 a(6)160 2444 y
FG(\243)10 b FK(4)k FG(\306)359 2411 y FI(5)p FH(\243)p
FI(4)p 359 2424 104 5 v 395 2472 a(6)486 2444 y FG(\306)565
2411 y FI(20)p 565 2424 62 5 v 581 2472 a(6)651 2444
y FG(\306)730 2411 y FI(10)p 730 2424 V 745 2472 a(3)-246
2484 y
SDict begin H.S end
 -246 2484 a -246 2484 a
SDict begin 12 H.A end
 -246 2484 a -246 2484
a
SDict begin [/View [/XYZ H.V]/Dest (Item.196) cvn /DEST pdfmark end
 -246 2484 a 0 TeXcolorgray -141 2589 a FK(6.)p 0 TeXcolorgray
43 w FB(F)24 b FG(\306)99 2525 y Ft(\241)139 2557 y FI(2)p
139 2570 31 5 v 139 2618 a(3)179 2525 y Ft(\242)209 2542
y FI(2)258 2589 y FG(\306)337 2557 y FI(2)p 337 2570
V 337 2618 a(3)388 2589 y FG(\243)463 2557 y FI(2)p 463
2570 V 463 2618 a(3)518 2589 y FG(\306)597 2557 y FI(2)p
FH(\243)p FI(2)p 597 2570 104 5 v 597 2618 a(3)p FH(\243)p
FI(3)725 2589 y FG(\306)804 2557 y FI(4)p 804 2570 31
5 v 804 2618 a(9)-246 2629 y
SDict begin H.S end
 -246 2629 a -246 2629 a
SDict begin 12 H.A end

-246 2629 a -246 2629 a
SDict begin [/View [/XYZ H.V]/Dest (Item.197) cvn /DEST pdfmark end
 -246 2629 a 0 TeXcolorgray -141
2720 a FK(7.)p 0 TeXcolorgray 41 w FB(G)c FG(\306)113
2688 y FI(4)p 113 2701 31 5 v 113 2749 a(5)164 2720 y
FG(\245)239 2688 y FI(2)p 239 2701 V 239 2749 a(3)294
2720 y FG(\306)373 2688 y FI(4)p 373 2701 V 373 2749
a(5)424 2720 y FG(\243)499 2688 y FI(3)p 499 2701 V 499
2749 a(2)554 2720 y FG(\306)633 2688 y FI(4)p FH(\243)p
FI(3)p 633 2701 104 5 v 633 2749 a(5)p FH(\243)p FI(2)761
2720 y FG(\306)840 2688 y FI(12)p 840 2701 62 5 v 840
2749 a(10)926 2720 y FG(\306)1005 2688 y FI(6)p 1005
2701 31 5 v 1005 2749 a(5)-246 2761 y
SDict begin H.S end
 -246 2761 a -246
2761 a
SDict begin 12 H.A end
 -246 2761 a -246 2761 a
SDict begin [/View [/XYZ H.V]/Dest (Item.198) cvn /DEST pdfmark end
 -246 2761 a 0 TeXcolorgray
-141 2852 a FK(8.)p 0 TeXcolorgray 45 w FB(H)j FG(\306)14
b FK(3)c FG(\245)241 2819 y FI(15)p 241 2832 62 5 v 256
2880 a(4)326 2852 y FG(\306)k FK(3)c FG(\243)537 2819
y FI(4)p 521 2832 V 521 2880 a(15)607 2852 y FG(\306)686
2819 y FI(3)p FH(\243)p FI(4)p 686 2832 104 5 v 707 2880
a(15)814 2852 y FG(\306)893 2819 y FI(12)p 893 2832 62
5 v 893 2880 a(15)978 2852 y FG(\306)1058 2819 y FI(4)p
1058 2832 31 5 v 1058 2880 a(5)-246 2892 y
SDict begin H.S end
 -246 2892
a -246 2892 a
SDict begin 12 H.A end
 -246 2892 a -246 2892 a
SDict begin [/View [/XYZ H.V]/Dest (Item.199) cvn /DEST pdfmark end
 -246 2892 a 0 TeXcolorgray
-141 2983 a FK(9.)p 0 TeXcolorgray 45 w FB(I)25 b FG(\306)84
2919 y Ft(\241)123 2950 y FI(1)p 123 2963 31 5 v 123
3012 a(4)174 2983 y FG(\241)249 2950 y FI(1)p 249 2963
V 249 3012 a(6)290 2919 y Ft(\242)330 2983 y FG(\243)10
b FK(3)15 b FG(\306)519 2919 y Ft(\241)574 2950 y FI(3)p
558 2963 62 5 v 558 3012 a(12)640 2983 y FG(\241)731
2950 y FI(2)p 715 2963 V 715 3012 a(12)787 2919 y Ft(\242)826
2983 y FG(\243)10 b FK(3)15 b FG(\306)1041 2950 y FI(1)p
1025 2963 V 1025 3012 a(12)1107 2983 y FG(\243)10 b FK(3)15
b FG(\306)1321 2950 y FI(3)p 1306 2963 V 1306 3012 a(12)1392
2983 y FG(\306)1471 2950 y FI(1)p 1471 2963 31 5 v 1471
3012 a(4)-246 3023 y
SDict begin H.S end
 -246 3023 a -246 3023 a
SDict begin 12 H.A end
 -246 3023
a -246 3023 a
SDict begin [/View [/XYZ H.V]/Dest (Item.200) cvn /DEST pdfmark end
 -246 3023 a 0 TeXcolorgray -181 3114 a
FK(10.)p 0 TeXcolorgray 48 w FB(J)22 b FG(\306)95 3081
y FI(1)p 95 3094 31 5 v 95 3143 a(3)146 3114 y FG(\305)221
3081 y FI(2)p 221 3094 V 221 3143 a(3)272 3114 y FG(\243)347
3081 y FI(4)p 347 3094 V 347 3143 a(5)402 3114 y FG(\306)481
3081 y FI(1)p 481 3094 V 481 3143 a(3)532 3114 y FG(\305)607
3081 y FI(2)p FH(\243)p FI(4)p 607 3094 104 5 v 607 3143
a(3)p FH(\243)p FI(5)735 3114 y FG(\306)829 3081 y FI(5)p
814 3094 62 5 v 814 3143 a(15)895 3114 y FG(\305)986
3081 y FI(8)p 971 3094 V 971 3143 a(15)1056 3114 y FG(\306)1135
3081 y FI(13)p 1135 3094 V 1135 3143 a(15)p 0 TeXcolorgray
0 TeXcolorgray 1992 1834 a
SDict begin H.S end
 1992 1834 a 1992 1834 a
SDict begin 12 H.A end
 1992
1834 a 1992 1834 a
SDict begin [/View [/XYZ H.V]/Dest (Item.201) cvn /DEST pdfmark end
 1992 1834 a 0 TeXcolorgray 2056 1919
a FK(11.)p 0 TeXcolorgray 43 w FB(K)k FG(\306)2354 1886
y FI(35)p 2354 1899 62 5 v 2354 1947 a(56)2436 1919 y
FG(\243)2511 1886 y FI(72)p 2511 1899 V 2511 1947 a(45)2597
1919 y FG(\306)2676 1886 y FI(35)p FH(\243)p FI(72)p
2676 1899 165 5 v 2676 1947 a(56)p FH(\243)p FI(45)2865
1919 y FG(\306)p 1 0 0 TeXcolorrgb 2944 1886 a FI(5)p
0 TeXcolorgray FH(\243)p 0 0 1 TeXcolorrgb FI(7)p 0 TeXcolorgray
-1 w FH(\243)p 0 1 0 TeXcolorrgb FI(8)p 0 TeXcolorgray
FH(\243)p 1 0.5 0 TeXcolorrgb FI(9)p 0 TeXcolorgray 2944
1899 249 5 v 0 0 1 TeXcolorrgb 2944 1947 a(7)p 0 TeXcolorgray
FH(\243)p 0 1 0 TeXcolorrgb FI(8)p 0 TeXcolorgray -1
w FH(\243)p 1 0 0 TeXcolorrgb FI(5)p 0 TeXcolorgray FH(\243)p
1 0.5 0 TeXcolorrgb FI(9)p 0 TeXcolorgray 3217 1919 a
FG(\306)14 b FK(1)52 b(\(tout)18 b(se)f(simpli\002e\))1992
1963 y
SDict begin H.S end
 1992 1963 a 1992 1963 a
SDict begin 12 H.A end
 1992 1963 a 1992 1963
a
SDict begin [/View [/XYZ H.V]/Dest (Item.202) cvn /DEST pdfmark end
 1992 1963 a 0 TeXcolorgray 2056 2092 a FK(12.)p 0 TeXcolorgray
43 w FB(L)h FG(\306)2349 2017 y Fi(4)p 2349 2027 25 4
v 2349 2064 a(3)2383 2042 y FH(\241)2435 2017 y Fi(2)p
2435 2027 V 2435 2064 a(7)p 2339 2073 131 5 v 2349 2108
a(4)p 2349 2118 25 4 v 2349 2155 a(3)2383 2133 y FH(\243)2435
2108 y Fi(2)p 2435 2118 V 2435 2155 a(7)2494 2092 y FG(\306)2583
2018 y Fi(28)p 2583 2028 49 4 v 2583 2064 a(21)2641 2043
y FH(\241)2705 2018 y Fi(6)p 2693 2028 V 2693 2064 a(21)p
2573 2073 179 5 v 2621 2108 a(4)p Fc(\243)p Fi(2)p 2621
2118 82 4 v 2621 2155 a(3)p Fc(\243)p Fi(7)2776 2092
y FG(\306)2865 2018 y Fi(22)p 2865 2028 49 4 v 2865 2064
a(21)p 2855 2073 69 5 v 2877 2108 a(8)p 2865 2118 49
4 v 2865 2155 a(21)2948 2092 y FG(\306)3027 2060 y FI(22)p
3027 2073 62 5 v 3016 2140 a FA(\032)3027 2128 y FI(21)3108
2092 y FG(\243)3172 2072 y FA(\032)3183 2060 y FI(21)p
3183 2073 V 3199 2121 a(8)3269 2092 y FG(\306)3348 2060
y FI(22)p 3348 2073 V 3364 2121 a(8)3434 2092 y FG(\306)3513
2060 y FI(11)p 3513 2073 V 3529 2121 a(4)1992 2171 y
SDict begin H.S end

1992 2171 a 1992 2171 a
SDict begin 12 H.A end
 1992 2171 a 1992 2171 a
SDict begin [/View [/XYZ H.V]/Dest (Item.203) cvn /DEST pdfmark end
 1992
2171 a 0 TeXcolorgray 2056 2300 a FK(13.)p 0 TeXcolorgray
45 w FB(M)k FG(\306)2372 2250 y FI(2)p FH(\241)2455 2225
y Fi(10)p 2455 2235 49 4 v 2467 2272 a(7)p 2372 2281
142 5 v 2388 2316 a(1)p 2388 2326 25 4 v 2388 2362 a(3)2422
2341 y FH(\305)2474 2316 y Fi(5)p 2474 2326 V 2474 2362
a(7)2537 2300 y FG(\306)2639 2225 y Fi(2)p 2639 2235
V 2639 2272 a(1)2673 2250 y FH(\241)2725 2225 y Fi(10)p
2725 2235 49 4 v 2737 2272 a(7)p 2617 2281 179 5 v 2639
2316 a(7)p 2627 2326 49 4 v 2627 2362 a(21)2685 2341
y FH(\305)2737 2316 y Fi(15)p 2737 2326 V 2737 2362 a(21)2820
2300 y FG(\306)2909 2225 y Fi(14)p 2909 2235 V 2921 2272
a(7)2967 2250 y FH(\241)3019 2225 y Fi(10)p 3019 2235
V 3031 2272 a(7)p 2899 2281 179 5 v 2964 2316 a(22)p
2964 2326 49 4 v 2964 2362 a(21)3102 2300 y FG(\306)3203
2225 y Fi(4)p 3203 2235 25 4 v 3203 2272 a(7)p 3181 2281
69 5 v 3191 2316 a(22)p 3191 2326 49 4 v 3191 2362 a(21)3274
2300 y FG(\306)3353 2267 y FI(4)p 3353 2280 31 5 v 3353
2329 a(7)3397 2300 y FG(\243)3465 2267 y FI(21)p 3465
2280 62 5 v 3465 2329 a(22)3551 2300 y FG(\306)3630 2267
y FI(4)p FH(\243)p FI(3)p FH(\243)3781 2290 y FA(\003)3776
2267 y FI(7)p 3630 2280 176 5 v 3656 2368 a FA(\003)3651
2346 y FI(7)p FH(\243)p FI(22)3830 2300 y FG(\306)3909
2267 y FI(12)p 3909 2280 62 5 v 3909 2329 a(22)3995 2300
y FG(\306)4090 2267 y FI(6)p 4074 2280 V 4074 2329 a(11)1992
2378 y
SDict begin H.S end
 1992 2378 a 1992 2378 a
SDict begin 12 H.A end
 1992 2378 a 1992 2378
a
SDict begin [/View [/XYZ H.V]/Dest (Item.204) cvn /DEST pdfmark end
 1992 2378 a 0 TeXcolorgray 2056 2488 a FK(14.)p 0 TeXcolorgray
45 w FB(N)h FG(\306)2351 2424 y Ft(\241)2391 2455 y FI(1)p
2391 2468 31 5 v 2391 2517 a(2)2431 2424 y Ft(\242)2461
2441 y FI(2)2506 2488 y FG(\245)2571 2424 y Ft(\241)2611
2455 y FI(2)p 2611 2468 V 2611 2517 a(3)2652 2424 y Ft(\242)2695
2488 y FG(\306)2775 2455 y FI(1)p 2775 2468 V 2775 2517
a(2)2826 2488 y FG(\243)2901 2455 y FI(1)p 2901 2468
V 2901 2517 a(2)2951 2488 y FG(\243)3027 2455 y FI(3)p
3027 2468 V 3027 2517 a(2)3082 2488 y FG(\306)3161 2455
y FI(1)p FH(\243)p FI(1)p FH(\243)p FI(3)p 3161 2468
176 5 v 3161 2517 a(2)p FH(\243)p FI(2)p FH(\243)p FI(2)3361
2488 y FG(\306)3440 2455 y FI(3)p 3440 2468 31 5 v 3440
2517 a(8)1992 2532 y
SDict begin H.S end
 1992 2532 a 1992 2532 a
SDict begin 12 H.A end
 1992 2532
a 1992 2532 a
SDict begin [/View [/XYZ H.V]/Dest (Item.205) cvn /DEST pdfmark end
 1992 2532 a 0 TeXcolorgray 2056 2628 a
FK(15.)p 0 TeXcolorgray 41 w FB(O)18 b FG(\306)2353 2595
y FI(5)p 2353 2608 31 5 v 2353 2656 a(7)2403 2628 y FG(\243)2478
2595 y FI(2)p 2478 2608 V 2478 2656 a(9)2529 2628 y FG(\243)2604
2595 y FI(3)p 2604 2608 V 2604 2656 a(5)2655 2628 y FG(\243)2730
2595 y FI(7)p 2730 2608 V 2730 2656 a(4)2785 2628 y FG(\306)p
1 0 0 TeXcolorrgb 2865 2595 a FI(5)p 0 TeXcolorgray -1
w FH(\243)p FI(2)p FH(\243)p FI(3)p FH(\243)p 0 0 1 TeXcolorrgb
FI(7)p 0 TeXcolorgray 2865 2608 249 5 v 0 0 1 TeXcolorrgb
2865 2656 a(7)p 0 TeXcolorgray -1 w FH(\243)p FI(9)p
FH(\243)p 1 0 0 TeXcolorrgb FI(5)p 0 TeXcolorgray -1
w FH(\243)p FI(4)3137 2628 y FG(\306)3232 2595 y FI(6)p
3216 2608 62 5 v 3216 2656 a(36)3302 2628 y FG(\306)3381
2595 y FI(1)p 3381 2608 31 5 v 3381 2656 a(6)1992 2672
y
SDict begin H.S end
 1992 2672 a 1992 2672 a
SDict begin 12 H.A end
 1992 2672 a 1992 2672 a
SDict begin [/View [/XYZ H.V]/Dest (Item.206) cvn /DEST pdfmark end
 1992
2672 a 0 TeXcolorgray 2056 2767 a FK(16.)p 0 TeXcolorgray
43 w FB(P)k FG(\306)2363 2735 y FI(2)p 2348 2748 62 5
v 2348 2796 a(24)2429 2767 y FG(\305)2504 2735 y FI(5)p
2504 2748 31 5 v 2504 2796 a(2)2555 2767 y FG(\241)2630
2735 y FI(50)p 2630 2748 62 5 v 2630 2796 a(60)2716 2767
y FG(\306)2811 2735 y FI(1)p 2795 2748 V 2795 2796 a(12)2877
2767 y FG(\305)2952 2735 y FI(5)p 2952 2748 31 5 v 2952
2796 a(2)3003 2767 y FG(\241)3078 2735 y FI(5)p 3078
2748 V 3078 2796 a(6)3133 2767 y FG(\306)3227 2735 y
FI(1)p 3212 2748 62 5 v 3212 2796 a(12)3294 2767 y FG(\305)3369
2735 y FI(30)p 3369 2748 V 3369 2796 a(12)3450 2767 y
FG(\241)3525 2735 y FI(10)p 3525 2748 V 3525 2796 a(12)3611
2767 y FG(\306)3690 2735 y FI(21)p 3690 2748 V 3690 2796
a(12)3776 2767 y FG(\306)3855 2735 y FI(7)p 3855 2748
31 5 v 3855 2796 a(4)1992 2812 y
SDict begin H.S end
 1992 2812 a 1992 2812
a
SDict begin 12 H.A end
 1992 2812 a 1992 2812 a
SDict begin [/View [/XYZ H.V]/Dest (Item.207) cvn /DEST pdfmark end
 1992 2812 a 0 TeXcolorgray
2056 2941 a FK(17.)p 0 TeXcolorgray 41 w FB(Q)d FG(\306)2363
2866 y Fi(5)p 2363 2876 25 4 v 2363 2913 a(6)2398 2891
y FH(\305)2461 2866 y Fi(9)p 2449 2876 49 4 v 2449 2913
a(12)p 2353 2922 155 5 v 2363 2957 a(3)p 2363 2967 25
4 v 2363 3003 a(4)2398 2982 y FH(\305)2450 2957 y Fi(10)p
2449 2967 49 4 v 2449 3003 a(12)2532 2941 y FG(\306)2621
2866 y Fi(10)p 2621 2876 V 2621 2913 a(12)2680 2891 y
FH(\305)2744 2866 y Fi(9)p 2731 2876 V 2731 2913 a(12)p
2611 2922 179 5 v 2633 2957 a(9)p 2621 2967 49 4 v 2621
3003 a(12)2680 2982 y FH(\305)2732 2957 y Fi(10)p 2731
2967 V 2731 3003 a(12)2814 2941 y FG(\306)2903 2866 y
Fi(19)p 2903 2876 V 2903 2913 a(12)p 2893 2922 69 5 v
2903 2957 a(19)p 2903 2967 49 4 v 2903 3003 a(12)2986
2941 y FG(\306)14 b FK(1)1992 3019 y
SDict begin H.S end
 1992 3019 a 1992
3019 a
SDict begin 12 H.A end
 1992 3019 a 1992 3019 a
SDict begin [/View [/XYZ H.V]/Dest (Item.208) cvn /DEST pdfmark end
 1992 3019 a 0 TeXcolorgray
2056 3114 a FK(18.)p 0 TeXcolorgray 43 w FB(R)20 b FG(\306)2347
3081 y FI(11)p 2347 3094 62 5 v 2363 3143 a(6)2429 3114
y FG(\243)2504 3081 y FI(14)p 2504 3094 V 2519 3143 a(3)2586
3114 y FG(\243)2661 3081 y FI(3)p 2661 3094 31 5 v 2661
3143 a(5)2712 3114 y FG(\243)2787 3081 y FI(6)p 2787
3094 V 2787 3143 a(7)2838 3114 y FG(\243)2928 3081 y
FI(5)p 2913 3094 62 5 v 2913 3143 a(11)2998 3114 y FG(\306)p
1 0 0 TeXcolorrgb 3078 3081 a FI(11)p 0 TeXcolorgray
-1 w FH(\243)p FI(14)p FH(\243)p 1 0.5 0 TeXcolorrgb
FI(3)p 0 TeXcolorgray -1 w FH(\243)p 0 1 0 TeXcolorrgb
FI(6)p 0 TeXcolorgray FH(\243)p 0 0 1 TeXcolorrgb FI(5)p
0 TeXcolorgray 3078 3094 383 5 v 0 1 0 TeXcolorrgb 3093
3143 a(6)p 0 TeXcolorgray FH(\243)p 1 0.5 0 TeXcolorrgb
FI(3)p 0 TeXcolorgray -1 w FH(\243)p 0 0 1 TeXcolorrgb
FI(5)p 0 TeXcolorgray FH(\243)p FI(7)p FH(\243)p 1 0 0
TeXcolorrgb FI(11)p 0 TeXcolorgray 3484 3114 a FG(\306)3564
3081 y FI(14)p 3564 3094 62 5 v 3579 3143 a(7)3649 3114
y FG(\306)14 b FK(2)-246 3211 y
SDict begin H.S end
 -246 3211 a -246 3211
a
SDict begin 12 H.A end
 -246 3211 a -246 3211 a
SDict begin [/View [/XYZ H.V]/Dest (exo.77) cvn /DEST pdfmark end
 -246 3211 a 0 TeXcolorgray
100 x FL(Ex)o(er)o(cice)g(77)p 0 TeXcolorgray 41 w FK(On)j(r\351duit)h
(au)g(m\352me)g(d\351nominateur)h(:)1007 3604 y FB(S)f
FG(\306)1146 3548 y FK(1)p 1146 3585 41 5 v 1146 3661
a(2)1206 3604 y FG(\305)1281 3548 y FK(1)p 1281 3585
V 1281 3661 a(4)1342 3604 y FG(\305)1417 3548 y FK(1)p
1417 3585 V 1417 3661 a(6)1478 3604 y FG(\305)1553 3548
y FK(1)p 1553 3585 V 1553 3661 a(8)1613 3604 y FG(\305)1709
3548 y FK(1)p 1688 3585 82 5 v 1688 3661 a(10)1789 3604
y FG(\305)1885 3548 y FK(1)p 1865 3585 V 1865 3661 a(12)1066
3802 y FG(\306)1146 3746 y FK(1)10 b FG(\243)g FK(60)p
1146 3783 197 5 v 1146 3859 a(2)g FG(\243)g FK(60)1362
3802 y FG(\305)1438 3746 y FK(1)g FG(\243)g FK(30)p 1438
3783 V 1438 3859 a(4)g FG(\243)g FK(30)1654 3802 y FG(\305)1730
3746 y FK(1)g FG(\243)g FK(20)p 1730 3783 V 1730 3859
a(6)g FG(\243)g FK(20)1946 3802 y FG(\305)2022 3746 y
FK(1)g FG(\243)g FK(15)p 2022 3783 V 2022 3859 a(8)g
FG(\243)g FK(15)2238 3802 y FG(\305)2334 3746 y FK(1)g
FG(\243)g FK(12)p 2313 3783 238 5 v 2313 3859 a(10)g
FG(\243)g FK(12)2571 3802 y FG(\305)2666 3746 y FK(1)g
FG(\243)g FK(10)p 2646 3783 V 2646 3859 a(12)g FG(\243)g
FK(10)1066 4000 y FG(\306)1166 3944 y FK(60)p 1146 3981
122 5 v 1146 4057 a(120)1287 4000 y FG(\305)1383 3944
y FK(30)p 1362 3981 V 1362 4057 a(120)1504 4000 y FG(\305)1599
3944 y FK(20)p 1579 3981 V 1579 4057 a(120)1721 4000
y FG(\305)1816 3944 y FK(15)p 1796 3981 V 1796 4057 a(120)1937
4000 y FG(\305)2033 3944 y FK(12)p 2012 3981 V 2012 4057
a(120)2154 4000 y FG(\305)2249 3944 y FK(10)p 2229 3981
V 2229 4057 a(120)1066 4198 y FG(\306)1146 4142 y FK(60)g
FG(\305)g FK(30)g FG(\305)g FK(20)g FG(\305)g FK(15)g
FG(\305)g FK(12)g FG(\305)g FK(10)p 1146 4179 863 5 v
1516 4255 a(120)2032 4198 y FG(\306)2111 4142 y FK(147)p
2111 4179 122 5 v 2132 4255 a(20)2243 4198 y(.)-246 4413
y(P)n(our)17 b(obtenir)h(1)d FG(\306)341 4381 y FI(120)p
341 4394 93 5 v 341 4442 a(120)443 4413 y FK(,)i(il)h(y)f(a)680
4381 y FI(27)p 664 4394 V 664 4442 a(120)784 4413 y FK(\253)d(en)j
(trop)d(\273,)j(c)n('est-\340-dir)o(e)1599 4381 y FI(15)p
1584 4394 V 1584 4442 a(120)1697 4413 y FG(\305)1787
4381 y FI(12)p 1772 4394 V 1772 4442 a(120)1874 4413
y FK(.)g(Il)g(faut)h(donc)f(enlever)h(les)h(ter)q(mes)f(corr)o
(espondants)f(:)25 4588 y(60)p 5 4625 122 5 v 5 4701
a(120)376 4644 y FG(\305)702 4588 y FK(30)p 682 4625
V 682 4701 a(120)1053 4644 y FG(\305)1379 4588 y FK(20)p
1359 4625 V 1359 4701 a(120)1730 4644 y FG(\305)2028
4710 y FA(\023)2091 4627 y(\023)2102 4612 y(\023)-136
b(S)2091 4695 y(S)2102 4710 y(S)2056 4588 y FK(15)p 2036
4625 V 2036 4701 a(120)2407 4644 y FG(\305)2705 4710
y FA(\023)2768 4627 y(\023)2779 4612 y(\023)g(S)2768
4695 y(S)2779 4710 y(S)2733 4588 y FK(12)p 2712 4625
V 2712 4701 a(120)3084 4644 y FG(\305)3410 4588 y FK(10)p
3389 4625 V 3389 4701 a(120)3775 4644 y FG(\306)15 b
FK(1)5 4794 y(1)p 5 4831 41 5 v 5 4908 a(2)376 4851 y
FG(\305)682 4794 y FK(1)p 682 4831 V 682 4908 a(4)1053
4851 y FG(\305)1359 4794 y FK(1)p 1359 4831 V 1359 4908
a(6)1730 4851 y FG(\305)2033 4916 y FA(\003)2054 4833
y(\003)2058 4818 y(\003)-46 b(C)2054 4901 y(C)2058 4916
y(C)2036 4794 y FK(1)p 2036 4831 V 2036 4908 a(8)2407
4851 y FG(\305)2708 4916 y FA(\001)2749 4833 y(\001)2757
4818 y(\001)-91 b(A)2749 4901 y(A)2757 4916 y(A)2733
4794 y FK(1)p 2712 4831 82 5 v 2712 4908 a(10)3084 4851
y FG(\305)3410 4794 y FK(1)p 3389 4831 V 3389 4908 a(12)3775
4851 y FG(\306)15 b FK(1.)-246 4986 y
SDict begin H.S end
 -246 4986 a -246
4986 a
SDict begin 12 H.A end
 -246 4986 a -246 4986 a
SDict begin [/View [/XYZ H.V]/Dest (exo.78) cvn /DEST pdfmark end
 -246 4986 a -246 4991
a
SDict begin H.S end
 -246 4991 a -246 4991 a
SDict begin 12 H.A end
 -246 4991 a -246 4991 a
SDict begin [/View [/XYZ H.V]/Dest (Item.209) cvn /DEST pdfmark end
 -246
4991 a 0 TeXcolorgray 79 x FL(Ex)o(er)o(cice)f(78)p 0
TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)j(\351cr)q(it)g(comme)h(somme)h(de)e(deux)h(fr)o(actions)g
(\351gyptiennes)h(:)1744 5226 y(3)p 1744 5263 41 5 v
1744 5340 a(4)1809 5283 y FG(\306)1888 5226 y FK(2)p
1888 5263 V 1888 5340 a(4)1948 5283 y FG(\305)2023 5226
y FK(1)p 2023 5263 V 2023 5340 a(4)2088 5283 y FG(\306)2167
5226 y FK(1)p 2167 5263 V 2167 5340 a(2)2228 5283 y FG(\305)2303
5226 y FK(1)p 2303 5263 V 2303 5340 a(4)2353 5283 y(.)-246
5418 y
SDict begin H.S end
 -246 5418 a -246 5418 a
SDict begin 12 H.A end
 -246 5418 a -246 5418
a
SDict begin [/View [/XYZ H.V]/Dest (Item.210) cvn /DEST pdfmark end
 -246 5418 a 0 TeXcolorgray -141 5497 a FK(2.)p 0 TeXcolorgray
43 w(On)e(cher)o(che)g(l)o('entier)i FB(n)j FK(tel)c(que)1878
5573 y(2)p 1878 5610 41 5 v 1878 5687 a(5)1943 5630 y
FG(\306)2022 5573 y FK(1)p 2022 5610 V 2022 5687 a(3)2083
5630 y FG(\305)2163 5573 y FK(1)p 2158 5610 52 5 v 2158
5687 a FB(n)2219 5630 y FK(.)p 0 TeXcolorgray 1909 5895
a(39)p 0 TeXcolorgray eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.40) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FK(C)o(ette)18 b(\351galit\351)h(se)e
(r\351\351cr)q(it)1762 -84 y(2)10 b FG(\243)g FK(3)p
1762 -47 157 5 v 1762 29 a(5)g FG(\243)g FK(3)1943 -28
y FG(\306)2022 -84 y FK(1)g FG(\243)g FK(5)p 2022 -47
V 2022 29 a(3)g FG(\243)g FK(5)2198 -28 y FG(\305)2279
-84 y FK(1)p 2273 -47 52 5 v 2273 29 a FB(n)2335 -28
y FK(,)-38 142 y(soit)1858 201 y(6)p 1838 238 82 5 v
1838 315 a(15)1943 258 y FG(\306)2042 201 y FK(5)p 2022
238 V 2022 315 a(15)2123 258 y FG(\305)2204 201 y FK(1)p
2198 238 52 5 v 2198 315 a FB(n)2260 258 y FK(.)-38 430
y(Il)17 b(est)h(clair)f(que)h FB(n)g FG(\306)d FK(15)j(convient,)h(et)f
(que)g(c)n('est)f(le)h(seul)h(nombr)o(e)e(qui)h(convienne)o(.)-246
462 y
SDict begin H.S end
 -246 462 a -246 462 a
SDict begin 12 H.A end
 -246 462 a -246 462 a
SDict begin [/View [/XYZ H.V]/Dest (Item.211) cvn /DEST pdfmark end
 -246
462 a -246 462 a
SDict begin H.S end
 -246 462 a -246 462 a
SDict begin 12 H.A end
 -246 462 a -246
462 a
SDict begin [/View [/XYZ H.V]/Dest (Item.212) cvn /DEST pdfmark end
 -246 462 a 0 TeXcolorgray -141 559 a FK(3.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w(On)f(a)g(int\351r\352t)h(\340)f(\253)d(par)q(tir)j(du)g(membr)o(e)
h(de)f(droite)d(\273)i(:)i(pour)f(tout)i(entier)h FB(a)h
FK(sup\351r)q(ieur)d(\340)f(1,)690 719 y(1)p 628 756
165 5 v 630 832 a FB(a)d FG(\305)c FK(1)813 775 y FG(\305)1001
719 y FK(1)p 888 756 267 5 v 890 832 a FB(a)t FK(\()r
FB(a)k FG(\305)c FK(1\))1179 775 y FG(\306)p 1 0 0 TeXcolorrgb
1349 719 a FB(a)p 0 TeXcolorgray 14 w FG(\243)g FK(1)p
1258 756 343 5 v 1 0 0 TeXcolorrgb 1260 832 a FB(a)p
0 TeXcolorgray 14 w FG(\243)g FK(\()r FB(a)k FG(\305)c
FK(1\))1620 775 y FG(\305)1808 719 y FK(1)p 1695 756
267 5 v 1697 832 a FB(a)t FK(\()r FB(a)k FG(\305)c FK(1\))2446
775 y(\(on)17 b(r\351duit)h(au)f(m\352me)i(d\351nominateur\))1179
982 y FG(\306)1369 926 y FB(a)p 1258 963 V 1260 1039
a(a)t FK(\()r FB(a)14 b FG(\305)c FK(1\))1545 982 y FG(\305)1733
926 y FK(1)p 1620 963 V 1622 1039 a FB(a)t FK(\()r FB(a)k
FG(\305)c FK(1\))1179 1186 y FG(\306)1301 1127 y FA(\030)1384
1107 y(\030)1399 1103 y(\030)1311 1130 y FB(a)k FG(\305)c
FK(1)p 1258 1167 V 1260 1243 a FB(a)t FK(\()1326 1240
y FA(\030)1408 1220 y(\030)1423 1216 y(\030)1336 1243
y FB(a)k FG(\305)c FK(1\))2446 1186 y(\(on)17 b(simpli\002e\))1179
1393 y FG(\306)1262 1337 y FK(1)p 1258 1374 49 5 v 1260
1450 a FB(a)1317 1393 y FK(.)145 1614 y(C'est)h(bien)g(l)o
('\351galit\351)h(attendue)o(.)-246 1647 y
SDict begin H.S end
 -246 1647
a -246 1647 a
SDict begin 12 H.A end
 -246 1647 a -246 1647 a
SDict begin [/View [/XYZ H.V]/Dest (Item.213) cvn /DEST pdfmark end
 -246 1647 a 0 TeXcolorgray
4 1743 a FK(\(b\))p 0 TeXcolorgray 41 w(On)e(utilise)i(la)e(question)i
(pr\351c\351dente)g(avec)g FB(a)f FG(\306)c FK(6)32 b(:)559
1902 y(1)p 559 1939 41 5 v 559 2015 a(6)624 1958 y FG(\306)761
1902 y FK(1)p 703 1939 157 5 v 703 2015 a(6)10 b FG(\305)g
FK(1)879 1958 y FG(\305)1059 1902 y FK(1)p 954 1939 251
5 v 954 2015 a(6\(6)g FG(\305)g FK(1\))559 2109 y(1)p
559 2146 41 5 v 559 2223 a(6)624 2166 y FG(\306)703 2109
y FK(1)p 703 2146 V 703 2223 a(7)763 2166 y FG(\305)859
2109 y FK(1)p 838 2146 82 5 v 838 2223 a(42)1619 2166
y(\(\351cr)q(itur)o(e)16 b(de)2045 2109 y(1)p 2045 2146
41 5 v 2045 2223 a(6)2112 2166 y(comme)j(somme)f(de)f(deux)h(fr)o
(actions)g(\351gyptiennes\))r(.)-246 2306 y
SDict begin H.S end
 -246 2306
a -246 2306 a
SDict begin 12 H.A end
 -246 2306 a -246 2306 a
SDict begin [/View [/XYZ H.V]/Dest (exo.79) cvn /DEST pdfmark end
 -246 2306 a 0 TeXcolorgray
82 x FL(Ex)o(er)o(cice)c(79)p 0 TeXcolorgray 41 w FK(La)k(mo)n(yenne)f
(har)q(monique)i(de)e(deux)h(nombr)o(es)f(str)q(ictement)i(positifs)i
FB(a)g FK(et)d FB(b)j FK(est)d(le)g(nombr)o(e)f FB(h)22
b FK(d\351\002ni)17 b(par)34 b(:)1769 2605 y FB(h)19
b FG(\306)1987 2549 y FK(2)p 1913 2586 188 5 v 1926 2638
a FI(1)p 1923 2651 38 5 v 1924 2700 a Fw(a)1980 2671
y FG(\305)2058 2638 y FI(1)p 2055 2651 36 5 v 2055 2700
a Fw(b)2111 2605 y FK(.)-246 2769 y
SDict begin H.S end
 -246 2769 a -246
2769 a
SDict begin 12 H.A end
 -246 2769 a -246 2769 a
SDict begin [/View [/XYZ H.V]/Dest (Item.214) cvn /DEST pdfmark end
 -246 2769 a -246 2769
a
SDict begin H.S end
 -246 2769 a -246 2769 a
SDict begin 12 H.A end
 -246 2769 a -246 2769 a
SDict begin [/View [/XYZ H.V]/Dest (Item.215) cvn /DEST pdfmark end
 -246
2769 a 0 TeXcolorgray -141 2848 a FK(1.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w(La)e(mo)n(yenne)h(har)q
(monique)g(de)f(2)h(et)g(6)f(est)1614 3022 y(2)p 1546
3059 177 5 v 1556 3111 a FI(1)p 1556 3124 31 5 v 1556
3173 a(2)1607 3144 y FG(\305)1682 3111 y FI(1)p 1682
3124 V 1682 3173 a(6)1747 3078 y FG(\306)1894 3022 y
FK(2)p 1826 3059 177 5 v 1836 3111 a FI(3)p 1836 3124
31 5 v 1836 3173 a(6)1887 3144 y FG(\305)1962 3111 y
FI(1)p 1962 3124 V 1962 3173 a(6)2027 3078 y FG(\306)2111
3022 y FK(2)p 2106 3059 51 5 v 2116 3111 a FI(4)p 2116
3124 31 5 v 2116 3173 a(6)2181 3078 y FG(\306)d FK(2)c
FG(\243)2375 3022 y FK(6)p 2375 3059 41 5 v 2375 3135
a(4)2440 3078 y FG(\306)2519 3022 y FK(12)p 2519 3059
82 5 v 2540 3135 a(4)2624 3078 y FG(\306)15 b FK(3.)-246
3223 y
SDict begin H.S end
 -246 3223 a -246 3223 a
SDict begin 12 H.A end
 -246 3223 a -246 3223
a
SDict begin [/View [/XYZ H.V]/Dest (Item.216) cvn /DEST pdfmark end
 -246 3223 a 0 TeXcolorgray 4 3303 a FK(\(b\))p 0 TeXcolorgray
41 w(La)i(mo)n(yenne)h(har)q(monique)g(de)f(4)h(et)g(16)g(est)1513
3476 y(2)p 1429 3513 208 5 v 1439 3565 a FI(1)p 1439
3578 31 5 v 1439 3627 a(4)1490 3598 y FG(\305)1581 3565
y FI(1)p 1565 3578 62 5 v 1565 3627 a(16)1661 3532 y
FG(\306)1839 3476 y FK(2)p 1740 3513 239 5 v 1766 3565
a FI(4)p 1750 3578 62 5 v 1750 3627 a(16)1832 3598 y
FG(\305)1922 3565 y FI(1)p 1907 3578 V 1907 3627 a(16)2003
3532 y FG(\306)2102 3476 y FK(2)p 2082 3513 82 5 v 2107
3565 a FI(5)p 2092 3578 62 5 v 2092 3627 a(16)2187 3532
y FG(\306)d FK(2)10 b FG(\243)2382 3476 y FK(16)p 2382
3513 82 5 v 2403 3589 a(5)2488 3532 y FG(\306)2567 3476
y FK(32)p 2567 3513 V 2587 3589 a(5)2672 3532 y FG(\306)k
FK(6,)8 b(4.)-246 3677 y
SDict begin H.S end
 -246 3677 a -246 3677 a
SDict begin 12 H.A end
 -246
3677 a -246 3677 a
SDict begin [/View [/XYZ H.V]/Dest (Item.217) cvn /DEST pdfmark end
 -246 3677 a 0 TeXcolorgray -141 3757
a FK(2.)p 0 TeXcolorgray 43 w(U)m(n)18 b(cycliste)h(monte)g(une)g
(c\364te)f(de)g(7)g(km)h(\340)e(la)i(vitesse)h(mo)n(yenne)e(de)g(14)h
(km/h.)g(Arr)q(iv\351)e(en)i(haut,)g(il)f(fait)h(demi-tour)g(et)f(r)o
(edescend)g(la)g(c\364te)-38 3856 y(\340)f(la)g(vitesse)j(mo)n(yenne)d
(de)h(35)g(km/h.)-246 3919 y
SDict begin H.S end
 -246 3919 a -246 3919 a
SDict begin 12 H.A end

-246 3919 a -246 3919 a
SDict begin [/View [/XYZ H.V]/Dest (Item.218) cvn /DEST pdfmark end
 -246 3919 a 0 TeXcolorgray 10
4014 a FK(\(a\))p 0 TeXcolorgray 41 w(On)f(compl\350te)i(deux)e
(tableaux)h(de)g(propor)q(tionnalit\351)g(\(on)g(tr)o(availle)g(en)g(h)
f(et)h(en)g(km\))f(:)p 0 TeXcolorgray 0 TeXcolorgray
619 4134 1011 4 v 619 4233 4 100 v 742 4204 a(temps)i(\(en)e(h\))p
1298 4233 V 194 w(1)p 1482 4233 V 133 w(?)p 1626 4233
V 619 4237 1011 4 v 619 4336 4 100 v 672 4307 a(distance)h(\(en)f(km\))
p 1298 4336 V 104 w(14)p 1482 4336 V 104 w(7)p 1626 4336
V 619 4340 1011 4 v 0 TeXcolorgray 0 TeXcolorgray 2661
4134 V 2661 4233 4 100 v 2784 4204 a(temps)i(\(en)f(h\))p
3341 4233 V 193 w(1)p 3525 4233 V 133 w(?)p 3668 4233
V 2661 4237 1011 4 v 2661 4336 4 100 v 2714 4307 a(distance)g(\(en)f
(km\))p 3341 4336 V 104 w(35)p 3525 4336 V 104 w(7)p
3668 4336 V 2661 4340 1011 4 v 145 4512 a(Le)g(cycliste)h(met)681
4479 y FI(1)p FH(\243)p FI(7)p 681 4492 104 5 v 702 4541
a(14)809 4512 y FG(\306)929 4502 y FA(\003)924 4479 y
FI(7)p 888 4492 V 888 4558 a(2)p FH(\243)966 4580 y FA(\003)961
4558 y FI(7)1015 4512 y FG(\306)1094 4479 y FI(1)p 1094
4492 31 5 v 1094 4541 a(2)1149 4512 y FG(\306)c FK(0,)8
b(5)19 b(h)f(pour)f(monter)h(la)g(c\364te)o(,)f(puis)2304
4479 y FI(1)p FH(\243)p FI(7)p 2304 4492 104 5 v 2325
4541 a(35)2431 4512 y FG(\306)2552 4502 y FA(\003)2547
4479 y FI(7)p 2510 4492 V 2510 4558 a(5)p FH(\243)2588
4580 y FA(\003)2583 4558 y FI(7)2638 4512 y FG(\306)2717
4479 y FI(1)p 2717 4492 31 5 v 2717 4541 a(5)2772 4512
y FG(\306)d FK(0,)8 b(2)19 b(h)e(pour)h(la)f(descendr)o(e)o(.)-246
4575 y
SDict begin H.S end
 -246 4575 a -246 4575 a
SDict begin 12 H.A end
 -246 4575 a -246 4575
a
SDict begin [/View [/XYZ H.V]/Dest (Item.219) cvn /DEST pdfmark end
 -246 4575 a 0 TeXcolorgray 4 4655 a FK(\(b\))p 0 TeXcolorgray
41 w(A)n(u)g(total,)h(le)g(cycliste)f(a)g(par)o(cour)q(u)g(7)10
b FG(\305)g FK(7)15 b FG(\306)g FK(14)j(km)f(en)h(0,)8
b(5)i FG(\305)g FK(0,)e(2)17 b FG(\306)e FK(0,)8 b(7)18
b(h.)g(On)f(calcule)h(sa)g(vitesse)h(mo)n(yenne)f(:)p
0 TeXcolorgray 0 TeXcolorgray 1630 4744 1031 4 v 1630
4843 4 100 v 1753 4813 a(temps)h(\(en)e(h\))p 2309 4843
V 173 w(0,7)p 2514 4843 V 105 w(1)p 2657 4843 V 1630
4847 1031 4 v 1630 4946 4 100 v 1683 4916 a(distance)h(\(en)f(km\))p
2309 4946 V 114 w(14)p 2514 4946 V 123 w(?)p 2657 4946
V 1630 4950 1031 4 v 145 5088 a(La)27 b(distance)i(par)o(cour)q(ue)e
(par)g(le)h(cycliste)g(en)g(1)g(h)g(est)1868 5055 y FI(1)p
FH(\243)p FI(14)p 1868 5068 135 5 v 1897 5116 a(0,7)2036
5088 y FG(\306)2126 5055 y FI(140)p 2126 5068 93 5 v
2156 5116 a(7)2252 5088 y FG(\306)d FK(20)j(km,)g(donc)g(sa)f(vitesse)j
(mo)n(yenne)e(sur)g(l)o('ensemble)i(du)145 5187 y(par)o(cours)17
b(est)h(de)f(20)h(km/h.)-246 5219 y
SDict begin H.S end
 -246 5219 a -246
5219 a
SDict begin 12 H.A end
 -246 5219 a -246 5219 a
SDict begin [/View [/XYZ H.V]/Dest (Item.220) cvn /DEST pdfmark end
 -246 5219 a 0 TeXcolorgray
12 5316 a FK(\(c\))p 0 TeXcolorgray 41 w(V\351r)q(i\002ons)f(que)h(la)g
(mo)n(yenne)f(har)q(monique)i(de)e(14)h(et)g(35)g(est)g(\351gale)g
(\340)f(20)h(:)1527 5490 y(2)p 1428 5527 239 5 v 1453
5579 a FI(1)p 1438 5592 62 5 v 1438 5640 a(14)1520 5612
y FG(\305)1610 5579 y FI(1)p 1595 5592 V 1595 5640 a(35)1690
5546 y FG(\306)1868 5490 y FK(2)p 1770 5527 239 5 v 1795
5579 a FI(5)p 1780 5592 62 5 v 1780 5640 a(70)1861 5612
y FG(\305)1952 5579 y FI(2)p 1936 5592 V 1936 5640 a(70)2032
5546 y FG(\306)2132 5490 y FK(2)p 2111 5527 82 5 v 2136
5579 a FI(7)p 2121 5592 62 5 v 2121 5640 a(70)2217 5546
y FG(\306)2316 5490 y FK(2)p 2296 5527 82 5 v 2321 5579
a FI(1)p 2306 5592 62 5 v 2306 5640 a(10)2402 5546 y
FG(\306)c FK(2)c FG(\243)2597 5490 y FK(10)p 2597 5527
82 5 v 2617 5603 a(1)2702 5546 y FG(\306)k FK(20.)p 0
TeXcolorgray 1909 5895 a(40)p 0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.41) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.221) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(3.)p 0 TeXcolorgray 43 w(On)17 b(note)h FB(d)25
b FK(la)17 b(longueur)h(de)g(la)f(c\364te)o(,)i FB(v)1146
-151 y FI(1)1198 -163 y FK(la)f(vitesse)h(du)e(cycliste)h(en)f
(mont\351e)o(,)k FB(v)2360 -151 y FI(2)2412 -163 y FK(sa)c(vitesse)j
(en)d(descente)o(.)-38 -15 y(Gr\342ce)f(\340)i(la)f(for)q(mule)j
FB(t)i FG(\306)740 -47 y Fw(d)p 740 -34 40 5 v 743 14
a(v)789 -15 y FK(,)c(on)f(voit)h(que)g(:)p 0 TeXcolorgray
7 94 a(\225)p 0 TeXcolorgray 42 w(le)g(temps)g(de)g(mont\351e)g(est)i
FB(t)922 106 y FI(1)972 94 y FG(\306)1062 61 y Fw(d)p
1051 74 63 5 v 1052 123 a(v)1085 132 y Fi(1)1140 94 y
FK(;)p 0 TeXcolorgray 7 217 a(\225)p 0 TeXcolorgray 42
w(le)e(temps)g(de)g(descente)g(est)i FB(t)964 229 y FI(2)1013
217 y FG(\306)1104 184 y Fw(d)p 1092 197 V 1093 245 a(v)1126
254 y Fi(2)1165 217 y FK(.)-38 334 y(Donc)f(au)h(total,)g(le)h
(cycliste)e(a)h(par)o(cour)q(u)f(la)h(distance)g FB(D)j
FG(\306)16 b FB(d)j FG(\305)11 b FB(d)24 b FG(\306)16
b FK(2)p FB(d)7 b FK(,)21 b(en)f(un)g(temps)i FB(T)28
b FG(\306)19 b FB(t)2806 346 y FI(1)2852 334 y FG(\305)13
b FB(t)2948 346 y FI(2)3000 334 y FG(\306)3092 301 y
Fw(d)p 3081 314 V 3082 363 a(v)3115 372 y Fi(1)3165 334
y FG(\305)3252 301 y Fw(d)p 3241 314 V 3242 363 a(v)3275
372 y Fi(2)3313 334 y FK(.)20 b(S)o(a)f(vitesse)j(mo)n(yenne)e(est)-38
434 y(donc)1350 568 y FB(V)29 b FG(\306)1508 512 y FB(D)p
1508 549 65 5 v 1511 625 a(T)1596 568 y FG(\306)1749
512 y FK(2)p FB(d)p 1675 549 241 5 v 1697 606 a Fw(d)p
1685 619 63 5 v 1686 667 a(v)1719 676 y Fi(1)1768 639
y FG(\305)1854 606 y Fw(d)p 1843 619 V 1844 667 a(v)1877
676 y Fi(2)1940 568 y FG(\306)2154 512 y FK(2)2189 526
y FA(\023)2194 512 y FB(d)p 2019 549 364 5 v 2014 666
a FA(\023)2019 653 y FB(d)2079 566 y Ft(\263)2137 620
y FI(1)p 2121 633 63 5 v 2122 681 a Fw(v)2155 690 y Fi(1)2203
653 y FG(\305)2294 620 y FI(1)p 2278 633 V 2279 681 a
Fw(v)2312 690 y Fi(2)2351 566 y Ft(\264)2406 568 y FG(\306)2585
512 y FK(2)p 2486 549 241 5 v 2511 601 a FI(1)p 2496
614 63 5 v 2497 663 a Fw(v)2530 672 y Fi(1)2578 634 y
FG(\305)2669 601 y FI(1)p 2653 614 V 2654 663 a Fw(v)2687
672 y Fi(2)2736 568 y FK(.)-38 798 y(Il)17 b(s)m('agit)g(bien)h(de)f
(la)h(mo)n(yenne)f(har)q(monique)i(de)g FB(v)1512 810
y FI(1)1564 798 y FK(et)g FB(v)1691 810 y FI(2)1726 798
y FK(.)-38 946 y FL(R)o(emarque)14 b(:)19 b FK(U)m(ne)g(err)o(eur)e
(fr\351quente)j(est)f(de)e(croir)o(e)g(que)i(si)g(on)f(monte)h(\340)f
(la)g(vitesse)k FB(v)2583 958 y FI(1)2636 946 y FK(et)c(que)h(l)o('on)g
(r)o(edescend)f(\340)g(la)g(vitesse)k FB(v)3825 958 y
FI(2)3860 946 y FK(,)c(alors)g(la)-38 1046 y(vitesse)f(mo)n(yenne)e
(sur)h(l)o('ensemble)h(du)e(par)o(cours)g(est)1617 1008
y Fw(v)1650 1017 y Fi(1)1678 1008 y FH(\305)q Fw(v)1754
1017 y Fi(2)p 1616 1027 167 5 v 1684 1075 a FI(2)1792
1046 y FK(.)h(C'est)g(la)f(for)q(mule)h(de)f(la)g(mo)n(yenne)h(que)f
(vous)h(utilisez)g(habituellement)j(\(on)-38 1146 y(l)o('appelle)k
(\253)15 b(mo)n(yenne)21 b(ar)q(ithm\351tique)c(\273)41
b(de)22 b FB(v)1365 1158 y FI(1)1421 1146 y FK(et)h FB(v)1552
1158 y FI(2)1586 1146 y FK(\),)e(mais)h(elle)f(n)-6 b('est)22
b(pas)f(adapt\351e)h(ici.)f(C'est)h(facile)g(\340)e(compr)o(endr)o(e)g
(intuitivement)k(:)-38 1245 y(comme)15 b(on)f(passe)h(g\351n\351r)o
(alement)h(plus)g(de)d(temps)j(\340)e(monter)-5 b(,)15
b(la)f(vitesse)i(en)f(mont\351e)g(a)f(plus)h(d)n('impor)q(tance)g(que)g
(la)f(vitesse)i(en)f(descente)-38 1345 y(et)j(la)f(mo)n(yenne)h(ar)q
(ithm\351tique)h(\(qui)f(attr)q(ibue)f(une)h(impor)q(tance)g(\351gale)g
(\340)h FB(v)2256 1357 y FI(1)2308 1345 y FK(et)h FB(v)2436
1357 y FI(2)2470 1345 y FK(\))d(ne)h(convient)h(pas)o(.)-246
1461 y
SDict begin H.S end
 -246 1461 a -246 1461 a
SDict begin 12 H.A end
 -246 1461 a -246 1461
a
SDict begin [/View [/XYZ H.V]/Dest (exo.80) cvn /DEST pdfmark end
 -246 1461 a 0 TeXcolorgray 105 x FL(Ex)o(er)o(cice)14
b(80)p 0 TeXcolorgray 41 w FK(L)-10 b('id\351e)22 b(consiste)g(\340)e
(\253)15 b(par)q(tir)20 b(d)n('en)h(bas)f(\340)g(droite)15
b(\273,)20 b(puis)i(\340)e(\253)15 b(r)o(emonter)g(\273)40
b(dans)21 b(la)g(fr)o(action.)g(P)m(ar)f(exemple)o(,)i(dans)f(1)11
b FG(\305)3883 1534 y FI(1)p 3763 1547 272 5 v 3763 1607
a(2)p FH(\305)3923 1582 y Fi(1)p 3846 1592 179 4 v 3846
1646 a(2)p Fc(\305)3952 1626 y Fi(1)p 3913 1634 102 3
v 3913 1687 a(2)p Fc(\305)3980 1668 y Fi(1)p 3980 1676
25 3 v 3980 1709 a(2)4044 1566 y FK(,)21 b(le)-246 1789
y(pr)o(emier)d(calcul)g(\340)f(effectuer)i(est)f(le)g(2)10
b FG(\305)969 1756 y FI(1)p 969 1769 31 5 v 969 1818
a(2)1027 1789 y FK(tout)18 b(en)g(bas)f(\340)g(droite)o(.)-246
1927 y(P)m(ar)23 b(ailleurs)o(,)i(on)e(fer)o(a)h(bien)f(attention)i(d)n
('\351cr)q(ir)o(e)d(les)i(barr)o(es)e(de)h(fr)o(actions)h(sur)g(toute)g
(la)f(largeur)f(n\351cessair)o(e)o(,)i(sans)g(oublier)g(aucun)f(ter)q
(me)h(de)-246 2027 y(l)o('expr)o(ession.)e(P)m(ar)d(exemple)o(,)j(pour)
e(commencer)g(le)g(pr)o(emier)g(calcul,)h(il)f(faut)g(obligatoir)o
(ement)h(\351cr)q(ir)o(e)d(la)i(grosse)f(expr)o(ession)i(1)11
b FG(\305)3879 1994 y FI(1)p 3759 2007 272 5 v 3759 2068
a(1)p FH(\305)3918 2043 y Fi(1)p 3841 2053 179 4 v 3841
2107 a(1)p Fc(\305)3947 2087 y Fi(1)p 3908 2095 102 3
v 3908 2148 a(1)p Fc(\305)3976 2129 y Fi(1)p 3976 2137
25 3 v 3976 2170 a(1)4059 2027 y FK(en)-246 2235 y(entier)19
b(\226)e(sinon)h(c)n('est)g(faux)9 b(!)-246 2374 y(En\002n,)27
b(il)g(est)g(agr\351able)g(de)f(r)o(emarquer)g(que)1187
2341 y FI(1)p 1177 2354 50 5 v 1188 2381 a Fh(a)p 1187
2391 30 4 v 1188 2429 a(b)1260 2374 y FG(\306)d FK(1)14
b FG(\243)1472 2341 y Fw(b)p 1471 2354 38 5 v 1472 2402
a(a)1542 2374 y FG(\306)1631 2341 y Fw(b)p 1630 2354
V 1631 2402 a(a)1727 2374 y FK(:)27 b(pour)g(inverser)g(une)g(fr)o
(action,)h(il)f(suf\002t)g(d)n('inter)q(ver)q(tir)h(le)f(num\351r)o
(ateur)h(et)f(le)-246 2495 y(d\351nominateur)-5 b(.)20
b(La)d(situation)i(se)f(pr\351senter)o(a)h(constamment)h(dans)d(les)h
(calculs)g(ci-dessous)o(.)70 2804 y(1)10 b FG(\305)340
2748 y FK(1)p 195 2785 330 5 v 195 2870 a(1)g FG(\305)403
2837 y FI(1)p 321 2850 195 5 v 321 2910 a(1)p FH(\305)442
2886 y Fi(1)p 404 2896 102 4 v 404 2949 a(1)p Fc(\305)471
2930 y Fi(1)p 471 2938 25 3 v 471 2971 a(1)549 2804 y
FG(\306)k FK(1)c FG(\305)879 2748 y FK(1)p 744 2785 310
5 v 744 2870 a(1)g FG(\305)941 2837 y FI(1)p 870 2850
175 5 v 870 2910 a(1)p FH(\305)981 2886 y Fi(1)p 952
2896 82 4 v 952 2932 a(1)p Fc(\305)p Fi(1)1078 2804 y
FG(\306)k FK(1)c FG(\305)1386 2748 y FK(1)p 1273 2785
266 5 v 1273 2870 a(1)g FG(\305)1448 2837 y FI(1)p 1399
2850 131 5 v 1409 2886 a Fi(2)p 1409 2896 25 4 v 1409
2932 a(2)1443 2910 y FH(\305)1495 2886 y Fi(1)p 1495
2896 V 1495 2932 a(2)1563 2804 y FG(\306)k FK(1)c FG(\305)1828
2748 y FK(1)p 1758 2785 180 5 v 1758 2870 a(1)g FG(\305)1890
2837 y FI(1)p 1884 2850 45 5 v 1894 2886 a Fi(3)p 1894
2896 25 4 v 1894 2932 a(2)1962 2804 y FG(\306)k FK(1)c
FG(\305)2220 2748 y FK(1)p 2157 2785 167 5 v 2157 2870
a(1)g FG(\305)2283 2837 y FI(2)p 2283 2850 31 5 v 2283
2898 a(3)2348 2804 y FG(\306)k FK(1)c FG(\305)2610 2748
y FK(1)p 2542 2785 177 5 v 2552 2837 a FI(3)p 2552 2850
31 5 v 2552 2898 a(3)2603 2870 y FG(\305)2678 2837 y
FI(2)p 2678 2850 V 2678 2898 a(3)2743 2804 y FG(\306)k
FK(1)c FG(\305)2943 2748 y FK(1)p 2938 2785 51 5 v 2948
2837 a FI(5)p 2948 2850 31 5 v 2948 2898 a(3)3013 2804
y FG(\306)k FK(1)c FG(\305)3208 2748 y FK(3)p 3208 2785
41 5 v 3208 2861 a(5)3273 2804 y FG(\306)3352 2748 y
FK(5)p 3352 2785 V 3352 2861 a(5)3412 2804 y FG(\305)3487
2748 y FK(3)p 3487 2785 V 3487 2861 a(5)3552 2804 y FG(\306)3631
2748 y FK(8)p 3631 2785 V 3631 2861 a(5)70 3112 y(1)g
FG(\305)340 3056 y FK(1)p 195 3092 330 5 v 195 3177 a(2)g
FG(\305)403 3145 y FI(1)p 321 3158 195 5 v 321 3218 a(2)p
FH(\305)442 3193 y Fi(1)p 404 3203 102 4 v 404 3257 a(2)p
Fc(\305)471 3237 y Fi(1)p 471 3245 25 3 v 471 3279 a(2)549
3112 y FG(\306)k FK(1)c FG(\305)899 3056 y FK(1)p 744
3092 350 5 v 744 3177 a(2)g FG(\305)961 3145 y FI(1)p
870 3158 214 5 v 870 3218 a(2)p FH(\305)1001 3193 y Fi(1)p
952 3203 122 4 v 962 3237 a(4)p 962 3245 25 3 v 962 3279
a(2)997 3257 y Fc(\305)1039 3237 y Fi(1)p 1039 3245 V
1039 3279 a(2)1118 3112 y FG(\306)k FK(1)c FG(\305)1429
3056 y FK(1)p 1313 3092 273 5 v 1313 3177 a(2)g FG(\305)1491
3145 y FI(1)p 1438 3158 137 5 v 1438 3218 a(2)p FH(\305)1531
3193 y Fi(1)p 1521 3203 45 4 v 1531 3237 a(5)p 1531 3245
25 3 v 1531 3279 a(2)1609 3112 y FG(\306)k FK(1)c FG(\305)1929
3056 y FK(1)p 1804 3092 291 5 v 1804 3177 a(2)g FG(\305)1992
3145 y FI(1)p 1930 3158 155 5 v 1940 3193 a Fi(10)p 1940
3203 49 4 v 1952 3240 a(5)1998 3218 y FH(\305)2050 3193
y Fi(2)p 2050 3203 25 4 v 2050 3240 a(5)2119 3112 y FG(\306)k
FK(1)c FG(\305)2395 3056 y FK(1)p 2314 3092 205 5 v 2314
3177 a(2)g FG(\305)2458 3145 y FI(1)p 2439 3158 69 5
v 2449 3193 a Fi(12)p 2449 3203 49 4 v 2461 3240 a(5)2542
3112 y FG(\306)k FK(1)c FG(\305)2836 3056 y FK(1)p 2737
3092 239 5 v 2747 3145 a FI(24)p 2747 3158 62 5 v 2747
3206 a(12)2828 3177 y FG(\305)2919 3145 y FI(5)p 2904
3158 V 2904 3206 a(12)2999 3112 y FG(\306)k FK(1)c FG(\305)3215
3056 y FK(1)p 3194 3092 82 5 v 3204 3145 a FI(29)p 3204
3158 62 5 v 3204 3206 a(12)3300 3112 y FG(\306)3379 3056
y FK(29)p 3379 3092 82 5 v 3379 3169 a(29)3480 3112 y
FG(\305)3555 3056 y FK(12)p 3555 3092 V 3555 3169 a(29)3660
3112 y FG(\306)3739 3056 y FK(41)p 3739 3092 V 3739 3169
a(29)-246 3433 y FL(R)o(emarques)k(:)p 0 TeXcolorgray
-76 3533 a FK(\225)p 0 TeXcolorgray 42 w(Il)i(y)g(a)h(un)g(lien)h(entr)
o(e)f(le)g(pr)o(emier)g(calcul)h(et)f(la)g(suite)h(de)f(F)o(ibonacci)g
(:)g(1,)g(1,)h(2,)f(3,)h(5,)f(8,)h(13,)g(...,)f(dont)g(chaque)h(ter)q
(me)f(s)m('obtient)h(en)g(faisant)f(la)-3 3632 y(somme)i(des)e(deux)h
(pr\351c\351dents)g(:)f(1)10 b FG(\305)g FK(1)16 b FG(\306)e
FK(2,)k(1)10 b FG(\305)g FK(2)15 b FG(\306)g FK(3,)j(2)10
b FG(\305)g FK(3)15 b FG(\306)f FK(5,)k(3)10 b FG(\305)g
FK(5)16 b FG(\306)e FK(8,)k(8)10 b FG(\305)g FK(5)15
b FG(\306)f FK(13,)19 b(etc)o(.)p 0 TeXcolorgray -76
3732 a(\225)p 0 TeXcolorgray 42 w(On)24 b(pourr)o(ait)h(poursuivr)o(e)g
(la)g(fr)o(action)g(jusqu)n('\340)g(l)o('in\002ni)h(:)e(1)13
b FG(\305)2042 3699 y FI(1)p 1915 3712 286 5 v 1915 3773
a(1)p FH(\305)2082 3748 y Fi(1)p 1998 3758 193 4 v 1998
3812 a(1)p Fc(\305)2111 3792 y Fi(1)p 2065 3800 116 3
v 2065 3853 a(1)p Fc(\305)2139 3833 y Fi(1)p 2132 3841
39 3 v 2132 3870 a Fc(\242\242\242)2210 3732 y FK(.)25
b(Plus)f(on)g(avance)o(,)h(plus)g(on)f(se)h(r)o(approche)g(du)f(nombr)o
(e)g(d)n('or)-3 3969 y FD(\301)14 b FG(\306)143 3934
y FI(1)p FH(\305)216 3885 y(p)p 264 3885 31 4 v 49 x
FI(5)p 143 3950 152 5 v 204 3998 a(2)319 3969 y FG(\274)g
FK(1,)8 b(618.)p 0 TeXcolorgray -76 4080 a(\225)p 0 TeXcolorgray
42 w(On)23 b(pourr)o(ait)h(aussi)h(poursuivr)o(e)g(la)e(deuxi\350me)i
(fr)o(action)f(jusqu)n('\340)h(l)o('in\002ni)g(:)e(1)13
b FG(\305)2597 4047 y FI(1)p 2470 4060 286 5 v 2470 4121
a(2)p FH(\305)2637 4096 y Fi(1)p 2552 4106 193 4 v 2552
4160 a(2)p Fc(\305)2665 4140 y Fi(1)p 2620 4148 116 3
v 2620 4201 a(2)p Fc(\305)2694 4181 y Fi(1)p 2687 4189
39 3 v 2687 4218 a Fc(\242\242\242)2765 4080 y FK(.)24
b(Dans)e(ce)i(cas)o(,)g(on)f(se)h(r)o(approche)g(de)3966
4015 y FG(p)p 4030 4015 41 5 v 65 x FK(2)d FG(\274)-3
4278 y FK(1,)8 b(414.)p 0 TeXcolorgray -76 4377 a(\225)p
0 TeXcolorgray 42 w(C)o(es)21 b(\253)15 b(fr)o(actions)21
b(in\002nies)16 b(\273)41 b(sont)22 b(\351tudi\351es)g(par)e(les)i
(math\351maticiens)h(depuis)f(longtemps)9 b(;)23 b(leur)e(nom)g
(of\002ciel)g(est)h(\253)14 b(fr)o(actions)22 b(conti-)-3
4477 y(nues)14 b(\273.)-246 4535 y
SDict begin H.S end
 -246 4535 a -246 4535
a
SDict begin 12 H.A end
 -246 4535 a -246 4535 a
SDict begin [/View [/XYZ H.V]/Dest (exo.81) cvn /DEST pdfmark end
 -246 4535 a -246 4550 a
SDict begin H.S end
 -246
4550 a -246 4550 a
SDict begin 12 H.A end
 -246 4550 a -246 4550 a
SDict begin [/View [/XYZ H.V]/Dest (Item.222) cvn /DEST pdfmark end
 -246 4550
a 0 TeXcolorgray 109 x FL(Ex)o(er)o(cice)g(81)p 0 TeXcolorgray
0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray 43 w(P)n(our)j(\253)d
(isoler)g(\273)34 b FB(d)7 b FK(,)18 b(on)g(par)q(t)f(de)g(l)o
('\351galit\351)k FB(v)g FG(\306)1792 4627 y Fw(d)p 1792
4640 40 5 v 1799 4688 a(t)1842 4659 y FK(,)c(dont)h(on)f(multiplie)j
(les)e(deux)g(membr)o(es)g(par)h FB(t)39 b FK(:)1833
4865 y FB(v)17 b FG(\243)p 1 0 0 TeXcolorrgb 12 w FB(t)p
0 TeXcolorgray 22 w FG(\306)2083 4809 y FB(d)p 2083 4846
53 5 v 2089 4942 a FA(\001)2093 4924 y FB(t)2156 4865
y FG(\243)2218 4884 y FA(\001)p 1 0 0 TeXcolorrgb 2223
4865 a FB(t)p 0 TeXcolorgray 8 w FK(.)-38 5046 y(Les)j
FB(t)25 b FK(se)18 b(simpli\002ent)h(dans)f(le)f(membr)o(e)h(de)f
(droite)g(:)h(on)f(obtient)j FB(v)d FG(\243)12 b FB(t)22
b FG(\306)15 b FB(d)7 b FK(.)-38 5194 y(P)n(our)17 b(\253)d(isoler)g
(\273)36 b FB(t)8 b FK(,)17 b(on)h(r)o(epar)q(t)e(de)i(l)o
('\351galit\351)j FB(v)c FG(\243)12 b FB(t)22 b FG(\306)14
b FB(d)7 b FK(,)18 b(dont)f(on)h(divise)g(les)g(deux)g(membr)o(es)g
(par)h FB(v)38 b FK(:)1889 5359 y FA(\001)1888 5336 y
FB(v)17 b FG(\243)12 b FB(t)p 1886 5373 159 5 v 1945
5472 a FA(\001)p 1 0 0 TeXcolorrgb 1944 5449 a FB(v)p
0 TeXcolorgray 2069 5392 a FG(\306)2148 5336 y FB(d)p
2148 5373 53 5 v 1 0 0 TeXcolorrgb 2152 5449 a(v)p 0
TeXcolorgray 2211 5392 a FK(.)-38 5630 y(C)o(onclusion)19
b(:)46 b FB(d)22 b FG(\306)16 b FB(v)h FG(\243)12 b FB(t)p
412 5548 352 4 v 412 5657 4 111 v 760 5657 V 412 5659
352 4 v 573 w(t)22 b FG(\306)1427 5597 y Fw(d)p 1427
5610 40 5 v 1430 5658 a(v)p 1270 5529 236 4 v 1270 5686
4 159 v 1502 5686 V 1270 5688 236 4 v 0 TeXcolorgray
1909 5895 a FK(41)p 0 TeXcolorgray eop end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.42) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.223) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(par)q(t)g(de)g(l)o
('\351galit\351)e FB(U)23 b FG(\306)14 b FB(R)7 b(I)i
FK(,)20 b(dont)d(on)h(divise)g(les)g(deux)g(membr)o(es)g(par)f
FB(R)37 b FK(:)1871 24 y FB(U)p 1875 61 66 5 v 1 0 0
TeXcolorrgb 1880 137 a(R)p 0 TeXcolorgray 1965 80 a FG(\306)2030
39 y FA(\000)2044 24 y FB(R)16 b FG(\243)c FB(I)p 2044
61 169 5 v 2087 157 a FA(\000)p 1 0 0 TeXcolorrgb 2101
142 a FB(R)p 0 TeXcolorgray 2222 80 a FK(.)-38 298 y(C)o(onclusion)19
b(:)48 b FB(I)24 b FG(\306)569 265 y Fw(U)p 572 278 50
5 v 576 327 a(R)p 412 200 248 4 v 412 353 4 156 v 656
353 V 412 355 248 4 v -246 365 a
SDict begin H.S end
 -246 365 a -246 365
a
SDict begin 12 H.A end
 -246 365 a -246 365 a
SDict begin [/View [/XYZ H.V]/Dest (Item.224) cvn /DEST pdfmark end
 -246 365 a 0 TeXcolorgray -141
453 a FK(3.)p 0 TeXcolorgray 43 w FB(P)e FG(\306)10 b
FB(U)h(I)28 b FK(et)13 b FB(U)23 b FG(\306)14 b FB(R)7
b(I)29 b FK(donc)17 b FB(P)22 b FG(\306)46 b FB(U)894
488 y Ft(|{z})907 566 y FH(\306)p Fw(R)7 b(I)1042 453
y FB(I)24 b FG(\306)15 b FB(R)7 b(I)21 b FG(\243)12 b
FB(I)25 b FG(\306)14 b FB(R)7 b(I)1543 423 y FI(2)-38
690 y FK(C)o(onclusion)19 b(:)46 b FB(P)22 b FG(\306)14
b FB(R)7 b(I)669 660 y FI(2)p 412 596 324 4 v 412 716
4 123 v 731 716 V 412 718 324 4 v -38 840 a FL(R)o(emarque)13
b(:)18 b FK(Les)f(for)q(mules)i(des)e(questions)i(2)e(et)g(3)h(sont)f
(des)h(for)q(mules)g(sur)f(les)h(cir)o(cuits)f(\351lectr)q(iques)o(.)d
FB(U)25 b FK(d\351signe)18 b(la)f(tension)i(\(en)e(volts\),)-36
940 y FB(I)28 b FK(l)o('intensit\351)20 b(\(en)d(amp\350r)o(es\),)h
FB(R)23 b FK(la)18 b(r\351sistance)g(\(en)g(ohms\))g(et)g
FB(P)25 b FK(la)17 b(puissance)i(\(en)f(watts\).)-246
967 y
SDict begin H.S end
 -246 967 a -246 967 a
SDict begin 12 H.A end
 -246 967 a -246 967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.225) cvn /DEST pdfmark end
 -246
967 a 0 TeXcolorgray -141 1060 a FK(4.)p 0 TeXcolorgray
43 w(On)f(par)q(t)g(de)g(l)o('\351galit\351)k FB(v)g
FG(\306)764 994 y Ft(p)p 841 994 141 5 v 841 1060 a FK(2)r
FB(g)10 b(h)t FK(,)18 b(dont)f(on)h(\351l\350ve)g(les)g(deux)g(membr)o
(es)g(au)f(carr\351)g(:)1847 1266 y FB(v)1893 1232 y
FI(2)1942 1266 y FG(\306)2011 1173 y Ft(q)p 2087 1173
V 93 x FK(2)r FB(g)10 b(h)2228 1188 y FI(2)1847 1414
y FB(v)1893 1379 y FI(2)1942 1414 y FG(\306)k FK(2)r
FB(g)c(h)-38 1583 y FK(P)o(uis)18 b(on)f(divise)i(par)e(2)r
FB(g)42 b FK(:)1882 1770 y FB(v)1928 1740 y FI(2)p 1877
1807 91 5 v 1 0 0 TeXcolorrgb 1877 1883 a FK(2)r FB(g)p
0 TeXcolorgray 1991 1826 a FG(\306)2062 1794 y FA(\032)2085
1776 y(\032)2070 1770 y FK(2)r FB(g)10 b(h)p 2070 1807
141 5 v 2087 1907 a FA(\032)2111 1889 y(\032)p 1 0 0
TeXcolorrgb 2095 1883 a FK(2)r FB(g)p 0 TeXcolorgray
2221 1826 a FK(.)-38 2070 y(C)o(onclusion)19 b(:)46 b
FB(h)18 b FG(\306)586 2038 y Fw(v)621 2015 y Fi(2)p 584
2051 69 5 v 584 2099 a FI(2)q Fw(g)p 412 1959 279 4 v
412 2140 4 183 v 687 2140 V 412 2142 279 4 v -38 2258
a FL(R)o(emarque)c(:)k FK(Dans)f(ces)h(for)q(mules)o(,)k
FB(v)i FK(d\351signe)18 b(la)g(vitesse)i(\(en)e(m/s\))g(et)g
FB(h)k FK(la)c(distance)g(par)o(cour)q(ue)g(\(en)g(m\))f(par)h(un)g
(objet)g(en)h(chute)f(libr)o(e)o(,)-38 2357 y(en)13 b(supposant)g(qu)n
('il)g(n)-6 b('est)14 b(soum)q(is)g(qu)n('\340)g(son)g(propr)o(e)f(poi)
q(ds)g(\(on)h(sup)q(pose)g(en)g(p)q(ar)q(ticulier)f(q)q(u)n('il)h(n)-6
b('y)13 b(a)h(pas)g(de)f(f)q(rottemen)q(t\).)g(L)q(a)g(con)q(stante)-36
2457 y FB(g)27 b FK(d\351signe)17 b(l)o('acc\351l\351r)o(ation)j(de)d
(la)g(pesanteur)i(sur)f(la)f(terr)o(e)o(,)g(elle)h(vaut)g(environ)g(9,)
8 b(8.)-38 2567 y(Exemple)23 b(:)e(lorsqu)n('une)i(personne)g(chute)f
(d)n('une)h(hauteur)f(de)f(5)h(m,)g(sa)f(vitesse)j(\340)d(l)o('impact)i
(est)h FB(v)h FG(\306)3052 2501 y Ft(p)p 3128 2501 141
5 v 66 x FK(2)r FB(g)10 b(h)23 b FG(\274)3360 2507 y(p)p
3424 2507 341 5 v 60 x FK(2)10 b FG(\243)g FK(9,)e(8)i
FG(\243)g FK(5)21 b FG(\274)d FK(9,)8 b(9)23 b(m/s,)-38
2666 y(soit)18 b(environ)g(35,6)h(km/h.)-246 2688 y
SDict begin H.S end
 -246
2688 a -246 2688 a
SDict begin 12 H.A end
 -246 2688 a -246 2688 a
SDict begin [/View [/XYZ H.V]/Dest (Item.226) cvn /DEST pdfmark end
 -246 2688
a 0 TeXcolorgray -141 2787 a FK(5.)p 0 TeXcolorgray 43
w(On)e(par)q(t)g(de)g(l)o('\351galit\351)i FB(E)j FG(\306)14
b FB(m)t(c)883 2757 y FI(2)919 2787 y FK(,)j(et)h(l)o('on)g(divise)g(d)
n('abor)o(d)e(par)i FB(m)35 b FK(:)1891 2942 y FB(E)p
1881 2979 74 5 v 1 0 0 TeXcolorrgb 1881 3055 a(m)p 0
TeXcolorgray 1979 2998 a FG(\306)2050 2957 y FA(\032)2057
2952 y(\032)2058 2942 y FB(m)t(c)2171 2912 y FI(2)p 2058
2979 149 5 v 2087 3070 a FA(\032)2094 3065 y(\032)p 1 0 0
TeXcolorrgb 2095 3055 a FB(m)p 0 TeXcolorgray 2216 2998
a FK(.)-38 3265 y(On)17 b(obtient)h FB(c)391 3235 y FI(2)441
3265 y FG(\306)528 3232 y Fw(E)p 520 3245 57 5 v 520
3293 a(m)586 3265 y FK(,)g(d)n('o\371)46 b FB(c)20 b
FG(\306)948 3173 y Ft(q)p 1024 3173 77 5 v 1042 3232
a Fw(E)p 1034 3245 57 5 v 1034 3293 a(m)p 796 3139 332
4 v 796 3334 4 197 v 1125 3334 V 796 3336 332 4 v -38
3463 a FL(R)o(emarque)11 b(:)16 b FK(La)f(r)o(elation)g
FB(E)22 b FG(\306)14 b FB(m)t(c)1014 3433 y FI(2)1065
3463 y FK(est)h(due)g(\340)g(Einstein.)i(J)n(e)d(laisse)j(aux)e
(amateurs)h(de)f(physique)h(le)g(plaisir)g(de)f(se)g(r)o(enseigner)h
(\340)e(son)i(sujet.)-246 3606 y
SDict begin H.S end
 -246 3606 a -246 3606
a
SDict begin 12 H.A end
 -246 3606 a -246 3606 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -246 3606 a 130 x FM(6)105
b(\311)o(quations)23 b(de)g(dr)o(oites)-246 3845 y
SDict begin H.S end
 -246
3845 a -246 3845 a
SDict begin 12 H.A end
 -246 3845 a -246 3845 a
SDict begin [/View [/XYZ H.V]/Dest (exo.76) cvn /DEST pdfmark end
 -246 3845
a -246 3835 a
SDict begin H.S end
 -246 3835 a -246 3835 a
SDict begin 12 H.A end
 -246 3835 a -246
3835 a
SDict begin [/View [/XYZ H.V]/Dest (Item.227) cvn /DEST pdfmark end
 -246 3835 a 0 TeXcolorgray 85 x FL(Ex)o(er)o(cice)14
b(76)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(ace)g(la)h(droite)f FB(d)22
b FK(:)c FB(y)j FG(\306)14 b FK(0,)8 b(5)r FB(x)15 b
FG(\241)10 b FK(2)20 b(\340)d(par)q(tir)g(d)n('un)h(tableau)g(de)f
(valeurs)h(avec)g(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p
0 TeXcolorgray 0 TeXcolorgray 712 4025 551 4 v 712 4125
4 100 v 767 4095 a FB(x)p 862 4125 V 137 w FK(0)p 1060
4125 V 158 w(2)p 1259 4125 V 712 4128 551 4 v 712 4228
4 100 v 769 4198 a FB(y)p 862 4228 V 110 w FG(\241)p
FK(2)p 1060 4228 V 103 w FG(\241)p FK(1)p 1259 4228 V
712 4231 551 4 v 0 TeXcolorgray 2050 4261 9 240 v 0 TeXcolorgray
2861 4105 a(0,)8 b(5)i FG(\243)g FK(0)g FG(\241)g FK(2)17
b FG(\306)d(\241)p FK(2)2861 4229 y(0,)8 b(5)i FG(\243)g
FK(2)g FG(\241)g FK(2)17 b FG(\306)d(\241)p FK(1)-38
4426 y(On)j(place)h(les)g(deux)g(points)g(en)g(ver)q(t,)f(puis)i(on)e
(tr)o(ace)h(la)f(droite)g(de)g(la)h(m\352me)h(couleur)-5
b(.)p 0 TeXcolorgray 0 TeXcolorgray 825 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 295.90836 a add def
/d 0.0 a add neg def /h 138.84952 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 825 5646
a 1459 4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 219.65521 0.0 -76.25314 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 43.24829 0.0 -95.60123   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 219.65521  0 -76.25314  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.25314
 219.65521  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-95.60123  def /maxTickline 43.24829  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 43.24829
0.0 -95.60123   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 219.65521
0.0 -76.25314 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 43.24829  0 -95.60123  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -95.60123
 43.24829  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.25314  def /maxTickline 219.65521  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 43.24829
0.0 -95.60123   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 219.65521
0.0 -76.25314 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1444 4949 a FI(0)204
b(1)i(2)f(3)g(4)g(5)g(6)h(7)-1942 b FH(\241)p FI(1)-309
b FH(\241)p FI(2)1370 4871 y(0)1328 5108 y FH(\241)p
FI(1)1328 5344 y FH(\241)p FI(2)1328 5580 y FH(\241)p
FI(3)1370 4635 y(1)1459 4852 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.68 def /x1 7.72
def /dx x1 x sub 49 div def /F@pstplot ((-2.--0.5*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 1459 4852 a
tx@Dict begin { 172.42355 24.46938 } PutCoor PutBegin  end
 1459 4852 a 0 1 0 TeXcolorrgb
57 x FB(d)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852 a
tx@Dict begin { 30.729 -22.76227 } PutCoor PutBegin  end
 1459 4852 a 1 0 0
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459
4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852
a
tx@Dict begin { 116.08723 5.69046 } PutCoor PutBegin  end
 1459 4852 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
-85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1459 4852 a
tx@Dict begin { -54.62921 -79.66776 } PutCoor PutBegin  end
 1459 4852 a 0 0 1 TeXcolorrgb 1457 4851 a
FB(C)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 142.26372
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852 a
tx@Dict begin { 144.53998 34.1432 } PutCoor PutBegin  end
 1459 4852 a 1 0 0
TeXcolorrgb FB(E)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 56.90549
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 0.0 -56.90549
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3282 5646 a
currentpoint initclip moveto
 3282 5646 a 0 TeXcolorgray
1909 5895 a FK(42)p 0 TeXcolorgray eop end
%%Page: 43 43
TeXDict begin 43 42 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.43) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.228) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(D)o('apr\350s)18 b(le)h(cours)o(,)g(un)g
(point)i FB(M)960 -227 y Ft(\241)992 -163 y FB(x)1034
-151 y Fw(M)1098 -163 y FK(;)12 b FB(y)1170 -151 y Fw(M)1235
-227 y Ft(\242)1283 -163 y FK(appar)q(tient)19 b(\340)f
FB(d)26 b FK(si,)19 b(et)g(seulement)i(si,)i FB(y)2491
-151 y Fw(M)2570 -163 y FG(\306)16 b FK(0,)8 b(5)j FG(\243)i
FB(x)2870 -151 y Fw(M)2945 -163 y FG(\241)e FK(2.)19
b(P)m(ar)f(exemple)o(,)i FB(B)7 b FK(\()16 b(4)3634 -117
y Fw(x)3666 -107 y Fh(B)3704 -163 y FK(;)24 b(0)3735
-116 y Fw(y)3765 -106 y Fh(B)3803 -163 y FK(\))18 b(est)i(sur)e
FB(d)-38 -35 y FK(car)32 b(0)90 11 y Fw(y)120 21 y Fh(B)171
-35 y FG(\306)15 b FK(0,)8 b(5)i FG(\243)26 b FK(4)425
11 y Fw(x)457 21 y Fh(B)506 -35 y FG(\241)10 b FK(2.)-38
110 y(F)l(aisons)21 b(le)e(calcul)h(pour)f(chacun)g(des)h(points)g
(propos\351s)o(.)g(On)f(les)g(place)h(ensuite)h(en)e(bleu)h(sur)f(le)h
(gr)o(aphique)g(s)m('ils)g(sont)g(sur)f FB(d)7 b FK(,)20
b(en)f(rouge)-38 209 y(sinon.)606 485 y(P)n(oint)24 b
FB(A)s FK(\(1;)8 b FG(\241)p FK(1\))32 b(:)710 b FG(\241)10
b FK(1)15 b FG(6\306)f FK(0,)8 b(5)i FG(\243)g FK(1)g
FG(\241)g FK(2)756 b(donc)23 b FB(A)17 b FG(\335)d FB(d)606
609 y FK(P)n(oint)k FB(B)7 b FK(\(4;)h(0\))33 b(:)756
b(0)15 b FG(\306)f FK(0,)8 b(5)i FG(\243)g FK(4)g FG(\241)g
FK(2)831 b(donc)17 b FB(B)22 b FG(2)15 b FB(d)606 734
y FK(P)n(oint)h FB(C)9 b FK(\()p FG(\241)p FK(2;)f FG(\241)p
FK(3\))32 b(:)655 b FG(\241)10 b FK(3)15 b FG(\306)f
FK(0,)8 b(5)i FG(\243)g FK(\()p FG(\241)p FK(2\))g FG(\241)g
FK(2)647 b(donc)15 b FB(C)23 b FG(2)15 b FB(d)606 858
y FK(P)n(oint)j FB(E)8 b FK(\(5;)g(1\))32 b(:)758 b(1)15
b FG(6\306)f FK(0,)8 b(5)i FG(\243)g FK(5)g FG(\241)g
FK(2)831 b(donc)17 b FB(E)22 b FG(\335)14 b FB(d)-246
1077 y
SDict begin H.S end
 -246 1077 a -246 1077 a
SDict begin 12 H.A end
 -246 1077 a -246 1077
a
SDict begin [/View [/XYZ H.V]/Dest (Item.229) cvn /DEST pdfmark end
 -246 1077 a 0 TeXcolorgray -141 1158 a FK(3.)p 0 TeXcolorgray
43 w(S)o(oit)k FC(\242)d FK(:)j FB(y)j FG(\306)14 b(\241)r
FB(x)h FG(\305)10 b FK(3.)19 b(P)n(our)e(savoir)g(si)h(les)g(points)h
(propos\351s)f(sont)g(sur)g FC(\242)p FK(,)g(on)f(r)o(epr)o(end)g(la)g
(m\351thode)i(de)e(la)g(question)i(2)f(:)579 1433 y(P)n(oint)i
FB(H)8 b FK(\(1;)g(2\))32 b(:)846 b(2)14 b FG(\306)h(\241)p
FK(1)10 b FG(\305)g FK(3)896 b(donc)19 b FB(H)k FG(2)14
b FC(\242)579 1558 y FK(P)n(oint)20 b FB(I)9 b FK(\()p
FG(\241)p FK(2;)f(6\))33 b(:)822 b(6)14 b FG(6\306)h(\241)p
FK(\()p FG(\241)p FK(2\))10 b FG(\305)g FK(3)787 b(donc)19
b FB(I)24 b FG(\335)15 b FC(\242)579 1683 y FK(P)n(oint)23
b FB(J)8 b FK(\(1000;)g FG(\241)p FK(997\))34 b(:)628
b FG(\241)10 b FK(997)16 b FG(\306)e(\241)p FK(1000)c
FG(\305)g FK(3)620 b(donc)22 b FB(J)g FG(2)14 b FC(\242)-246
1902 y
SDict begin H.S end
 -246 1902 a -246 1902 a
SDict begin 12 H.A end
 -246 1902 a -246 1902
a
SDict begin [/View [/XYZ H.V]/Dest (exo.77) cvn /DEST pdfmark end
 -246 1902 a -246 1915 a
SDict begin H.S end
 -246 1915 a -246 1915 a
SDict begin 12 H.A end
 -246
1915 a -246 1915 a
SDict begin [/View [/XYZ H.V]/Dest (Item.230) cvn /DEST pdfmark end
 -246 1915 a 0 TeXcolorgray 80 x FL(Ex)o(er)o(cice)g
(77)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(S)o(oit)k FB(D)j FK(:)d FB(y)j FG(\306)14 b FK(2)r
FB(x)h FG(\305)10 b FK(1.)-246 2022 y
SDict begin H.S end
 -246 2022 a -246
2022 a
SDict begin 12 H.A end
 -246 2022 a -246 2022 a
SDict begin [/View [/XYZ H.V]/Dest (Item.231) cvn /DEST pdfmark end
 -246 2022 a 0 TeXcolorgray
10 2114 a FK(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 733 2223 782 4 v 733 2322 4 100 v 788 2293
a FB(x)p 883 2322 V 109 w FG(\241)p FK(1)p 1081 2322
V 103 w(0)p 1225 2322 V 104 w(1)p 1368 2322 V 103 w(2)p
1512 2322 V 733 2326 782 4 v 733 2425 4 100 v 790 2396
a FB(y)p 883 2425 V 110 w FG(\241)p FK(1)p 1081 2425
V 103 w(1)p 1225 2425 V 104 w(3)p 1368 2425 V 103 w(5)p
1512 2425 V 733 2429 782 4 v 844 3110 a(2)g FG(\243)g
FK(\()p FG(\241)p FK(1\))g FG(\305)g FK(1)16 b FG(\306)e(\241)p
FK(1)844 3234 y(2)c FG(\243)g FK(0)g FG(\305)g FK(1)17
b FG(\306)d FK(1)844 3359 y(2)c FG(\243)g FK(1)g FG(\305)g
FK(1)17 b FG(\306)d FK(3)844 3483 y(2)c FG(\243)g FK(2)g
FG(\305)g FK(1)17 b FG(\306)d FK(5)p 0 TeXcolorgray 2141
3625 9 1406 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2240 3603 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 223.07043 a add def
/d 0.0 a add neg def /h 166.61972 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2240 3603 a 3053 3240 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 -68.28685 T 15
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 175.72485 0.0 -113.81142 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -113.81142 0.0 T 15
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.33598 0.0 -113.81142   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 125.19255  0 -97.87788  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -97.87788
 125.19255  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-43.70354  def /maxTickline 122.91618  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.91618
0.0 -43.70354   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 125.19255
0.0 -97.87788 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.91618  0 -43.70354  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -43.70354
 122.91618  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-97.87788  def /maxTickline 125.19255  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.91618
0.0 -43.70354   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 125.19255
0.0 -97.87788 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3038 3337 a FI(0)157
b(1)h(2)g(3)g(4)g(5)-1186 b FH(\241)p FI(1)-261 b FH(\241)p
FI(2)f FH(\241)p FI(3)g FH(\241)p FI(4)2964 3259 y(0)2922
3448 y FH(\241)p FI(1)2964 3070 y(1)2964 2881 y(2)2964
2692 y(3)2964 2504 y(4)3053 3240 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.5 def
/dx x1 x sub 49 div def /F@pstplot ((+1.--2.*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot 22.76228 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
22.76228 mul gt { moveto } { dup -1.e30 22.76228 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 3053 3240 a
tx@Dict begin { 18.20988 91.04913 } PutCoor PutBegin  end
 3053 3240 a 1 0 0 TeXcolorrgb
53 x FB(D)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ -22.76228
-22.76228   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 0.0 22.76228
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 22.76228
68.28685   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 45.52457
113.81142   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 -22.76228 -22.76228 -22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 22.76228 0.0 -22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 22.76228 0.0 22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 68.28685 22.76228 22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 68.28685 22.76228 68.28685   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 113.81142 45.52457 68.28685   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3053 3240 a
tx@Dict begin { -15.93352 -13.6575 } PutCoor PutBegin  end
 3053 3240 a 0 0 1
TeXcolorrgb 51 x FG(\305)p FK(1)p 0 TeXcolorgray 3053
3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240 a
tx@Dict begin { 2.27637 -4.55238 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb
51 x FG(\305)p FK(2)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053
3240 a 3053 3240 a
tx@Dict begin { 6.82875 31.86705 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x
FG(\305)p FK(1)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240
a 3053 3240 a
tx@Dict begin { 25.03865 45.52457 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x FG(\305)p
FK(2)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240
a
tx@Dict begin { 47.80093 91.04913 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x FG(\305)p FK(2)p
0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240 a
tx@Dict begin { 29.59103 77.39162 } PutCoor PutBegin  end
 3053
3240 a 0 0 1 TeXcolorrgb 51 x FG(\305)p FK(1)p 0 TeXcolorgray
3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 4092 3603 a
currentpoint initclip moveto
 4092 3603 a -246
3696 a
SDict begin H.S end
 -246 3696 a -246 3696 a
SDict begin 12 H.A end
 -246 3696 a -246 3696
a
SDict begin [/View [/XYZ H.V]/Dest (Item.232) cvn /DEST pdfmark end
 -246 3696 a 0 TeXcolorgray 4 3807 a FK(\(b\))p 0 TeXcolorgray
41 w(Quand)19 b FB(x)j FK(augmente)d(de)e(1,)22 b FB(y)i
FK(augmente)19 b(de)e(2.)145 3918 y(En)f(effet,)i(dans)f(le)f(tableau)i
(pr\351c\351dent,)f(les)g(valeurs)g(de)i FB(x)i FK(augmente)d(de)e(1)h
(en)g(1)9 b(;)17 b(tandis)g(les)g(valeurs)g(de)j FB(y)k
FK(augmentent)18 b(de)e(2)h(en)g(2.)145 4018 y(On)g(l)o('obser)q(ve)i
(bien)e(sur)h(le)g(gr)o(aphique)g(\351galement.)145 4171
y FL(R)o(emarque)12 b(:)17 b FK(C)o(ela)g(vient)g(du)f(\253)d(2)g(\273)
32 b(de)16 b(l)o('\351quation)23 b FB(y)e FG(\306)14
b FK(2)r FB(x)e FG(\305)7 b FK(1)32 b(:)17 b(si)h FB(x)k
FK(augmente)17 b(de)f(1,)h(alors)f(2)r FB(x)22 b FK(augmente)c(de)e(2.)
h(C'est)g(la)f(m\351thode)145 4271 y(que)22 b(l)o('on)g(utiliser)o(a)h
(pour)f(v\351r)q(i\002er)f(gr)o(aphiquement)j(la)d(valeur)h(du)g
(coef\002cient)g(dir)o(ecteur)f(\(cf)g(les)h(\253)15
b FG(\305)p FK(2)g(\273)43 b(sur)21 b(le)h(gr)o(aphique\))9
b(;)22 b(elle)145 4371 y(est)c(g\351n\351r)o(alis\351e)g(dans)g(la)f
(question)i(suivante)o(.)-246 4398 y
SDict begin H.S end
 -246 4398 a -246
4398 a
SDict begin 12 H.A end
 -246 4398 a -246 4398 a
SDict begin [/View [/XYZ H.V]/Dest (Item.233) cvn /DEST pdfmark end
 -246 4398 a 0 TeXcolorgray
-141 4490 a FK(2.)p 0 TeXcolorgray 43 w(S)o(oit)f FC(\242)g
FK(une)g(droite)f(non)g(ver)q(ticale)h(quelconque)o(,)h(d)n
('\351quation)k FB(y)e FG(\306)16 b FB(a)6 b(x)15 b FG(\305)10
b FB(b)22 b FK(;)17 b(et)h(soient)24 b FB(A)c FK(et)e
FB(B)25 b FK(deux)18 b(points)h(distincts)f(de)f FC(\242)p
FK(.)-246 4517 y
SDict begin H.S end
 -246 4517 a -246 4517 a
SDict begin 12 H.A end
 -246 4517 a
-246 4517 a
SDict begin [/View [/XYZ H.V]/Dest (Item.234) cvn /DEST pdfmark end
 -246 4517 a 0 TeXcolorgray 10 4609 a FK(\(a\))p
0 TeXcolorgray 47 w FB(A)j FK(est)d(sur)h FC(\242)p FK(,)g(donc)j
FB(y)792 4621 y Fw(A)850 4609 y FG(\306)16 b FB(a)e FG(\243)e
FB(x)1090 4621 y Fw(A)1144 4609 y FG(\305)e FB(b)q FK(.)17
b(De)g(m\352me)o(,)h FB(B)25 b FK(est)18 b(sur)g FC(\242)p
FK(,)g(donc)j FB(y)2304 4621 y Fw(B)2365 4609 y FG(\306)16
b FB(a)e FG(\243)e FB(x)2601 4621 y Fw(B)2659 4609 y
FG(\305)e FB(b)q FK(.)-246 4639 y
SDict begin H.S end
 -246 4639 a -246 4639
a
SDict begin 12 H.A end
 -246 4639 a -246 4639 a
SDict begin [/View [/XYZ H.V]/Dest (Item.235) cvn /DEST pdfmark end
 -246 4639 a 0 TeXcolorgray
4 4731 a FK(\(b\))p 0 TeXcolorgray 41 w(On)17 b(sait)h(que)k
FB(y)601 4743 y Fw(A)658 4731 y FG(\306)17 b FB(a)6 b(x)824
4743 y Fw(A)877 4731 y FG(\305)k FB(b)21 b FK(et)d(que)k
FB(y)1280 4743 y Fw(B)1341 4731 y FG(\306)16 b FB(a)6
b(x)1502 4743 y Fw(B)1560 4731 y FG(\305)k FB(b)q FK(,)18
b(donc)1552 4896 y FB(y)1591 4908 y Fw(B)1648 4896 y
FG(\241)c FB(y)1760 4908 y Fw(A)1818 4896 y FG(\306)1887
4897 y FK(\()1916 4896 y FB(a)g FG(\243)e FB(x)2081 4908
y Fw(B)2138 4896 y FG(\305)e FB(b)2250 4897 y FK(\))2287
4896 y FG(\241)2352 4897 y FK(\()2381 4896 y FB(a)k FG(\243)e
FB(x)2550 4908 y Fw(A)2604 4896 y FG(\305)e FB(b)2716
4897 y FK(\))1818 5020 y FG(\306)16 b FB(a)e FG(\243)e
FB(x)2054 5032 y Fw(B)2111 5020 y FG(\305)2179 5033 y
FA(\001)2176 5020 y FB(b)i FG(\241)e FB(a)i FG(\243)e
FB(x)2469 5032 y Fw(A)2524 5020 y FG(\241)2592 5033 y
FA(\001)2589 5020 y FB(b)1818 5145 y FG(\306)k FB(a)1944
5146 y FK(\()1973 5145 y FB(x)2014 5157 y Fw(B)2071 5145
y FG(\241)c FB(x)2183 5157 y Fw(A)2227 5146 y FK(\))2262
5145 y(.)145 5320 y(On)17 b(en)g(d\351duit)1714 5501
y FB(y)1753 5513 y Fw(B)1810 5501 y FG(\241)d FB(y)1922
5513 y Fw(A)p 1710 5538 257 5 v 1712 5614 a FB(x)1753
5626 y Fw(B)1810 5614 y FG(\241)e FB(x)1922 5626 y Fw(A)1990
5557 y FG(\306)2071 5501 y FB(a)2110 5521 y FA(\030)2193
5500 y(\030)2276 5480 y(\030)2353 5460 y(\030)2118 5502
y FK(\()2147 5501 y FB(x)2188 5513 y Fw(B)2245 5501 y
FG(\241)g FB(x)2357 5513 y Fw(A)2401 5502 y FK(\))p 2069
5538 359 5 v 2112 5624 a FA(\()2195 5610 y(\()2278 5596
y(\()2302 5592 y(\()2123 5614 y FB(x)2164 5626 y Fw(B)2221
5614 y FG(\241)g FB(x)2333 5626 y Fw(A)2452 5557 y FG(\306)k
FB(a)t FK(.)p 0 TeXcolorgray 1909 5895 a(43)p 0 TeXcolorgray
eop end
%%Page: 44 44
TeXDict begin 44 43 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.44) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.78) cvn /DEST pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246
a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.236) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray
83 x FL(Ex)o(er)o(cice)14 b(78)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
218 1357 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 185.22716 a add def
/d 0.0 a add neg def /h 169.0092 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 218 1357 a 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -42.67911 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 149.37688 0.0 -35.85028 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 119.07474 0.0 -49.93446   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 149.37688  0 -35.85028  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -35.85028
 149.37688  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-49.93446  def /maxTickline 119.07474  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 119.07474
0.0 -49.93446   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.37688
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 119.07474  0 -49.93446  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -49.93446
 119.07474  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-35.85028  def /maxTickline 149.37688  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 119.07474
0.0 -49.93446   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.37688
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 501 1039 a FI(0)146
b(1)g(2)g(3)g(4)g(5)g(6)-1292 b FH(\241)p FI(1)427 961
y(0)385 1139 y FH(\241)p FI(1)385 1316 y FH(\241)p FI(2)427
784 y(1)427 607 y(2)427 430 y(3)427 253 y(4)516 942 y
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 7. def
/dx x1 x sub 49 div def /F@pstplot ((-2.--4.*x)/2.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 7. def
/dx x1 x sub 49 div def /F@pstplot ((--16.-4.*x)/4.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 21.33955
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 15.3645 25.18051 } PutCoor PutBegin  end
 516 942 a 0 0 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 64.01866
106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 58.89705 110.53873 } PutCoor PutBegin  end
 516 942 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 106.69777
-21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 108.40497 -17.0717 } PutCoor PutBegin  end
 516 942 a 1 0 0 TeXcolorrgb 514 941 a FB(C)p
0 TeXcolorgray 516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 21.33955
64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 516 942 a
tx@Dict begin { 23.04675 68.2865 } PutCoor PutBegin  end
 516 942 a 1 0 0 TeXcolorrgb FB(D)p
0 TeXcolorgray 516 942 a
tx@Dict begin  PutEnd  end
 516 942 a 1756 1357 a
currentpoint initclip moveto
 1756 1357
a -38 1514 a
SDict begin H.S end
 -38 1514 a -38 1514 a
SDict begin 12 H.A end
 -38 1514 a -38 1514
a
SDict begin [/View [/XYZ H.V]/Dest (Item.237) cvn /DEST pdfmark end
 -38 1514 a 0 TeXcolorgray 10 1666 a FK(\(a\))p 0 TeXcolorgray
47 w FB(A)s FK(\(1;)8 b(1\),)18 b FB(B)7 b FK(\(3;)h(5\).)145
1818 y(La)22 b(droite)f(\()6 b FB(A)s(B)h FK(\))22 b(a)g(une)h
(\351quation)g(de)f(la)g(for)q(me)k FB(y)f FG(\306)c
FB(a)6 b(x)17 b FG(\305)12 b FB(b)q FK(.)145 1918 y(D)o('apr\350s)17
b(le)g(cours)h(:)602 2315 y FB(a)g FG(\306)747 2258 y
FB(y)786 2270 y Fw(B)843 2258 y FG(\241)c FB(y)955 2270
y Fw(A)p 742 2295 257 5 v 744 2372 a FB(x)785 2384 y
Fw(B)843 2372 y FG(\241)e FB(x)955 2384 y Fw(A)1023 2315
y FG(\306)1102 2258 y FK(5)e FG(\241)g FK(1)p 1102 2295
157 5 v 1102 2372 a(3)g FG(\241)g FK(1)1283 2315 y FG(\306)1362
2258 y FK(4)p 1362 2295 41 5 v 1362 2372 a(2)1427 2315
y FG(\306)k FK(2.)145 2681 y(A)i(ce)i(stade)o(,)f(on)g(sait)h(que)g(\()
6 b FB(A)s(B)h FK(\))15 b(:)j FB(y)j FG(\306)14 b FK(2)r
FB(x)h FG(\305)10 b FB(b)q FK(.)p 0 TeXcolorgray 2050
2700 9 2746 v 0 TeXcolorgray 2278 37 a(La)17 b(droite)g(\()6
b FB(A)s(B)h FK(\))18 b(passe)g(par)23 b FB(A)s FK(\(1)3216
82 y Fw(x)3253 37 y FK(;)8 b(1)3287 82 y Fw(y)3321 37
y FK(\),)18 b(donc)3069 266 y(1)c FG(\306)g FK(2)c FG(\243)g
FK(1)g FG(\305)g FB(b)3069 390 y FK(1)k FG(\306)g FK(2)c
FG(\305)g FB(b)2953 515 y FK(1)g FG(\241)g FK(2)15 b
FG(\306)3192 531 y FA(\001)3192 515 y FK(2)c FG(\305)f
FB(b)k FG(\241)3430 531 y FA(\001)3430 515 y FK(2)3014
639 y FG(\241)p FK(1)g FG(\306)g FB(b)2278 837 y FK(C)o(onclusion)19
b(:)f(\()6 b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14
b FK(2)r FB(x)h FG(\241)10 b FK(1.)2095 871 y
SDict begin H.S end
 2095 871
a 2095 871 a
SDict begin 12 H.A end
 2095 871 a 2095 871 a
SDict begin [/View [/XYZ H.V]/Dest (Item.238) cvn /DEST pdfmark end
 2095 871 a 0 TeXcolorgray
2137 967 a FK(\(b\))p 0 TeXcolorgray 39 w FB(C)f FK(\(5;)f
FG(\241)p FK(1\),)18 b FB(D)6 b FK(\(1;)i(3\).)2278 1081
y(La)21 b(droite)g(\()n FB(C)9 b(D)d FK(\))21 b(a)g(une)h(\351quation)g
(de)f(la)h(for)q(me)j FB(y)g FG(\306)20 b FB(a)6 b(x)17
b FG(\305)12 b FB(b)q FK(.)2278 1181 y(D)o('apr\350s)17
b(le)h(cours)f(:)2623 1415 y FB(a)h FG(\306)2768 1358
y FB(y)2807 1370 y Fw(D)2870 1358 y FG(\241)c FB(y)2976
1370 y Fw(C)p 2763 1395 263 5 v 2765 1471 a FB(x)2806
1483 y Fw(D)2870 1471 y FG(\241)e FB(x)2976 1483 y Fw(C)3051
1415 y FG(\306)3130 1358 y FK(3)e FG(\241)g FK(\()p FG(\241)p
FK(1\))p 3130 1395 265 5 v 3184 1471 a(1)g FG(\241)g
FK(5)3419 1415 y FG(\306)3525 1358 y FK(4)p 3498 1395
96 5 v 3498 1471 a FG(\241)p FK(4)3617 1415 y FG(\306)15
b(\241)p FK(1.)2278 1616 y(A)i(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()n
FB(C)9 b(D)d FK(\))14 b(:)k FB(y)j FG(\306)14 b(\241)p
FK(1)r FB(x)h FG(\305)10 b FB(b)q FK(.)2278 1780 y(La)17
b(droite)g(\()n FB(C)9 b(D)d FK(\))17 b(passe)i(par)c
FB(C)9 b FK(\(5)3225 1827 y Fw(x)3261 1780 y FK(;)f FG(\241)p
FK(1)3322 1826 y Fw(y)3385 1780 y FK(\),)17 b(donc)3014
2010 y FG(\241)p FK(1)d FG(\306)g(\241)p FK(1)c FG(\243)g
FK(5)g FG(\305)g FB(b)3014 2134 y FG(\241)p FK(1)k FG(\306)g(\241)p
FK(5)c FG(\305)g FB(b)2898 2259 y FG(\241)p FK(1)g FG(\305)g
FK(5)15 b FG(\306)3184 2261 y FA(\010)3213 2247 y(\010)3192
2259 y FG(\241)p FK(5)c FG(\305)f FB(b)k FG(\305)3485
2275 y FA(\001)3485 2259 y FK(5)3069 2383 y(4)g FG(\306)g
FB(b)2278 2581 y FK(C)o(onclusion)22 b(:)e(\()n FB(C)9
b(D)d FK(\))16 b(:)21 b FB(y)i FG(\306)17 b(\241)p FK(1)r
FB(x)g FG(\305)11 b FK(4)20 b(\226)g(ou)g(encor)o(e)g(\()n
FB(C)9 b(D)d FK(\))16 b(:)21 b FB(y)j FG(\306)2278 2681
y(\241)r FB(x)15 b FG(\305)10 b FK(4.)-246 2780 y
SDict begin H.S end
 -246
2780 a -246 2780 a
SDict begin 12 H.A end
 -246 2780 a -246 2780 a
SDict begin [/View [/XYZ H.V]/Dest (Item.239) cvn /DEST pdfmark end
 -246 2780
a 0 TeXcolorgray -141 2895 a FK(2.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 140 4414 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 204.00606 a add def
/d 0.0 a add neg def /h 169.00922 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 140 4414 a 604
3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35822 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 148.09654 0.0 -55.90952 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 74.68843 0.0 -94.32079   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 148.09654  0 -55.90952  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -55.90952
 148.09654  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-94.32079  def /maxTickline 74.68843  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.68843
0.0 -94.32079   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.09654
0.0 -55.90952 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 74.68843  0 -94.32079  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -94.32079
 74.68843  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-55.90952  def /maxTickline 148.09654  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.68843
0.0 -94.32079   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.09654
0.0 -55.90952 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 589 3728 a FI(0)146 b(1)g(2)g(3)h(4)f(5)g(6)
-1292 b FH(\241)p FI(1)-250 b FH(\241)p FI(2)515 3650
y(0)474 3828 y FH(\241)p FI(1)474 4005 y FH(\241)p FI(2)474
4182 y FH(\241)p FI(3)474 4359 y FH(\241)p FI(4)515 3473
y(1)515 3296 y(2)604 3631 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.62 def /x1 6.94
def /dx x1 x sub 49 div def /F@pstplot ((-16.--4.*x)/8.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.62 def /x1 6.94
def /dx x1 x sub 49 div def /F@pstplot ((--4.-1.*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -42.67911
-64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 604 3631 a
tx@Dict begin { -48.65414 -60.17769 } PutCoor PutBegin  end
 604 3631 a 0 0 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604
3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 128.03732
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 604 3631
a
tx@Dict begin { 122.91571 25.18051 } PutCoor PutBegin  end
 604 3631 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 21.33955
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
604 3631 a
tx@Dict begin { 23.04675 25.60739 } PutCoor PutBegin  end
 604 3631 a 1 0 0 TeXcolorrgb 602 3630 a FB(C)p
0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -42.67911
42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 604 3631 a
tx@Dict begin { -40.9719 46.94695 } PutCoor PutBegin  end
 604 3631 a 1 0 0 TeXcolorrgb
FB(D)p 0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a 1834 4414
a
currentpoint initclip moveto
 1834 4414 a -38 4551 a
SDict begin H.S end
 -38 4551 a -38 4551 a
SDict begin 12 H.A end
 -38 4551
a -38 4551 a
SDict begin [/View [/XYZ H.V]/Dest (Item.240) cvn /DEST pdfmark end
 -38 4551 a 0 TeXcolorgray 10 4696 a FK(\(a\))p
0 TeXcolorgray 47 w FB(A)s FK(\()p FG(\241)p FK(2;)8
b FG(\241)p FK(3\),)18 b FB(B)7 b FK(\(6;)h(1\).)145
4841 y(La)22 b(droite)f(\()6 b FB(A)s(B)h FK(\))22 b(a)g(une)h
(\351quation)g(de)f(la)g(for)q(me)k FB(y)f FG(\306)c
FB(a)6 b(x)17 b FG(\305)12 b FB(b)q FK(.)145 4941 y(D)o('apr\350s)17
b(le)g(cours)h(:)514 5310 y FB(a)g FG(\306)658 5254 y
FB(y)697 5266 y Fw(B)754 5254 y FG(\241)c FB(y)866 5266
y Fw(A)p 654 5291 257 5 v 656 5367 a FB(x)697 5379 y
Fw(B)754 5367 y FG(\241)e FB(x)866 5379 y Fw(A)934 5310
y FG(\306)1014 5254 y FK(1)e FG(\241)g FK(\()p FG(\241)p
FK(3\))p 1014 5291 265 5 v 1014 5367 a(6)g FG(\241)g
FK(\()p FG(\241)p FK(2\))1302 5310 y FG(\306)1382 5254
y FK(4)p 1382 5291 41 5 v 1382 5367 a(8)1446 5310 y FG(\306)k
FK(0,)8 b(5.)145 5646 y(A)16 b(ce)i(stade)o(,)f(on)g(sait)h(que)g(\()6
b FB(A)s(B)h FK(\))15 b(:)j FB(y)j FG(\306)14 b FK(0,)8
b(5)r FB(x)15 b FG(\305)10 b FB(b)q FK(.)p 0 TeXcolorgray
2050 5675 9 2664 v 0 TeXcolorgray 2278 3094 a(La)17 b(droite)g(\()6
b FB(A)s(B)h FK(\))18 b(passe)g(par)23 b FB(A)s FK(\()p
FG(\241)p FK(2)3243 3140 y Fw(x)3307 3094 y FK(;)8 b
FG(\241)p FK(3)3369 3140 y Fw(y)3431 3094 y FK(\),)18
b(donc)2952 3449 y FG(\241)p FK(3)d FG(\306)f FK(0,)8
b(5)i FG(\243)g FK(\()p FG(\241)p FK(2\))g FG(\305)g
FB(b)2952 3574 y FG(\241)p FK(3)15 b FG(\306)f(\241)p
FK(1)c FG(\305)g FB(b)2837 3698 y FG(\241)p FK(3)g FG(\305)g
FK(1)15 b FG(\306)3123 3700 y FA(\010)3152 3686 y(\010)3131
3698 y FG(\241)p FK(1)c FG(\305)f FB(b)k FG(\305)3424
3714 y FA(\001)3424 3698 y FK(1)2952 3823 y FG(\241)p
FK(2)h FG(\306)f FB(b)2278 4202 y FK(C)o(onclusion)19
b(:)f(\()6 b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14
b FK(0,)8 b(5)r FB(x)15 b FG(\241)10 b FK(2.)2095 4291
y
SDict begin H.S end
 2095 4291 a 2095 4291 a
SDict begin 12 H.A end
 2095 4291 a 2095 4291 a
SDict begin [/View [/XYZ H.V]/Dest (Item.241) cvn /DEST pdfmark end
 2095
4291 a 0 TeXcolorgray 2137 4442 a FK(\(b\))p 0 TeXcolorgray
39 w FB(C)f FK(\(1;)f(1\),)18 b FB(D)6 b FK(\()p FG(\241)p
FK(2;)i(2\).)2278 4612 y(La)21 b(droite)g(\()n FB(C)9
b(D)d FK(\))21 b(a)g(une)h(\351quation)g(de)f(la)h(for)q(me)j
FB(y)g FG(\306)20 b FB(a)6 b(x)17 b FG(\305)12 b FB(b)q
FK(.)2278 4711 y(D)o('apr\350s)17 b(le)h(cours)f(:)2640
5186 y FB(a)h FG(\306)2785 5130 y FB(y)2824 5142 y Fw(D)2887
5130 y FG(\241)c FB(y)2993 5142 y Fw(C)p 2780 5167 263
5 v 2782 5243 a FB(x)2823 5255 y Fw(D)2887 5243 y FG(\241)e
FB(x)2993 5255 y Fw(C)3067 5186 y FG(\306)3174 5130 y
FK(2)e FG(\241)g FK(1)p 3146 5167 212 5 v 3146 5243 a
FG(\241)p FK(2)g FG(\241)g FK(1)3382 5186 y FG(\306)3489
5130 y FK(1)p 3461 5167 96 5 v 3461 5243 a FG(\241)p
FK(3)3581 5186 y FG(\306)k(\241)3715 5130 y FK(1)p 3715
5167 41 5 v 3715 5243 a(3)3765 5186 y(.)2278 5646 y(A)j(ce)g(stade)o(,)
g(on)h(sait)g(que)g(\()n FB(C)9 b(D)d FK(\))14 b(:)k
FB(y)j FG(\306)14 b(\241)3472 5613 y FI(1)p 3472 5626
31 5 v 3472 5674 a(3)3515 5646 y FB(x)h FG(\305)10 b
FB(b)q FK(.)p 0 TeXcolorgray 1909 5895 a(44)p 0 TeXcolorgray
eop end
%%Page: 45 45
TeXDict begin 45 44 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.45) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 145 -163 a FK(La)17 b(droite)g(\()n FB(C)9
b(D)d FK(\))17 b(passe)h(par)e FB(C)9 b FK(\(1)1092 -117
y Fw(x)1128 -163 y FK(;)f(1)1162 -117 y Fw(y)1197 -163
y FK(\),)17 b(donc)908 68 y(1)d FG(\306)h(\241)1097 11
y FK(1)p 1097 48 41 5 v 1097 125 a(3)1157 68 y FG(\243)10
b FK(1)g FG(\305)g FB(b)908 266 y FK(1)k FG(\306)h(\241)1097
209 y FK(1)p 1097 246 V 1097 322 a(3)1157 266 y FG(\305)10
b FB(b)772 472 y FK(1)g FG(\305)898 416 y FK(1)p 898
452 V 898 529 a(3)962 472 y FG(\306)1021 537 y FA(\023)1084
454 y(\023)1095 439 y(\023)1032 472 y FG(\241)1097 416
y FK(1)p 1097 452 V 1097 529 a(3)1157 472 y FG(\305)g
FB(b)k FG(\305)1352 537 y FA(\003)1373 454 y(\003)1376
439 y(\003)1354 416 y FK(1)p 1354 452 V 1354 529 a(3)762
613 y(3)p 762 650 V 762 727 a(3)823 670 y FG(\305)898
613 y FK(1)p 898 650 V 898 727 a(3)962 670 y FG(\306)h
FB(b)898 811 y FK(4)p 898 848 V 898 925 a(3)962 868 y
FG(\306)g FB(b)p 0 TeXcolorgray 2050 942 9 1188 v 0 TeXcolorgray
2278 -163 a FK(C)o(onclusion)k(:)f(\()n FB(C)9 b(D)d
FK(\))14 b(:)k FB(y)j FG(\306)14 b(\241)3146 -195 y FI(1)p
3146 -182 31 5 v 3146 -134 a(3)3189 -163 y FB(x)h FG(\305)3319
-195 y FI(4)p 3319 -182 V 3319 -134 a(3)3359 -163 y FK(.)-246
1025 y
SDict begin H.S end
 -246 1025 a -246 1025 a
SDict begin 12 H.A end
 -246 1025 a -246 1025
a
SDict begin [/View [/XYZ H.V]/Dest (Item.242) cvn /DEST pdfmark end
 -246 1025 a 0 TeXcolorgray -141 1139 a FK(3.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 287 2658 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 168.58232 a add def
/d 0.0 a add neg def /h 169.0092 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 287 2658 a 585
2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -64.01866 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 132.73204 0.0 -35.85028 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 92.61357 0.0 -76.39563   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 132.73204  0 -35.85028  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -35.85028
 132.73204  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.39563  def /maxTickline 92.61357  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.61357
0.0 -76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 92.61357  0 -76.39563  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -76.39563
 92.61357  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-35.85028  def /maxTickline 132.73204  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.61357
0.0 -76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 570 2121 a FI(0)146 b(1)g(2)g(3)g(4)g(5)-1115
b FH(\241)p FI(1)496 2043 y(0)454 2221 y FH(\241)p FI(1)454
2398 y FH(\241)p FI(2)454 2575 y FH(\241)p FI(3)496 1866
y(1)496 1689 y(2)496 1512 y(3)585 2024 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((--6.-0.*x)/-3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35822 92.61357 85.35822
-76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 42.67911
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 585 2024 a
tx@Dict begin { 36.70406 -38.83813 } PutCoor PutBegin  end
 585
2024 a 0 0 1 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 585
2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -21.33955
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
585 2024 a
tx@Dict begin { -26.46115 -38.83813 } PutCoor PutBegin  end
 585 2024 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 85.35822
-64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
585 2024 a
tx@Dict begin { 87.06541 -59.75081 } PutCoor PutBegin  end
 585 2024 a 1 0 0 TeXcolorrgb 583 2023 a FB(C)p
0 TeXcolorgray 585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 85.35822
85.35822   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 585 2024 a
tx@Dict begin { 89.19917 76.39563 } PutCoor PutBegin  end
 585 2024 a 1 0 0 TeXcolorrgb
FB(D)p 0 TeXcolorgray 585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a 1687 2658
a
currentpoint initclip moveto
 1687 2658 a 0 TeXcolorgray 2050 2684 9 1429 v 0 TeXcolorgray
2101 1338 a FB(A)s FK(\(2;)8 b FG(\241)p FK(2\),)18 b
FB(B)7 b FK(\()p FG(\241)p FK(1;)h FG(\241)p FK(2\),)18
b FB(C)9 b FK(\(4;)f FG(\241)p FK(3\),)18 b FB(D)6 b
FK(\(4;)i(4\).)2095 1453 y(La)27 b(droite)e(\()6 b FB(A)s(B)h
FK(\))27 b(est)f(hor)q(izontale)o(,)h(c)n('est)f(l)o('ensemble)j(des)d
(points)2095 1552 y(d)n('or)o(donn\351e)c FB(y)f FG(\306)14
b(\241)p FK(2,)k(donc)f(son)h(\351quation)g(est)k FB(y)f
FG(\306)15 b(\241)p FK(2.)2890 1736 y(\()6 b FB(A)s(B)h
FK(\))14 b(:)19 b FB(y)i FG(\306)14 b(\241)p FK(2.)2095
1935 y(La)38 b(droite)g(\()n FB(C)9 b(D)d FK(\))37 b(est)i(ver)q
(ticale)o(,)f(c)n('est)h(l)o('ensemble)h(des)e(points)2095
2034 y(d)n('abscisse)20 b FB(x)g FG(\306)14 b FK(4,)k(donc)f(son)h
(\351quation)h(est)h FB(x)f FG(\306)14 b FK(4.)2913 2218
y(\()n FB(C)9 b(D)d FK(\))14 b(:)j FB(x)j FG(\306)14
b FK(4.)2095 2467 y FL(R)o(emarques)23 b(:)28 b FK(Dans)e(le)i(cas)f
(de)g(droites)g(hor)q(izontales)g(ou)h(ver)q(ti-)2095
2567 y(cales)o(,)i(on)e(n)-6 b('attend)29 b(aucune)g(justi\002cation)h
(de)e(votr)o(e)g(par)q(t,)g(vous)2095 2666 y(pouvez)18
b(dir)o(ectement)g(donner)g(l)o('\351quation.)-246 2766
y
SDict begin H.S end
 -246 2766 a -246 2766 a
SDict begin 12 H.A end
 -246 2766 a -246 2766 a
SDict begin [/View [/XYZ H.V]/Dest (exo.79) cvn /DEST pdfmark end
 -246
2766 a -246 2751 a
SDict begin H.S end
 -246 2751 a -246 2751 a
SDict begin 12 H.A end
 -246 2751
a -246 2751 a
SDict begin [/View [/XYZ H.V]/Dest (Item.243) cvn /DEST pdfmark end
 -246 2751 a 0 TeXcolorgray 115 x FL(Ex)o(er)o(cice)c(79)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)j(tr)o(ace)g(les)i(droites)e FB(D)1146 2878 y
FI(1)1195 2866 y FK(:)i FB(y)i FG(\306)16 b FB(x)f FG(\241)10
b FK(4)18 b(et)g FB(D)1685 2878 y FI(2)1734 2866 y FK(:)h
FB(y)i FG(\306)14 b(\241)p FK(2)r FB(x)h FG(\305)10 b
FK(3)19 b(\340)e(par)q(tir)g(de)g(deux)h(tableaux)g(de)f(valeurs)h(:)
-38 3065 y(T)-6 b(r)o(ac\351)17 b(de)g FB(D)331 3077
y FI(1)367 3065 y FK(.)p -38 3095 425 5 v 0 TeXcolorgray
0 TeXcolorgray 712 3155 551 4 v 712 3255 4 100 v 767
3225 a FB(x)p 862 3255 V 137 w FK(0)p 1060 3255 V 158
w(2)p 1259 3255 V 712 3258 551 4 v 712 3358 4 100 v 769
3328 a FB(y)p 862 3358 V 110 w FG(\241)p FK(4)p 1060
3358 V 103 w FG(\241)p FK(2)p 1259 3358 V 712 3361 551
4 v 820 3604 a(0)10 b FG(\241)g FK(4)15 b FG(\306)f(\241)p
FK(4)820 3728 y(2)c FG(\241)g FK(4)15 b FG(\306)f(\241)p
FK(2)p 0 TeXcolorgray 2050 3758 9 777 v 0 TeXcolorgray
2095 3065 a(T)-6 b(r)o(ac\351)18 b(de)f FB(D)2465 3077
y FI(2)2500 3065 y FK(.)p 2095 3095 425 5 v 0 TeXcolorgray
0 TeXcolorgray 2873 3155 496 4 v 2873 3255 4 100 v 2928
3225 a FB(x)p 3023 3255 V 109 w FK(0)p 3166 3255 V 131
w(2)p 3365 3255 V 2873 3258 496 4 v 2873 3358 4 100 v
2930 3328 a FB(y)p 3023 3358 V 110 w FK(3)p 3166 3358
V 103 w FG(\241)p FK(1)p 3365 3358 V 2873 3361 496 4
v 2868 3604 a FG(\241)10 b FK(2)g FG(\243)g FK(0)g FG(\305)g
FK(3)16 b FG(\306)e FK(3)2868 3728 y FG(\241)c FK(2)g
FG(\243)g FK(2)g FG(\305)g FK(3)16 b FG(\306)e(\241)p
FK(1)p 0 TeXcolorgray 0 TeXcolorgray 1342 5346 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 171.57018 a add def
/d 0.0 a add neg def /h 181.81308 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1342
5346 a 1664 4492 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35822 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 132.73204 0.0 -38.83813 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 78.95628 0.0 -102.8568   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 132.73204  0 -38.83813  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -38.83813
 132.73204  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-102.8568  def /maxTickline 78.95628  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 78.95628
0.0 -102.8568   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -38.83813 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 78.95628  0 -102.8568  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -102.8568
 78.95628  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-38.83813  def /maxTickline 132.73204  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 78.95628
0.0 -102.8568   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -38.83813 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1649 4589 a FI(0)146
b(1)g(2)g(3)g(4)g(5)-1114 b FH(\241)p FI(1)1575 4511
y(0)1533 4689 y FH(\241)p FI(1)1533 4866 y FH(\241)p
FI(2)1533 5043 y FH(\241)p FI(3)1533 5220 y FH(\241)p
FI(4)1575 4334 y(1)1575 4157 y(2)1575 3980 y(3)1664 4492
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.82 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((-4.--1.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.82 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((--3.-2.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1664 4492 a
tx@Dict begin { 86.21164 26.03427 } PutCoor PutBegin  end
 1664 4492 a 1 0 0
TeXcolorrgb 53 x FB(D)1727 4557 y FI(1)p 0 TeXcolorgray
1664 4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 1664 4492 a
tx@Dict begin { 23.90019 30.30212 } PutCoor PutBegin  end
 1664 4492 a 0 0 1
TeXcolorrgb 53 x FB(D)1727 4557 y FI(2)p 0 TeXcolorgray
1664 4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 1664 4492 a
tx@Dict begin { -9.38945 -100.72272 } PutCoor PutBegin  end
 1664 4492 a 1 0 0
TeXcolorrgb 1672 4473 a FB(f)p 0 TeXcolorgray 1664 4492
a
tx@Dict begin  PutEnd  end
 1664 4492 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 64.01866
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 42.67911
-21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 -85.35822
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 42.67911
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 49.79218
-35.56602   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1664 4492 a
tx@Dict begin { 53.77576 -38.41125 } PutCoor PutBegin  end
 1664
4492 a 0 1 0 TeXcolorrgb 2 w FB(M)p 0 TeXcolorgray 1664
4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 2766 5346 a
currentpoint initclip moveto
 2766 5346 a -246 5390
a
SDict begin H.S end
 -246 5390 a -246 5390 a
SDict begin 12 H.A end
 -246 5390 a -246 5390 a
SDict begin [/View [/XYZ H.V]/Dest (Item.244) cvn /DEST pdfmark end
 -246
5390 a 0 TeXcolorgray -141 5504 a FK(2.)p 0 TeXcolorgray
43 w(On)18 b(note)i FB(M)26 b FK(le)18 b(point)h(d)n('intersection)h
(de)d FB(D)1302 5516 y FI(1)1352 5504 y FK(:)i FB(y)j
FG(\306)17 b FB(x)e FG(\241)10 b FK(4)19 b(et)f FB(D)1845
5516 y FI(2)1895 5504 y FK(:)h FB(y)j FG(\306)14 b(\241)p
FK(2)r FB(x)h FG(\305)10 b FK(3.)21 b(P)n(our)c(d\351ter)q(miner)h(ses)
h(coor)o(donn\351es)o(,)f(on)h(r\351sout)f(l)o('\351qua-)-38
5604 y(tion)g(:)p 0 TeXcolorgray 1909 5895 a(45)p 0 TeXcolorgray
eop end
%%Page: 46 46
TeXDict begin 46 45 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.46) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1781 20 a FB(x)15 b FG(\241)10 b FK(4)15
b FG(\306)g(\241)p FK(2)r FB(x)g FG(\305)10 b FK(3)1665
144 y FB(x)15 b FG(\241)1784 160 y FA(\001)1784 144 y
FK(4)d FG(\305)1901 160 y FA(\001)1901 144 y FK(4)i FG(\306)h(\241)p
FK(2)r FB(x)g FG(\305)10 b FK(3)g FG(\305)g FK(4)1735
269 y FB(x)15 b FG(\305)10 b FK(2)r FB(x)20 b FG(\306)2016
263 y FA(\030)2092 245 y(\030)2025 269 y FG(\241)p FK(2)r
FB(x)c FG(\305)10 b FK(7)g FG(\305)r FA(\010)2370 259
y(\010)2357 269 y FK(2)r FB(x)1844 415 y FA(\001)1844
399 y FK(3)s FB(x)p 1844 436 87 5 v 1867 532 a FA(\001)1867
516 y FK(3)1955 455 y FG(\306)2034 399 y FK(7)p 2034
436 41 5 v 2034 512 a(3)1897 657 y FB(x)19 b FG(\306)2034
601 y FK(7)p 2034 638 V 2034 714 a(3)2085 657 y(.)-38
891 y(On)e(en)h(d\351duit)j FB(y)g FG(\306)c FB(x)e FG(\241)10
b FK(4)15 b FG(\306)816 859 y FI(7)p 816 872 31 5 v 816
920 a(3)867 891 y FG(\241)942 859 y FI(4)p 942 872 V
942 920 a(1)997 891 y FG(\306)1076 859 y FI(7)p 1076
872 V 1076 920 a(3)1127 891 y FG(\241)1202 859 y FI(12)p
1202 872 62 5 v 1218 920 a(3)1288 891 y FG(\306)f(\241)1422
859 y FI(5)p 1422 872 31 5 v 1422 920 a(3)1463 891 y
FK(.)-38 1015 y(C)o(onclusion)19 b(:)h FB(M)500 950 y
Ft(\241)539 982 y FI(7)p 539 995 V 539 1043 a(3)580 1015
y FK(;)8 b FG(\241)673 982 y FI(5)p 673 995 V 673 1043
a(3)714 950 y Ft(\242)752 1015 y FK(.)-246 1110 y
SDict begin H.S end
 -246
1110 a -246 1110 a
SDict begin 12 H.A end
 -246 1110 a -246 1110 a
SDict begin [/View [/XYZ H.V]/Dest (exo.80) cvn /DEST pdfmark end
 -246 1110
a -246 1129 a
SDict begin H.S end
 -246 1129 a -246 1129 a
SDict begin 12 H.A end
 -246 1129 a -246
1129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.245) cvn /DEST pdfmark end
 -246 1129 a 0 TeXcolorgray 85 x FL(Ex)o(er)o(cice)14
b(80)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(ace)g(la)h(droite)f FB(D)j
FK(:)f FB(y)i FG(\306)14 b FK(2)r FB(x)h FG(\305)10 b
FK(1)19 b(\340)e(par)q(tir)g(d)n('un)h(tableau)g(de)f(valeurs)h(avec)g
(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray
0 TeXcolorgray 767 1333 441 4 v 767 1433 4 100 v 822
1403 a FB(x)p 917 1433 V 109 w FK(0)p 1060 1433 V 103
w(2)p 1204 1433 V 767 1436 441 4 v 767 1536 4 100 v 824
1506 a FB(y)p 917 1536 V 110 w FK(1)p 1060 1536 V 103
w(5)p 1204 1536 V 767 1539 441 4 v 0 TeXcolorgray 2050
1569 9 240 v 0 TeXcolorgray 2923 1413 a(2)10 b FG(\243)g
FK(0)g FG(\305)g FK(1)16 b FG(\306)e FK(1)2923 1537 y(2)c
FG(\243)g FK(2)g FG(\305)g FK(1)16 b FG(\306)e FK(5)-246
1639 y
SDict begin H.S end
 -246 1639 a -246 1639 a
SDict begin 12 H.A end
 -246 1639 a -246 1639
a
SDict begin [/View [/XYZ H.V]/Dest (Item.246) cvn /DEST pdfmark end
 -246 1639 a 0 TeXcolorgray -141 1753 a FK(2.)p 0 TeXcolorgray
43 w(La)j(droite)g(\()6 b FB(A)s(B)h FK(\))18 b(a)f(une)h(\351quation)h
(de)e(la)g(for)q(me)22 b FB(y)f FG(\306)16 b FB(a)6 b(x)15
b FG(\305)10 b FB(b)q FK(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1495
1983 y FB(a)h FG(\306)1640 1926 y FB(y)1679 1938 y Fw(B)1736
1926 y FG(\241)c FB(y)1848 1938 y Fw(A)p 1635 1963 257
5 v 1637 2040 a FB(x)1678 2052 y Fw(B)1736 2040 y FG(\241)e
FB(x)1848 2052 y Fw(A)1916 1983 y FG(\306)1995 1926 y(\241)p
FK(2)e FG(\241)g FK(2)p 1995 1963 212 5 v 2023 2040 a(4)g
FG(\241)g FK(2)2231 1983 y FG(\306)2310 1926 y(\241)p
FK(4)p 2310 1963 96 5 v 2337 2040 a(2)2429 1983 y FG(\306)15
b(\241)p FK(2.)-38 2182 y(A)i(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14 b(\241)p
FK(2)r FB(x)h FG(\305)10 b FB(b)q FK(.)-38 2345 y(La)17
b(droite)g(\()6 b FB(A)s(B)h FK(\))18 b(passe)g(par)23
b FB(A)s FK(\(2;)8 b(2\),)19 b(donc)1883 2528 y(2)c FG(\306)f(\241)p
FK(2)c FG(\243)g FK(2)g FG(\305)g FB(b)1883 2652 y FK(2)15
b FG(\306)f(\241)p FK(4)c FG(\305)g FB(b)1767 2777 y
FK(2)g FG(\305)g FK(4)16 b FG(\306)1999 2779 y FA(\010)2028
2765 y(\010)2007 2777 y FG(\241)p FK(4)11 b FG(\305)f
FB(b)k FG(\305)2300 2793 y FA(\001)2300 2777 y FK(4)1883
2901 y(6)h FG(\306)f FB(b)-38 3098 y FK(C)o(onclusion)19
b(:)f(\()6 b FB(A)s(B)h FK(\))14 b(:)k FB(y)k FG(\306)14
b(\241)p FK(2)r FB(x)h FG(\305)10 b FK(6.)-246 3132 y
SDict begin H.S end

-246 3132 a -246 3132 a
SDict begin 12 H.A end
 -246 3132 a -246 3132 a
SDict begin [/View [/XYZ H.V]/Dest (Item.247) cvn /DEST pdfmark end
 -246
3132 a 0 TeXcolorgray -141 3227 a FK(3.)p 0 TeXcolorgray
43 w(On)17 b(a)g FB(D)k FK(:)d FB(y)j FG(\306)15 b FK(2)r
FB(x)g FG(\305)10 b FK(1)18 b(et)g(\()6 b FB(A)s(B)h
FK(\))15 b(:)j FB(y)j FG(\306)14 b(\241)p FK(2)r FB(x)h
FG(\305)10 b FK(6.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o
(donn\351es)g(de)h FB(M)7 b FK(,)18 b(on)g(r\351sout)g(l)o
('\351quation)h(:)1759 3524 y(2)r FB(x)c FG(\305)10 b
FK(1)16 b FG(\306)e(\241)p FK(2)r FB(x)h FG(\305)10 b
FK(6)1643 3648 y(2)r FB(x)15 b FG(\305)1804 3664 y FA(\001)1804
3648 y FK(1)d FG(\241)1921 3664 y FA(\001)1921 3648 y
FK(1)j FG(\306)f(\241)p FK(2)r FB(x)h FG(\305)10 b FK(6)g
FG(\241)g FK(1)1712 3773 y(2)r FB(x)15 b FG(\305)10 b
FK(2)r FB(x)22 b FG(\306)2037 3767 y FA(\030)2112 3748
y(\030)2045 3773 y FG(\241)p FK(2)r FB(x)16 b FG(\305)10
b FK(5)g FG(\305)r FA(\010)2390 3763 y(\010)2377 3773
y FK(2)r FB(x)1864 3919 y FA(\001)1865 3903 y FK(4)r
FB(x)p 1865 3940 87 5 v 1887 4036 a FA(\001)1888 4020
y FK(4)1976 3959 y FG(\306)2055 3903 y FK(5)p 2055 3940
41 5 v 2055 4016 a(4)1917 4123 y FB(x)20 b FG(\306)14
b FK(1,)8 b(25.)-38 4320 y(On)17 b(en)h(d\351duit)j FB(y)g
FG(\306)15 b FK(2)r FB(x)g FG(\305)10 b FK(1)16 b FG(\306)e
FK(2)c FG(\243)g FK(1,)e(25)i FG(\305)g FK(1)17 b FG(\306)e
FK(3,)8 b(5.)-38 4434 y(C)o(onclusion)19 b(:)h FB(M)7
b FK(\(1,)h(25)19 b(;)26 b(3,)8 b(5\).)-246 4460 y
SDict begin H.S end
 -246
4460 a -246 4460 a
SDict begin 12 H.A end
 -246 4460 a -246 4460 a
SDict begin [/View [/XYZ H.V]/Dest (Item.248) cvn /DEST pdfmark end
 -246 4460
a 0 TeXcolorgray -141 4563 a FK(4.)p 0 TeXcolorgray 43
w FB(D)21 b FK(:)d FB(y)j FG(\306)14 b FK(2)r FB(x)h
FG(\305)10 b FK(1)19 b(coupe)f(l)o('axe)h(des)e(abscisses)h(en)i
FB(N)9 b FK(,)17 b(donc)g(l)o('or)o(donn\351e)h(de)h
FB(N)26 b FK(est)18 b(0.)-38 4677 y(P)n(our)f(d\351ter)q(miner)h(l)o
('abscisse)g(de)i FB(N)9 b FK(,)17 b(on)g(r)o(emplace)h(donc)j
FB(y)j FK(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e
FB(D)24 b FK(et)18 b(on)f(r\351sout)h(l)o('\351quation)i(:)1895
4974 y(0)14 b FG(\306)g FK(2)r FB(x)h FG(\305)10 b FK(1)1779
5098 y(0)g FG(\241)g FK(1)15 b FG(\306)f FK(2)r FB(x)h
FG(\305)2179 5114 y FA(\001)2179 5098 y FK(1)d FG(\241)2296
5114 y FA(\001)2296 5098 y FK(1)1830 5229 y FG(\241)p
FK(1)p 1830 5265 96 5 v 1857 5342 a(2)1949 5285 y FG(\306)2028
5244 y FA(\001)2028 5229 y FK(2)s FB(x)p 2028 5265 87
5 v 2051 5362 a FA(\001)2052 5346 y FK(2)1771 5449 y
FG(\241)p FK(0,)c(5)15 b FG(\306)h FB(x)5 b FK(.)-38
5646 y(C)o(onclusion)19 b(:)h FB(N)9 b FK(\()p FG(\241)p
FK(0,)f(5)17 b(;)26 b(0\).)p 0 TeXcolorgray 1909 5895
a(46)p 0 TeXcolorgray eop end
%%Page: 47 47
TeXDict begin 47 46 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.47) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 842 1989
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.88686 a add def
/d 0.0 a add neg def /h 269.16269 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 842 1989 a 1858 1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 144.53998 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 186.64992 0.0 -82.51277   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 144.53998  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 144.53998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-82.51277  def /maxTickline 186.64992  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 186.64992  0 -82.51277  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -82.51277
 186.64992  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 144.53998  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1843 1401 a FI(0)205
b(1)g(2)g(3)g(4)-1233 b FH(\241)p FI(1)-309 b FH(\241)p
FI(2)g FH(\241)p FI(3)g FH(\241)p FI(4)1769 1323 y(0)1727
1560 y FH(\241)p FI(1)1727 1796 y FH(\241)p FI(2)1769
1087 y(1)1769 851 y(2)1769 615 y(3)1769 378 y(4)1769
142 y(5)1769 -94 y(6)1858 1304 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 5.08 def /dx x1 x sub 49 div def /F@pstplot ((--2.--4.*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.08
def /dx x1 x sub 49 div def /F@pstplot ((-12.--4.*x)/-2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304 a
tx@Dict begin { -45.52455 -39.83366 } PutCoor PutBegin  end
 1858
1304 a 0.30196 0.30196 1 TeXcolorrgb FB(D)p 0 TeXcolorgray
1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a 1858 1304 a
tx@Dict begin { 59.18175 62.59595 } PutCoor PutBegin  end
 1858 1304 a 1 0 0
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858
1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304
a
tx@Dict begin { 116.08723 -51.21501 } PutCoor PutBegin  end
 1858 1304 a 1 0 0 TeXcolorrgb FB(B)p 0 TeXcolorgray
1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 35.56592
99.5846   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 1304 a
tx@Dict begin { 43.24829 100.15378 } PutCoor PutBegin  end
 1858 1304 a 0 1 0 TeXcolorrgb 2 w FB(M)p
0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -14.22636
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304 a
tx@Dict begin { -22.1931 6.82881 } PutCoor PutBegin  end
 1858 1304 a 0 1 0
TeXcolorrgb 2 w FB(N)p 0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858
1304 a 3058 1989 a
currentpoint initclip moveto
 3058 1989 a -246 2072 a
SDict begin H.S end
 -246 2072
a -246 2072 a
SDict begin 12 H.A end
 -246 2072 a -246 2072 a
SDict begin [/View [/XYZ H.V]/Dest (exo.81) cvn /DEST pdfmark end
 -246 2072 a -246
2074 a
SDict begin H.S end
 -246 2074 a -246 2074 a
SDict begin 12 H.A end
 -246 2074 a -246 2074
a
SDict begin [/View [/XYZ H.V]/Dest (Item.249) cvn /DEST pdfmark end
 -246 2074 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)14
b(81)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(La)j(\002gur)o(e)g(est)h(\340)f(la)g(\002n.)-246
2222 y
SDict begin H.S end
 -246 2222 a -246 2222 a
SDict begin 12 H.A end
 -246 2222 a -246 2222
a
SDict begin [/View [/XYZ H.V]/Dest (Item.250) cvn /DEST pdfmark end
 -246 2222 a 0 TeXcolorgray -141 2317 a FK(2.)p 0 TeXcolorgray
43 w(La)g(droite)g(\()6 b FB(A)s(B)h FK(\))18 b(a)f(une)h(\351quation)h
(de)e(la)g(for)q(me)22 b FB(y)f FG(\306)16 b FB(a)6 b(x)15
b FG(\305)10 b FB(b)q FK(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1585
2547 y FB(a)h FG(\306)1730 2491 y FB(y)1769 2503 y Fw(B)1826
2491 y FG(\241)c FB(y)1938 2503 y Fw(A)p 1726 2528 257
5 v 1728 2604 a FB(x)1769 2616 y Fw(B)1826 2604 y FG(\241)e
FB(x)1938 2616 y Fw(A)2006 2547 y FG(\306)2140 2491 y
FK(3)e FG(\241)g FK(1)p 2085 2528 265 5 v 2085 2604 a(1)g
FG(\241)g FK(\()p FG(\241)p FK(2\))2374 2547 y FG(\306)2453
2491 y FK(2)p 2453 2528 41 5 v 2453 2604 a(3)2504 2547
y(.)-38 2761 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)1093 2728
y FI(2)p 1093 2741 31 5 v 1093 2789 a(3)1136 2761 y FB(x)15
b FG(\305)10 b FB(b)q FK(.)-38 2925 y(La)17 b(droite)g(\()6
b FB(A)s(B)h FK(\))18 b(passe)g(par)23 b FB(A)s FK(\()p
FG(\241)p FK(2;)8 b(1\),)19 b(donc)1866 3140 y(1)c FG(\306)2000
3084 y FK(2)p 2000 3121 41 5 v 2000 3197 a(3)2061 3140
y FG(\243)10 b FK(\()p FG(\241)p FK(2\))g FG(\305)g FB(b)1866
3338 y FK(1)15 b FG(\306)f(\241)2055 3282 y FK(4)p 2055
3319 V 2055 3395 a(3)2116 3338 y FG(\305)c FB(b)1721
3488 y FK(3)p 1721 3525 V 1721 3602 a(3)1781 3545 y FG(\305)1856
3488 y FK(4)p 1856 3525 V 1856 3602 a(3)1921 3545 y FG(\306)1980
3610 y FA(\023)2042 3527 y(\023)2054 3512 y(\023)1990
3545 y FG(\241)2055 3488 y FK(4)p 2055 3525 V 2055 3602
a(3)2116 3545 y FG(\305)g FB(b)k FG(\305)2310 3610 y
FA(\003)2331 3527 y(\003)2335 3512 y(\003)2313 3488 y
FK(4)p 2313 3525 V 2313 3602 a(3)1856 3686 y(7)p 1856
3723 V 1856 3799 a(3)1921 3743 y FG(\306)g FB(b)-38 3977
y FK(C)o(onclusion)19 b(:)f(\()6 b FB(A)s(B)h FK(\))14
b(:)k FB(y)k FG(\306)767 3945 y FI(2)p 767 3958 31 5
v 767 4006 a(3)809 3977 y FB(x)15 b FG(\305)939 3945
y FI(7)p 939 3958 V 939 4006 a(3)980 3977 y FK(.)-246
4021 y
SDict begin H.S end
 -246 4021 a -246 4021 a
SDict begin 12 H.A end
 -246 4021 a -246 4021
a
SDict begin [/View [/XYZ H.V]/Dest (Item.251) cvn /DEST pdfmark end
 -246 4021 a 0 TeXcolorgray -141 4106 a FK(3.)p 0 TeXcolorgray
43 w(On)i(tr)o(ace)h(la)f(droite)g FC(\242)e FK(:)j FB(y)j
FG(\306)14 b(\241)p FK(2)r FB(x)h FG(\305)10 b FK(3)19
b(\340)e(par)q(tir)g(d)n('un)h(tableau)g(de)f(valeurs)h(avec)g(deux)f
(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray
0 TeXcolorgray 740 4226 496 4 v 740 4325 4 100 v 795
4296 a FB(x)p 889 4325 V 109 w FK(0)p 1033 4325 V 130
w(2)p 1231 4325 V 740 4329 496 4 v 740 4428 4 100 v 797
4399 a FB(y)p 889 4428 V 110 w FK(3)p 1033 4428 V 103
w FG(\241)p FK(1)p 1231 4428 V 740 4432 496 4 v 0 TeXcolorgray
2050 4462 9 240 v 0 TeXcolorgray 2868 4306 a FG(\241)10
b FK(2)g FG(\243)g FK(0)g FG(\305)g FK(3)16 b FG(\306)e
FK(3)2868 4430 y FG(\241)c FK(2)g FG(\243)g FK(2)g FG(\305)g
FK(3)16 b FG(\306)e(\241)p FK(1)-246 4531 y
SDict begin H.S end
 -246 4531
a -246 4531 a
SDict begin 12 H.A end
 -246 4531 a -246 4531 a
SDict begin [/View [/XYZ H.V]/Dest (Item.252) cvn /DEST pdfmark end
 -246 4531 a 0 TeXcolorgray
-141 4646 a FK(4.)p 0 TeXcolorgray 43 w(\()6 b FB(A)s(B)h
FK(\))14 b(:)19 b FB(y)i FG(\306)317 4613 y FI(2)p 317
4626 31 5 v 317 4674 a(3)360 4646 y FB(x)15 b FG(\305)489
4613 y FI(7)p 489 4626 V 489 4674 a(3)547 4646 y FK(coupe)k(l)o('axe)f
(des)f(abscisses)i(en)g FB(M)7 b FK(,)19 b(donc)e(l)o('or)o(donn\351e)h
(de)h FB(M)25 b FK(est)18 b(0.)-38 4760 y(P)n(our)f(d\351ter)q(miner)h
(l)o('abscisse)g(de)i FB(M)7 b FK(,)18 b(on)f(r)o(emplace)h(donc)j
FB(y)j FK(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e(\()6
b FB(A)s(B)h FK(\))18 b(et)g(on)f(r\351sout)h(l)o('\351quation)i(:)p
0 TeXcolorgray 1909 5895 a(47)p 0 TeXcolorgray eop end
%%Page: 48 48
TeXDict begin 48 47 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.48) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1908 35 a FK(0)15 b FG(\306)2042 -21 y
FK(2)p 2042 16 41 5 v 2042 92 a(3)2094 35 y FB(x)g FG(\305)2224
-21 y FK(7)p 2224 16 V 2224 92 a(3)1772 242 y(0)10 b
FG(\241)1898 185 y FK(7)p 1898 222 V 1898 298 a(3)1963
242 y FG(\306)2042 185 y FK(2)p 2042 222 V 2042 298 a(3)2094
242 y FB(x)15 b FG(\305)2222 307 y FA(\003)2242 224 y(\003)2246
209 y(\003)2224 185 y FK(7)p 2224 222 V 2224 298 a(3)2285
242 y FG(\241)2357 307 y FA(\003)2378 224 y(\003)2382
209 y(\003)2360 185 y FK(7)p 2360 222 V 2360 298 a(3)1833
412 y FG(\241)1898 379 y FI(7)p 1898 392 31 5 v 1898
441 a(3)p 1833 459 106 5 v 1870 511 a(2)p 1870 524 31
5 v 1870 572 a(3)1963 478 y FG(\306)2038 449 y FA(\001)2055
415 y(\001)2052 379 y FI(2)p 2052 392 V 2052 441 a(3)2095
412 y FB(x)p 2042 459 98 5 v 2061 589 a FA(\001)2078
555 y(\001)2075 519 y FI(2)p 2075 532 31 5 v 2075 580
a(3)1697 737 y FG(\241)1762 681 y FK(7)p 1762 718 41
5 v 1762 814 a FA(\001)1762 798 y FK(3)1823 737 y FG(\243)1898
697 y FA(\001)1898 681 y FK(3)p 1898 718 V 1898 794 a(2)1963
737 y FG(\306)h FB(x)1784 901 y FG(\241)p FK(3,)8 b(5)16
b FG(\306)g FB(x)5 b FK(.)-38 1098 y(C)o(onclusion)19
b(:)h FB(M)7 b FK(\()p FG(\241)p FK(3,)h(5)19 b(;)25
b(0\).)-246 1123 y
SDict begin H.S end
 -246 1123 a -246 1123 a
SDict begin 12 H.A end
 -246 1123
a -246 1123 a
SDict begin [/View [/XYZ H.V]/Dest (Item.253) cvn /DEST pdfmark end
 -246 1123 a 0 TeXcolorgray -141 1226 a
FK(5.)p 0 TeXcolorgray 43 w(On)17 b(a)g(\()6 b FB(A)s(B)h
FK(\))15 b(:)j FB(y)j FG(\306)496 1194 y FI(2)p 496 1207
31 5 v 496 1255 a(3)539 1226 y FB(x)15 b FG(\305)669
1194 y FI(7)p 669 1207 V 669 1255 a(3)727 1226 y FK(et)i
FC(\242)e FK(:)k FB(y)i FG(\306)14 b(\241)p FK(2)r FB(x)h
FG(\305)10 b FK(3.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o
(donn\351es)f(de)i FB(N)9 b FK(,)17 b(on)h(r\351sout)g(l)o
('\351quation)i(:)1749 1482 y(2)p 1749 1519 41 5 v 1749
1595 a(3)1801 1538 y FB(x)15 b FG(\305)1931 1482 y FK(7)p
1931 1519 V 1931 1595 a(3)1996 1538 y FG(\306)f(\241)p
FK(2)r FB(x)h FG(\305)10 b FK(3)1613 1688 y(2)p 1613
1725 V 1613 1802 a(3)1666 1745 y FB(x)15 b FG(\305)1793
1810 y FA(\003)1814 1727 y(\003)1817 1712 y(\003)1795
1688 y FK(7)p 1795 1725 V 1795 1802 a(3)1856 1745 y FG(\241)1928
1810 y FA(\003)1949 1727 y(\003)1953 1712 y(\003)1931
1688 y FK(7)p 1931 1725 V 1931 1802 a(3)1996 1745 y FG(\306)f(\241)p
FK(2)r FB(x)h FG(\305)2292 1688 y FK(9)p 2292 1725 V
2292 1802 a(3)2352 1745 y FG(\241)2427 1688 y FK(7)p
2427 1725 V 2427 1802 a(3)1722 1886 y(2)p 1722 1923 V
1722 1999 a(3)1775 1943 y FB(x)g FG(\305)10 b FK(2)r
FB(x)21 b FG(\306)2057 1937 y FA(\030)2132 1918 y(\030)2065
1943 y FG(\241)p FK(2)r FB(x)16 b FG(\305)2292 1886 y
FK(2)p 2292 1923 V 2292 1999 a(3)2352 1943 y FG(\305)r
FA(\010)2430 1933 y(\010)2417 1943 y FK(2)r FB(x)1702
2084 y FK(2)p 1702 2121 V 1702 2197 a(3)1755 2140 y FB(x)f
FG(\305)1884 2084 y FK(6)p 1884 2121 V 1884 2197 a(3)1937
2140 y FB(x)20 b FG(\306)2075 2084 y FK(2)p 2075 2121
V 2075 2197 a(3)1870 2348 y FA(\001)1887 2314 y(\001)1884
2278 y FI(8)p 1884 2291 31 5 v 1884 2340 a(3)1927 2311
y FB(x)p 1874 2358 98 5 v 1894 2488 a FA(\001)1911 2454
y(\001)1907 2418 y FI(8)p 1907 2431 31 5 v 1907 2479
a(3)1996 2377 y FG(\306)2085 2278 y FI(2)p 2085 2291
V 2085 2340 a(3)p 2075 2358 51 5 v 2085 2410 a(8)p 2085
2423 31 5 v 2085 2471 a(3)1937 2636 y FB(x)g FG(\306)2075
2580 y FK(2)p 2075 2617 41 5 v 2075 2713 a FA(\001)2075
2697 y FK(3)2135 2636 y FG(\243)2210 2596 y FA(\001)2210
2580 y FK(3)p 2210 2617 V 2210 2693 a(8)1937 2800 y FB(x)g
FG(\306)14 b FK(0,)8 b(25)-38 2997 y(On)17 b(en)h(d\351duit)j
FB(y)g FG(\306)15 b(\241)p FK(2)r FB(x)g FG(\305)10 b
FK(3)16 b FG(\306)e(\241)p FK(2)c FG(\243)g FK(0,)e(25)i
FG(\305)g FK(3)17 b FG(\306)d FK(2,)8 b(5.)-38 3111 y(C)o(onclusion)19
b(:)h FB(N)9 b FK(\(0,)f(25)18 b(;)26 b(2,)8 b(5\).)p
0 TeXcolorgray 0 TeXcolorgray 842 5447 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.88686 a add def
/d 0.0 a add neg def /h 269.16269 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 842 5447 a 1858
4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 144.53998 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 186.64992 0.0 -82.51277   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 144.53998  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 144.53998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-82.51277  def /maxTickline 186.64992  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 186.64992  0 -82.51277  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -82.51277
 186.64992  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 144.53998  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1843 4859 a FI(0)205 b(1)g(2)g(3)g(4)-1233
b FH(\241)p FI(1)-309 b FH(\241)p FI(2)g FH(\241)p FI(3)g
FH(\241)p FI(4)1769 4781 y(0)1727 5017 y FH(\241)p FI(1)1727
5254 y FH(\241)p FI(2)1769 4545 y(1)1769 4309 y(2)1769
4072 y(3)1769 3836 y(4)1769 3600 y(5)1769 3364 y(6)1858
4762 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 5.08 def /dx x1 x sub 49 div def /F@pstplot ((--6.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.08
def /dx x1 x sub 49 div def /F@pstplot ((-7.-2.*x)/-3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1858 4762 a
tx@Dict begin { -43.81703 144.53998 } PutCoor PutBegin  end
 1858 4762 a 0.30196 0.30196 1
TeXcolorrgb 53 x FC(\242)p 0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end

1858 4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 -28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 4762 a
tx@Dict begin { -53.49129 19.34766 } PutCoor PutBegin  end
 1858 4762 a 1 0 0 TeXcolorrgb 6 w FB(A)p
0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 4762 a
tx@Dict begin { 35.8503 74.54604 } PutCoor PutBegin  end
 1858 4762 a 1 0 0
TeXcolorrgb FB(B)p 0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 7.11317 71.13185
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 4762 a
tx@Dict begin { 2.27626 54.62921 } PutCoor PutBegin  end

1858 4762 a 0 1 0 TeXcolorrgb 2 w FB(N)p 0 TeXcolorgray
1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -99.5846
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 4762 a
tx@Dict begin { -107.55133 6.82881 } PutCoor PutBegin  end
 1858 4762 a 0 1 0 TeXcolorrgb 2 w FB(M)p
0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a 3058 5447 a
currentpoint initclip moveto
 3058
5447 a -246 5529 a
SDict begin H.S end
 -246 5529 a -246 5529 a
SDict begin 12 H.A end
 -246 5529
a -246 5529 a
SDict begin [/View [/XYZ H.V]/Dest (exo.82) cvn /DEST pdfmark end
 -246 5529 a -246 5531 a
SDict begin H.S end
 -246 5531 a -246
5531 a
SDict begin 12 H.A end
 -246 5531 a -246 5531 a
SDict begin [/View [/XYZ H.V]/Dest (Item.254) cvn /DEST pdfmark end
 -246 5531 a 0 TeXcolorgray
115 x FL(Ex)o(er)o(cice)14 b(82)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(P)n(our)j(tr)o(acer)g(les)h(droites)f
FC(\242)h FK(et)f(D,)g(on)h(fait)g(un)g(tableau)f(de)h(valeurs)g(avec)f
(deux)h(valeurs)g(\(je)f(ne)h(donne)g(pas)f(de)h(d\351tail\).)p
0 TeXcolorgray 1909 5895 a(48)p 0 TeXcolorgray eop end
%%Page: 49 49
TeXDict begin 49 48 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.49) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.255) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(a)g FC(\242)e FK(:)j
FB(y)j FG(\306)c FB(x)e FG(\241)10 b FK(3)18 b(et)g(D)13
b(:)19 b FB(y)i FG(\306)14 b(\241)p FK(2)r FB(x)h FG(\305)10
b FK(1.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o(donn\351es)g(de)
h FB(M)7 b FK(,)18 b(on)f(r\351sout)i(l)o('\351quation)g(:)1781
134 y FB(x)c FG(\241)10 b FK(3)15 b FG(\306)g(\241)p
FK(2)r FB(x)g FG(\305)10 b FK(1)1665 259 y FB(x)15 b
FG(\241)1784 275 y FA(\001)1784 259 y FK(3)d FG(\305)1901
275 y FA(\001)1901 259 y FK(3)i FG(\306)h(\241)p FK(2)r
FB(x)g FG(\305)10 b FK(1)g FG(\305)g FK(3)1735 383 y
FB(x)15 b FG(\305)10 b FK(2)r FB(x)20 b FG(\306)2016
377 y FA(\030)2092 359 y(\030)2025 383 y FG(\241)p FK(2)r
FB(x)c FG(\305)10 b FK(4)g FG(\305)r FA(\010)2370 373
y(\010)2357 383 y FK(2)r FB(x)1844 529 y FA(\001)1844
513 y FK(3)s FB(x)p 1844 550 87 5 v 1867 647 a FA(\001)1867
630 y FK(3)1955 569 y FG(\306)2034 513 y FK(4)p 2034
550 41 5 v 2034 626 a(3)1897 771 y FB(x)19 b FG(\306)2034
715 y FK(4)p 2034 752 V 2034 828 a(3)2085 771 y(.)-38
1006 y(On)e(en)h(d\351duit)j FB(y)g FG(\306)c FB(x)e
FG(\241)10 b FK(3)15 b FG(\306)816 974 y FI(4)p 816 987
31 5 v 816 1035 a(3)867 1006 y FG(\241)942 974 y FI(9)p
942 987 V 942 1035 a(3)997 1006 y FG(\306)f(\241)1131
974 y FI(5)p 1131 987 V 1131 1035 a(3)1172 1006 y FK(.)-38
1130 y(C)o(onclusion)19 b(:)h FB(M)500 1065 y Ft(\241)539
1097 y FI(4)p 539 1110 V 539 1158 a(3)580 1130 y FK(;)8
b FG(\241)673 1097 y FI(5)p 673 1110 V 673 1158 a(3)714
1065 y Ft(\242)752 1130 y FK(.)-246 1173 y
SDict begin H.S end
 -246 1173
a -246 1173 a
SDict begin 12 H.A end
 -246 1173 a -246 1173 a
SDict begin [/View [/XYZ H.V]/Dest (Item.256) cvn /DEST pdfmark end
 -246 1173 a 0 TeXcolorgray
-141 1259 a FK(3.)p 0 TeXcolorgray 43 w(La)17 b(droite)g(\()6
b FB(A)s(B)h FK(\))18 b(a)f(une)h(\351quation)h(de)e(la)g(for)q(me)22
b FB(y)f FG(\306)16 b FB(a)6 b(x)15 b FG(\305)10 b FB(b)q
FK(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1489 1488 y
FB(a)h FG(\306)1634 1432 y FB(y)1673 1444 y Fw(B)1730
1432 y FG(\241)c FB(y)1842 1444 y Fw(A)p 1629 1469 257
5 v 1631 1545 a FB(x)1672 1557 y Fw(B)1730 1545 y FG(\241)e
FB(x)1842 1557 y Fw(A)1910 1488 y FG(\306)2043 1432 y
FK(5)e FG(\241)g FK(1)p 1989 1469 265 5 v 1989 1545 a(3)g
FG(\241)g FK(\()p FG(\241)p FK(2\))2278 1488 y FG(\306)2357
1432 y FK(4)p 2357 1469 41 5 v 2357 1545 a(5)2422 1488
y FG(\306)k FK(0,)8 b(8.)-38 1688 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g
(que)g(\()6 b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14
b FK(0,)8 b(8)r FB(x)15 b FG(\305)10 b FB(b)q FK(.)-38
1852 y(La)17 b(droite)g(\()6 b FB(A)s(B)h FK(\))18 b(passe)g(par)23
b FB(A)s FK(\()p FG(\241)p FK(2;)8 b(1\),)19 b(donc)1849
2034 y(1)14 b FG(\306)g FK(0,)8 b(8)i FG(\243)g FK(\()p
FG(\241)p FK(2\))g FG(\305)g FB(b)1849 2159 y FK(1)k
FG(\306)g(\241)p FK(1,)8 b(6)i FG(\305)g FB(b)1664 2283
y FK(1)g FG(\305)g FK(1,)e(6)16 b FG(\306)1964 2285 y
FA(\030)2047 2265 y(\030)2062 2261 y(\030)1972 2283 y
FG(\241)p FK(1,)8 b(6)k FG(\305)e FB(b)k FG(\305)2326
2294 y FA(\010)2369 2273 y(\010)2334 2283 y FK(1,)8 b(6)1780
2408 y(2,)g(6)15 b FG(\306)f FB(b)-38 2605 y FK(C)o(onclusion)19
b(:)f(\()6 b FB(A)s(B)h FK(\))14 b(:)k FB(y)k FG(\306)14
b FK(0,)8 b(8)r FB(x)15 b FG(\305)10 b FK(2,)e(6.)-246
2639 y
SDict begin H.S end
 -246 2639 a -246 2639 a
SDict begin 12 H.A end
 -246 2639 a -246 2639
a
SDict begin [/View [/XYZ H.V]/Dest (Item.257) cvn /DEST pdfmark end
 -246 2639 a 0 TeXcolorgray -141 2734 a FK(4.)p 0 TeXcolorgray
43 w(\()e FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14
b FK(0,)8 b(8)r FB(x)15 b FG(\305)10 b FK(2,)e(6)21 b(coupe)d(l)o('axe)
g(des)g(abscisses)g(en)i FB(N)9 b FK(,)17 b(donc)g(l)o('or)o(donn\351e)
h(de)h FB(N)26 b FK(est)18 b(0.)-38 2848 y(P)n(our)f(d\351ter)q(miner)h
(l)o('abscisse)g(de)i FB(N)9 b FK(,)17 b(on)g(r)o(emplace)h(donc)j
FB(y)j FK(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e(\()6
b FB(A)s(B)h FK(\))18 b(et)f(on)h(r\351sout)g(l)o('\351quation)i(:)1822
3145 y(0)14 b FG(\306)g FK(0,)8 b(8)r FB(x)15 b FG(\305)10
b FK(2,)e(6)1637 3270 y(0)i FG(\241)g FK(2,)e(6)16 b
FG(\306)e FK(0,)8 b(8)r FB(x)15 b FG(\305)2166 3281 y
FA(\010)2211 3260 y(\010)2174 3270 y FK(2,)8 b(6)14 b
FG(\241)2353 3281 y FA(\010)2396 3260 y(\010)2361 3270
y FK(2,)8 b(6)1688 3384 y FG(\241)p FK(2,)g(6)p 1688
3421 165 5 v 1715 3498 a(0,)g(8)1876 3441 y FG(\306)1947
3395 y FA(\010)1990 3374 y(\010)1955 3384 y FK(0,)g(8)t
FB(x)p 1955 3421 156 5 v 1970 3509 a FA(\010)2013 3487
y(\010)1979 3498 y FK(0,)g(8)1657 3611 y FG(\241)p FK(3,)g(25)16
b FG(\306)g FB(x)5 b FK(.)-38 3809 y(C)o(onclusion)19
b(:)h FB(N)9 b FK(\()p FG(\241)p FK(3,)f(25)18 b(;)26
b(0\).)p 0 TeXcolorgray 1909 5895 a(49)p 0 TeXcolorgray
eop end
%%Page: 50 50
TeXDict begin 50 49 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.50) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 795 1951
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 278.26778 a add def
/d 0.0 a add neg def /h 264.61015 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 795 1951 a 1948 1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 139.41826 0.0 -138.84952 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 157.628 0.0 -106.98215   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 139.41826  0 -138.84952  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -138.84952
 139.41826  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-106.98215  def /maxTickline 157.628  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 157.628
0.0 -106.98215   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.41826
0.0 -138.84952 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 157.628  0 -106.98215  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -106.98215
 157.628  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-138.84952  def /maxTickline 139.41826  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 157.628
0.0 -106.98215   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.41826
0.0 -138.84952 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1933 1160 a FI(0)204
b(1)i(2)f(3)g(4)-1233 b FH(\241)p FI(1)-309 b FH(\241)p
FI(2)g FH(\241)p FI(3)f FH(\241)p FI(4)1859 1082 y(0)1817
1319 y FH(\241)p FI(1)1817 1555 y FH(\241)p FI(2)1817
1791 y FH(\241)p FI(3)1859 846 y(1)1859 610 y(2)1859
374 y(3)1859 138 y(4)1859 -99 y(5)1948 1063 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((-3--1*x)/1)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((--1-2*x)/1)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((--13--4*x)/5)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1948 1063 a
tx@Dict begin { 95.03206 31.29819 } PutCoor PutBegin  end
 1948
1063 a 0 1 0 TeXcolorrgb 53 x FC(\242)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a 1948 1063 a
tx@Dict begin { -46.94684 98.16187 } PutCoor PutBegin  end
 1948 1063 a 1 0 0
TeXcolorrgb 53 x FB(D)p 0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948
1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 37.8422 -47.51602
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063
a
tx@Dict begin { 45.52455 -51.7842 } PutCoor PutBegin  end
 1948 1063 a 0 0 1 TeXcolorrgb 2 w FB(M)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1948 1063 a
tx@Dict begin { -64.30304 33.57402 } PutCoor PutBegin  end
 1948 1063 a 0 0 1 TeXcolorrgb 6 w FB(A)p
0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063 a
tx@Dict begin { 77.96066 146.53145 } PutCoor PutBegin  end
 1948 1063 a 0 0 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -92.4714
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063 a
tx@Dict begin { -99.5846 5.69046 } PutCoor PutBegin  end

1948 1063 a 0 0 1 TeXcolorrgb 2 w FB(N)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a 3105 1951 a
currentpoint initclip moveto
 3105 1951 a -246
1996 a
SDict begin H.S end
 -246 1996 a -246 1996 a
SDict begin 12 H.A end
 -246 1996 a -246 1996
a
SDict begin [/View [/XYZ H.V]/Dest (exo.83) cvn /DEST pdfmark end
 -246 1996 a -246 2020 a
SDict begin H.S end
 -246 2020 a -246 2020 a
SDict begin 12 H.A end
 -246
2020 a -246 2020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.258) cvn /DEST pdfmark end
 -246 2020 a -246 2020 a
SDict begin H.S end
 -246 2020
a -246 2020 a
SDict begin 12 H.A end
 -246 2020 a -246 2020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.259) cvn /DEST pdfmark end
 -246 2020 a 0 TeXcolorgray
107 x FL(Ex)o(er)o(cice)14 b(83)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 40 w(On)k(tr)o(ace)f(la)h(droite)e FB(d)22
b FK(:)d FB(y)i FG(\306)14 b FK(1,)8 b(5)r FB(x)15 b
FG(\241)10 b FK(2,)e(4)21 b(\340)c(par)q(tir)g(d)n('un)h(tableau)g(de)f
(valeurs)h(avec)f(deux)h(valeurs)o(.)f(P)m(ar)g(exemple)j(:)p
0 TeXcolorgray 0 TeXcolorgray 808 2224 633 4 v 808 2323
4 100 v 863 2293 a FB(x)p 957 2323 V 171 w FK(0)p 1225
2323 V 199 w(2)p 1437 2323 V 808 2327 633 4 v 808 2426
4 100 v 865 2396 a FB(y)p 957 2426 V 110 w FG(\241)p
FK(2,)8 b(4)p 1225 2426 V 104 w(0,)g(6)p 1437 2426 V
808 2430 633 4 v 0 TeXcolorgray 2141 2459 9 240 v 0 TeXcolorgray
2837 2303 a(1,)g(5)i FG(\243)g FK(0)g FG(\241)g FK(2,)e(4)18
b FG(\306)d(\241)p FK(2,)8 b(4)2837 2428 y(1,)g(5)i FG(\243)g
FK(2)g FG(\241)g FK(2,)e(4)18 b FG(\306)d FK(0,)8 b(6)-246
2506 y
SDict begin H.S end
 -246 2506 a -246 2506 a
SDict begin 12 H.A end
 -246 2506 a -246 2506
a
SDict begin [/View [/XYZ H.V]/Dest (Item.260) cvn /DEST pdfmark end
 -246 2506 a 0 TeXcolorgray 4 2613 a FK(\(b\))p 0 TeXcolorgray
41 w(La)17 b(droite)g FC(\242)g FK(est)h(par)o(all\350le)h(\340)e
FB(d)7 b FK(,)18 b(donc)f(elles)i(ont)e(le)h(m\352me)g(coef\002cient)h
(dir)o(ecteur)-5 b(.)17 b(Or)g(le)h(coef\002cient)g(dir)o(ecteur)f(de)g
FB(d)24 b FK(est)18 b(1,)8 b(5)19 b(donc)145 2713 y(le)e(coef\002cient)
h(dir)o(ecteur)f(de)h FC(\242)f FK(est)h(1,)8 b(5)19
b(\351galement.)g(On)e(a)g(donc)1881 2857 y FC(\242)e
FK(:)j FB(y)j FG(\306)14 b FK(1,)8 b(5)r FB(x)15 b FG(\305)10
b FB(b)q FK(.)145 3143 y(La)17 b(droite)g FC(\242)h FK(passe)g(par)23
b FB(A)s FK(\(1,)8 b(4)18 b(;)26 b(2,)8 b(2\),)19 b(donc)1933
3287 y(2,)8 b(2)16 b FG(\306)e FK(1,)8 b(5)i FG(\243)g
FK(1,)e(4)i FG(\305)g FB(b)1933 3411 y FK(2,)e(2)16 b
FG(\306)e FK(2,)8 b(1)1748 3536 y(2,)g(2)i FG(\241)g
FK(2,)e(1)18 b FG(\306)2118 3547 y FA(\010)2160 3526
y(\010)2126 3536 y FK(2,)8 b(1)j FG(\305)f FB(b)k FG(\241)2424
3547 y FA(\010)2467 3526 y(\010)2432 3536 y FK(2,)8 b(1)1933
3661 y(0,)g(1)16 b FG(\306)e FB(b)145 3812 y FK(C)o(onclusion)19
b(:)e FC(\242)e FK(:)j FB(y)j FG(\306)15 b FK(1,)8 b(5)r
FB(x)15 b FG(\305)10 b FK(0,)e(1.)p 0 TeXcolorgray 0
TeXcolorgray 1125 5515 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 223.63857 a add def
/d 0.0 a add neg def /h 198.03128 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1125 5515 a 1688 4669 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 155.9209 0.0 -67.71767 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.17041 0.0 -101.86087   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 155.9209  0 -67.71767  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.71767
 155.9209  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-101.86087  def /maxTickline 96.17041  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.17041
0.0 -101.86087   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 155.9209
0.0 -67.71767 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.17041  0 -101.86087  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -101.86087
 96.17041  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.71767  def /maxTickline 155.9209  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.17041
0.0 -101.86087   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 155.9209
0.0 -67.71767 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1673 4766 a FI(0)204 b(1)i(2)f(3)g(4)-1233 b FH(\241)p
FI(1)-309 b FH(\241)p FI(2)1599 4688 y(0)1557 4925 y
FH(\241)p FI(1)1557 5161 y FH(\241)p FI(2)1557 5397 y
FH(\241)p FI(3)1599 4452 y(1)1599 4216 y(2)1688 4669
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -2.38 def
/x1 5.48 def /dx x1 x sub 49 div def /F@pstplot ((-4.8--3.*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1688 4669 a
tx@Dict begin { 98.44667 77.96066 } PutCoor PutBegin  end

1688 4669 a 0.30196 0.30196 1 TeXcolorrgb 57 x FB(d)p
0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end
 1688 4669 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.38 def /x1 5.48
def /dx x1 x sub 49 div def /F@pstplot ((--0.2--3.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1688 4669 a
tx@Dict begin { -43.81703 -42.67911 } PutCoor PutBegin  end
 1688 4669 a 1 0 0
TeXcolorrgb 54 x FC(\242)p 0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end

1688 4669 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -68.2864   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 17.07181   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 39.83366
62.59595   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1688 4669 a
tx@Dict begin { 30.15984 67.14848 } PutCoor PutBegin  end
 1688 4669 a 1 0 0 TeXcolorrgb 6 w FB(A)p
0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end
 1688 4669 a 2982 5515 a
currentpoint initclip moveto
 2982
5515 a -246 5538 a
SDict begin H.S end
 -246 5538 a -246 5538 a
SDict begin 12 H.A end
 -246 5538
a -246 5538 a
SDict begin [/View [/XYZ H.V]/Dest (Item.261) cvn /DEST pdfmark end
 -246 5538 a -246 5538 a
SDict begin H.S end
 -246 5538 a -246
5538 a
SDict begin 12 H.A end
 -246 5538 a -246 5538 a
SDict begin [/View [/XYZ H.V]/Dest (Item.262) cvn /DEST pdfmark end
 -246 5538 a 0 TeXcolorgray
-141 5646 a FK(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 41 w(On)17 b(tr)o(ace)g(la)h(droite)f
FB(D)j FK(:)f FB(y)i FG(\306)14 b(\241)p FK(1,)8 b(5)r
FB(x)15 b FG(\241)10 b FK(1)20 b(\340)d(par)q(tir)g(d)n('un)h(tableau)g
(de)f(valeurs)h(avec)f(deux)h(valeurs)o(.)g(P)m(ar)e(exemple)k(:)p
0 TeXcolorgray 1909 5895 a(50)p 0 TeXcolorgray eop end
%%Page: 51 51
TeXDict begin 51 50 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.51) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 849 -242
551 4 v 849 -143 4 100 v 904 -173 a FB(x)p 999 -143 V
137 w FK(0)p 1197 -143 V 130 w FG(\241)p FK(2)p 1396
-143 V 849 -139 551 4 v 849 -40 4 100 v 906 -70 a FB(y)p
999 -40 V 110 w FG(\241)p FK(1)p 1197 -40 V 131 w(2)p
1396 -40 V 849 -36 551 4 v 0 TeXcolorgray 2141 -7 9 240
v 0 TeXcolorgray 2852 -163 a FG(\241)10 b FK(1,)e(5)i
FG(\243)g FK(0)g FG(\241)g FK(1)17 b FG(\306)d(\241)p
FK(1)2852 -38 y FG(\241)c FK(1,)e(5)i FG(\243)g FK(\()p
FG(\241)p FK(2\))g FG(\241)g FK(1)17 b FG(\306)d FK(2)-246
56 y
SDict begin H.S end
 -246 56 a -246 56 a
SDict begin 12 H.A end
 -246 56 a -246 56 a
SDict begin [/View [/XYZ H.V]/Dest (Item.263) cvn /DEST pdfmark end
 -246 56
a 0 TeXcolorgray 4 168 a FK(\(b\))p 0 TeXcolorgray 41
w(Le)j(coef\002cient)i(dir)o(ecteur)e(de)g FB(D)23 b
FK(est)18 b FG(\241)p FK(1,)8 b(5.)145 280 y(Le)17 b(coef\002cient)i
(dir)o(ecteur)e(de)g(\()6 b FB(A)s(B)h FK(\))17 b(est)1538
405 y FB(a)h FG(\306)1683 349 y FB(y)1722 361 y Fw(B)1779
349 y FG(\241)c FB(y)1891 361 y Fw(A)p 1678 386 257 5
v 1680 462 a FB(x)1721 474 y Fw(B)1779 462 y FG(\241)e
FB(x)1891 474 y Fw(A)1959 405 y FG(\306)2038 349 y FK(5,)c(2)i
FG(\241)g FK(2)p 2038 386 226 5 v 2045 462 a FG(\241)p
FK(1)g FG(\241)g FK(1)2287 405 y FG(\306)2367 349 y FK(3,)e(2)p
2367 386 110 5 v 2374 462 a FG(\241)p FK(2)2500 405 y
FG(\306)14 b(\241)p FK(1,)8 b(6.)145 595 y(Les)18 b(droites)f
FB(D)24 b FK(et)17 b(\()6 b FB(A)s(B)h FK(\))18 b(n)-6
b('ont)18 b(pas)g(le)f(m\352me)i(coef\002cient)f(dir)o(ecteur)-5
b(,)18 b(donc)f(elles)i(ne)e(sont)h(pas)g(par)o(all\350les)o(.)p
0 TeXcolorgray 0 TeXcolorgray 979 2598 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 258.92012 a add def
/d 0.0 a add neg def /h 232.17448 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 979 2598 a 1995
2159 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57324 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 179.25237 0.0 -52.92212   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 136.57324  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-52.92212  def /maxTickline 179.25237  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 179.25237
0.0 -52.92212   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 179.25237  0 -52.92212  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -52.92212
 179.25237  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 179.25237
0.0 -52.92212   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1980 2256 a FI(0)205 b(1)g(2)g(3)g(4)-1233
b FH(\241)p FI(1)-309 b FH(\241)p FI(2)g FH(\241)p FI(3)g
FH(\241)p FI(4)1906 2178 y(0)1864 2414 y FH(\241)p FI(1)1906
1942 y(1)1906 1706 y(2)1906 1469 y(3)1906 1233 y(4)1906
997 y(5)1995 2159 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 4.8 def /dx x1 x sub 49 div def /F@pstplot ((--7.2-3.2*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 4.8 def
/dx x1 x sub 49 div def /F@pstplot ((-1.-1.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 1995 2159 a
tx@Dict begin { -96.73915 84.2203 } PutCoor PutBegin  end
 1995
2159 a 1 0 0 TeXcolorrgb 53 x FB(D)p 0 TeXcolorgray 1995
2159 a
tx@Dict begin  PutEnd  end
 1995 2159 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1995 2159 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1995 2159 a 0.30196 0.30196 1 TeXcolorrgb
6 w FB(A)p 0 TeXcolorgray 1995 2159 a
tx@Dict begin  PutEnd  end
 1995 2159 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -28.45274 147.95418   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1995 2159 a
tx@Dict begin { -26.17647 153.64464 } PutCoor PutBegin  end
 1995 2159 a 0.30196 0.30196 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1995 2159 a
tx@Dict begin  PutEnd  end
 1995 2159
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3129 2598 a
currentpoint initclip moveto
 3129 2598 a -246
2661 a
SDict begin H.S end
 -246 2661 a -246 2661 a
SDict begin 12 H.A end
 -246 2661 a -246 2661
a
SDict begin [/View [/XYZ H.V]/Dest (exo.84) cvn /DEST pdfmark end
 -246 2661 a -246 2678 a
SDict begin H.S end
 -246 2678 a -246 2678 a
SDict begin 12 H.A end
 -246
2678 a -246 2678 a
SDict begin [/View [/XYZ H.V]/Dest (Item.264) cvn /DEST pdfmark end
 -246 2678 a 0 TeXcolorgray 112 x FL(Ex)o(er)o(cice)
14 b(84)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p
0 TeXcolorgray 43 w(La)j(droite)g(\()6 b FB(A)s(B)h FK(\))18
b(a)f(une)h(\351quation)h(de)e(la)g(for)q(me)22 b FB(y)f
FG(\306)16 b FB(a)6 b(x)15 b FG(\305)10 b FB(b)q FK(.)18
b(D)o('apr\350s)f(le)h(cours)f(:)1489 3021 y FB(a)h FG(\306)1634
2965 y FB(y)1673 2977 y Fw(B)1730 2965 y FG(\241)c FB(y)1842
2977 y Fw(A)p 1629 3002 257 5 v 1631 3078 a FB(x)1672
3090 y Fw(B)1730 3078 y FG(\241)e FB(x)1842 3090 y Fw(A)1910
3021 y FG(\306)1989 2965 y FK(0)e FG(\241)g FK(\()p FG(\241)p
FK(2\))p 1989 3002 265 5 v 2043 3078 a(5)g FG(\241)g
FK(1)2278 3021 y FG(\306)2357 2965 y FK(2)p 2357 3002
41 5 v 2357 3078 a(4)2422 3021 y FG(\306)k FK(0,)8 b(5.)-38
3211 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b FB(A)s(B)h FK(\))14 b(:)19 b FB(y)i FG(\306)14 b FK(0,)8
b(5)r FB(x)15 b FG(\305)10 b FB(b)q FK(.)-38 3368 y(La)17
b(droite)g(\()6 b FB(A)s(B)h FK(\))18 b(passe)g(par)23
b FB(A)s FK(\(1;)8 b FG(\241)p FK(2\),)19 b(donc)1849
3538 y FG(\241)p FK(2)14 b FG(\306)g FK(0,)8 b(5)i FG(\243)g
FK(1)g FG(\305)g FB(b)1849 3663 y FG(\241)p FK(2)k FG(\306)g
FK(0,)8 b(5)i FG(\305)g FB(b)1664 3787 y FG(\241)p FK(2)g
FG(\241)g FK(0,)e(5)16 b FG(\306)2019 3798 y FA(\010)2062
3777 y(\010)2027 3787 y FK(0,)8 b(5)k FG(\305)e FB(b)k
FG(\241)2326 3798 y FA(\010)2369 3777 y(\010)2334 3787
y FK(0,)8 b(5)1780 3912 y FG(\241)p FK(2,)g(5)15 b FG(\306)f
FB(b)-38 4095 y FK(C)o(onclusion)19 b(:)f(\()6 b FB(A)s(B)h
FK(\))14 b(:)k FB(y)k FG(\306)14 b FK(0,)8 b(5)r FB(x)15
b FG(\241)10 b FK(2,)e(5.)-246 4126 y
SDict begin H.S end
 -246 4126 a -246
4126 a
SDict begin 12 H.A end
 -246 4126 a -246 4126 a
SDict begin [/View [/XYZ H.V]/Dest (Item.265) cvn /DEST pdfmark end
 -246 4126 a 0 TeXcolorgray
-141 4220 a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(tr)o(ace)h(la)f(droite)
g FC(\242)e FK(:)j FB(y)j FG(\306)14 b(\241)p FK(2)r
FB(x)h FG(\305)10 b FK(5)19 b(\340)e(par)q(tir)g(d)n('un)h(tableau)g
(de)f(valeurs)h(avec)g(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p
0 TeXcolorgray 0 TeXcolorgray 767 4332 441 4 v 767 4432
4 100 v 822 4402 a FB(x)p 917 4432 V 109 w FK(0)p 1060
4432 V 103 w(2)p 1204 4432 V 767 4435 441 4 v 767 4535
4 100 v 824 4505 a FB(y)p 917 4535 V 110 w FK(5)p 1060
4535 V 103 w(1)p 1204 4535 V 767 4538 441 4 v 0 TeXcolorgray
2050 4568 9 240 v 0 TeXcolorgray 2895 4412 a FG(\241)10
b FK(2)g FG(\243)g FK(0)g FG(\305)g FK(5)16 b FG(\306)f
FK(5)2895 4536 y FG(\241)10 b FK(2)g FG(\243)g FK(2)g
FG(\305)g FK(5)16 b FG(\306)f FK(1)-246 4630 y
SDict begin H.S end
 -246 4630
a -246 4630 a
SDict begin 12 H.A end
 -246 4630 a -246 4630 a
SDict begin [/View [/XYZ H.V]/Dest (Item.266) cvn /DEST pdfmark end
 -246 4630 a 0 TeXcolorgray
-141 4742 a FK(3.)p 0 TeXcolorgray 43 w(On)i(a)g(\()6
b FB(A)s(B)h FK(\))15 b(:)j FB(y)j FG(\306)14 b FK(0,)8
b(5)r FB(x)15 b FG(\241)10 b FK(2,)e(5)21 b(et)d FC(\242)c
FK(:)19 b FB(y)i FG(\306)14 b(\241)p FK(2)r FB(x)h FG(\305)10
b FK(5.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o(donn\351es)g(de)
h FB(M)7 b FK(,)18 b(on)f(r\351sout)i(l)o('\351quation)g(:)1690
5025 y(0,)8 b(5)r FB(x)15 b FG(\241)10 b FK(2,)e(5)18
b FG(\306)c(\241)p FK(2)r FB(x)h FG(\305)10 b FK(5)1505
5150 y(0,)e(5)r FB(x)15 b FG(\241)1726 5161 y FA(\010)1771
5139 y(\010)1734 5150 y FK(2,)8 b(5)14 b FG(\305)1913
5161 y FA(\010)1956 5139 y(\010)1921 5150 y FK(2,)8 b(5)16
b FG(\306)e(\241)p FK(2)r FB(x)h FG(\305)10 b FK(5)g
FG(\305)g FK(2,)e(5)1712 5274 y(0,)g(5)r FB(x)15 b FG(\305)10
b FK(2)r FB(x)23 b FG(\306)2106 5268 y FA(\030)2181 5250
y(\030)2114 5274 y FG(\241)p FK(2)r FB(x)16 b FG(\305)10
b FK(7,)e(5)i FG(\305)r FA(\010)2528 5264 y(\010)2514
5274 y FK(2)r FB(x)1856 5400 y FA(\010)1899 5379 y(\010)1865
5389 y FK(2,)e(5)s FB(x)p 1865 5426 156 5 v 1879 5513
a FA(\010)1922 5492 y(\010)1888 5502 y FK(2,)g(5)2045
5445 y FG(\306)2124 5389 y FK(7,)g(5)p 2124 5426 110
5 v 2124 5502 a(2,)g(5)1986 5616 y FB(x)20 b FG(\306)14
b FK(3.)p 0 TeXcolorgray 1909 5895 a(51)p 0 TeXcolorgray
eop end
%%Page: 52 52
TeXDict begin 52 51 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.52) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FK(On)17 b(en)h(d\351duit)j
FB(y)g FG(\306)15 b FK(0,)8 b(5)r FB(x)15 b FG(\241)10
b FK(2,)e(5)17 b FG(\306)e FK(0,)8 b(5)i FG(\243)g FK(3)g
FG(\241)g FK(2,)e(5)18 b FG(\306)c FK(1,)8 b(5)i FG(\241)g
FK(2,)e(5)17 b FG(\306)d(\241)p FK(1.)-38 -48 y(C)o(onclusion)19
b(:)h FB(M)7 b FK(\(3;)h FG(\241)p FK(1\).)-246 -23 y
SDict begin H.S end

-246 -23 a -246 -23 a
SDict begin 12 H.A end
 -246 -23 a -246 -23 a
SDict begin [/View [/XYZ H.V]/Dest (Item.267) cvn /DEST pdfmark end
 -246 -23
a 0 TeXcolorgray -141 80 a FK(4.)p 0 TeXcolorgray 43
w FB(d)25 b FK(est)18 b(par)o(all\350le)h(\340)e FC(\242)p
FK(,)h(donc)f(elles)h(ont)g(le)g(m\352me)h(coef\002cient)f(dir)o
(ecteur)f(\()p FG(\241)p FK(2\))9 b(;)17 b(on)g(a)g(donc)g
FB(d)22 b FK(:)d FB(y)i FG(\306)14 b(\241)p FK(2)r FB(x)h
FG(\305)10 b FB(b)q FK(.)-38 244 y(P)n(our)17 b(trouver)g
FB(b)q FK(,)h(on)f(utilise)i(le)f(fait)g(que)g FB(d)25
b FK(passe)18 b(par)d FB(C)9 b FK(\()p FG(\241)p FK(2)1714
290 y Fw(x)1779 244 y FK(;)f(3)1813 291 y Fw(y)1847 244
y FK(\))32 b(:)1829 541 y(3)15 b FG(\306)f(\241)p FK(2)c
FG(\243)g FK(\()p FG(\241)p FK(2\))g FG(\305)g FB(b)1829
666 y FK(3)15 b FG(\306)f FK(4)c FG(\305)g FB(b)1713
790 y FK(3)g FG(\241)g FK(4)16 b FG(\306)1953 806 y FA(\001)1953
790 y FK(4)10 b FG(\305)g FB(b)k FG(\241)2190 806 y FA(\001)2190
790 y FK(4)1774 915 y FG(\241)p FK(1)h FG(\306)f FB(b)-38
1112 y FK(C)o(onclusion)19 b(:)f FB(d)j FK(:)e FB(y)i
FG(\306)14 b(\241)p FK(2)r FB(x)h FG(\241)10 b FK(1.)-246
1146 y
SDict begin H.S end
 -246 1146 a -246 1146 a
SDict begin 12 H.A end
 -246 1146 a -246 1146
a
SDict begin [/View [/XYZ H.V]/Dest (Item.268) cvn /DEST pdfmark end
 -246 1146 a 0 TeXcolorgray -141 1241 a FK(5.)p 0 TeXcolorgray
43 w FB(d)22 b FK(:)c FB(y)j FG(\306)14 b(\241)p FK(2)r
FB(x)h FG(\241)10 b FK(1)19 b(coupe)f(l)o('axe)h(des)e(abscisses)h(en)i
FB(N)9 b FK(,)17 b(donc)g(l)o('or)o(donn\351e)h(de)h
FB(N)26 b FK(est)18 b(0.)-38 1355 y(P)n(our)f(d\351ter)q(miner)h(l)o
('abscisse)g(de)i FB(N)9 b FK(,)17 b(on)g(r)o(emplace)h(donc)j
FB(y)j FK(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e
FB(d)25 b FK(et)18 b(on)f(r\351sout)h(l)o('\351quation)i(:)1867
1652 y(0)15 b FG(\306)f(\241)p FK(2)r FB(x)h FG(\241)10
b FK(1)1751 1777 y(0)g FG(\305)g FK(1)16 b FG(\306)e(\241)p
FK(2)r FB(x)h FG(\241)2207 1793 y FA(\001)2207 1777 y
FK(1)d FG(\305)2324 1793 y FA(\001)2324 1777 y FK(1)1830
1893 y(1)p 1802 1930 96 5 v 1802 2007 a FG(\241)p FK(2)1922
1950 y FG(\306)1993 1895 y FA(\010)2022 1881 y(\010)2001
1893 y FG(\241)p FK(2)r FB(x)p 2001 1930 142 5 v 2016
2009 a FA(\010)2045 1995 y(\010)2024 2007 y FG(\241)p
FK(2)1743 2110 y FG(\241)p FK(0,)c(5)16 b FG(\306)g FB(x)5
b FK(.)-38 2307 y(C)o(onclusion)19 b(:)h FB(N)9 b FK(\()p
FG(\241)p FK(0,)f(5)17 b(;)26 b(0\).)p 0 TeXcolorgray
0 TeXcolorgray 922 4266 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 247.53876 a add def
/d 0.0 a add neg def /h 223.63857 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 922 4266 a 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 169.00935 0.0 -78.5294 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 145.10916 0.0 -78.5294   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 169.00935  0 -78.5294  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -78.5294
 169.00935  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-78.5294  def /maxTickline 145.10916  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.10916
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.00935
0.0 -78.5294 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 145.10916  0 -78.5294  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -78.5294
 145.10916  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-78.5294  def /maxTickline 169.00935  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.10916
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.00935
0.0 -78.5294 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1559 3711 a FI(0)205 b(1)g(2)h(3)f(4)g(5)-1469 b FH(\241)p
FI(1)-309 b FH(\241)p FI(2)1486 3633 y(0)1444 3869 y
FH(\241)p FI(1)1444 4105 y FH(\241)p FI(2)1486 3397 y(1)1486
3161 y(2)1486 2924 y(3)1486 2688 y(4)1574 3614 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((-10.--2.*x)/4.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((--10.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
1574 3614 a
tx@Dict begin { 11.38092 125.1919 } PutCoor PutBegin  end
 1574 3614 a 0 0 1 TeXcolorrgb 53 x FC(\242)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((-2.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0 0  setcmykcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 28.45274
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { 30.729 -51.21501 } PutCoor PutBegin  end
 1574 3614 a 1 0.49803 0 TeXcolorrgb 6 w FB(A)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1574 3614 a
tx@Dict begin { 144.53998 5.69046 } PutCoor PutBegin  end
 1574 3614 a 1 0.49803 0
TeXcolorrgb FB(B)p 0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 142.26372
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 85.35823
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { 87.63449 -22.76227 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 TeXcolorrgb 2 w FB(M)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0 0  setcmykcolor  [ -56.90549
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1574 3614 a
tx@Dict begin { -54.62921 91.04869 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 0
TeXcolorcmyk 1572 3613 a FB(C)p 0 TeXcolorgray 1574 3614
a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -14.22636
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { -11.95009 5.69046 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 TeXcolorrgb 2 w FB(N)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a 2978 4266 a
currentpoint initclip moveto
 2978
4266 a -246 4349 a
SDict begin H.S end
 -246 4349 a -246 4349 a
SDict begin 12 H.A end
 -246 4349
a -246 4349 a
SDict begin [/View [/XYZ H.V]/Dest (exo.85) cvn /DEST pdfmark end
 -246 4349 a 0 TeXcolorgray 116 x FL(Ex)o(er)o(cice)14
b(85)p 0 TeXcolorgray 41 w FK(Les)k(deux)g(questions)h(sont)f
(ind\351pendantes)o(.)-246 4511 y
SDict begin H.S end
 -246 4511 a -246 4511
a
SDict begin 12 H.A end
 -246 4511 a -246 4511 a
SDict begin [/View [/XYZ H.V]/Dest (Item.269) cvn /DEST pdfmark end
 -246 4511 a 0 TeXcolorgray
-141 4608 a FK(1.)p 0 TeXcolorgray 43 w(S)o(oient)25
b FB(A)s FK(\(0;)8 b FG(\241)p FK(4\),)18 b FB(B)7 b
FK(\(3;)h(0,)g(5\),)18 b FB(C)9 b FK(\()p FG(\241)p FK(2;)f(2\))18
b(et)f FB(D)6 b FK(\(1;)i(0\).)p 0 TeXcolorgray 1909
5895 a(52)p 0 TeXcolorgray eop end
%%Page: 53 53
TeXDict begin 53 52 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.53) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1038 1550
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 244.69376 a add def
/d 0.0 a add neg def /h 216.24057 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1038 1550 a 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 8
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 157.05927 0.0 -87.63449 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 80.80568 0.0 -135.43489   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 157.05927  0 -87.63449  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -87.63449
 157.05927  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-135.43489  def /maxTickline 80.80568  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -135.43489   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 157.05927
0.0 -87.63449 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 80.80568  0 -135.43489  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -135.43489
 80.80568  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-87.63449  def /maxTickline 157.05927  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -135.43489   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 157.05927
0.0 -87.63449 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1751 522 a FI(0)204
b(1)i(2)f(3)g(4)g(5)-1469 b FH(\241)p FI(1)-309 b FH(\241)p
FI(2)g FH(\241)p FI(3)1677 444 y(0)1635 681 y FH(\241)p
FI(1)1635 917 y FH(\241)p FI(2)1635 1153 y FH(\241)p
FI(3)1635 1390 y FH(\241)p FI(4)1677 208 y(1)1677 -28
y(2)1766 425 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.08 def /x1 5.52
def /dx x1 x sub 49 div def /F@pstplot ((-12.--4.5*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.08 def /x1 5.52
def /dx x1 x sub 49 div def /F@pstplot ((--2.-2.*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -113.81097
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1766 425 a
tx@Dict begin { 8.5359 -112.67305 } PutCoor PutBegin  end
 1766 425 a 0 0 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766
425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
14.22636   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1766 425
a
tx@Dict begin { 91.04869 13.65718 } PutCoor PutBegin  end
 1766 425 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1766 425 a
tx@Dict begin { -54.62921 62.59595 } PutCoor PutBegin  end
 1766 425 a 1 0 0 TeXcolorrgb 1764 424 a FB(C)p
0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1766 425 a
tx@Dict begin { 30.729 5.69046 } PutCoor PutBegin  end
 1766 425 a 1 0 0 TeXcolorrgb
FB(D)p 0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a 3070 1550
a
currentpoint initclip moveto
 3070 1550 a -38 1708 a FK(Le)18 b(coef\002cient)g(dir)o(ecteur)f(de)g
(\()6 b FB(A)s(B)h FK(\))18 b(est)1420 1836 y FB(a)g
FG(\306)1565 1780 y FB(y)1604 1792 y Fw(B)1661 1780 y
FG(\241)c FB(y)1773 1792 y Fw(A)p 1560 1817 257 5 v 1562
1893 a FB(x)1603 1905 y Fw(B)1661 1893 y FG(\241)e FB(x)1773
1905 y Fw(A)1841 1836 y FG(\306)1920 1780 y FK(0,)c(5)i
FG(\241)g FK(\()p FG(\241)p FK(4\))p 1920 1817 334 5
v 2009 1893 a(3)g FG(\241)g FK(0)2278 1836 y FG(\306)2357
1780 y FK(4,)e(5)p 2357 1817 110 5 v 2391 1893 a(3)2491
1836 y FG(\306)14 b FK(1,)8 b(5.)-38 2035 y(Le)18 b(coef\002cient)g
(dir)o(ecteur)f(de)g(\()n FB(C)9 b(D)d FK(\))17 b(est)1544
2160 y FB(a)1591 2126 y FH(0)1626 2160 y FG(\306)1710
2104 y FB(y)1749 2116 y Fw(D)1812 2104 y FG(\241)d FB(y)1918
2116 y Fw(C)p 1706 2141 263 5 v 1708 2217 a FB(x)1749
2229 y Fw(D)1812 2217 y FG(\241)e FB(x)1918 2229 y Fw(C)1993
2160 y FG(\306)2126 2104 y FK(0)e FG(\241)g FK(2)p 2072
2141 265 5 v 2072 2217 a(1)g FG(\241)g FK(\()p FG(\241)p
FK(2\))2361 2160 y FG(\306)2440 2104 y(\241)p FK(2)p
2440 2141 96 5 v 2467 2217 a(3)2545 2160 y(.)-38 2360
y(On)17 b(calcule)h(le)g(produit)f(:)1376 2493 y FB(a)d
FG(\243)e FB(a)1547 2459 y FH(0)1583 2493 y FG(\306)i
FK(1,)8 b(5)i FG(\243)1846 2437 y(\241)p FK(2)p 1846
2474 V 1874 2550 a(3)1966 2493 y FG(\306)k(\241)2100
2437 y FK(1,)8 b(5)i FG(\243)g FK(2)p 2100 2474 226 5
v 2193 2550 a(3)2350 2493 y FG(\306)k(\241)2484 2437
y FK(3)p 2484 2474 41 5 v 2484 2550 a(3)2548 2493 y FG(\306)g(\241)p
FK(1.)-38 2680 y(D)o('apr\350s)j(la)g(propr)q(i\351t\351)h(donn\351e)g
(avant)g(l)o('\351nonc\351,)h(les)f(droites)f(\()6 b
FB(A)s(B)h FK(\))18 b(et)f(\()n FB(C)9 b(D)d FK(\))17
b(sont)h(perpendiculair)o(es)o(.)-246 2712 y
SDict begin H.S end
 -246 2712
a -246 2712 a
SDict begin 12 H.A end
 -246 2712 a -246 2712 a
SDict begin [/View [/XYZ H.V]/Dest (Item.270) cvn /DEST pdfmark end
 -246 2712 a 0 TeXcolorgray
-141 2809 a FK(2.)p 0 TeXcolorgray 43 w(S)o(oient)25
b FB(A)s FK(\()p FG(\241)p FK(1;)8 b(0\),)18 b FB(B)7
b FK(\(2;)h(4\),)17 b FB(C)9 b FK(\(5;)f FG(\241)p FK(2\))18
b(;)f(et)h FC(\242)g FK(la)f(perpendiculair)o(e)i(\340)e(\()p
FB(B)5 b(C)k FK(\))17 b(passant)i(par)k FB(A)s FK(.)p
0 TeXcolorgray 0 TeXcolorgray 1026 4608 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 247.53877 a add def
/d 0.0 a add neg def /h 206.56674 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1026 4608 a
1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 184.94283 0.0 -62.59595 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 135.43489 0.0 -71.13185   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 184.94283  0 -62.59595  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.59595
 184.94283  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-71.13185  def /maxTickline 135.43489  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 135.43489
0.0 -71.13185   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -62.59595 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 135.43489  0 -71.13185  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -71.13185
 135.43489  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.59595  def /maxTickline 184.94283  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 135.43489
0.0 -71.13185   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -62.59595 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1531 4114 a FI(0)205 b(1)g(2)g(3)g(4)h(5)f(6)
-1706 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)1457 4036
y(0)1415 4273 y FH(\241)p FI(1)1415 4509 y FH(\241)p
FI(2)1457 3800 y(1)1457 3564 y(2)1457 3328 y(3)1457 3092
y(4)1546 4017 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
56.90549 90.75693 46.10849 79.95952 40.70978 74.56123 51.50677  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.2 def /x1 6.5 def
/dx x1 x sub 49 div def /F@pstplot ((--24.-6.*x)/3.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.2 def /x1 6.5 def
/dx x1 x sub 49 div def /F@pstplot ((--3.--3.*x)/6.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 1546 4017 a
tx@Dict begin { 116.65642 67.14848 } PutCoor PutBegin  end
 1546 4017 a 1 0 0
TeXcolorrgb 54 x FC(\242)p 0 TeXcolorgray 1546 4017 a
tx@Dict begin  PutEnd  end

1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1546
4017 a
tx@Dict begin { -26.17647 5.69046 } PutCoor PutBegin  end
 1546 4017 a 1 0 0 TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray
1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1546 4017 a
tx@Dict begin { 59.18175 119.50143 } PutCoor PutBegin  end
 1546 4017 a 0 0 1 TeXcolorrgb FB(B)p 0 TeXcolorgray
1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1546 4017 a
tx@Dict begin { 144.53998 -51.21501 } PutCoor PutBegin  end
 1546 4017 a 0 0 1 TeXcolorrgb 1544 4016 a
FB(C)p 0 TeXcolorgray 1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a 3081 4608
a
currentpoint initclip moveto
 3081 4608 a -38 4766 a FK(Le)18 b(coef\002cient)g(dir)o(ecteur)f(de)g
(\()p FB(B)5 b(C)k FK(\))18 b(est)1495 4891 y FB(a)g
FG(\306)1640 4835 y FB(y)1677 4847 y Fw(C)1736 4835 y
FG(\241)c FB(y)1844 4847 y Fw(B)p 1635 4872 257 5 v 1637
4948 a FB(x)1676 4960 y Fw(C)1736 4948 y FG(\241)e FB(x)1844
4960 y Fw(B)1916 4891 y FG(\306)1995 4835 y(\241)p FK(2)e
FG(\241)g FK(4)p 1995 4872 212 5 v 2023 4948 a(5)g FG(\241)g
FK(2)2231 4891 y FG(\306)2310 4835 y(\241)p FK(6)p 2310
4872 96 5 v 2337 4948 a(3)2429 4891 y FG(\306)15 b(\241)p
FK(2.)-38 5097 y(On)23 b(note)j FB(a)319 5067 y FH(0)363
5097 y FK(le)d(coef\002cient)h(dir)o(ecteur)f(de)g FC(\242)p
FK(.)h(C)o(omme)g(\()p FB(B)5 b(C)k FK(\))21 b FG(?)f
FC(\242)p FK(,)k(d)n('apr\350s)g(la)f(propr)q(i\351t\351)g(donn\351e)h
(avant)f(l)o('\351nonc\351,)28 b FB(a)16 b FG(\243)e
FB(a)3765 5067 y FH(0)3806 5097 y FG(\306)20 b(\241)p
FK(1,)k(soit)-38 5197 y(\()p FG(\241)p FK(2\))10 b FG(\243)i
FB(a)235 5167 y FH(0)270 5197 y FG(\306)j(\241)p FK(1.)i(On)h(a)f(donc)
1452 5280 y FA(\010)1481 5266 y(\010)1460 5278 y FG(\241)p
FK(2)s FB(a)1605 5248 y FH(0)p 1460 5315 166 5 v 1487
5393 a FA(\010)1516 5379 y(\010)1495 5391 y FG(\241)p
FK(2)1650 5334 y FG(\306)1729 5278 y(\241)p FK(1)p 1729
5315 96 5 v 1729 5391 a FG(\241)p FK(2)1981 5334 y(et)g(ainsi)149
b FB(a)2423 5300 y FH(0)2459 5334 y FG(\306)14 b FK(0,)8
b(5.)-38 5521 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g
FC(\242)c FK(:)19 b FB(y)i FG(\306)14 b FK(0,)8 b(5)r
FB(x)15 b FG(\305)10 b FB(b)q FK(.)p 0 TeXcolorgray 1909
5895 a(53)p 0 TeXcolorgray eop end
%%Page: 54 54
TeXDict begin 54 53 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.54) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FK(La)17 b(droite)g FC(\242)h
FK(passe)g(par)24 b FB(A)s FK(\()p FG(\241)p FK(1;)8
b(0\),)18 b(donc)1849 1 y(0)c FG(\306)g FK(0,)8 b(5)i
FG(\243)g FK(\()p FG(\241)p FK(1\))g FG(\305)g FB(b)1849
126 y FK(0)k FG(\306)g(\241)p FK(0,)8 b(5)i FG(\305)g
FB(b)1664 250 y FK(0)g FG(\305)g FK(0,)e(5)16 b FG(\306)1964
252 y FA(\030)2047 232 y(\030)2062 228 y(\030)1972 250
y FG(\241)p FK(0,)8 b(5)k FG(\305)e FB(b)k FG(\305)2326
261 y FA(\010)2369 240 y(\010)2334 250 y FK(0,)8 b(5)1780
375 y(0,)g(5)15 b FG(\306)f FB(b)-38 550 y FK(C)o(onclusion)19
b(:)f FC(\242)c FK(:)19 b FB(y)i FG(\306)14 b FK(0,)8
b(5)r FB(x)15 b FG(\305)10 b FK(0,)e(5.)-246 630 y
SDict begin H.S end
 -246
630 a -246 630 a
SDict begin 12 H.A end
 -246 630 a -246 630 a
SDict begin [/View [/XYZ H.V]/Dest (exo.86) cvn /DEST pdfmark end
 -246 630 a 0 TeXcolorgray
108 x FL(Ex)o(er)o(cice)14 b(86)p 0 TeXcolorgray 41 w
FK(Le)k(tableau)g(suivant)g(donne)f(la)h(par)q(t)f(\(en)g(pour)o
(centage\))g(des)g(voitur)o(es)h(diesel)g(dans)f(les)h(ventes)h(de)d
(voitur)o(es)i(neuves)o(,)h(en)f(F)o(r)o(ance)o(,)-246
838 y(entr)o(e)g(2012)h(et)f(2017.)p 0 TeXcolorgray 0
TeXcolorgray 991 914 1919 4 v 991 1014 4 100 v 1044 984
a(R)o(ang)f(de)g(l)o('ann\351e)p 1802 1014 V 285 w(0)p
1986 1014 V 144 w(1)p 2170 1014 V 144 w(2)p 2354 1014
V 144 w(3)p 2538 1014 V 144 w(4)p 2722 1014 V 143 w(5)p
2906 1014 V 991 1017 1919 4 v 991 1117 4 100 v 1044 1087
a(\045)f(des)g(voitur)o(es)g(diesel)p 1802 1117 V 104
w(73)p 1986 1117 V 104 w(67)p 2170 1117 V 104 w(64)p
2354 1117 V 104 w(58)p 2538 1117 V 104 w(52)p 2722 1117
V 104 w(48)p 2906 1117 V 991 1120 1919 4 v -246 1173
a
SDict begin H.S end
 -246 1173 a -246 1173 a
SDict begin 12 H.A end
 -246 1173 a -246 1173 a
SDict begin [/View [/XYZ H.V]/Dest (Item.271) cvn /DEST pdfmark end
 -246
1173 a 0 TeXcolorgray -141 1250 a FK(1.)p 0 TeXcolorgray
43 w(On)i(place)g(les)h(points)g(\(en)f(bleu\))g(dans)f(un)i(r)o
(ep\350r)o(e)e(comme)i(s)m('il)g(s)m('agissait)g(de)e(tr)o(acer)h(la)g
(courbe)f(r)o(epr\351sentative)j(d)n('une)e(fonction.)h(On)f(ne)-38
1350 y(les)g(r)o(elie)g(pas)o(.)-246 1378 y
SDict begin H.S end
 -246 1378
a -246 1378 a
SDict begin 12 H.A end
 -246 1378 a -246 1378 a
SDict begin [/View [/XYZ H.V]/Dest (Item.272) cvn /DEST pdfmark end
 -246 1378 a 0 TeXcolorgray
-141 1472 a FK(2.)p 0 TeXcolorgray 43 w(Les)g(points)g(plac\351s)g
(\340)f(la)g(question)i(pr\351c\351dente)f(sont)g(\253)c(pr)o(esque)j
(align\351s)d(\273.)k(La)f(calculatr)q(ice)g(per)q(met)h(d)n('obtenir)g
(l)o('\351quation)h(de)e(la)g(droite)-38 1571 y(\253)d(la)j(plus)h
(proche)c(\273)35 b(de)17 b(ces)g(points)o(,)i(qu)n('on)f(appelle)i
(droite)c(d)n('ajustement)k(\(ou)e(droite)f(de)g(r\351gr)o(ession\).)
-38 1725 y(A)-5 b(vec)17 b(une)h(C)o(alculatr)q(ice)g(coll\350ge)o(,)g
(la)g(proc\351dur)o(e)e(est)i(la)g(suivante)g(:)p 0 TeXcolorgray
7 1848 a(\225)p 0 TeXcolorgray 42 w(touche)46 b(MENU)p
337 1769 295 4 v 337 1876 4 109 v 629 1876 V 337 1878
295 4 v 46 w(\226)18 b(on)f(choisit)47 b(2)17 b(:S)n(tatistiques)p
1063 1769 535 4 v 1063 1892 4 125 v 1594 1892 V 1063
1894 535 4 v 49 w(puis)47 b(2)17 b(:y=ax+b)p 1780 1767
383 4 v 1780 1894 4 129 v 2159 1894 V 1780 1896 383 4
v 0 TeXcolorgray 7 1961 a(\225)p 0 TeXcolorgray 42 w(on)g(entr)o(e)h
(les)g(valeurs)g(du)f(tableau)h(en)g(colonne)p 0 TeXcolorgray
7 2060 a(\225)p 0 TeXcolorgray 42 w(touche)46 b(OPTN)p
337 1981 268 4 v 337 2088 4 109 v 601 2088 V 337 2090
268 4 v 46 w(\226)17 b(on)h(choisit)46 b(4)18 b(:C)o(alc)g(r\351gr)o
(ession)p 1035 1978 659 4 v 1035 2106 4 129 v 1690 2106
V 1035 2108 659 4 v 46 w(\226)f(on)h(lit)g(les)g(valeurs)g(de)f(a)g(et)
h(b)-38 2184 y(On)f(obtient)h(a)c FG(\274)h(\241)p FK(5,)8
b(0)18 b(et)g(b)c FG(\274)g FK(72,)8 b(9.)19 b(La)f(droite)f(d)n
('ajustement)j FB(D)j FK(a)17 b(donc)g(pour)h(\351quation)23
b FB(y)e FG(\306)14 b(\241)p FK(5)r FB(x)h FG(\305)10
b FK(72,)e(9.)-246 2214 y
SDict begin H.S end
 -246 2214 a -246 2214 a
SDict begin 12 H.A end
 -246
2214 a -246 2214 a
SDict begin [/View [/XYZ H.V]/Dest (Item.273) cvn /DEST pdfmark end
 -246 2214 a 0 TeXcolorgray -141 2306
a FK(3.)p 0 TeXcolorgray 43 w(On)17 b(tr)o(ace)h(la)f(droite)g
FB(D)k FK(:)d FB(y)j FG(\306)14 b(\241)p FK(5)r FB(x)h
FG(\305)10 b FK(72,)e(9)21 b(\(en)c(rouge\))f(\340)i(par)q(tir)f(d)n
('un)g(tableau)h(de)f(valeurs)i(avec)e(deux)g(valeurs)o(.)h(P)m(ar)f
(exemple)j(:)p 0 TeXcolorgray 0 TeXcolorgray 658 2415
659 4 v 658 2514 4 100 v 713 2484 a FB(x)p 807 2514 V
163 w FK(0)p 1060 2514 V 213 w(5)p 1313 2514 V 658 2517
659 4 v 658 2617 4 100 v 715 2587 a FB(y)p 807 2617 V
110 w FK(72,)8 b(9)p 1060 2617 V 104 w(47,)g(9)p 1313
2617 V 658 2620 659 4 v 0 TeXcolorgray 2050 2650 9 240
v 0 TeXcolorgray 2786 2494 a FG(\241)i FK(5)g FG(\243)g
FK(0)g FG(\305)g FK(72,)e(9)17 b FG(\306)e FK(72,)8 b(9)2786
2619 y FG(\241)i FK(5)g FG(\243)g FK(5)g FG(\305)g FK(72,)e(9)17
b FG(\306)e FK(47,)8 b(9)p 0 TeXcolorgray 0 TeXcolorgray
918 4370 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 273.51 a add def /d
0.0 a add neg def /h 199.04211 a add def a neg d moveto a neg h L w
h L w d L closepath clip newpath 0 0 moveto setmatrix end
 918 4370 a 1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 239.1245 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.7626
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 174.29945 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 22.76228
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 239.1245  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 239.1245  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 174.29945  def /dT 1491749 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 22.76228  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 174.29945
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 239.1245
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 174.29945  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 174.29945  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 239.1245  def /dT 1491770 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.27626  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.27626  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 174.29945
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 239.1245
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1189 4261 a FI(0)157
b(1)h(2)g(3)g(4)g(5)g(6)g(7)g(8)g(9)1115 4184 y(0)1084
3995 y(10)1084 3806 y(20)1084 3617 y(30)1084 3428 y(40)1084
3239 y(50)1084 3050 y(60)1084 2861 y(70)1204 4164 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 10.505288442894784
def /dx x1 x sub 49 div def /F@pstplot ((--364.5-25.*x)/5.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot 2.27626 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 2.27626 mul gt { moveto } { dup -1.e30 2.27626 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 2.27626 mul gt { moveto } { dup -1.e30
2.27626 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1204 4164 a
tx@Dict begin { 125.83893 112.01416 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 54 x FB(D)p 0 TeXcolorgray 1204 4164 a
tx@Dict begin  PutEnd  end
 1204
4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.86055 63.50764 0.0
63.50764   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  4.0  4.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.86055 0.0 204.86055
63.50764   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  4.0  4.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1204 4164 a
tx@Dict begin { 180.45055 -15.93382 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 54 x FK(ann\351e)18 b(2021)p 0 TeXcolorgray
1204 4164 a
tx@Dict begin  PutEnd  end
 1204 4164 a 1204 4164 a
tx@Dict begin { -21.29657 61.45903 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 51 x FK(27,9)p 0 TeXcolorgray 1204 4164 a
tx@Dict begin  PutEnd  end

1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 204.86055
47.57382 158.33499 26.71039   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1204
4164 a
tx@Dict begin { 97.87788 31.67514 } PutCoor PutBegin  end
 1204 4164 a 57 x FK(ventes)g(r\351elles)1204 4164
y
tx@Dict begin  PutEnd  end
 1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 166.167   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 22.76228 152.50945   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 45.52457 145.68066   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 68.28685 132.0231   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 91.04913 118.36554   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 165.93936
  false NArray  /DS 5.0 0. CLW mul add 2 div def /StandardSymL 0. [1.8
0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.  1.  scale
<B4> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81142
109.03285   false NArray  /DS 5.0 0. CLW mul add 2 div def /StandardSymL
0. [1.8 0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.
 1.  scale <B4> show grestore } bind def   1. .setopacityalpha  newpath
n { transform floor .5 add exch floor .5 add exch itransform Dot }
repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 204.86055
47.57382   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3189 4370 a
currentpoint initclip moveto
 3189
4370 a -38 4515 a FK(La)f(droite)g(est)h(toute)h(proche)e(des)g(points)
i(bleus)o(.)f(Elle)h(\253)14 b(mod\351lise)g(\273)35
b(l)o('\351volution)20 b(de)d(la)g(par)q(t)h(des)f(voitur)o(es)h
(diesel)g(\340)f(par)q(tir)g(de)g(2012.)-38 4668 y(S)o(i)g(cet)g
(ajustement)i(\351tait)f(\002able)o(,)e(en)i(2021)g(\(ann\351e)g
(n\2609\),)f(le)h(pour)o(centage)f(de)g(diesels)h(dans)f(les)g(ventes)i
(de)d(voitur)o(es)i(neuves)g(devr)o(ait)g(\352tr)o(e)-38
4768 y(appro)o(ximativement)i(\351gal)d(\340)1719 4867
y FG(\241)p FK(5)10 b FG(\243)g FK(9)g FG(\305)g FK(72,)e(9)18
b FG(\306)c FK(27,)8 b(9)-38 5005 y(\(voir)17 b(pointill\351s)j
(rouges\).)-38 5159 y(En)f(r\351alit\351,)i(les)f(diesels)g(ne)g(r)o
(epr\351sentaient)h(plus)f(que)g(20,9)h(\045)e(des)g(ventes)i(en)e
(2021,)j(ce)d(qui)h(montr)o(e)f(que)h(l)o('ajustement)j(propos\351)d
(dans)-38 5258 y(l)o('\351nonc\351)f(n)-6 b('est)18 b(plus)h(valable)e
(\226)h(c)n('est)g(\340)f(par)q(tir)g(de)g(2018)i(que)f(les)g(ventes)h
(commencent)g(\340)e(\253)d(d\351crocher)g(\273.)-246
5336 y
SDict begin H.S end
 -246 5336 a -246 5336 a
SDict begin 12 H.A end
 -246 5336 a -246 5336
a
SDict begin [/View [/XYZ H.V]/Dest (exo.87) cvn /DEST pdfmark end
 -246 5336 a 0 TeXcolorgray 110 x FL(Ex)o(er)o(cice)g(87)p
0 TeXcolorgray 41 w FK(A)n(u)19 b(18\260)h(si\350cle)o(,)g(l)o
('\351tude)h(des)e(distances)h(entr)o(e)f(les)h(plan\350tes)h(et)f(le)g
(soleil)g(a)f(conduit)h(les)g(astronomes)g(T)m(itius)h(et)f(Bode)f
(\340)g(imaginer)-246 5546 y(l)o('existence)h(d)n('une)e(plan\350te)h
(encor)o(e)e(inconnue)o(,)i(C\351r\350s)o(,)f(entr)o(e)g(M)o(ars)f(et)h
(J)m(upiter)-5 b(.)-246 5646 y(Le)18 b(gr)o(aphique)h(ci-dessous)f
(donne)g(les)g(distances)g(des)g(plan\350tes)h(au)e(soleil,)i(en)f
(unit\351s)h(astronomiques)g(\(1)e(U)m(A)d FG(\306)g
FK(distance)k(terr)o(e-soleil)r(\).)p 0 TeXcolorgray
1909 5895 a(54)p 0 TeXcolorgray eop end
%%Page: 55 55
TeXDict begin 55 54 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.55) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 890 -242
2120 4 v 890 -143 4 100 v 1010 -173 a FK(N)n(om)p 1298
-143 V 169 w(V\351nus)p 1616 -143 V 105 w(T)-8 b(err)o(e)p
1895 -143 V 103 w(M)o(ars)p 2172 -143 V 103 w(C\351r\350s)p
2469 -143 V 104 w(J)m(up)m(.)p 2706 -143 V 104 w(S)o(atur)j(.)p
3006 -143 V 890 -139 2120 4 v 890 -40 4 100 v 1008 -70
a(R)o(ang)p 1298 -40 V 255 w(1)p 1616 -40 V 259 w(2)p
1895 -40 V 238 w(3)p 2172 -40 V 247 w(4)p 2469 -40 V
227 w(5)p 2706 -40 V 228 w(6)p 3006 -40 V 890 -36 2120
4 v 890 63 4 100 v 943 33 a(Distance)p 1298 63 V 160
w(0,7)p 1616 63 V 229 w(1)p 1895 63 V 208 w(1,5)p 2172
63 V 226 w(?)p 2469 63 V 197 w(5,2)p 2706 63 V 169 w(9,5)p
3006 63 V 890 66 2120 4 v -246 135 a
SDict begin H.S end
 -246 135 a -246
135 a
SDict begin 12 H.A end
 -246 135 a -246 135 a
SDict begin [/View [/XYZ H.V]/Dest (Item.274) cvn /DEST pdfmark end
 -246 135 a 0 TeXcolorgray
-141 215 a FK(1.)p 0 TeXcolorgray 43 w(On)17 b(constr)q(uit)i(le)f
(nuage)g(de)f(points)i(associ\351)g(\340)e(cette)i(s\351r)q(ie)f(comme)
g(dans)g(l)o('exer)o(cice)h(pr\351c\351dent.)f(On)g(laisse)h(vide)f(l)o
('emplacement)j(pour)-38 314 y(la)c(plan\350te)i(n\2604.)-246
346 y
SDict begin H.S end
 -246 346 a -246 346 a
SDict begin 12 H.A end
 -246 346 a -246 346 a
SDict begin [/View [/XYZ H.V]/Dest (Item.275) cvn /DEST pdfmark end
 -246
346 a 0 TeXcolorgray -141 443 a FK(2.)p 0 TeXcolorgray
43 w(P)n(our)e(tr)o(acer)g(la)g(courbe)g(de)h(la)f(fonction,)i(on)e
(fait)h(un)g(tableau)g(de)f(valeurs)h(sur)2331 444 y([)2356
443 y(0;)8 b(6)2464 444 y(])2508 443 y(avec)17 b(un)h(pas)g(de)f(1.)p
0 TeXcolorgray 0 TeXcolorgray 799 555 2511 4 v 799 655
4 100 v 906 625 a FB(x)p 1052 655 V 250 w FK(0)p 1374
655 V 282 w(1)p 1696 655 V 282 w(2)p 2018 655 V 281 w(3)p
2340 655 V 282 w(4)p 2662 655 V 282 w(5)p 2984 655 V
282 w(6)p 3306 655 V 799 658 2511 4 v 799 758 4 100 v
860 728 a FB(f)i FK(\()r FB(x)5 b FK(\))p 1052 758 V
157 w(0,)j(7)p 1374 758 V 249 w(1)p 1696 758 V 247 w(1,)g(6)p
2018 758 V 214 w(2,)g(8)p 2340 758 V 214 w(5,)g(2)p 2662
758 V 248 w(6)p 2984 758 V 262 w(10)p 3306 758 V 799
761 2511 4 v -38 910 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 7 1009 a(\225)p 0 TeXcolorgray 50 w FB(f)h
FK(\(0\))14 b FG(\306)g FK(0,)8 b(4)i FG(\305)g FK(0,)e(15)i
FG(\243)g FK(2)754 979 y FI(0)808 1009 y FG(\306)k FK(0,)8
b(4)i FG(\305)g FK(0,)e(15)i FG(\243)g FK(1)18 b FG(\306)c
FK(0,)8 b(4)i FG(\305)g FK(0,)e(15)18 b FG(\306)c FK(0,)8
b(55)148 b(\()p Fu(")q FK(2)2282 979 y FI(0)2331 1009
y FG(\306)14 b FK(1\).)p 0 TeXcolorgray 7 1109 a(\225)p
0 TeXcolorgray 50 w FB(f)19 b FK(\(3\))14 b FG(\306)g
FK(0,)8 b(4)i FG(\305)g FK(0,)e(15)i FG(\243)g FK(2)754
1079 y FI(3)808 1109 y FG(\306)k FK(0,)8 b(4)i FG(\305)g
FK(0,)e(15)i FG(\243)g FK(8)18 b FG(\306)c FK(0,)8 b(4)i
FG(\305)g FK(1,)e(2)18 b FG(\306)c FK(1,)8 b(6.)-38 1259
y(On)17 b(tr)o(ace)h(la)f(courbe)g(en)h(rouge)f(dans)g(le)h(r)o
(ep\350r)o(e)f(ci-dessous)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1022 3458 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 248.56902 a add def
/d 0.0 a add neg def /h 254.59373 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1022 3458 a 1231 3266 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 223.42236 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 231.47437 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 223.42236  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 223.42236  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 231.47437  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 231.47437
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 223.42236
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 231.47437  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 231.47437  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 223.42236  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 231.47437
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 223.42236
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1216 3363 a FI(0)205
b(1)g(2)g(3)g(4)g(5)h(6)f(7)1142 3285 y(0)1142 3108 y(1)1142
2931 y(2)1142 2754 y(3)1142 2577 y(4)1142 2399 y(5)1142
2222 y(6)1142 2045 y(7)1142 1868 y(8)1142 1691 y(9)1111
1513 y(10)1231 3266 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 6 def /dx
x1 x sub 199 div def /F@pstplot (0.4+0.15*2.0^(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 59.75081 0.0
59.75081   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 113.81097
59.75081   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1231 3266 a
tx@Dict begin { 100.1707 -12.79083 } PutCoor PutBegin  end
 1231 3266 a 1 0 0
TeXcolorrgb 54 x FK(C\351r\350s)p 0 TeXcolorgray 1231
3266 a
tx@Dict begin  PutEnd  end
 1231 3266 a 1231 3266 a
tx@Dict begin { -21.70381 59.50757 } PutCoor PutBegin  end
 1231 3266 a 1 0 0 TeXcolorrgb
51 x FK(2,8)p 0 TeXcolorgray 1231 3266 a
tx@Dict begin  PutEnd  end
 1231 3266 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 28.45274
14.93762   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
32.00932   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
110.9656   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 170.71646
202.72575   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
59.75081   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3086 3458 a
currentpoint initclip moveto
 3086 3458 a -246 3502 a
SDict begin H.S end
 -246 3502 a -246
3502 a
SDict begin 12 H.A end
 -246 3502 a -246 3502 a
SDict begin [/View [/XYZ H.V]/Dest (Item.276) cvn /DEST pdfmark end
 -246 3502 a 0 TeXcolorgray
-141 3616 a FK(3.)p 0 TeXcolorgray 43 w(S)n(uivant)19
b(l)o('ajustement)h(par)e(la)f(fonction)27 b FB(f)17
b FK(,)g(la)h(plan\350te)h(n\2604)e(C\351r\350s)h(devr)o(ait)g(se)g
(trouver)f(\340)g(2,8)i(U.A.)f(du)f(soleil.)-38 3780
y FL(R)o(emarque)f(:)j FK(Il)g(existe)i(bel)e(et)h(bien)g(une)g
(plan\350te)h(naine)f(C\351r\350s)o(,)h(dans)e(la)h(ceintur)o(e)g(d)n
('ast\351ro\357de)o(,)f(entr)o(e)h(M)o(ars)f(et)h(J)m(upiter)-5
b(.)21 b(Le)f(mod\350le)h(de)-38 3880 y(l)o('\351nonc\351)16
b(a)f(\351galement)h(par)q(ticip\351)g(\340)e(la)h(d\351couver)q(te)g
(d)n('U)m(r)o(anus)o(.)h(P)n(our)q(tant,)e(on)h(consid\350r)o(e)g
(aujour)o(d)n('hui)h(que)f(ce)g(mod\350le)h(n)-6 b('est)16
b(pas)f(\002able)-38 3979 y(et)i(que)h(son)f(ef\002cacit\351)g(\340)g
(d\351tecter)g(des)g(plan\350tes)i(r)o(el\350ve)e(d)n('un)g(\253)c
(coup)18 b(de)f(chance)c(\273)34 b(for)q(midable)17 b(\(le)g(ter)q(me)g
(savant)g(est)h(\253)13 b(s\351r)o(endipit\351)g(\273\).)-38
4079 y(On)k(r)o(envoie)h(le)g(lecteur)g(\340)f(l)o('ar)q(ticle)h(W)o
(ikip\351dia)g(sur)g(la)f(loi)h(de)f(T)m(itius-Bode)i(pour)f(plus)h(de)
e(d\351tails)o(.)-246 4224 y
SDict begin H.S end
 -246 4224 a -246 4224 a
SDict begin 12 H.A end

-246 4224 a -246 4224 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 -246 4224 a 132 x FM(7)105 b(P)l(our)n
(centages,)24 b(taux)f(d)m('\351v)n(olution)-246 4467
y
SDict begin H.S end
 -246 4467 a -246 4467 a
SDict begin 12 H.A end
 -246 4467 a -246 4467 a
SDict begin [/View [/XYZ H.V]/Dest (exo.88) cvn /DEST pdfmark end
 -246
4467 a -246 4452 a
SDict begin H.S end
 -246 4452 a -246 4452 a
SDict begin 12 H.A end
 -246 4452
a -246 4452 a
SDict begin [/View [/XYZ H.V]/Dest (Item.277) cvn /DEST pdfmark end
 -246 4452 a 0 TeXcolorgray 88 x FL(Ex)o(er)o(cice)14
b(88)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(On)j(compl\350te)i(un)f(tableau)g(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1425
4627 1258 4 v 1425 4727 4 100 v 1478 4697 a(\311l\350ves)p
2001 4727 V 360 w(30)p 2340 4727 V 268 w(?)p 2679 4727
V 1425 4730 1258 4 v 1425 4829 4 100 v 1478 4800 a(P)n(our)o(centage)p
2001 4829 V 144 w(100)p 2340 4829 V 219 w(80)p 2679 4829
V 1425 4833 1258 4 v -38 4956 a(Il)e(y)f(a)i(30)10 b
FG(\243)g FK(80)g FG(\245)g FK(100)18 b FG(\306)c FK(24)k(\002lles)g
(dans)g(la)f(classe)o(.)-246 4990 y
SDict begin H.S end
 -246 4990 a -246
4990 a
SDict begin 12 H.A end
 -246 4990 a -246 4990 a
SDict begin [/View [/XYZ H.V]/Dest (Item.278) cvn /DEST pdfmark end
 -246 4990 a 0 TeXcolorgray
-141 5085 a FK(2.)p 0 TeXcolorgray 43 w(On)g(compl\350te)i(un)f
(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1425 5172 1258 4 v 1425 5272 4 100 v 1478
5242 a(M)o(ar)q(ins)p 2001 5272 V 332 w(1)12 b(760)p
2340 5272 V 167 w(1)g(046)p 2679 5272 V 1425 5275 1258
4 v 1425 5375 4 100 v 1478 5345 a(P)n(our)o(centage)p
2001 5375 V 144 w(100)p 2340 5375 V 228 w(?)p 2679 5375
V 1425 5378 1258 4 v 0 TeXcolorgray 1909 5895 a(55)p
0 TeXcolorgray eop end
%%Page: 56 56
TeXDict begin 56 55 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.56) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FK(1)8 b(046)i FG(\243)g FK(100)g
FG(\245)g FK(1)e(760)20 b FG(\274)15 b FK(59,)8 b(43,)20
b(donc)d(environ)h(59,43)h(\045)e(des)h(mar)q(ins)f(sont)h(tomb\351s)h
(malades)o(.)-38 1 y FL(N.B.)f FK(On)e(fait)h(le)g(calcul)f(et,)h
(seulement)i(apr\350s)o(,)f(on)e(\351cr)q(it)g(la)h(r\351ponse)g(avec)g
(le)f(symbole)h(\045.)g(R)o(appelons)h(\340)e(cette)i(occasion)e(la)h
(signi\002cation)-38 101 y(de)g(59,43)j(\045)d(:)1604
227 y(59,)8 b(43)19 b(\045)c FG(\306)1969 171 y FK(59,)8
b(43)p 1969 208 191 5 v 2003 284 a(100)2183 227 y FG(\306)15
b FK(0,)8 b(5943.)-38 450 y(Donc)17 b(dir)o(e)f(que)i(59,43)i(\045)d
(des)g(mar)q(ins)h(sont)g(tomb\351s)g(malades)o(,)h(c)n('est)f(dir)o(e)
f(que)g(la)h(propor)q(tion)f(de)h(malades)g(est)3401
394 y(59,)8 b(43)p 3401 431 V 3435 507 a(100)3601 450
y(.)-246 522 y
SDict begin H.S end
 -246 522 a -246 522 a
SDict begin 12 H.A end
 -246 522 a -246
522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.279) cvn /DEST pdfmark end
 -246 522 a 0 TeXcolorgray -141 602 a FK(3.)p 0
TeXcolorgray 43 w(Le)22 b(fait)h(que)f(la)h(bouteille)g(soit)g
(titr\351e)g(\340)e(12)i(\045)f(vol.)h(signi\002e)f(qu)n('elle)h
(contient)h(12)e(\045)g(d)n('alcool)h(pur)-5 b(.)23 b(On)e(compl\350te)
j(donc)e(un)g(tableau)h(de)-38 702 y(propor)q(tionnalit\351)c(:)p
0 TeXcolorgray 0 TeXcolorgray 1366 789 1376 4 v 1366
889 4 100 v 1419 859 a(V)-5 b(olume)19 b(\(en)f(mL\))p
2060 889 V 141 w(500)p 2399 889 V 228 w(?)p 2738 889
V 1366 892 1376 4 v 1366 991 4 100 v 1419 962 a(P)n(our)o(centage)p
2060 991 V 262 w(100)p 2399 991 V 219 w(12)p 2738 991
V 1366 995 1376 4 v -38 1119 a(La)f(bouteille)i(contient)g(500)10
b FG(\243)g FK(12)g FG(\245)g FK(100)19 b FG(\306)14
b FK(60)k(mL)g(d)n('alcool)g(pur)-5 b(.)-246 1150 y
SDict begin H.S end
 -246
1150 a -246 1150 a
SDict begin 12 H.A end
 -246 1150 a -246 1150 a
SDict begin [/View [/XYZ H.V]/Dest (Item.280) cvn /DEST pdfmark end
 -246 1150
a 0 TeXcolorgray -141 1247 a FK(4.)p 0 TeXcolorgray 43
w(On)17 b(compl\350te)i(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)
p 0 TeXcolorgray 0 TeXcolorgray 1425 1335 1258 4 v 1425
1434 4 100 v 1478 1404 a(V)-5 b(otes)p 2001 1434 V 391
w(16)12 b(161)p 2340 1434 V 127 w(8)g(892)p 2679 1434
V 1425 1437 1258 4 v 1425 1537 4 100 v 1478 1507 a(P)n(our)o(centage)p
2001 1537 V 144 w(100)p 2340 1537 V 228 w(?)p 2679 1537
V 1425 1540 1258 4 v -38 1664 a(8)c(892)i FG(\243)g FK(100)g
FG(\245)g FK(16)e(161)21 b FG(\274)14 b FK(55,)8 b(02,)20
b(donc)d(environ)h(55,02)i(\045)d(des)g(\351lecteurs)i(ont)f(vot\351)g
(pour)f(E.)h(M)o(acron.)-246 1696 y
SDict begin H.S end
 -246 1696 a -246
1696 a
SDict begin 12 H.A end
 -246 1696 a -246 1696 a
SDict begin [/View [/XYZ H.V]/Dest (Item.281) cvn /DEST pdfmark end
 -246 1696 a 0 TeXcolorgray
-141 1793 a FK(5.)p 0 TeXcolorgray 43 w(S)n(ur)g(100)g(personnes)h(de)e
(l)o('entr)o(epr)q(ise)o(,)i(il)f(y)f(a)g(56)h(hommes)o(.)-38
1907 y(25)g(\045)f(d)n('entr)o(e)h(eux)g(fument,)h(ce)e(qui)h(r)o
(epr\351sente)1566 2090 y(25)10 b FG(\243)g FK(56)g FG(\245)g
FK(100)18 b FG(\306)d FK(14)j(personnes)-38 2273 y(\(on)f(peut)i(bien)e
(s\373r)h(fair)o(e)f(un)h(tableau)g(de)f(propor)q(tionnalit\351)h(pour)
g(obtenir)g(cette)g(r\351ponse\).)-38 2387 y(C)o(onclusion)h(:)f(les)g
(hommes)h(fumeurs)g(r)o(epr\351sentent)g(14)f(\045)f(du)g(personnel)i
(de)e(l)o('entr)o(epr)q(ise)o(.)-246 2470 y
SDict begin H.S end
 -246 2470
a -246 2470 a
SDict begin 12 H.A end
 -246 2470 a -246 2470 a
SDict begin [/View [/XYZ H.V]/Dest (exo.89) cvn /DEST pdfmark end
 -246 2470 a -246
2489 a
SDict begin H.S end
 -246 2489 a -246 2489 a
SDict begin 12 H.A end
 -246 2489 a -246 2489
a
SDict begin [/View [/XYZ H.V]/Dest (Item.282) cvn /DEST pdfmark end
 -246 2489 a 0 TeXcolorgray 130 x FL(Ex)o(er)o(cice)d(89)p
0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(100)j(\045)6 b FG(\305)g FK(12,)i(5)18 b(\045)c
FG(\306)g FK(112,)8 b(5)18 b(\045)c FG(\306)1347 2563
y FK(112,)8 b(5)p 1347 2600 191 5 v 1382 2676 a(100)1562
2619 y FG(\306)14 b FK(1,)q(125,)j(donc)f(pour)g(augmenter)g(un)h
(nombr)o(e)e(de)h(12,)8 b(5)17 b(\045,)f(il)g(faut)g(le)g(multiplier)j
(par)-38 2742 y(1,)q(125.)g(On)e(compl\350te)i(donc)e(le)h(sch\351ma)g
(:)p 0 TeXcolorgray 0 TeXcolorgray 1489 2918 2 2 v 1491
2919 169 4 v 1660 2918 2 2 v 1488 3018 4 100 v 1661 3018
V 1489 3021 2 2 v 1491 3022 169 4 v 1660 3021 2 2 v 1515
2993 a(120)p 1 0 0 TeXcolorrgb 1982 2864 a FH(\243)f
FI(1,125)p 0 TeXcolorgray 1684 2923 4 4 v 1686 2922 V
1688 2921 V 1690 2921 V 1692 2920 V 1694 2919 V 1696
2919 V 1698 2918 V 1700 2917 V 1702 2917 V 1704 2916
V 1706 2915 V 1708 2914 V 1710 2914 V 1712 2913 V 1714
2912 V 1716 2912 V 1718 2911 V 1720 2910 V 1722 2910
V 1724 2909 V 1726 2909 V 1728 2908 V 1730 2907 V 1732
2907 V 1734 2906 V 1736 2905 V 1738 2905 V 1740 2904
V 1742 2903 V 1744 2903 V 1745 2902 V 1747 2902 V 1749
2901 V 1751 2900 V 1753 2900 V 1755 2899 V 1757 2899
V 1759 2898 V 1761 2898 V 1763 2897 V 1765 2896 V 1767
2896 V 1769 2895 V 1771 2895 V 1773 2894 V 1775 2894
V 1777 2893 V 1779 2892 V 1781 2892 V 1783 2891 V 1785
2891 V 1787 2890 V 1789 2890 V 1791 2889 V 1793 2889
V 1795 2888 V 1797 2888 V 1799 2887 V 1801 2887 V 1803
2886 V 1805 2886 V 1807 2885 V 1809 2885 V 1811 2884
V 1813 2884 V 1815 2883 V 1817 2883 V 1818 2882 V 1820
2882 V 1822 2881 V 1824 2881 V 1826 2880 V 1828 2880
V 1830 2879 V 1832 2879 V 1834 2879 V 1836 2878 V 1838
2878 V 1840 2877 V 1842 2877 V 1844 2876 V 1846 2876
V 1848 2875 V 1850 2875 V 1852 2875 V 1854 2874 V 1856
2874 V 1858 2873 V 1860 2873 V 1862 2873 V 1864 2872
V 1866 2872 V 1868 2871 V 1870 2871 V 1872 2871 V 1874
2870 V 1876 2870 V 1878 2870 V 1880 2869 V 1882 2869
V 1884 2868 V 1886 2868 V 1888 2868 V 1890 2867 V 1892
2867 V 1893 2867 V 1895 2866 V 1897 2866 V 1899 2866
V 1901 2865 V 1903 2865 V 1905 2865 V 1907 2864 V 1909
2864 V 1911 2864 V 1913 2864 V 1915 2863 V 1917 2863
V 1919 2863 V 1921 2862 V 1923 2862 V 1925 2862 V 1927
2861 V 1929 2861 V 1931 2861 V 1933 2861 V 1935 2860
V 1937 2860 V 1939 2860 V 1941 2860 V 1943 2859 V 1945
2859 V 1947 2859 V 1949 2859 V 1951 2858 V 1953 2858
V 1955 2858 V 1957 2858 V 1959 2857 V 1961 2857 V 1963
2857 V 1965 2857 V 1966 2857 V 1968 2856 V 1970 2856
V 1972 2856 V 1974 2856 V 1976 2856 V 1978 2855 V 2478
2922 a Fb(\))p Fa(\))p 2180 2855 V 2182 2856 V 2184 2856
V 2186 2856 V 2187 2856 V 2189 2856 V 2191 2857 V 2193
2857 V 2195 2857 V 2197 2857 V 2199 2857 V 2201 2858
V 2203 2858 V 2205 2858 V 2207 2858 V 2209 2859 V 2211
2859 V 2213 2859 V 2215 2859 V 2217 2860 V 2219 2860
V 2221 2860 V 2223 2860 V 2225 2861 V 2227 2861 V 2229
2861 V 2231 2861 V 2233 2862 V 2235 2862 V 2237 2862
V 2239 2863 V 2241 2863 V 2243 2863 V 2245 2864 V 2247
2864 V 2249 2864 V 2251 2864 V 2253 2865 V 2255 2865
V 2257 2865 V 2259 2866 V 2260 2866 V 2262 2866 V 2264
2867 V 2266 2867 V 2268 2867 V 2270 2868 V 2272 2868
V 2274 2868 V 2276 2869 V 2278 2869 V 2280 2870 V 2282
2870 V 2284 2870 V 2286 2871 V 2288 2871 V 2290 2871
V 2292 2872 V 2294 2872 V 2296 2873 V 2298 2873 V 2300
2873 V 2302 2874 V 2304 2874 V 2306 2875 V 2308 2875
V 2310 2875 V 2312 2876 V 2314 2876 V 2316 2877 V 2318
2877 V 2320 2878 V 2322 2878 V 2324 2879 V 2326 2879
V 2328 2879 V 2330 2880 V 2332 2880 V 2333 2881 V 2335
2881 V 2337 2882 V 2339 2882 V 2341 2883 V 2343 2883
V 2345 2884 V 2347 2884 V 2349 2885 V 2351 2885 V 2353
2886 V 2355 2886 V 2357 2887 V 2359 2887 V 2361 2888
V 2363 2888 V 2365 2889 V 2367 2889 V 2369 2890 V 2371
2890 V 2373 2891 V 2375 2891 V 2377 2892 V 2379 2892
V 2381 2893 V 2383 2894 V 2385 2894 V 2387 2895 V 2389
2895 V 2391 2896 V 2393 2896 V 2395 2897 V 2397 2898
V 2399 2898 V 2401 2899 V 2403 2899 V 2405 2900 V 2406
2900 V 2408 2901 V 2410 2902 V 2412 2902 V 2414 2903
V 2416 2903 V 2418 2904 V 2420 2905 V 2422 2905 V 2424
2906 V 2426 2907 V 2428 2907 V 2430 2908 V 2432 2909
V 2434 2909 V 2436 2910 V 2438 2910 V 2440 2911 V 2442
2912 V 2444 2912 V 2446 2913 V 2448 2914 V 2450 2914
V 2452 2915 V 2454 2916 V 2456 2917 V 2458 2917 V 2460
2918 V 2462 2919 V 2464 2919 V 2466 2920 V 2468 2921
V 2470 2921 V 2472 2922 V 2474 2923 V 2476 2924 V 2503
2916 2 2 v 2504 2917 162 4 v 2666 2916 2 2 v 2502 3020
4 103 v 2668 3020 V 2503 3023 2 2 v 2504 3024 162 4 v
2666 3023 2 2 v 2537 2994 a FK(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1268 3205 a(inscr)q(its)18 b(d\351cembr)o(e)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2332 3195 a(inscr)q(its)g(janvier)p
0 TeXcolorgray -38 3412 a(???)13 b FG(\306)h FK(120)c
FG(\243)g FK(1,)e(125)19 b FG(\306)14 b FK(135,)19 b(donc)e(il)h(y)f
(aur)o(a)g(135)i(inscr)q(its)f(en)f(janvier)-5 b(.)-246
3445 y
SDict begin H.S end
 -246 3445 a -246 3445 a
SDict begin 12 H.A end
 -246 3445 a -246 3445
a
SDict begin [/View [/XYZ H.V]/Dest (Item.283) cvn /DEST pdfmark end
 -246 3445 a 0 TeXcolorgray -141 3541 a FK(2.)p 0 TeXcolorgray
43 w(P)n(our)17 b(conna\356tr)o(e)g(le)h(pour)o(centage)g(d)n
('augmentation,)h(on)f(compl\350te)h(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1447 3715 2 2 v 1448 3716
221 4 v 1669 3715 2 2 v 1446 3816 4 100 v 1672 3816 V
1447 3819 2 2 v 1448 3820 221 4 v 1669 3819 2 2 v 1472
3790 a(5)12 b(812)p 1 0 0 TeXcolorrgb 1973 3667 a FH(\243)17
b FI(?)g(?)g(?)p 0 TeXcolorgray 1695 3710 4 4 v 1697
3710 V 1699 3709 V 1701 3708 V 1703 3708 V 1705 3707
V 1707 3706 V 1708 3706 V 1710 3705 V 1712 3704 V 1714
3704 V 1716 3703 V 1718 3702 V 1720 3702 V 1722 3701
V 1724 3701 V 1726 3700 V 1728 3699 V 1730 3699 V 1732
3698 V 1734 3698 V 1736 3697 V 1737 3696 V 1739 3696
V 1741 3695 V 1743 3695 V 1745 3694 V 1747 3694 V 1749
3693 V 1751 3692 V 1753 3692 V 1755 3691 V 1757 3691
V 1759 3690 V 1761 3690 V 1763 3689 V 1764 3689 V 1766
3688 V 1768 3687 V 1770 3687 V 1772 3686 V 1774 3686
V 1776 3685 V 1778 3685 V 1780 3684 V 1782 3684 V 1784
3683 V 1786 3683 V 1788 3682 V 1790 3682 V 1791 3681
V 1793 3681 V 1795 3680 V 1797 3680 V 1799 3679 V 1801
3679 V 1803 3679 V 1805 3678 V 1807 3678 V 1809 3677
V 1811 3677 V 1813 3676 V 1815 3676 V 1817 3675 V 1819
3675 V 1820 3674 V 1822 3674 V 1824 3674 V 1826 3673
V 1828 3673 V 1830 3672 V 1832 3672 V 1834 3672 V 1836
3671 V 1838 3671 V 1840 3670 V 1842 3670 V 1844 3670
V 1846 3669 V 1847 3669 V 1849 3668 V 1851 3668 V 1853
3668 V 1855 3667 V 1857 3667 V 1859 3667 V 1861 3666
V 1863 3666 V 1865 3665 V 1867 3665 V 1869 3665 V 1871
3664 V 1873 3664 V 1875 3664 V 1876 3663 V 1878 3663
V 1880 3663 V 1882 3662 V 1884 3662 V 1886 3662 V 1888
3662 V 1890 3661 V 1892 3661 V 1894 3661 V 1896 3660
V 1898 3660 V 1900 3660 V 1902 3660 V 1903 3659 V 1905
3659 V 1907 3659 V 1909 3658 V 1911 3658 V 1913 3658
V 1915 3658 V 1917 3657 V 1919 3657 V 1921 3657 V 1923
3657 V 1925 3656 V 1927 3656 V 1929 3656 V 1930 3656
V 1932 3655 V 1934 3655 V 1936 3655 V 1938 3655 V 1940
3655 V 1942 3654 V 1944 3654 V 1946 3654 V 1948 3654
V 1950 3654 V 1952 3653 V 1954 3653 V 1956 3653 V 1958
3653 V 1959 3653 V 1961 3653 V 1963 3652 V 1965 3652
V 1967 3652 V 1969 3652 V 1971 3652 V 2411 3709 a Fb(*)p
Fa(*)p 2133 3652 V 2135 3652 V 2137 3652 V 2139 3652
V 2141 3652 V 2143 3653 V 2145 3653 V 2147 3653 V 2149
3653 V 2151 3653 V 2153 3653 V 2154 3654 V 2156 3654
V 2158 3654 V 2160 3654 V 2162 3654 V 2164 3655 V 2166
3655 V 2168 3655 V 2170 3655 V 2172 3655 V 2174 3656
V 2176 3656 V 2178 3656 V 2180 3656 V 2181 3657 V 2183
3657 V 2185 3657 V 2187 3657 V 2189 3658 V 2191 3658
V 2193 3658 V 2195 3658 V 2197 3659 V 2199 3659 V 2201
3659 V 2203 3660 V 2205 3660 V 2207 3660 V 2208 3660
V 2210 3661 V 2212 3661 V 2214 3661 V 2216 3662 V 2218
3662 V 2220 3662 V 2222 3662 V 2224 3663 V 2226 3663
V 2228 3663 V 2230 3664 V 2232 3664 V 2234 3664 V 2236
3665 V 2237 3665 V 2239 3665 V 2241 3666 V 2243 3666
V 2245 3667 V 2247 3667 V 2249 3667 V 2251 3668 V 2253
3668 V 2255 3668 V 2257 3669 V 2259 3669 V 2261 3670
V 2263 3670 V 2264 3670 V 2266 3671 V 2268 3671 V 2270
3672 V 2272 3672 V 2274 3672 V 2276 3673 V 2278 3673
V 2280 3674 V 2282 3674 V 2284 3674 V 2286 3675 V 2288
3675 V 2290 3676 V 2292 3676 V 2293 3677 V 2295 3677
V 2297 3678 V 2299 3678 V 2301 3679 V 2303 3679 V 2305
3679 V 2307 3680 V 2309 3680 V 2311 3681 V 2313 3681
V 2315 3682 V 2317 3682 V 2319 3683 V 2320 3683 V 2322
3684 V 2324 3684 V 2326 3685 V 2328 3685 V 2330 3686
V 2332 3686 V 2334 3687 V 2336 3687 V 2338 3688 V 2340
3689 V 2342 3689 V 2344 3690 V 2346 3690 V 2347 3691
V 2349 3691 V 2351 3692 V 2353 3692 V 2355 3693 V 2357
3694 V 2359 3694 V 2361 3695 V 2363 3695 V 2365 3696
V 2367 3696 V 2369 3697 V 2371 3698 V 2373 3698 V 2375
3699 V 2376 3699 V 2378 3700 V 2380 3701 V 2382 3701
V 2384 3702 V 2386 3702 V 2388 3703 V 2390 3704 V 2392
3704 V 2394 3705 V 2396 3706 V 2398 3706 V 2400 3707
V 2402 3708 V 2403 3708 V 2405 3709 V 2407 3710 V 2409
3710 V 2435 3715 2 2 v 2437 3716 221 4 v 2658 3715 2
2 v 2434 3816 4 100 v 2660 3816 V 2435 3819 2 2 v 2437
3820 221 4 v 2658 3819 2 2 v 2461 3790 a FK(6)12 b(065)p
0 0 1 TeXcolorrgb 1289 3994 a(logements)20 b(2007)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 450 w(logements)f(2015)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -38 4208 a(???)p 0 TeXcolorgray
13 w FG(\306)14 b FK(6)8 b(065)i FG(\245)g FK(5)e(812)19
b FG(\274)14 b FK(1,)8 b(0435.)p 1 0 0 TeXcolorrgb 0
TeXcolorgray -38 4349 a(Or)17 b(1,)8 b(0435)18 b FG(\306)392
4293 y FK(104,)8 b(35)p 392 4330 231 5 v 447 4406 a(100)647
4349 y FG(\306)15 b FK(104,)8 b(35)20 b(\045)15 b FG(\306)f
FK(100)19 b(\045)10 b FG(\305)g FK(4,)e(35)20 b(\045,)e(donc)f(le)h
(nombr)o(e)f(de)h(logements)h(a)e(augment\351)i(de)f(4,35)h(\045)e
(environ.)i(A)n(utr)o(ement)-38 4472 y(dit,)e(le)h(taux)g(d)n
('\351volution)h(du)e(nombr)o(e)h(de)f(logements)i(est)f
FG(\305)p FK(4,)8 b(35)19 b(\045.)-38 4636 y FL(N.B.)i
FK(V)-5 b(ous)21 b(n)-6 b('\352tes)21 b(pas)f(oblig\351s)g(d)n('\351cr)
q(ir)o(e)f(le)i(calcul)f(\002nal)g(:)g(vous)h(pouvez)f(passer)g(dir)o
(ectement)h(de)f(\253)14 b(1,0435)k(\273)39 b(\340)19
b(la)h(r\351ponse)h(\253)15 b(augmen-)-38 4735 y(tation)22
b(de)f(4,35)i(\045)14 b(\273.)22 b(N)n(otez)e(\351galement)i(qu)n('il)g
(faut)g(pr)o(endr)o(e)f(4)g(chiffr)o(es)h(apr\350s)f(la)h(virgule)f
(pour)h(avoir)f(une)h(r\351ponse)g(\002nale)f(arrondie)g(\340)-38
4835 y(0,01)e(\045)e(pr\350s)o(.)-246 4867 y
SDict begin H.S end
 -246 4867
a -246 4867 a
SDict begin 12 H.A end
 -246 4867 a -246 4867 a
SDict begin [/View [/XYZ H.V]/Dest (Item.284) cvn /DEST pdfmark end
 -246 4867 a 0 TeXcolorgray
-141 4964 a FK(3.)p 0 TeXcolorgray 43 w(On)g(r)o(appelle)i(que)f(la)g
(TV)-5 b(A)18 b(\(taxe)f(sur)h(la)f(valeur)h(ajout\351e\))h(est)f(une)g
(taxe)f(sur)h(les)g(produits)g(dont)f(le)h(montant)h(r)o(evient)f(\340)
f(l)o('\311)o(tat.)-38 5078 y(Dir)o(e)f(qu)n(')i(\253)c(il)j(y)g(a)g
(20)h(\045)f(de)h(TV)-5 b(A)14 b(\273)35 b(signi\002e)18
b(qu)n('un)g(commer)o(\347ant)g(qui)g(veut)g(gagner)f(100)h
FE(N)34 b FK(avec)18 b(la)f(vente)i(d)n('un)f(ar)q(ticle)f(doit)g(le)h
(mettr)o(e)g(en)-38 5178 y(vente)g(\340)f(120)i FE(N)34
b FK(\(il)18 b(ajoute)g(20)g(\045)f(de)h(la)f(valeur)-5
b(,)18 b(donc)g(il)f(multiplie)j(par)e(1,20\).)-38 5292
y(S)n(ur)g(l)o('ar)q(ticle)g(vendu)g(120)g FE(N)34 b
FK(en)18 b(magasin,)g(le)g(commer)o(\347ant)g(gar)o(der)o(a)e(100)j
FE(N)34 b FK(et)17 b(devr)o(a)h(donner)f(20)h FE(N)35
b FK(\340)17 b(L)-10 b('\311)o(tat.)-38 5406 y(Le)18
b(pr)q(ix)f(T)q(T)o(C)h(\(toutes)g(taxes)g(compr)q(ises\))g(est)g(de)f
(120)i FE(N)p FK(,)e(le)h(pr)q(ix)f(HT)h(\(hors)f(taxe\))h(est)g(de)f
(100)h FE(N)34 b FK(et)18 b(le)g(montant)h(de)e(la)g(TV)-5
b(A)19 b(est)f(de)f(20)h FE(N)p FK(.)-38 5570 y(P)n(our)f(avoir)g(le)h
(pr)q(ix)f(T)q(T)o(C)h(dans)f(notr)o(e)g(exemple)o(,)i(il)f(faut)g
(compl\351ter)h(le)f(sch\351ma)g(:)p 0 TeXcolorgray 1909
5895 a(56)p 0 TeXcolorgray eop end
%%Page: 57 57
TeXDict begin 57 56 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.57) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1613 -154
2 2 v 1615 -153 128 4 v 1743 -154 2 2 v 1613 -53 4 100
v 1745 -53 V 1613 -50 2 2 v 1615 -49 128 4 v 1743 -50
2 2 v 1639 -79 a FK(80)p 1 0 0 TeXcolorrgb 1961 -207
a FH(\243)17 b FI(1,20)p 0 TeXcolorgray 1769 -154 4 4
v 1772 -155 V 1775 -157 V 1778 -158 V 1781 -159 V 1783
-161 V 1786 -162 V 1789 -163 V 1792 -165 V 1795 -166
V 1798 -167 V 1801 -168 V 1803 -170 V 1806 -171 V 1809
-172 V 1812 -173 V 1815 -174 V 1818 -175 V 1820 -177
V 1823 -178 V 1826 -179 V 1829 -180 V 1832 -181 V 1835
-182 V 1838 -183 V 1840 -184 V 1843 -185 V 1846 -186
V 1849 -187 V 1852 -188 V 1855 -189 V 1857 -190 V 1860
-191 V 1863 -192 V 1866 -193 V 1869 -194 V 1872 -195
V 1875 -195 V 1877 -196 V 1880 -197 V 1883 -198 V 1886
-199 V 1889 -199 V 1892 -200 V 1894 -201 V 1897 -202
V 1900 -202 V 1903 -203 V 1906 -204 V 1909 -205 V 1912
-205 V 1914 -206 V 1917 -207 V 1920 -207 V 1923 -208
V 1926 -208 V 1929 -209 V 1932 -210 V 1934 -210 V 1937
-211 V 1940 -211 V 1943 -212 V 1946 -212 V 1949 -213
V 1951 -213 V 1954 -214 V 1957 -214 V 2301 -163 a Fb(\()p
Fa(\()p 2128 -214 V 2131 -214 V 2134 -213 V 2137 -213
V 2139 -212 V 2142 -212 V 2145 -211 V 2148 -211 V 2151
-210 V 2154 -210 V 2156 -209 V 2159 -208 V 2162 -208
V 2165 -207 V 2168 -207 V 2171 -206 V 2174 -205 V 2176
-205 V 2179 -204 V 2182 -203 V 2185 -202 V 2188 -202
V 2191 -201 V 2193 -200 V 2196 -199 V 2199 -199 V 2202
-198 V 2205 -197 V 2208 -196 V 2211 -195 V 2213 -195
V 2216 -194 V 2219 -193 V 2222 -192 V 2225 -191 V 2228
-190 V 2231 -189 V 2233 -188 V 2236 -187 V 2239 -186
V 2242 -185 V 2245 -184 V 2248 -183 V 2250 -182 V 2253
-181 V 2256 -180 V 2259 -179 V 2262 -178 V 2265 -177
V 2268 -175 V 2270 -174 V 2273 -173 V 2276 -172 V 2279
-171 V 2282 -170 V 2285 -168 V 2287 -167 V 2290 -166
V 2293 -165 V 2296 -163 V 2299 -162 V 2326 -155 2 2 v
2327 -154 162 4 v 2489 -155 2 2 v 2325 -52 4 103 v 2491
-52 V 2326 -49 2 2 v 2327 -48 162 4 v 2489 -49 2 2 v
2360 -78 a FK(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb 1549 123
a(pr)q(ix)17 b(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -38 327 a(???)c
FG(\306)h FK(80)c FG(\243)g FK(1,)e(20)18 b FG(\306)c
FK(96,)k(donc)f(le)h(montant)h(T)q(T)o(C)f(est)g(de)f(96)h
FE(N)p FK(.)-38 485 y FL(R)o(emarque)c(:)j FK(Le)h(montant)h(de)e(la)g
(TV)-5 b(A)19 b(est)f(96)10 b FG(\241)g FK(80)16 b FG(\306)e
FK(16)19 b FE(N)p FK(.)-38 598 y(Il)e(ne)h(faut)g(pas)g(confondr)o(e)f
(ce)h(montant)h(\(16)f FE(N)p FK(\))f(et)h(le)g(taux)g(de)f(TV)-5
b(A)19 b(\(ici)e(20)i(\045\).)e(Il)g(y)g(a)h(une)g(ambigu\357t\351)h
(lorsqu)n('on)f(parle)g(de)g(\253)c(TV)-5 b(A)14 b(\273)35
b(sans)-38 697 y(pr\351ciser)18 b(s)m('il)g(s)m('agit)g(d)n('un)g
(montant)g(ou)g(d)n('un)g(taux.)-246 779 y
SDict begin H.S end
 -246 779 a
-246 779 a
SDict begin 12 H.A end
 -246 779 a -246 779 a
SDict begin [/View [/XYZ H.V]/Dest (exo.90) cvn /DEST pdfmark end
 -246 779 a -246 797
a
SDict begin H.S end
 -246 797 a -246 797 a
SDict begin 12 H.A end
 -246 797 a -246 797 a
SDict begin [/View [/XYZ H.V]/Dest (Item.285) cvn /DEST pdfmark end
 -246 797
a 0 TeXcolorgray 128 x FL(Ex)o(er)o(cice)c(90)p 0 TeXcolorgray
0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray 43 w(100)21
b(\045)11 b FG(\241)g FK(15)21 b(\045)16 b FG(\306)h
FK(85)k(\045)16 b FG(\306)1221 869 y FK(85)p 1201 906
122 5 v 1201 982 a(100)1349 925 y FG(\306)g FK(0,)8 b(85,)22
b(donc)d(pour)i(diminuer)f(un)h(nombr)o(e)e(de)h(15)g(\045,)g(il)g
(faut)h(le)f(multiplier)i(par)e(0,)8 b(85.)22 b(On)-38
1048 y(compl\350te)d(donc)e(le)h(sch\351ma)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1401 1216 2 2 v 1402 1217 262 4 v 1664
1216 2 2 v 1400 1317 4 100 v 1666 1317 V 1401 1320 2
2 v 1402 1321 262 4 v 1664 1320 2 2 v 1426 1291 a(12)12
b(000)p 1 0 0 TeXcolorrgb 1943 1163 a FH(\243)17 b FI(0,85)p
0 TeXcolorgray 1690 1204 4 4 v 1692 1203 V 1694 1203
V 1696 1202 V 1698 1201 V 1700 1201 V 1701 1200 V 1703
1200 V 1705 1199 V 1707 1198 V 1709 1198 V 1711 1197
V 1713 1197 V 1715 1196 V 1717 1195 V 1719 1195 V 1721
1194 V 1723 1194 V 1725 1193 V 1727 1193 V 1728 1192
V 1730 1191 V 1732 1191 V 1734 1190 V 1736 1190 V 1738
1189 V 1740 1189 V 1742 1188 V 1744 1188 V 1746 1187
V 1748 1187 V 1750 1186 V 1752 1186 V 1753 1185 V 1755
1185 V 1757 1184 V 1759 1184 V 1761 1183 V 1763 1183
V 1765 1182 V 1767 1182 V 1769 1181 V 1771 1181 V 1773
1180 V 1775 1180 V 1777 1179 V 1778 1179 V 1780 1178
V 1782 1178 V 1784 1177 V 1786 1177 V 1788 1177 V 1790
1176 V 1792 1176 V 1794 1175 V 1796 1175 V 1798 1174
V 1800 1174 V 1802 1174 V 1804 1173 V 1805 1173 V 1807
1172 V 1809 1172 V 1811 1172 V 1813 1171 V 1815 1171
V 1817 1170 V 1819 1170 V 1821 1170 V 1823 1169 V 1825
1169 V 1827 1168 V 1829 1168 V 1830 1168 V 1832 1167
V 1834 1167 V 1836 1167 V 1838 1166 V 1840 1166 V 1842
1166 V 1844 1165 V 1846 1165 V 1848 1165 V 1850 1164
V 1852 1164 V 1854 1164 V 1856 1163 V 1857 1163 V 1859
1163 V 1861 1162 V 1863 1162 V 1865 1162 V 1867 1161
V 1869 1161 V 1871 1161 V 1873 1161 V 1875 1160 V 1877
1160 V 1879 1160 V 1881 1159 V 1882 1159 V 1884 1159
V 1886 1159 V 1888 1158 V 1890 1158 V 1892 1158 V 1894
1158 V 1896 1157 V 1898 1157 V 1900 1157 V 1902 1157
V 1904 1156 V 1906 1156 V 1907 1156 V 1909 1156 V 1911
1156 V 1913 1155 V 1915 1155 V 1917 1155 V 1919 1155
V 1921 1155 V 1923 1154 V 1925 1154 V 1927 1154 V 1929
1154 V 1931 1154 V 1933 1153 V 1934 1153 V 1936 1153
V 1938 1153 V 1940 1153 V 2412 1220 a Fb(\))p Fa(\))p
2110 1153 V 2112 1153 V 2114 1153 V 2115 1153 V 2117
1153 V 2119 1154 V 2121 1154 V 2123 1154 V 2125 1154
V 2127 1154 V 2129 1155 V 2131 1155 V 2133 1155 V 2135
1155 V 2137 1155 V 2139 1156 V 2140 1156 V 2142 1156
V 2144 1156 V 2146 1156 V 2148 1157 V 2150 1157 V 2152
1157 V 2154 1157 V 2156 1158 V 2158 1158 V 2160 1158
V 2162 1158 V 2164 1159 V 2166 1159 V 2167 1159 V 2169
1159 V 2171 1160 V 2173 1160 V 2175 1160 V 2177 1161
V 2179 1161 V 2181 1161 V 2183 1161 V 2185 1162 V 2187
1162 V 2189 1162 V 2191 1163 V 2192 1163 V 2194 1163
V 2196 1164 V 2198 1164 V 2200 1164 V 2202 1165 V 2204
1165 V 2206 1165 V 2208 1166 V 2210 1166 V 2212 1166
V 2214 1167 V 2216 1167 V 2217 1167 V 2219 1168 V 2221
1168 V 2223 1168 V 2225 1169 V 2227 1169 V 2229 1170
V 2231 1170 V 2233 1170 V 2235 1171 V 2237 1171 V 2239
1172 V 2241 1172 V 2243 1172 V 2244 1173 V 2246 1173
V 2248 1174 V 2250 1174 V 2252 1174 V 2254 1175 V 2256
1175 V 2258 1176 V 2260 1176 V 2262 1177 V 2264 1177
V 2266 1177 V 2268 1178 V 2269 1178 V 2271 1179 V 2273
1179 V 2275 1180 V 2277 1180 V 2279 1181 V 2281 1181
V 2283 1182 V 2285 1182 V 2287 1183 V 2289 1183 V 2291
1184 V 2293 1184 V 2295 1185 V 2296 1185 V 2298 1186
V 2300 1186 V 2302 1187 V 2304 1187 V 2306 1188 V 2308
1188 V 2310 1189 V 2312 1189 V 2314 1190 V 2316 1190
V 2318 1191 V 2320 1191 V 2321 1192 V 2323 1193 V 2325
1193 V 2327 1194 V 2329 1194 V 2331 1195 V 2333 1195
V 2335 1196 V 2337 1197 V 2339 1197 V 2341 1198 V 2343
1198 V 2345 1199 V 2347 1200 V 2348 1200 V 2350 1201
V 2352 1201 V 2354 1202 V 2356 1203 V 2358 1203 V 2360
1204 V 2362 1205 V 2364 1205 V 2366 1206 V 2368 1206
V 2370 1207 V 2372 1208 V 2373 1208 V 2375 1209 V 2377
1210 V 2379 1210 V 2381 1211 V 2383 1212 V 2385 1212
V 2387 1213 V 2389 1214 V 2391 1214 V 2393 1215 V 2395
1216 V 2397 1216 V 2398 1217 V 2400 1218 V 2402 1219
V 2404 1219 V 2406 1220 V 2408 1221 V 2410 1221 V 2436
1215 2 2 v 2438 1216 162 4 v 2600 1215 2 2 v 2435 1318
4 103 v 2602 1318 V 2436 1321 2 2 v 2438 1322 162 4 v
2600 1321 2 2 v 2471 1292 a FK(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1292 1496 a(pr)q(ix)17 b(de)g(d\351par)q(t)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2224 1495 a(pr)q(ix)g(apr\350s)h(r)o(emise)p
0 TeXcolorgray -38 1700 a(???)13 b FG(\306)h FK(12)8
b(000)i FG(\243)g FK(0,)e(85)19 b FG(\306)c FK(10)8 b(200,)20
b(donc)d(le)h(pr)q(ix)f(apr\350s)h(r)o(emise)g(est)g(de)f(10)12
b(200)20 b FE(N)p FK(.)-246 1730 y
SDict begin H.S end
 -246 1730 a -246 1730
a
SDict begin 12 H.A end
 -246 1730 a -246 1730 a
SDict begin [/View [/XYZ H.V]/Dest (Item.286) cvn /DEST pdfmark end
 -246 1730 a 0 TeXcolorgray
-141 1825 a FK(2.)p 0 TeXcolorgray 43 w(P)n(our)d(conna\356tr)o(e)g(le)
h(pour)o(centage)g(de)f(baisse)o(,)h(on)f(compl\350te)i(le)f(sch\351ma)
g(:)p 0 TeXcolorgray 0 TeXcolorgray 1426 1992 2 2 v 1428
1993 169 4 v 1597 1992 2 2 v 1426 2093 4 100 v 1599 2093
V 1426 2096 2 2 v 1428 2097 169 4 v 1597 2096 2 2 v 1452
2068 a(240)p 1 0 0 TeXcolorrgb 1973 1944 a FH(\243)f
FI(?)g(?)g(?)p 0 TeXcolorgray 1623 2000 4 4 v 1625 1999
V 1628 1998 V 1630 1998 V 1632 1997 V 1634 1996 V 1636
1996 V 1638 1995 V 1640 1994 V 1642 1993 V 1644 1993
V 1647 1992 V 1649 1991 V 1651 1991 V 1653 1990 V 1655
1989 V 1657 1989 V 1659 1988 V 1661 1987 V 1663 1987
V 1666 1986 V 1668 1985 V 1670 1985 V 1672 1984 V 1674
1983 V 1676 1983 V 1678 1982 V 1680 1981 V 1682 1981
V 1685 1980 V 1687 1980 V 1689 1979 V 1691 1978 V 1693
1978 V 1695 1977 V 1697 1976 V 1699 1976 V 1701 1975
V 1704 1975 V 1706 1974 V 1708 1974 V 1710 1973 V 1712
1972 V 1714 1972 V 1716 1971 V 1718 1971 V 1720 1970
V 1723 1969 V 1725 1969 V 1727 1968 V 1729 1968 V 1731
1967 V 1733 1967 V 1735 1966 V 1737 1966 V 1739 1965
V 1742 1965 V 1744 1964 V 1746 1964 V 1748 1963 V 1750
1962 V 1752 1962 V 1754 1961 V 1756 1961 V 1758 1960
V 1761 1960 V 1763 1959 V 1765 1959 V 1767 1958 V 1769
1958 V 1771 1958 V 1773 1957 V 1775 1957 V 1777 1956
V 1780 1956 V 1782 1955 V 1784 1955 V 1786 1954 V 1788
1954 V 1790 1953 V 1792 1953 V 1794 1952 V 1797 1952
V 1799 1952 V 1801 1951 V 1803 1951 V 1805 1950 V 1807
1950 V 1809 1949 V 1811 1949 V 1813 1949 V 1816 1948
V 1818 1948 V 1820 1947 V 1822 1947 V 1824 1947 V 1826
1946 V 1828 1946 V 1830 1946 V 1832 1945 V 1835 1945
V 1837 1944 V 1839 1944 V 1841 1944 V 1843 1943 V 1845
1943 V 1847 1943 V 1849 1942 V 1851 1942 V 1854 1942
V 1856 1941 V 1858 1941 V 1860 1941 V 1862 1940 V 1864
1940 V 1866 1940 V 1868 1939 V 1870 1939 V 1873 1939
V 1875 1938 V 1877 1938 V 1879 1938 V 1881 1937 V 1883
1937 V 1885 1937 V 1887 1937 V 1889 1936 V 1892 1936
V 1894 1936 V 1896 1935 V 1898 1935 V 1900 1935 V 1902
1935 V 1904 1934 V 1906 1934 V 1908 1934 V 1911 1934
V 1913 1933 V 1915 1933 V 1917 1933 V 1919 1933 V 1921
1933 V 1923 1932 V 1925 1932 V 1927 1932 V 1930 1932
V 1932 1931 V 1934 1931 V 1936 1931 V 1938 1931 V 1940
1931 V 1942 1931 V 1944 1930 V 1946 1930 V 1949 1930
V 1951 1930 V 1953 1930 V 1955 1929 V 1957 1929 V 1959
1929 V 1961 1929 V 1963 1929 V 1966 1929 V 1968 1929
V 1970 1928 V 2484 1999 a Fb(\))p Fa(\))p 2135 1928 V
2137 1929 V 2139 1929 V 2141 1929 V 2143 1929 V 2145
1929 V 2147 1929 V 2149 1929 V 2151 1930 V 2154 1930
V 2156 1930 V 2158 1930 V 2160 1930 V 2162 1931 V 2164
1931 V 2166 1931 V 2168 1931 V 2170 1931 V 2173 1931
V 2175 1932 V 2177 1932 V 2179 1932 V 2181 1932 V 2183
1933 V 2185 1933 V 2187 1933 V 2189 1933 V 2192 1933
V 2194 1934 V 2196 1934 V 2198 1934 V 2200 1934 V 2202
1935 V 2204 1935 V 2206 1935 V 2208 1935 V 2211 1936
V 2213 1936 V 2215 1936 V 2217 1937 V 2219 1937 V 2221
1937 V 2223 1937 V 2225 1938 V 2227 1938 V 2230 1938
V 2232 1939 V 2234 1939 V 2236 1939 V 2238 1940 V 2240
1940 V 2242 1940 V 2244 1941 V 2246 1941 V 2249 1941
V 2251 1942 V 2253 1942 V 2255 1942 V 2257 1943 V 2259
1943 V 2261 1943 V 2263 1944 V 2265 1944 V 2268 1944
V 2270 1945 V 2272 1945 V 2274 1946 V 2276 1946 V 2278
1946 V 2280 1947 V 2282 1947 V 2284 1947 V 2287 1948
V 2289 1948 V 2291 1949 V 2293 1949 V 2295 1949 V 2297
1950 V 2299 1950 V 2301 1951 V 2304 1951 V 2306 1952
V 2308 1952 V 2310 1952 V 2312 1953 V 2314 1953 V 2316
1954 V 2318 1954 V 2320 1955 V 2323 1955 V 2325 1956
V 2327 1956 V 2329 1957 V 2331 1957 V 2333 1958 V 2335
1958 V 2337 1958 V 2339 1959 V 2342 1959 V 2344 1960
V 2346 1960 V 2348 1961 V 2350 1961 V 2352 1962 V 2354
1962 V 2356 1963 V 2358 1964 V 2361 1964 V 2363 1965
V 2365 1965 V 2367 1966 V 2369 1966 V 2371 1967 V 2373
1967 V 2375 1968 V 2377 1968 V 2380 1969 V 2382 1969
V 2384 1970 V 2386 1971 V 2388 1971 V 2390 1972 V 2392
1972 V 2394 1973 V 2396 1974 V 2399 1974 V 2401 1975
V 2403 1975 V 2405 1976 V 2407 1976 V 2409 1977 V 2411
1978 V 2413 1978 V 2415 1979 V 2418 1980 V 2420 1980
V 2422 1981 V 2424 1981 V 2426 1982 V 2428 1983 V 2430
1983 V 2432 1984 V 2434 1985 V 2437 1985 V 2439 1986
V 2441 1987 V 2443 1987 V 2445 1988 V 2447 1989 V 2449
1989 V 2451 1990 V 2453 1991 V 2456 1991 V 2458 1992
V 2460 1993 V 2462 1993 V 2464 1994 V 2466 1995 V 2468
1996 V 2470 1996 V 2473 1997 V 2475 1998 V 2477 1998
V 2479 1999 V 2481 2000 V 2508 1992 2 2 v 2510 1993 169
4 v 2679 1992 2 2 v 2507 2093 4 100 v 2680 2093 V 2508
2096 2 2 v 2510 2097 169 4 v 2679 2096 2 2 v 2534 2068
a FK(228)p 0 0 1 TeXcolorrgb 1196 2268 a(\351missions)j(ann\351e)e(0)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 449 w(\351missions)i(ann\351e)e(1)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -29 2452 a(?)9 b(?)g(?)p
0 TeXcolorgray 12 w FG(\306)14 b FK(228)c FG(\245)g FK(240)18
b FG(\306)c FK(0,)8 b(95.)-38 2565 y(Or)17 b(0,)8 b(95)16
b FG(\306)326 2532 y FI(95)p 310 2545 93 5 v 310 2593
a(100)427 2565 y FG(\306)e FK(95)k(\045,)g(donc)f(les)h(\351missions)h
(ont)f(baiss\351)g(de)f(5)h(\045.)f(A)n(utr)o(ement)h(dit,)g(le)g(taux)
f(d)n('\351volution)j(est)e FG(\241)p FK(5)f(\045.)-38
2723 y Fu(")p FK(N)n(e)g(pas)h(oublier)g(le)f(\253)d
FG(\241)g FK(\273)34 b(dans)17 b FG(\241)p FK(5)h(\045.)-246
2754 y
SDict begin H.S end
 -246 2754 a -246 2754 a
SDict begin 12 H.A end
 -246 2754 a -246 2754
a
SDict begin [/View [/XYZ H.V]/Dest (Item.287) cvn /DEST pdfmark end
 -246 2754 a 0 TeXcolorgray -141 2848 a FK(3.)p 0 TeXcolorgray
43 w(100)d(\045)r FG(\241)r FK(25)g(\045)f FG(\306)g
FK(75)h(\045)g FG(\306)730 2815 y FI(75)p 715 2828 93
5 v 715 2876 a(100)831 2848 y FG(\306)f FK(0,)8 b(75,)16
b(donc)e(la)g(baisse)h(de)f(25)g(\045)g(\351quivaut)i(\340)d(une)i
(multiplication)i(par)d(0,75)i(et)e(on)g(peut)h(utiliser)h(le)e
(sch\351ma)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1450 3027
2 2 v 1452 3028 162 4 v 1614 3027 2 2 v 1450 3130 4 103
v 1616 3130 V 1450 3133 2 2 v 1452 3134 162 4 v 1614
3133 2 2 v 1485 3104 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb
1920 2975 a FH(\243)p FI(0,75)p 0 TeXcolorgray 1640 3030
4 4 v 1642 3030 V 1644 3029 V 1645 3028 V 1647 3028 V
1649 3027 V 1651 3026 V 1653 3026 V 1654 3025 V 1656
3024 V 1658 3024 V 1660 3023 V 1662 3022 V 1663 3022
V 1665 3021 V 1667 3020 V 1669 3020 V 1671 3019 V 1672
3018 V 1674 3018 V 1676 3017 V 1678 3016 V 1680 3016
V 1681 3015 V 1683 3015 V 1685 3014 V 1687 3013 V 1689
3013 V 1690 3012 V 1692 3011 V 1694 3011 V 1696 3010
V 1698 3010 V 1699 3009 V 1701 3009 V 1703 3008 V 1705
3007 V 1707 3007 V 1708 3006 V 1710 3006 V 1712 3005
V 1714 3005 V 1716 3004 V 1717 3003 V 1719 3003 V 1721
3002 V 1723 3002 V 1725 3001 V 1726 3001 V 1728 3000
V 1730 3000 V 1732 2999 V 1734 2999 V 1735 2998 V 1737
2998 V 1739 2997 V 1741 2997 V 1743 2996 V 1744 2996
V 1746 2995 V 1748 2995 V 1750 2994 V 1752 2994 V 1753
2993 V 1755 2993 V 1757 2992 V 1759 2992 V 1761 2991
V 1762 2991 V 1764 2990 V 1766 2990 V 1768 2989 V 1770
2989 V 1771 2988 V 1773 2988 V 1775 2988 V 1777 2987
V 1779 2987 V 1780 2986 V 1782 2986 V 1784 2985 V 1786
2985 V 1788 2985 V 1789 2984 V 1791 2984 V 1793 2983
V 1795 2983 V 1797 2983 V 1798 2982 V 1800 2982 V 1802
2981 V 1804 2981 V 1806 2981 V 1807 2980 V 1809 2980
V 1811 2980 V 1813 2979 V 1815 2979 V 1816 2979 V 1818
2978 V 1820 2978 V 1822 2977 V 1824 2977 V 1825 2977
V 1827 2976 V 1829 2976 V 1831 2976 V 1833 2976 V 1834
2975 V 1836 2975 V 1838 2975 V 1840 2974 V 1842 2974
V 1843 2974 V 1845 2973 V 1847 2973 V 1849 2973 V 1851
2972 V 1852 2972 V 1854 2972 V 1856 2972 V 1858 2971
V 1860 2971 V 1861 2971 V 1863 2971 V 1865 2970 V 1867
2970 V 1869 2970 V 1870 2970 V 1872 2969 V 1874 2969
V 1876 2969 V 1878 2969 V 1879 2968 V 1881 2968 V 1883
2968 V 1885 2968 V 1887 2968 V 1888 2967 V 1890 2967
V 1892 2967 V 1894 2967 V 1896 2966 V 1897 2966 V 1899
2966 V 1901 2966 V 1903 2966 V 1905 2966 V 1906 2965
V 1908 2965 V 1910 2965 V 1912 2965 V 1914 2965 V 1915
2965 V 1917 2964 V 2365 3036 a Fb(\()p Fa(\()p 2068 2964
V 2070 2965 V 2072 2965 V 2074 2965 V 2076 2965 V 2077
2965 V 2079 2965 V 2081 2966 V 2083 2966 V 2085 2966
V 2086 2966 V 2088 2966 V 2090 2966 V 2092 2967 V 2094
2967 V 2095 2967 V 2097 2967 V 2099 2968 V 2101 2968
V 2103 2968 V 2104 2968 V 2106 2968 V 2108 2969 V 2110
2969 V 2112 2969 V 2113 2969 V 2115 2970 V 2117 2970
V 2119 2970 V 2121 2970 V 2122 2971 V 2124 2971 V 2126
2971 V 2128 2971 V 2130 2972 V 2131 2972 V 2133 2972
V 2135 2972 V 2137 2973 V 2139 2973 V 2140 2973 V 2142
2974 V 2144 2974 V 2146 2974 V 2148 2975 V 2149 2975
V 2151 2975 V 2153 2976 V 2155 2976 V 2157 2976 V 2158
2976 V 2160 2977 V 2162 2977 V 2164 2977 V 2166 2978
V 2167 2978 V 2169 2979 V 2171 2979 V 2173 2979 V 2175
2980 V 2176 2980 V 2178 2980 V 2180 2981 V 2182 2981
V 2184 2981 V 2185 2982 V 2187 2982 V 2189 2983 V 2191
2983 V 2193 2983 V 2194 2984 V 2196 2984 V 2198 2985
V 2200 2985 V 2202 2985 V 2203 2986 V 2205 2986 V 2207
2987 V 2209 2987 V 2211 2988 V 2212 2988 V 2214 2988
V 2216 2989 V 2218 2989 V 2220 2990 V 2221 2990 V 2223
2991 V 2225 2991 V 2227 2992 V 2229 2992 V 2230 2993
V 2232 2993 V 2234 2994 V 2236 2994 V 2238 2995 V 2239
2995 V 2241 2996 V 2243 2996 V 2245 2997 V 2247 2997
V 2248 2998 V 2250 2998 V 2252 2999 V 2254 2999 V 2256
3000 V 2257 3000 V 2259 3001 V 2261 3001 V 2263 3002
V 2265 3002 V 2266 3003 V 2268 3003 V 2270 3004 V 2272
3005 V 2274 3005 V 2275 3006 V 2277 3006 V 2279 3007
V 2281 3007 V 2283 3008 V 2284 3009 V 2286 3009 V 2288
3010 V 2290 3010 V 2292 3011 V 2293 3011 V 2295 3012
V 2297 3013 V 2299 3013 V 2301 3014 V 2302 3015 V 2304
3015 V 2306 3016 V 2308 3016 V 2310 3017 V 2311 3018
V 2313 3018 V 2315 3019 V 2317 3020 V 2319 3020 V 2320
3021 V 2322 3022 V 2324 3022 V 2326 3023 V 2328 3024
V 2329 3024 V 2331 3025 V 2333 3026 V 2335 3026 V 2337
3027 V 2338 3028 V 2340 3028 V 2342 3029 V 2344 3030
V 2346 3030 V 2347 3031 V 2349 3032 V 2351 3033 V 2353
3033 V 2355 3034 V 2356 3035 V 2358 3036 V 2360 3036
V 2362 3037 V 2389 3028 2 2 v 2391 3029 128 4 v 2519
3028 2 2 v 2388 3129 4 100 v 2521 3129 V 2389 3132 2
2 v 2391 3133 128 4 v 2519 3132 2 2 v 2415 3103 a FK(63)p
0 0 1 TeXcolorrgb 1356 3308 a(pr)q(ix)18 b(initial)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2159 3306 a(pr)q(ix)g(apr\350s)f(r)o
(emise)p 0 TeXcolorgray -38 3512 a(???)c FG(\306)h FK(63)c
FG(\245)g FK(0,)e(75)18 b FG(\306)c FK(84,)k(donc)f(le)h(pr)q(ix)g
(initial)g(\351tait)g(de)f(84)i FE(N)p FK(.)-246 3592
y
SDict begin H.S end
 -246 3592 a -246 3592 a
SDict begin 12 H.A end
 -246 3592 a -246 3592 a
SDict begin [/View [/XYZ H.V]/Dest (exo.91) cvn /DEST pdfmark end
 -246
3592 a 0 TeXcolorgray 113 x FL(Ex)o(er)o(cice)14 b(91)p
0 TeXcolorgray 41 w FK(P)n(our)23 b(obtenir)h(le)g(pr)q(ix)f(T)q(T)o
(C,)i(on)e(augmente)i(le)f(pr)q(ix)f(HT)h(de)f(10)i(\045)9
b(;)23 b(autr)o(ement)h(dit,)g(on)g(le)g(multiplie)i(par)d(1,10.)j(On)d
(peut)i(ainsi)-246 3804 y(compl\351ter)19 b(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1493 3993 2 2 v 1494 3994
162 4 v 1656 3993 2 2 v 1492 4096 4 103 v 1658 4096 V
1493 4099 2 2 v 1494 4100 162 4 v 1656 4099 2 2 v 1527
4071 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb 1857 3941 a FH(\243)17
b FI(1,10)p 0 TeXcolorgray 1682 3986 4 4 v 1685 3985
V 1688 3983 V 1691 3982 V 1694 3981 V 1697 3980 V 1700
3978 V 1702 3977 V 1705 3976 V 1708 3975 V 1711 3974
V 1714 3973 V 1717 3971 V 1720 3970 V 1722 3969 V 1725
3968 V 1728 3967 V 1731 3966 V 1734 3965 V 1737 3964
V 1739 3963 V 1742 3962 V 1745 3961 V 1748 3960 V 1751
3959 V 1754 3958 V 1757 3957 V 1759 3956 V 1762 3955
V 1765 3954 V 1768 3954 V 1771 3953 V 1774 3952 V 1776
3951 V 1779 3950 V 1782 3949 V 1785 3949 V 1788 3948
V 1791 3947 V 1794 3946 V 1796 3946 V 1799 3945 V 1802
3944 V 1805 3943 V 1808 3943 V 1811 3942 V 1813 3942
V 1816 3941 V 1819 3940 V 1822 3940 V 1825 3939 V 1828
3939 V 1831 3938 V 1833 3937 V 1836 3937 V 1839 3936
V 1842 3936 V 1845 3935 V 1848 3935 V 1851 3934 V 1853
3934 V 2184 3979 a Fb(\()p Fa(\()p 2024 3934 V 2027 3934
V 2030 3935 V 2033 3935 V 2036 3936 V 2038 3936 V 2041
3937 V 2044 3937 V 2047 3938 V 2050 3939 V 2053 3939
V 2056 3940 V 2058 3940 V 2061 3941 V 2064 3942 V 2067
3942 V 2070 3943 V 2073 3943 V 2075 3944 V 2078 3945
V 2081 3946 V 2084 3946 V 2087 3947 V 2090 3948 V 2093
3949 V 2095 3949 V 2098 3950 V 2101 3951 V 2104 3952
V 2107 3953 V 2110 3954 V 2113 3954 V 2115 3955 V 2118
3956 V 2121 3957 V 2124 3958 V 2127 3959 V 2130 3960
V 2132 3961 V 2135 3962 V 2138 3963 V 2141 3964 V 2144
3965 V 2147 3966 V 2150 3967 V 2152 3968 V 2155 3969
V 2158 3970 V 2161 3971 V 2164 3973 V 2167 3974 V 2169
3975 V 2172 3976 V 2175 3977 V 2178 3978 V 2181 3980
V 2208 3989 2 2 v 2210 3990 189 4 v 2399 3989 2 2 v 2207
4100 4 111 v 2401 4100 V 2208 4103 2 2 v 2210 4104 189
4 v 2399 4103 2 2 v 2234 4065 a FK(4,95)p 0 0 1 TeXcolorrgb
1445 4275 a(pr)q(ix)g(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -246 4512
a(C)o(onclusion)j(:)d(???)c FG(\306)i FK(4,)8 b(95)i
FG(\245)g FK(1,)e(10)18 b FG(\306)c FK(4,)8 b(50,)19
b(donc)e(le)h(pr)q(ix)f(HT)h(est)g(de)f(4,50)i FE(N)9
b FK(;)17 b(et)g(le)h(montant)h(de)e(la)g(TV)-5 b(A)19
b(\(la)e(somme)i(qui)f(r)o(evient)g(\340)f(l)o('\311)o(tat\))h(est)802
4684 y(montant)g(TV)-5 b(A)16 b FG(\306)e FK(montant)19
b(T)q(T)o(C)10 b FG(\241)g FK(montant)19 b(HT)c FG(\306)f
FK(4,)8 b(95)i FG(\241)g FK(4,)e(50)18 b FG(\306)c FK(0,)8
b(45)19 b FE(N)p FK(.)-246 4902 y FL(N.B.)f FK(Il)e(est)h(totalement)i
(faux)e(de)f(pr)o(endr)o(e)g(10)h(\045)g(de)f(4,)8 b(95)18
b(pour)f(obtenir)g(le)g(montant)h(de)e(la)h(TV)-5 b(A.)18
b(Il)d(faut)j(d)n('abor)o(d)d(se)h(r)o(amener)i(au)e(pr)q(ix)h(HT)-8
b(,)16 b(puis)-246 5001 y(pr)o(endr)o(e)h(10)h(\045)f(de)g(ce)h(pr)q
(ix)f(HT)-8 b(.)-246 5082 y
SDict begin H.S end
 -246 5082 a -246 5082 a
SDict begin 12 H.A end
 -246
5082 a -246 5082 a
SDict begin [/View [/XYZ H.V]/Dest (exo.92) cvn /DEST pdfmark end
 -246 5082 a 0 TeXcolorgray 112 x FL(Ex)o(er)o(cice)
14 b(92)p 0 TeXcolorgray 41 w FK(Le)20 b(tableau)g(ci-dessous)h(tr)o
(aduit)f(l)o('\351volution)i(du)d(SMIC)h(hor)o(air)o(e)f(br)q(ut)g(en)h
(euro)f(entr)o(e)h(2011)h(et)f(2014.)h(Il)e(indique)i(\351galement)g
(les)-246 5294 y(taux)d(d)n('\351volution)h(annuels)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1026 5378 1848 4 v 1026
5478 4 100 v 1256 5448 a(Ann\351e)p 1704 5478 V 280 w(2011)p
1969 5478 V 105 w(2012)p 2234 5478 V 105 w(2013)p 2499
5478 V 158 w(2014)p 2870 5478 V 1026 5481 1848 4 v 1026
5581 4 100 v 1111 5551 a(SMIC)f(hor)-5 b(.)18 b(br)q(ut)p
1704 5581 V 194 w(9)p 1969 5581 V 175 w(9,31)p 2234 5581
V 125 w(9,43)p 2499 5581 V 2870 5581 V 1026 5584 1848
4 v 1026 5684 4 100 v 1079 5654 a(T)-8 b(aux)19 b(d)n('\351volution)p
1704 5684 V 0.5 TeXcolorgray 1707 5684 262 100 v 0 TeXcolorgray
1969 5684 4 100 v 2234 5684 V 2499 5684 V 900 w FG(\305)p
FK(1,)8 b(06\045)p 2870 5684 V 1026 5687 1848 4 v 0 TeXcolorgray
1909 5895 a(57)p 0 TeXcolorgray eop end
%%Page: 58 58
TeXDict begin 58 57 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.58) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FK(P)n(our)17 b(compl\351ter)i(la)e(pr)o
(emi\350r)o(e)h(case)g(\340)f(gauche)o(,)g(on)h(compl\350te)h(le)e
(sch\351ma)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1494 36
2 2 v 1496 37 88 4 v 1584 36 2 2 v 1493 136 4 100 v 1585
136 V 1494 139 2 2 v 1496 140 88 4 v 1584 139 2 2 v 1520
111 a(9)p 1 0 0 TeXcolorrgb 1877 -12 a FH(\243)k FI(?)7
b(?)g(?)p 0 TeXcolorgray 1609 50 4 4 v 1610 49 V 1612
49 V 1614 48 V 1615 47 V 1617 46 V 1618 46 V 1620 45
V 1622 44 V 1623 43 V 1625 43 V 1626 42 V 1628 41 V 1630
41 V 1631 40 V 1633 39 V 1634 38 V 1636 38 V 1638 37
V 1639 36 V 1641 36 V 1643 35 V 1644 34 V 1646 34 V 1647
33 V 1649 32 V 1651 32 V 1652 31 V 1654 30 V 1655 30
V 1657 29 V 1659 28 V 1660 28 V 1662 27 V 1663 26 V 1665
26 V 1667 25 V 1668 24 V 1670 24 V 1671 23 V 1673 23
V 1675 22 V 1676 21 V 1678 21 V 1679 20 V 1681 19 V 1683
19 V 1684 18 V 1686 18 V 1687 17 V 1689 16 V 1691 16
V 1692 15 V 1694 15 V 1695 14 V 1697 14 V 1699 13 V 1700
12 V 1702 12 V 1703 11 V 1705 11 V 1707 10 V 1708 10
V 1710 9 V 1711 9 V 1713 8 V 1715 8 V 1716 7 V 1718 7
V 1719 6 V 1721 6 V 1723 5 V 1724 5 V 1726 4 V 1727 4
V 1729 3 V 1731 3 V 1732 2 V 1734 2 V 1735 1 V 1737 1
V 1739 0 V 1740 0 V 1742 -1 V 1743 -1 V 1745 -2 V 1747
-2 V 1748 -3 V 1750 -3 V 1751 -4 V 1753 -4 V 1755 -4
V 1756 -5 V 1759 -6 V 1763 -7 V 1766 -7 V 1769 -8 V 1772
-9 V 1775 -10 V 1779 -11 V 1782 -11 V 1785 -12 V 1788
-13 V 1791 -14 V 1795 -14 V 1798 -15 V 1801 -16 V 1804
-16 V 1807 -17 V 1811 -17 V 1814 -18 V 1817 -19 V 1820
-19 V 1823 -20 V 1827 -20 V 1830 -21 V 1833 -21 V 1836
-22 V 1839 -22 V 1843 -23 V 1846 -23 V 1849 -24 V 1852
-24 V 1855 -25 V 1859 -25 V 1862 -26 V 1865 -26 V 1868
-26 V 1871 -27 V 1875 -27 V 2239 26 a Fb(\()p Fa(\()p
2022 -27 V 2025 -27 V 2028 -26 V 2032 -26 V 2035 -26
V 2038 -25 V 2041 -25 V 2044 -24 V 2048 -24 V 2051 -23
V 2054 -23 V 2057 -22 V 2060 -22 V 2064 -21 V 2067 -21
V 2070 -20 V 2073 -20 V 2076 -19 V 2080 -19 V 2083 -18
V 2086 -17 V 2089 -17 V 2092 -16 V 2096 -16 V 2099 -15
V 2102 -14 V 2105 -14 V 2108 -13 V 2112 -12 V 2115 -11
V 2118 -11 V 2121 -10 V 2124 -9 V 2128 -8 V 2131 -7 V
2134 -7 V 2137 -6 V 2140 -5 V 2142 -4 V 2144 -4 V 2145
-4 V 2147 -3 V 2148 -3 V 2150 -2 V 2152 -2 V 2153 -1
V 2155 -1 V 2157 0 V 2158 0 V 2160 1 V 2161 1 V 2163
2 V 2165 2 V 2166 3 V 2168 3 V 2169 4 V 2171 4 V 2173
5 V 2174 5 V 2176 6 V 2177 6 V 2179 7 V 2181 7 V 2182
8 V 2184 8 V 2185 9 V 2187 9 V 2189 10 V 2190 10 V 2192
11 V 2193 11 V 2195 12 V 2197 12 V 2198 13 V 2200 14
V 2201 14 V 2203 15 V 2205 15 V 2206 16 V 2208 16 V 2209
17 V 2211 18 V 2213 18 V 2214 19 V 2216 19 V 2217 20
V 2219 21 V 2221 21 V 2222 22 V 2224 23 V 2225 23 V 2227
24 V 2229 24 V 2230 25 V 2232 26 V 2233 26 V 2235 27
V 2237 28 V 2263 31 2 2 v 2265 32 189 4 v 2454 31 2 2
v 2262 142 4 111 v 2456 142 V 2263 145 2 2 v 2265 146
189 4 v 2454 145 2 2 v 2289 106 a FK(9,31)p 0 0 1 TeXcolorrgb
1354 317 a(SMIC)18 b(2011)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
450 w(SMIC)g(2012)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
-237 540 a(?)9 b(?)g(?)p 0 TeXcolorgray 12 w FG(\306)15
b FK(9,)8 b(31)i FG(\245)g FK(9)17 b FG(\274)d FK(1,)8
b(0344)17 b FG(\306)d FK(103,)8 b(44)20 b(\045,)e(ce)f(qui)h(tr)o
(aduit)g(une)g(augmentation)h(de)e(3,)8 b(44)19 b(\045)e(environ.)-246
640 y(A)-5 b(vec)28 b(la)g(m\352me)g(m\351thode)o(,)h(on)f(compl\350te)
h(la)f(deuxi\350me)h(case)o(.)e(En\002n,)h(pour)g(la)f(case)h(en)g
(haut)g(\340)g(droite)o(,)f(sachant)h(que)g(100)h(\045)14
b FG(\305)g FK(1,)8 b(06)29 b(\045)c FG(\306)-246 740
y FK(101,)8 b(06)20 b(\045)15 b FG(\306)f FK(1,)8 b(0106,)20
b(on)e(utilise)h(le)f(sch\351ma)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1443 928 V 1445 929 189 4 v 1634 928 2
2 v 1443 1039 4 111 v 1636 1039 V 1443 1042 2 2 v 1445
1043 189 4 v 1634 1042 2 2 v 1469 1003 a(9,43)p 1 0 0
TeXcolorrgb 1833 880 a FH(\243)f FI(1,010)6 b(6)p 0 TeXcolorgray
1660 925 4 4 v 1662 924 V 1663 923 V 1665 923 V 1667
922 V 1668 921 V 1670 921 V 1671 920 V 1673 920 V 1675
919 V 1676 918 V 1678 918 V 1679 917 V 1681 916 V 1683
916 V 1684 915 V 1686 915 V 1687 914 V 1689 913 V 1691
913 V 1692 912 V 1694 912 V 1695 911 V 1697 911 V 1699
910 V 1700 909 V 1702 909 V 1703 908 V 1705 908 V 1707
907 V 1708 907 V 1710 906 V 1711 906 V 1713 905 V 1715
905 V 1716 904 V 1718 904 V 1719 903 V 1721 903 V 1723
902 V 1724 902 V 1726 901 V 1727 901 V 1729 900 V 1731
900 V 1732 899 V 1734 899 V 1735 898 V 1737 898 V 1739
897 V 1740 897 V 1742 896 V 1743 896 V 1745 895 V 1747
895 V 1748 894 V 1750 894 V 1751 893 V 1753 893 V 1755
893 V 1756 892 V 1759 891 V 1763 890 V 1766 890 V 1769
889 V 1772 888 V 1775 887 V 1779 886 V 1782 886 V 1785
885 V 1788 884 V 1791 884 V 1795 883 V 1798 882 V 1801
881 V 1804 881 V 1807 880 V 1811 880 V 1814 879 V 1817
878 V 1820 878 V 1823 877 V 1827 877 V 1830 876 V 2253
929 a Fb(\()p Fa(\()p 2067 876 V 2070 877 V 2073 877
V 2076 878 V 2080 878 V 2083 879 V 2086 880 V 2089 880
V 2092 881 V 2096 881 V 2099 882 V 2102 883 V 2105 884
V 2108 884 V 2112 885 V 2115 886 V 2118 886 V 2121 887
V 2124 888 V 2128 889 V 2131 890 V 2134 890 V 2137 891
V 2140 892 V 2142 893 V 2144 893 V 2145 893 V 2147 894
V 2148 894 V 2150 895 V 2152 895 V 2153 896 V 2155 896
V 2157 897 V 2158 897 V 2160 898 V 2161 898 V 2163 899
V 2165 899 V 2166 900 V 2168 900 V 2169 901 V 2171 901
V 2173 902 V 2174 902 V 2176 903 V 2177 903 V 2179 904
V 2181 904 V 2182 905 V 2184 905 V 2185 906 V 2187 906
V 2189 907 V 2190 907 V 2192 908 V 2193 908 V 2195 909
V 2197 909 V 2198 910 V 2200 911 V 2201 911 V 2203 912
V 2205 912 V 2206 913 V 2208 913 V 2209 914 V 2211 915
V 2213 915 V 2214 916 V 2216 916 V 2217 917 V 2219 918
V 2221 918 V 2222 919 V 2224 920 V 2225 920 V 2227 921
V 2229 921 V 2230 922 V 2232 923 V 2233 923 V 2235 924
V 2237 925 V 2238 925 V 2240 926 V 2241 927 V 2243 927
V 2245 928 V 2246 929 V 2248 929 V 2249 930 V 2251 931
V 2277 932 2 2 v 2278 933 162 4 v 2440 932 2 2 v 2276
1035 4 103 v 2442 1035 V 2277 1038 2 2 v 2278 1039 162
4 v 2440 1038 2 2 v 2311 1009 a FK(?)j(?)g(?)p 0 0 1
TeXcolorrgb 1354 1214 a(SMIC)18 b(2013)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 450 w(SMIC)g(2014)p 0 TeXcolorgray
-246 1437 a(On)g(obtient)g(\002nalement)g(le)g(tableau)g(:)p
0 TeXcolorgray 0 TeXcolorgray 908 1533 2085 4 v 908 1632
4 100 v 1138 1603 a(Ann\351e)p 1585 1632 V 279 w(2011)p
1850 1632 V 167 w(2012)p 2239 1632 V 224 w(2013)p 2617
1632 V 214 w(2014)p 2989 1632 V 908 1636 2085 4 v 908
1735 4 100 v 993 1706 a(SMIC)f(hor)-5 b(.)18 b(br)q(ut)p
1585 1735 V 195 w(9)p 1850 1735 V 237 w(9,31)p 2239 1735
V 243 w(9,43)p 2617 1735 V 235 w(9,53)p 2989 1735 V 908
1739 2085 4 v 908 1838 4 100 v 961 1808 a(T)-8 b(aux)18
b(d)n('\351volution)p 1585 1838 V 0.5 TeXcolorgray 1588
1838 262 100 v 0 TeXcolorgray 1850 1838 4 100 v 370 w
FG(\305)p FK(3,)8 b(44)19 b(\045)p 2239 1838 V 103 w(+1,)8
b(29)19 b(\045)p 2617 1838 V 103 w FG(\305)p FK(1,)8
b(06\045)p 2989 1838 V 908 1842 2085 4 v -246 1924 a
SDict begin H.S end

-246 1924 a -246 1924 a
SDict begin 12 H.A end
 -246 1924 a -246 1924 a
SDict begin [/View [/XYZ H.V]/Dest (exo.93) cvn /DEST pdfmark end
 -246
1924 a 0 TeXcolorgray 82 x FL(Ex)o(er)o(cice)14 b(93)p
0 TeXcolorgray 41 w FK(En)24 b(2016,)h(un)f(ar)q(ticle)f(est)h
(af\002ch\351)f(en)h(magasin)g(\340)f(70)h FE(N)p FK(.)f(Il)f(y)h(a)g
(une)h(hausse)g(de)f(60)i(\045)e(des)g(pr)q(ix)g(entr)o(e)g(2016)j(et)d
(2017,)i(puis)g(une)-246 2106 y(baisse)18 b(de)f(10)i(\045)e(entr)o(e)g
(2017)i(et)f(2018.)-246 2122 y
SDict begin H.S end
 -246 2122 a -246 2122
a
SDict begin 12 H.A end
 -246 2122 a -246 2122 a
SDict begin [/View [/XYZ H.V]/Dest (Item.288) cvn /DEST pdfmark end
 -246 2122 a 0 TeXcolorgray
-141 2235 a FK(1.)p 0 TeXcolorgray 43 w(100)h(\045)10
b FG(\305)g FK(60)18 b(\045)c FG(\306)g FK(160)19 b(\045)14
b FG(\306)h FK(1,)8 b(60)19 b(et)e(100)i(\045)10 b FG(\241)g
FK(10)19 b(\045)14 b FG(\306)g FK(90)k(\045)c FG(\306)h
FK(0,)8 b(90,)19 b(d)n('o\371)f(le)f(sch\351ma)i(:)p
0 TeXcolorgray 0 TeXcolorgray 1324 2404 2 2 v 1325 2405
128 4 v 1453 2404 2 2 v 1323 2504 4 100 v 1455 2504 V
1324 2507 2 2 v 1325 2508 128 4 v 1453 2507 2 2 v 1349
2479 a(70)p 1 0 0 TeXcolorrgb 1647 2350 a FH(\243)p FI(1,60)p
0 TeXcolorgray 1479 2399 4 4 v 1481 2398 V 1484 2396
V 1487 2395 V 1489 2394 V 1492 2393 V 1494 2391 V 1497
2390 V 1500 2389 V 1502 2388 V 1505 2386 V 1507 2385
V 1510 2384 V 1513 2383 V 1515 2382 V 1518 2381 V 1520
2380 V 1523 2378 V 1526 2377 V 1528 2376 V 1531 2375
V 1533 2374 V 1536 2373 V 1539 2372 V 1541 2371 V 1544
2370 V 1546 2369 V 1549 2368 V 1552 2367 V 1554 2366
V 1557 2365 V 1559 2365 V 1562 2364 V 1564 2363 V 1567
2362 V 1570 2361 V 1572 2360 V 1575 2359 V 1577 2359
V 1580 2358 V 1583 2357 V 1585 2356 V 1588 2356 V 1590
2355 V 1593 2354 V 1596 2353 V 1598 2353 V 1601 2352
V 1603 2351 V 1606 2351 V 1609 2350 V 1611 2350 V 1614
2349 V 1616 2348 V 1619 2348 V 1622 2347 V 1624 2347
V 1627 2346 V 1629 2346 V 1632 2345 V 1635 2345 V 1637
2344 V 1640 2344 V 1642 2343 V 1645 2343 V 1943 2388
a Fb(')p Fa(')p 1795 2343 V 1798 2343 V 1801 2344 V 1803
2344 V 1806 2345 V 1808 2345 V 1811 2346 V 1813 2346
V 1816 2347 V 1819 2347 V 1821 2348 V 1824 2348 V 1826
2349 V 1829 2350 V 1832 2350 V 1834 2351 V 1837 2351
V 1839 2352 V 1842 2353 V 1845 2353 V 1847 2354 V 1850
2355 V 1852 2356 V 1855 2356 V 1858 2357 V 1860 2358
V 1863 2359 V 1865 2359 V 1868 2360 V 1871 2361 V 1873
2362 V 1876 2363 V 1878 2364 V 1881 2365 V 1884 2365
V 1886 2366 V 1889 2367 V 1891 2368 V 1894 2369 V 1896
2370 V 1899 2371 V 1902 2372 V 1904 2373 V 1907 2374
V 1909 2375 V 1912 2376 V 1915 2377 V 1917 2378 V 1920
2380 V 1922 2381 V 1925 2382 V 1928 2383 V 1930 2384
V 1933 2385 V 1935 2386 V 1938 2388 V 1941 2389 V 1967
2404 2 2 v 1969 2405 169 4 v 2138 2404 2 2 v 1966 2504
4 100 v 2139 2504 V 1967 2507 2 2 v 1969 2508 169 4 v
2138 2507 2 2 v 0 1 0 TeXcolorrgb 1993 2479 a FK(112)p
0 TeXcolorgray 1 0 0 TeXcolorrgb 2311 2350 a FH(\243)p
FI(0,90)p 0 TeXcolorgray 2164 2389 4 4 v 2166 2388 V
2169 2386 V 2171 2385 V 2174 2384 V 2177 2383 V 2179
2382 V 2182 2381 V 2184 2380 V 2187 2378 V 2190 2377
V 2192 2376 V 2195 2375 V 2197 2374 V 2200 2373 V 2203
2372 V 2205 2371 V 2208 2370 V 2210 2369 V 2213 2368
V 2216 2367 V 2218 2366 V 2221 2365 V 2223 2365 V 2226
2364 V 2228 2363 V 2231 2362 V 2234 2361 V 2236 2360
V 2239 2359 V 2241 2359 V 2244 2358 V 2247 2357 V 2249
2356 V 2252 2356 V 2254 2355 V 2257 2354 V 2260 2353
V 2262 2353 V 2265 2352 V 2267 2351 V 2270 2351 V 2273
2350 V 2275 2350 V 2278 2349 V 2280 2348 V 2283 2348
V 2286 2347 V 2288 2347 V 2291 2346 V 2293 2346 V 2296
2345 V 2299 2345 V 2301 2344 V 2304 2344 V 2306 2343
V 2309 2343 V 2577 2374 a Fb(\()p Fa(\()p 2459 2343 V
2462 2343 V 2465 2344 V 2467 2344 V 2470 2345 V 2472
2345 V 2475 2346 V 2477 2346 V 2480 2347 V 2483 2347
V 2485 2348 V 2488 2348 V 2490 2349 V 2493 2350 V 2496
2350 V 2498 2351 V 2501 2351 V 2503 2352 V 2506 2353
V 2509 2353 V 2511 2354 V 2514 2355 V 2516 2356 V 2519
2356 V 2522 2357 V 2524 2358 V 2527 2359 V 2529 2359
V 2532 2360 V 2535 2361 V 2537 2362 V 2540 2363 V 2542
2364 V 2545 2365 V 2548 2365 V 2550 2366 V 2553 2367
V 2555 2368 V 2558 2369 V 2560 2370 V 2563 2371 V 2566
2372 V 2568 2373 V 2571 2374 V 2573 2375 V 2601 2398
2 2 v 2603 2399 229 4 v 2832 2398 2 2 v 2600 2509 4 111
v 2834 2509 V 2601 2512 2 2 v 2603 2513 229 4 v 2832
2512 2 2 v 0 1 0 TeXcolorrgb 2627 2474 a FK(100,8)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 1232 2684 a(pr)q(ix)e(2016)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 351 w(pr)q(ix)g(2017)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 351 w(pr)q(ix)g(2018)p
0 TeXcolorgray -38 2899 a FL(N.B.)i FK(On)e(obtient)h(les)g(pr)q(ix)f
(2017)i(et)f(2018)h(en)f(faisant)g(les)h(calculs)f(:)1774
3081 y(70)10 b FG(\243)g FK(1,)e(60)17 b FG(\306)d FK(112,)1733
3206 y(112)c FG(\243)g FK(0,)e(90)18 b FG(\306)c FK(100,)8
b(8.)-246 3318 y
SDict begin H.S end
 -246 3318 a -246 3318 a
SDict begin 12 H.A end
 -246 3318 a
-246 3318 a
SDict begin [/View [/XYZ H.V]/Dest (Item.289) cvn /DEST pdfmark end
 -246 3318 a 0 TeXcolorgray -141 3402 a FK(2.)p
0 TeXcolorgray 43 w(P)n(our)17 b(calculer)h(le)f(taux)h(d)n
('\351volution)h(global)f(entr)o(e)f(2016)i(et)f(2018,)h(on)f
(compl\350te)h(le)f(sch\351ma)g(:)p 0 TeXcolorgray 0
TeXcolorgray 1606 3576 2 2 v 1607 3577 128 4 v 1735 3576
2 2 v 1605 3677 4 100 v 1737 3677 V 1606 3680 2 2 v 1607
3681 128 4 v 1735 3680 2 2 v 1631 3652 a(70)p 1 0 0 TeXcolorrgb
1973 3528 a FH(\243)f FI(?)g(?)g(?)p 0 TeXcolorgray 1763
3577 4 4 v 1766 3576 V 1769 3575 V 1772 3573 V 1775 3572
V 1778 3571 V 1781 3569 V 1784 3568 V 1787 3567 V 1790
3565 V 1793 3564 V 1796 3563 V 1799 3562 V 1802 3560
V 1805 3559 V 1808 3558 V 1810 3557 V 1813 3556 V 1816
3555 V 1819 3553 V 1822 3552 V 1825 3551 V 1828 3550
V 1831 3549 V 1834 3548 V 1837 3547 V 1840 3546 V 1843
3545 V 1846 3544 V 1849 3543 V 1852 3542 V 1855 3541
V 1858 3540 V 1861 3539 V 1864 3538 V 1867 3537 V 1870
3536 V 1873 3536 V 1876 3535 V 1879 3534 V 1882 3533
V 1885 3532 V 1888 3531 V 1891 3531 V 1894 3530 V 1897
3529 V 1900 3528 V 1903 3528 V 1906 3527 V 1909 3526
V 1912 3525 V 1915 3525 V 1918 3524 V 1921 3524 V 1924
3523 V 1927 3522 V 1930 3522 V 1933 3521 V 1936 3521
V 1939 3520 V 1942 3519 V 1945 3519 V 1948 3518 V 1951
3518 V 1954 3517 V 1957 3517 V 1960 3516 V 1963 3516
V 1966 3516 V 1969 3515 V 2295 3555 a Fb(\))p Fa(\))p
2136 3515 V 2139 3516 V 2142 3516 V 2145 3516 V 2148
3517 V 2151 3517 V 2154 3518 V 2157 3518 V 2160 3519
V 2162 3519 V 2165 3520 V 2168 3521 V 2171 3521 V 2174
3522 V 2177 3522 V 2180 3523 V 2183 3524 V 2186 3524
V 2189 3525 V 2192 3525 V 2195 3526 V 2198 3527 V 2201
3528 V 2204 3528 V 2207 3529 V 2210 3530 V 2213 3531
V 2216 3531 V 2219 3532 V 2222 3533 V 2225 3534 V 2228
3535 V 2231 3536 V 2234 3536 V 2237 3537 V 2240 3538
V 2243 3539 V 2246 3540 V 2249 3541 V 2252 3542 V 2255
3543 V 2258 3544 V 2261 3545 V 2264 3546 V 2267 3547
V 2270 3548 V 2273 3549 V 2276 3550 V 2279 3551 V 2282
3552 V 2285 3553 V 2288 3555 V 2291 3556 V 2319 3571
2 2 v 2320 3572 229 4 v 2549 3571 2 2 v 2318 3682 4 111
v 2552 3682 V 2319 3685 2 2 v 2320 3686 229 4 v 2549
3685 2 2 v 2344 3647 a FK(100,8)p 0 0 1 TeXcolorrgb 1514
3857 a(pr)q(ix)h(2016)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
450 w(pr)q(ix)f(2018)p 0 TeXcolorgray -38 4072 a(100,)8
b(8)i FG(\245)g FK(70)18 b FG(\306)c FK(1,)8 b(44)16
b FG(\306)e FK(144)19 b(\045,)e(donc)g(le)h(taux)g(d)n('\351volution)h
(des)f(pr)q(ix)f(entr)o(e)g(2016)j(et)d(2018)j(est)e
FG(\305)p FK(44)g(\045)-38 4236 y FL(N.B.)h FK(On)e(peut)h(obtenir)g
(la)f(r\351ponse)i(plus)f(r)o(apidement)h(en)f(faisant)g(le)g(calcul)g
(1,)8 b(60)i FG(\243)g FK(0,)e(90)18 b FG(\306)c FK(1,)8
b(44.)-246 4319 y
SDict begin H.S end
 -246 4319 a -246 4319 a
SDict begin 12 H.A end
 -246 4319 a
-246 4319 a
SDict begin [/View [/XYZ H.V]/Dest (exo.94) cvn /DEST pdfmark end
 -246 4319 a -246 4337 a
SDict begin H.S end
 -246 4337 a -246
4337 a
SDict begin 12 H.A end
 -246 4337 a -246 4337 a
SDict begin [/View [/XYZ H.V]/Dest (Item.290) cvn /DEST pdfmark end
 -246 4337 a 0 TeXcolorgray
97 x FL(Ex)o(er)o(cice)14 b(94)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(P)m(ar)q(tons)26 b(de)h(la)f(valeur)h
(100)h(et)f(faisons)h(le)f(sch\351ma)g(habituel,)h(sachant)f(qu)n('une)
h(hausse)g(de)e(16)h(\045)g(r)o(evient)g(\340)f(fair)o(e)h(une)-38
4534 y(multiplication)20 b(par)e(1,16)h(:)p 0 TeXcolorgray
0 TeXcolorgray 924 4709 2 2 v 926 4710 169 4 v 1095 4709
2 2 v 924 4810 4 100 v 1097 4810 V 924 4813 2 2 v 926
4814 169 4 v 1095 4813 2 2 v 950 4785 a(100)p 1 0 0 TeXcolorrgb
1362 4656 a FH(\243)p FI(1,16)p 0 TeXcolorgray 1121 4707
4 4 v 1122 4706 V 1124 4706 V 1126 4705 V 1127 4704 V
1129 4704 V 1131 4703 V 1132 4702 V 1134 4702 V 1136
4701 V 1137 4700 V 1139 4700 V 1141 4699 V 1142 4698
V 1144 4698 V 1146 4697 V 1147 4697 V 1149 4696 V 1151
4695 V 1152 4695 V 1154 4694 V 1156 4693 V 1157 4693
V 1159 4692 V 1161 4692 V 1162 4691 V 1164 4690 V 1166
4690 V 1167 4689 V 1169 4689 V 1171 4688 V 1172 4688
V 1174 4687 V 1176 4686 V 1177 4686 V 1179 4685 V 1181
4685 V 1182 4684 V 1184 4684 V 1186 4683 V 1187 4683
V 1189 4682 V 1191 4682 V 1192 4681 V 1194 4680 V 1196
4680 V 1197 4679 V 1199 4679 V 1201 4678 V 1202 4678
V 1204 4677 V 1206 4677 V 1207 4676 V 1209 4676 V 1211
4675 V 1212 4675 V 1214 4674 V 1216 4674 V 1217 4674
V 1219 4673 V 1221 4673 V 1222 4672 V 1224 4672 V 1226
4671 V 1227 4671 V 1229 4670 V 1231 4670 V 1232 4669
V 1234 4669 V 1236 4669 V 1237 4668 V 1239 4668 V 1241
4667 V 1242 4667 V 1244 4666 V 1246 4666 V 1247 4666
V 1249 4665 V 1251 4665 V 1252 4664 V 1254 4664 V 1256
4664 V 1257 4663 V 1259 4663 V 1261 4662 V 1262 4662
V 1264 4662 V 1266 4661 V 1267 4661 V 1269 4661 V 1271
4660 V 1272 4660 V 1274 4660 V 1276 4659 V 1277 4659
V 1279 4659 V 1281 4658 V 1282 4658 V 1284 4658 V 1286
4657 V 1287 4657 V 1289 4657 V 1291 4656 V 1292 4656
V 1294 4656 V 1296 4655 V 1297 4655 V 1299 4655 V 1301
4654 V 1302 4654 V 1304 4654 V 1306 4654 V 1307 4653
V 1309 4653 V 1311 4653 V 1312 4652 V 1314 4652 V 1316
4652 V 1317 4652 V 1319 4651 V 1321 4651 V 1322 4651
V 1324 4651 V 1326 4650 V 1327 4650 V 1329 4650 V 1331
4650 V 1332 4650 V 1334 4649 V 1336 4649 V 1337 4649
V 1339 4649 V 1341 4648 V 1342 4648 V 1344 4648 V 1346
4648 V 1347 4648 V 1349 4647 V 1351 4647 V 1352 4647
V 1354 4647 V 1356 4647 V 1357 4647 V 1359 4646 V 1361
4646 V 1753 4706 a Fb(\()p Fa(\()p 1511 4646 V 1512 4646
V 1514 4647 V 1516 4647 V 1517 4647 V 1519 4647 V 1521
4647 V 1522 4647 V 1524 4648 V 1526 4648 V 1527 4648
V 1529 4648 V 1531 4648 V 1532 4649 V 1534 4649 V 1536
4649 V 1537 4649 V 1539 4650 V 1541 4650 V 1542 4650
V 1544 4650 V 1546 4650 V 1547 4651 V 1549 4651 V 1551
4651 V 1552 4651 V 1554 4652 V 1556 4652 V 1557 4652
V 1559 4652 V 1561 4653 V 1562 4653 V 1564 4653 V 1566
4654 V 1567 4654 V 1569 4654 V 1571 4654 V 1572 4655
V 1574 4655 V 1576 4655 V 1577 4656 V 1579 4656 V 1581
4656 V 1582 4657 V 1584 4657 V 1586 4657 V 1587 4658
V 1589 4658 V 1591 4658 V 1592 4659 V 1594 4659 V 1595
4659 V 1597 4660 V 1599 4660 V 1600 4660 V 1602 4661
V 1604 4661 V 1605 4661 V 1607 4662 V 1609 4662 V 1610
4662 V 1612 4663 V 1614 4663 V 1615 4664 V 1617 4664
V 1619 4664 V 1620 4665 V 1622 4665 V 1624 4666 V 1625
4666 V 1627 4666 V 1629 4667 V 1630 4667 V 1632 4668
V 1634 4668 V 1635 4669 V 1637 4669 V 1639 4669 V 1640
4670 V 1642 4670 V 1644 4671 V 1645 4671 V 1647 4672
V 1649 4672 V 1650 4673 V 1652 4673 V 1654 4674 V 1655
4674 V 1657 4674 V 1659 4675 V 1660 4675 V 1662 4676
V 1664 4676 V 1665 4677 V 1667 4677 V 1669 4678 V 1670
4678 V 1672 4679 V 1674 4679 V 1675 4680 V 1677 4680
V 1679 4681 V 1680 4682 V 1682 4682 V 1684 4683 V 1685
4683 V 1687 4684 V 1689 4684 V 1690 4685 V 1692 4685
V 1694 4686 V 1695 4686 V 1697 4687 V 1699 4688 V 1700
4688 V 1702 4689 V 1704 4689 V 1705 4690 V 1707 4690
V 1709 4691 V 1710 4692 V 1712 4692 V 1714 4693 V 1715
4693 V 1717 4694 V 1719 4695 V 1720 4695 V 1722 4696
V 1724 4697 V 1725 4697 V 1727 4698 V 1729 4698 V 1730
4699 V 1732 4700 V 1734 4700 V 1735 4701 V 1737 4702
V 1739 4702 V 1740 4703 V 1742 4704 V 1744 4704 V 1745
4705 V 1747 4706 V 1749 4706 V 1750 4707 V 1777 4709
2 2 v 1779 4710 169 4 v 1948 4709 2 2 v 1776 4810 4 100
v 1949 4810 V 1777 4813 2 2 v 1779 4814 169 4 v 1948
4813 2 2 v 1803 4785 a FK(116)p 1 0 0 TeXcolorrgb 2330
4661 a FH(\243)p FI(???)p 0 TeXcolorgray 1974 4715 4
4 v 1976 4715 V 1978 4714 V 1980 4713 V 1982 4713 V 1984
4712 V 1986 4711 V 1988 4710 V 1990 4710 V 1992 4709
V 1994 4708 V 1996 4708 V 1998 4707 V 2001 4706 V 2003
4706 V 2005 4705 V 2007 4704 V 2009 4704 V 2011 4703
V 2013 4702 V 2015 4702 V 2017 4701 V 2019 4700 V 2021
4700 V 2023 4699 V 2025 4698 V 2027 4698 V 2029 4697
V 2031 4697 V 2033 4696 V 2035 4695 V 2037 4695 V 2039
4694 V 2041 4693 V 2043 4693 V 2045 4692 V 2047 4692
V 2049 4691 V 2051 4690 V 2053 4690 V 2056 4689 V 2058
4689 V 2060 4688 V 2062 4688 V 2064 4687 V 2066 4686
V 2068 4686 V 2070 4685 V 2072 4685 V 2074 4684 V 2076
4684 V 2078 4683 V 2080 4683 V 2082 4682 V 2084 4682
V 2086 4681 V 2088 4680 V 2090 4680 V 2092 4679 V 2094
4679 V 2096 4678 V 2098 4678 V 2100 4677 V 2102 4677
V 2104 4676 V 2106 4676 V 2108 4675 V 2111 4675 V 2113
4674 V 2115 4674 V 2117 4674 V 2119 4673 V 2121 4673
V 2123 4672 V 2125 4672 V 2127 4671 V 2129 4671 V 2131
4670 V 2133 4670 V 2135 4669 V 2137 4669 V 2139 4669
V 2141 4668 V 2143 4668 V 2145 4667 V 2147 4667 V 2149
4666 V 2151 4666 V 2153 4666 V 2155 4665 V 2157 4665
V 2159 4664 V 2161 4664 V 2163 4664 V 2166 4663 V 2168
4663 V 2170 4662 V 2172 4662 V 2174 4662 V 2176 4661
V 2178 4661 V 2180 4661 V 2182 4660 V 2184 4660 V 2186
4660 V 2188 4659 V 2190 4659 V 2192 4659 V 2194 4658
V 2196 4658 V 2198 4658 V 2200 4657 V 2202 4657 V 2204
4657 V 2206 4656 V 2208 4656 V 2210 4656 V 2212 4655
V 2214 4655 V 2216 4655 V 2218 4654 V 2221 4654 V 2223
4654 V 2225 4654 V 2227 4653 V 2229 4653 V 2231 4653
V 2233 4652 V 2235 4652 V 2237 4652 V 2239 4652 V 2241
4651 V 2243 4651 V 2245 4651 V 2247 4651 V 2249 4650
V 2251 4650 V 2253 4650 V 2255 4650 V 2257 4650 V 2259
4649 V 2261 4649 V 2263 4649 V 2265 4649 V 2267 4648
V 2269 4648 V 2271 4648 V 2273 4648 V 2275 4648 V 2278
4647 V 2280 4647 V 2282 4647 V 2284 4647 V 2286 4647
V 2288 4647 V 2290 4646 V 2292 4646 V 2294 4646 V 2296
4646 V 2298 4646 V 2300 4646 V 2302 4645 V 2304 4645
V 2306 4645 V 2308 4645 V 2310 4645 V 2312 4645 V 2314
4645 V 2316 4645 V 2318 4644 V 2320 4644 V 2322 4644
V 2324 4644 V 2326 4644 V 2328 4644 V 2796 4714 a Fb(\))p
Fa(\))p 2438 4644 V 2440 4644 V 2443 4644 V 2445 4644
V 2447 4644 V 2449 4644 V 2451 4645 V 2453 4645 V 2455
4645 V 2457 4645 V 2459 4645 V 2461 4645 V 2463 4645
V 2465 4645 V 2467 4646 V 2469 4646 V 2471 4646 V 2473
4646 V 2475 4646 V 2477 4646 V 2479 4647 V 2481 4647
V 2483 4647 V 2485 4647 V 2487 4647 V 2489 4647 V 2491
4648 V 2493 4648 V 2495 4648 V 2498 4648 V 2500 4648
V 2502 4649 V 2504 4649 V 2506 4649 V 2508 4649 V 2510
4650 V 2512 4650 V 2514 4650 V 2516 4650 V 2518 4650
V 2520 4651 V 2522 4651 V 2524 4651 V 2526 4651 V 2528
4652 V 2530 4652 V 2532 4652 V 2534 4652 V 2536 4653
V 2538 4653 V 2540 4653 V 2542 4654 V 2544 4654 V 2546
4654 V 2548 4654 V 2550 4655 V 2553 4655 V 2555 4655
V 2557 4656 V 2559 4656 V 2561 4656 V 2563 4657 V 2565
4657 V 2567 4657 V 2569 4658 V 2571 4658 V 2573 4658
V 2575 4659 V 2577 4659 V 2579 4659 V 2581 4660 V 2583
4660 V 2585 4660 V 2587 4661 V 2589 4661 V 2591 4661
V 2593 4662 V 2595 4662 V 2597 4662 V 2599 4663 V 2601
4663 V 2603 4664 V 2605 4664 V 2608 4664 V 2610 4665
V 2612 4665 V 2614 4666 V 2616 4666 V 2618 4666 V 2620
4667 V 2622 4667 V 2624 4668 V 2626 4668 V 2628 4669
V 2630 4669 V 2632 4669 V 2634 4670 V 2636 4670 V 2638
4671 V 2640 4671 V 2642 4672 V 2644 4672 V 2646 4673
V 2648 4673 V 2650 4674 V 2652 4674 V 2654 4674 V 2656
4675 V 2658 4675 V 2660 4676 V 2663 4676 V 2665 4677
V 2667 4677 V 2669 4678 V 2671 4678 V 2673 4679 V 2675
4679 V 2677 4680 V 2679 4680 V 2681 4681 V 2683 4682
V 2685 4682 V 2687 4683 V 2689 4683 V 2691 4684 V 2693
4684 V 2695 4685 V 2697 4685 V 2699 4686 V 2701 4686
V 2703 4687 V 2705 4688 V 2707 4688 V 2709 4689 V 2711
4689 V 2713 4690 V 2715 4690 V 2718 4691 V 2720 4692
V 2722 4692 V 2724 4693 V 2726 4693 V 2728 4694 V 2730
4695 V 2732 4695 V 2734 4696 V 2736 4697 V 2738 4697
V 2740 4698 V 2742 4698 V 2744 4699 V 2746 4700 V 2748
4700 V 2750 4701 V 2752 4702 V 2754 4702 V 2756 4703
V 2758 4704 V 2760 4704 V 2762 4705 V 2764 4706 V 2766
4706 V 2768 4707 V 2770 4708 V 2773 4708 V 2775 4709
V 2777 4710 V 2779 4710 V 2781 4711 V 2783 4712 V 2785
4713 V 2787 4713 V 2789 4714 V 2791 4715 V 2793 4715
V 2820 4709 2 2 v 2822 4710 169 4 v 2991 4709 2 2 v 2819
4810 4 100 v 2992 4810 V 2820 4813 2 2 v 2822 4814 169
4 v 2991 4813 2 2 v 2846 4785 a FK(100)p 0 0 1 TeXcolorrgb
772 4996 a(V)-5 b(aleur)18 b(initiale)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1599 4988 a(A)o(pr\350s)f(la)g(hausse)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2477 4996 a(R)o(etour)h(\340)f(la)g
(valeur)h(initiale)p 0 TeXcolorgray -38 5153 a(P)n(our)f(d\351ter)q
(miner)h(le)f(deuxi\350me)i(taux)f(d)n('\351volution,)h(on)f(calcule)g
(:)p 1 0 0 TeXcolorrgb 1464 5335 a(???)p 0 TeXcolorgray
13 w FG(\306)c FK(100)c FG(\245)g FK(116)18 b FG(\274)c
FK(0,)8 b(8621)17 b FG(\306)d FK(86,)8 b(21)20 b(\045.)-38
5517 y(Or)d(100)i(\045)10 b FG(\241)g FK(86,)e(21)20
b(\045)14 b FG(\306)g FK(13,)8 b(79)20 b(\045,)d(donc)g(la)h(hausse)g
(de)f(16)h(\045)g(est)g(compens\351e)h(par)e(une)h(baisse)g(de)f(13,79)
j(\045)d(environ.)-246 5549 y
SDict begin H.S end
 -246 5549 a -246 5549 a
SDict begin 12 H.A end

-246 5549 a -246 5549 a
SDict begin [/View [/XYZ H.V]/Dest (Item.291) cvn /DEST pdfmark end
 -246 5549 a 0 TeXcolorgray -141
5646 a FK(2.)p 0 TeXcolorgray 43 w(On)g(fait)h(encor)o(e)f(le)h
(m\352me)h(sch\351ma,)f(sachant)g(que)g(100)h(\045)10
b FG(\241)g FK(36)18 b(\045)d FG(\306)f FK(64)k(\045)c
FG(\306)g FK(0,)8 b(64)34 b(:)p 0 TeXcolorgray 1909 5895
a(58)p 0 TeXcolorgray eop end
%%Page: 59 59
TeXDict begin 59 58 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.59) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 937 -154
2 2 v 938 -153 169 4 v 1107 -154 2 2 v 936 -53 4 100
v 1109 -53 V 937 -50 2 2 v 938 -49 169 4 v 1107 -50 2
2 v 962 -79 a FK(100)p 1 0 0 TeXcolorrgb 1369 -207 a
FH(\243)p FI(0,64)p 0 TeXcolorgray 1133 -157 4 4 v 1135
-157 V 1136 -158 V 1138 -159 V 1140 -159 V 1141 -160
V 1143 -161 V 1145 -161 V 1146 -162 V 1148 -163 V 1150
-163 V 1151 -164 V 1153 -165 V 1155 -165 V 1156 -166
V 1158 -167 V 1159 -167 V 1161 -168 V 1163 -168 V 1164
-169 V 1166 -170 V 1168 -170 V 1169 -171 V 1171 -171
V 1173 -172 V 1174 -173 V 1176 -173 V 1178 -174 V 1179
-174 V 1181 -175 V 1182 -175 V 1184 -176 V 1186 -177
V 1187 -177 V 1189 -178 V 1191 -178 V 1192 -179 V 1194
-179 V 1196 -180 V 1197 -180 V 1199 -181 V 1200 -182
V 1202 -182 V 1204 -183 V 1205 -183 V 1207 -184 V 1209
-184 V 1210 -185 V 1212 -185 V 1214 -186 V 1215 -186
V 1217 -187 V 1219 -187 V 1220 -188 V 1222 -188 V 1223
-189 V 1225 -189 V 1227 -190 V 1228 -190 V 1230 -190
V 1232 -191 V 1233 -191 V 1235 -192 V 1237 -192 V 1238
-193 V 1240 -193 V 1242 -194 V 1243 -194 V 1245 -195
V 1246 -195 V 1248 -195 V 1250 -196 V 1251 -196 V 1253
-197 V 1255 -197 V 1256 -197 V 1258 -198 V 1260 -198
V 1261 -199 V 1263 -199 V 1265 -199 V 1266 -200 V 1268
-200 V 1269 -201 V 1271 -201 V 1273 -201 V 1274 -202
V 1276 -202 V 1278 -202 V 1279 -203 V 1281 -203 V 1283
-204 V 1284 -204 V 1286 -204 V 1287 -205 V 1289 -205
V 1291 -205 V 1292 -206 V 1294 -206 V 1296 -206 V 1297
-207 V 1299 -207 V 1301 -207 V 1302 -207 V 1304 -208
V 1306 -208 V 1307 -208 V 1309 -209 V 1310 -209 V 1312
-209 V 1314 -210 V 1315 -210 V 1317 -210 V 1319 -210
V 1320 -211 V 1322 -211 V 1324 -211 V 1325 -211 V 1327
-212 V 1330 -212 V 1333 -213 V 1337 -213 V 1340 -214
V 1343 -214 V 1347 -214 V 1350 -215 V 1353 -215 V 1356
-216 V 1360 -216 V 1363 -216 V 1366 -217 V 1773 -149
a Fb(\()p Fa(\()p 1517 -217 V 1521 -216 V 1524 -216 V
1527 -216 V 1530 -215 V 1534 -215 V 1537 -214 V 1540
-214 V 1544 -214 V 1547 -213 V 1550 -213 V 1553 -212
V 1557 -212 V 1558 -211 V 1560 -211 V 1562 -211 V 1563
-211 V 1565 -210 V 1567 -210 V 1568 -210 V 1570 -210
V 1571 -209 V 1573 -209 V 1575 -209 V 1576 -208 V 1578
-208 V 1580 -208 V 1581 -207 V 1583 -207 V 1585 -207
V 1586 -207 V 1588 -206 V 1590 -206 V 1591 -206 V 1593
-205 V 1594 -205 V 1596 -205 V 1598 -204 V 1599 -204
V 1601 -204 V 1603 -203 V 1604 -203 V 1606 -202 V 1608
-202 V 1609 -202 V 1611 -201 V 1612 -201 V 1614 -201
V 1616 -200 V 1617 -200 V 1619 -199 V 1621 -199 V 1622
-199 V 1624 -198 V 1626 -198 V 1627 -197 V 1629 -197
V 1631 -197 V 1632 -196 V 1634 -196 V 1635 -195 V 1637
-195 V 1639 -195 V 1640 -194 V 1642 -194 V 1644 -193
V 1645 -193 V 1647 -192 V 1649 -192 V 1650 -191 V 1652
-191 V 1654 -190 V 1655 -190 V 1657 -190 V 1658 -189
V 1660 -189 V 1662 -188 V 1663 -188 V 1665 -187 V 1667
-187 V 1668 -186 V 1670 -186 V 1672 -185 V 1673 -185
V 1675 -184 V 1677 -184 V 1678 -183 V 1680 -183 V 1681
-182 V 1683 -182 V 1685 -181 V 1686 -180 V 1688 -180
V 1690 -179 V 1691 -179 V 1693 -178 V 1695 -178 V 1696
-177 V 1698 -177 V 1699 -176 V 1701 -175 V 1703 -175
V 1704 -174 V 1706 -174 V 1708 -173 V 1709 -173 V 1711
-172 V 1713 -171 V 1714 -171 V 1716 -170 V 1718 -170
V 1719 -169 V 1721 -168 V 1722 -168 V 1724 -167 V 1726
-167 V 1727 -166 V 1729 -165 V 1731 -165 V 1732 -164
V 1734 -163 V 1736 -163 V 1737 -162 V 1739 -161 V 1741
-161 V 1742 -160 V 1744 -159 V 1745 -159 V 1747 -158
V 1749 -157 V 1750 -157 V 1752 -156 V 1754 -155 V 1755
-155 V 1757 -154 V 1759 -153 V 1760 -153 V 1762 -152
V 1764 -151 V 1765 -151 V 1767 -150 V 1768 -149 V 1770
-148 V 1772 -148 V 1797 -154 2 2 v 1799 -153 128 4 v
1927 -154 2 2 v 1797 -53 4 100 v 1929 -53 V 1797 -50
2 2 v 1799 -49 128 4 v 1927 -50 2 2 v 1823 -79 a FK(64)p
1 0 0 TeXcolorrgb 2324 -202 a FH(\243)p FI(???)p 0 TeXcolorgray
1953 -140 4 4 v 1955 -141 V 1957 -142 V 1959 -143 V 1961
-143 V 1963 -144 V 1965 -145 V 1967 -145 V 1969 -146
V 1971 -147 V 1973 -148 V 1975 -148 V 1977 -149 V 1979
-150 V 1981 -151 V 1983 -151 V 1985 -152 V 1987 -153
V 1989 -153 V 1991 -154 V 1993 -155 V 1995 -155 V 1997
-156 V 1999 -157 V 2001 -157 V 2003 -158 V 2005 -159
V 2007 -159 V 2009 -160 V 2011 -161 V 2013 -161 V 2015
-162 V 2017 -163 V 2019 -163 V 2021 -164 V 2023 -165
V 2025 -165 V 2027 -166 V 2029 -167 V 2031 -167 V 2033
-168 V 2035 -168 V 2037 -169 V 2039 -170 V 2041 -170
V 2043 -171 V 2045 -171 V 2047 -172 V 2049 -173 V 2051
-173 V 2053 -174 V 2055 -174 V 2057 -175 V 2059 -175
V 2061 -176 V 2063 -177 V 2065 -177 V 2067 -178 V 2069
-178 V 2071 -179 V 2073 -179 V 2075 -180 V 2077 -180
V 2079 -181 V 2081 -182 V 2083 -182 V 2085 -183 V 2087
-183 V 2089 -184 V 2091 -184 V 2093 -185 V 2095 -185
V 2097 -186 V 2100 -186 V 2102 -187 V 2104 -187 V 2106
-188 V 2108 -188 V 2110 -189 V 2112 -189 V 2114 -190
V 2116 -190 V 2118 -190 V 2120 -191 V 2122 -191 V 2124
-192 V 2126 -192 V 2128 -193 V 2130 -193 V 2132 -194
V 2134 -194 V 2136 -195 V 2138 -195 V 2140 -195 V 2142
-196 V 2144 -196 V 2146 -197 V 2148 -197 V 2150 -197
V 2152 -198 V 2154 -198 V 2156 -199 V 2158 -199 V 2160
-199 V 2162 -200 V 2164 -200 V 2166 -201 V 2168 -201
V 2170 -201 V 2172 -202 V 2174 -202 V 2176 -202 V 2178
-203 V 2180 -203 V 2182 -204 V 2184 -204 V 2186 -204
V 2188 -205 V 2190 -205 V 2192 -205 V 2194 -206 V 2196
-206 V 2198 -206 V 2200 -207 V 2202 -207 V 2204 -207
V 2206 -207 V 2208 -208 V 2210 -208 V 2212 -208 V 2214
-209 V 2216 -209 V 2218 -209 V 2220 -210 V 2222 -210
V 2224 -210 V 2226 -210 V 2228 -211 V 2230 -211 V 2232
-211 V 2234 -211 V 2236 -212 V 2238 -212 V 2240 -212
V 2242 -212 V 2244 -213 V 2246 -213 V 2248 -213 V 2250
-213 V 2252 -214 V 2254 -214 V 2257 -214 V 2259 -214
V 2261 -214 V 2263 -215 V 2265 -215 V 2267 -215 V 2269
-215 V 2271 -215 V 2273 -216 V 2275 -216 V 2277 -216
V 2279 -216 V 2281 -216 V 2283 -216 V 2285 -217 V 2287
-217 V 2289 -217 V 2291 -217 V 2293 -217 V 2295 -217
V 2297 -218 V 2299 -218 V 2301 -218 V 2303 -218 V 2305
-218 V 2307 -218 V 2309 -218 V 2311 -219 V 2313 -219
V 2315 -219 V 2317 -219 V 2319 -219 V 2321 -219 V 2784
-149 a Fb(\))p Fa(\))p 2434 -219 V 2436 -219 V 2438 -219
V 2440 -219 V 2442 -219 V 2444 -219 V 2446 -218 V 2448
-218 V 2450 -218 V 2452 -218 V 2454 -218 V 2456 -218
V 2458 -218 V 2460 -217 V 2462 -217 V 2464 -217 V 2466
-217 V 2468 -217 V 2470 -217 V 2472 -216 V 2474 -216
V 2476 -216 V 2478 -216 V 2480 -216 V 2482 -216 V 2484
-215 V 2486 -215 V 2488 -215 V 2490 -215 V 2492 -215
V 2494 -214 V 2496 -214 V 2498 -214 V 2500 -214 V 2502
-214 V 2504 -213 V 2506 -213 V 2508 -213 V 2510 -213
V 2512 -212 V 2514 -212 V 2516 -212 V 2518 -212 V 2520
-211 V 2522 -211 V 2524 -211 V 2526 -211 V 2528 -210
V 2530 -210 V 2532 -210 V 2534 -210 V 2536 -209 V 2538
-209 V 2540 -209 V 2542 -208 V 2544 -208 V 2546 -208
V 2548 -207 V 2550 -207 V 2552 -207 V 2554 -207 V 2556
-206 V 2558 -206 V 2560 -206 V 2562 -205 V 2564 -205
V 2566 -205 V 2568 -204 V 2571 -204 V 2573 -204 V 2575
-203 V 2577 -203 V 2579 -202 V 2581 -202 V 2583 -202
V 2585 -201 V 2587 -201 V 2589 -201 V 2591 -200 V 2593
-200 V 2595 -199 V 2597 -199 V 2599 -199 V 2601 -198
V 2603 -198 V 2605 -197 V 2607 -197 V 2609 -197 V 2611
-196 V 2613 -196 V 2615 -195 V 2617 -195 V 2619 -195
V 2621 -194 V 2623 -194 V 2625 -193 V 2627 -193 V 2629
-192 V 2631 -192 V 2633 -191 V 2635 -191 V 2637 -190
V 2639 -190 V 2641 -190 V 2643 -189 V 2645 -189 V 2647
-188 V 2649 -188 V 2651 -187 V 2653 -187 V 2655 -186
V 2657 -186 V 2659 -185 V 2661 -185 V 2663 -184 V 2665
-184 V 2667 -183 V 2669 -183 V 2671 -182 V 2673 -182
V 2675 -181 V 2677 -180 V 2679 -180 V 2681 -179 V 2683
-179 V 2685 -178 V 2687 -178 V 2689 -177 V 2691 -177
V 2693 -176 V 2695 -175 V 2697 -175 V 2699 -174 V 2701
-174 V 2703 -173 V 2705 -173 V 2707 -172 V 2709 -171
V 2711 -171 V 2713 -170 V 2715 -170 V 2717 -169 V 2719
-168 V 2721 -168 V 2723 -167 V 2725 -167 V 2727 -166
V 2730 -165 V 2732 -165 V 2734 -164 V 2736 -163 V 2738
-163 V 2740 -162 V 2742 -161 V 2744 -161 V 2746 -160
V 2748 -159 V 2750 -159 V 2752 -158 V 2754 -157 V 2756
-157 V 2758 -156 V 2760 -155 V 2762 -155 V 2764 -154
V 2766 -153 V 2768 -153 V 2770 -152 V 2772 -151 V 2774
-151 V 2776 -150 V 2778 -149 V 2780 -148 V 2782 -148
V 2808 -154 2 2 v 2809 -153 169 4 v 2978 -154 2 2 v 2807
-53 4 100 v 2980 -53 V 2808 -50 2 2 v 2809 -49 169 4
v 2978 -50 2 2 v 2833 -79 a FK(100)p 0 0 1 TeXcolorrgb
784 133 a(V)-5 b(aleur)19 b(initiale)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1611 125 a(A)o(pr\350s)e(la)h(baisse)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2465 133 a(R)o(etour)f(\340)g(la)h
(valeur)g(initiale)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
-38 275 a(???)p 0 TeXcolorgray 13 w FG(\306)c FK(100)c
FG(\245)g FK(64)17 b FG(\306)e FK(1,)8 b(5625)17 b FG(\306)d
FK(156,)8 b(25)20 b(\045,)e(donc)f(la)g(baisse)h(de)f(36)h(\045)f(est)h
(compens\351e)i(par)d(une)h(hausse)h(de)e(56,25)i(\045.)-246
302 y
SDict begin H.S end
 -246 302 a -246 302 a
SDict begin 12 H.A end
 -246 302 a -246 302 a
SDict begin [/View [/XYZ H.V]/Dest (Item.292) cvn /DEST pdfmark end
 -246
302 a 0 TeXcolorgray -141 395 a FK(3.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(On)e(cher)o(che)g(le)h
(taux)g(r\351ciproque)g(de)f FG(\305)p FK(60)h(\045.)80
495 y(100)h(\045)10 b FG(\305)g FK(60)18 b(\045)c FG(\306)g
FK(160)19 b(\045)14 b FG(\306)g FK(1,)8 b(60,)20 b(d)n('o\371)e(le)f
(sch\351ma)i(:)p 0 TeXcolorgray 0 TeXcolorgray 983 647
2 2 v 985 648 169 4 v 1154 647 2 2 v 982 747 4 100 v
1155 747 V 983 750 2 2 v 985 751 169 4 v 1154 750 2 2
v 1009 722 a(100)p 1 0 0 TeXcolorrgb 1421 594 a FH(\243)p
FI(1,60)p 0 TeXcolorgray 1180 644 4 4 v 1181 644 V 1183
643 V 1185 642 V 1186 642 V 1188 641 V 1190 640 V 1191
640 V 1193 639 V 1195 638 V 1196 638 V 1198 637 V 1200
637 V 1201 636 V 1203 635 V 1205 635 V 1206 634 V 1208
633 V 1210 633 V 1211 632 V 1213 632 V 1215 631 V 1216
630 V 1218 630 V 1220 629 V 1221 629 V 1223 628 V 1225
627 V 1226 627 V 1228 626 V 1230 626 V 1231 625 V 1233
625 V 1235 624 V 1236 623 V 1238 623 V 1240 622 V 1241
622 V 1243 621 V 1245 621 V 1246 620 V 1248 620 V 1250
619 V 1251 619 V 1253 618 V 1255 617 V 1256 617 V 1258
616 V 1260 616 V 1261 615 V 1263 615 V 1265 614 V 1266
614 V 1268 613 V 1270 613 V 1271 612 V 1273 612 V 1275
612 V 1276 611 V 1278 611 V 1280 610 V 1281 610 V 1283
609 V 1285 609 V 1286 608 V 1288 608 V 1290 607 V 1291
607 V 1293 606 V 1295 606 V 1296 606 V 1298 605 V 1300
605 V 1301 604 V 1303 604 V 1305 604 V 1306 603 V 1308
603 V 1310 602 V 1311 602 V 1313 602 V 1315 601 V 1316
601 V 1318 600 V 1320 600 V 1321 600 V 1323 599 V 1325
599 V 1326 598 V 1328 598 V 1330 598 V 1331 597 V 1333
597 V 1335 597 V 1336 596 V 1338 596 V 1340 596 V 1341
595 V 1343 595 V 1345 595 V 1346 594 V 1348 594 V 1350
594 V 1351 593 V 1353 593 V 1355 593 V 1356 593 V 1358
592 V 1360 592 V 1361 592 V 1363 591 V 1365 591 V 1366
591 V 1368 591 V 1370 590 V 1371 590 V 1373 590 V 1375
589 V 1376 589 V 1378 589 V 1380 589 V 1381 588 V 1383
588 V 1385 588 V 1386 588 V 1388 587 V 1390 587 V 1391
587 V 1393 587 V 1395 587 V 1396 586 V 1398 586 V 1400
586 V 1401 586 V 1403 586 V 1405 585 V 1406 585 V 1408
585 V 1410 585 V 1411 585 V 1413 584 V 1415 584 V 1416
584 V 1418 584 V 1420 584 V 1812 643 a Fb(\()p Fa(\()p
1569 584 V 1571 584 V 1573 584 V 1574 584 V 1576 584
V 1578 585 V 1579 585 V 1581 585 V 1583 585 V 1584 585
V 1586 586 V 1588 586 V 1589 586 V 1591 586 V 1593 586
V 1594 587 V 1596 587 V 1598 587 V 1599 587 V 1601 587
V 1603 588 V 1604 588 V 1606 588 V 1608 588 V 1609 589
V 1611 589 V 1613 589 V 1614 589 V 1616 590 V 1618 590
V 1619 590 V 1621 591 V 1623 591 V 1624 591 V 1626 591
V 1628 592 V 1629 592 V 1631 592 V 1633 593 V 1634 593
V 1636 593 V 1638 593 V 1639 594 V 1641 594 V 1643 594
V 1644 595 V 1646 595 V 1648 595 V 1649 596 V 1651 596
V 1653 596 V 1654 597 V 1656 597 V 1658 597 V 1659 598
V 1661 598 V 1663 598 V 1664 599 V 1666 599 V 1668 600
V 1669 600 V 1671 600 V 1673 601 V 1674 601 V 1676 602
V 1678 602 V 1679 602 V 1681 603 V 1683 603 V 1684 604
V 1686 604 V 1688 604 V 1689 605 V 1691 605 V 1693 606
V 1694 606 V 1696 606 V 1698 607 V 1699 607 V 1701 608
V 1703 608 V 1704 609 V 1706 609 V 1708 610 V 1709 610
V 1711 611 V 1713 611 V 1714 612 V 1716 612 V 1718 612
V 1719 613 V 1721 613 V 1723 614 V 1724 614 V 1726 615
V 1728 615 V 1729 616 V 1731 616 V 1733 617 V 1734 617
V 1736 618 V 1738 619 V 1739 619 V 1741 620 V 1743 620
V 1744 621 V 1746 621 V 1748 622 V 1749 622 V 1751 623
V 1753 623 V 1754 624 V 1756 625 V 1758 625 V 1759 626
V 1761 626 V 1763 627 V 1764 627 V 1766 628 V 1768 629
V 1769 629 V 1771 630 V 1773 630 V 1774 631 V 1776 632
V 1778 632 V 1779 633 V 1781 633 V 1783 634 V 1784 635
V 1786 635 V 1788 636 V 1789 637 V 1791 637 V 1793 638
V 1794 638 V 1796 639 V 1798 640 V 1799 640 V 1801 641
V 1803 642 V 1804 642 V 1806 643 V 1808 644 V 1809 644
V 1836 647 2 2 v 1838 648 169 4 v 2007 647 2 2 v 1835
747 4 100 v 2008 747 V 1836 750 2 2 v 1838 751 169 4
v 2007 750 2 2 v 1862 722 a FK(160)p 1 0 0 TeXcolorrgb
2389 599 a FH(\243)p FI(???)p 0 TeXcolorgray 2033 653
4 4 v 2035 652 V 2037 651 V 2039 651 V 2041 650 V 2043
649 V 2045 649 V 2047 648 V 2049 647 V 2051 647 V 2053
646 V 2055 645 V 2057 644 V 2059 644 V 2061 643 V 2064
642 V 2066 642 V 2068 641 V 2070 640 V 2072 640 V 2074
639 V 2076 638 V 2078 638 V 2080 637 V 2082 637 V 2084
636 V 2086 635 V 2088 635 V 2090 634 V 2092 633 V 2094
633 V 2096 632 V 2098 632 V 2100 631 V 2102 630 V 2104
630 V 2106 629 V 2108 629 V 2110 628 V 2112 627 V 2114
627 V 2116 626 V 2119 626 V 2121 625 V 2123 625 V 2125
624 V 2127 623 V 2129 623 V 2131 622 V 2133 622 V 2135
621 V 2137 621 V 2139 620 V 2141 620 V 2143 619 V 2145
619 V 2147 618 V 2149 617 V 2151 617 V 2153 616 V 2155
616 V 2157 615 V 2159 615 V 2161 614 V 2163 614 V 2165
613 V 2167 613 V 2169 612 V 2171 612 V 2174 612 V 2176
611 V 2178 611 V 2180 610 V 2182 610 V 2184 609 V 2186
609 V 2188 608 V 2190 608 V 2192 607 V 2194 607 V 2196
606 V 2198 606 V 2200 606 V 2202 605 V 2204 605 V 2206
604 V 2208 604 V 2210 604 V 2212 603 V 2214 603 V 2216
602 V 2218 602 V 2220 602 V 2222 601 V 2224 601 V 2226
600 V 2229 600 V 2231 600 V 2233 599 V 2235 599 V 2237
598 V 2239 598 V 2241 598 V 2243 597 V 2245 597 V 2247
597 V 2249 596 V 2251 596 V 2253 596 V 2255 595 V 2257
595 V 2259 595 V 2261 594 V 2263 594 V 2265 594 V 2267
593 V 2269 593 V 2271 593 V 2273 593 V 2275 592 V 2277
592 V 2279 592 V 2281 591 V 2284 591 V 2286 591 V 2288
591 V 2290 590 V 2292 590 V 2294 590 V 2296 589 V 2298
589 V 2300 589 V 2302 589 V 2304 588 V 2306 588 V 2308
588 V 2310 588 V 2312 587 V 2314 587 V 2316 587 V 2318
587 V 2320 587 V 2322 586 V 2324 586 V 2326 586 V 2328
586 V 2330 586 V 2332 585 V 2334 585 V 2336 585 V 2339
585 V 2341 585 V 2343 584 V 2345 584 V 2347 584 V 2349
584 V 2351 584 V 2353 584 V 2355 583 V 2357 583 V 2359
583 V 2361 583 V 2363 583 V 2365 583 V 2367 583 V 2369
582 V 2371 582 V 2373 582 V 2375 582 V 2377 582 V 2379
582 V 2381 582 V 2383 582 V 2385 582 V 2387 581 V 2855
652 a Fb(\))p Fa(\))p 2497 581 V 2499 582 V 2501 582
V 2504 582 V 2506 582 V 2508 582 V 2510 582 V 2512 582
V 2514 582 V 2516 582 V 2518 583 V 2520 583 V 2522 583
V 2524 583 V 2526 583 V 2528 583 V 2530 583 V 2532 584
V 2534 584 V 2536 584 V 2538 584 V 2540 584 V 2542 584
V 2544 585 V 2546 585 V 2548 585 V 2550 585 V 2552 585
V 2554 586 V 2556 586 V 2559 586 V 2561 586 V 2563 586
V 2565 587 V 2567 587 V 2569 587 V 2571 587 V 2573 587
V 2575 588 V 2577 588 V 2579 588 V 2581 588 V 2583 589
V 2585 589 V 2587 589 V 2589 589 V 2591 590 V 2593 590
V 2595 590 V 2597 591 V 2599 591 V 2601 591 V 2603 591
V 2605 592 V 2607 592 V 2609 592 V 2611 593 V 2614 593
V 2616 593 V 2618 593 V 2620 594 V 2622 594 V 2624 594
V 2626 595 V 2628 595 V 2630 595 V 2632 596 V 2634 596
V 2636 596 V 2638 597 V 2640 597 V 2642 597 V 2644 598
V 2646 598 V 2648 598 V 2650 599 V 2652 599 V 2654 600
V 2656 600 V 2658 600 V 2660 601 V 2662 601 V 2664 602
V 2666 602 V 2669 602 V 2671 603 V 2673 603 V 2675 604
V 2677 604 V 2679 604 V 2681 605 V 2683 605 V 2685 606
V 2687 606 V 2689 606 V 2691 607 V 2693 607 V 2695 608
V 2697 608 V 2699 609 V 2701 609 V 2703 610 V 2705 610
V 2707 611 V 2709 611 V 2711 612 V 2713 612 V 2715 612
V 2717 613 V 2719 613 V 2721 614 V 2724 614 V 2726 615
V 2728 615 V 2730 616 V 2732 616 V 2734 617 V 2736 617
V 2738 618 V 2740 619 V 2742 619 V 2744 620 V 2746 620
V 2748 621 V 2750 621 V 2752 622 V 2754 622 V 2756 623
V 2758 623 V 2760 624 V 2762 625 V 2764 625 V 2766 626
V 2768 626 V 2770 627 V 2772 627 V 2774 628 V 2776 629
V 2779 629 V 2781 630 V 2783 630 V 2785 631 V 2787 632
V 2789 632 V 2791 633 V 2793 633 V 2795 634 V 2797 635
V 2799 635 V 2801 636 V 2803 637 V 2805 637 V 2807 638
V 2809 638 V 2811 639 V 2813 640 V 2815 640 V 2817 641
V 2819 642 V 2821 642 V 2823 643 V 2825 644 V 2827 644
V 2829 645 V 2831 646 V 2833 647 V 2836 647 V 2838 648
V 2840 649 V 2842 649 V 2844 650 V 2846 651 V 2848 651
V 2850 652 V 2852 653 V 2879 647 2 2 v 2881 648 169 4
v 3050 647 2 2 v 2878 747 4 100 v 3051 747 V 2879 750
2 2 v 2881 751 169 4 v 3050 750 2 2 v 2905 722 a FK(100)p
0 0 1 TeXcolorrgb 831 934 a(V)-5 b(aleur)18 b(initiale)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1658 925 a(A)o(pr\350s)f(la)g(hausse)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2536 934 a(R)o(etour)h(\340)f(la)g
(valeur)h(initiale)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
80 1073 a(???)p 0 TeXcolorgray 13 w FG(\306)c FK(100)c
FG(\245)g FK(160)18 b FG(\306)c FK(0,)8 b(625)17 b FG(\306)d
FK(62,)8 b(5)19 b(\045,)e(et)h(comme)g(100)h(\045)10
b FG(\241)g FK(62,)e(5)20 b(\045)14 b FG(\306)g FK(37,)8
b(5)19 b(\045,)e(le)h(taux)g(r\351ciproque)g(de)f FG(\305)p
FK(60)h(\045)f(est)h FG(\241)p FK(37,)8 b(5)19 b(\045.)p
0 TeXcolorgray 7 1173 a(\225)p 0 TeXcolorgray 42 w(On)e(cher)o(che)g
(le)h(taux)g(r\351ciproque)g(de)f FG(\241)p FK(15)h(\045.)80
1313 y(100)h(\045)10 b FG(\241)g FK(15)18 b(\045)c FG(\306)g
FK(85)19 b(\045)14 b FG(\306)g FK(0,)8 b(85,)19 b(d)n('o\371)f(le)g
(sch\351ma)g(:)p 0 TeXcolorgray 0 TeXcolorgray 996 1424
V 997 1425 169 4 v 1166 1424 2 2 v 995 1525 4 100 v 1168
1525 V 996 1528 2 2 v 997 1529 169 4 v 1166 1528 2 2
v 1021 1500 a(100)p 1 0 0 TeXcolorrgb 1428 1371 a FH(\243)p
FI(0,85)p 0 TeXcolorgray 1192 1421 4 4 v 1194 1421 V
1195 1420 V 1197 1419 V 1199 1419 V 1200 1418 V 1202
1417 V 1204 1417 V 1205 1416 V 1207 1415 V 1209 1415
V 1210 1414 V 1212 1413 V 1213 1413 V 1215 1412 V 1217
1412 V 1218 1411 V 1220 1410 V 1222 1410 V 1223 1409
V 1225 1409 V 1227 1408 V 1228 1407 V 1230 1407 V 1232
1406 V 1233 1406 V 1235 1405 V 1236 1404 V 1238 1404
V 1240 1403 V 1241 1403 V 1243 1402 V 1245 1402 V 1246
1401 V 1248 1400 V 1250 1400 V 1251 1399 V 1253 1399
V 1255 1398 V 1256 1398 V 1258 1397 V 1259 1397 V 1261
1396 V 1263 1396 V 1264 1395 V 1266 1395 V 1268 1394
V 1269 1393 V 1271 1393 V 1273 1392 V 1274 1392 V 1276
1391 V 1277 1391 V 1279 1391 V 1281 1390 V 1282 1390
V 1284 1389 V 1286 1389 V 1287 1388 V 1289 1388 V 1291
1387 V 1292 1387 V 1294 1386 V 1296 1386 V 1297 1385
V 1299 1385 V 1300 1384 V 1302 1384 V 1304 1384 V 1305
1383 V 1307 1383 V 1309 1382 V 1310 1382 V 1312 1381
V 1314 1381 V 1315 1381 V 1317 1380 V 1319 1380 V 1320
1379 V 1322 1379 V 1323 1379 V 1325 1378 V 1327 1378
V 1328 1378 V 1330 1377 V 1332 1377 V 1333 1376 V 1335
1376 V 1337 1376 V 1338 1375 V 1340 1375 V 1342 1375
V 1343 1374 V 1345 1374 V 1346 1374 V 1348 1373 V 1350
1373 V 1351 1373 V 1353 1372 V 1355 1372 V 1356 1372
V 1358 1371 V 1360 1371 V 1361 1371 V 1363 1370 V 1364
1370 V 1366 1370 V 1368 1369 V 1369 1369 V 1371 1369
V 1373 1369 V 1374 1368 V 1376 1368 V 1378 1368 V 1379
1368 V 1381 1367 V 1383 1367 V 1384 1367 V 1386 1366
V 1389 1366 V 1392 1366 V 1396 1365 V 1399 1365 V 1402
1364 V 1406 1364 V 1409 1363 V 1412 1363 V 1415 1363
V 1419 1362 V 1422 1362 V 1425 1361 V 1832 1429 a Fb(\()p
Fa(\()p 1576 1361 V 1580 1362 V 1583 1362 V 1586 1363
V 1589 1363 V 1593 1363 V 1596 1364 V 1599 1364 V 1602
1365 V 1606 1365 V 1609 1366 V 1612 1366 V 1616 1366
V 1617 1367 V 1619 1367 V 1621 1367 V 1622 1368 V 1624
1368 V 1625 1368 V 1627 1368 V 1629 1369 V 1630 1369
V 1632 1369 V 1634 1369 V 1635 1370 V 1637 1370 V 1639
1370 V 1640 1371 V 1642 1371 V 1644 1371 V 1645 1372
V 1647 1372 V 1648 1372 V 1650 1373 V 1652 1373 V 1653
1373 V 1655 1374 V 1657 1374 V 1658 1374 V 1660 1375
V 1662 1375 V 1663 1375 V 1665 1376 V 1667 1376 V 1668
1376 V 1670 1377 V 1671 1377 V 1673 1378 V 1675 1378
V 1676 1378 V 1678 1379 V 1680 1379 V 1681 1379 V 1683
1380 V 1685 1380 V 1686 1381 V 1688 1381 V 1689 1381
V 1691 1382 V 1693 1382 V 1694 1383 V 1696 1383 V 1698
1384 V 1699 1384 V 1701 1384 V 1703 1385 V 1704 1385
V 1706 1386 V 1708 1386 V 1709 1387 V 1711 1387 V 1712
1388 V 1714 1388 V 1716 1389 V 1717 1389 V 1719 1390
V 1721 1390 V 1722 1391 V 1724 1391 V 1726 1391 V 1727
1392 V 1729 1392 V 1731 1393 V 1732 1393 V 1734 1394
V 1735 1395 V 1737 1395 V 1739 1396 V 1740 1396 V 1742
1397 V 1744 1397 V 1745 1398 V 1747 1398 V 1749 1399
V 1750 1399 V 1752 1400 V 1754 1400 V 1755 1401 V 1757
1402 V 1758 1402 V 1760 1403 V 1762 1403 V 1763 1404
V 1765 1404 V 1767 1405 V 1768 1406 V 1770 1406 V 1772
1407 V 1773 1407 V 1775 1408 V 1776 1409 V 1778 1409
V 1780 1410 V 1781 1410 V 1783 1411 V 1785 1412 V 1786
1412 V 1788 1413 V 1790 1413 V 1791 1414 V 1793 1415
V 1795 1415 V 1796 1416 V 1798 1417 V 1799 1417 V 1801
1418 V 1803 1419 V 1804 1419 V 1806 1420 V 1808 1421
V 1809 1421 V 1811 1422 V 1813 1423 V 1814 1423 V 1816
1424 V 1818 1425 V 1819 1425 V 1821 1426 V 1822 1427
V 1824 1428 V 1826 1428 V 1827 1429 V 1829 1430 V 1831
1430 V 1856 1424 2 2 v 1858 1425 128 4 v 1986 1424 2
2 v 1856 1525 4 100 v 1988 1525 V 1856 1528 2 2 v 1858
1529 128 4 v 1986 1528 2 2 v 1882 1500 a FK(85)p 1 0 0
TeXcolorrgb 2383 1376 a FH(\243)p FI(???)p 0 TeXcolorgray
2012 1438 4 4 v 2014 1437 V 2016 1436 V 2018 1436 V 2020
1435 V 2022 1434 V 2024 1433 V 2026 1433 V 2028 1432
V 2030 1431 V 2032 1430 V 2034 1430 V 2036 1429 V 2038
1428 V 2040 1428 V 2042 1427 V 2044 1426 V 2046 1425
V 2048 1425 V 2050 1424 V 2052 1423 V 2054 1423 V 2056
1422 V 2058 1421 V 2060 1421 V 2062 1420 V 2064 1419
V 2066 1419 V 2068 1418 V 2070 1417 V 2072 1417 V 2074
1416 V 2076 1415 V 2078 1415 V 2080 1414 V 2082 1413
V 2084 1413 V 2086 1412 V 2088 1412 V 2090 1411 V 2092
1410 V 2094 1410 V 2096 1409 V 2098 1409 V 2100 1408
V 2102 1407 V 2104 1407 V 2106 1406 V 2108 1406 V 2110
1405 V 2112 1404 V 2114 1404 V 2116 1403 V 2118 1403
V 2120 1402 V 2122 1402 V 2124 1401 V 2126 1400 V 2128
1400 V 2130 1399 V 2132 1399 V 2134 1398 V 2136 1398
V 2138 1397 V 2140 1397 V 2142 1396 V 2144 1396 V 2146
1395 V 2148 1395 V 2150 1394 V 2152 1393 V 2154 1393
V 2156 1392 V 2158 1392 V 2160 1391 V 2162 1391 V 2164
1391 V 2167 1390 V 2169 1390 V 2171 1389 V 2173 1389
V 2175 1388 V 2177 1388 V 2179 1387 V 2181 1387 V 2183
1386 V 2185 1386 V 2187 1385 V 2189 1385 V 2191 1384
V 2193 1384 V 2195 1384 V 2197 1383 V 2199 1383 V 2201
1382 V 2203 1382 V 2205 1381 V 2207 1381 V 2209 1381
V 2211 1380 V 2213 1380 V 2215 1379 V 2217 1379 V 2219
1379 V 2221 1378 V 2223 1378 V 2225 1378 V 2227 1377
V 2229 1377 V 2231 1376 V 2233 1376 V 2235 1376 V 2237
1375 V 2239 1375 V 2241 1375 V 2243 1374 V 2245 1374
V 2247 1374 V 2249 1373 V 2251 1373 V 2253 1373 V 2255
1372 V 2257 1372 V 2259 1372 V 2261 1371 V 2263 1371
V 2265 1371 V 2267 1370 V 2269 1370 V 2271 1370 V 2273
1369 V 2275 1369 V 2277 1369 V 2279 1369 V 2281 1368
V 2283 1368 V 2285 1368 V 2287 1368 V 2289 1367 V 2291
1367 V 2293 1367 V 2295 1366 V 2297 1366 V 2299 1366
V 2301 1366 V 2303 1366 V 2305 1365 V 2307 1365 V 2309
1365 V 2311 1365 V 2313 1364 V 2315 1364 V 2317 1364
V 2319 1364 V 2321 1364 V 2324 1363 V 2326 1363 V 2328
1363 V 2330 1363 V 2332 1363 V 2334 1362 V 2336 1362
V 2338 1362 V 2340 1362 V 2342 1362 V 2344 1361 V 2346
1361 V 2348 1361 V 2350 1361 V 2352 1361 V 2354 1361
V 2356 1361 V 2358 1360 V 2360 1360 V 2362 1360 V 2364
1360 V 2366 1360 V 2368 1360 V 2370 1360 V 2372 1360
V 2374 1359 V 2376 1359 V 2378 1359 V 2380 1359 V 2843
1429 a Fb(\))p Fa(\))p 2493 1359 V 2495 1359 V 2497 1359
V 2499 1359 V 2501 1360 V 2503 1360 V 2505 1360 V 2507
1360 V 2509 1360 V 2511 1360 V 2513 1360 V 2515 1360
V 2517 1361 V 2519 1361 V 2521 1361 V 2523 1361 V 2525
1361 V 2527 1361 V 2529 1361 V 2531 1362 V 2533 1362
V 2535 1362 V 2537 1362 V 2539 1362 V 2541 1363 V 2543
1363 V 2545 1363 V 2547 1363 V 2549 1363 V 2551 1364
V 2553 1364 V 2555 1364 V 2557 1364 V 2559 1364 V 2561
1365 V 2563 1365 V 2565 1365 V 2567 1365 V 2569 1366
V 2571 1366 V 2573 1366 V 2575 1366 V 2577 1366 V 2579
1367 V 2581 1367 V 2583 1367 V 2585 1368 V 2587 1368
V 2589 1368 V 2591 1368 V 2593 1369 V 2595 1369 V 2597
1369 V 2599 1369 V 2601 1370 V 2603 1370 V 2605 1370
V 2607 1371 V 2609 1371 V 2611 1371 V 2613 1372 V 2615
1372 V 2617 1372 V 2619 1373 V 2621 1373 V 2623 1373
V 2625 1374 V 2627 1374 V 2629 1374 V 2631 1375 V 2633
1375 V 2635 1375 V 2637 1376 V 2640 1376 V 2642 1376
V 2644 1377 V 2646 1377 V 2648 1378 V 2650 1378 V 2652
1378 V 2654 1379 V 2656 1379 V 2658 1379 V 2660 1380
V 2662 1380 V 2664 1381 V 2666 1381 V 2668 1381 V 2670
1382 V 2672 1382 V 2674 1383 V 2676 1383 V 2678 1384
V 2680 1384 V 2682 1384 V 2684 1385 V 2686 1385 V 2688
1386 V 2690 1386 V 2692 1387 V 2694 1387 V 2696 1388
V 2698 1388 V 2700 1389 V 2702 1389 V 2704 1390 V 2706
1390 V 2708 1391 V 2710 1391 V 2712 1391 V 2714 1392
V 2716 1392 V 2718 1393 V 2720 1393 V 2722 1394 V 2724
1395 V 2726 1395 V 2728 1396 V 2730 1396 V 2732 1397
V 2734 1397 V 2736 1398 V 2738 1398 V 2740 1399 V 2742
1399 V 2744 1400 V 2746 1400 V 2748 1401 V 2750 1402
V 2752 1402 V 2754 1403 V 2756 1403 V 2758 1404 V 2760
1404 V 2762 1405 V 2764 1406 V 2766 1406 V 2768 1407
V 2770 1407 V 2772 1408 V 2774 1409 V 2776 1409 V 2778
1410 V 2780 1410 V 2782 1411 V 2784 1412 V 2786 1412
V 2788 1413 V 2790 1413 V 2792 1414 V 2794 1415 V 2797
1415 V 2799 1416 V 2801 1417 V 2803 1417 V 2805 1418
V 2807 1419 V 2809 1419 V 2811 1420 V 2813 1421 V 2815
1421 V 2817 1422 V 2819 1423 V 2821 1423 V 2823 1424
V 2825 1425 V 2827 1425 V 2829 1426 V 2831 1427 V 2833
1428 V 2835 1428 V 2837 1429 V 2839 1430 V 2841 1430
V 2867 1424 2 2 v 2868 1425 169 4 v 3037 1424 2 2 v 2866
1525 4 100 v 3039 1525 V 2867 1528 2 2 v 2868 1529 169
4 v 3037 1528 2 2 v 2892 1500 a FK(100)p 0 0 1 TeXcolorrgb
843 1711 a(V)-5 b(aleur)19 b(initiale)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1670 1703 a(A)o(pr\350s)e(la)g(baisse)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2524 1711 a(R)o(etour)g(\340)g(la)h
(valeur)g(initiale)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
80 1851 a(???)p 0 TeXcolorgray 13 w FG(\306)c FK(100)c
FG(\245)g FK(85)17 b FG(\274)e FK(1,)8 b(1765)17 b FG(\306)d
FK(117,)8 b(65)20 b(\045,)d(donc)g(le)h(taux)g(r\351ciproque)g(de)f
FG(\241)p FK(15)h(\045)f(est)h FG(\305)p FK(17,)8 b(65)20
b(\045)d(environ.)p 0 TeXcolorgray 7 1951 a(\225)p 0
TeXcolorgray 42 w(On)g(cher)o(che)g(le)h(taux)g(r\351ciproque)g(de)f
FG(\241)p FK(50)h(\045.)80 2050 y(100)h(\045)10 b FG(\241)g
FK(50)18 b(\045)c FG(\306)g FK(50)19 b(\045)14 b FG(\306)g
FK(0,)8 b(50,)19 b(d)n('o\371)f(le)g(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 996 2202 V 997 2203 169
4 v 1166 2202 2 2 v 995 2303 4 100 v 1168 2303 V 996
2306 2 2 v 997 2307 169 4 v 1166 2306 2 2 v 1021 2277
a(100)p 1 0 0 TeXcolorrgb 1428 2149 a FH(\243)p FI(0,50)p
0 TeXcolorgray 1192 2199 4 4 v 1194 2198 V 1195 2198
V 1197 2197 V 1199 2196 V 1200 2196 V 1202 2195 V 1204
2194 V 1205 2194 V 1207 2193 V 1209 2192 V 1210 2192
V 1212 2191 V 1213 2190 V 1215 2190 V 1217 2189 V 1218
2189 V 1220 2188 V 1222 2187 V 1223 2187 V 1225 2186
V 1227 2185 V 1228 2185 V 1230 2184 V 1232 2184 V 1233
2183 V 1235 2183 V 1236 2182 V 1238 2181 V 1240 2181
V 1241 2180 V 1243 2180 V 1245 2179 V 1246 2179 V 1248
2178 V 1250 2177 V 1251 2177 V 1253 2176 V 1255 2176
V 1256 2175 V 1258 2175 V 1259 2174 V 1261 2174 V 1263
2173 V 1264 2173 V 1266 2172 V 1268 2172 V 1269 2171
V 1271 2171 V 1273 2170 V 1274 2170 V 1276 2169 V 1277
2169 V 1279 2168 V 1281 2168 V 1282 2167 V 1284 2167
V 1286 2166 V 1287 2166 V 1289 2165 V 1291 2165 V 1292
2164 V 1294 2164 V 1296 2163 V 1297 2163 V 1299 2162
V 1300 2162 V 1302 2162 V 1304 2161 V 1305 2161 V 1307
2160 V 1309 2160 V 1310 2159 V 1312 2159 V 1314 2159
V 1315 2158 V 1317 2158 V 1319 2157 V 1320 2157 V 1322
2157 V 1323 2156 V 1325 2156 V 1327 2155 V 1328 2155
V 1330 2155 V 1332 2154 V 1333 2154 V 1335 2154 V 1337
2153 V 1338 2153 V 1340 2153 V 1342 2152 V 1343 2152
V 1345 2151 V 1346 2151 V 1348 2151 V 1350 2150 V 1351
2150 V 1353 2150 V 1355 2149 V 1356 2149 V 1358 2149
V 1360 2149 V 1361 2148 V 1363 2148 V 1364 2148 V 1366
2147 V 1368 2147 V 1369 2147 V 1371 2146 V 1373 2146
V 1374 2146 V 1376 2146 V 1378 2145 V 1379 2145 V 1381
2145 V 1383 2145 V 1384 2144 V 1386 2144 V 1389 2144
V 1392 2143 V 1396 2143 V 1399 2142 V 1402 2142 V 1406
2141 V 1409 2141 V 1412 2140 V 1415 2140 V 1419 2140
V 1422 2139 V 1425 2139 V 1832 2206 a Fb(\()p Fa(\()p
1576 2139 V 1580 2139 V 1583 2140 V 1586 2140 V 1589
2140 V 1593 2141 V 1596 2141 V 1599 2142 V 1602 2142
V 1606 2143 V 1609 2143 V 1612 2144 V 1616 2144 V 1617
2144 V 1619 2145 V 1621 2145 V 1622 2145 V 1624 2145
V 1625 2146 V 1627 2146 V 1629 2146 V 1630 2146 V 1632
2147 V 1634 2147 V 1635 2147 V 1637 2148 V 1639 2148
V 1640 2148 V 1642 2149 V 1644 2149 V 1645 2149 V 1647
2149 V 1648 2150 V 1650 2150 V 1652 2150 V 1653 2151
V 1655 2151 V 1657 2151 V 1658 2152 V 1660 2152 V 1662
2153 V 1663 2153 V 1665 2153 V 1667 2154 V 1668 2154
V 1670 2154 V 1671 2155 V 1673 2155 V 1675 2155 V 1676
2156 V 1678 2156 V 1680 2157 V 1681 2157 V 1683 2157
V 1685 2158 V 1686 2158 V 1688 2159 V 1689 2159 V 1691
2159 V 1693 2160 V 1694 2160 V 1696 2161 V 1698 2161
V 1699 2162 V 1701 2162 V 1703 2162 V 1704 2163 V 1706
2163 V 1708 2164 V 1709 2164 V 1711 2165 V 1712 2165
V 1714 2166 V 1716 2166 V 1717 2167 V 1719 2167 V 1721
2168 V 1722 2168 V 1724 2169 V 1726 2169 V 1727 2170
V 1729 2170 V 1731 2171 V 1732 2171 V 1734 2172 V 1735
2172 V 1737 2173 V 1739 2173 V 1740 2174 V 1742 2174
V 1744 2175 V 1745 2175 V 1747 2176 V 1749 2176 V 1750
2177 V 1752 2177 V 1754 2178 V 1755 2179 V 1757 2179
V 1758 2180 V 1760 2180 V 1762 2181 V 1763 2181 V 1765
2182 V 1767 2183 V 1768 2183 V 1770 2184 V 1772 2184
V 1773 2185 V 1775 2185 V 1776 2186 V 1778 2187 V 1780
2187 V 1781 2188 V 1783 2189 V 1785 2189 V 1786 2190
V 1788 2190 V 1790 2191 V 1791 2192 V 1793 2192 V 1795
2193 V 1796 2194 V 1798 2194 V 1799 2195 V 1801 2196
V 1803 2196 V 1804 2197 V 1806 2198 V 1808 2198 V 1809
2199 V 1811 2200 V 1813 2200 V 1814 2201 V 1816 2202
V 1818 2202 V 1819 2203 V 1821 2204 V 1822 2204 V 1824
2205 V 1826 2206 V 1827 2207 V 1829 2207 V 1831 2208
V 1856 2202 2 2 v 1858 2203 128 4 v 1986 2202 2 2 v 1856
2303 4 100 v 1988 2303 V 1856 2306 2 2 v 1858 2307 128
4 v 1986 2306 2 2 v 1882 2277 a FK(50)p 1 0 0 TeXcolorrgb
2383 2154 a FH(\243)p FI(???)p 0 TeXcolorgray 2012 2215
4 4 v 2014 2215 V 2016 2214 V 2018 2213 V 2020 2212 V
2022 2212 V 2024 2211 V 2026 2210 V 2028 2209 V 2030
2209 V 2032 2208 V 2034 2207 V 2036 2207 V 2038 2206
V 2040 2205 V 2042 2204 V 2044 2204 V 2046 2203 V 2048
2202 V 2050 2202 V 2052 2201 V 2054 2200 V 2056 2200
V 2058 2199 V 2060 2198 V 2062 2198 V 2064 2197 V 2066
2196 V 2068 2196 V 2070 2195 V 2072 2194 V 2074 2194
V 2076 2193 V 2078 2192 V 2080 2192 V 2082 2191 V 2084
2190 V 2086 2190 V 2088 2189 V 2090 2189 V 2092 2188
V 2094 2187 V 2096 2187 V 2098 2186 V 2100 2185 V 2102
2185 V 2104 2184 V 2106 2184 V 2108 2183 V 2110 2183
V 2112 2182 V 2114 2181 V 2116 2181 V 2118 2180 V 2120
2180 V 2122 2179 V 2124 2179 V 2126 2178 V 2128 2177
V 2130 2177 V 2132 2176 V 2134 2176 V 2136 2175 V 2138
2175 V 2140 2174 V 2142 2174 V 2144 2173 V 2146 2173
V 2148 2172 V 2150 2172 V 2152 2171 V 2154 2171 V 2156
2170 V 2158 2170 V 2160 2169 V 2162 2169 V 2164 2168
V 2167 2168 V 2169 2167 V 2171 2167 V 2173 2166 V 2175
2166 V 2177 2165 V 2179 2165 V 2181 2164 V 2183 2164
V 2185 2163 V 2187 2163 V 2189 2162 V 2191 2162 V 2193
2162 V 2195 2161 V 2197 2161 V 2199 2160 V 2201 2160
V 2203 2159 V 2205 2159 V 2207 2159 V 2209 2158 V 2211
2158 V 2213 2157 V 2215 2157 V 2217 2157 V 2219 2156
V 2221 2156 V 2223 2155 V 2225 2155 V 2227 2155 V 2229
2154 V 2231 2154 V 2233 2154 V 2235 2153 V 2237 2153
V 2239 2153 V 2241 2152 V 2243 2152 V 2245 2151 V 2247
2151 V 2249 2151 V 2251 2150 V 2253 2150 V 2255 2150
V 2257 2149 V 2259 2149 V 2261 2149 V 2263 2149 V 2265
2148 V 2267 2148 V 2269 2148 V 2271 2147 V 2273 2147
V 2275 2147 V 2277 2146 V 2279 2146 V 2281 2146 V 2283
2146 V 2285 2145 V 2287 2145 V 2289 2145 V 2291 2145
V 2293 2144 V 2295 2144 V 2297 2144 V 2299 2144 V 2301
2143 V 2303 2143 V 2305 2143 V 2307 2143 V 2309 2142
V 2311 2142 V 2313 2142 V 2315 2142 V 2317 2141 V 2319
2141 V 2321 2141 V 2324 2141 V 2326 2141 V 2328 2140
V 2330 2140 V 2332 2140 V 2334 2140 V 2336 2140 V 2338
2140 V 2340 2139 V 2342 2139 V 2344 2139 V 2346 2139
V 2348 2139 V 2350 2139 V 2352 2138 V 2354 2138 V 2356
2138 V 2358 2138 V 2360 2138 V 2362 2138 V 2364 2138
V 2366 2137 V 2368 2137 V 2370 2137 V 2372 2137 V 2374
2137 V 2376 2137 V 2378 2137 V 2380 2137 V 2843 2206
a Fb(\))p Fa(\))p 2493 2137 V 2495 2137 V 2497 2137 V
2499 2137 V 2501 2137 V 2503 2137 V 2505 2137 V 2507
2137 V 2509 2138 V 2511 2138 V 2513 2138 V 2515 2138
V 2517 2138 V 2519 2138 V 2521 2138 V 2523 2139 V 2525
2139 V 2527 2139 V 2529 2139 V 2531 2139 V 2533 2139
V 2535 2140 V 2537 2140 V 2539 2140 V 2541 2140 V 2543
2140 V 2545 2140 V 2547 2141 V 2549 2141 V 2551 2141
V 2553 2141 V 2555 2141 V 2557 2142 V 2559 2142 V 2561
2142 V 2563 2142 V 2565 2143 V 2567 2143 V 2569 2143
V 2571 2143 V 2573 2144 V 2575 2144 V 2577 2144 V 2579
2144 V 2581 2145 V 2583 2145 V 2585 2145 V 2587 2145
V 2589 2146 V 2591 2146 V 2593 2146 V 2595 2146 V 2597
2147 V 2599 2147 V 2601 2147 V 2603 2148 V 2605 2148
V 2607 2148 V 2609 2149 V 2611 2149 V 2613 2149 V 2615
2149 V 2617 2150 V 2619 2150 V 2621 2150 V 2623 2151
V 2625 2151 V 2627 2151 V 2629 2152 V 2631 2152 V 2633
2153 V 2635 2153 V 2637 2153 V 2640 2154 V 2642 2154
V 2644 2154 V 2646 2155 V 2648 2155 V 2650 2155 V 2652
2156 V 2654 2156 V 2656 2157 V 2658 2157 V 2660 2157
V 2662 2158 V 2664 2158 V 2666 2159 V 2668 2159 V 2670
2159 V 2672 2160 V 2674 2160 V 2676 2161 V 2678 2161
V 2680 2162 V 2682 2162 V 2684 2162 V 2686 2163 V 2688
2163 V 2690 2164 V 2692 2164 V 2694 2165 V 2696 2165
V 2698 2166 V 2700 2166 V 2702 2167 V 2704 2167 V 2706
2168 V 2708 2168 V 2710 2169 V 2712 2169 V 2714 2170
V 2716 2170 V 2718 2171 V 2720 2171 V 2722 2172 V 2724
2172 V 2726 2173 V 2728 2173 V 2730 2174 V 2732 2174
V 2734 2175 V 2736 2175 V 2738 2176 V 2740 2176 V 2742
2177 V 2744 2177 V 2746 2178 V 2748 2179 V 2750 2179
V 2752 2180 V 2754 2180 V 2756 2181 V 2758 2181 V 2760
2182 V 2762 2183 V 2764 2183 V 2766 2184 V 2768 2184
V 2770 2185 V 2772 2185 V 2774 2186 V 2776 2187 V 2778
2187 V 2780 2188 V 2782 2189 V 2784 2189 V 2786 2190
V 2788 2190 V 2790 2191 V 2792 2192 V 2794 2192 V 2797
2193 V 2799 2194 V 2801 2194 V 2803 2195 V 2805 2196
V 2807 2196 V 2809 2197 V 2811 2198 V 2813 2198 V 2815
2199 V 2817 2200 V 2819 2200 V 2821 2201 V 2823 2202
V 2825 2202 V 2827 2203 V 2829 2204 V 2831 2204 V 2833
2205 V 2835 2206 V 2837 2207 V 2839 2207 V 2841 2208
V 2867 2202 2 2 v 2868 2203 169 4 v 3037 2202 2 2 v 2866
2303 4 100 v 3039 2303 V 2867 2306 2 2 v 2868 2307 169
4 v 3037 2306 2 2 v 2892 2277 a FK(100)p 0 0 1 TeXcolorrgb
843 2489 a(V)-5 b(aleur)19 b(initiale)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1670 2480 a(A)o(pr\350s)e(la)g(baisse)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2524 2489 a(R)o(etour)g(\340)g(la)h
(valeur)g(initiale)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
80 2628 a(???)p 0 TeXcolorgray 13 w FG(\306)c FK(100)c
FG(\245)g FK(50)17 b FG(\306)e FK(2)f FG(\306)g FK(200)19
b(\045.)f(Or)f(200)h(\045)d FG(\306)f FK(100)19 b(\045)10
b FG(\305)g FK(100)19 b(\045,)e(donc)g(le)h(taux)g(r\351ciproque)f(de)g
FG(\241)p FK(50)i(\045)e(est)h FG(\305)p FK(100)h(\045.)80
2728 y FL(R)o(emarque)13 b(:)18 b FK(A)n(ugmenter)g(un)g(nombr)o(e)f
(de)g(100)i(\045)e(r)o(evient)h(\340)f(le)h(multiplier)i(par)d(2.)-246
2807 y
SDict begin H.S end
 -246 2807 a -246 2807 a
SDict begin 12 H.A end
 -246 2807 a -246 2807
a
SDict begin [/View [/XYZ H.V]/Dest (exo.95) cvn /DEST pdfmark end
 -246 2807 a -246 2822 a
SDict begin H.S end
 -246 2822 a -246 2822 a
SDict begin 12 H.A end
 -246
2822 a -246 2822 a
SDict begin [/View [/XYZ H.V]/Dest (Item.293) cvn /DEST pdfmark end
 -246 2822 a 0 TeXcolorgray 92 x FL(Ex)o(er)o(cice)d
(95)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)h(par)q(t)h(de)f(la)h(valeur)g(100)h(et)g(on)e(augmente)i(10)g
(fois)g(de)e(suite)i(de)e(5)i(\045)9 b(;)15 b(autr)o(ement)i(dit,)f(on)
g(multiplie)i(10)f(fois)f(de)g(suite)h(par)-38 3013 y(1,05.)p
0 TeXcolorgray 0 TeXcolorgray 604 3167 2 2 v 605 3168
169 4 v 774 3167 2 2 v 603 3267 4 100 v 776 3267 V 604
3270 2 2 v 605 3271 169 4 v 774 3270 2 2 v 629 3242 a(100)p
1 0 0 TeXcolorrgb 1117 3114 a FH(\243)p FI(1,05)p 0 TeXcolorgray
800 3172 4 4 v 802 3171 V 804 3170 V 806 3169 V 808 3169
V 810 3168 V 812 3167 V 814 3167 V 816 3166 V 818 3165
V 820 3165 V 822 3164 V 824 3163 V 826 3163 V 828 3162
V 830 3161 V 831 3161 V 833 3160 V 835 3159 V 837 3159
V 839 3158 V 841 3157 V 843 3157 V 845 3156 V 847 3155
V 849 3155 V 851 3154 V 853 3153 V 855 3153 V 857 3152
V 859 3152 V 861 3151 V 863 3150 V 865 3150 V 867 3149
V 869 3149 V 871 3148 V 873 3147 V 875 3147 V 877 3146
V 878 3146 V 880 3145 V 882 3145 V 884 3144 V 886 3143
V 888 3143 V 890 3142 V 892 3142 V 894 3141 V 896 3141
V 898 3140 V 900 3140 V 902 3139 V 904 3139 V 906 3138
V 908 3138 V 910 3137 V 912 3137 V 914 3136 V 916 3135
V 918 3135 V 920 3134 V 922 3134 V 924 3133 V 926 3133
V 927 3133 V 929 3132 V 931 3132 V 933 3131 V 935 3131
V 937 3130 V 939 3130 V 941 3129 V 943 3129 V 945 3128
V 947 3128 V 949 3127 V 951 3127 V 953 3127 V 955 3126
V 957 3126 V 959 3125 V 961 3125 V 963 3124 V 965 3124
V 967 3124 V 969 3123 V 971 3123 V 973 3122 V 975 3122
V 976 3122 V 978 3121 V 980 3121 V 982 3120 V 984 3120
V 986 3120 V 988 3119 V 990 3119 V 992 3119 V 994 3118
V 996 3118 V 998 3117 V 1000 3117 V 1002 3117 V 1004
3116 V 1006 3116 V 1008 3116 V 1010 3115 V 1012 3115
V 1014 3115 V 1016 3114 V 1018 3114 V 1020 3114 V 1022
3113 V 1023 3113 V 1025 3113 V 1027 3113 V 1029 3112
V 1031 3112 V 1033 3112 V 1035 3111 V 1037 3111 V 1039
3111 V 1041 3111 V 1043 3110 V 1045 3110 V 1047 3110
V 1049 3110 V 1051 3109 V 1053 3109 V 1055 3109 V 1057
3108 V 1059 3108 V 1061 3108 V 1063 3108 V 1065 3108
V 1067 3107 V 1069 3107 V 1071 3107 V 1072 3107 V 1074
3106 V 1076 3106 V 1078 3106 V 1080 3106 V 1082 3106
V 1084 3105 V 1086 3105 V 1088 3105 V 1090 3105 V 1092
3105 V 1094 3104 V 1096 3104 V 1098 3104 V 1100 3104
V 1102 3104 V 1104 3104 V 1106 3103 V 1108 3103 V 1110
3103 V 1112 3103 V 1114 3103 V 1583 3170 a Fb(\))p Fa(\))p
1266 3103 V 1268 3103 V 1270 3103 V 1272 3103 V 1274
3103 V 1276 3104 V 1278 3104 V 1280 3104 V 1282 3104
V 1284 3104 V 1286 3104 V 1288 3105 V 1290 3105 V 1292
3105 V 1294 3105 V 1296 3105 V 1298 3106 V 1300 3106
V 1302 3106 V 1304 3106 V 1306 3106 V 1308 3107 V 1310
3107 V 1312 3107 V 1313 3107 V 1315 3108 V 1317 3108
V 1319 3108 V 1321 3108 V 1323 3108 V 1325 3109 V 1327
3109 V 1329 3109 V 1331 3110 V 1333 3110 V 1335 3110
V 1337 3110 V 1339 3111 V 1341 3111 V 1343 3111 V 1345
3111 V 1347 3112 V 1349 3112 V 1351 3112 V 1353 3113
V 1355 3113 V 1357 3113 V 1359 3113 V 1361 3114 V 1362
3114 V 1364 3114 V 1366 3115 V 1368 3115 V 1370 3115
V 1372 3116 V 1374 3116 V 1376 3116 V 1378 3117 V 1380
3117 V 1382 3117 V 1384 3118 V 1386 3118 V 1388 3119
V 1390 3119 V 1392 3119 V 1394 3120 V 1396 3120 V 1398
3120 V 1400 3121 V 1402 3121 V 1404 3122 V 1406 3122
V 1408 3122 V 1409 3123 V 1411 3123 V 1413 3124 V 1415
3124 V 1417 3124 V 1419 3125 V 1421 3125 V 1423 3126
V 1425 3126 V 1427 3127 V 1429 3127 V 1431 3127 V 1433
3128 V 1435 3128 V 1437 3129 V 1439 3129 V 1441 3130
V 1443 3130 V 1445 3131 V 1447 3131 V 1449 3132 V 1451
3132 V 1453 3133 V 1455 3133 V 1457 3133 V 1458 3134
V 1460 3134 V 1462 3135 V 1464 3135 V 1466 3136 V 1468
3137 V 1470 3137 V 1472 3138 V 1474 3138 V 1476 3139
V 1478 3139 V 1480 3140 V 1482 3140 V 1484 3141 V 1486
3141 V 1488 3142 V 1490 3142 V 1492 3143 V 1494 3143
V 1496 3144 V 1498 3145 V 1500 3145 V 1502 3146 V 1504
3146 V 1506 3147 V 1507 3147 V 1509 3148 V 1511 3149
V 1513 3149 V 1515 3150 V 1517 3150 V 1519 3151 V 1521
3152 V 1523 3152 V 1525 3153 V 1527 3153 V 1529 3154
V 1531 3155 V 1533 3155 V 1535 3156 V 1537 3157 V 1539
3157 V 1541 3158 V 1543 3159 V 1545 3159 V 1547 3160
V 1549 3161 V 1551 3161 V 1553 3162 V 1554 3163 V 1556
3163 V 1558 3164 V 1560 3165 V 1562 3165 V 1564 3166
V 1566 3167 V 1568 3167 V 1570 3168 V 1572 3169 V 1574
3169 V 1576 3170 V 1578 3171 V 1580 3172 V 1607 3167
2 2 v 1608 3168 169 4 v 1777 3167 2 2 v 1606 3267 4 100
v 1779 3267 V 1607 3270 2 2 v 1608 3271 169 4 v 1777
3270 2 2 v 1633 3242 a FK(105)p 1 0 0 TeXcolorrgb 2154
3114 a FH(\243)p FI(1,05)p 0 TeXcolorgray 1802 3174 4
4 v 1805 3174 V 1807 3173 V 1809 3172 V 1811 3172 V 1813
3171 V 1815 3170 V 1817 3169 V 1819 3169 V 1821 3168
V 1823 3167 V 1825 3167 V 1828 3166 V 1830 3165 V 1832
3165 V 1834 3164 V 1836 3163 V 1838 3163 V 1840 3162
V 1842 3161 V 1844 3161 V 1846 3160 V 1848 3159 V 1851
3159 V 1853 3158 V 1855 3157 V 1857 3157 V 1859 3156
V 1861 3155 V 1863 3155 V 1865 3154 V 1867 3153 V 1869
3153 V 1871 3152 V 1874 3152 V 1876 3151 V 1878 3150
V 1880 3150 V 1882 3149 V 1884 3149 V 1886 3148 V 1888
3147 V 1890 3147 V 1892 3146 V 1894 3146 V 1897 3145
V 1899 3145 V 1901 3144 V 1903 3143 V 1905 3143 V 1907
3142 V 1909 3142 V 1911 3141 V 1913 3141 V 1915 3140
V 1917 3140 V 1920 3139 V 1922 3139 V 1924 3138 V 1926
3138 V 1928 3137 V 1930 3137 V 1932 3136 V 1934 3135
V 1936 3135 V 1938 3134 V 1940 3134 V 1943 3133 V 1945
3133 V 1947 3133 V 1949 3132 V 1951 3132 V 1953 3131
V 1955 3131 V 1957 3130 V 1959 3130 V 1961 3129 V 1963
3129 V 1966 3128 V 1968 3128 V 1970 3127 V 1972 3127
V 1974 3127 V 1976 3126 V 1978 3126 V 1980 3125 V 1982
3125 V 1984 3124 V 1986 3124 V 1989 3124 V 1991 3123
V 1993 3123 V 1995 3122 V 1997 3122 V 1999 3122 V 2001
3121 V 2003 3121 V 2005 3120 V 2007 3120 V 2009 3120
V 2012 3119 V 2014 3119 V 2016 3119 V 2018 3118 V 2020
3118 V 2022 3117 V 2024 3117 V 2026 3117 V 2028 3116
V 2030 3116 V 2032 3116 V 2035 3115 V 2037 3115 V 2039
3115 V 2041 3114 V 2043 3114 V 2045 3114 V 2047 3113
V 2049 3113 V 2051 3113 V 2053 3113 V 2055 3112 V 2058
3112 V 2060 3112 V 2062 3111 V 2064 3111 V 2066 3111
V 2068 3111 V 2070 3110 V 2072 3110 V 2074 3110 V 2076
3110 V 2078 3109 V 2081 3109 V 2083 3109 V 2085 3108
V 2087 3108 V 2089 3108 V 2091 3108 V 2093 3108 V 2095
3107 V 2097 3107 V 2099 3107 V 2101 3107 V 2104 3106
V 2106 3106 V 2108 3106 V 2110 3106 V 2112 3106 V 2114
3105 V 2116 3105 V 2118 3105 V 2120 3105 V 2122 3105
V 2124 3104 V 2127 3104 V 2129 3104 V 2131 3104 V 2133
3104 V 2135 3104 V 2137 3103 V 2139 3103 V 2141 3103
V 2143 3103 V 2145 3103 V 2147 3103 V 2150 3103 V 2152
3103 V 2603 3156 a Fb(*)p Fa(*)p 2302 3103 V 2304 3103
V 2306 3103 V 2308 3103 V 2311 3103 V 2313 3103 V 2315
3103 V 2317 3103 V 2319 3104 V 2321 3104 V 2323 3104
V 2325 3104 V 2327 3104 V 2329 3104 V 2331 3105 V 2334
3105 V 2336 3105 V 2338 3105 V 2340 3105 V 2342 3106
V 2344 3106 V 2346 3106 V 2348 3106 V 2350 3106 V 2352
3107 V 2354 3107 V 2357 3107 V 2359 3107 V 2361 3108
V 2363 3108 V 2365 3108 V 2367 3108 V 2369 3108 V 2371
3109 V 2373 3109 V 2375 3109 V 2377 3110 V 2380 3110
V 2382 3110 V 2384 3110 V 2386 3111 V 2388 3111 V 2390
3111 V 2392 3111 V 2394 3112 V 2396 3112 V 2398 3112
V 2400 3113 V 2403 3113 V 2405 3113 V 2407 3113 V 2409
3114 V 2411 3114 V 2413 3114 V 2415 3115 V 2417 3115
V 2419 3115 V 2421 3116 V 2423 3116 V 2426 3116 V 2428
3117 V 2430 3117 V 2432 3117 V 2434 3118 V 2436 3118
V 2438 3119 V 2440 3119 V 2442 3119 V 2444 3120 V 2446
3120 V 2449 3120 V 2451 3121 V 2453 3121 V 2455 3122
V 2457 3122 V 2459 3122 V 2461 3123 V 2463 3123 V 2465
3124 V 2467 3124 V 2469 3124 V 2472 3125 V 2474 3125
V 2476 3126 V 2478 3126 V 2480 3127 V 2482 3127 V 2484
3127 V 2486 3128 V 2488 3128 V 2490 3129 V 2492 3129
V 2495 3130 V 2497 3130 V 2499 3131 V 2501 3131 V 2503
3132 V 2505 3132 V 2507 3133 V 2509 3133 V 2511 3133
V 2513 3134 V 2515 3134 V 2518 3135 V 2520 3135 V 2522
3136 V 2524 3137 V 2526 3137 V 2528 3138 V 2530 3138
V 2532 3139 V 2534 3139 V 2536 3140 V 2538 3140 V 2541
3141 V 2543 3141 V 2545 3142 V 2547 3142 V 2549 3143
V 2551 3143 V 2553 3144 V 2555 3145 V 2557 3145 V 2559
3146 V 2561 3146 V 2564 3147 V 2566 3147 V 2568 3148
V 2570 3149 V 2572 3149 V 2574 3150 V 2576 3150 V 2578
3151 V 2580 3152 V 2582 3152 V 2584 3153 V 2587 3153
V 2589 3154 V 2591 3155 V 2593 3155 V 2595 3156 V 2597
3157 V 2599 3157 V 2627 3162 2 2 v 2628 3163 270 4 v
2898 3162 2 2 v 2626 3273 4 111 v 2900 3273 V 2627 3276
2 2 v 2628 3277 270 4 v 2898 3276 2 2 v 2652 3237 a FK(110,25)p
1 0 0 TeXcolorrgb 3101 3114 a FH(\243)p FI(1,05)p 0 TeXcolorgray
2925 3143 4 4 v 2926 3143 V 2928 3142 V 2930 3142 V 2931
3141 V 2933 3141 V 2934 3140 V 2936 3140 V 2938 3139
V 2939 3139 V 2941 3138 V 2942 3138 V 2944 3137 V 2946
3137 V 2947 3136 V 2949 3135 V 2950 3135 V 2952 3134
V 2954 3134 V 2955 3133 V 2957 3133 V 2959 3133 V 2960
3132 V 2962 3132 V 2963 3131 V 2965 3131 V 2967 3130
V 2968 3130 V 2970 3129 V 2971 3129 V 2973 3128 V 2975
3128 V 2976 3127 V 2978 3127 V 2979 3127 V 2981 3126
V 2983 3126 V 2984 3125 V 2986 3125 V 2987 3124 V 2989
3124 V 2991 3124 V 2992 3123 V 2994 3123 V 2997 3122
V 3000 3121 V 3004 3120 V 3007 3120 V 3010 3119 V 3013
3118 V 3016 3117 V 3020 3117 V 3023 3116 V 3026 3115
V 3029 3115 V 3033 3114 V 3036 3113 V 3039 3113 V 3042
3112 V 3045 3112 V 3049 3111 V 3052 3111 V 3055 3110
V 3058 3110 V 3061 3109 V 3065 3108 V 3068 3108 V 3071
3108 V 3074 3107 V 3078 3107 V 3081 3106 V 3084 3106
V 3087 3105 V 3090 3105 V 3094 3105 V 3097 3104 V 3494
3169 a Fb(\()p Fa(\()p 3251 3104 V 3255 3105 V 3258 3105
V 3261 3105 V 3264 3106 V 3267 3106 V 3271 3107 V 3274
3107 V 3277 3108 V 3280 3108 V 3284 3108 V 3287 3109
V 3290 3110 V 3293 3110 V 3296 3111 V 3300 3111 V 3303
3112 V 3306 3112 V 3309 3113 V 3312 3113 V 3316 3114
V 3319 3115 V 3322 3115 V 3325 3116 V 3329 3117 V 3332
3117 V 3335 3118 V 3338 3119 V 3341 3120 V 3345 3120
V 3348 3121 V 3351 3122 V 3354 3123 V 3356 3123 V 3358
3124 V 3359 3124 V 3361 3124 V 3362 3125 V 3364 3125
V 3366 3126 V 3367 3126 V 3369 3127 V 3370 3127 V 3372
3127 V 3374 3128 V 3375 3128 V 3377 3129 V 3378 3129
V 3380 3130 V 3382 3130 V 3383 3131 V 3385 3131 V 3387
3132 V 3388 3132 V 3390 3133 V 3391 3133 V 3393 3133
V 3395 3134 V 3396 3134 V 3398 3135 V 3399 3135 V 3401
3136 V 3403 3137 V 3404 3137 V 3406 3138 V 3407 3138
V 3409 3139 V 3411 3139 V 3412 3140 V 3414 3140 V 3415
3141 V 3417 3141 V 3419 3142 V 3420 3142 V 3422 3143
V 3424 3143 V 3425 3144 V 3427 3145 V 3428 3145 V 3430
3146 V 3432 3146 V 3433 3147 V 3435 3147 V 3436 3148
V 3438 3149 V 3440 3149 V 3441 3150 V 3443 3150 V 3444
3151 V 3446 3152 V 3448 3152 V 3449 3153 V 3451 3153
V 3452 3154 V 3454 3155 V 3456 3155 V 3457 3156 V 3459
3157 V 3461 3157 V 3462 3158 V 3464 3159 V 3465 3159
V 3467 3160 V 3469 3161 V 3470 3161 V 3472 3162 V 3473
3163 V 3475 3163 V 3477 3164 V 3478 3165 V 3480 3165
V 3481 3166 V 3483 3167 V 3485 3167 V 3486 3168 V 3488
3169 V 3489 3169 V 3491 3170 V 3518 3179 2 2 v 3520 3180
135 4 v 3655 3179 2 2 v 3517 3255 4 76 v 3657 3255 V
3518 3258 2 2 v 3520 3259 135 4 v 3655 3258 2 2 v 3544
3230 a FG(\242)8 b(\242)g(\242)p 0 0 1 TeXcolorrgb 451
3459 a FK(V)-5 b(aleur)19 b(initiale)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1378 3451 a(A)o(pr\350s)e(la)g(1)1709
3427 y Fg(r)o(e)1771 3451 y FK(hausse)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 449 w(A)o(pr\350s)g(la)h(2)2789 3427
y Fg(e)2832 3451 y FK(hausse)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
3544 3444 a FG(\242)8 b(\242)g(\242)p 0 TeXcolorgray
-38 3600 a FK(Le)18 b(r\351sultat)g(apr\350s)g(10)g(hausses)h
(successives)h(de)d(5)g(\045)h(est)1162 3760 y(100)10
b FG(\243)g FK(1,)e(05)i FG(\243)g FK(1,)e(05)i FG(\243)h(\242)d(\242)g
(\242)17 b(\243)10 b FK(1,)e(05)1357 3805 y Ft(|)p 1391
3805 310 10 v 310 w({z)p 1769 3805 V 310 w(})1653 3886
y FI(10)k(fois)2129 3760 y FG(\306)i FK(100)c FG(\243)g
FK(1,)e(05)2541 3726 y FI(10)2625 3760 y FG(\274)14 b
FK(162,)8 b(89.)-38 4030 y(C)o(onclusion)19 b(:)f(dix)f(augmentations)i
(successives)g(de)f(5)f(\045)g(font)i(une)f(augmentation)h(de)e(62,89)i
(\045.)-246 4060 y
SDict begin H.S end
 -246 4060 a -246 4060 a
SDict begin 12 H.A end
 -246 4060
a -246 4060 a
SDict begin [/View [/XYZ H.V]/Dest (Item.294) cvn /DEST pdfmark end
 -246 4060 a 0 TeXcolorgray -141 4151 a
FK(2.)p 0 TeXcolorgray 43 w(P)n(our)c(r\351soudr)o(e)h(le)g
(probl\350me)o(,)g(on)g(par)q(t)g(de)f(la)h(valeur)g(100)i(et)e(on)g
(fait)g(le)h(sch\351ma)f(habituel,)i(sachant)e(qu)n('on)g(multiplie)j
(deux)d(fois)h(de)e(suite)-38 4251 y(par)i(un)h(m\352me)h(nombr)o(e)g
FB(x)j FK(inconnu)d(\(puisqu)n('on)g(a)e(deux)g(fois)i(le)e(m\352me)i
(pour)o(centage)f(d)n('augmentation\))h(:)p 0 TeXcolorgray
0 TeXcolorgray 996 4404 2 2 v 998 4405 169 4 v 1167 4404
2 2 v 996 4504 4 100 v 1169 4504 V 996 4507 2 2 v 998
4508 169 4 v 1167 4507 2 2 v 1022 4479 a(100)p 1 0 0
TeXcolorrgb 1496 4349 a FH(\243)q Fw(x)p 0 TeXcolorgray
1192 4404 4 4 v 1194 4403 V 1196 4403 V 1198 4402 V 1199
4401 V 1201 4401 V 1203 4400 V 1205 4399 V 1206 4398
V 1208 4398 V 1210 4397 V 1212 4397 V 1214 4396 V 1215
4395 V 1217 4395 V 1219 4394 V 1221 4393 V 1222 4393
V 1224 4392 V 1226 4391 V 1228 4391 V 1229 4390 V 1231
4390 V 1233 4389 V 1235 4388 V 1236 4388 V 1238 4387
V 1240 4386 V 1242 4386 V 1244 4385 V 1245 4385 V 1247
4384 V 1249 4384 V 1251 4383 V 1252 4382 V 1254 4382
V 1256 4381 V 1258 4381 V 1259 4380 V 1261 4380 V 1263
4379 V 1265 4378 V 1266 4378 V 1268 4377 V 1270 4377
V 1272 4376 V 1274 4376 V 1275 4375 V 1277 4375 V 1279
4374 V 1281 4374 V 1282 4373 V 1284 4373 V 1286 4372
V 1288 4372 V 1289 4371 V 1291 4371 V 1293 4370 V 1295
4370 V 1296 4369 V 1298 4369 V 1300 4368 V 1302 4368
V 1304 4367 V 1305 4367 V 1307 4366 V 1309 4366 V 1311
4365 V 1312 4365 V 1314 4365 V 1316 4364 V 1318 4364
V 1319 4363 V 1321 4363 V 1323 4362 V 1325 4362 V 1326
4361 V 1328 4361 V 1330 4361 V 1332 4360 V 1334 4360
V 1335 4359 V 1337 4359 V 1339 4359 V 1341 4358 V 1342
4358 V 1344 4357 V 1346 4357 V 1348 4357 V 1349 4356
V 1351 4356 V 1353 4356 V 1355 4355 V 1356 4355 V 1358
4354 V 1360 4354 V 1362 4354 V 1364 4353 V 1365 4353
V 1367 4353 V 1369 4352 V 1371 4352 V 1372 4352 V 1374
4351 V 1376 4351 V 1378 4351 V 1379 4350 V 1381 4350
V 1383 4350 V 1385 4350 V 1386 4349 V 1388 4349 V 1390
4349 V 1392 4348 V 1394 4348 V 1395 4348 V 1397 4347
V 1399 4347 V 1401 4347 V 1402 4347 V 1404 4346 V 1406
4346 V 1408 4346 V 1409 4346 V 1411 4345 V 1413 4345
V 1415 4345 V 1416 4345 V 1418 4344 V 1420 4344 V 1422
4344 V 1424 4344 V 1425 4344 V 1427 4343 V 1429 4343
V 1431 4343 V 1432 4343 V 1434 4342 V 1436 4342 V 1438
4342 V 1439 4342 V 1441 4342 V 1443 4341 V 1445 4341
V 1446 4341 V 1448 4341 V 1450 4341 V 1452 4341 V 1454
4340 V 1455 4340 V 1457 4340 V 1459 4340 V 1461 4340
V 1462 4340 V 1464 4340 V 1466 4339 V 1468 4339 V 1469
4339 V 1471 4339 V 1473 4339 V 1475 4339 V 1477 4339
V 1478 4339 V 1480 4338 V 1482 4338 V 1484 4338 V 1485
4338 V 1487 4338 V 1489 4338 V 1491 4338 V 1492 4338
V 1494 4338 V 1892 4409 a Fb(\()p Fa(\()p 1572 4338 V
1574 4338 V 1575 4338 V 1577 4338 V 1579 4338 V 1581
4338 V 1582 4338 V 1584 4338 V 1586 4338 V 1588 4339
V 1589 4339 V 1591 4339 V 1593 4339 V 1595 4339 V 1597
4339 V 1598 4339 V 1600 4339 V 1602 4340 V 1604 4340
V 1605 4340 V 1607 4340 V 1609 4340 V 1611 4340 V 1612
4340 V 1614 4341 V 1616 4341 V 1618 4341 V 1619 4341
V 1621 4341 V 1623 4341 V 1625 4342 V 1627 4342 V 1628
4342 V 1630 4342 V 1632 4342 V 1634 4343 V 1635 4343
V 1637 4343 V 1639 4343 V 1641 4344 V 1642 4344 V 1644
4344 V 1646 4344 V 1648 4344 V 1649 4345 V 1651 4345
V 1653 4345 V 1655 4345 V 1657 4346 V 1658 4346 V 1660
4346 V 1662 4346 V 1664 4347 V 1665 4347 V 1667 4347
V 1669 4347 V 1671 4348 V 1672 4348 V 1674 4348 V 1676
4349 V 1678 4349 V 1679 4349 V 1681 4350 V 1683 4350
V 1685 4350 V 1687 4350 V 1688 4351 V 1690 4351 V 1692
4351 V 1694 4352 V 1695 4352 V 1697 4352 V 1699 4353
V 1701 4353 V 1702 4353 V 1704 4354 V 1706 4354 V 1708
4354 V 1709 4355 V 1711 4355 V 1713 4356 V 1715 4356
V 1717 4356 V 1718 4357 V 1720 4357 V 1722 4357 V 1724
4358 V 1725 4358 V 1727 4359 V 1729 4359 V 1731 4359
V 1732 4360 V 1734 4360 V 1736 4361 V 1738 4361 V 1739
4361 V 1741 4362 V 1743 4362 V 1745 4363 V 1747 4363
V 1748 4364 V 1750 4364 V 1752 4365 V 1754 4365 V 1755
4365 V 1757 4366 V 1759 4366 V 1761 4367 V 1762 4367
V 1764 4368 V 1766 4368 V 1768 4369 V 1769 4369 V 1771
4370 V 1773 4370 V 1775 4371 V 1777 4371 V 1778 4372
V 1780 4372 V 1782 4373 V 1784 4373 V 1785 4374 V 1787
4374 V 1789 4375 V 1791 4375 V 1792 4376 V 1794 4376
V 1796 4377 V 1798 4377 V 1799 4378 V 1801 4378 V 1803
4379 V 1805 4380 V 1807 4380 V 1808 4381 V 1810 4381
V 1812 4382 V 1814 4382 V 1815 4383 V 1817 4384 V 1819
4384 V 1821 4385 V 1822 4385 V 1824 4386 V 1826 4386
V 1828 4387 V 1829 4388 V 1831 4388 V 1833 4389 V 1835
4390 V 1837 4390 V 1838 4391 V 1840 4391 V 1842 4392
V 1844 4393 V 1845 4393 V 1847 4394 V 1849 4395 V 1851
4395 V 1852 4396 V 1854 4397 V 1856 4397 V 1858 4398
V 1859 4398 V 1861 4399 V 1863 4400 V 1865 4401 V 1867
4401 V 1868 4402 V 1870 4403 V 1872 4403 V 1874 4404
V 1875 4405 V 1877 4405 V 1879 4406 V 1881 4407 V 1882
4407 V 1884 4408 V 1886 4409 V 1888 4410 V 1889 4410
V 1916 4402 2 2 v 1918 4403 136 4 v 2054 4402 2 2 v 1915
4506 4 103 v 2056 4506 V 1916 4509 2 2 v 1918 4510 136
4 v 2054 4509 2 2 v 1942 4480 a FK(???)p 1 0 0 TeXcolorrgb
2433 4349 a FH(\243)q Fw(x)p 0 TeXcolorgray 2080 4413
4 4 v 2081 4413 V 2083 4412 V 2085 4411 V 2087 4410 V
2089 4410 V 2091 4409 V 2093 4408 V 2095 4407 V 2097
4407 V 2099 4406 V 2100 4405 V 2102 4405 V 2104 4404
V 2106 4403 V 2108 4403 V 2110 4402 V 2112 4401 V 2114
4401 V 2116 4400 V 2118 4399 V 2119 4398 V 2121 4398
V 2123 4397 V 2125 4397 V 2127 4396 V 2129 4395 V 2131
4395 V 2133 4394 V 2135 4393 V 2136 4393 V 2138 4392
V 2140 4391 V 2142 4391 V 2144 4390 V 2146 4390 V 2148
4389 V 2150 4388 V 2152 4388 V 2154 4387 V 2155 4386
V 2157 4386 V 2159 4385 V 2161 4385 V 2163 4384 V 2165
4384 V 2167 4383 V 2169 4382 V 2171 4382 V 2173 4381
V 2174 4381 V 2176 4380 V 2178 4380 V 2180 4379 V 2182
4378 V 2184 4378 V 2186 4377 V 2188 4377 V 2190 4376
V 2191 4376 V 2193 4375 V 2195 4375 V 2197 4374 V 2199
4374 V 2201 4373 V 2203 4373 V 2205 4372 V 2207 4372
V 2209 4371 V 2210 4371 V 2212 4370 V 2214 4370 V 2216
4369 V 2218 4369 V 2220 4368 V 2222 4368 V 2224 4367
V 2226 4367 V 2228 4366 V 2229 4366 V 2231 4365 V 2233
4365 V 2235 4365 V 2237 4364 V 2239 4364 V 2241 4363
V 2243 4363 V 2245 4362 V 2246 4362 V 2248 4361 V 2250
4361 V 2252 4361 V 2254 4360 V 2256 4360 V 2258 4359
V 2260 4359 V 2262 4359 V 2264 4358 V 2265 4358 V 2267
4357 V 2269 4357 V 2271 4357 V 2273 4356 V 2275 4356
V 2277 4356 V 2279 4355 V 2281 4355 V 2282 4354 V 2284
4354 V 2286 4354 V 2288 4353 V 2290 4353 V 2292 4353
V 2294 4352 V 2296 4352 V 2298 4352 V 2300 4351 V 2301
4351 V 2303 4351 V 2305 4350 V 2307 4350 V 2309 4350
V 2311 4350 V 2313 4349 V 2315 4349 V 2317 4349 V 2319
4348 V 2320 4348 V 2322 4348 V 2324 4347 V 2326 4347
V 2328 4347 V 2330 4347 V 2332 4346 V 2334 4346 V 2336
4346 V 2337 4346 V 2339 4345 V 2341 4345 V 2343 4345
V 2345 4345 V 2347 4344 V 2349 4344 V 2351 4344 V 2353
4344 V 2355 4344 V 2356 4343 V 2358 4343 V 2360 4343
V 2362 4343 V 2364 4342 V 2366 4342 V 2368 4342 V 2370
4342 V 2372 4342 V 2374 4341 V 2375 4341 V 2377 4341
V 2379 4341 V 2381 4341 V 2383 4341 V 2385 4340 V 2387
4340 V 2389 4340 V 2391 4340 V 2392 4340 V 2394 4340
V 2396 4340 V 2398 4339 V 2400 4339 V 2402 4339 V 2404
4339 V 2406 4339 V 2408 4339 V 2410 4339 V 2411 4339
V 2413 4338 V 2415 4338 V 2417 4338 V 2419 4338 V 2421
4338 V 2423 4338 V 2425 4338 V 2427 4338 V 2429 4338
V 2430 4338 V 2847 4406 a Fb(\))p Fa(\))p 2510 4338 V
2512 4338 V 2514 4338 V 2516 4338 V 2518 4338 V 2520
4338 V 2521 4338 V 2523 4338 V 2525 4338 V 2527 4338
V 2529 4339 V 2531 4339 V 2533 4339 V 2535 4339 V 2537
4339 V 2539 4339 V 2540 4339 V 2542 4339 V 2544 4340
V 2546 4340 V 2548 4340 V 2550 4340 V 2552 4340 V 2554
4340 V 2556 4340 V 2557 4341 V 2559 4341 V 2561 4341
V 2563 4341 V 2565 4341 V 2567 4341 V 2569 4342 V 2571
4342 V 2573 4342 V 2575 4342 V 2576 4342 V 2578 4343
V 2580 4343 V 2582 4343 V 2584 4343 V 2586 4344 V 2588
4344 V 2590 4344 V 2592 4344 V 2594 4344 V 2595 4345
V 2597 4345 V 2599 4345 V 2601 4345 V 2603 4346 V 2605
4346 V 2607 4346 V 2609 4346 V 2611 4347 V 2612 4347
V 2614 4347 V 2616 4347 V 2618 4348 V 2620 4348 V 2622
4348 V 2624 4349 V 2626 4349 V 2628 4349 V 2630 4350
V 2631 4350 V 2633 4350 V 2635 4350 V 2637 4351 V 2639
4351 V 2641 4351 V 2643 4352 V 2645 4352 V 2647 4352
V 2648 4353 V 2650 4353 V 2652 4353 V 2654 4354 V 2656
4354 V 2658 4354 V 2660 4355 V 2662 4355 V 2664 4356
V 2666 4356 V 2667 4356 V 2669 4357 V 2671 4357 V 2673
4357 V 2675 4358 V 2677 4358 V 2679 4359 V 2681 4359
V 2683 4359 V 2685 4360 V 2686 4360 V 2688 4361 V 2690
4361 V 2692 4361 V 2694 4362 V 2696 4362 V 2698 4363
V 2700 4363 V 2702 4364 V 2703 4364 V 2705 4365 V 2707
4365 V 2709 4365 V 2711 4366 V 2713 4366 V 2715 4367
V 2717 4367 V 2719 4368 V 2721 4368 V 2722 4369 V 2724
4369 V 2726 4370 V 2728 4370 V 2730 4371 V 2732 4371
V 2734 4372 V 2736 4372 V 2738 4373 V 2740 4373 V 2741
4374 V 2743 4374 V 2745 4375 V 2747 4375 V 2749 4376
V 2751 4376 V 2753 4377 V 2755 4377 V 2757 4378 V 2758
4378 V 2760 4379 V 2762 4380 V 2764 4380 V 2766 4381
V 2768 4381 V 2770 4382 V 2772 4382 V 2774 4383 V 2776
4384 V 2777 4384 V 2779 4385 V 2781 4385 V 2783 4386
V 2785 4386 V 2787 4387 V 2789 4388 V 2791 4388 V 2793
4389 V 2795 4390 V 2796 4390 V 2798 4391 V 2800 4391
V 2802 4392 V 2804 4393 V 2806 4393 V 2808 4394 V 2810
4395 V 2812 4395 V 2813 4396 V 2815 4397 V 2817 4397
V 2819 4398 V 2821 4398 V 2823 4399 V 2825 4400 V 2827
4401 V 2829 4401 V 2831 4402 V 2832 4403 V 2834 4403
V 2836 4404 V 2838 4405 V 2840 4405 V 2842 4406 V 2844
4407 V 2871 4404 2 2 v 2873 4405 169 4 v 3042 4404 2
2 v 2870 4504 4 100 v 3043 4504 V 2871 4507 2 2 v 2873
4508 169 4 v 3042 4507 2 2 v 2897 4479 a FK(144)p 0 0 1
TeXcolorrgb 844 4692 a(V)-5 b(aleur)18 b(initiale)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 1671 4683 a(A)o(pr\350s)f(la)g(1)2002
4660 y Fg(r)o(e)2064 4683 y FK(hausse)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 350 w(A)o(pr\350s)g(la)g(2)2982 4660
y Fg(e)3025 4683 y FK(hausse)p 0 TeXcolorgray -38 4833
a(Deux)g(multiplications)k(par)e FB(x)j FK(font)c(une)g(multiplication)
j(par)c(1,)8 b(44,)19 b(donc)921 4993 y FB(x)c FG(\243)d
FB(x)20 b FG(\306)14 b FK(1,)8 b(44)476 b FB(x)1838 4959
y FI(2)1888 4993 y FG(\306)14 b FK(1,)8 b(44)476 b FB(x)20
b FG(\306)2709 4922 y Ft(p)p 2786 4922 150 5 v 2786 4993
a FK(1,)8 b(44)16 b FG(\306)e FK(1,)8 b(20.)-38 5205
y(C)o(onclusion)19 b(:)f(\340)f(chaque)h(\351tape)g(on)g(a)f
(multipli\351)j(par)d(1,20,)i(donc)e(on)h(a)f(augment\351)i(de)e(20)h
(\045.)f(A)n(utr)o(ement)h(dit,)i FB(t)i FG(\306)14 b
FK(20.)-246 5234 y
SDict begin H.S end
 -246 5234 a -246 5234 a
SDict begin 12 H.A end
 -246 5234
a -246 5234 a
SDict begin [/View [/XYZ H.V]/Dest (Item.295) cvn /DEST pdfmark end
 -246 5234 a 0 TeXcolorgray -141 5326 a
FK(3.)p 0 TeXcolorgray 43 w(La)j(technique)j(est)e(la)f(m\352me)i(que)f
(dans)f(la)g(question)i(pr\351c\351dente)g(:)1773 5414
y Ft(p)p 1850 5414 150 5 v 1850 5486 a FK(1,)8 b(26)16
b FG(\274)e FK(1,)8 b(1225,)-38 5646 y(donc)17 b(le)h(taux)f(d)n
('\351volution)j(\340)d(chaque)h(\351tape)g(est)g(12,)8
b(25)20 b(\045)d(environ.)h(A)n(utr)o(ement)g(dit,)i
FB(t)i FG(\306)14 b FK(12,)8 b(25.)p 0 TeXcolorgray 1909
5895 a(59)p 0 TeXcolorgray eop end
%%Page: 60 60
TeXDict begin 60 59 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.60) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (section.8) cvn /DEST pdfmark end
 -246 -246 a 83 x FM(8)105 b(O)o(p\351rations)23
b(sur)h(les)f(v)n(ecteurs)-246 -54 y
SDict begin H.S end
 -246 -54 a -246
-54 a
SDict begin 12 H.A end
 -246 -54 a -246 -54 a
SDict begin [/View [/XYZ H.V]/Dest (exo.96) cvn /DEST pdfmark end
 -246 -54 a -246 -69 a
SDict begin H.S end
 -246
-69 a -246 -69 a
SDict begin 12 H.A end
 -246 -69 a -246 -69 a
SDict begin [/View [/XYZ H.V]/Dest (Item.296) cvn /DEST pdfmark end
 -246 -69 a 0 TeXcolorgray
90 x FL(Ex)o(er)o(cice)14 b(96)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(On)j(a)23 b FB(A)s
FK(\()15 b(1)667 67 y Fw(x)702 77 y Fh(A)754 21 y FK(;)41
b(3)803 67 y Fw(y)836 77 y Fh(A)871 21 y FK(\))17 b(et)g
FB(B)7 b FK(\()16 b(4)1080 67 y Fw(x)1112 77 y Fh(B)1168
21 y FK(;)26 b FG(\241)p FK(1)1229 67 y Fw(y)1259 77
y Fh(B)1309 21 y FK(\).)p 0 TeXcolorgray 0 TeXcolorgray
1234 1583 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 197.4621 a add def
/d 0.0 a add neg def /h 171.85437 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1234 1583 a 1541 1186 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 160.47345 0.0 -36.98865 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 124.05397 0.0 -47.8004   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 160.47345  0 -36.98865  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -36.98865
 160.47345  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-47.8004  def /maxTickline 124.05397  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.05397
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 160.47345
0.0 -36.98865 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 124.05397  0 -47.8004  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -47.8004
 124.05397  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-36.98865  def /maxTickline 160.47345  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.05397
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 160.47345
0.0 -36.98865 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1526 1283 a FI(0)205
b(1)g(2)g(3)h(4)f(5)-1469 b FH(\241)p FI(1)1452 1205
y(0)1411 1441 y FH(\241)p FI(1)1452 969 y(1)1452 733
y(2)1452 496 y(3)1541 1186 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 71.13185
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -28.45274 71.13185
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1541 1186 a
tx@Dict begin { 30.729 91.04869 } PutCoor PutBegin  end
 1541 1186 a 0.30196 0.30196 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 1541 1186 a
tx@Dict begin  PutEnd  end
 1541
1186 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 -28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1541 1186
a
tx@Dict begin { 116.08723 -22.76227 } PutCoor PutBegin  end
 1541 1186 a 0.30196 0.30196 1 TeXcolorrgb FB(B)p 0
TeXcolorgray 1541 1186 a
tx@Dict begin  PutEnd  end
 1541 1186 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 71.13185
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1541 1186 a
tx@Dict begin { 73.40813 34.1432 } PutCoor PutBegin  end
 1541 1186 a 0 1 0 TeXcolorrgb
2 w FB(I)p 0 TeXcolorgray 1541 1186 a
tx@Dict begin  PutEnd  end
 1541 1186 a 2873
1583 a
currentpoint initclip moveto
 2873 1583 a 0 TeXcolorgray 7 1726 a FK(\225)p
0 TeXcolorgray 42 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g(de)h
FB(I)42 b FK(:)951 1932 y FB(I)995 1845 y Ft(\263)1039
1876 y FB(x)1084 1888 y Fw(A)1138 1876 y FG(\305)12 b
FB(x)1246 1888 y Fw(B)p 1037 1913 257 5 v 1145 1989 a
FK(2)1303 1932 y(;)1346 1876 y FB(y)1389 1888 y Fw(A)1442
1876 y FG(\305)i FB(y)1550 1888 y Fw(B)p 1342 1913 256
5 v 1449 1989 a FK(2)1607 1845 y Ft(\264)1795 1932 y
FB(I)1839 1822 y Ft(\265)1884 1876 y FK(1)c FG(\305)g
FK(4)p 1884 1913 157 5 v 1942 1989 a(2)2050 1932 y(;)2088
1876 y(3)g FG(\305)g FK(\()p FG(\241)p FK(1\))p 2088
1913 265 5 v 2201 1989 a(2)2363 1822 y Ft(\266)2553 1932
y FB(I)2597 1822 y Ft(\265)2642 1876 y FK(5)p 2642 1913
41 5 v 2642 1989 a(2)2693 1932 y(;)2731 1876 y(2)p 2731
1913 V 2731 1989 a(2)2781 1822 y Ft(\266)2972 1932 y
FB(I)3016 1933 y FK(\()3043 1932 y(2,)e(5;)g(1)3219 1933
y(\))3256 1932 y(.)p 0 TeXcolorgray 7 2179 a(\225)p 0
TeXcolorgray 42 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g(du)f
(vecteur)1425 2125 y FG(\241)-19 b(!)1431 2179 y FB(A)s(B)39
b FK(:)1379 2339 y FG(\241)-19 b(!)1385 2393 y FB(A)s(B)1500
2283 y Ft(\265)1536 2341 y FB(x)1577 2353 y Fw(B)1634
2341 y FG(\241)12 b FB(x)1746 2353 y Fw(A)1538 2441 y
FB(y)1577 2453 y Fw(B)1634 2441 y FG(\241)i FB(y)1746
2453 y Fw(A)1790 2283 y Ft(\266)1979 2339 y FG(\241)-19
b(!)1985 2393 y FB(A)s(B)2100 2283 y Ft(\265)2161 2341
y FK(4)10 b FG(\241)g FK(1)2134 2441 y FG(\241)p FK(1)g
FG(\241)g FK(3)2345 2283 y Ft(\266)2534 2339 y FG(\241)-19
b(!)2540 2393 y FB(A)s(B)2654 2283 y Ft(\265)2716 2341
y FK(3)2689 2441 y FG(\241)p FK(4)2784 2283 y Ft(\266)2826
2393 y FK(.)p 0 TeXcolorgray 7 2619 a(\225)p 0 TeXcolorgray
42 w(On)17 b(calcule)h(la)g(longueur)g(du)f(segment)1295
2620 y([)1326 2619 y FB(A)s(B)1432 2620 y FK(])1489 2619
y(:)603 2841 y FB(A)s(B)22 b FG(\306)793 2738 y Ft(q)p
869 2738 771 5 v 104 x FK(\()898 2841 y FB(x)939 2853
y Fw(B)996 2841 y FG(\241)12 b FB(x)1108 2853 y Fw(A)1152
2842 y FK(\))1179 2812 y FI(2)1224 2841 y FG(\305)1289
2777 y Ft(\241)1323 2841 y FB(y)1362 2853 y Fw(B)1419
2841 y FG(\241)i FB(y)1531 2853 y Fw(A)1575 2777 y Ft(\242)1604
2798 y FI(2)1654 2841 y FG(\306)1723 2738 y Ft(q)p 1799
2738 620 5 v 104 x FK(\()1826 2841 y(4)c FG(\241)g FK(1)1981
2842 y(\))2009 2812 y FI(2)2054 2841 y FG(\305)2119 2842
y FK(\()2146 2841 y FG(\241)p FK(1)g FG(\241)g FK(3)2356
2842 y(\))2384 2812 y FI(2)2433 2841 y FG(\306)2502 2738
y Ft(q)p 2578 2738 335 5 v 103 x FK(3)2618 2817 y FI(2)2664
2841 y FG(\305)2729 2842 y FK(\()2756 2841 y FG(\241)p
FK(4)2851 2842 y(\))2878 2812 y FI(2)2927 2841 y FG(\306)2996
2772 y(p)p 3060 2772 197 5 v 69 x FK(9)g FG(\305)g FK(16)16
b FG(\306)3340 2772 y(p)p 3404 2772 82 5 v 69 x FK(25)f
FG(\306)f FK(5.)-246 2941 y
SDict begin H.S end
 -246 2941 a -246 2941 a
SDict begin 12 H.A end
 -246
2941 a -246 2941 a
SDict begin [/View [/XYZ H.V]/Dest (Item.297) cvn /DEST pdfmark end
 -246 2941 a 0 TeXcolorgray -141 3085
a FK(2.)p 0 TeXcolorgray 43 w(On)j(r)o(epr\351sente)h(sur)g(la)f
(m\352me)i(\002gur)o(e)d(les)j(vecteurs)1547 3047 y FG(\241)-57
b(!)1558 3085 y FB(u)1629 2975 y Ft(\265)1691 3034 y
FK(1)1664 3133 y FG(\241)p FK(2)1759 2975 y Ft(\266)1801
3085 y FK(,)1839 3047 y FG(\241)g(!)1854 3085 y FB(v)1921
2975 y Ft(\265)1956 3034 y FK(1,)8 b(5)1962 3133 y FG(\241)p
FK(3)2065 2975 y Ft(\266)2107 3085 y FK(,)2145 3047 y
FG(\241)-57 b(!)2149 3085 y FB(w)2227 2975 y Ft(\265)2289
3034 y FK(3)2261 3133 y FG(\241)p FK(6)2357 2975 y Ft(\266)2408
3085 y FK(et)2491 3047 y FG(\241)g(!)2507 3085 y FB(x)2574
2975 y Ft(\265)2608 3034 y FG(\241)p FK(2)2635 3133 y(4)2703
2975 y Ft(\266)2745 3085 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray
948 4880 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.48744 a add def
/d 0.0 a add neg def /h 198.81665 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 948 4880 a 2036 4091 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 135.44011 0.0 -131.04733 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 103.67085 0.0 -95.1458   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 135.44011  0 -131.04733  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -131.04733
 135.44011  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-95.1458  def /maxTickline 103.67085  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 103.67085
0.0 -95.1458   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 135.44011
0.0 -131.04733 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 103.67085  0 -95.1458  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -95.1458
 103.67085  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-131.04733  def /maxTickline 135.44011  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 103.67085
0.0 -95.1458   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 135.44011
0.0 -131.04733 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2021 4187 a FI(0)204
b(1)i(2)f(3)g(4)-1233 b FH(\241)p FI(1)-309 b FH(\241)p
FI(2)g FH(\241)p FI(3)f FH(\241)p FI(4)1947 4110 y(0)1905
4346 y FH(\241)p FI(1)1905 4582 y FH(\241)p FI(2)1905
4818 y FH(\241)p FI(3)1947 3874 y(1)1947 3637 y(2)1947
3401 y(3)2036 4091 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 28.45274 -85.35823 85.35823   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
2036 4091 a
tx@Dict begin { -64.94992 72.72043 } PutCoor PutBegin  end
 2036 4091 a 0 0 1 TeXcolorrgb 31 x FG(\241)-57
b(!)2048 4160 y FB(u)p 0 TeXcolorgray 2036 4091 a
tx@Dict begin  PutEnd  end
 2036
4091 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-71.13185 -28.45274 -113.81097 56.90549   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2036 4091
a
tx@Dict begin { -94.85101 37.57346 } PutCoor PutBegin  end
 2036 4091 a 1 0 0 TeXcolorrgb 31 x FG(\241)g(!)2051
4160 y FB(v)p 0 TeXcolorgray 2036 4091 a
tx@Dict begin  PutEnd  end
 2036 4091 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 -85.35823 -28.45274 85.35823   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 1 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2036 4091 a
tx@Dict begin { 13.21262 24.45895 } PutCoor PutBegin  end
 2036
4091 a 0 1 0 TeXcolorrgb 31 x FG(\241)g(!)2041 4160 y
FB(w)p 0 TeXcolorgray 2036 4091 a
tx@Dict begin  PutEnd  end
 2036 4091 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 85.35823 113.81097 -28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2036 4091 a
tx@Dict begin { 87.7031 52.26176 } PutCoor PutBegin  end
 2036 4091 a 1 0.49803 0
TeXcolorrgb 31 x FG(\241)g(!)2052 4160 y FB(x)p 0 TeXcolorgray
2036 4091 a
tx@Dict begin  PutEnd  end
 2036 4091 a 3160 4880 a
currentpoint initclip moveto
 3160 4880 a -38 5088
a FK(On)24 b(r)o(appelle)h(que)g(chacun)f(des)g(vecteurs)h(peut)g
(\352tr)o(e)e(r)o(epr\351sent\351)i FL(o\371)d(l)n('on)g(v)o(eut)h
FK(:)h(vous)h(choisissez)g(libr)o(ement)f(la)g(position)i(du)e
(d\351but)-38 5188 y(de)c(la)h(\003\350che)9 b(!)22 b(U)m(ne)f(fois)h
(ce)e(d\351but)h(plac\351,)h(cependant,)g(il)f(n)-6 b('y)21
b(a)g(plus)h(le)f(choix)g(pour)g(tr)o(acer)g(le)g(vecteur)h(\(par)e
(exemple)o(,)j(pour)3829 5150 y FG(\241)-57 b(!)3841
5188 y FB(u)16 b FK(,)21 b(il)g(faut)-38 5336 y(avancer)c(de)g(1)h
(carr)o(eau)e(en)i(abscisse)g(et)g(descendr)o(e)f(de)g(2)g(carr)o(eaux)
g(en)h(or)o(donn\351e)o(,)f(puisque)2797 5298 y FG(\241)-57
b(!)2809 5336 y FB(u)2880 5226 y Ft(\265)2941 5285 y
FK(1)2914 5384 y FG(\241)p FK(2)3009 5226 y Ft(\266)3043
5336 y FK(\).)-38 5556 y FL(R)o(emarque)14 b(:)j FK(En)h(anticipant)g
(sur)g(la)f(suite)i(du)e(cours)o(,)h(on)g(r)o(emarque)f(que)2209
5519 y FG(\241)-57 b(!)2224 5556 y FB(v)34 b FG(\306)15
b FK(1,)8 b(5)2475 5519 y FG(\241)-57 b(!)2487 5556 y
FB(u)34 b FK(;)2605 5519 y FG(\241)-57 b(!)2610 5556
y FB(w)24 b FG(\306)14 b FK(3)2803 5519 y FG(\241)-57
b(!)2815 5556 y FB(u)33 b FK(et)2978 5519 y FG(\241)-57
b(!)2994 5556 y FB(x)34 b FG(\306)14 b(\241)p FK(2)3231
5519 y FG(\241)-57 b(!)3243 5556 y FB(u)16 b FK(.)-246
5640 y
SDict begin H.S end
 -246 5640 a -246 5640 a
SDict begin 12 H.A end
 -246 5640 a -246 5640
a
SDict begin [/View [/XYZ H.V]/Dest (exo.97) cvn /DEST pdfmark end
 -246 5640 a 0 TeXcolorgray 1909 5895 a FK(60)p 0 TeXcolorgray
eop end
%%Page: 61 61
TeXDict begin 61 60 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.61) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -125 a FL(Ex)o(er)o(cice)14
b(97)p 0 TeXcolorgray 41 w FK(L)-10 b('\351nonc\351)19
b(nous)f(donne)951 -162 y FG(\241)-57 b(!)962 -125 y
FB(u)1034 -235 y Ft(\265)1068 -176 y FG(\241)p FK(2)1095
-76 y(2)1163 -235 y Ft(\266)1205 -125 y FK(.)p 0 TeXcolorgray
-76 31 a(\225)p 0 TeXcolorgray -3 -6 a FG(\241)g(!)12
31 y FB(v)34 b FG(\306)15 b FK(3)195 -6 y FG(\241)-57
b(!)207 31 y FB(u)16 b FK(,)h(donc)1649 134 y FG(\241)-57
b(!)1664 172 y FB(v)1732 61 y Ft(\265)1766 120 y FK(3)10
b FG(\243)g FK(\()p FG(\241)p FK(2\))1820 220 y(3)g FG(\243)g
FK(2)2030 61 y Ft(\266)2219 134 y FG(\241)-57 b(!)2234
172 y FB(v)2301 61 y Ft(\265)2336 120 y FG(\241)p FK(6)2363
220 y(6)2431 61 y Ft(\266)2473 172 y FK(.)p 0 TeXcolorgray
-76 377 a(\225)p 0 TeXcolorgray -3 339 a FG(\241)g(!)1
377 y FB(w)24 b FG(\306)15 b(\241)p FK(2)250 339 y FG(\241)-57
b(!)262 377 y FB(u)16 b FK(,)h(donc)1621 480 y FG(\241)-56
b(!)1626 517 y FB(w)1704 407 y Ft(\265)1738 466 y FG(\241)p
FK(2)10 b FG(\243)g FK(\()p FG(\241)p FK(2\))1792 566
y FG(\241)p FK(2)g FG(\243)g FK(2)2058 407 y Ft(\266)2246
480 y FG(\241)-57 b(!)2251 517 y FB(w)2329 407 y Ft(\265)2390
466 y FK(4)2363 566 y FG(\241)p FK(4)2458 407 y Ft(\266)2501
517 y FK(.)p 0 TeXcolorgray -76 723 a(\225)p 0 TeXcolorgray
-3 685 a FG(\241)g(!)15 723 y FB(y)34 b FG(\306)15 b
FK(1,)8 b(5)263 685 y FG(\241)-57 b(!)275 723 y FB(u)17
b FK(,)g(donc)1614 833 y FG(\241)-56 b(!)1632 871 y FB(y)1697
761 y Ft(\265)1731 820 y FK(1,)8 b(5)i FG(\243)g FK(\()p
FG(\241)p FK(2\))1785 919 y(1,)e(5)i FG(\243)g FK(2)2065
761 y Ft(\266)2253 833 y FG(\241)-57 b(!)2271 871 y FB(y)2336
761 y Ft(\265)2370 820 y FG(\241)p FK(3)2397 919 y(3)2465
761 y Ft(\266)2508 871 y FK(.)p 0 TeXcolorgray -76 1077
a(\225)p 0 TeXcolorgray -3 1039 a FG(\241)g(!)15 1077
y FB(z)34 b FG(\306)15 b(\241)210 1039 y(\241)-57 b(!)222
1077 y FB(u)29 b FG(\306)14 b(\241)p FK(1)462 1039 y
FG(\241)-57 b(!)474 1077 y FB(u)16 b FK(,)i(donc)1621
1179 y FG(\241)-56 b(!)1639 1217 y FB(z)1704 1107 y Ft(\265)1738
1166 y FG(\241)p FK(1)10 b FG(\243)g FK(\()p FG(\241)p
FK(2\))1792 1265 y FG(\241)p FK(1)g FG(\243)g FK(2)2058
1107 y Ft(\266)2246 1179 y FG(\241)-57 b(!)2264 1217
y FB(z)2329 1107 y Ft(\265)2390 1166 y FK(2)2363 1265
y FG(\241)p FK(2)2458 1107 y Ft(\266)2501 1217 y FK(.)p
0 TeXcolorgray 0 TeXcolorgray 672 3631 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 307.85887 a add def
/d 0.0 a add neg def /h 270.30106 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 672 3631 a 984
2686 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -170.71646 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 616.85527 0.0 -37.55782 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 24
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 291.92499 0.0 -113.81097   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 616.85527  0 -37.55782  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -37.55782
 616.85527  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-113.81097  def /maxTickline 291.92499  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 291.92499
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 616.85527
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 291.92499  0 -113.81097  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -113.81097
 291.92499  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-37.55782  def /maxTickline 616.85527  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 291.92499
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 616.85527
0.0 -37.55782 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 969 2783 a FI(0)205 b(1)g(2)g(3)g(4)h(5)f(6)g
(7)g(8)g(9)190 b(10)174 b(11)h(12)f(13)g(14)g(15)h(16)f(17)g(18)g(19)g
(20)h(21)-5265 b FH(\241)p FI(1)895 2705 y(0)853 2941
y FH(\241)p FI(1)853 3178 y FH(\241)p FI(2)853 3414 y
FH(\241)p FI(3)853 3650 y FH(\241)p FI(4)895 2469 y(1)895
2233 y(2)895 1996 y(3)895 1760 y(4)895 1524 y(5)895 1288
y(6)895 1051 y(7)895 815 y(8)895 579 y(9)864 343 y(10)984
2686 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
-28.45274 256.07469 -85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 984 2686
a
tx@Dict begin { 233.31241 -42.67911 } PutCoor PutBegin  end
 984 2686 a 31 x FG(\241)-57 b(!)996 2755 y FB(u)984
2686 y
tx@Dict begin  PutEnd  end
 984 2686 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 85.35823 142.26372 -85.35823   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
984 2686 a
tx@Dict begin { 31.29819 -15.6491 } PutCoor PutBegin  end
 984 2686 a 1 0 0 TeXcolorrgb 31 x FG(\241)g(!)999
2755 y FB(v)35 b FG(\306)14 b FK(3)1182 2717 y FG(\241)-57
b(!)1194 2755 y FB(u)p 0 TeXcolorgray 984 2686 a
tx@Dict begin  PutEnd  end
 984
2686 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 113.81097 199.1692 28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 984 2686
a
tx@Dict begin { 147.95418 99.5846 } PutCoor PutBegin  end
 984 2686 a 0 0 1 TeXcolorrgb 31 x FG(\241)g(!)1002
2755 y FB(y)35 b FG(\306)14 b FK(1,)8 b(5)1250 2717 y
FG(\241)-57 b(!)1262 2755 y FB(u)p 0 TeXcolorgray 984
2686 a
tx@Dict begin  PutEnd  end
 984 2686 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
170.71646 -56.90549 56.90549 56.90549   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 1 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
984 2686 a
tx@Dict begin { 119.50143 14.22636 } PutCoor PutBegin  end
 984 2686 a 0 1 0 TeXcolorrgb 31 x FG(\241)g(!)989
2755 y FB(w)24 b FG(\306)14 b(\241)p FK(2)1237 2717 y
FG(\241)-57 b(!)1249 2755 y FB(u)p 0 TeXcolorgray 984
2686 a
tx@Dict begin  PutEnd  end
 984 2686 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 28.45274 85.35823 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.5 0  setrgbcolor 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
984 2686 a
tx@Dict begin { 119.50143 71.13185 } PutCoor PutBegin  end
 984 2686 a 1 0.5 0 TeXcolorrgb 31 x FG(\241)g(!)1002
2755 y FB(z)35 b FG(\306)14 b(\241)1197 2717 y(\241)-57
b(!)1209 2755 y FB(u)p 0 TeXcolorgray 984 2686 a
tx@Dict begin  PutEnd  end
 984
2686 a 3228 3631 a
currentpoint initclip moveto
 3228 3631 a -246 3714 a
SDict begin H.S end
 -246 3714
a -246 3714 a
SDict begin 12 H.A end
 -246 3714 a -246 3714 a
SDict begin [/View [/XYZ H.V]/Dest (exo.98) cvn /DEST pdfmark end
 -246 3714 a 0 TeXcolorgray
116 x FL(Ex)o(er)o(cice)14 b(98)p 0 TeXcolorgray 41 w
FK(S)o(oient)25 b FB(A)497 3831 y FK(\()524 3830 y(0;)8
b(1)632 3831 y(\))677 3830 y(et)18 b FB(B)824 3831 y
FK(\()850 3830 y(3;)8 b FG(\241)p FK(1)1013 3831 y(\))1050
3830 y(.)-246 3870 y
SDict begin H.S end
 -246 3870 a -246 3870 a
SDict begin 12 H.A end
 -246 3870
a -246 3870 a
SDict begin [/View [/XYZ H.V]/Dest (Item.298) cvn /DEST pdfmark end
 -246 3870 a 0 TeXcolorgray -141 3973 a
FK(1.)p 0 TeXcolorgray 43 w(On)17 b(a)1320 4051 y FG(\241)-19
b(!)1326 4104 y FB(A)s(B)1441 3994 y Ft(\265)1477 4053
y FB(x)1518 4065 y Fw(B)1575 4053 y FG(\241)12 b FB(x)1687
4065 y Fw(A)1479 4153 y FB(y)1518 4165 y Fw(B)1575 4153
y FG(\241)i FB(y)1687 4165 y Fw(A)1731 3994 y Ft(\266)1920
4051 y FG(\241)-19 b(!)1926 4104 y FB(A)s(B)2041 3994
y Ft(\265)2102 4053 y FK(3)10 b FG(\241)g FK(0)2075 4153
y FG(\241)p FK(1)g FG(\241)g FK(1)2286 3994 y Ft(\266)2475
4051 y FG(\241)-19 b(!)2481 4104 y FB(A)s(B)2596 3994
y Ft(\265)2657 4053 y FK(3)2630 4153 y FG(\241)p FK(2)2725
3994 y Ft(\266)2767 4104 y FK(,)-38 4298 y(donc)1505
4427 y FG(\241)1560 4374 y(\241)g(!)1566 4427 y FB(A)s(B)1681
4317 y Ft(\265)1769 4376 y FG(\241)p FK(1)10 b FG(\243)g
FK(3)1715 4476 y FG(\241)p FK(1)g FG(\243)g FK(\()p FG(\241)p
FK(2\))2034 4317 y Ft(\266)2225 4427 y FG(\241)2290 4374
y(\241)-19 b(!)2296 4427 y FB(A)s(B)2411 4317 y Ft(\265)2445
4376 y FG(\241)p FK(3)2472 4476 y(2)2540 4317 y Ft(\266)2583
4427 y FK(.)-246 4555 y
SDict begin H.S end
 -246 4555 a -246 4555 a
SDict begin 12 H.A end
 -246
4555 a -246 4555 a
SDict begin [/View [/XYZ H.V]/Dest (Item.299) cvn /DEST pdfmark end
 -246 4555 a 0 TeXcolorgray -141 4635
a FK(2.)p 0 TeXcolorgray 43 w(D)o('un)17 b(autr)o(e)g(c\364t\351,)1293
4722 y FG(\241)-18 b(!)1293 4775 y FB(B)13 b(A)1414 4665
y Ft(\265)1450 4724 y FB(x)1495 4736 y Fw(A)1549 4724
y FG(\241)f FB(x)1657 4736 y Fw(B)1453 4824 y FB(y)1496
4836 y Fw(A)1549 4824 y FG(\241)i FB(y)1657 4836 y Fw(B)1705
4665 y Ft(\266)1893 4722 y FG(\241)-18 b(!)1893 4775
y FB(B)13 b(A)2014 4665 y Ft(\265)2102 4724 y FK(0)d
FG(\241)g FK(3)2048 4824 y(1)g FG(\241)g FK(\()p FG(\241)p
FK(1\))2313 4665 y Ft(\266)2501 4722 y FG(\241)-18 b(!)2501
4775 y FB(B)13 b(A)2622 4665 y Ft(\265)2656 4724 y FG(\241)p
FK(3)2684 4824 y(2)2752 4665 y Ft(\266)2794 4775 y FK(.)-38
5011 y(Les)18 b(vecteurs)g FG(\241)457 4958 y(\241)-18
b(!)463 5011 y FB(A)s(B)25 b FK(et)670 4958 y FG(\241)-19
b(!)670 5011 y FB(B)13 b(A)21 b FK(ont)d(les)g(m\352mes)h(coor)o
(donn\351es)o(,)f(donc)f(ils)h(sont)g(\351gaux)f(:)h
FG(\241)2569 4958 y(\241)-19 b(!)2575 5011 y FB(A)s(B)22
b FG(\306)2765 4958 y(\241)-18 b(!)2765 5011 y FB(B)13
b(A)t FK(.)p 0 TeXcolorgray 1909 5895 a(61)p 0 TeXcolorgray
eop end
%%Page: 62 62
TeXDict begin 62 61 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.62) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1291 624
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 158.76634 a add def
/d 0.0 a add neg def /h 104.70587 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1291 624 a 1546 274 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 4 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 128.03734 0.0 -30.729 0.0   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 62.59595 0.0 -42.10992   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 128.03734  0 -30.729  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -30.729
 128.03734  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.10992  def /maxTickline 62.59595  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 62.59595
0.0 -42.10992   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 128.03734
0.0 -30.729 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 62.59595  0 -42.10992  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -42.10992
 62.59595  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-30.729  def /maxTickline 128.03734  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 62.59595
0.0 -42.10992   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 128.03734
0.0 -30.729 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1531 371 a FI(0)205
b(1)g(2)g(3)h(4)-1233 b FH(\241)p FI(1)1457 293 y(0)1415
530 y FH(\241)p FI(1)1457 57 y(1)1546 274 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 42.67911 0.0 85.35823
-27.31482   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 -29.59065 0.0 27.03001   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 29.59065 42.67911 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 0.0 28.45274   false
NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1546 274 a
tx@Dict begin { 2.27626 30.729 } PutCoor PutBegin  end
 1546 274 a 6 w FB(A)1546
274 y
tx@Dict begin  PutEnd  end
 1546 274 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 85.35823 -28.45274
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1546 274 a
tx@Dict begin { 87.63449 -26.17647 } PutCoor PutBegin  end
 1546 274 a FB(B)1546 274 y
tx@Dict begin  PutEnd  end
 1546 274 a 2609
624 a
currentpoint initclip moveto
 2609 624 a -246 783 a FL(R)o(emarque)14 b(:)k FK(L)-10
b('\351galit\351)19 b(de)e(la)g(question)i(2)f(est)g(un)g(fait)f
(g\351n\351r)o(al)h(\(elle)g(est)g(vr)o(aie)h(quels)f(que)g(soient)h
(les)f(points)24 b FB(A)c FK(et)e FB(B)7 b FK(\).)18
b(Elle)h(expr)q(ime)f(le)g(fait)g(que)o(,)-246 896 y(sur)g(la)f
(\002gur)o(e)g(ci-dessus)o(,)h(les)h(vecteurs)953 842
y FG(\241)-19 b(!)959 896 y FB(A)s(B)25 b FK(et)1166
842 y FG(\241)-19 b(!)1166 896 y FB(B)13 b(A)21 b FK(sont)d(oppos\351s)
o(.)-246 974 y
SDict begin H.S end
 -246 974 a -246 974 a
SDict begin 12 H.A end
 -246 974 a -246
974 a
SDict begin [/View [/XYZ H.V]/Dest (exo.99) cvn /DEST pdfmark end
 -246 974 a -246 990 a
SDict begin H.S end
 -246 990 a -246 990 a
SDict begin 12 H.A end
 -246
990 a -246 990 a
SDict begin [/View [/XYZ H.V]/Dest (Item.300) cvn /DEST pdfmark end
 -246 990 a 0 TeXcolorgray 140 x FL(Ex)o(er)o(cice)c
(99)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0 TeXcolorgray
43 w(On)j(r)o(epr\351sente)910 1092 y FG(\241)-56 b(!)922
1130 y FB(u)993 1020 y Ft(\265)1034 1078 y FG(\241)p
FK(2)1027 1178 y(2,)8 b(5)1137 1020 y Ft(\266)1179 1130
y FK(,)1216 1092 y FG(\241)-57 b(!)1232 1130 y FB(v)1299
1020 y Ft(\265)1333 1078 y FK(2,)8 b(5)1340 1178 y FG(\241)p
FK(3)1442 1020 y Ft(\266)1494 1130 y FK(et)1576 1092
y FG(\241)-56 b(!)1581 1130 y FB(w)1659 1020 y Ft(\265)1720
1078 y FG(\241)p FK(3)1693 1178 y(3,)8 b(75)1843 1020
y Ft(\266)1885 1130 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray
1222 2374 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 200.38266 a add def
/d 0.0 a add neg def /h 134.37035 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1222 2374 a 1954 2071 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 112.17899 0.0 -88.20367 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 97.91788 0.0 -36.45247   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 112.17899  0 -88.20367  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -88.20367
 112.17899  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-36.45247  def /maxTickline 97.91788  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.91788
0.0 -36.45247   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 112.17899
0.0 -88.20367 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 97.91788  0 -36.45247  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -36.45247
 97.91788  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-88.20367  def /maxTickline 112.17899  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.91788
0.0 -36.45247   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 112.17899
0.0 -88.20367 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1939 2168 a FI(0)205
b(1)g(2)h(3)-997 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)f
FH(\241)p FI(3)1865 2091 y(0)1824 2327 y FH(\241)p FI(1)1865
1855 y(1)1865 1618 y(2)1954 2071 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-85.35823 71.13185 -28.45274 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 1954 2071 a
tx@Dict begin { -51.30533 43.14757 } PutCoor PutBegin  end
 1954 2071 a 0 0 1 TeXcolorrgb
32 x FG(\241)-57 b(!)1966 2141 y FB(u)p 0 TeXcolorgray
1954 2071 a
tx@Dict begin  PutEnd  end
 1954 2071 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67911 -28.45274 -28.45274 56.90549   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1954 2071 a
tx@Dict begin { 12.92737 17.18295 } PutCoor PutBegin  end
 1954 2071 a 1 0.49803 0 TeXcolorrgb 32 x
FG(\241)g(!)1969 2141 y FB(v)p 0 TeXcolorgray 1954 2071
a
tx@Dict begin  PutEnd  end
 1954 2071 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 78.24504 85.35823 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1954 2071 a
tx@Dict begin { 40.9668 41.54163 } PutCoor PutBegin  end
 1954 2071 a 0 1 0 0 TeXcolorcmyk 32 x FG(\241)g(!)1959
2141 y FB(w)p 0 TeXcolorgray 1954 2071 a
tx@Dict begin  PutEnd  end
 1954 2071 a
2886 2374 a
currentpoint initclip moveto
 2886 2374 a -246 2406 a
SDict begin H.S end
 -246 2406 a -246
2406 a
SDict begin 12 H.A end
 -246 2406 a -246 2406 a
SDict begin [/View [/XYZ H.V]/Dest (Item.301) cvn /DEST pdfmark end
 -246 2406 a 0 TeXcolorgray
-141 2516 a FK(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 42 w(P)n(our)17 b(savoir)g(si)558
2478 y FG(\241)-57 b(!)569 2516 y FB(u)34 b FK(et)732
2478 y FG(\241)-57 b(!)748 2516 y FB(v)37 b FK(sont)18
b(colin\351air)o(es)o(,)h(on)e(calcule)h(leur)g(d\351ter)q(minant)g(:)
1714 2678 y FG(\241)-57 b(!)1725 2716 y FB(u)1796 2606
y Ft(\265)1837 2665 y FG(\241)p FK(2)1830 2764 y(2,)8
b(5)1940 2606 y Ft(\266)p 1 0 0 TeXcolorrgb 1984 2665
a FB(x)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 1986 2764 a(y)p
0 TeXcolorgray 2175 2678 a FG(\241)-57 b(!)2191 2716
y FB(v)2258 2606 y Ft(\265)2292 2665 y FK(2,)8 b(5)2299
2764 y FG(\241)p FK(3)2401 2606 y Ft(\266)p 1 0 0 TeXcolorrgb
2446 2665 a FB(x)2490 2635 y FH(0)p 0 TeXcolorgray 1 0 0
TeXcolorrgb 2448 2764 a FB(y)2491 2734 y FH(0)p 0 TeXcolorgray
80 2920 a FK(donc)1025 3019 y(det)1145 2955 y Ft(\241)1174
2981 y FG(\241)-57 b(!)1186 3019 y FB(u)16 b FK(,)1277
2981 y FG(\241)-57 b(!)1293 3019 y FB(v)1352 2955 y Ft(\242)1396
3019 y FG(\306)p 1 0 0 TeXcolorrgb 16 w FB(x)10 b(y)1559
2985 y FH(0)1590 3019 y FG(\241)i FB(x)1701 2985 y FH(0)1727
3019 y FB(y)p 0 TeXcolorgray 21 w FG(\306)i(\241)p FK(2)c
FG(\243)g FK(\()p FG(\241)p FK(3\))g FG(\241)g FK(2,)e(5)i
FG(\243)g FK(2,)e(5)19 b FG(\306)14 b FK(6)c FG(\241)g
FK(6,)e(25)17 b FG(\306)d(\241)p FK(0,)8 b(25.)80 3155
y(C)o(onclusion)19 b(:)e(det)649 3091 y Ft(\241)678 3117
y FG(\241)-57 b(!)690 3155 y FB(u)16 b FK(,)781 3117
y FG(\241)-57 b(!)797 3155 y FB(v)856 3091 y Ft(\242)900
3155 y FG(6\306)14 b FK(0,)k(donc)f(les)h(vecteurs)1657
3117 y FG(\241)-57 b(!)1669 3155 y FB(u)33 b FK(et)1831
3117 y FG(\241)-56 b(!)1847 3155 y FB(v)37 b FK(ne)18
b(sont)g(pas)g(colin\351air)o(es)o(.)p 0 TeXcolorgray
7 3295 a(\225)p 0 TeXcolorgray 42 w(P)n(our)f(savoir)g(si)558
3257 y FG(\241)-57 b(!)569 3295 y FB(u)34 b FK(et)732
3257 y FG(\241)-57 b(!)737 3295 y FB(w)27 b FK(sont)18
b(colin\351air)o(es)o(,)h(on)e(calcule)h(leur)g(d\351ter)q(minant)g(:)
1693 3458 y FG(\241)-56 b(!)1705 3495 y FB(u)1776 3385
y Ft(\265)1817 3444 y FG(\241)p FK(2)1810 3544 y(2,)8
b(5)1920 3385 y Ft(\266)p 1 0 0 TeXcolorrgb 1964 3444
a FB(x)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 1966 3544 a(y)p
0 TeXcolorgray 2155 3458 a FG(\241)-57 b(!)2160 3495
y FB(w)2238 3385 y Ft(\265)2299 3444 y FG(\241)p FK(3)2272
3544 y(3,)8 b(75)2422 3385 y Ft(\266)p 1 0 0 TeXcolorrgb
2466 3444 a FB(x)2510 3414 y FH(0)p 0 TeXcolorgray 1 0 0
TeXcolorrgb 2468 3544 a FB(y)2511 3514 y FH(0)p 0 TeXcolorgray
80 3699 a FK(donc)1046 3799 y(det)1165 3734 y Ft(\241)1195
3761 y FG(\241)-57 b(!)1206 3799 y FB(u)16 b FK(,)1297
3761 y FG(\241)-57 b(!)1302 3799 y FB(w)1372 3734 y Ft(\242)1416
3799 y FG(\306)p 1 0 0 TeXcolorrgb 16 w FB(x)10 b(y)1579
3764 y FH(0)1611 3799 y FG(\241)i FB(x)1722 3764 y FH(0)1747
3799 y FB(y)p 0 TeXcolorgray 22 w FG(\306)i(\241)p FK(2)c
FG(\243)g FK(3,)e(75)i FG(\241)g FK(\()p FG(\241)p FK(3\))g
FG(\243)g FK(2,)e(5)18 b FG(\306)d(\241)p FK(7,)8 b(5)i
FG(\305)g FK(7,)e(5)17 b FG(\306)d FK(0.)80 3934 y(C)o(onclusion)19
b(:)e(det)649 3870 y Ft(\241)678 3897 y FG(\241)-57 b(!)690
3934 y FB(u)16 b FK(,)781 3897 y FG(\241)-57 b(!)786
3934 y FB(w)856 3870 y Ft(\242)900 3934 y FG(\306)14
b FK(0,)k(donc)f(les)h(vecteurs)1657 3897 y FG(\241)-57
b(!)1669 3934 y FB(u)33 b FK(et)1831 3897 y FG(\241)-56
b(!)1836 3934 y FB(w)27 b FK(sont)18 b(colin\351air)o(es)o(.)-246
4018 y
SDict begin H.S end
 -246 4018 a -246 4018 a
SDict begin 12 H.A end
 -246 4018 a -246 4018
a
SDict begin [/View [/XYZ H.V]/Dest (exo.100) cvn /DEST pdfmark end
 -246 4018 a -246 4034 a
SDict begin H.S end
 -246 4034 a -246 4034 a
SDict begin 12 H.A end
 -246
4034 a -246 4034 a
SDict begin [/View [/XYZ H.V]/Dest (Item.302) cvn /DEST pdfmark end
 -246 4034 a 0 TeXcolorgray 104 x FL(Ex)o(er)o(cice)c
(100)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 43 w(On)j(calcule)h(le)g(d\351ter)q(minant)g(de)1460
4084 y FG(\241)-35 b(\241)f(!)1458 4138 y FB(O)9 b(A)20
b FK(et)1675 4084 y FG(\241)-35 b(\241)g(!)1673 4138
y FB(O)t(B)26 b FK(pour)18 b(savoir)f(si)f FB(O)s FK(,)24
b FB(A)s FK(,)17 b FB(B)25 b FK(sont)18 b(align\351s)g(ou)g(non)g(:)
1184 4293 y FG(\241)-36 b(\241)g(!)1182 4346 y FB(O)9
b(A)1307 4236 y Ft(\265)1342 4295 y FK(3)h FG(\241)g
FK(0)1342 4394 y(2)g FG(\241)g FK(0)1498 4236 y Ft(\266)1613
4293 y FG(\241)-35 b(\241)f(!)1611 4346 y FB(O)9 b(A)1737
4236 y Ft(\265)1771 4295 y FK(3)1771 4394 y(2)1811 4236
y Ft(\266)p 1 0 0 TeXcolorrgb 1856 4295 a FB(x)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 1858 4394 a(y)p 0 TeXcolorgray 2047
4293 a FG(\241)-35 b(\241)g(!)2045 4346 y FB(O)t(B)2171
4236 y Ft(\265)2205 4295 y FK(4,)8 b(5)i FG(\241)g FK(0)2240
4394 y(3)g FG(\241)g FK(0)2430 4236 y Ft(\266)2546 4293
y FG(\241)-35 b(\241)g(!)2544 4346 y FB(O)t(B)2670 4236
y Ft(\265)2704 4295 y FK(4,)8 b(5)2738 4394 y(3)2813
4236 y Ft(\266)p 1 0 0 TeXcolorrgb 2858 4295 a FB(x)2902
4265 y FH(0)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 2860 4394
a FB(y)2903 4364 y FH(0)p 0 TeXcolorgray -38 4550 a FK(donc)1176
4649 y(det)1296 4562 y Ft(\263)1327 4596 y FG(\241)-35
b(\241)f(!)1325 4649 y FB(O)9 b(A)s FK(,)1471 4596 y
FG(\241)-35 b(\241)g(!)1469 4649 y FB(O)t(B)1587 4562
y Ft(\264)1633 4649 y FG(\306)p 1 0 0 TeXcolorrgb 16
w FB(x)10 b(y)1796 4615 y FH(0)1828 4649 y FG(\241)i
FB(x)1939 4615 y FH(0)1964 4649 y FB(y)p 0 TeXcolorgray
21 w FG(\306)j FK(3)10 b FG(\243)g FK(3)g FG(\241)g FK(4,)e(5)i
FG(\243)g FK(2)18 b FG(\306)c FK(9)c FG(\241)g FK(9)15
b FG(\306)f FK(0.)-38 4826 y(Leur)k(d\351ter)q(minant)g(est)g(nul,)g
(donc)1049 4773 y FG(\241)-35 b(\241)f(!)1047 4826 y
FB(O)9 b(A)20 b FK(et)1265 4773 y FG(\241)-35 b(\241)g(!)1263
4826 y FB(O)t(B)25 b FK(sont)18 b(colin\351air)o(es)o(.)g(P)m(ar)f
(cons\351quent)g FB(O)s FK(,)24 b FB(A)s FK(,)17 b FB(B)26
b FK(sont)18 b(align\351s)o(.)-246 4855 y
SDict begin H.S end
 -246 4855 a
-246 4855 a
SDict begin 12 H.A end
 -246 4855 a -246 4855 a
SDict begin [/View [/XYZ H.V]/Dest (Item.303) cvn /DEST pdfmark end
 -246 4855 a 0 TeXcolorgray
-141 4959 a FK(2.)p 0 TeXcolorgray 43 w(On)f(calcule)h(le)g(d\351ter)q
(minant)g(de)976 4906 y FG(\241)-34 b(\241)f(!)974 4959
y FB(O)r(C)27 b FK(et)1193 4906 y FG(\241)-32 b(\241)f(!)1199
4959 y FB(A)s(D)24 b FK(pour)17 b(savoir)h(si)g(\()n
FB(O)r(C)9 b FK(\))16 b(et)i(\()6 b FB(A)s(D)g FK(\))17
b(sont)h(par)o(all\350les)h(ou)f(non)g(:)998 5112 y FG(\241)-34
b(\241)f(!)996 5166 y FB(O)r(C)1123 5056 y Ft(\265)1220
5115 y FK(3)10 b FG(\241)g FK(0)1158 5214 y FG(\241)p
FK(2,)e(5)i FG(\241)g FK(0)1438 5056 y Ft(\266)1553 5112
y FG(\241)-34 b(\241)f(!)1551 5166 y FB(O)r(C)1678 5056
y Ft(\265)1774 5115 y FK(3)1712 5214 y FG(\241)p FK(2,)8
b(5)1877 5056 y Ft(\266)p 1 0 0 TeXcolorrgb 1921 5115
a FB(x)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 1923 5214 a(y)p
0 TeXcolorgray 2112 5112 a FG(\241)-32 b(\241)f(!)2118
5166 y FB(A)s(D)2241 5056 y Ft(\265)2337 5115 y FK(7)10
b FG(\241)g FK(3)2275 5214 y FG(\241)p FK(1,)e(5)i FG(\241)g
FK(2)2556 5056 y Ft(\266)2671 5112 y FG(\241)-33 b(\241)h(!)2677
5166 y FB(A)s(D)2800 5056 y Ft(\265)2896 5115 y FK(4)2834
5214 y FG(\241)p FK(3,)8 b(5)2999 5056 y Ft(\266)p 1 0 0
TeXcolorrgb 3043 5115 a FB(x)3087 5084 y FH(0)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 3045 5214 a FB(y)3088 5184 y FH(0)p
0 TeXcolorgray -38 5369 a FK(donc)866 5469 y(det)985
5382 y Ft(\263)1017 5416 y FG(\241)-35 b(\241)g(!)1015
5469 y FB(O)r(C)9 b FK(,)1162 5416 y FG(\241)-32 b(\241)f(!)1168
5469 y FB(A)s(D)1283 5382 y Ft(\264)1329 5469 y FG(\306)p
1 0 0 TeXcolorrgb 16 w FB(x)10 b(y)1492 5435 y FH(0)1524
5469 y FG(\241)i FB(x)1635 5435 y FH(0)1660 5469 y FB(y)p
0 TeXcolorgray 22 w FG(\306)i FK(3)c FG(\243)g FK(\()p
FG(\241)p FK(3,)e(5\))i FG(\241)g FK(4)g FG(\243)g FK(\()p
FG(\241)p FK(2,)e(5\))17 b FG(\306)e(\241)p FK(10,)8
b(5)i FG(\305)g FK(10)17 b FG(\306)d(\241)p FK(0,)8 b(5.)-38
5646 y(Leur)18 b(d\351ter)q(minant)g(est)g(non)g(nul,)g(donc)1205
5592 y FG(\241)-34 b(\241)f(!)1203 5646 y FB(O)r(C)26
b FK(et)1422 5592 y FG(\241)-32 b(\241)f(!)1428 5646
y FB(A)s(D)23 b FK(ne)18 b(sont)g(pas)g(colin\351air)o(es)o(.)g(P)m(ar)
f(cons\351quent)i(\()n FB(O)r(C)9 b FK(\))17 b(n)-6 b('est)18
b(pas)g(par)o(all\350le)h(\340)e(\()6 b FB(A)s(D)g FK(\).)p
0 TeXcolorgray 1909 5895 a(62)p 0 TeXcolorgray eop end
%%Page: 63 63
TeXDict begin 63 62 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.63) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 807 1380
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 275.42278 a add def
/d 0.0 a add neg def /h 195.75456 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 807 1380 a 1147 609 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 234.45076 0.0 -40.97202 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 102.99878 0.0 -92.75578   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 234.45076  0 -40.97202  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -40.97202
 234.45076  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-92.75578  def /maxTickline 102.99878  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 102.99878
0.0 -92.75578   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.45076
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 102.99878  0 -92.75578  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -92.75578
 102.99878  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-40.97202  def /maxTickline 234.45076  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 102.99878
0.0 -92.75578   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.45076
0.0 -40.97202 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1132 706 a FI(0)205
b(1)g(2)g(3)g(4)h(5)f(6)g(7)-1942 b FH(\241)p FI(1)1058
629 y(0)1016 865 y FH(\241)p FI(1)1016 1101 y FH(\241)p
FI(2)1016 1337 y FH(\241)p FI(3)1058 393 y(1)1058 156
y(2)1058 -80 y(3)1147 609 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.44 def /x1 8.24
def /dx x1 x sub 49 div def /F@pstplot ((-0.--3.*x)/4.5)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.44 def /x1 8.24
def /dx x1 x sub 49 div def /F@pstplot ((-0.-2.5*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.44 def /x1 8.24
def /dx x1 x sub 49 div def /F@pstplot ((--18.5-3.5*x)/4.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1147 609 a
tx@Dict begin { -10.243 9.67383 } PutCoor PutBegin  end
 1147 609 a 0 0 1 TeXcolorrgb 1145 608 a FB(O)p
0 TeXcolorgray 1147 609 a
tx@Dict begin  PutEnd  end
 1147 609 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35823 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1147 609 a
tx@Dict begin { 72.26978 55.19838 } PutCoor PutBegin  end
 1147 609 a 0 0 1 TeXcolorrgb
6 w FB(A)p 0 TeXcolorgray 1147 609 a
tx@Dict begin  PutEnd  end
 1147 609 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03734 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1147 609 a
tx@Dict begin { 117.22516 89.91077 } PutCoor PutBegin  end
 1147 609 a 0 0 1
TeXcolorrgb FB(B)p 0 TeXcolorgray 1147 609 a
tx@Dict begin  PutEnd  end
 1147 609
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35823 -71.13185   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1147 609 a
tx@Dict begin { 87.63449 -65.44139 } PutCoor PutBegin  end
 1147
609 a 0 0 1 TeXcolorrgb 1145 608 a FB(C)p 0 TeXcolorgray
1147 609 a
tx@Dict begin  PutEnd  end
 1147 609 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 199.1692 -42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1147 609 a
tx@Dict begin { 201.44547 -36.98865 } PutCoor PutBegin  end
 1147 609 a 0 0 1 TeXcolorrgb FB(D)p 0 TeXcolorgray
1147 609 a
tx@Dict begin  PutEnd  end
 1147 609 a 3093 1380 a
currentpoint initclip moveto
 3093 1380 a -246 1463
a
SDict begin H.S end
 -246 1463 a -246 1463 a
SDict begin 12 H.A end
 -246 1463 a -246 1463 a
SDict begin [/View [/XYZ H.V]/Dest (exo.101) cvn /DEST pdfmark end
 -246
1463 a -246 1465 a
SDict begin H.S end
 -246 1465 a -246 1465 a
SDict begin 12 H.A end
 -246 1465
a -246 1465 a
SDict begin [/View [/XYZ H.V]/Dest (Item.304) cvn /DEST pdfmark end
 -246 1465 a 0 TeXcolorgray 114 x FL(Ex)o(er)o(cice)14
b(101)p 0 TeXcolorgray 0 TeXcolorgray 146 w FK(1.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 655 2874 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 336.88037 a add def
/d 0.0 a add neg def /h 147.95418 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

655 2874 a 1459 2477 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 240.14122 0.0 -96.73915 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 100.15378 0.0 -47.8004   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 240.14122  0 -96.73915  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -96.73915
 240.14122  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-47.8004  def /maxTickline 100.15378  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 100.15378
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.14122
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 100.15378  0 -47.8004  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -47.8004
 100.15378  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-96.73915  def /maxTickline 240.14122  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 100.15378
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.14122
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1444 2574 a FI(0)204
b(1)i(2)f(3)g(4)g(5)g(6)h(7)-1942 b FH(\241)p FI(1)-309
b FH(\241)p FI(2)g FH(\241)p FI(3)1370 2497 y(0)1328
2733 y FH(\241)p FI(1)1370 2261 y(1)1370 2024 y(2)1370
1788 y(3)1459 2477 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 56.90549 -85.35823 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 85.35823 -28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 28.45274 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -85.35823 -28.45274 199.1692
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1459 2477 a
tx@Dict begin { -93.32495 -23.33145 } PutCoor PutBegin  end
 1459 2477 a 6 w FB(A)1459 2477 y
tx@Dict begin  PutEnd  end
 1459 2477
a 1459 2477 a
tx@Dict begin { -26.17647 62.59595 } PutCoor PutBegin  end
 1459 2477 a FB(B)1459 2477 y
tx@Dict begin  PutEnd  end
 1459 2477
a 1459 2477 a
tx@Dict begin { 116.08723 91.04869 } PutCoor PutBegin  end
 1459 2477 a 1457 2476 a FB(C)1459 2477
y
tx@Dict begin  PutEnd  end
 1459 2477 a 1459 2477 a
tx@Dict begin { 201.44547 34.1432 } PutCoor PutBegin  end
 1459 2477 a FB(D)1459 2477
y
tx@Dict begin  PutEnd  end
 1459 2477 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 71.13185
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1459 2477 a
tx@Dict begin { 73.40813 5.69046 } PutCoor PutBegin  end
 1459 2477 a 0.30196 0.30196 1 TeXcolorrgb
FB(E)p 0 TeXcolorgray 1459 2477 a
tx@Dict begin  PutEnd  end
 1459 2477 a 3452 2874
a
currentpoint initclip moveto
 3452 2874 a -246 2918 a
SDict begin H.S end
 -246 2918 a -246 2918 a
SDict begin 12 H.A end
 -246
2918 a -246 2918 a
SDict begin [/View [/XYZ H.V]/Dest (Item.305) cvn /DEST pdfmark end
 -246 2918 a 0 TeXcolorgray -141 3032
a FK(2.)p 0 TeXcolorgray 43 w(On)18 b(r)o(appelle)i(qu)n('un)f(tr)o
(ap\350ze)f(est)g(un)h(quadr)q(ilat\350r)o(e)f(poss\351dant)h(deux)f
(c\364t\351s)h(par)o(all\350les)h(\226)e(et)h(c)n('est)f(tout)9
b(!)19 b(On)f(utilise)i(la)e(colin\351ar)q(it\351)h(pour)-38
3132 y(prouver)e(que)h(\()p FB(B)5 b(C)k FK(\))18 b(et)f(\()6
b FB(A)s(D)g FK(\))17 b(sont)h(par)o(all\350les)i(:)1121
3322 y FG(\241)-18 b(!)1121 3376 y FB(B)5 b(C)1243 3266
y Ft(\265)1277 3324 y FK(4)10 b FG(\241)g FK(\()p FG(\241)p
FK(1\))1331 3424 y(3)g FG(\241)g FK(2)1541 3266 y Ft(\266)1657
3322 y FG(\241)-19 b(!)1657 3376 y FB(B)5 b(C)1778 3266
y Ft(\265)1812 3324 y FK(5)1812 3424 y(1)1852 3266 y
Ft(\266)p 1 0 0 TeXcolorrgb 1897 3324 a FB(x)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 1899 3424 a(y)p 0 TeXcolorgray 2088
3322 a FG(\241)-33 b(\241)g(!)2094 3376 y FB(A)s(D)2217
3266 y Ft(\265)2251 3324 y FK(7)10 b FG(\241)g FK(\()p
FG(\241)p FK(3\))2251 3424 y(1)g FG(\241)g FK(\()p FG(\241)p
FK(1\))2516 3266 y Ft(\266)2631 3322 y FG(\241)-32 b(\241)f(!)2637
3376 y FB(A)s(D)2760 3266 y Ft(\265)2795 3324 y FK(10)2815
3424 y(2)2876 3266 y Ft(\266)p 1 0 0 TeXcolorrgb 2920
3324 a FB(x)2964 3294 y FH(0)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
2922 3424 a FB(y)2965 3394 y FH(0)p 0 TeXcolorgray -38
3569 a FK(donc)1149 3668 y(det)1268 3581 y Ft(\263)1300
3615 y FG(\241)-19 b(!)1300 3668 y FB(B)5 b(C)k FK(,)1440
3615 y FG(\241)-32 b(\241)g(!)1446 3668 y FB(A)s(D)1562
3581 y Ft(\264)1608 3668 y FG(\306)p 1 0 0 TeXcolorrgb
16 w FB(x)10 b(y)1771 3634 y FH(0)1803 3668 y FG(\241)i
FB(x)1914 3634 y FH(0)1939 3668 y FB(y)p 0 TeXcolorgray
21 w FG(\306)j FK(5)10 b FG(\243)g FK(2)g FG(\241)g FK(10)g
FG(\243)g FK(1)17 b FG(\306)d FK(10)c FG(\241)g FK(10)17
b FG(\306)d FK(0.)-38 3859 y(Leur)k(d\351ter)q(minant)h(est)g(nul,)g
(donc)1053 3805 y FG(\241)-19 b(!)1053 3859 y FB(B)5
b(C)28 b FK(et)1267 3805 y FG(\241)-33 b(\241)h(!)1273
3859 y FB(A)s(D)24 b FK(sont)19 b(colin\351air)o(es)o(.)f(P)m(ar)g
(cons\351quent)i(\()p FB(B)5 b(C)k FK(\))18 b(est)h(par)o(all\350le)g
(\340)f(\()6 b FB(A)s(D)g FK(\),)18 b(et)24 b FB(A)s(B)5
b(C)k(D)25 b FK(est)19 b(bien)f(un)-38 3959 y(tr)o(ap\350ze)o(.)-246
3990 y
SDict begin H.S end
 -246 3990 a -246 3990 a
SDict begin 12 H.A end
 -246 3990 a -246 3990
a
SDict begin [/View [/XYZ H.V]/Dest (Item.306) cvn /DEST pdfmark end
 -246 3990 a 0 TeXcolorgray -141 4087 a FK(3.)p 0 TeXcolorgray
43 w(S)o(avoir)f(si)h FB(E)24 b FK(appar)q(tient)19 b(\340)e(\()6
b FB(A)s(D)g FK(\))17 b(r)o(evient)h(\340)f(savoir)h(si)23
b FB(A)s FK(,)8 b FB(E)h FK(,)f FB(D)24 b FK(sont)18
b(align\351s)g(ou)g(non.)g(On)f(utilise)i(la)e(colin\351ar)q(it\351)i
(:)869 4278 y FG(\241)-21 b(!)875 4331 y FB(A)s(E)988
4221 y Ft(\265)1022 4280 y FK(2,)8 b(5)i FG(\241)g FK(\()p
FG(\241)p FK(3\))1056 4379 y(0)g FG(\241)g FK(\()p FG(\241)p
FK(1\))1355 4221 y Ft(\266)1471 4278 y FG(\241)-22 b(!)1477
4331 y FB(A)s(E)1589 4221 y Ft(\265)1623 4280 y FK(5,)8
b(5)1658 4379 y(1)1732 4221 y Ft(\266)p 1 0 0 TeXcolorrgb
1777 4280 a FB(x)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 1779
4379 a(y)p 0 TeXcolorgray 1968 4278 a FG(\241)-33 b(\241)h(!)1974
4331 y FB(A)s(D)2097 4221 y Ft(\265)2131 4280 y FK(10)2151
4379 y(2)2212 4221 y Ft(\266)p 1 0 0 TeXcolorrgb 2257
4280 a FB(x)2301 4250 y FH(0)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
2259 4379 a FB(y)2302 4349 y FH(0)p 0 TeXcolorgray 2340
4331 a FK(\(d\351j\340)17 b(calcul\351)h(dans)f(la)h(qu\2602\))-38
4524 y(donc)1116 4624 y(det)1235 4537 y Ft(\263)1266
4570 y FG(\241)-21 b(!)1272 4624 y FB(A)s(E)8 b FK(,)1405
4570 y FG(\241)-32 b(\241)f(!)1411 4624 y FB(A)s(D)1526
4537 y Ft(\264)1572 4624 y FG(\306)p 1 0 0 TeXcolorrgb
16 w FB(x)10 b(y)1735 4590 y FH(0)1767 4624 y FG(\241)i
FB(x)1878 4590 y FH(0)1904 4624 y FB(y)p 0 TeXcolorgray
21 w FG(\306)i FK(5,)8 b(5)i FG(\243)g FK(2)g FG(\241)g
FK(10)g FG(\243)g FK(1)18 b FG(\306)c FK(11)c FG(\241)g
FK(10)17 b FG(\306)d FK(1.)-38 4814 y(Leur)24 b(d\351ter)q(minant)g
(est)g(non)g(nul,)g(donc)1241 4761 y FG(\241)-21 b(!)1247
4814 y FB(A)s(E)30 b FK(et)1463 4761 y FG(\241)-32 b(\241)f(!)1469
4814 y FB(A)s(D)29 b FK(ne)24 b(sont)g(pas)g(colin\351air)o(es)o(.)g(P)
m(ar)f(cons\351quent,)31 b FB(A)s FK(,)8 b FB(E)h FK(,)f
FB(D)29 b FK(ne)24 b(sont)g(pas)g(align\351s)o(,)h(et)e
FB(E)-38 4914 y FK(n)-6 b('appar)q(tient)19 b(pas)e(\340)h(\()6
b FB(A)s(D)g FK(\).)p 0 TeXcolorgray 1909 5895 a(63)p
0 TeXcolorgray eop end
%%Page: 64 64
TeXDict begin 64 63 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.64) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.102) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FL(Ex)o(er)o(cice)14
b(102)p 0 TeXcolorgray 41 w FK(P)n(our)i(constr)q(uir)o(e)h(la)g(somme)
1143 -200 y FG(\241)-57 b(!)1154 -163 y FB(u)25 b FG(\305)1290
-200 y(\241)-57 b(!)1306 -163 y FB(v)20 b FK(,)d(on)g(choisit)h(un)f
(point)h(au)f(hasar)o(d,)f(puis)i(on)g(tr)o(ace)f(les)g(vecteurs)3325
-200 y FG(\241)-57 b(!)3337 -163 y FB(u)32 b FK(et)3499
-200 y FG(\241)-57 b(!)3514 -163 y FB(v)37 b FK(\340)16
b(la)h(suite)i(l)o('un)f(de)-246 -63 y(l)o('autr)o(e)o(.)-246
50 y
SDict begin H.S end
 -246 50 a -246 50 a
SDict begin 12 H.A end
 -246 50 a -246 50 a
SDict begin [/View [/XYZ H.V]/Dest (Item.307) cvn /DEST pdfmark end
 -246 50
a 0 TeXcolorgray -141 171 a FK(1.)p 0 TeXcolorgray -38
133 a FG(\241)-57 b(!)-27 171 y FB(u)45 61 y Ft(\265)79
120 y FK(2)79 219 y(3)119 61 y Ft(\266)161 171 y FK(,)199
133 y FG(\241)g(!)214 171 y FB(v)282 61 y Ft(\265)343
120 y FK(2)316 219 y FG(\241)p FK(3)411 61 y Ft(\266)453
171 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray -18 1620 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 139.76039 a add def
/d 0.0 a add neg def /h 157.05994 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

-18 1620 a 738 1386 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -22.76228 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 48.71126 0.0 -91.04913 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -91.04913 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 128.8346 0.0 -28.22534   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 48.71126  0 -91.04913  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -91.04913
 48.71126  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-28.22534  def /maxTickline 128.8346  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 128.8346
0.0 -28.22534   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 48.71126
0.0 -91.04913 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 128.8346  0 -28.22534  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -28.22534
 128.8346  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-91.04913  def /maxTickline 48.71126  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 128.8346
0.0 -28.22534   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 48.71126
0.0 -91.04913 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 723 1483 a FI(0)158
b(1)-430 b FH(\241)p FI(1)-262 b FH(\241)p FI(2)g FH(\241)p
FI(3)g FH(\241)p FI(4)649 1405 y(0)607 1594 y FH(\241)p
FI(1)649 1216 y(1)649 1027 y(2)649 838 y(3)649 649 y(4)649
460 y(5)738 1386 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-22.76228 113.81142 -68.28685 45.52457   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 45.52457 -22.76228 113.81142   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 45.52457 -68.28685 45.52457   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 738 1386 a
tx@Dict begin { -57.36104 98.33322 } PutCoor PutBegin  end
 738 1386 a 0 0 1
TeXcolorrgb 31 x FG(\241)-57 b(!)750 1455 y FB(u)p 0
TeXcolorgray 738 1386 a
tx@Dict begin  PutEnd  end
 738 1386 a 738 1386 a
tx@Dict begin { 4.55238 90.59378 } PutCoor PutBegin  end
 738 1386
a 1 0.49803 0 TeXcolorrgb 31 x FG(\241)g(!)753 1455 y
FB(v)p 0 TeXcolorgray 738 1386 a
tx@Dict begin  PutEnd  end
 738 1386 a 738 1386
a
tx@Dict begin { -44.15887 38.24046 } PutCoor PutBegin  end
 738 1386 a 1 0 0 TeXcolorrgb 31 x FG(\241)g(!)750 1455
y FB(u)26 b FG(\305)888 1417 y(\241)-57 b(!)903 1455
y FB(v)p 0 TeXcolorgray 738 1386 a
tx@Dict begin  PutEnd  end
 738 1386 a 1142 1620
a
currentpoint initclip moveto
 1142 1620 a 0 TeXcolorgray 1200 1637 9 1588 v 0 TeXcolorgray
1246 50 a
SDict begin H.S end
 1246 50 a 1246 50 a
SDict begin 12 H.A end
 1246 50 a 1246 50 a
SDict begin [/View [/XYZ H.V]/Dest (Item.308) cvn /DEST pdfmark end
 1246
50 a 0 TeXcolorgray 1351 171 a FK(2.)p 0 TeXcolorgray
1453 133 a FG(\241)g(!)1465 171 y FB(u)1536 61 y Ft(\265)1570
120 y FG(\241)p FK(1)1598 219 y(2)1666 61 y Ft(\266)1708
171 y FK(,)1745 133 y FG(\241)g(!)1761 171 y FB(v)1828
61 y Ft(\265)1862 120 y FK(4)1862 219 y(0)1903 61 y Ft(\266)1945
171 y FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1474 1620
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 139.76039 a add def
/d 0.0 a add neg def /h 157.0596 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1474 1620 a 2135 1397 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -22.76228 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 60.0924 0.0 -79.66798 0.0   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -68.28685 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 130.20029 0.0 -26.85931   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 60.0924  0 -79.66798  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -79.66798
 60.0924  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.85931  def /maxTickline 130.20029  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 130.20029
0.0 -26.85931   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 60.0924
0.0 -79.66798 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 130.20029  0 -26.85931  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -26.85931
 130.20029  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-79.66798  def /maxTickline 60.0924  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 130.20029
0.0 -26.85931   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 60.0924
0.0 -79.66798 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2120 1494 a FI(0)158
b(1)g(2)-619 b FH(\241)p FI(1)-262 b FH(\241)p FI(2)g
FH(\241)p FI(3)2046 1416 y(0)2004 1605 y FH(\241)p FI(1)2046
1227 y(1)2046 1039 y(2)2046 849 y(3)2046 661 y(4)2046
471 y(5)2135 1397 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-45.52457 91.04913 -22.76228 45.52457   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 91.04913 -45.52457 91.04913   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 91.04913 -22.76228 45.52457   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2135 1397 a
tx@Dict begin { -46.43489 65.10014 } PutCoor PutBegin  end
 2135 1397 a 0 0 1
TeXcolorrgb 32 x FG(\241)-57 b(!)2147 1466 y FB(u)p 0
TeXcolorgray 2135 1397 a
tx@Dict begin  PutEnd  end
 2135 1397 a 2135 1397 a
tx@Dict begin { -16.38887 109.25902 } PutCoor PutBegin  end
 2135
1397 a 1 0.49803 0 TeXcolorrgb 32 x FG(\241)g(!)2150
1466 y FB(v)p 0 TeXcolorgray 2135 1397 a
tx@Dict begin  PutEnd  end
 2135 1397 a
2135 1397 a
tx@Dict begin { 1.36568 63.27911 } PutCoor PutBegin  end
 2135 1397 a 1 0 0 TeXcolorrgb 32 x FG(\241)g(!)2147
1466 y FB(u)26 b FG(\305)2285 1429 y(\241)-57 b(!)2300
1466 y FB(v)p 0 TeXcolorgray 2135 1397 a
tx@Dict begin  PutEnd  end
 2135 1397 a
2634 1620 a
currentpoint initclip moveto
 2634 1620 a 0 TeXcolorgray 2692 1637 9 1588
v 0 TeXcolorgray 2737 50 a
SDict begin H.S end
 2737 50 a 2737 50 a
SDict begin 12 H.A end
 2737 50
a 2737 50 a
SDict begin [/View [/XYZ H.V]/Dest (Item.309) cvn /DEST pdfmark end
 2737 50 a 0 TeXcolorgray 2842 171 a FK(3.)p
0 TeXcolorgray 2945 133 a FG(\241)g(!)2956 171 y FB(u)3027
61 y Ft(\265)3062 120 y FG(\241)p FK(5)3089 219 y(1)3157
61 y Ft(\266)3199 171 y FK(,)3237 133 y FG(\241)g(!)3252
171 y FB(v)3319 61 y Ft(\265)3381 120 y FK(0)3354 219
y FG(\241)p FK(2)3449 61 y Ft(\266)3491 171 y FK(.)p
0 TeXcolorgray 0 TeXcolorgray 2965 1620 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 139.76039 a add def
/d 0.0 a add neg def /h 157.0596 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2965 1620 a
3626 1397 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -22.76228 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 60.0924 0.0 -79.66798 0.0   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -68.28685 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 130.20029 0.0 -26.85931   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 60.0924  0 -79.66798  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -79.66798
 60.0924  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.85931  def /maxTickline 130.20029  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 130.20029
0.0 -26.85931   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 60.0924
0.0 -79.66798 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 130.20029  0 -26.85931  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -26.85931
 130.20029  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-79.66798  def /maxTickline 60.0924  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 130.20029
0.0 -26.85931   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 60.0924
0.0 -79.66798 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3611 1494 a FI(0)158 b(1)g(2)-619
b FH(\241)p FI(1)-262 b FH(\241)p FI(2)g FH(\241)p FI(3)3538
1416 y(0)3496 1605 y FH(\241)p FI(1)3538 1227 y(1)3538
1039 y(2)3538 849 y(3)3538 661 y(4)3538 471 y(5)3626
1397 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-68.28685 91.04913 45.52457 68.28685   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-68.28685 45.52457 -68.28685 91.04913   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-68.28685 45.52457 45.52457 68.28685   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
3626 1397 a
tx@Dict begin { -20.94125 93.78049 } PutCoor PutBegin  end
 3626 1397 a 0 0 1 TeXcolorrgb 32 x FG(\241)-57
b(!)3638 1466 y FB(u)p 0 TeXcolorgray 3626 1397 a
tx@Dict begin  PutEnd  end
 3626
1397 a 3626 1397 a
tx@Dict begin { -66.46582 76.93661 } PutCoor PutBegin  end
 3626 1397 a 1 0.49803 0 TeXcolorrgb
32 x FG(\241)g(!)3641 1466 y FB(v)p 0 TeXcolorgray 3626
1397 a
tx@Dict begin  PutEnd  end
 3626 1397 a 3626 1397 a
tx@Dict begin { -40.51683 45.9799 } PutCoor PutBegin  end
 3626 1397 a 1 0 0 TeXcolorrgb
32 x FG(\241)g(!)3638 1466 y FB(u)26 b FG(\305)3776 1429
y(\241)-57 b(!)3792 1466 y FB(v)p 0 TeXcolorgray 3626
1397 a
tx@Dict begin  PutEnd  end
 3626 1397 a 4125 1620 a
currentpoint initclip moveto
 4125 1620 a -246 1717
a
SDict begin H.S end
 -246 1717 a -246 1717 a
SDict begin 12 H.A end
 -246 1717 a -246 1717 a
SDict begin [/View [/XYZ H.V]/Dest (exo.103) cvn /DEST pdfmark end
 -246
1717 a 0 TeXcolorgray 99 x FL(Ex)o(er)o(cice)14 b(103)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 944 3429
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 242.41748 a add def
/d 0.0 a add neg def /h 183.8049 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 944 3429 a 2021 3254 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 112.67305 0.0 -129.74443 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 162.74973 0.0 -21.05518   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 112.67305  0 -129.74443  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -129.74443
 112.67305  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-21.05518  def /maxTickline 162.74973  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 162.74973
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 112.67305
0.0 -129.74443 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 162.74973  0 -21.05518  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -21.05518
 162.74973  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-129.74443  def /maxTickline 112.67305  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 162.74973
0.0 -21.05518   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 112.67305
0.0 -129.74443 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2006 3351 a FI(0)205
b(1)g(2)g(3)-997 b FH(\241)p FI(1)-309 b FH(\241)p FI(2)g
FH(\241)p FI(3)g FH(\241)p FI(4)1932 3037 y(1)1932 2801
y(2)1932 2564 y(3)1932 2328 y(4)1932 2092 y(5)2021 3254
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 113.81097 0.0 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 0.0 28.45274 113.81097   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.49803 0  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 0.0 0.0 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2021 3254 a
tx@Dict begin { 2.84544 103.56796 } PutCoor PutBegin  end
 2021 3254 a 0 0 1 TeXcolorrgb 31 x FG(\241)-57
b(!)2033 3323 y FB(u)p 0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021
3254 a 2021 3254 a
tx@Dict begin { 58.0434 70.56267 } PutCoor PutBegin  end
 2021 3254 a 1 0.49803 0 TeXcolorrgb
31 x FG(\241)g(!)2036 3323 y FB(v)p 0 TeXcolorgray 2021
3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a 2021 3254 a
tx@Dict begin { 1.70709 33.57402 } PutCoor PutBegin  end
 2021 3254 a 1 0 0 TeXcolorrgb
31 x FG(\241)g(!)2033 3323 y FB(u)26 b FG(\305)2171 3285
y(\241)-57 b(!)2186 3323 y FB(v)p 0 TeXcolorgray 2021
3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-85.35823 85.35823 0.0 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 142.26372 -85.35823 85.35823   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2021 3254 a
tx@Dict begin { -85.35823 129.74443 } PutCoor PutBegin  end
 2021
3254 a 0 0 1 TeXcolorrgb 31 x FG(\241)g(!)2033 3323 y
FB(u)p 0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a 2021 3254
a
tx@Dict begin { -52.92212 62.02676 } PutCoor PutBegin  end
 2021 3254 a 0 1 0 0 TeXcolorcmyk 31 x FG(\241)g(!)2026
3323 y FB(w)p 0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 142.26372 0.0 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2021 3254 a
tx@Dict begin { -36.98865 124.05397 } PutCoor PutBegin  end
 2021
3254 a 0 1 0 TeXcolorrgb 31 x FG(\241)g(!)2026 3323 y
FB(w)20 b FG(\305)2171 3285 y(\241)-57 b(!)2182 3323
y FB(u)p 0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0 0  setcmykcolor  [ 0.0 56.90549
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2021 3254 a
tx@Dict begin { -9.67383 45.52455 } PutCoor PutBegin  end
 2021 3254 a 1 0 0 0
TeXcolorcmyk 2019 3253 a FB(C)p 0 TeXcolorgray 2021 3254
a
tx@Dict begin  PutEnd  end
 2021 3254 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0 0  setcmykcolor  [ 85.35823
0.0   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2021 3254 a
tx@Dict begin { 87.63449 3.41418 } PutCoor PutBegin  end
 2021 3254 a 1 0 0 0 TeXcolorcmyk 2 w FB(M)p
0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021 3254 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0 0  setcmykcolor  [ -56.90549
142.26372   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2021 3254 a
tx@Dict begin { -54.62921 145.6779 } PutCoor PutBegin  end
 2021 3254 a 1 0 0 0
TeXcolorcmyk 2 w FB(N)p 0 TeXcolorgray 2021 3254 a
tx@Dict begin  PutEnd  end
 2021
3254 a 2956 3429 a
currentpoint initclip moveto
 2956 3429 a -246 3506 a
SDict begin H.S end
 -246 3506
a -246 3506 a
SDict begin 12 H.A end
 -246 3506 a -246 3506 a
SDict begin [/View [/XYZ H.V]/Dest (exo.104) cvn /DEST pdfmark end
 -246 3506 a 0 TeXcolorgray
119 x FL(Ex)o(er)o(cice)14 b(104)p 0 TeXcolorgray 41
w FK(La)19 b(for)o(ce)g(r\351sultante)o(,)h(r)o(epr\351sent\351e)h(par)
e(le)g(vecteur)1836 3571 y FG(\241)-39 b(!)1836 3625
y FB(F)1882 3637 y Fw(R)1928 3625 y FK(,)19 b(s)m('obtient)h(en)g
(ajoutant)g(les)g(vecteurs)3126 3571 y FG(\241)-50 b(!)3126
3625 y FB(F)3172 3637 y FI(1)3226 3625 y FK(et)3310 3571
y FG(\241)g(!)3310 3625 y FB(F)3356 3637 y FI(2)3391
3625 y FK(.)19 b(S)o(on)h(intensit\351)h(corr)o(es-)-246
3737 y(pond)d(\340)f(la)g(longueur)i(du)e(vecteur)805
3683 y FG(\241)-40 b(!)805 3737 y FB(F)851 3749 y Fw(R)897
3737 y FK(,)17 b(que)h(l)o('on)g(calcule)h(ais\351ment)g(gr\342ce)d(au)
i(th\351or\350me)h(de)e(Pythagor)o(e)f(:)i(on)f(obtient)1272
3843 y Ft(\260)1272 3888 y(\260)1272 3934 y(\260)1315
3879 y FG(\241)-40 b(!)1315 3933 y FB(F)1361 3945 y Fw(R)1407
3843 y Ft(\260)1407 3888 y(\260)1407 3934 y(\260)1463
3933 y FG(\306)1532 3851 y Ft(p)p 1609 3851 227 5 v 1609
3933 a FK(4)1649 3909 y FI(2)1694 3933 y FG(\305)10 b
FK(3)1799 3909 y FI(2)1849 3933 y FG(\306)1918 3864 y(p)p
1982 3864 197 5 v 69 x FK(16)g FG(\305)g FK(9)16 b FG(\306)2262
3864 y(p)p 2326 3864 82 5 v 69 x FK(25)f FG(\306)f FK(5)k(N)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1345 4860 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 145.6788 a add def
/d 0.0 a add neg def /h 95.60187 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1345 4860 a
1485 5083 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 22.76228 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 106.07231 0.0 -16.84421 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 122.46118 0.0 26.85931   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
91.04913 45.52457 0.0 45.52457   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 113.81142 0.0 45.52457   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
91.04913 113.81142 0.0 113.81142   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
91.04913 113.81142 91.04913 45.52457   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0 1 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
91.04913 113.81142 0.0 45.52457   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1485 5083 a
tx@Dict begin { -12.74681 88.77275 } PutCoor PutBegin  end
 1485
5083 a 0 1 0 TeXcolorrgb 32 x FG(\241)-50 b(!)1485 5168
y FB(F)1531 5180 y FI(1)p 0 TeXcolorgray 1485 5083 a
tx@Dict begin  PutEnd  end

1485 5083 a 1485 5083 a
tx@Dict begin { 45.52457 38.6958 } PutCoor PutBegin  end
 1485 5083 a 1 0 0 TeXcolorrgb
32 x FG(\241)g(!)1485 5168 y FB(F)1531 5180 y FI(2)p
0 TeXcolorgray 1485 5083 a
tx@Dict begin  PutEnd  end
 1485 5083 a 1485 5083 a
tx@Dict begin { 25.03865 86.49673 } PutCoor PutBegin  end
 1485
5083 a 0 0 1 TeXcolorrgb 32 x FG(\241)-39 b(!)1485 5168
y FB(F)1531 5180 y Fw(R)p 0 TeXcolorgray 1485 5083 a
tx@Dict begin  PutEnd  end

1485 5083 a 1485 5083 a
tx@Dict begin { 45.52457 56.9057 } PutCoor PutBegin  end
 1485 5083 a 1 0 0 TeXcolorrgb
54 x FK(\(4\))p 0 TeXcolorgray 1485 5083 a
tx@Dict begin  PutEnd  end
 1485 5083
a 1485 5083 a
tx@Dict begin { 78.3023 81.94435 } PutCoor PutBegin  end
 1485 5083 a 0 1 0 TeXcolorrgb 54 x FK(\(3\))p
0 TeXcolorgray 1485 5083 a
tx@Dict begin  PutEnd  end
 1485 5083 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 0.0 45.52457   false
NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1485 5083 a
tx@Dict begin { -11.38113 38.6958 } PutCoor PutBegin  end
 1485 5083 a 6 w
FB(A)1485 5083 y
tx@Dict begin  PutEnd  end
 1485 5083 a 2555 4860 a
currentpoint initclip moveto
 2555 4860 a
-246 5037 a FL(R)o(emarque)17 b(:)j FK(La)g(situation)i(de)e(deux)g
(vecteurs)h(qui)g(ne)f(sont)h(pas)f(\340)g(angle)g(droit)g(est)g(plus)i
(d\351licate)o(.)e(Elle)i(peut)f(\352tr)o(e)f(r\351solue)h(gr\342ce)e
(au)h(produit)-246 5137 y(scalair)o(e)e(\(\351tudi\351)g(en)f(pr)o
(emi\350r)o(e\).)-246 5219 y
SDict begin H.S end
 -246 5219 a -246 5219 a
SDict begin 12 H.A end

-246 5219 a -246 5219 a
SDict begin [/View [/XYZ H.V]/Dest (exo.105) cvn /DEST pdfmark end
 -246 5219 a 0 TeXcolorgray 161
x FL(Ex)o(er)o(cice)d(105)p 0 TeXcolorgray 41 w FK(On)j(a)417
5327 y FG(\241)-18 b(!)423 5380 y FB(A)s(B)538 5270 y
Ft(\265)574 5329 y FB(x)615 5341 y Fw(B)673 5329 y FG(\241)12
b FB(x)785 5341 y Fw(A)577 5428 y FB(y)616 5440 y Fw(B)673
5428 y FG(\241)i FB(y)785 5440 y Fw(A)829 5270 y Ft(\266)880
5380 y FK(et)963 5327 y FG(\241)-19 b(!)963 5380 y FB(B)5
b(C)1084 5270 y Ft(\265)1120 5329 y FB(x)1159 5341 y
Fw(C)1219 5329 y FG(\241)12 b FB(x)1327 5341 y Fw(B)1122
5428 y FB(y)1159 5440 y Fw(C)1219 5428 y FG(\241)i FB(y)1327
5440 y Fw(B)1375 5270 y Ft(\266)1417 5380 y FK(,)j(donc)g(par)h
(d\351\002nition)g(de)f(la)g(somme)i(de)e(deux)h(vecteurs)g(:)1453
5556 y FG(\241)-19 b(!)1459 5609 y FB(A)s(B)18 b FG(\305)1641
5556 y(\241)-18 b(!)1641 5609 y FB(B)5 b(C)1762 5499
y Ft(\265)1798 5558 y FB(x)1839 5570 y Fw(B)1897 5558
y FG(\241)12 b FB(x)2009 5570 y Fw(A)2063 5558 y FG(\305)g
FB(x)2169 5570 y Fw(C)2229 5558 y FG(\241)g FB(x)2337
5570 y Fw(B)1801 5657 y FB(y)1840 5669 y Fw(B)1897 5657
y FG(\241)i FB(y)2009 5669 y Fw(A)2063 5657 y FG(\305)g
FB(y)2169 5669 y Fw(C)2229 5657 y FG(\241)g FB(y)2337
5669 y Fw(B)2385 5499 y Ft(\266)2427 5609 y FK(,)p 0
TeXcolorgray 1909 5895 a(64)p 0 TeXcolorgray eop end
%%Page: 65 65
TeXDict begin 65 64 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.65) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FK(soit)18 b(apr\350s)g(simpli\002cation)
1619 -70 y FG(\241)-19 b(!)1625 -16 y FB(A)s(B)18 b FG(\305)1807
-70 y(\241)-19 b(!)1807 -16 y FB(B)5 b(C)1928 -126 y
Ft(\265)1964 -68 y FB(x)2003 -56 y Fw(C)2063 -68 y FG(\241)12
b FB(x)2175 -56 y Fw(A)1966 32 y FB(y)2003 44 y Fw(C)2063
32 y FG(\241)i FB(y)2175 44 y Fw(A)2219 -126 y Ft(\266)2261
-16 y FK(.)-246 241 y(On)k(obtient)g(les)g(m\352mes)h(coor)o
(donn\351es)e(que)h(celles)h(du)e(vecteur)1734 188 y
FG(\241)-20 b(!)1740 241 y FB(A)o(C)1853 131 y Ft(\265)1889
190 y FB(x)1928 202 y Fw(C)1989 190 y FG(\241)12 b FB(x)2101
202 y Fw(A)1892 289 y FB(y)1929 301 y Fw(C)1989 289 y
FG(\241)i FB(y)2101 301 y Fw(A)2145 131 y Ft(\266)2187
241 y FK(.)-246 413 y(C)o(onclusion)20 b(:)204 359 y
FG(\241)-19 b(!)210 413 y FB(A)s(B)18 b FG(\305)392 359
y(\241)-18 b(!)392 413 y FB(B)5 b(C)27 b FK(et)605 359
y FG(\241)-20 b(!)611 413 y FB(A)o(C)25 b FK(ont)18 b(les)g(m\352mes)h
(coor)o(donn\351es)o(,)f(donc)f(ils)h(sont)g(\351gaux)g(:)1692
554 y FG(\241)-19 b(!)1698 608 y FB(A)s(B)18 b FG(\305)1880
554 y(\241)-18 b(!)1880 608 y FB(B)5 b(C)24 b FG(\306)2076
554 y(\241)-20 b(!)2082 608 y FB(A)o(C)9 b FK(.)-246
791 y(C'est)19 b(la)e(r)o(elation)h(de)f(Chasles)o(.)-246
859 y
SDict begin H.S end
 -246 859 a -246 859 a
SDict begin 12 H.A end
 -246 859 a -246 859 a
SDict begin [/View [/XYZ H.V]/Dest (exo.106) cvn /DEST pdfmark end
 -246
859 a 0 TeXcolorgray 131 x FL(Ex)o(er)o(cice)d(106)p
0 TeXcolorgray 47 w FB(A)s(B)5 b(C)k(D)24 b FK(est)18
b(un)g(par)o(all\351logr)o(amme)i(de)d(centr)o(e)e FB(O)r
FK(.)p 0 TeXcolorgray 0 TeXcolorgray 1052 2163 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 216.24103 a add def
/d 0.0 a add neg def /h 128.03735 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1052
2163 a 920 2248 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 199.1692 113.81097 142.26372
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 113.81097 199.1692
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 28.45274 85.35823
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 28.45274 85.35823
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 199.1692 113.81097 28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 920 2248 a
tx@Dict begin { 21.62392 31.86693 } PutCoor PutBegin  end
 920 2248 a 0 0 1
TeXcolorrgb 6 w FB(A)p 0 TeXcolorgray 920 2248 a
tx@Dict begin  PutEnd  end
 920
2248 a 920 2248 a
tx@Dict begin { 149.66127 28.45274 } PutCoor PutBegin  end
 920 2248 a 0 0 1 TeXcolorrgb FB(B)p
0 TeXcolorgray 920 2248 a
tx@Dict begin  PutEnd  end
 920 2248 a 920 2248 a
tx@Dict begin { 201.44547 119.50143 } PutCoor PutBegin  end
 920 2248
a 0 0 1 TeXcolorrgb 918 2247 a FB(C)p 0 TeXcolorgray
920 2248 a
tx@Dict begin  PutEnd  end
 920 2248 a 920 2248 a
tx@Dict begin { 87.63449 119.50143 } PutCoor PutBegin  end
 920 2248 a 0 0 1 TeXcolorrgb
FB(D)p 0 TeXcolorgray 920 2248 a
tx@Dict begin  PutEnd  end
 920 2248 a 920 2248
a
tx@Dict begin { 116.08723 76.82231 } PutCoor PutBegin  end
 920 2248 a 0 0 1 TeXcolorrgb 918 2247 a FB(O)p 0 TeXcolorgray
920 2248 a
tx@Dict begin  PutEnd  end
 920 2248 a 2848 2163 a
currentpoint initclip moveto
 2848 2163 a -246 2231
a
SDict begin H.S end
 -246 2231 a -246 2231 a
SDict begin 12 H.A end
 -246 2231 a -246 2231 a
SDict begin [/View [/XYZ H.V]/Dest (Item.310) cvn /DEST pdfmark end
 -246
2231 a 0 TeXcolorgray -141 2346 a FK(1.)p 0 TeXcolorgray
-38 2292 a FG(\241)-19 b(!)-32 2346 y FB(A)s(B)18 b FG(\305)150
2292 y(\241)-35 b(\241)g(!)150 2346 y FB(B)5 b(O)19 b
FG(\306)349 2292 y(\241)-35 b(\241)f(!)355 2346 y FB(A)o(O)150
b FK(\(r)o(elation)18 b(de)f(Chasles\))-246 2370 y
SDict begin H.S end
 -246
2370 a -246 2370 a
SDict begin 12 H.A end
 -246 2370 a -246 2370 a
SDict begin [/View [/XYZ H.V]/Dest (Item.311) cvn /DEST pdfmark end
 -246 2370
a 0 TeXcolorgray -141 2474 a FK(2.)p 0 TeXcolorgray 955
2604 a FG(\241)-20 b(!)961 2657 y FB(A)o(C)19 b FG(\305)1142
2604 y(\241)-37 b(\241)h(!)1140 2657 y FB(C)15 b(A)i
FG(\306)1339 2604 y(\241)-37 b(\241)g(!)1345 2657 y FB(A)9
b(A)995 b FK(\(r)o(elation)18 b(de)f(Chasles\))1270 2803
y FG(\306)1339 2752 y(\241)-57 b(!)1356 2803 y FK(0)17
b(.)-246 2916 y
SDict begin H.S end
 -246 2916 a -246 2916 a
SDict begin 12 H.A end
 -246 2916 a -246
2916 a
SDict begin [/View [/XYZ H.V]/Dest (Item.312) cvn /DEST pdfmark end
 -246 2916 a 0 TeXcolorgray -141 3000 a FK(3.)p
0 TeXcolorgray 812 3129 a FG(\241)-33 b(\241)g(!)812
3183 y FB(B)7 b(D)17 b FG(\305)1007 3129 y(\241)-18 b(!)1013
3183 y FB(A)s(B)22 b FG(\306)1204 3129 y(\241)-19 b(!)1210
3183 y FB(A)s(B)18 b FG(\305)1392 3129 y(\241)-33 b(\241)g(!)1392
3183 y FB(B)7 b(D)857 b FK(\(on)17 b(peut)i(inter)q(ver)q(tir)f(l)o
('or)o(dr)o(e\))1134 3331 y FG(\306)1204 3278 y(\241)-33
b(\241)g(!)1210 3331 y FB(A)s(D)1043 b FK(\(r)o(elation)17
b(de)h(Chasles\))-246 3444 y
SDict begin H.S end
 -246 3444 a -246 3444 a
SDict begin 12 H.A end

-246 3444 a -246 3444 a
SDict begin [/View [/XYZ H.V]/Dest (Item.313) cvn /DEST pdfmark end
 -246 3444 a 0 TeXcolorgray -141
3552 a FK(4.)p 0 TeXcolorgray 49 w FB(A)s(B)5 b(C)k(D)24
b FK(est)18 b(un)g(par)o(all\351logr)o(amme)o(,)h(donc)e(d)n('apr\350s)
h(un)g(th\351or\350me)h(du)e(cours)g(\(1)2377 3528 y
Fg(r)o(e)2439 3552 y FK(le\347on)h(sur)f(les)h(vecteurs\))3217
3498 y FG(\241)-18 b(!)3223 3552 y FB(A)s(B)22 b FG(\306)3414
3498 y(\241)-33 b(\241)g(!)3414 3552 y FB(D)t(C)9 b FK(.)17
b(On)h(a)f(donc)g(:)822 3795 y FG(\241)-18 b(!)828 3849
y FB(A)s(B)18 b FG(\305)1010 3795 y(\241)-34 b(\241)f(!)1008
3849 y FB(C)6 b(O)19 b FG(\306)1210 3795 y(\241)-32 b(\241)f(!)1210
3849 y FB(D)t(C)20 b FG(\305)1407 3795 y(\241)-35 b(\241)g(!)1405
3849 y FB(C)6 b(O)865 b FK(\(th\351or\350me)18 b(susmentionn\351\))1141
3997 y FG(\306)1210 3944 y(\241)-31 b(\241)g(!)1210 3997
y FB(D)t(O)1054 b FK(\(r)o(elation)17 b(de)g(Chasles\))-246
4110 y
SDict begin H.S end
 -246 4110 a -246 4110 a
SDict begin 12 H.A end
 -246 4110 a -246 4110
a
SDict begin [/View [/XYZ H.V]/Dest (Item.314) cvn /DEST pdfmark end
 -246 4110 a 0 TeXcolorgray -141 4218 a FK(5.)p 0 TeXcolorgray
49 w FB(A)s(B)5 b(C)k(D)24 b FK(est)18 b(un)g(par)o(all\351logr)o(amme)
o(,)h(donc)e(d)n('apr\350s)h(le)g(th\351or\350me)h(du)e(cours)h
(d\351j\340)f(utilis\351)2669 4164 y FG(\241)-32 b(\241)f(!)2667
4218 y FB(C)9 b(D)21 b FG(\306)2874 4164 y(\241)-19 b(!)2874
4218 y FB(B)13 b(A)t FK(.)k(On)g(a)g(donc)g(:)839 4461
y FG(\241)-18 b(!)837 4515 y FB(C)9 b(B)18 b FG(\305)1027
4461 y(\241)-32 b(\241)f(!)1025 4515 y FB(C)9 b(D)21
b FG(\306)1232 4461 y(\241)-18 b(!)1230 4515 y FB(C)9
b(B)18 b FG(\305)1420 4461 y(\241)-18 b(!)1420 4515 y
FB(B)13 b(A)882 b FK(\(le)17 b(th\351or\350me)i(d\351j\340)f
(utilis\351\))1163 4663 y FG(\306)1232 4609 y(\241)-36
b(\241)g(!)1230 4663 y FB(C)15 b(A)1068 b FK(\(r)o(elation)17
b(de)g(Chasles\))-246 4790 y
SDict begin H.S end
 -246 4790 a -246 4790 a
SDict begin 12 H.A end

-246 4790 a -246 4790 a
SDict begin [/View [/XYZ H.V]/Dest (exo.107) cvn /DEST pdfmark end
 -246 4790 a 0 TeXcolorgray 72
x FL(Ex)o(er)o(cice)d(107)p 0 TeXcolorgray 47 w FB(A)s(B)5
b(C)27 b FK(est)18 b(un)g(tr)q(iangle)o(,)h FB(I)27 b
FK(est)18 b(le)g(milieu)h(du)f(segment)1864 4863 y([)1889
4862 y FB(B)5 b(C)2001 4863 y FK(])2036 4862 y(.)17 b(On)g(r)o(envoie)h
(\340)f(l)o('exer)o(cice)h(suivant)h(pour)e(la)h(\002gur)o(e)o(.)-246
4910 y
SDict begin H.S end
 -246 4910 a -246 4910 a
SDict begin 12 H.A end
 -246 4910 a -246 4910
a
SDict begin [/View [/XYZ H.V]/Dest (Item.315) cvn /DEST pdfmark end
 -246 4910 a 0 TeXcolorgray -141 5006 a FK(1.)p 0 TeXcolorgray
43 w(D)o('apr\350s)f(la)g(r)o(elation)h(de)f(Chasles)i(:)1423
5166 y FG(\241)-19 b(!)1429 5219 y FB(A)s(B)22 b FG(\306)1619
5166 y(\241)-36 b(!)1625 5219 y FB(A)5 b(I)20 b FG(\305)1789
5166 y(\241)-37 b(!)1791 5219 y FB(I)9 b(B)h FK(,)2204
5166 y FG(\241)-20 b(!)2210 5219 y FB(A)o(C)23 b FG(\306)2399
5166 y(\241)-36 b(!)2405 5219 y FB(A)5 b(I)20 b FG(\305)2569
5166 y(\241)-36 b(!)2571 5219 y FB(I)7 b(C)k FK(.)-246
5280 y
SDict begin H.S end
 -246 5280 a -246 5280 a
SDict begin 12 H.A end
 -246 5280 a -246 5280
a
SDict begin [/View [/XYZ H.V]/Dest (Item.316) cvn /DEST pdfmark end
 -246 5280 a 0 TeXcolorgray -141 5383 a FK(2.)p 0 TeXcolorgray
45 w FB(I)28 b FK(est)17 b(le)h(milieu)h(de)553 5384
y([)578 5383 y FB(B)5 b(C)690 5384 y FK(])724 5383 y(,)17
b(donc)p 1 0 0 TeXcolorrgb 953 5330 a FG(\241)-36 b(!)955
5383 y FB(I)7 b(C)p 0 TeXcolorgray 25 w FG(\306)p 1 0 0
TeXcolorrgb 1132 5330 a(\241)-37 b(!)1132 5383 y FB(B)9
b(I)p 0 TeXcolorgray 12 w FK(.)17 b(On)g(a)g(donc,)h(gr\342ce)e(\340)h
(la)h(r)o(elation)g(de)f(Chasles)i(:)1578 5525 y FG(\241)-37
b(!)1580 5579 y FB(I)9 b(B)20 b FG(\305)p 1 0 0 TeXcolorrgb
1748 5525 a(\241)-36 b(!)1750 5579 y FB(I)7 b(C)p 0 TeXcolorgray
25 w FG(\306)1927 5525 y(\241)-37 b(!)1929 5579 y FB(I)9
b(B)19 b FG(\305)p 1 0 0 TeXcolorrgb 2096 5525 a(\241)-36
b(!)2096 5579 y FB(B)9 b(I)p 0 TeXcolorgray 26 w FG(\306)2274
5525 y(\241)-54 b(!)2276 5579 y FB(I)11 b(I)26 b FG(\306)2435
5528 y(\241)-58 b(!)2452 5579 y FK(0)17 b(.)p 0 TeXcolorgray
1909 5895 a(65)p 0 TeXcolorgray eop end
%%Page: 66 66
TeXDict begin 66 65 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.66) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.317) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FK(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17 b(les)h(questions)h(1)f
(et)g(2)f(:)1496 -59 y FG(\241)-18 b(!)1502 -5 y FB(A)s(B)18
b FG(\305)1684 -59 y(\241)-20 b(!)1690 -5 y FB(A)o(C)23
b FG(\306)1879 -92 y Ft(\263)1911 -59 y FG(\241)-36 b(!)1917
-5 y FB(A)5 b(I)20 b FG(\305)2081 -59 y(\241)-37 b(!)2083
-5 y FB(I)9 b(B)2176 -92 y Ft(\264)2217 -5 y FG(\305)2282
-92 y Ft(\263)2314 -59 y FG(\241)-36 b(!)2320 -5 y FB(A)5
b(I)20 b FG(\305)2484 -59 y(\241)-36 b(!)2486 -5 y FB(I)7
b(C)2580 -92 y Ft(\264)1810 160 y FG(\306)14 b FK(2)1919
107 y FG(\241)-35 b(!)1925 160 y FB(A)5 b(I)21 b FG(\305)2090
107 y(\241)-37 b(!)2092 160 y FB(I)9 b(B)20 b FG(\305)2260
107 y(\241)-36 b(!)2262 160 y FB(I)7 b(C)2090 196 y Ft(|)p
2124 196 64 10 v 64 w({z)p 2256 196 V 64 w(})2174 296
y FH(\306)2216 257 y(\241)-43 b(!)2228 296 y FI(0)1810
422 y FG(\306)14 b FK(2)1919 369 y FG(\241)-35 b(!)1925
422 y FB(A)5 b(I)11 b FK(.)-246 501 y
SDict begin H.S end
 -246 501 a -246
501 a
SDict begin 12 H.A end
 -246 501 a -246 501 a
SDict begin [/View [/XYZ H.V]/Dest (exo.108) cvn /DEST pdfmark end
 -246 501 a -246 520 a
SDict begin H.S end
 -246
520 a -246 520 a
SDict begin 12 H.A end
 -246 520 a -246 520 a
SDict begin [/View [/XYZ H.V]/Dest (Item.318) cvn /DEST pdfmark end
 -246 520 a 0 TeXcolorgray
77 x FL(Ex)o(er)o(cice)j(108)p 0 TeXcolorgray 0 TeXcolorgray
146 w FK(1.)p 0 TeXcolorgray 43 w(On)j(place)h(le)g(point)e
FB(G)23 b FK(aux)18 b(deux)f(tiers)h(du)f(segment)2042
598 y([)2073 597 y FB(A)5 b(I)2161 598 y FK(])2205 597
y(en)18 b(par)q(tant)f(de)23 b FB(A)s FK(.)p 0 TeXcolorgray
0 TeXcolorgray 1111 1636 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 227.0532 a add def
/d 0.0 a add neg def /h 118.36351 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1111 1636 a 899 2009 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 56.90549 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 104.32686 113.81097 85.35823
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 91.21236 127.32706 96.89413
131.11505   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 92.79051 124.95963 98.47229
128.74762   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 123.29507 85.35823 104.32686
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 110.181 98.87431 115.86278
102.66231   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 111.75916 96.50688 117.44093
100.29488   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 56.90549 123.29507
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 129.14964 70.42157 134.83142
74.20956   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 130.7278 68.05414 136.40958
71.84213   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 56.90549 56.90549
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 99.5846 53.49129 99.5846
60.31967   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62195 56.90549 142.26372
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 184.94283 53.49129 184.94283
60.31967   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 85.35823 142.26372
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 899 2009 a
tx@Dict begin { 77.3915 143.40163 } PutCoor PutBegin  end
 899 2009 a 6 w FB(A)899
2009 y
tx@Dict begin  PutEnd  end
 899 2009 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 56.90549 56.90549
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
899 2009 a
tx@Dict begin { 46.66248 55.76756 } PutCoor PutBegin  end
 899 2009 a FB(B)899 2009 y
tx@Dict begin  PutEnd  end
 899 2009 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 227.62195 56.90549
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 899 2009 a
tx@Dict begin { 227.62195 59.75093 } PutCoor PutBegin  end
 899 2009 a 897 2008
a FB(C)899 2009 y
tx@Dict begin  PutEnd  end
 899 2009 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 142.26372 56.90549
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 899 2009 a
tx@Dict begin { 144.53998 61.17322 } PutCoor PutBegin  end
 899 2009 a 2 w FB(I)899 2009
y
tx@Dict begin  PutEnd  end
 899 2009 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 123.29507 85.35823
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 899
2009 a
tx@Dict begin { 125.76106 86.49614 } PutCoor PutBegin  end
 899 2009 a 897 2008 a FB(G)899 2009 y
tx@Dict begin  PutEnd  end
 899 2009
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 104.32686 113.81097
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2996 1636 a
currentpoint initclip moveto

2996 1636 a -246 1658 a
SDict begin H.S end
 -246 1658 a -246 1658 a
SDict begin 12 H.A end
 -246
1658 a -246 1658 a
SDict begin [/View [/XYZ H.V]/Dest (Item.319) cvn /DEST pdfmark end
 -246 1658 a 0 TeXcolorgray -141 1765
a FK(2.)p 0 TeXcolorgray 43 w(On)17 b(utilise)i(l)o('exer)o(cice)f
(pr\351c\351dent)g(et)g(l)o('hypoth\350se)1522 1712 y
FG(\241)-19 b(!)1528 1765 y FB(A)o(G)20 b FG(\306)1728
1732 y FI(2)p 1728 1745 31 5 v 1728 1794 a(3)1769 1712
y FG(\241)-37 b(!)1775 1765 y FB(A)5 b(I)41 b FK(:)1259
2030 y(3)1299 1976 y FG(\241)-18 b(!)1305 2030 y FB(A)o(G)21
b FG(\306)14 b FK(3)c FG(\242)1588 1973 y FK(2)p 1588
2010 41 5 v 1588 2087 a(3)1638 1976 y FG(\241)-36 b(!)1644
2030 y FB(A)5 b(I)89 b FK(\(par)17 b(hypoth\350se\))1427
2228 y FG(\306)d FK(2)1536 2174 y FG(\241)-36 b(!)1542
2228 y FB(A)5 b(I)174 b FK(\()17 b(car)g(3)10 b FG(\242)2056
2171 y FK(2)p 2056 2208 V 2056 2284 a(3)2121 2228 y FG(\306)k
FK(2\))1427 2403 y FG(\306)1496 2350 y(\241)-19 b(!)1502
2403 y FB(A)s(B)18 b FG(\305)1684 2350 y(\241)-20 b(!)1690
2403 y FB(A)o(C)25 b FK(\(d)n('apr\350s)18 b(l)o('exer)o(cice)g
(pr\351c\351dent\).)-246 2599 y
SDict begin H.S end
 -246 2599 a -246 2599
a
SDict begin 12 H.A end
 -246 2599 a -246 2599 a
SDict begin [/View [/XYZ H.V]/Dest (Item.320) cvn /DEST pdfmark end
 -246 2599 a 0 TeXcolorgray
-141 2676 a FK(3.)p 0 TeXcolorgray 43 w(On)f(utilise)i(la)f(r)o
(elation)f(de)h(Chasles)g(et)g(la)g(question)h(2)e(:)582
2872 y FG(\241)-36 b(\241)g(!)580 2925 y FB(G)12 b(A)h
FG(\305)p 1 0 0 TeXcolorrgb 772 2872 a(\241)-36 b(\241)g(!)770
2925 y FB(G)6 b(B)p 0 TeXcolorgray 18 w FG(\305)p 0 1 0
TeXcolorrgb 961 2872 a(\241)-35 b(\241)f(!)959 2925 y
FB(G)t(C)p 0 TeXcolorgray 23 w FG(\306)1159 2872 y(\241)h(\241)f(!)1157
2925 y FB(G)12 b(A)h FG(\305)p 1 0 0 TeXcolorrgb 1349
2872 a(\241)-35 b(\241)f(!)1347 2925 y FB(G)12 b(A)h
FG(\305)1539 2872 y(\241)-18 b(!)1545 2925 y FB(A)s(B)p
0 TeXcolorgray 18 w FG(\305)p 0 1 0 TeXcolorrgb 1727
2872 a(\241)-35 b(\241)f(!)1725 2925 y FB(G)12 b(A)h
FG(\305)1917 2872 y(\241)-20 b(!)1923 2925 y FB(A)o(C)p
0 TeXcolorgray 26 w FK(\(r)o(elation)18 b(de)f(Chasles\))1090
3073 y FG(\306)d FK(3)1199 3020 y FG(\241)-35 b(\241)f(!)1197
3073 y FB(G)12 b(A)i FG(\305)1390 3020 y(\241)-19 b(!)1396
3073 y FB(A)s(B)18 b FG(\305)1578 3020 y(\241)-20 b(!)1584
3073 y FB(A)o(C)365 b FK(\(on)17 b(r)o(egroupe)g(les)2622
3020 y FG(\241)-36 b(\241)g(!)2620 3073 y FB(G)12 b(A)s
FK(\))1090 3221 y FG(\306)i FK(3)1199 3168 y FG(\241)-35
b(\241)f(!)1197 3221 y FB(G)12 b(A)i FG(\305)c FK(3)1430
3168 y FG(\241)-18 b(!)1436 3221 y FB(A)o(G)509 b FK(\(car)16
b(d)n('apr\350s)i(la)g(question)h(2)f(:)2963 3168 y FG(\241)-19
b(!)2969 3221 y FB(A)s(B)18 b FG(\305)3151 3168 y(\241)-20
b(!)3157 3221 y FB(A)o(C)23 b FG(\306)14 b FK(3)3386
3168 y FG(\241)-19 b(!)3392 3221 y FB(A)o(G)6 b FK(\))1090
3375 y FG(\306)14 b FK(3)1207 3287 y Ft(\263)1240 3321
y FG(\241)-36 b(\241)g(!)1238 3375 y FB(G)12 b(A)g FG(\305)1429
3321 y(\241)-18 b(!)1435 3375 y FB(A)o(G)1542 3287 y
Ft(\264)1090 3545 y FG(\306)14 b FK(3)1207 3458 y Ft(\263)1240
3492 y FG(\241)-36 b(\241)h(!)1238 3545 y FB(G)t(G)1355
3458 y Ft(\264)2046 3545 y FK(\(r)o(elation)18 b(de)f(Chasles\))1090
3716 y FG(\306)d FK(3)1207 3629 y Ft(\263)1240 3665 y
FG(\241)-57 b(!)1257 3716 y FK(0)1314 3629 y Ft(\264)1090
3879 y FG(\306)1159 3828 y(\241)g(!)1176 3879 y FK(0)18
b(.)-38 4153 y(C)o(onclusion)h(:)f(on)f(a)g(bien)1718
4199 y FG(\241)-36 b(\241)g(!)1716 4252 y FB(G)12 b(A)h
FG(\305)1908 4199 y(\241)-36 b(\241)g(!)1906 4252 y FB(G)6
b(B)18 b FG(\305)2097 4199 y(\241)-36 b(\241)g(!)2095
4252 y FB(G)t(C)23 b FG(\306)2295 4201 y(\241)-57 b(!)2312
4252 y FK(0)18 b(.)-38 4418 y FL(R)o(emarque)12 b(:)17
b FK(Le)f(point)f FB(G)22 b FK(est)17 b(sur)f(la)g(m\351diane)h(\()6
b FB(A)f(I)k FK(\).)17 b(C)o(omme)24 b FB(A)s FK(,)15
b FB(B)6 b FK(,)15 b FB(C)25 b FK(jouent)17 b(des)f(r\364les)h
(sym\351tr)q(iques)h(dans)e(l)o('\351galit\351)3595 4364
y FG(\241)-35 b(\241)f(!)3593 4418 y FB(G)12 b(A)e FG(\305)3779
4364 y(\241)-36 b(\241)g(!)3777 4418 y FB(G)6 b(B)15
b FG(\305)3962 4364 y(\241)-36 b(\241)g(!)3960 4418 y
FB(G)t(C)23 b FG(\306)-38 4476 y(\241)-57 b(!)-21 4527
y FK(0)17 b(,)h(on)g(pourr)o(ait)g(inter)q(ver)q(tir)h(leurs)f
(r\364les)h(\(par)e(exemple)j(inverser)k FB(A)c FK(et)c
FB(C)9 b FK(.\))18 b(Le)g(point)f FB(G)23 b FK(est)18
b(donc)g(aussi)g(sur)g(les)h(deux)e(autr)o(es)h(m\351dianes)-38
4627 y(du)f(tr)q(iangle)23 b FB(A)s(B)5 b(C)27 b FK(;)18
b(et)g(c)n('est)f(donc)g(le)h(centr)o(e)g(de)f(gr)o(avit\351)h(du)f(tr)
q(iangle)o(.)-246 4700 y
SDict begin H.S end
 -246 4700 a -246 4700 a
SDict begin 12 H.A end
 -246
4700 a -246 4700 a
SDict begin [/View [/XYZ H.V]/Dest (exo.109) cvn /DEST pdfmark end
 -246 4700 a 0 TeXcolorgray 102 x FL(Ex)o(er)o(cice)d
(109)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1296
5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 157.628 a add def
/d 0.0 a add neg def /h 95.60123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1296 5646 a 1036 6165 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
142.26372 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
85.35823 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
142.26372 142.26372 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 0.0 def /t1 0.5880026035475675 def
/dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+2.|0.6*sin(t)+3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
1036 6165 a
tx@Dict begin { 79.09859 96.73915 } PutCoor PutBegin  end
 1036 6165 a 57 x FD(\265)1036 6165 y
tx@Dict begin  PutEnd  end
 1036
6165 a 1036 6165 a
tx@Dict begin { 45.52455 88.20367 } PutCoor PutBegin  end
 1036 6165 a 6 w FB(A)1036 6165 y
tx@Dict begin  PutEnd  end
 1036
6165 a 1036 6165 a
tx@Dict begin { 144.53998 143.40163 } PutCoor PutBegin  end
 1036 6165 a FB(B)1036 6165 y
tx@Dict begin  PutEnd  end
 1036
6165 a 1036 6165 a
tx@Dict begin { 146.81625 88.20367 } PutCoor PutBegin  end
 1036 6165 a 1034 6164 a FB(C)1036
6165 y
tx@Dict begin  PutEnd  end
 1036 6165 a 1036 6165 a
tx@Dict begin { 95.03206 68.2864 } PutCoor PutBegin  end
 1036 6165 a 1038 6164
a FB(x)1036 6165 y
tx@Dict begin  PutEnd  end
 1036 6165 a 1036 6165 a
tx@Dict begin { 146.81625 106.69778 } PutCoor PutBegin  end
 1036 6165
a 1040 6147 a FB(y)1036 6165 y
tx@Dict begin  PutEnd  end
 1036 6165 a 2604 5646
a
currentpoint initclip moveto
 2604 5646 a 0 TeXcolorgray 1909 5895 a FK(66)p 0 TeXcolorgray
eop end
%%Page: 67 67
TeXDict begin 67 66 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.67) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FK(Dans)17 b(le)h(tr)q(iangle)f(r)o
(ectangle)23 b FB(A)s(B)5 b(C)42 b FK(:)1630 -22 y(cos)9
b FD(\265)17 b FG(\306)1904 -79 y FK(adj)p 1892 -42 132
5 v 1892 35 a(hyp)2048 -22 y FG(\306)2162 -79 y FB(x)p
2127 -42 113 5 v 2133 35 a(A)s(B)2249 -22 y FK(.)-246
166 y(Donc)1570 348 y(cos)8 b FD(\265)13 b FG(\243)j
FB(A)s(B)22 b FG(\306)2055 292 y FB(x)p 2019 329 V 2011
411 a FA(\010)2058 388 y(\010)2025 405 y FB(A)s(B)2152
348 y FG(\243)2209 354 y FA(\010)2256 331 y(\010)2223
348 y FB(A)s(B)1570 508 y FK(cos)8 b FD(\265)13 b FG(\243)j
FB(A)s(B)22 b FG(\306)16 b FB(x)5 b FK(.)-246 691 y(On)18
b(obtient)g(de)f(m\352me)i(:)1708 790 y FB(y)i FG(\306)14
b FK(sin)9 b FD(\265)k FG(\243)j FB(A)s(B)5 b FK(.)-246
876 y
SDict begin H.S end
 -246 876 a -246 876 a
SDict begin 12 H.A end
 -246 876 a -246 876 a
SDict begin [/View [/XYZ H.V]/Dest (exo.110) cvn /DEST pdfmark end
 -246
876 a 0 TeXcolorgray 126 x FL(Ex)o(er)o(cice)14 b(110)p
0 TeXcolorgray 41 w FK(On)j(r)o(epr\351sente)i(les)f(for)o(ces)f(du)g
(gros)g(et)g(du)g(petit)i(r)o(emorqueurs)f(par)f(des)g(vecteurs)2768
949 y FG(\241)-51 b(!)2768 1002 y FB(F)2814 1014 y FI(1)2866
1002 y FK(et)2948 949 y FG(\241)h(!)2948 1002 y FB(F)2994
1014 y FI(2)3047 1002 y FK(comme)18 b(sur)g(la)f(\002gur)o(e)f
(ci-dessous)o(.)p 0 TeXcolorgray 0 TeXcolorgray 1059
1953 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 214.5335 a add def
/d 0.0 a add neg def /h 101.2917 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1059 1953 a 1021 2062 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor   2.0 SLW 1
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def   /t -0.5235987755982987 def /t1
0.0 def /dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+1.|0.6*sin(t)+2.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     28.45274 56.90549 lineto closepath
gsave 1 0.9 0.9  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.24318 24.1177 28.45274 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0.16 def /x1 7.7 def /dx x1 x sub
49 div def /F@pstplot ((--8.-0.*x)/4.)  tx@AlgToPs begin AlgToPs end
cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
99.5846 90.4795 28.45274 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
156.75145 57.47466 99.5846 90.4795   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor   2.0 SLW 0
1 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def   /t 0.004435368196803145 def
/t1 0.4409977613546513 def /dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+1.|0.6*sin(t)+2.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     28.45274 56.90549 lineto closepath
gsave 0.9 1 0.9  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
156.75145 57.47466 85.35823 24.1177   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 91.04869 99.5846 56.90549 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 24.1177 85.35823 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1021 2062 a
tx@Dict begin { 192.34038 68.2864 } PutCoor PutBegin  end
 1021 2062 a 57 x
FD(`)1021 2062 y
tx@Dict begin  PutEnd  end
 1021 2062 a 1021 2062 a
tx@Dict begin { 49.50792 95.31686 } PutCoor PutBegin  end
 1021 2062 a
0 1 0 TeXcolorrgb 31 x FG(\241)-50 b(!)1021 2147 y FB(F)1067
2159 y FI(1)p 0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a
1021 2062 a
tx@Dict begin { 39.83366 44.10184 } PutCoor PutBegin  end
 1021 2062 a 1 0 0 TeXcolorrgb 31 x FG(\241)g(!)1021
2147 y FB(F)1067 2159 y FI(2)p 0 TeXcolorgray 1021 2062
a
tx@Dict begin  PutEnd  end
 1021 2062 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1021 2062 a
tx@Dict begin { 19.91682 60.31967 } PutCoor PutBegin  end
 1021 2062 a 0.30196 0.30196 1 TeXcolorrgb
6 w FB(A)p 0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a 1021
2062 a
tx@Dict begin { 48.36957 46.66248 } PutCoor PutBegin  end
 1021 2062 a 1 0 0 TeXcolorrgb FK(30\011)p 0 TeXcolorgray
1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35823 24.1177   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1021 2062 a
tx@Dict begin { 87.63449 29.59065 } PutCoor PutBegin  end
 1021 2062 a 0.30196 0.30196 1 TeXcolorrgb
1019 2061 a FB(C)p 0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 99.5846 91.04869   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1021 2062 a
tx@Dict begin { 101.86087 96.17041 } PutCoor PutBegin  end

1021 2062 a 0.30196 0.30196 1 TeXcolorrgb FB(F)p 0 TeXcolorgray
1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.75145 57.47466   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1021 2062 a
tx@Dict begin { 158.76636 63.16512 } PutCoor PutBegin  end
 1021 2062 a 0.30196 0.30196 1 TeXcolorrgb
1019 2061 a FB(G)p 0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062
a 1021 2062 a
tx@Dict begin { 50.64584 59.75093 } PutCoor PutBegin  end
 1021 2062 a 0 1 0 TeXcolorrgb -1 x FD(\265)p
0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 85.35823 56.90549
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1021 2062 a
tx@Dict begin { 75.11522 62.59595 } PutCoor PutBegin  end
 1021 2062 a 0.25
TeXcolorgray 2 w FB(H)p 0 TeXcolorgray 1021 2062 a
tx@Dict begin  PutEnd  end
 1021
2062 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 99.5846 56.90549
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1021 2062
a
tx@Dict begin { 101.86087 61.45802 } PutCoor PutBegin  end
 1021 2062 a 0.25 TeXcolorgray 2 w FB(I)p 0 TeXcolorgray
1021 2062 a
tx@Dict begin  PutEnd  end
 1021 2062 a 2841 1953 a
currentpoint initclip moveto
 2841 1953 a -246
2022 a
SDict begin H.S end
 -246 2022 a -246 2022 a
SDict begin 12 H.A end
 -246 2022 a -246 2022
a
SDict begin [/View [/XYZ H.V]/Dest (Item.321) cvn /DEST pdfmark end
 -246 2022 a 0 TeXcolorgray -141 2136 a FK(1.)p 0 TeXcolorgray
43 w(Le)23 b(r)o(emorqueur)g(le)h(plus)g(puissant)h(\(en)e(haut\))h
(g\351n\350r)o(e)f(une)g(for)o(ce)g(de)g(20)12 b(000)26
b(N)c(sur)h(son)h(c\342ble)o(,)f(le)g(plus)h(petit)h(\(en)e(bas\))f
(une)i(for)o(ce)f(de)-38 2235 y(16)12 b(000)20 b(N.)d(Donc)g(dans)g(la)
h(\002gur)o(e)e(ci-dessus)i(on)g(peut)g(pr)o(endr)o(e)f(:)1484
2418 y FB(A)s(F)24 b FG(\306)14 b FK(20)8 b(000)149 b(,)161
b FB(A)o(C)22 b FG(\306)14 b FK(16)8 b(000.)-38 2615
y(S)o(oient)21 b FB(I)27 b FK(et)20 b FB(H)26 b FK(les)18
b(points)g(de)g(la)f(droite)g FD(`)g FK(tels)h(que)g(\()p
FB(F)12 b(I)d FK(\))18 b(et)g(\()r FB(H)6 b(C)j FK(\))17
b(soient)h(perpendiculair)o(es)h(\340)e FD(`)p FK(.)h(D)o('apr\350s)f
(l)o('exer)o(cice)h(pr\351c\351dent)g(:)1104 2798 y FB(F)12
b(I)24 b FG(\306)14 b FK(sin)9 b FD(\265)k FG(\243)j
FB(A)s(F)24 b FG(\306)14 b FK(sin)9 b FD(\265)k FG(\243)d
FK(20)e(000,)1072 2923 y FB(H)e(C)23 b FG(\306)14 b FK(sin)9
b(30)1470 2888 y FH(\261)1515 2923 y FG(\243)16 b FB(A)o(C)22
b FG(\306)14 b FK(sin)9 b(30)1965 2888 y FH(\261)2010
2923 y FG(\243)h FK(16)e(000)17 b FG(\306)d FK(0,)8 b(5)i
FG(\243)g FK(16)e(000)18 b FG(\306)d FK(8)8 b(000.)-38
3143 y(C)o(omme)23 b(le)f(navir)o(e)f(suit)i(la)e(ligne)h(droite)f
FD(`)p FK(,)g(quand)h(on)f(ajoute)i(les)f(deux)g(for)o(ces)2443
3090 y FG(\241)-50 b(!)2443 3143 y FB(F)2489 3155 y FI(1)2545
3143 y FK(et)2632 3090 y FG(\241)f(!)2632 3143 y FB(F)2678
3155 y FI(2)2713 3143 y FK(,)21 b(on)h(r)o(este)f(sur)h(la)f(ligne)h
FD(`)p FK(.)g(Il)e(s)m('ensuit)k(que)e(les)-38 3243 y(or)o(donn\351es)i
(de)f(chacun)h(des)g(deux)g(vecteurs)h(se)f(compensent,)i(c)n
('est-\340-dir)o(e)e(que)g FB(F)12 b(I)30 b FG(\306)23
b FB(H)6 b(C)j FK(.)24 b(On)g(a)f(donc,)h(d)n('apr\350s)g(les)g(deux)g
(\351galit\351s)-38 3343 y(ci-dessus)18 b(:)1696 3442
y(sin)9 b FD(\265)k FG(\243)d FK(20)e(000)17 b FG(\306)d
FK(8)8 b(000.)-246 3493 y
SDict begin H.S end
 -246 3493 a -246 3493 a
SDict begin 12 H.A end
 -246
3493 a -246 3493 a
SDict begin [/View [/XYZ H.V]/Dest (Item.322) cvn /DEST pdfmark end
 -246 3493 a 0 TeXcolorgray -141 3606
a FK(2.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17 b(la)g(question)i
(pr\351c\351dente)g(:)1363 3772 y(sin)9 b FD(\265)k FG(\243)1586
3775 y FA(\030)1669 3754 y(\030)1730 3739 y(\030)1594
3772 y FK(20)8 b(000)p 1363 3809 442 5 v 1470 3888 a
FA(\030)1553 3867 y(\030)1615 3852 y(\030)1479 3885 y
FK(20)g(000)1829 3828 y FG(\306)1928 3772 y FK(8)g(000)p
1908 3809 211 5 v 1908 3885 a(20)g(000)1659 3988 y(sin)h
FD(\265)17 b FG(\306)d FK(0,)8 b(4)1770 4113 y FD(\265)17
b FG(\274)d FK(24)1978 4079 y FH(\261)2029 4113 y FK(\(avec)k(la)f
(calculatr)q(ice\).)p 0 TeXcolorgray 1909 5895 a(67)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
