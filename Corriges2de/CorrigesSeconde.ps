%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesSeconde.dvi
%%CreationDate: Wed Jan  8 14:10:35 2025
%%Pages: 56
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Symbols wasy10
%%+ Fourier-Math-Letters-Italic LINE10 CMSY10 Utopia-Italic
%%+ Fourier-Math-Cal Fourier-Math-Extension fourier-orns
%%+ Fourier-Math-Letters Fourier-Alternate-Roman Fourier-Math-BlackBoard
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesSeconde.ps
%+ CorrigesSeconde.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.01.08:1510
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 54 /negationslash put
dup 63 /perpendicular put
dup 91 /union put
dup 92 /intersection put
dup 106 /bar put
dup 112 /radicallow put
dup 124 /club put
dup 125 /diamond put
dup 126 /heart put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 165 /divide put
dup 183 /lessequal put
dup 184 /greaterequal put
dup 188 /approxequal put
dup 189 /propersubset put
dup 196 /spade put
dup 197 /plus put
dup 198 /equal put
dup 199 /less put
dup 200 /greater put
dup 221 /notelement put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735F731DA07EF3D6E818628
AF05166460DA5B83052A083336C23DE3F4916E3E60E10509910166E063832CE3
29E5DF2FDFD0AA1DC9F1C99A95FC477BF7F113B2CF4626600B1B5DFF712EB302
AFCB86EEF4DD29EA456833CF29BC0C5CC42C0BB09735A0A83143A0560B03DF25
B27B0B383BD641B85E8F6790F6ACFA6A03C77D60425F8B515C48893EE05FFD60
CB40D1B9185FCF7D27FAE0616B15007FBA17D23DBE9347515CC3A932A96246E1
85C477A9D6665D4F5D8F374CF4C0F4CDE76C57C8F7BD4A66071AF94604FBA047
80C65D0357949E03600E099BFE0ECAEBC6E6A636BCFEFC0A9035532476354B49
DFC61218068C10E8103BFF464394C6A73A86807D46452EFE438C9A865EBF1502
8CE17BF9170B94D0FA7BDE715555B153789077B9B3AEFEFB9A29822602690D94
AE7D7596DFBD678ADEA4FAE4B6E00B9A164449C63EB2A86E35D9B043D9130CF1
224064973F96E702E0C779CB10D9252C257B0ED688E95445B8C9887FB94B6475
C403469D0C1E533901FF87EF0CE67E9FAD32BD49B1187FFD2FF57E804C07E435
4EFE05BA58C67A9FEBA3302C25CAB2D1B1310C44D6D6FDD852B168B681C5B82F
3165AB469AEB5833F36D19A959AC93B854DC3F7A095462C56792364C5F5B4A88
EE76727AD2DF7F0659F01483E713AC52C6F60D719BB6F8F18826691B24DEE418
6917882A7167C33104AC1A22FF7CBF92E44213EC595A515A6F0D9775F853CBFF
FA63C226165AF3941C72A7CA9AACE0AC87DBB2BD2DB0F07B6EED3FC90786AC63
6B6237FB68ED296F3AF921D1F6D055598A1353241A2040089C2795045216A625
66EE24495AEC590894BD5B9286B80996A6D3F9EFAE25863165DE04158969176E
46102A323D6A4D0A36CD77EF9CC6A43753B2AC7EC55025F9641CC3F66276278A
593591A3C9C6A19CD63AAD4188418D97F4DD76CA87D0530F7383D2172FC1DB7A
C6218D792C7D57400244D4F3B02904459F7FC90CB36CCB2D61F275ACA46E3FD8
C0CF0750E596C58F4BBE4FFB3714075B0C16E45659CE0A4718F53E9BE91E8CF5
647C62DBE3CB4E677F9B86515697F1984AE42245CB9F3B6EC90039AFDF8DB208
50540983907567C9C09EB43C099019C34DA7E44339BA3CBD52DBD7CAFD3A3902
A343E02334499117F72A894C21A89EAE2A5019DAEAEF7C54EA36763C69822CEA
19C8597F1CFF309FDBB7731DAE1D82FE255E776F4DB6D8914E7D03080CDCC66E
E35AAC1476FB19B8FF8B618EAB13DBD31604776A716C31316F0B6A376B41BD72
4AC99469265FB7BC76788ECAA6CAC47CDD975B9E03CFC42EAD24CD20C3315B75
535C171E366AF256A417FBE33A8EFA838B4AF441A3D3F6216CD2AB3E5AB50682
F29AF70027EF3863295710118EF9BC899484AFF6B62CF28DF1EC4A4C1582F8D1
558330F2D0A15494E91A61137BF441A9CF7BBF5F3092B81D2DE1A736F1661718
F6189F8041BBBD4CB6B8B445409BA4D531F1F4B91DB8B14F87440E1F6B8B2037
35F77A90108DC564A9C988FD18706E0162717077F1328000C6CD3DE99A253D7D
D3332478B574AA6CBC84B953DA4E236FCF0A9DB08BBCDA5638488A5D60029C2C
B1FF0505E5420D55D16326D52E6B51BEA2EF4513C4C07CD63F2FEE1FDDE0B5D1
4635B0F67E3778EE72BEA9A10E6890A6588A44F30CEBE23A894D6CCDBD1592F0
A1209DC35E8AAEAB175FE24E7B80572060F16C62E742F8B0E1DCE2661216B528
52950CBB5021CDF8AD1DCAFCFE8AEB21AF90476EAF2538206351B96D6885F2B9
CFCA84CBAFE37DE21BDB70343DD0DBD3252469BAC03D9AE9D1E5B1E063708178
53998FACB7F26404EE2FA787DA3EAA0888BDDBD923DDA59CF2E984BAC791F2D6
30B541B95D8FF08BE1C03C92CE33605BF65887A77A20C4FD1DA9AA81C8CC85CE
98B9016B8467816571E0473F421DD6866B938D18059A3B7BD942471E70811C5A
68334AC0448A8136131137AB133BDB7E6588ECFEB9EBCF5D96057447A0A2D56F
F25E861FE3198215CB6E3DECB9C207414C4B5377EDE64464DA19D72025381DD4
84086907DE0BC4CB9C0880036D94B609121C58995972CCBF5C0ADE1C7E956C90
68FD88351F4E6E95A6592A0F48707346AFD671E797CAAC4D688D194E64EFC3D3
F4EC6A8589F4A9B03A167E4A92D33E604D80F84A6FD275B903C1A4FE7A2B1487
0CE948F097B57751CBA3893EEA6B6BCFDA358801977EFD2253228D93C5DB3CE4
7EF1C10E3DDE606844B71BAE46CED29226510D98113B03EE95CCF26FA58059CB
BEC84A638A7B13FC78163DD740DC5B5B308069D5E4DB486D3D415175D3D3BB74
7BDCE5CB4231208967F667F512CB5754AED6B7B2BF80D29C9934CA90BF334952
21B7FE297D33FBE904385476C1C2C2B2A0E289CB8D7A54D8DADFA2716E5E21EE
F6753198CD778768D20E141A147251F6DC926C5185722F6D4371714506120F83
3068607B79F541DEF117F3FE679A1B56938C26591112AB1A70B690DD8ACF5A27
D03C27089CF31D9505A2970FBE4C45F86B8FDF4027AC03E2E11E0127495F7B4C
354BD78DEE8A8CF2D0AA79423353B207B262EB6B679EB8222F2735BD3FC09C7C
DCB6C64C1E8A97F5F1B3B2FB5B456022F74E14CCE6E82A752A6AB5B0705520EF
126DCA504F2B976898F48F80745FBFACAC304DEBF82F8B8C0ABE7FB5A475B068
857A23DC9E78394B2F9D88560C89368F814DCCE18355EF4B887B631CD76EA9B7
CEE7EFBD0B5FEC21392611355BAF0A1A512ADC573DBCE0B3A7FC2E8EE8902A8B
2904FBC164E8668B2B1AA6209550A940C40E40D5A1058BAE727E621929DEBBA9
3F46645EFC32B2DB08B5BDA00219CBD1BA0B3D5287A800E12935D338B6718AB7
E3D3EE0B8A53B579D2A22EDA11C918AB7B3D29640BBF2C6EA9E62B231BF0579D
9D1A45A97FE00E0BA19066E2894F28006C7B2E9330C81B6D559421190EFBDE42
B13D3BB46A2E846CF7FE66A574F8A9421C96937D13DB7872166783BBA3915C53
9C390A1FEBBE18779A9ED49A1C13D820B80D4042F86A1359AD867A9173F67367
2937AD2274E85AF2BBFE3C9987058F55A7EA50FE66E9DC5EC079FD55B19D1BB5
91FA0DE95EBF5A69EF141987ACFC91C9E549EB1F57EE4FE5368457AF372AFA08
9C40C8B60092967FD8A855E48D89DEF6D1CBF5C2D2FB95216AC4AEFC0AFE349F
5B1667E4D0A5FDDC3458199EFBAA40B235967F25B6E05BD89A3A314A6EEA7F75
E4F845B46D56ADA3B72135519B11161BB61B23C960990679AADF80676D9790D9
E3952C3CE10D3585EE704A0952C803D20A78780E55A40128E11419AB9585B58D
84802B69BE2235452BB9B29231FD054905BC1594531913C7A770685AEDC94AB6
92F8E62822778482339E740BB87245F7595F778714FCEA477BDC872E3374391E
C9CF50A4DDFC630804B96023F7E718C30F9F3B0C173AC6215E1CB2F31F22A054
620BC6A6F7727903E0706E18FAFCE78AC52BEF47158A74482EA77F82A9AF7BCB
D8FB8DA529AA95A26749346120D59E0EE747834F4884AB5FF37F1790B344E370
12A7E22D05BD27E1D5AFBD9242D5357693EE8468A7CED62E113394B97579E240
EE51C02B1187D864AD9AF88DC2EDD2C0030F186F890F16113669C910F6D6A35B
F375C0A9904B31D5E6F0855D302FE6DF71C2827808AA64D0BA6D41590E0E821D
6B23960A9C4904BCE27CAFA7089E8262C756B253646F1FA22BA43BBF37428873
B93F7C8EC03138BA9C52122C22AFE6EB1619DE8FD7EDBA0330DB448F880253E4
66473BBA86E8A2265E693CB134403EDE6C3F02669C071F08AA4447731E2AFCCD
600CD6ABF0273290B6889A2D7BD84995093986D77D07EBAB1E0E595621035660
0320E5F8EDE050FBDA6DBADCCEE553BBD14D2F3EA9C2A8D91CA12B9131F95703
2597B99E2F8731E1BA44AA64E4F1CC7EC4372A212B4DFD540DC2DD7DA051EB13
F81A64C982B1B6FF0D34CD6AAE11C52D450F07300B8FFD9FB8F0679C37300D27
79313D254E2CDAED18C9DA1222117F49E19E4B9FB255DE51BB054D43E98F6232
85598BB767821A3ACCF063850CAC5B5B5B539E2046E1E80AA7A5DD235D368AA1
27095CA5DC1FE04D96AA67CD395EDFE7C0D82E2EAF3EA6B45F435421F8B487D9
CE358989F22A54963BAB1BACA13D214528CE498E3DC2256777B73F04077017D8
C31C9811398037DA805BF5FB716749FBE63042FC2932735A4A1F67287902B192
1C186886407F3FBEAE5696093FDF6ECDF00E78EDD3A268EE203983406620362B
D6ECCC5CF4BA627CDA3909D9FFAC8D09C3460CC060DF489E5D60C202C11DBC69
E6DC1AD28B06C71CD6F78FF6C974B5993198E37D5646677EAB6854223FBE4FE5
FFEF53E31CAA8B140EFF5017A1B32896A6FE62FB3FAFD5FDB44CB5EADED64744
49C08302E0C19D96EBADDF662D5208C4D0B9F0298F4DDA20C6F001850D7A9202
FE5FCD1A0CD2FE0E14264F3743C94AA439A99AA9C4797218E496DFD5022351DD
D48434301F524718E41C9DC2551DAF900D44980A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B3552F3E5FB02EC27C94DEC59320A85D8638
839E0B4A706FEE1C919E60BD887421EBA20B332314919A7DCE09D6BC9AFE8A87
AABC30C4C8E71760B8D8BFF54A92D01D56633B98C875EAE44A8E1A57FA8C4B4A
78D6DAEF11DA248A1939C377F5801511B68EC34FE531B3D50F27D872796BC5B1
A6EE6CC8E4E57B32B8C2F4F1BA4FFBBF8252F09AECDAC3A7B0BF0FB64D740B7B
50FF957F2273D5C09C58253C43025C9154DDD78F948802E42446990E7729AEFF
7D3CC6B82649FD0C5CDB962E1361E8214CF04A4EC5AD20AC8F839CF46EB81D42
1D4311FF5FD9870C55B7ABAF82D8258EF286711122D40754EABDA3DABC4A4112
5B96B6B3131B4628CAE101E23386B75C963C32FBA63F651E45935442632D98E8
B1AEB889EF60C9F55ACAF15FD5AE2F8B974CDC5E9DB503F55F996D5334E64D21
558D0F2DA2F59423E14F44F36C9488AAC8441E39BC750EFDD790E1B295CA1556
681A3392E068420AAC338D4EB649B111617DFE02C39C261AB637A70E8304AAE0
FAEDDD47561E34A14B48F814D95191673BE8DC07A82FB608825A86B271820081
56C6E43B32B265307C1204C26A556A06CC4B9458B740CA4963ED0E0F6645FEB8
BC6E3B3944DE431FA1A5A27A7B2A436D8BB2BBBE387D6829BED50C44D1211193
BA34676BA9A2C464C18C3AFCB9549357583FE31FC989EF8EAE3D39AEFBE6D032
C78ED64E8A5DA4382727FA799F6F6E4F988BE448CF9D0356BA59728D15009514
1EBE6DFE6FD88069BAC5574FD7AB43A145272246958BB7BE6685FF502BBD2D45
6324EA3A150147DF3533994F4DD50DE66EDC3471A415F6FD49960832EE93E99D
5C075DA951F9A78B0EFB0E4D7D5CEE7EC4F18856BB7AD4C1F23240164EF274DA
815E392714A07ACD1FFC9CD8C3AFEDE07789D4A91453268100D58F847D4F55BE
DF24259876AA179CB516D72CB4D8C350B790FAC2A76FE01753C0049C780A953D
B8F08292E36DC445A8B8D45DCD339E17E1AE85DD1739BE8DE243F6AFF847711E
25F7040BE2222343DD470D1BFD1C6F74C02CD379D654E7D7D163040AD40BB06A
1276140EA8C12755CF3D485963E33797676042C995A6F86576A09791A62DB56E
0B5ADB15A44F64E454FAE82FDCCB55E3DF1189D5C2E3684FB04DCC97A2CC5466
6A8FD166F571A973240F5A783EBDA8E233BE2C3B850B9F45C5E59E09A4F10AB8
72CFC148466DB776ABF28820AC9379FF1891D6B8508596BE415FA2D308CFC6BA
E96B758F4FF032A48B18E000B95F2B145E918D211B00E3B1651412307AF69D6A
1860BD18B72D1133795C803EBC0384077613547113D0C7A63F906E186A922E27
57402F957086DF963768B5EEC2E92F15A30E96F042623E7F50FE027FC2DD76B5
23E587A4AB67DAD3BA12612DD54F2AE30D83B66A3C9174E83B336D8D742FDE62
94105AF66B58D08C3E1759103937E7F24A5CDBCF4BB43EB0D3868D6373B736D1
A0CDB40DC0E9B11D9A7F53EC44D98011ED75D1C3BFE107E40DF15E911DDF0C56
D2B90C302D3D69325E017D4422E58651C0C73431BF133C1E64A8E0DB8FCA0A34
4E514CD829E3905EFCB3C4A56B944F71749F4DC18A88E849D946B75B90A7D202
E2A15610BF00F69901B645EE3FF46B759BEDED9BDCF6CBE68FEF538BA243B161
EBAF2C1E9561A9C0B6EB7D3359B318431E422D8DAE5A86550BE1A605BCFFF25D
F66DDC7933F81A332B982DB20322885511F968716EEC919FF02F87DA73AA7AC5
64F47114A9B084D603D45E52B1E53062D7F42D769D2141173E61056836D677DE
B45DD711488B3ECFB6B0638AB9D447BDD2DF098ACDD8819EB340142FA813092C
2D6371041F609C62B933EB55FF4A446F702BD89C6F57DE1C436DCD67B8D44B70
1417AD40310D2BB60FF0F2463780D43A69A5AF81CF60A9CBF3903856737C50BF
00F967D3D1D99C7A085B142A3B2473772F14D04178A29B593E676013953DF554
3FA340D8DCDB81EBD8F19D7EC702E6D681D0FE6D15BC04ECC8D99F11AC22ACE4
6B4C76BA975F6E9A6F6BFC6D5FB57B5400D77C7F7FC3C7CAA6173D5B8D8EEB7C
04368C47428E55261D1E53B8FB06F50C382C77DD61C6E52C99EDA8946B78E058
D2503D4087473D3315096C0FF7A9B108AB312AABAF05171FD8CCF17D84AB3E85
224CCFBCE9CC07E269B3D95FA0545C3C47AC75EB56F4F5D05BAE05DABD48E680
FA52C8A337EC7644E819C508FC90EF8B69BE5AA94ACD159C40455A272B187A91
07778C2256DD39484B9B47E512E4D4B3C22B958724FB3148A2C38D73A3760FE2
22E0D025E59B029C0658AFA4D3281F2FDACE2E6E8CB1AC3EA058A07D235A39F0
BB4E862C825E88046F4AF8AEA967069705A2E6BF3AAE379412F0BB8AE64EA369
D49FA7043E7FE4B2539995283045F567FB2E3660D1034D72FC882DA76DDBFD43
EE0F5400168C5622A46FE7C3F562499A4022C1D3BEB3ACDDE4BEB5560A05899D
4D1DA428631192A00498F1B6F0863ACA4DB832CD33E7EBA0AE1E9BB5F520B749
E8FE9FFC97A8C5C173714D348C66D7D12CE67C234E4195CDC501AF422A313B75
A9E1106658A0D9E977F91D1E9C2AAE6AD9C4CFCDACF0976BD6797A198BACD50B
A20CE0499A148236B55033A113C9F362473C7253F0693AC1A9A5200B0FE486B1
8A5FACFAFFB4C6461F5F8BC6D78AE5FDEE28D414597073D75C6C2F767F362057
5103917C1A6E4156C138704DEDAD33C3D91F7585B6508639FC3EA9376B96D802
1DAA983F832CBFE8815F3F79A67A502E25ED2830E604C523394EC8C1DAE294DA
2DAEAF2E38225D405D3C311250300149E9583B8C24295EE27790EAAD13ACD5A8
95C0C6A856666973F46EE66DE1D172846D67F367240C6370EC2019A802A795C0
6E2EAE8E8FD081329ED4F54674A57D0A2F31A10EACE6BF21F41AA3D7E7FF52F1
5D96071CC77E4AB72B0FC4D93ECA41D6C531B2614FFBBD033BCC4063D04D679E
58F69ABF609C3299F833CA628B59FCEB48AD7369DDA16340D0A699E733AA64B1
EF741A45714AC8DEECAB7FEF2C6488E4EBD5CF5699928883C2A0F1C09F8EBC51
0D5D7C3D570D65C6893C861DD1E972CEA38E83F048499386B9DF508D2824EE9B
C178C413E7E0C3A90864CA602314458347AC2DBD011A9172AE47FE9C116F3BB4
9E9EE7BAF271B1661980677D4365D5C807298D6011A033E13787525F52209942
E437166EB8BA57EF077B107CA77790C6E7A6F6A65D7138889833A95241A70538
B4639D720759077F1E6B3B823E24A85D002F7FD36B3F009DC844BE50420402F9
078C11DB8A7DB17E637F825A0759523FD375B6AC3FAB3804FB5AC2CCC2940CF7
2481744CAF831C82CAD09B42F93E4AD273E405E008E480C8D43C6C3FF9FFFE1E
4FE4CFB1850271CA6B375518B7FC1EC0418A98448D6D468B0A7A0242806C81FD
9E68A63A401204C4DA6286A034036F4A7D1380131DA6D999E43A265BA3441FE4
064E667337DAC7D0FE91562E0B0992B4506498E6A863ECBC0C1D27E364F99869
82C409DFB0674CFBF852AC8639C99D1BACBEC8DBDD954DCC86F8D62C40F32C78
84E7BD4D38458A51939E4533E3E7DC9272413DB3120669F0349D690162B7373C
C63FE5A3D9ECB5F6E4E69D783367D7076706152E439CCFB5C48E6223EB09921F
1BB15AAA5EA0AF78EA13DEFC6FD1B1ECBD7357180CA4D384D55A058A451D7BCB
8B79173CC456CD0FD77BDA5596F650347A212072BE9AE68C4BB7F0BB648E9C71
66ABF120ED282E488E45144D0A379EAD19294C7B4CF0AF6ADCEEE457ACCBB484
024C679CFE4EDC6CDFB7D0DC3B4BD84A9A773A4989A4937B413A1EC35E7C020B
B15C8950C408C471AD74BB316933F5BDC2212298B7E2A2572AB9B68A26BE8B6D
F238226DCBF4FEA9D490254D00EED16A9005441FFB4FDADC94649D2E809ABCE9
0E7F32BEF4533C95EF3EACB71B37C37078920FEB9481BD23F5F3A4955E34F389
AF9A7AEE4C04C0D129E23449F3C0776D8058094CAAF4B6186F93B2C22A2B6A60
33F9EB789C58C1A257FFB9B96D2AB7F85E9EC7AAAB247327BF2FFA37633E0122
B9B091522EBB4139C440B183119AA64FB685AC446737AE258DCA988B41A1A00B
59F3857BFBB4F40A86D6FD1CE47B39596FFB19F76104CABCE8F9434DEF498863
65F081ED68403D1C41B3C8C49BADC451F98C9B5AC1C10EE4059A8CF7A31FB912
0EAF9AA043DC9DC3A1921560BEF1626FE41C7E04B2BEE93023D2F24F53FCF366
CF4A67747953E4944FB43CDFF88ED1185EB72C4FBD7311D09CA0699E46DE6B38
8A9BB1EE9E0C7238C5C93D0FEEC724C99D07D16C3B6E820730CA9ACE88B51E40
676125C5C4512B3A1FE9844FC3B1E58FB5D156DDB355D66FC9A93F4527426997
D63F46B4F0D4C2D2E50D32464FA36ADCD6A9A658BC15646C69020CDAB120A21E
23DB7E05CC405D523BD805ABB72AA3FB84C5EDE3D7BFFEF7E2DC5FACEF493B08
BB3651ECB1DB1193B36E3217336A623156C97F8C129AE7360E6B2860BA5211AF
692F139FA107EA9167B61F9B85C5EA8F2B890F83CC6DFCD0306BEFA68288E04A
E7F621AC4B2C8E728D3BD1A73515B18B60F5E19FD8BB6200F071FB876877DF1F
42DDC08F7A94C9294245EC5F9CA5F08C00E06E0195E9C49D25E46C2E24AB3C9C
29062266C1FE4458F3F4707EB41ED1D5EF68BF0FE0D02980AEFD664CA4151688
1029B4348ED0820E60B1A8B76CE9F803E3C9F6D688858BA3E68A0236702874DE
AF5C866F3442616A4C5199071BFB905F83E5F56FC10A1C2C919144CC9C39DADC
689F4F589B8BBE5B4EB51671AEA15BAC9F356820010D489EEE9ED8D42A628E9C
EC9E392B7E9F7C4C3279343D699840A297398E0C20F5F025EE75EF233DF48763
526A13447122B273DEAF5C866F3442616A4C519ACE6C560F86CABFEADBC51796
2A4087DC263061345828D816DB5D9C59E1A0206B7062468286D95693B98648E2
5BBD7179E7080BFEE466A1EBBA272C76D8269B807BE4307D8A44253B8FDB3BF6
48E65894E18636F36FA11BE2899514481B2B5150C603BAECA0A0EA9B058C8896
E31685199BFE58FA66F5180E84EBFA8D59BE117A061E40C88DDB940917756A1F
DD510EA6B70881663879C86997688C996E2561755951DAB75CDE41CF4C8B120C
B18A5B6F4766BB606EB571B8428AFE5B1294CCF679DB1DFADD7DF27A7AAE9C74
E18AB38C3A1FD963F245132D01F7C4FF2686F18D2F398B914A5B960F1697E7DA
D0CFD3A1B17BCD1A1F760498C875EAE63416A1973D6E84BA3BDA79327710B0D9
BFD43169EB599CB606E3823CF4C6B4C95926EDB0468104D02E402C64C158CD8B
21203363B2AFBACE43314F53B604CB995CB596B1076F3D70BD587BE7885307AC
3C6AC7D6D5F21C6CDCB7AF7A12C6C5F641816A1C9C39718DC36FBF52F48E5A93
AC9E09E7CEAA463832323BD781C5F085B2D105CE8849508AB9650F43FF3340E3
403FFD6F77D47F661FF6B8CAAB33B41D616E04A6706255CB4E88DAE99B5DA0D1
5028D540806E3A38E10193B8C2DA705BB5069F2B7222B33970092E40A294F933
AB5A4FD76D7A9CF0B20ECB0CB937CEF89275E66AE6945D4AFE97D7071CA7707E
DED071FB0C9C8236AF0F4548B862BA6A61B89BCF7BAF9833CBD5BB3AD4579446
94EC4C8947652CA8C73258346B5419152689A8DFD581436F47C60AA48208BCBB
55F2A552580CEFF530E1C3A4B89E5D79A8443E6F20B6B04916739E57A09B6024
D0469D4FDF87EA7BCA96F07CB88991508C75C058F8C9EEE77811171501286B97
3F3CD369EC670CABF975894FFA0388348F19AD97259717B3D0836F18ED0DE7C2
3F583DC78DF946491C645BDE31536E9087CCA80922B75E7EF41A49048E45A420
6F4C52BA7EA1CA9EACDEC6B96F17F4B8DDDDE9700569DBE8D221925B273E1AA9
CE874779400962FE185C767659438AD980E0B1CD394571392C3FB99EC7AF75FA
91AC68499A6705A33D637F18CE4FBCB16C2DB4DA2800F9657580CFFADC9502EB
0CC07DECE41861111516FE3E7BC6F460168B22EEDC5C22F76C75BC88E4DB0F3A
64DDE6524D995B8B4C94449A6A343214089692FA3C3BA89475C165DDDB37172D
36D01AC4044F17B8223626B77355D81CABA344F99255064A73E47F4D7ACAD20D
87BCC16D035C6E5D82C460B4122E88E548D21CCBEA889B47473BE5DCF7A24AB8
3FD753A9E426991C09E938354A0C6A0F3D8EF78C56F77D7A2CFDD1E534F18485
B0DDB77E09268A361A0BC8B63F94DA672CAFD245E58F5664585157766F0CBB77
7F9CB34FFC91315F66AA868C2BF8BAD29E73D78615DEED450E81E3A5C048FEC7
38F1FDD84EB630AABD888E3F74362E40BE6AF19C0DF7021B685A011A49DBEC6E
E9C4FADAA71D04DADE5D30F217183417A38BCF30881326E27BC3064450AC4A84
3C357BAE41217557ACF7F5DA3BC3200297769D57AB2B2FDD61C796345E525E8F
15F63E8AAD744DE1D89FA2889E33BCAFD54EFE392900FA19FECC2407B10D04D9
D433883E4864F738BC3BDB4D669EB777FDA513DFA9DA9D2AC31E9C973688E575
64736C94A9AB3E9D95319C54EEAF6D723CB99D58516FA232D4A70033547D109D
7F777342E80DCA6C6957C879318EA43B7CC317DB43F57F0397B2020D3E880220
549405DEBCC5AB0E397911CCAEA332EEFD6E0F9704235CE9760B397F0EFBB35D
0D466CF2624C00758EE3D1E1F0E13F09BDF18B30CFCEF5827345058A51B30ED8
855CB5ADA7DCC9E1B531B522211915F94F34D4071E6583B83A9E85CE3FEC6288
E4F902D5EFDF24B5800190A97FD06F208426DC105F653A59A3EED18E2EE2C973
FFECDA33956174B452E7BEDC710A1199E4567C6CC57710491A203C9D0DA6F892
3C424A736F2B9B07D0A857E1887DC76027CFD1ACFE8D0C446E49ABE4594E378F
7242F1A6635CCF6CF6524F72E0DAA07462FAE8E2EBC34095FCB5A16AB7A68EF9
60D01A54E1BEF7BFB02666A4FCFC4E1E4218BB841069179822F23333406D87A5
C6681A158226AF3FBCB811A85DD1428E480AD11B06A9345D286477D04EBE5478
90A5CA7EA4E778660FC94B3DAFC9C0A1742A6A915B52921CF2BADBAE8475A72A
85EB7C2523BC02292E1756DA44254EDDDF43B5A93B8C7D94F74AA464E105E29F
9274F4FBE9D0C5C99C055A805D26F236C7905831ABC9F04CB66222ED99B04853
D65C8D082D9A9FCFEEFD7D55A62F35F494ADDD3500D4CDA8C2B197CD78BB2D01
1D0045947C59F192653317882F6A342FAFA7A4A19D3431E656CC8848D17A70BA
BF33A5F0F20D1BF06DB20D9FE51C7EEA148BD2C80C34C7B6B74768568D53B8E6
22C9B94318CCC5B3B79B1FAB9F4342BF153CE1B70262593F6446786FC2196282
927088B156A8D5DF487754164DC0035ADA5BBCB0D5FB436D3937147A49ACC8F5
F8F3B70E29B7073AB30DD02E62A1BF86B577419F8115F2BD02AD4126F724A58E
8F37C0832C425A18D8CF51720A1FAEC2997DB018ED4756894A142048A2CA405E
CAC0F92CCA49C4899EB6CC03D46CC2423C51E8AC307BFE04BD7CE6070FF71BF7
65EF0306FCDF63F3C61A19AF5438A780AA50A66762967822C18FF286227B6D62
FC8907C1029717B2DF6190BCA554B543872C7357626D265BE53CB4F7A8B4F203
3A85B65AE78AB82891F9E7E18A49F14C75A2A43084CCE18CCD63FA45EF73E59F
27C3248B6BA752C168E01E794C8CC6C06070CE35EFBD39D68F1405FEB2ADA203
EF3DFCE274FC4A39385CA2757CA7ABC920C6A6A6BA86F4E7F8D0D66C70760A4F
EC450DA5AAC3E9E93C8DF81A7F80C773C3937511AB2D2D8E197A6B64C7A0A62A
68C77552306165D44E0AC8A7E4182AC537B47C40271DB3DC7A409E45BA764422
692D98FAB14DE187F45F8F9FA26B4DE53D12F79ABC77A6717A280CB489A8D4C9
EBAD1EBB1FD6125E5CE852D1AB083DFF76284D3B0458E78AEF279A84666584D2
5A8599431295C15C74DDAA236C5E19CBF37CC41C163DCCC2F7201EBEE341C0F5
2A2930CC8E88FCDCA30969F9467FD4D611D07A0EB97469A1C0C3046D1DBBDBFF
8169621D54F397CD2957671A9519521931435358D4002A057D431B85E37D3B30
EEC0102C50B02D3A43FE0685A6DCEE5B91B1DF5A1F97CA5E6A6362E331BC0838
B458C45A915B47F9ADB9CC65559C84B746CE964804B07FC0FF30752BFAE33815
00DD8E979AE45D4B5BA3D4ED4C6F16F9B30532951D52B8DAF0F445E1D9317349
010810A1AB1C3D2D43D40D23E1AD62900BBAEA55561AA1C2EBD98EFB7FCD676A
9178CBEAA46638CA2AA8AF126ACAFEC89F65EDF8545CF82356E5805C833FBEF9
2D866846B09155D9CAC0194D54637D8BA8F268C12F095E2A3C2B30891F0FF349
1FDB8DC32886971398C4873B3E52C5957CA119733991777201DD693EAF523A81
124E1B1055B07E6596F71E94DC7EC4242726FEC28F36CAA7F1125AA16F80ACDD
A68AD2F0EC9D5B963EDA0CB2EB90CC08CDC4BC54CCF82CB24B7904518E2A9D58
79EA4BCF3D8B9A026C9BA68220D00E72FDB5959F579C49AD44568522C4EE0EBD
5BFCE291B25AD01C5CB7BCCD0EA57CF01347412F127CC77DCA2AE52DD1DF457F
5A1B033C75A1EA31D4BAEEC5DA8BA8398DA6C24DBAF07EA7B67AAA115E451D3E
DA87313502E42FAF869C1220F55183D3F8351C4F9D7EAA5D4AA93C3B65EB4CB1
A68EB8F9103B62BF53458A3271A65091115EAFD73AF097CF1442656FB3A57943
13F388FA6D3966247E6E92A1BCE7F298CCDC671563BBF502F466E157DF17D2EC
DCBEC86456F4E231A2B3F54BF7197A5F3ED9A9A2F5177E17B1C6F9060694CB85
30E89E593E1A315FEFC2F4B06AE95DF5FA4424813582BE486660D8D5DD40D96C
C96A8EB5794980611D8E87355C1BA43CCA948E9F0AADAF52A14DB5E1CF78B099
C294BEDBFE0CEA68D0E912A3744D50F6C62841D36D3F8D03AF152F6F7F6E1F9E
B400E0E3508E70AC347A1628A2EF66661F70AC0F09D694828A951230772D7B98
330FE130D852D787501BCFDF18F8AAC8948F99841F0CD0869C26E28377DB8FFA
293B08C5E05192E9201A2C7E93DA913C1A700973F6BC5FA897BB4B1CB4BDF92C
D6380EF02E2792EBB5C0F2B08AC74E78D532A93464C712811E1A231499595C21
B0266DCB4439EA7B14B4114CC37188CE8CF08B29CBB060F6C63ABB999F0CA792
E0AB694FE7BF94C1D01358FA7C822BC1B36A4EDE777AE3E0885B398DD6F08CC9
C9F81E191A083DFF76284D3B045A4EA0FD6C8E56A868F915E05113ACE31F06B8
DF8A83DBA60D340663805B4F3426C6C6D33E13DF36D75BBC4775472C63F55913
3CAF24A4F39B407168A0468A48CE845C8EF1BA83FE48AF26162A1C8BB79C3AF7
A7C799E92A0310DD612A2A0EDDD0D957E7C52CD3CDB76B05021852AFB059FE8B
56FB6B432CBB9B26F521D6B375DA745F8C5EED0CF2BE8D8B78B4BA495B941BD6
39BCBF631E46F9C519F601A050D8D1228EBE2EA2219CB0EEB5F75DF3AEB88358
27F0A87D98EB5853362C29A51C7ED9D1F2D919812BE51E73BFC547E4D895D29F
BB08C4C32CD22AA6B1A44FE34E978B2741B5DC104D71240B5168FCFDC9B59578
0B081A8A7487A222B41B544AA91E79ABF7BCCB65F247F294DF31E75B1415F629
CBA7F64598332E2ED709420B491DC5404CE7670931F0A13A3D26AC3CEFFC72F2
9C6897B5A278EEC9F42CAEEED92118D45E2BC855E749745AA8B97C2B769C73B1
6B0A22092882885997546D213EB4BFC2957361E63B59933ED33EB1A13BB301DC
2BFC4D510B81414F227B270FF09EB1782EA59C7C5524BB7DB97FF5708F6C1451
554CAF0EBAEF29491CA0DDD3C5681B030C6C5FA2941EA3D22FA3A956B124860D
53041107B987A5AF9B8FDE3737D05B8E938BEF77E829EB5FF5B9BA1AE6271FFF
60AAC4325038F4185BBA896A14F336A410ED161779F8D659EEF929765CE1D53E
DF75D753BDC930A90CD463F69C1831536C11C0BB6D9CED9D59DBC5D85BC3208D
97A4051E67AE0A488FA258BA92CC7D3D2638C07388A911988B2097EEE376837A
DA092A9E6CF817372D65192F0C199D5BE9D61A9CE5D30FD33434F389C195FA1C
BA7297A2E87B5647C7F6C9C23170D0555FE7DBE7E2EFF13DE5B822F69C222C61
9E6AB0D64B6837664285767821C3044E012F5CE4671BDAB70A1CD70F7C021FA1
4E6744F0C2C107C174C93422296EA791C73C9BAB414D0DFE584B11CE6B9D74B3
36BC49BBEB342655AB5B2BD55810D284EC3854FCBC9CFAB73FED44198C0A4DA6
8BC3F918AD0A178FD79DE18B88C9298580FE1FF3DD9FE4BD76A26C3374606830
5222193231CBCB2FC167F3DEB2C563576EDDEE64FF81B96D91430B41D995EF23
A47A249436DCAB126C66C81C444119861836178DF2D33041FFA193B6A2954C6D
85CB2AC19FD79B319F1269563D350B1660BBFF39DB468D4F0673E29E00C75E2A
E6B25C1C761BD84EB45F2DED00EAB073BC71C75845F95899E547BE439A0B5C7E
A9465298B22A1B2282626D25590D3A80201BCB77D768DCD0790B5B2B56403246
955A3DCD185AB661C864C3BB1A93A92F2075AEF496466F7671994B31D9BEFFD6
DC574B681B4228292A422264B875AA8951576CD8576A16D46EF6DD1C6FBF1D0F
292BF82D6FEEC58A1C243F368BE30D8783D68AA153C3223EB13C01A107BE401F
904EFFFC5799996C4FC0C641C4B95A74CEE2AF43758D9EDD523C634A43C10457
8C86CDBBDC0A1938C5E0D0672969DEE45BADFAA700BD917DE56E7B736DC64E85
89E9D98C205A0B203678CF6065D3E4947ABBD8388C0DA765B1DBF7FDD8A6ED93
372DAE5BA1696ABA1E089EF4460706B3EEEE1DB28D46F6C835EC3E98B6955CDB
8AC8BC34F46001319CBEAD584FC62AC33507E35DD7EADD5E51DA253211D4A238
A7A948EC66AA33E7F48758893320E50EE0234BE245EC6A23FD4AD598D43C55EC
983D8DF8470BDFD6E8E6D4DAC39081F2A0B1C60A97060ECCBB4B535FA0009A98
CF8462A5B8309406C31F9F0F26A8E5E8EE488A41D7D2CF45913103CB0A38AD8A
3DE23294BDCF4BED64366673D6A66C95986C88376456A6B446A06F23433B3E08
3DD3693E5C25873984D7BD524AD66CAE20253F203E918C3C963CA49A88E29475
DD77CE2907FFD877B0447946CDDBCBF583EA68BBA0F69C64A315422C6DA9D1EB
5497BB591A6E7186164E3BE46428C867FB16E40083948BAAA1EA72855B2319A4
215B94938B6C21921721365D26CB3370CB83E3844324111AA472AD0ACC0D4DC8
C0F07D47206E0C13AA6839B85C3A5E5D1727C94886345D88F539080F71F8B2E4
AE3990F58088B06BF66C083E9AEEFFE1AA2B2C88D6DF259878501747E5879360
547870AC0DD5462F796B956554095F16DB0C7D2F033987B04B63C9DFA849408C
B01329A792214AC48911C76C4A3F4176627AAC263088168DE8345A21B9CEC8AE
DDA6D4E1350E1EDA13EE15B802B4C1A7A6AF07AF17AA04B801C60C105263B5F1
48C81F33A01C32652FC8172FD189E3016DCF9CD1600ABECF309015EE05CC9043
96B1E9A909A12C59FF69B34D18EB80926BE07EBCA1AEC2B18529B5BF346F7EF9
1E9D1BF6D7BF979B635910A3D04270110DBB49967113EDC9E426EB9A23A41EBA
53F2CB8326BC04ECC3788512DC381CA6ECA6CEB9BA1D2C44A481438CA2233368
2D9A0CDCE2C463148FF9ABE7F8A1E56BDCE88247B151D6CD48D3EFD396CCD375
115916B6EA5CFABBF6DD1EE44CD6B701531A2A09B107752A751695ECD25A95FB
FB44C104F73FA118F29709BE2B86C89FDD864FC683FA7F0D944705DAB81AC378
FE2B66D4F126B5912BC01221F7E0C96CA4F86F40BA560BA6EE791DF7F516D39A
1E5CEF754085EAE8C597703098FCE4B93135B5DB560E5E45FC8CAD36F96B53EB
E596A89AD3118A909302193EF129E149B5693FA39DC7A08708A3D6B1EB33C129
AD8B1C8987CE1A14766F44A41FC346A14852C870F6E772175278714CEE716D2F
B9E94241A33050FB1E90E58BB42FEB0AD08B2C312C3A431FC215CB9E59D8461D
1CBB1414C37287774C9B6E608AEDB1B540897BFF98FDF7F610BC3DEE12CF1402
B840D1A450A07B2873924AAC964D59CB821B21B22BECC869490155D362C47487
93F37B35C0D30E5CB8C21D06EBF031F15B8289818C997E38F0DE8ABCC3A20D8A
3AAEA34712613C1848CD3F1A581BE6B53FB966727BC7DDEE24EC7CCBF8D73B13
087D897399B034A9CCAC02BE98067D195751AC5239ACB21D42697F5E0081D254
343EC366DEFAA4AF6DC7E6EB5B3293FC6C2B43FB2238654422D7C8856AFD1AA6
89C231836F2193DB9806D98F8073C8D42B8C9EBFD8BDE7EECAEDC3BE31F85B60
274BB4A254BF10FC7285084FF5BC6EBBF6183F698D8092B5830B7270A7297E42
C23B893E1095A24EEC961E2C3AF51033F55FF707501B6340D18039A8F91C2583
E81446F6C524A72A2E58CF1AA0E525A1BDED664DEC420ABD2E700677F2CC279D
86EE81CE4493EBCA56302BF10C421C64AEF0A8245CC02F3EE146A19896FFB25D
2471D4ECCBA66EE5054A307BD6A81198D2945DAEAF2B9B55E6F467F70A6C4090
97BB6B67C674C5B91F96E45E360A328A7C5C3F317649DBA581900487A227388C
F4B7EA567CE891C08DC8AFA8FD6E9EFC799DDB507D07CA8A3E618ABB0CBC4EA2
9A3C1F36CE411D69E09D6A3BB27A7698C77493B1C9ABDB3008353186AE041E21
DFCC6434E00ECCCA31AFC71C50331299A1211D5EF596474B45D5A46320326D79
2EBFCFB79C4AB9EC0DD8E96363DF6BD9C5E8A65FBE05F880ECE8B46D7ACC7A15
CCC4FFB1994CE65A13C4E5FE3F2E8E30DE26AE9D614648349BF83BA7906736E8
9261AFF31B144BDCC6702141F5D9DFA66FAB88CE7C5C1898B30D56F461ECA96E
5440B6DF7067DC8E33425DE7BD33C56DD28BA9ED55C5B0310D930EA733E735A5
EDED396319F03D6615943D0A90F2B902740041BB12296C591326B7D8189A4239
42A579EAE94F1F933DE269CE09CE4F38EA34070B6EF5215B6D379C60C408078C
DB64D32D023FF6228B4069CEA6D12FA3FAF094AB06D427B5D367C7A3FF63613B
B60475BF76C8C72E983BA12D8172B395AF20F27052F48252453FB2C642B42BBB
186832AAEC0F6DFE2C1F1963058D7B3252DB590557DBC7BB54D7D93A2585D3AB
8EBC74CA025A751E3F95B9158E4A8D8FCA0673002C7EC691B09FE7964FCF869F
3AD81050838F07BF04FB22FECB6894E20DDD95B3580824A7EE8C6D519C53B880
5A240C4627E9D6ED55BD98E620B0686B07761BF014D9601B990E36F9F031401A
E3DCE5DE809984881E514E8DB175802D66FA75F3205EB2BA287866E237994D9E
3808EAB40DFB768253CCEEB26A47F4E3319797466197E15F461EFD4CC08BA697
720260CCA42B75003ECF655D74BF4DA11016690D1F50D261AA246FBF5AB50B2A
7DE0ADB74EF1D4E767B694189FA76609449F3C9F1892C8D4BD55D99B8E296673
12F5BE2D538C976E25C5915DEF95EB5C1E1E1A40FB6657BD2480EB120ACC5C21
779EF457F3727623325D3F569B6DE23F07B3E6EC87FD2BBB737891DDE2658D7C
F407E9AD2E894B5178946A73924FC20C12D90B5B0FB15AB50B2A7DE0ADB77EBC
DC48EBA6D8690CED56A872B603A16D4D25DEEE3FE6AB11348F1964935A8CC1B6
C38AAD2250E8C39AEC4D2A9E899041A238924668B8DF824C21BA6BA37BA79D10
86CA4417FD2F8217C2DFB799C0C74EE4CAD044C402566D2744754028C2300A0E
E4AA08556178743DC6C239A52AE0147B07CD44DA699160F88389666E5EC22915
AEA22E541D9CC25282BB0B5D8866B0B694E2C15A0807DBBBBC8467817F08C1B9
CF252DFD687B53EAE1DE8EF9967A6E3A5BBE1282D3087725D960A54F17110F97
D9D17A2DD05143A0E68AAD5157F99404604EF214712F0014A324A3AB9C09FC70
97ABA97D1E1288036BF7E96F525A182FFBF40646EA066A498E3AFEB8276DB3CA
599A663A09FE997AEEC32B94C1A39609D101D53CEA923C14C9F960BEE70445DB
45567997FF85C361B26B273704AF5EFA01FAC9B06BFD3F496159EDB225E991E8
B6B9B06965478BFDD771327F50A540F7FC94E0CA7AB8E96EF3392246C43CA286
DFF862C2798428E34A0172E9005096731E212BE0B897A451A8E78261DD9D38DB
F55423AE21216901BD18FBDD9A1D2281560B486E615C719660E4E66AF7CC6279
503C6AB855EF9949803536625F1D115B969F96B6822FB74BDF5C24BCB97A2A87
578CB80B92F4061518522EEC8F8A0A36ADC5916400855FA6C7788CFF6F58817D
6BB6000F0B3202D34A053333A794098F3F0455B823D34FDC16F7CAFAF6ED7DE6
AAE26AF1BD5E5D2FB5C0EBEEC50B843210E34239C840A8DF39BFE28D3569C4C0
D45AE4EDC69843CD25812A184139441F9DAA8CB466C590F72A41EA49700A5721
AA81D072D92AC07B127AD7D522646E723C6C472790FB4B475904BFBE722AF2BF
CA9F86516DC6B35E99FF3C2CDC0806F43C7B9818D3B7D3B6FC7D002EAD8EF0C7
409F3A8C39662CF91362DB78AE0ADFA1C70B652D1C77DD575697D34593ED7B40
40094307F31D2B5A11FB1870EBDCA152734D4662F314A1F7B8B713BA2B43AD4C
4AE6644C4AF4446241AAE93F1096E9E63A2E348BFB209DF2F209B312533AE6FA
DDBB9853F79FA7F4E7D33281CD2052CD3281D0EDFBCCB9A63844C7B463B600D4
7BC972C42AEBEDC96945370A5C4CC85FD12BFA37745E83DE6BB39A447CBAB591
F6904D6D1D307191A51C182978D99464D6CA5446B053A722C037AECD69BE9AE5
38CBAC138CDB3523107CCF2985318791737F16B1F882D332B667D9017DFCAD52
1980708AE7D22D14FBB567670A68B7B05E2A8E412E5066A3439808A399F73DF8
214DBCA857D74A7F3F51145635331FD25E1E4C38A501DEBF28BC8C9A08231D29
20B0896789DC94E50E04A5352D35A16E76FDF2DE6124CDC9EF32222FCCFECF95
DAD3D862EBB2F57797DE8E6B8E8C1C3BB0D802AAEED7E9E5A3AA5815BBFB0C15
86D89D2CA20AF9FDA193CEABC92CF0A241A846860B9DD84CA4BE6859B07FB144
6CACDDBA8B9E065A0E67FABD46706B3C64CEFE0EF6578F33B8A35DD7161E1D6B
6DB6716DCE0419674E856B2036634A72434D6643907C7D169EC19BC495D1510A
519A2464D13C626BF0FBA8F697899402491CBE334881C81E7CDBD482CAF8D083
AF733AFBDD078B06E865016E54805E98440708BCEE00D2FF533AFE0A0B483751
7D8E78DCE6E7F8B651016B20B867FF99B1AED78CEF865648B03E79CB24F178A4
5D3BD72BCB5289A216387C68B701EE11DA045A6DEE34F7C92F6A5CB8B5C62511
8B54B42B5FF3520FFB6AB45064A1776DF6319E8E126D9690B071FEEC5D5589B2
7668EE934563FF9416CF4F561C0F16F3145FE7DE4037184EA0883B4272A2D421
7212BEC21A73AA776F448FC89B25F78633F8D25B7BDB40CD6712DB0EDF0456F8
6AEF7C1346ADC0FFFA850CAF602152772AACC7848D5C3B6E85A100F1B1D48D24
D6FE3899851590D6198C05368182DDD7E0EB8CAC7CA721B9EF8740F8671382D1
5F325E7FDB4EA1471ACC123F276C070934EB36D5BDB42FD735722C767864E8B4
5EF1AD0B95733C6AF77AC134FF33E762E1BBC152F2878924B0D41EFFCB611CB3
AA17943A94EC2F5604F6578A776308C5F19D9435147929541E89C9D16BEF470A
C269ED5121F7D69F6014E0E3069D9AA478C14B6F4A01F42A4ABB62A7FA316DD4
6F8D1B3927BA6AA4A51988ACB0F845B64DB91CBBCD2856215EB6155AE7E4D082
4D471BA792C24965786BF40A85DCB6DD231EADA2C00B855F66F9526787E37E97
2487FEF0025D6C80C22C5FD09A2AF2D152CBC1AC242BF35606122D9465845BE8
DD2D32B6AD81CA0BD5612335FF3221CC379FC12270B86BA46F487DBA2A2631D3
64F9603025FE6B8E6206592B76B50CB42583D6EE20DD98727F863D6E88631894
021AE4CC5CE55AC9D09B6155B46C56585A03A495F8F98804F5ABB6D112BC0787
154816A555DBE1505263C4F0972811F67A6FF31A169598B110867C6D362898A0
0CD814C29C39B3A768C0057BFBDF4DA448010F72F563018D3C94290FE5D125E0
4B6DF9341292CB80D3976E69D519FD3429787399501C1382065F92B832246FDB
8D1106DC6A01FBCD19039BCC0FD4CA2BA9A8260836D4518F25A9C41D0FF123ED
E929B509D1F6E10EF7E0F1A13B92B4A1AAA9E227ABD4B231379A04B2CBBEEAA4
AEBC3BF0F32A1615C3B52A3B2D9C88E574B10F90BAE71DFF3896A594828761C5
8792CD1EF39C1521F1364F34B5DC580411D1A035E222C9B83F1B70DE00366415
14294248136A6854273EA1013C4189B25D0C94D4C57513D46AA389BD15A19476
0A36C347AA4293AA79A77FB04165E88EB9ADEA0755B1494A51B2B43CB84C3288
2AA42EA3170B7C52865333986A811DB63D9AD8F897A5DC04BDF889CACAFEC54A
FD110C0E5AFD28A068DCC5DB5496E429807A5F0BE7EA253552A20C39C05D1C4C
2FF7625D96492547CF966D9E4750F0E9BDE788FEF8A958921A1CD7240E179F91
2B19A530B34AD8A82E12027249A9019C59FE34474D91DB77B99C137BF1D4436A
CBCE1941DDF4CC0931055573269E78928AF98A2BC8A80D4A79F7417CED14C680
6BCE4107350BD090A65B428928365A2F891B11CB15A4907D6E51DCF5F6B8E2C9
5B5EDC27EBCBE104306C0536D1FD8596DDA4CF4CB04B5E4F11D59B8AD4DC0145
03EED91482B2DC65157D660F09E382AE6DC4B0CA35F01CF6F4B07635EC3F2EBA
48F53E4B6AD7B319D7217CCF67EBA9FE6D8B71EC260C985345BBBDDDD4E27979
316F19B5A779D5BF981D7BCAA79F21FA468CDE75134393EA5319251767A80A5C
BA67453B0174FCB53AE0AC2CE07A0E02A67DCBD4DE1AA385F1C1780155533A89
504E90DA06D2B71C6568C68AF6A9D6C44AD2A33BF1CFFAFA07B7937103E925BF
40F97D58779A09B9346C727AEB3169B7E7EC4A338036F59A2BCE4C599B239805
AAA842EF674EEAE94E0C49370C5B5951E944B1AFDC677F9769615D6120BEC264
05D00DD5A21DCDFBDDFF904351D99E5B5007C16AC98959B56234788F115A63B7
971CF462F352BDAC1462C8B03D81D818E99DABFA39826E5B81D86F1D07F57092
DF58B9D8674BEECF85C88DF3E4A2F8BDDDF087147F79D08FAF907716BDF5B692
881E997A1316B76911F56420E5B9EFBE9BAC9952DBAE57EEB91FBA653A6E51D9
85141773733F95818DE79B4F7AD869446BEACE579870F5429DACA2DE68250542
93EDE67D23B5C081D1EEAA642A9B18BEC0470668ADD1E87EDA589454863E0C02
1227123A64AF97B52DBD2AB8A5BF7D342C6E6A370E15BD302BD03ACD1A1CA7FA
29AA3BABB997AAC6E270041514B047B77A7E7E3229A46441CF073DEBEA4DDB52
141CB6383012F88AAAC930DBD8C4F553320644C864B6704F6C91DDD256682AA9
A77787175499F4BA8751B6487C7E0E80E49FB53C809443C4010A6A41E971220B
98F53A6F7DF17D8FB15D246BD45308EFE3F8850CA6DE56BA9312AF663B14C75E
DC04084FE7BCCEDEA2FCD45349D13829FF047739BD0EA20D6AF672B8B702F447
08079B08417F9EB8BBA4260DD38EC5FB2D8C445484E955F934B2B883260FC15A
24AC4B7F9DDE9D3604C297378372BF576992A01A148DC14421B4536529CCC3BD
222AAF30C0C2E51C867144EE86151D03D5F67BF310DDF5149261929F534BCD95
D3E413A41095A5EC7B4ABCAB9F74E821670C2A83DB69061A83F23C88062E202C
A87F3207973329C135C6768F7D13671761AA8F09494A40E2C88BE21AF031A0E2
F593E467186EBEF1914591AF9DFC25B56B0EA6F63AB682ED4525FF1C71039357
19ED0A524C6FE01A18099F177ED454621E1F1AB9B8B6F88AFD2C96EE4EF29CD9
853DF4B095EC66D623635AE7AA3054B3914C70DA6B45129DC699ED5445CE0BF3
7A70E511CE0D3684327A179A9742D19FF80DDAE3F005B5A24269FCD6F1634AB4
944D60E4B637E1D98434E2CD3038EFE2865250100143AD16CD476F4DCC5BE48F
A0DF36B63696BBEC71221788E41BE28F79B5244DF1EAF593DCCF80322B4554FE
902852F156A774C7513F01BA31A9B4AFFCA8D63C9043487D0BF9EF92140F6799
21EE04B6C6A54F1139D9949B4F393FA180D6EE260DFEB416B35FC21A84AE1A80
3154D1F160A57D3CFC722410E7C9AC5DD842619EC84C904589DC543A1BD509AB
D39CDD766114116D461847D0E6B1636D81F1C8DC017C5FAA25655F819C3C3CD7
3461A7F1E32F8FB2D3E3717D530BE819CB2DB88D6E826CE696BBB4C446B30488
F802050B7FB03196732496198238B71B9E7AFAFC156F3BCFF4B7632604F0C3F3
EEBDF6A367C3C78C236929F71D5C928D08997867492E887246FCB419AF6C3289
154F4EED29F8C6E43EB3368A698A38547F1C6827FAF775199FD046ED4C91B9BA
E1164A7DE752C1A0C60F65660EF6ECAF816BBF7549FAC434C98CD889F0EDDA41
9E1E9AB9F7FE31A5EA571BD421BE3B305C3D78382D2AE677147ACB51E7130F6E
1C0D05105022B85A1A6CB23D448547D36B0FEC9675DB69F82783EB9789E80621
89C044EFCEB412E3FC50EFBF8381DD4990729E60827C2247A0DD455ED4D65ABC
9A512DC4ECBB2F8E8E76661F16A4752F88061D0847553715863EE08F0735AA38
79FC10A623385409CAC19A8B453643746E438632E812369BCE8F1612A98152D5
FC72B5756F1B690EBE3FFEFA66D4E070DE128E7CE463869827DD444E112952C6
9F44AF4733866D137820AF7BBA64628E3EE63B699A6E6121ABA89651370F9821
EC2401448E236B76BBB6614CBACBAC74877D1C111FFE436AFD9DFA19E8E86148
CE50186AA9F29A99DFEB9407E512EF327C07AEFD71FB22659AFED965BC1AAB0F
5EB554850E6595C9050D241A16D31FCE018CD99F2AA69FA31D8099FC4884649A
520521BD5B4CEB8CFC0D4E16CA21155178E8DC2F498DACB1F2DBE0973937318F
E47F2797C477867CF83E8CC152C7E6D0053CDBC9FD959F701EB79A6D356346E1
EFE3437353F98691D701F3C59C0736E7BBF34D4E06A09CEADE9B7DB5FF74F8C4
F8A427E1D30E65E04655C6007B3B9E666AF4E8144A8E5437AE87CA7DF49009E7
7239A47081F50002624AE38D2550984C59E1226FDB014FD365E5F4F9944CBF16
75B8206BF86076B7CD95238E92772266725ED07F5A7D0DB8AAA3EF4D6F81F483
F4ECDA1923F098CF4C4A932B1CCAD1D95AEC91001987D202EE8392E884C99DD5
D08C054423C5ECBDFC7634F77852A8E886FACDEF239F194F41974A4BF6251E6A
33B459821B1397247BCACEB34F7FA27B9C21EC42D13A772DED3E63B758C19158
A933C4DD6DBF89B8D3DF413439FC8BAEA673139805A1EE5CEC1A4618F935515B
A2E8F87F4CDAF58D1938FD8B9644CDA6E8342F1D7CC0D05F53BC1A17E3FA0D41
CE0D448505BED733108B2E6F474F69DD5DC24E38DD3EFB232CEC01F85DB9E160
1D32BF41300998ADA0E442717CA09514B4119C3E80BA884970BE72443BB31709
E89B63720F577E33215F8EC855CF9EBA9214D71C8D61AC98B8886716A0D50E7F
620CEC730F9E37E1970DE749377A299173A605338A4730A89A8431F3E1D49E46
D280FB1CB8F0C0F1384E002CEDD59C082CB000E267918E820C6D408909933B95
91A956331CD1690DD50DB0733FF359A4ADBED52B17C3BB20CB78034AA922488C
8017CAF5510804011BE3481490C1F5F09BA21BDB870269C1429BF750375F585E
F92859333F35974B60E6732A4A3095819D0E9AF25CB54316745AA9F4656CE54D
4C1437BD214C7A15A2DF3ADB02C710DEE283FDCBEA469D34F0A6E2DF4EE2D57D
7C6C810C384E71A5135835BBD47A6B454F63C47698F5411F82B8DB4B0EE89DC1
7FEC8344D003EC39E1C34BDCECB1437C9C31B4A2CC42CC6B60EB1732B73FCC16
E85AF21ADA6F6155F69CA0F05ABEDDC4F0AA86E679C5D47A567A156A3FA74EB0
E3AB791BEBFD552D497D4E40056459950ED97675C11BCCD6DBBC5B5915BD615F
2CD7CCE83CE7E421FDE2AA62858E84C0C7EE5BD7BCA0BF864F4229CC0800A2CF
A6C93B55E33D77113AABE40EBB7D92EB7712017FBE48398DF6B3869A67E9AB64
D4AB3F10A88AE618EBBE1E707BCDF26D881C1B580288EE88F5C9FAFDD483DF5D
A8F59B87EA8025B33412E6A5459BCB5A5C79DA46A94365F7CA9343082A689402
160E8AEC7CC299B73FC61BDC5ADB31952F60F123C1DE8797EB926D2EA9658D0E
5FDDF2B8A1758286278AAD1414FD1796B28284160DCCDD981C363447BDD159CC
8C933229C7CCC9DE1E6F04CB49985902C8704E5261B3DD2F166DCB2CC0FBA640
74DCC72A3C8404718EDCA842CF852B1815B5DF49D163F6933CDD07A8C13D0250
7B66A2EE4B76ECB37CEDE755379F5F3D3C364867F9682C7971B8A5B15BD11DB4
39FDC2EA1C8D7B0DD99D3B52C38467F8952B5684E11B142460F320EE9A467746
E6FBDD9F66CD28061D7E70AFC474D76A0D6A7A4A24EB0AE86D25F32222BA4E5E
B5FA2632B6BE7ED8278588516C097CF41C1685353527FC38D287F31EC965404D
5668E6CE1583F4E6AFC00389121F4B1AB5B6FD2D14CDBF255D9D8C010A052C1A
41E668B7A9B938B87963548CAE742938E39314C567AA4668EE62EC825FD74B29
61A41E1ECE2C02EBC6E56FD0A696D964503E2D2B6635B610C248A8FF12CB6748
D6CAC3D7D0845A54724B0A13E43F3AC85C61A5301BD1EC8629B4484867A0A977
DA21F2D20D316F31D897118DB6153C0C807911C5B6733D5B84689882B893F7C6
84075397DE53B95A971D20BCF18386AC5EAD506842A1230727563EFBA1D8EDDE
B867AE5245B26CEFD69357405782B17FFD31914E013B157CBC5EE0F2561F37B8
1FE18DBFE6485DCEE02BA1FCEBDCE787EC661EB2B9A8B1D79F4FCFBC65DFCE18
5155F2CE40711C41922BEE2FBE38334D274B27017ECCC3C1C3DB7D6B6B66EB21
9398561F3D217D5D89727339F8DDA575EE721028B43DBEF87C7522A157B0AB7F
28DEF56A3DA1CEE8B64ACB972DBACF4E598A50519470CF6FFB01FFDFAA263D00
1777BAC61F9A59E388038E74C5EEF21F054942CEBF0D0769D15DBB2E77252F1F
3C03C11353D4A993F6DAD21FF1A9D2A20C9AE60B4CC4505064735BE58377BA64
B9FA6F5F28E461EF89525834746D0734386A81DD4D925F0087FC3EEE14292873
2447C22D7C790C6FF08C1CA612E33224BD946961717C7CEF05256EDB8AE08C5D
FEC42C47FD5D797EE6582B7E002679DCB3C72BFA28A33F0F7886D8E6388835F5
EE9711CC68EDB3D1C225E8F50976B188FE696648FB46F33B1C0E248A3A8606EC
35C6A516AEB58DE9F475EE893676E2E7D54225FD27043F926C33FC50E05B5620
2F9DEBD4822D0FCA5510E82FDD281B865FEE22FC748093669071036F021E3F66
624AD8C3988B94483CAEE8BF4B77083C9D9906525DE4C384D833F9D35C00C63E
73869C3FAC2E34F1E06E8040004EB726B805EC01671B2A090090BF042386648D
3439F4425733291FD68E3CC2C38776121B714A657A3327F832F82CC0A339C1B2
2B8182B620B7C571750C1F20C74E822F93ACDA69EA9B02C53D8E56E743DFBE0D
1FDE894B0BEB20715A0657FF58B70CAF0DFFFBBD2A4BDD9A5FB7A8A7E18C8686
52672B38C923251F67CE90C4E1873E540D680C98872C68E254ACF96AB264CF8C
CEB516C7BA4C91E7470A7B3E3137C3D4DA490E358670ECAD15A8358432B159B9
EC468F1222551B2B70347A2D28CA138CC50B8A2869ACE0A906B078EB5BB8E0D6
F94A4C8ABAF619D110A1E811F4C7D316977B45C5E6B237D146B1B04E67B81F85
87669EBCCA64B5D77D4F30CE1E76544CBEAC1BD2F8C0A08D5D418B942EEE229D
F079A3A268027B39C37EF71EA21ABB383143DB2D9B4F1EC5927CFED8764F3B81
589583BB9EC0A79F153A5F48933A884C0F394A5CB9A772F55ABCB73D361F6910
C305075A4ADFB1B5E73C3FA4C5A37C9450F85878086DB5D8F4B607DD75EE0929
BB713419DC5D501291E4A536855DB17DA43947829F060B4BEBBACC437CDEE1C9
AE5B655BEC8D2A6018DE281F37D037BC79F13ED40E427A8412E121EB9C4F0619
2111FE3F36E0366CA9A0A160D93F3CD71EBD13B5DAFDA4E6DAFEE33868C86C8A
01F47F8B90068ABF83B083355F43B7825E609703A6AFAD9CFFA161BF7833C0AD
594565D58F1187A65FF80C4BB5C3383B990832845A7FD492264E5BDA010FD70E
E0086583E4938EC5B731F35CFF6FE86F74B6BF317C086F3978FE7BCED475A15D
EB4C5CD29AEFD2B8899128AA49CEB91A09F9C5A4520807F8B720991B4DDBDB44
B098AD3B8887978AC93647AD2ED62A9CA56F1B41FD38CC7A9BD9F58CE3A9FF96
480725C96A946A441DBDE8A3A801B59540CFCDDBA9355D3826B6F1F291B62FCD
CFB9611A4FCEE195E4F54E19EC6078DD7B3E293DD6F72883128E9ED1B1A8FE6B
BE85F6B5D290A1DB70B21192A52BEA4FC114EA60F59D8F11794AF10DDF32AB81
8C7F382F5FF3AB3C14B8D7B270AD68BF24414BDC060CB2056AC672D8DDEA1473
BF91A54374A3881D3B02A4A1F72338EE534D6CF9CE2B0B5C1E6C86BF778A4490
0A9AAFF547A5160A6CD29299C224DA441E947D4BF65EEE864EC87C2865BDCD24
707FD65D55785906034C2117649F89DD4394941794622629B1CBA7434B273DCB
A2570D13014AB29D0C1062338BBE79FD9C8A76F34160567B34BEDB15A03D589F
D0DE90B07F7F2FA724A0E7113233CE590439D00CFE3FBAFAAF9723AC809D0E98
F59F82CE19E392BD393DE55A1F8575055810D2C5C7539B30B00B061018681AB0
F68293CEFF9196D1922C5F14CC4BED3D50D7A42C1784F5569B2031758A069EB6
F65BF910E28B2636E95E7472062A07EA54983FB98E68BDC8C33271192AA9FA0D
54E97E7300A4D8E6811D7991611A0A003B73CEE317F05A1EB01B7F6CE82C3071
A24C7EFB9FD4BF8A2EE5064A62ECD3280D20730139641F4FDC9AFFC40F1C1E26
38315771B98CE84A7643225911054C5A2ED026E5083F4C322A58222F0659397A
E028A26186C50869F80D5CB069DEAB79C60B86F5500D5CF5677A4C235C0BE496
D5E1FD8A99FE052A4E86178C0631B36F6FBA4BBE7150B3ADE099BCEE439A1DFF
AF0360DE82A7B8E6782C686DE49FFBFD192615C57D3D654ECFB4531D6A0A6F8E
9213AC9F0A5372947FC288DA2736D6C34FB0A311A29EE026A1F442AA2FB4460D
CB5BB1E41E1D60C9167A9342F9239871E33990B2AA1E55FE1ADBBAEFEE038FDC
5F0128CCC2086A4A0640BB9DD1237E8DD9EA7422087D3015701F3890AB8206E1
17491652E89F55540B7B1CB8F98046047422DF5B3F9830C358579C0F183855F9
88F7C070374A9ED042AB23B8133976E9F5974679F9908799E5330274F88151AB
A0A316837983D68C336C01C1E67A2F9269C37B11D946E9F4B66E05ABB71E52FD
4B4C64D3E2E9AD1FEC782E6613268B245620FC10F407CA7A2B7CEF43A11D64DA
1B9482F2A60ED819403478EFA227EB64CCF95271DAA376CBBE6079A166DCA2A2
BA3136BF40BC00BD16E172477F16B9719B37200A4DAF2B21C39E64DE967122FA
9ECCB208B657013ABC6BFC589BBA6A29B6162BDB6B8CCC04D82BB33E8E8ED02A
1E17F0D0E1FC755E56054B936123C99D47D407E0FE023F03340E7AAE3B736D2F
46F864F3447BD420EE68EC90332C8EC2A2907044104535E66591AE0C4D9FCE2F
8FC835AF7DB11B3A6E74D2BD0148DF0C46719B62A9DF1A8571B0DF73D9B86374
55A17C25D6EF91B786A13CE666B215E475B485DDA57ACFC818AC1E336A125053
D1A2DCE781B8DBE5D24BF9A6BC77EF47EDAEF106DF1FD8C66BC8977FB7309788
37E7F1E9BD9B6BC190932DC1C8F4A8D6EFBFE8361CDD2F106F71AC120B5C5DAA
0D9DCD6F868D7E8746BFA10EF513DACA1C421097569A9D7B7D0F88C14BD38A41
E4AF0227778664277FA92C8567D289178A6E648C88213E6479FA41677942FBA5
68F80605B140F2EE4B58B338B3734ED8DC2E3588204C4355EA3A806FDC7BE95A
044D610772648852C26FD3EAB8A3BF26DB2C11299C041A8CA99BF2767F27B387
F5ABD7A2B1EE620BD0E4815B324E3C1527329D255BD1959C76AFB77781823D47
D11420918A099FAF58BA966710F989BE48103BB490CDEED558D877B4A01207EC
FA742D8885DB4AF952C35BE929FC590CF1B728B5902D4571169EF42515E92CF6
73590F9CA24954C4DC8EDBAF00636B5DFAE2BBCFBEC99AC87780402313C100FA
10870FCD67A0A73FD9A341331EAF430734CF849794BF32734BDC694FED7B4CFC
4466AE233C782B7D3E4E5AB7EB8FD6CABB74F11BDDFB01623BE3FCF521742487
3D56CEEC0B5E0EA68564391C7195E47B6AD0AC8A3BF04E78435BFC582B5F1505
E1D22F5D7718F5550F665801F2E7FC22F806F7E3B4EB37818EAE56A4EDD0E0A7
75A735B3136AA75DDC114718012B4F7E6AE62EFDF13E6A89C46B83C7FF193D20
6335D7A82F3851B4FAE9F653CE27E17A8F7E970307EF1BEF14D5963B7818AE5B
FB3675C7B421E30C09D8041FED2F45407021725AA07E0AE76E834D520BB2E22E
6AA3C383E9D14905FA25ADE73725836F7671283810FF0A1581CCD92E929BF758
7B90938D6D7B9D572477AC68BA5D46C57A871A1FC4AAD2E013EB89C38AC049E0
A77DEDE5DCCE99503421F0FE700DFD04081C0884DD63F664A0C71B6D1921D38F
899150721D16E44AF30B0F09646E0D1FE7B4424BD8BAFFE536ED48CDA236A9E0
C2EFC1946F7C3D751985F08B382E79B78E803631360FB7C097F1111B66020833
5418C9DF72562D21DBACFA852BEB40296D43C5F42537449CDA0BC0DF1443FC32
AD7AEB0C3E44E9C0902471EA81A8F9647266F8038DB07CF06EF84B9FEB443A2D
EEB032E56AB65C8E3BE4BCB1401C14DD9B2D6544B2EEF1F2883831E4561B103E
1B5A2ED1CC788DF6409CCA6FE82F68129611A682C0AC72FA33A37568CCC68175
15E2D482FF855293B9C2540F46FB0E9D729F88547B33524F0EC8339B48B0DB34
E749ABDE4FAD699E8EBF7C8ECF4F500AB1C7DA1E5F2B2180EE50F806415C8580
8F42D591E522858B5B21C21CA28865B4D0C46BA2DE063636FAA25BC7364A487B
CED74536D98AAA027F06CE6E3849D6717C80B963342C9A8894B37DD7069A582A
5116978FD57F7652D81FFCE1BFFFC807CA9801ADDA3EB06709CE081BFAEC29D3
F3C233A041F9A778071EB574A8FC79B60A032242209185AB6C05DD19419D0D20
0FBEFF4304BC272BD8207F2B672241D15DC261BA214C9A2ADF8722F84661717C
7CEF30C3D774B055E0A10B4DAA41E92EE8D0FE5B4EC6886B539F73C52F60278A
C7CFF492566480004E71D2BA6D9406A0DA4A657D9306F7514AE1393098658EEE
423F1B4B4C5BE5EB4EA47BC8F6E2E241ABA4E86B63FCE857F655247AF251F33D
5FD602A7C99A8DD7F5CFCF129FC5EFF506089E312ED33F0A80996127CAC3DF97
7D7E7EE360BB1C36808A349E928C527AA82A401C79F424416383D4762AE6BF4E
D9D3BD63A44CFB645A64E2BCC335FB2BCF78BF72DE033570710EFD3B3DB5A74F
086B02DC300D67F6EB04A118A53A867F23E8B27E2CDCB7F1115204C28EB8D7B4
E7882157C21077EE99708F860CB86A549781A21858D824ABFC4713E0970F433B
5CEA9FDA7D35A4A9AF2FE5F455B031B63AFF04230761723AACF4EF09DAD1D6A8
D24D002C0049F14F16FD8656D325E7A8D5D6849B625CA94C654CFE4ED08870EC
D6EFA9D4FB24E1A14612F3C84042781B5130A763022F55C1A67505FB3AC91437
DA0151D6F184BB87B1CCE81D7EECDC6783D552D09813197462E990C42014141E
2EED1713AAEF702C8B8F798A0CF208CB7667490B00802987E7D382B6DEDA3D8C
FD16E1ECEBD9EB7E855E23310CD9F4E6C6350649A4CA0695FDA4209CB0095931
20E712551A8A44D13D15E1E29EE6E8FF7F35E6A10251F14E13DBC917FA249B56
40133C156621AA7BF204534D6E53EA347599DAD8D7DE5218260DD7F95BA0CF42
4A0EA5A9A12FD296D7B77EB326385CA95BC85A797B848F73232845DBB26C41D5
751639B9BE70A8994551BF087239A5C261BA026CCEDCE51441D63B743D22FBEE
6D49CCE1F1FA6DB6B81C3ACD4C883E05A519D3F0DC7D4A225807C7D3AE6AFFEE
9B6537F28100EB577F20A08D10F552B03460E9917B005BFF19D647109F1A2DFB
A71B3894B1B68CFCD066E1A293083EBE5A09479F0C3D4971CB0E3A71E850A6D0
DEF2367B502EB578264DA9B3767B399F2407EE0F7866FAB5BEFA53A1E87A809E
E069AD4E16A70F1DF9176C960F7A178A51BC46A764751E913B030EEBC1B16068
AD5C426E910142A8C398481841462FC3204E136CA582C292B69E4F67F54714DD
77818A959071322C6AB149B0CC4F14FA84F887E4446AF216108FB3252EB187D7
B0FF433357296ACF7D89201CB1CD970072919A4816525A97F83E0C00A21B22DB
61238630A2CE3FF8382D54BADA39EFA05476E586BFFBE8A6E8105B89FB724204
419BE727CDFA2477FA60E37766F3C5E7FFE929C1FB84F501F7BB8B56FA6CA5FD
95E9CBE9DBE755F7ED9D6575DD206675707920575BFD6AF5DE92E34C0CDBF4D0
DD367706787DDD9E550D0BA6024087EDA5224D40DF9D876A466D32C05C041A88
1CAC0428A737E54AED846A52019BC9A199E741280C5B46B574DC2EFFD8617159
044724B6C952D14BE70E4F4EFDBD8C6B7847AFFFEB2B6A0B1E8C8662C806C520
E142B6C2DA6ADCAE42974B7B6BF2A180A4403FEBDB84AECE927F97622572C593
DDF95737F3221B4EBF71387FC12C319E23DBF2DF1ECEBAE3903F396292EFC0C3
D8B7324C277E4E8AC164A227E01A16DC4644D1304D8A6BB1347E96698571C38D
696ECD62B5AD5AAE84A2703DE034594F8A274DD864D3D481DD80C8DE1306249A
0EBA34E9A62E8FD02025B18801665361D8E7CEA44CD65AC32BFFFCEF3C78B4CE
11BB80AABBDC8EA865C7ECE2363A7728B0F57A8FD529AE8E006C5209379FD885
E220A2D20FCA6AD5461B4965607F7750BFCA974018E584DD78BB0E5FF5CEE988
AC4AF4566449F20EBF2350A87E843C7E706599AE4915B7BD7AD88ACFECBD6695
9C41FB42D5108D5096AD458FF985A63EE4589B313EE0F3ED4AF48796641F7C78
3E5D825EDF23B3A03329EBE3CE5D5049FC60C82E9B199A70B638F01C50436A88
15A710C633D1898F43FBB7FC074F991367DA0FA7E493EDDC7BF666C697CB0D60
4362028DF70446E1A4B94552437A72E4A01DE0AB3AE3833B898DDADB2542EC92
985B353822A108F8C12984EEF7DF482C1D9A68B7773E32B8560CB66B5754E08F
162212EA42DDA2FC6DFD8F8C9B9B78E21F96D46F8BF9F5A7F17BB0FA8AD791E5
8B61BCF0B8B57A371295901FFD9516B31BA3E5F2C5FA88CD662ABCBD4806A430
1571A65F47FF8BAC7635E8CC4F85BB12A1A987DCC35A555B67EAB759BE8BCB5E
CB7FA87D020B247CFCD919D99979CBA588F1F62671A1373671C1C4959F4712A1
93DC6FCC52219285FA3B9D04FA5035763D50A1C2856271937F46654759CE5B16
2EE363AAB4DF57CEBDB9543330A15AB1BE1D577E86D22527043A068A32412ACA
DFF79FB0098CB4A645BE68C4290BE57EEF289147C292A588043279EDC3904B9E
44AF4803097FBAB3933226B8B735A4EBCE17F9829D4AB03BFDA3421C6876340C
AB7B6AF06AB3466E34764A11573BD1275B5E453AD5A8B2C280DD5959434C2380
2343B1D5DB13FD1B7D12A866757B2471158A4AA6A4586F0FF50C88F73BCE2096
66BC698534E4A68537BA02E2D09B8FE5BF82D1D8A49E7320EDA78F06DD213626
8432200B678B3D4FB013BE5974D423F0A8D208B8746543F7B97A8C7E24D486F3
F30B9E09EC18B010C133EF59A96CCD57476BF05F41C89DE39E4229F22D836205
441D83252982E5A668EF7A4BCF5CC01C19B01FA1C5C3D09A02F4EC9059182B0F
DF823936D66A751260354860EBBBE25DD0DCE5DC81182AA328765D6A71723845
5531B5D00805FCA243F85295D4899A031D6FD254406A68E511DB1B2E9109E2A8
D2627BC30643D7749FB62349081BB8878BC437921E14E1A67326CF6A45F4A2AB
786ACD78C03A69EEED60BB6C67EE07947A61E8F1566E9EAAFEA78E83B3EBE1E3
837B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7414179A76BEB45D64F98101
3705AB6F7A67D8551E4BC879A6461046CD604D79E621DD382967329A7EF603C5
0A96E000463F8247D7CF06FE08AEB09A6A8F4B0CB143A6C10B1412E1AD8276E4
A5A5219AECB4DD34412429A21E2A5209AEC889B4F6866F253445C88F41CF25DA
60A179B44F4CEB366A028D673EDC34DC2C6159ED9E284CCD6B34405C76ED44A0
341DAF52E65C1FB38B5301B2116C44955C2915D4B7B798E25A751E3F95B9158E
480257B3D8DE09668BC0E0C89032CF57B92D032B79403597185A78357377ED04
7D4387CC832764DA0CA27776A840B928E69958AF7F47187325CF5736B6D210E2
B4D770AA627DED556CABD6821B208947830533D98A09B085A9B505BCE3C89C97
209AB149328CA761F1FA47CC3A1627783E583C4694CC3B885A9B432CA1EED6E0
73CDEB024293574D09699B1DC939EB99502D08CEC7C501CF19FF666C18208E7A
AEF442685AC00FA06BF2269045C5E72D99ED8A784C96D4C6AD58F18447490B82
EE282F80AC819391BCBBFFAFAF6A7C1E9445118A4FFC9EF58611F6368706B985
18421D46FDF14A38BEB5BC4CE60E47455DFD9579EB7B080B98EF87B4DE8A43A5
3183FB84BF7D21D8488356D638867F2C8B8482DE5D225621030D5ADD5C92A6FB
F7BB5FE7DA0DBFAC0AC42D6648D0EB9E24932E0690969588CD104BAE6C2525C3
D118F65FDA66747872A089954252EBF9539FDE59414463F5BEE529ADA12D7F2E
B242C9E0A08B2F5B4BD438CFF5B5E46335866102C4FA81FF7BD59683E91EE910
AFEAC5550A2318F548500474BC9CD072EABAB7EF7D108DD41849D4544FA91F2F
5522748C9514F66B5477146D9FF0D9B55021B67B0F3DD5A7B22B9F265407BF9B
CBE9DA162BD578583954540E3C10FEF0DE904F78F5D9DCAFF6655177EC3CB06C
28F332BB2B96525190CA68D573AE2E597FC6F6E229E96D8A28F152DF96091851
A300E5D8C9E4B325A6D8CC7B17D669EFC73CD12533E1FA05F1E4A7EBD0A46536
95E5136479A65905FD328E021294FBF578010CE0E61EB40E27E034DC75D53917
170A43C505CD552876A00653F01704F89609808E57CB966C2F0A5ED2DA72802D
074CE420593FFECCF79AF455CCB5502C3963B627A6D60FF613DDE4627DCF4A80
0EFC95EE79AEF69F64086E7747785D57AB4B9C46FB4FD99C1F9F8C264C2C12A1
D7655CDB7B91FD93C5A469611D9D4D5D6F523CC06F740E18F2FD4526E9612C68
43BA7316A9D77343EA55CD31DBDE324294451BF7C96B2D3A1DFDF5FD2D358A76
8CA63B0161E9EF74D06BC22D2A2ED8B4CBAFBE37BE6AE3A2351E4FBBA6B2B8EF
24DB45ADB54E4AE242F0B860C715CB71601AEC84DCC2971F4255B2FDB120E9D4
BC7AADF6A5F1DC9E10B570F06C2B39A08EF30C4ABEC5725EFB6EFEFB6D8A8823
7482C71821DF3187F21964DEA6BF5E58F99967EBAB9EFAA3D3B19819CC429EE7
62F810FCA2200004E38BBE54D707AB8F46CB92F25C87EA19A07A4F0A3DA7DB96
17621D0DB4775C6D5DF5818344B5D1567E7CFD49FD296F6B52821E8E975476F7
573366C1B6723E79A057266486BB2AC38819E3245DCC152662276A88C64D2264
CF9304AC8D8D78F70AFFEE9A35182C3F37946BB2DB6C251CBA5B7DD43CE2C8ED
36C8DFBAB0DC4E6FBFCB61D41FBDC0B5450DE3F1B2BD209667704915D5B76CFF
E80D54561FC11FB1DBC6535DF22D8F98CC0CD5B3413B676C7A1F1D0CDEB9F919
864792B64D2ACB13471E3FABC48437040563AEC3FF18E73E7C5E06FDF9AF908C
7E731F647895FCBF75FD8BE027314C6D18CD4165D35D68353E1FC66DD89C925C
7501D84A4D2C339BBB5AC0A8B346056A2042DA2E16326D57FB12D0A69C377DDE
8E0A988870386EC4B2BF4BFF78BDE32154F61D32E81119F481C03AFB3029ADCF
E368150F30A06055D652C4A25BD008BBAE1064E35927F218EB728E10405C9B5C
D875310966A97894234C2EDAE703F87C059C585A077E08370242CAF398196D21
257EE38B705C55F244598408D8E5F0E2489897F6ADE72B5E8BCB021E29FF39F2
5EBCA0E1DF3B85F290128766EB45D5B6ECADCF2B3E7E279FCECD3C4F67287FCF
9F750D3E8D24CF35E091D5A766642257D362CEA734E43C2204A9DFC05F16A050
7599FDF6181B667DCB4D53A568E306B5C6D7599B795CC318204689634BA4A9D8
C77ADEEDA5CA035D5DE0FA89953BF1A2C1CFF88F95DF3840FFAEDEE96041C363
2D5DBA0677F98DCC141075B747FA8C403923102DE05AFA98E4B8E42946FD2604
9EEE73DECABAA2BB9F7F4BE53ED96221FDB43445C5B1A32E5A86A71430F46399
1ED3DD8BB304DD76E084926807DED83F7EEE6346E47A5F4C265C40C95586105B
EA92B9F551BA702DBBF23B148C1AE999FB71D719B90EE338700A286AE686EEBC
AA0C47D584035A523CA05666A03A8761BE752F616ED849209909BE2E9BFA70B5
544B41C0FE765F2AF7855AC8CC7A32533616C408F98554683F6AFEF48547974E
03B7946FF93660731FF2A6E6232D4718CF89B68FF7F49E3A020263DD060D74FD
88BAD1812A811C916E150B522A7970DBD913908CFE5A47FD5B8595812793E00F
2F52D81A869B234178CB0388F71DD35D955A891D12B99A82F44F98617539399F
A0AD809EAB84AB603F534D1676F4369C3777644EB3F198E02B810AFFCB70B431
C0BB2A965AAEE6EDC31304ABF74F87EFB03C390CC00C30CBECD476F2D1AE034C
078C7820F03CB5E97E98BBFA84B0B9A7659995ABA057674462D4FB22190BFE3C
E7DEE4C15FC42AC1EEB4E3373D857D74B386D3BBE1E37BC222A8853E8A160EB5
6D9040D2631E04CC60718A2DF00E20B2B90D7CC265989E72CD389A8EC78A3C7E
478A063405A3C478D339A23BE55F7E8C582293B4104CF6863703E0F264949E10
858D95AE5525E895538EDB4796EB958166DA93EDBC20C0A2041B4AE652950A9B
7BCCB5FC856ABDF4BD1B5A357137F225A539D88B7E421584296E678D406C58FB
9EA0B7455FE50526EA35B63324EC3800A443803ABEBCC351FD890164D21F8167
087143AD2D7FAC1CDFE11B9E9A9721F604EA68B1108E89B02770BBF214A39FB8
0A4BD5039DE9BF792C13B48E8F38734EE1A7CADABB7BD680749BEB865CE8C031
F6FA30DFE295BCDD8FB3F109F7DF90008B808828293E503F892E2AD3AB8C5A9D
05350C683679B065EDD16B94477FDF68D1E27E7245DC8E6923A9456E301532A0
068DAAD15CE73072A36E65563C72007D1FC5978100ADD9CBBB97E14C777259BA
274E183D794D012E55F4D3151C4A06843AB55228AD8B6FD1098CEEAC50EA8495
EC0EEC7204EDBAEDD440435D3B6DEF9E373B238F676A2E5FA080F300BDD82E32
184A513E6366951F3B74C0ACC8DDE96C349EA99678345E89F86867CC43AF917D
8D87F033AD69D8A5945E07CC4F5A87276B68A6032F336C94C6B1927A6C8A2972
DEA85D9F8C77DF86EE890025CF7C0DE2F8F7EFFA193E2BE3E1793DECFF54E669
7425A726B134C601EF0915E8AED878484F9F10AD8C11FEB8A58017DD085F046D
BB9532ACA7C453AFCC19B359094C55304BA8DC0F1673853B40FF2D702C2275C4
D31D73477E84B41E2AF916D7D98F158607F69C7F3C7B305B0CE234E021D4DEF6
1501664FACC4F3770281250D8F75163654E368690B927A03B3A5F2BE36A84A81
8BC727FFB9B70D1E79C494D424A879056A18E04AA75B99F776605E6EAA317978
89A6FCC1B1FC1DEC1CA575453DCF00A0803C43228D5891C3C31C6F2FCDBFE45B
289FA62F75D38846AA883581714085E655FE177168F15AC6F1CF349C23BBAEE3
05AFA3C915E9733EC261334138603058CEB7950098A3AFD45F22BDE7BF32E703
2C2AFC71571001FE685033C7E1EA0B2B5B3D0AF8290F685D86881E0FBC314986
223FACD44DC2D138878087C0DD929C1A024A7111D9A6815CC867BDF8F8C859BA
7091B34004BD188F380E533129023D8B93CFE1086B056586B15C32FB649DB9DF
110FFA2FFF9F86484EF024F40B4CFE0728D7C950215F4AF1E2367E46F0533DC5
B3736B42A01C8B3074060D28AC946EFC2DA5BD665958EB89EADBFC52FB6837D0
9DB137814854BE8A04E5C1BD1C028E365AC6E1495643F18204616B93AB2FE875
7F7367467C93A2FC7F829293464B2B029EDB8F42A5A35E168F26BAFA9C8B161F
74CF2E7E02A966F98D43CF2E997D763323249C16796899F819A7FB71C3E69769
7C4F4EFD3AE4D7F6B6A731A371A521F9D8E75E294C728B08DE4B15BA978CE82E
AB07B0F604518AF0A1B8C4C1A27B7685691941A486ADB7A8C827B5016DBA3ACC
78A1A721C9922E1F693ABF03C400DD95F02438CCBE1A3D0ED3DA70C143F83D18
47605576E694CE7C9B4AFF1F406733E7B606C3C998E63FA1B385FF68AF58418F
1D871C67F70A25409A5B29A2F79BD5F086FD92D6E1C7FF3D38E2DF0459F41B61
FFDFC8FBA904C65CC7131F55641176C3B642421543DC7756692721D7085BBD6E
3D6F3B11C1F371DBD3954CF74B72A5B931073DEC6A704D6B287112CD1A4E961F
1FC98BDCDE3716BA6985D3BA7EBB12FF564FC8E7CBA25DD30DCEEF52CB066DB9
4D42D2EF8BC9894BB6597DE0B24A430BFFDDCB0449DB579D45151C26354F553B
1C47F9A6B4C16E8B029E680F91DC1468636CABA978D5DCD4469BB921383C105E
7BAD6D747084B23A94F21C3E093A2FA8FD823ABD21A88C7DCAF40DC986174F26
E0D9C90E18F783B575909F63082625AF6F4FCC08204FB44F49E17CD79AAA10A7
D19BDC3AFD69B176E7FB87232A420EB61FBE09D28A15D53D1C290FE5BB84BF7D
31FCD429B0BCC441C0D7A174C43D8193C5E291E07AAB1BA88B11FFFDC5A23F96
12B8D1ED8BDE4E6DDD3442E92B2813A3E1635F769E2AC177168F047E5932C4EF
29D8FD89DFD06F9A19E660606DED380125D05843B1BEB54B4E0EC547CD0C796B
113E7B1D6467EEB0F495347DCF8F45AFF3330B7E95B2EF7F980858066B5EF878
B3A286078BC5E5831303444EA6AAA8137C4247DE22DA4626DED30F9B08478DF3
B666EB2152A39757B2C31D44BF1CBE0B1B9D79A7650433CDCF08803C33B462DE
AA6FC9931A004EB68BF13BBB819BE4767520DACE571E52A6E9FDFA11A543D607
CE8C297E4E0867AD030369AE4BE7CBECACEF5E50E3EC120210CA101AB6D1D1B0
AAE61E2E0D0646A3CB3C14CD74242AB2816D9B8B5F03CBFF7824578BA007A8DE
2FF1F9AAE228A3126FDFC66E1E7AFB4C6710523E20BFB289D60716FA082854FB
59140479458987FFD6DE52905B69143A0939840B2B623E0F3980CE20FB1EE50C
9504B729C5810AAC2837DE22C40AD2D349F09B8EF0F4A8EA3B521C1A3DC68E77
8FD589D20B5D27D68C47740F383333AD74391505AD8780A86E89DF6349DCDDFD
47AA3C962C16AAC59A3F41E932216B2EDDA1DA5931F895D0263852CD274257C3
A77F5F55D30C3069E5C568E7158E84F91C174809E3CBE92822256BE808E40787
68CB9A450DF86EA784126C816B00FF5AC33097D5B123C57D37CBFEF124465C15
974B7EDF6D4D33EA5CCA699619300D36E73749536523BE6CE38B19009B3A8AC7
536FEAF431B653AC22F77B27BE343F5ABD8CC4C5663BB61E9BCB80B81C6F367E
88835E165836E05EE2FBC824B5473137919D8C0089CDBC77806B801DBE77B00A
B15B788DB16CD77F3D9518B481FEEE7B24ECDD666CED08F4423F9DC9A0950A2B
0B48CB7824B855AAFFFECC44F7B0D0EA5778BB6AC81DE8098D917A296C2BA099
C217932F0DA7E165DAAC8918099C54916D49D6929979F4B60F4C03FBB05D94BC
32BBEB60A5E32C9378FD3F1CB1B2B6FE1211EBB0E78F0DFCEB462DA12B48A7A2
ABAD8BA0D11BE71BC655498838A442E796E11044C62A21E6751099F4B5FD24B0
E8E2F8CFA34D66EED131AAC978B5736BB3BFE3BDBE83321E13819CF6A73C6D12
DA5738106F94838CA9AD4C61DED60F0FB056224956E7EF1FE936C4B20B960655
4640DBF1C74A884D517074925E00B4620E485A996CFA6FCB9D760D30932BF447
783ED844ABEB57E26130A3A461F426952C4EAF4D66E46CC71339E4C6CE0DEB50
F449C01794227E19B46AC8B3BF1755911D8FAEA70C1E49B504C1A8840C85422D
A743267FE3EE82086FD416180CCA3182A304E5C03C1A0FBF80D6DDCA23C470C9
706434B1213037C76856546516FDACB9A7F6881A7F8CE68790E466FFA7D8245D
F160A3C9C90DCADE174590D5B0C8F20A76EBDBF918FF0F71EA41B02E1DEDCD3C
5C8AA139CBB869A91BB0ADF4483FED80420E79BF830460103295352CC787BE36
03600FCD8734A2BA576F559C18F63DDCE73A94B7C55105EE20AE0BDDEB86747C
9A892FC06FE7B82DBE1569F06FC20D7DE34B39934FC130D532423567EF74E4D4
9E7B623D69373D444D40AAC902637B570D98948F7420EDA75ED8B08ADAF6F2D7
D9F0D1C9EFA045008B386ABF10487E8A6B3CF7B639728F7FD23E54B8F75DC95B
B5AF4E09C8633E2708336464C9F08F9D12992BEDC2D0ACD61E843B9451C84FE2
CD093DDF415ED72162CAABCA2EAED8A3528B037CD1583E453700C4E1273E9E98
B047779D7B642C677B94D8D1A558882E238B34AFF7BB6CE48E7FC0EADF3FAA51
A611CBB6193D971A5A09EC405C9BA560481D21F684BD670E06FD2051A5999E0F
8A20B82FC671AF4B2C83CD186A74960289B3247719545FE8BF93A4F8DDC881A4
D197E221EB7B3A4A9F9F19726245666A2E0C19508090A01FE8B7B80FDD3858D5
F37DB00ED420D35AAF8E7C65152F66E7CACEE5513EAF3EA2E5F47D870C0F3E03
77096AB614FCA285E3A8683A9C08FCFEF55C2FECA368B2D334ECD7919969939A
14FE1EE239BB1B9D13E52C75EA057EF9505BB13D08E378C0EA28694A1BD91DC2
AF85B42B34F2F843EB703B32352962F28E11E96C26134F7355718D50CE18101A
371D49C8AE59C0E3E508FEAED7C4586130B638831AB045726F023EA52E25D3AE
5E86B704A18665F01C9A56D562D87BB5F1E88CBAE16623CAE0E4666ABFAB1BF8
8C15D194B7A4EC54FD151E399EABA1B58D3A468B43B1A1D005D576F073C296B3
EBD0CA45240757EA08CD83B8718227DD2FEB75FD8E19DEA1F6D225E4F5BB176D
DDFDE2BA4B43508C09024A788DD1F49D4A816A61C5A56E2B0421F85B456DE5AF
B4620BAA3441A330A4672561B43FCEA14BA3604A1CE22E228E598E026443B275
10EA7306EF8D68A875350C64E7362C71D083FA83A97372706831F0D8B0023C55
28AD28EE10A914139A0B7FE70CB3C395D577A8AF8DBD736790BEAEC461C5E83A
385B083C5CC0D7D3B38DC1D40641890A3CB60575DFCC812C51C3B79109096584
0128F1C588C3848B190FBC8879E2CB78982ABA8F49E9A42999743896BDFDF21A
A4E52FFFE690A0DAE5083CC0B31995967C4B8437470E7FA9B2D2762E15322338
B87DF811E92FD0652DE0102E695677D265DD15FD982A43C9C6077437F435D670
E5381E26E8DDDB7631E768ABC18D3A5FE1C5D9294E4782F67456C20542722049
9F7ED0D13026E4482E264BC82535EA583D35BADF4B6E969740F4E3D9318F71F9
77A645E1FD71A5844B365234631D3E82A1894CC25EF31C8AEE28AE7C3E5FA20A
ACE1A340A9C929A6CE7DC47149B8A6551027CC2F3DF0BF99282310A6F1B651C7
A92B703CBACC6FA51C07A39B12177F2B2786987A899E28ECA4185ED2CD9AAC01
2C08D9F93D4B303A4E8F81E4CF4F1CE2D1A04F7451AAC68385593E0A8396401C
5AEADEA229B013137AF0D768D74CEBF6B8B8EB9D8C27D7206D4BF55710B2CDA5
FB06084B3BBB5222AC90B17BC27FFAA5F62F1CE9607F99EBDD6A43557693AD21
1DDDB191039A3EE9792854F81190459E85C951AB696FF72187715553572C7B40
E9F24CA2382625E4D72C49711FCF341AE164E7BA499DC5D61194453A7C0B4731
9E38C8A69D4C969587A7BEE83C00E588205C74CFB58BA246F396530C9E10BE23
3289131FFC4C73ED3BB99CCFF451D21E3B0E82A073D2989312140219315EC5EA
20658246612AC1F70BAE19F6AD44A3C76F4D21D70099ADCA9BBA76A96A755B7C
6D32E94D2FFDB3F39DA8C035018E9F79246288837DB34C7D07E237020AEB29DF
F3F4D98E7C9F1ACBA61F81E0703F5DF04216714D8F6C78F458A6F6E2D861968C
3438475350635E5F0150B6CC3299F10C5698CEA02A78835AAE67974E682A309E
53110556767B9CDBCF7E66A38931AB756423433A180415790EB106A8FA814061
883EEE10552F095DD927FB19FCF5806E3CC63540511A9B403A753B2E20CCDFE4
B6F922790809ED3E3A4C9204B3E2A2253047C97561572597BF1C7AFACD58F93F
FF2E10DA7F6F6DDD1EB49B8BC8FCE7E46A23CAB9ABA91AF4CB1A21CB0FF7E07A
EFB59F1BD0D6BD6B550D9C66314A47B3D595923E90DE54150383FE07B83C5FEF
4AFE092F38B00302BD16E83A593C52E9CA15B18A17CA10B64B4C22C6817A5007
B9EC9293DBB7A4F4A1668C93BCA4792E25AF4EC529026DB7D18CEC44CD9A64F6
130809F138B36D9040D2631E04CC60718A2DF00E20B2B90D77D9F99046030D48
26D3CAE5BCD39788F40A7C7E885560105E03DDCE149CF0B0D5D7B0B481F71DC4
2887BC45BECDB6FEBF7450DAEBE42EF33B0D32D7148C1334B8E3A46E4E6C0975
C04DBD2C2E4005611C1D1F7E5252B6C00C047AB5C675FDFE8BC357A307271FDE
2EBDFCD9BD7A57091D53F1823C44644B12B7B21818685D79E6A9992CC0533CA1
B200DD4DF8104B558E20D10709027446B0481DC76A0403FCA0CDD874A32902DB
4DFBE9E6A22D0ABB65CC471F0A7912A3C09E4553B37EFF31DE154237C9128F0A
CC860CD416B081BA242EDA07C2887A4202CA15341A4E6474BA273DB810050A1D
82266AB0DE87BDB8434D9B98F65EE749DC28A0CCC2A6D5D4F9537C4F0E873F0C
1166EE98EAF7B1132BF8061DC9A835EAE764DBE7DF92D8C0515AA83AEF0BDA23
E27CF3C2FF259A91C34D4C1E27E7EDC41B51A2C7C9E0239C78577B4283E16AF3
9BCB83F1D4FD3369B81362CD86EE6226BBB90F4EECC6A4721202F9EDF2BCB358
924A1D8718BE25D405A384C254A8B59C23CECE7EB5F91AEEC472F022409CF1C3
3295542CA89FF5364DFBF85377DDC1FCC5ACF9A41D52D50550B682B456FAAAC5
325A8EC650C071A0C886BC4ECB7DD713BE24CE497FE43320F45B5C4443942B96
4A6D5A89A1D91B228144566950B3F8D633847534A519CFC31FB277C8A73DA9EF
6BF264FB6C8E56A8BC5E5F525DD73BAC19D6F1D8A0121796BCE58763870C13A0
717E1C9E22B790A58D040CF9D08057C9C8253C6D1ACB3E44C938CB3455733C18
FDBBD80605748BDACA582DD5134C2DF0B66BAE5EF68A8216E15E7B5A95F860E9
99C4BCE3B75CB02E0C113688BFC2E7A5A37C0E15CCC3F36F0E1E4AB22B01DA6F
E34C3649F43E2108A6E6AAD5E576CB9315F0049C6BD28C248A3ACE3E8DEB6EC9
A1E7A4D9E7D8D370FDBB317EFBB6377B4137093B94B644588F2784247006D5A0
115F02CA3486D323261A0372C6F83F1846A0FE703D8F386DEC1D155329A29D94
07B3554E4F420B7E8F1FA267C6EADAD9672D92BCA430AE206B5FAF4391CCEE99
D0FAB54AA5821C7E381B561B1DF151BB1A1D08F2165D22864BC6AD980E564F63
3E1D39A64247CE7EF4D761C49DE74E56FF11A0A9B677C363DD2DD123D5FEFDF5
BB424E44C48CFF5186EC4B731DADE5C5F3543FA34060A18B6D6EE4D73D8509D3
FF3D1F54FEB2030607A5B0A1FA84E55EF834C7B146FD395922F2D83D88A01FD5
D4C9A111AA39183EB324BA33B9DE3F43B9D562A05BBC04B582E1843ECE1A194E
44D37F6FC37EEB9A656CD382A78753238C2229C15AC4E4DF76F9BF7B6973BFE2
C1631B55DE0DA729DCE49808DD36A4A028E1CC0A9371E070E2B3D1D765612E24
9ED570F548D6265A68D76F7427FFB65CE220C7F9BBAAF763D85E04DC167F0DFE
EA86D07D817BBB9F1C9C0ECD2DC405389D46C775EE64727B67B4744E1518FE66
D772D4F0689CD3ADC08005C16AEBE8B944F3A6F49CF466D45752AD5C815F08C6
D8BE4127DA2CDBF95C8BD7A51A7B8A1C80CADD31EEE5FF737BC32456C9B2065B
F3653116686C47C3D4344A398B0397D0B7A71854876CC29CD3E2BC4E36317EA0
1A0FC4D401E389F05554DDE757940E4520D06F43196A67F220E643D28F4712B1
548E7B60E4CAADAE70B1CBBA522ED47E8E182C9C544DD6E213BF34A0CA4A814D
827CC62A761566710DF4A943A97302E113B27C840C2A6EFF6442DD52B74FB24B
25BB5489AF2778018B1EE890031A68DD19ADD2D8713A44C816761CD9549CDE4F
4F49B4C9B00FB6452607A59DA4A564453130621F0CA7826A0CBBBF4BBB5DD20B
EAFCE6077339D7A5E94CFDB344D83EA26ABC15C0F4E4602ECEE8E08D019ECB95
844283418CDD9B1D851364DD0542A492DEC300FEA66C2BCC52020BA5DAAD75F9
5FF3A4CB5266C574F3DECD0C57EED1CE044DC434D14E8FD22CA5987F1F49653B
D1B7D8738A5755ADA009C313F891CC4CD71AF50F401DED3C07AE905260318635
5E912CE921860A21D91BC11C959835864BAA9B653CBC1063CE709BEE06E082B5
7014209F2C121A691240C1B1A2E92F1E0A366862267E6D54833ADA406A506E78
DAA2FD41338E2D30BE93141F7F6BF112D0B988241D888AB6C508FB8D2A1D45D0
3DC870C9AD553EA4BBE7A4037C1EA6FCA7772641B81D6260DAE1B686E1B1F7D7
E5F2353E9219F908B315EA3AD0C72E1EB3C00717274E2B2F11315D10988FF944
328CD1C4B0DD250D993AFEFDFCCDF802FDEEBB03F01041F861315A7A1AC2E788
5984C76341A6A06A8E7D5F3909E50C7C0253B0FCB5ED0EDA312355383FD83D48
1291F2427D2D42FEBE753C802D8BEA7EEBD087E7E26F3A512F590BA9A3336F4A
3D68FE38181FBEA0F6A00C43DDCD56A5AC0E7DD1ED580E26311769153BD85DEB
50C6D87B570A03978D8A0BABD6CB9CCEF4A0B6F260C21E19BBC18E4A4E517F65
03AD5B34BD0D1CDCA5D0505EC0D97934FCAEA089CD2DF10E454109F2E4EB5DB2
B42FDD9C104CDAFBA0F469EEB069142CC4EB49C6BCF43BA455DEF16ED749CC6E
4F413A56B46D36C1FD005C623667B9A69C5AEB03409F73279628029476111CDA
2EED9BDE98DFF72C67561C6B75840B10057973B86824C2768BCE6AC082005D92
ABB7ACB62A5695AD58172296A17B701B10F6B85C1FE5EFA156C6ED8BEA615B89
FEB28C80BE87F92E05424B735BDFE998B9F7BB00AAB2CBACFAF313AC5188E8E4
1BE6221ACEECE7862FBB70AEA31A3841CBB22AFA940F7E525BA0039B772CD7C7
AFDFAAB41DBCFA296AB3BE6175D6DD2E8897CFE1D4D21869DEFE22D0669F93D9
EE63A02625CDB74F706D184EE2D0AC7D841E4E2ABB55B4893A71AA4053C85F77
6BA42DACC402AE3D1E90B1CB02B5FB4C3C943B53628616DE67E894FD2460C213
4BC555C8390E34A7E9B4C0B376CA3C0061729AC4D74A48150C87BDDD034833E1
E82D6E7C4CEE4DAE2A6E477FFD9EF23487B0B82D9E3737F188D77CEF3766B71B
B8F1D303B9E3006A8DE3C841EF5120D0CF7B0275669445A71FC40E1219ED4058
1698FA15963006D0B79991D3E7D74AD579746A5C16D857EEEF6776A03AA2E013
B89C3D0C0CA65BF284D97F492A5AE8DCAB652FCC1E99365B7B4E163CCEE24C92
166C9076686A93300EBD611FF5E48E1F448F2C13FF42D9E05C483296A4D3D671
AF19870636C803C0B3417D91BBF5CC05BEE9FCE5873A52A0C8B348F7A7ABC3FF
33AB67F5C333EB1667AF1627D2E059C7834A17CA0F8BE0060E3A2F389F9825FD
7BC6A2BA3DD0F53CFA0DE7F96C95B5D8DE5E0B1DD8F6E15BBE5AC52A446D883D
561AA6A63C1AC13F5E1C000357A988C1E8FE5C8F03E8EDD5FDD51BB04F9805D4
34693C641BF525BDB1BC2E3636780F28A9470B97063893B88F3F4961CAF6E139
AD747A1FEB299279D941F7AAC821D6782EEBE619AA93C79A1A9A1C7796DC2370
D09F299AFF8D35056DFCE33B592CA6D2FAD8D0145DAB289D33D39C10590C070F
F07B52855F5C39E1CFA3097322524F7FA26FE409F8EE9D1C88F6B0456A477F9C
DADE23AA502CBCF090991574E703C48C73177B49D501CAA5B8663F69FB09F321
C8F81E5E967473D1EEC074B17462562FE7610701CCD9205727583EB2695441F3
924E0EE36114F8D3EA92DDD45FA7B62AFD428285D86565E2FDF8EE61FF07245D
D31D2ABB1E38944625BAA6F5B58BBC64BB6F115B821B43C9D03117FA7FA4D1E0
7DE9A23795DF0BF706F9794DC84F6C2AF84A86FD2023B10EDA3D1A2FC1AD61CA
D35D205B3BE86EA5F792CFA750A42274BE5FC445DA623DF3552E8F9EE124AA8A
9CA61FB54F49FBB20A05F5A533D8E4EABED34F2051C7A38492310BF82C6E9ABF
0EEEC437900035A0B493CA2527D132BA490F1B7ACC0D84094CB8B376A535374A
AD43D35D7232459674BAB8C28A5F9DC10BD31BD47524697D107432C00B2EAE7B
F2942511C056684079F38060F62C9090008C333204E9181E864A2AF3A6BD4D0B
1ADC4C3748D12F656C57B021EB1568920E40E142269A2240ADA803EADAE27A9C
81F81B518E7F936BC53612DCD950DAD2F3EF6109453D6714E41E2F712B465B46
883D9F6F1C8B4A24D4DB315540B88F80F3ABC8D5931AD3D7D6F9AF7049270673
1BEF3A1E6D0F4BE61A0F86A5A484D96A28062B9C53336FAF9A4F5058AC938698
CD1F27FA2D6E6D0A991BC5E045B99C2241623F7BA5461B860814194E9447DF04
83F4EFE5734D00D84C21367760544B047D70975A07791301A38780E5BA1AE6C9
B3B33580C36AB608CCA3461927DBACCFF9D70529197AA0700E5D3B6219CD49B2
C074555D4312B09383C1F084CAD5FAAACAD83165A970206C185293047D4D0EBB
E723850D894EFFC1DFBC033C88E36564063DDBA7E1F6EDC3D52B3D9A7E7BF739
95AA4C378FCC3A8318A931D73721B32CE7D2332CA6D50B5A6E09B3ECF744CD53
58E24CC043030D482607AA7665AC0D8D3F0D2F4F157146D70F9B290C9C63B396
DA5B697862ACE20E6EEDE27BE8F5701567DEE703F053C1379F429F7844CFC2A7
56A011A3C060F006D87BFFDF8A793065B9E792603995EB4FEC8F9DCF61A1940B
0C1FEF60EBF4AAC02890DB3EB3B77D1F5F6B09C4D30E85D15EB6A459A08DA8CA
EFC73669815BE9BEED1602E1B7FA8A6107F239736C4C76625098A15FF97079E1
F54B0795A47D6574E314F395F2D69A112C08A44D0642F7E69517109F581516FE
B9BE3BCDABFC4F23208216A4230CC9032DEE7074D7FFCA429E4662460A8E781E
2AD0D7A5F79C66D2ABCAACC7187554B7B38DC224A4CBB9A0A25E4296C1F2C8ED
4E3F82E77351879B03A8EAB15B803ACF357B27903486AE4EE192A9E3CC3C512E
38A797D3906EBB687FF3856A12F94828222E6EF926DD71C9A6C1E09AF972B9B6
DFA7C7C277BBF9D159D0135EE297066776E737CBE0F46EAA89B0E0407CE2339D
7D2DE12705590FD39C1E69EA726B8C140144048172E176552EECB9A64A64AEFD
D186D00D3F68C0CBF7AC99DC13BA6E038BADB0F8D1E819A73B7944C9C2375E52
CAB31F8E12B57CE87A678E51957FFCF943BDD545EA8BA7DAD7BE1D9DCD3497AE
4A1CD2BE6327A2D3FD81D4A95C25C9AF9AF94EDEABE6ACA29ADB69140CA241D0
CDEF4030359BE761E948DBEB72F01B40443F657FB68AAA09D741410ED9765F2B
98D2AB971745BE45A3E585B3039AEAFB0125A657200C1D2D17D561A136F83552
A2D4AFDEA7F22BD8D6093365413515E650AFED1196A083A53C9DD6FA1932B4EE
B15D0856ACE5D87938B75EF30F3097BED821FD55ED7BAD17D8FCD57CFED93822
D0EA5CC5EFBB7F26FC44F0CCE2CA9F1936A55ADFF8F3110940C8CAFCD76D82B9
E6A98E06603560A6ADA77555C94420F241693C205BDC1F07110616924C1BF570
DEAE4814005CF516FBE5CC41C453F88D845EA181A81CC58833575D4195BBDE9D
68355F4CB5B0A61C9C19F3FFE9B11D4A7731E71B094E333FAC55FC7D2564D50D
D1C9972D547E7C4A7A6B90CF05A4085A9A2704CCCCE7F8148927BE044A7EA434
7B166270C46892EBB3C3CDCFF6B28C239FA697F3F982497766B594CF8FD3FC64
D12A5734A60A645FB04F4E4A37B578E3AB243CC610ED040D7464260844536CF4
6928829E82866342A59C08C1A75FAC9E5B9D50F2F07BA6763F7379D42C27DC81
14128FEB21DCF07BCB736ED86B4711AB562542D2C82504CC311DEF02B2CE6FA1
41139AEB14C6305C895F2609BB3A56E849629BF7DB979D73D33FE9736D15AA6E
9A518FC8E2A20CB277116AF5EB15C78FE343DBF1A9103AABA1A1971B179FF35E
DB9C43EBFAC9669CC2E229F0E044854B4C4018B0A927A437234A69812279FACD
4628CA22B6E28891022FAABFD90E6CC9957F23B6D8550D108184E3273667FAB6
8965E710895B0B78042783AC4EF5DCCC15B79AECDE4C0F75B04859C606E17F1D
475CF82B9A75A5424C29D3C4CF3227CAE270BD6AA9852E38B6D987C615641892
C57B3F3F52DDC24912B7648616FD44A62851277ADEF4F75A0F5DD258A98A016A
6D26EAF2F6E2B790B678EC6A8B29C776B02C00A09FA9AFFE98801329B67A38A3
A16C1BCEF54864922EB4F58250E52666F047664116680EEF3E711AAA2A110DA7
B743CE90E3CD5B1850CD0731A3287323FBDFF1429E9F72864C6CD2BAB902B826
FA9B49B9F59C59B4CF187EA64DA984AB98FCBAAB744FABE6990F87727320E02F
2E1F6832874D8CA0DC86A3828DE923298D6A108BB59BA0E7FC8F79ECE86B6ADF
661958862BD7E59D7A40A7ACD26DBDAB529555610FB4F0BC7F7DAFB9329FAC63
7D712E16925E8DCB4EC76573C753EFF0D0EC428DFCB4D3C55DF264B106D61527
56E5F3756E65DC34BCEE2FC5A4375FA2184C7BB6A1C8CA561328B5A214610C2D
4E83F3A18BCE85CED4498F55D1E67A0F943247CF66C229BB7AF3A0A07A1E4063
72B6A98585823BE1FB405D5862F68A8DC6A7D577282B5FB2004862BA57DA9F86
996D76E813A5C3D52115B3B0F61A9350FECB1FF9CB20CA5D2A600985269770FF
2353BBAFC709AFA2B4A3DC996B6FF86ABF213997CE419E871C8EF7081129B75F
6985AA52E108F9D96C33E9388BEB35C5ED92D3A2A1347E383B741FA9BAF1D2D4
9C00AB6E349FFB26ADFF95CFC1D7AADC4AE2E6FBD58EC00CA36BBC1C82019BD8
6B7D7282183BA2498D83F528F7AE9598B6782562FB9A8DC395E1044F5C6919FC
E2A8856AE8FEC012CB8B23AB6E193B739E96F18680C939FA20530A6940E8D921
1EC65A4E4CFD28C4224642EDCC17BB6BF45C0AE43F1530EE1FB5305562C08B85
73C49DC6EDA36F70C4D4D7ECAFC352C1A8E9471AD76203650CEF682D9EB5EBD5
2F88E1029B00F0FBFCA41314D3582E92EE7E40E6884160C8EE3A469403FD4DA5
7DACCCC3F8D9605035BB0410AD8015B71C1741BA6D6CC68C2520326E27467789
500E6A92EE43E052E5EF3A20227E8A948FB5FD258DDFFA7F029C1EB9C7F7F1B9
E870740CC9F2980C7038A553B57B9C79A8C128E57072E164C3C4A98D788EAEC6
B650B490EE73D7E431070DEEF3C74E140AFB6D050F3827C7273159EA7C8315CF
1872D926277091A494BF42099C08FCE30A5FDBA5D2EBA616BD7FD58280044611
CDA9B056EEFC1B377571E23D74A5A33A6D32ABD288056C236E568497E199F7C7
ED332F72879979E282120B8F19838CBC37E5A5F82F2C035DE30A321BAB8D54F8
F88C0C0806A4DD40D6F136667FD1FC99402FAEBE52241CF89EEB7ED7716C7523
B912FEF5FACB162461F464C826ADF980A66C9D31AB6AA241860504EAD9ED88C5
543A9E9D5CD4A06B4957E2481627E338CF62F6FC77C4578CE5AD6ED662A31655
17CA4FF6B9ADB162F5B8F1F604097A1E0AA10454FCE5FAC431C9966D64FD7F4D
F71989BD916F24D567AE548677030D5A5F65FAA3CFAA7D3590092A6F52D1C0E7
B06639220EFE94FBE4E8C0482F114519293801F2A6B4BC5C612CA7BF9ABC8356
CBCA695B2EBF693763B669BB95B0F6B4FFC74C4F7F62C2D052316383298FF369
2698011B6CBD38DCB11A952EDFE2896F30AF8F1C3315B6A597AAFAC13DE5C9A1
A060658306645973C903492F5A6A7A23844A4CBB19C654D2F13B2F4D678830FA
5B5D83EC87A5CC97F49FCD406350135973AAEB0CB7BD65B69DAA9D645001DD31
281295867B7D7ED9453F680A4E56F215C745B37BADA9A3249293F49417E6ADDD
B1D4A1A78C51C28CFE2CBD432488574BD7B1E496DAFAD07C4207296E1BF50A17
B7159D8B55D2CD8CC7F82C1FD8C1AC14C6E6C8E6C481DAB6B0E69940E8B5262F
D95114FF61165D2CD24B36873F965DE476CCBDB358F48B7600D1BB5ED34396F3
6C4DE5389F379F14003E57BEBD083A2016CD19327247504A154308B0E32618BB
ADB141833EBD8AC18A3225CF6C7D4E1FE00BCC44A94389B0DD91ACA0CFDF934D
BA2BD3F590611CC6DCF38B7000ED37DCCB1C6A1056B4BF2A8C17DBF51146F08B
0E023CC32E3F0C1DDE53D34335415502A3C67455EE48BB3EF296A66FF4917C04
36F00537549B7F5B00B9C578D9F2A614C16F779CCC25BF98BEECAD4E2F55BB36
0B09317ADE50B80B5288132862F2B39F90EDFA5C90D3809436BD1329110EE5FD
C621C610DA06841F3F60F76372076ECBB12CE721B56EE1A4C21AB9A38DEA2D71
546D4ABBF4083C6F6B48151894B34827A301627258B454A4877489A64CFCC3EA
A74096A07099DC1C71A55BBE3946DF53E9EF5D02DD764B2D0F2B6EE207079441
6AA215F80994AFC03C256CAFB4316C559BD8E927C9A4A2665689E6476BDF6241
D373E944C4370EFF74341B8685C434112BE0A156BBCF83CC6D5AA9EE59AB3CE1
0F75747C442368052EFFF5154B6DFB1F83341BED73D706A5BB8855FB96C81F99
15EDC6DAD11E5AC43360AD3AE92885036BAB7BE4A24EAB953BA7ACA62199FB0F
598A57D8F6019B0DD4178D33BDEA879855ECE7AD928BB473CA1009ED48E6E170
19BD5B88CCA59D9952D02AB4203E0A3B59F94B492578EAD549F696831A3AFD2B
4D3F7A57B3FEFB7FC9416B15D977F20D33727E180C734BD575AD43AC31119DEA
E94E8A974F7C333E36218E475D16694B4E213681226032A0FF976FD324359B43
C3B6CE6E5429939B834F059B565622EC48CEF9DAF27500CA425743D6FC8C6D94
6086C3EE655F04AF2C724162767C747BDDBE571634F86C57F23FE89F2B81F168
76F4004794EDC2CE4CF5136F593B47BC6C9E9FA82CEC81497278D8EAA495EF3C
189485F06B1F080B522ED0A00831B4FBDB57840DDCB9014F44F1D0CB847B859B
A80BDEF091D11EF5F5ABEBCEE05144390281AE6020E027316C78004C49E66C72
B7ED5574A733A99A79A46BBEFC99D307925526CF3ADA9797DCBA7AD699CFB600
490A77B92D2521B36D9B42CFA1908AF174A331D1C7E1A78C50CE0D193A88780C
5A4BE992326389B2AF13BA623C71C927F4442248B8DF518A1B4BCC4D2C0A7729
EF33604CEEDAF1FCAC4505027E29838EE33B88AEB5BE550DCC7841BA67B8C26B
E962C67604F51C8CA37906C9E4131FC27BC982E91EF66541172B93EBAE068B23
9E49F283A8D9BB4689C4226A8A966F7AE824AA8EA5193175DCB69B49945F9074
3B81576D9ECFCB183741B0C4F30E7662A179DC6E5F43A2F592B41AE40AEB0108
7B170999ED0119760D1D1EA475A65ECBF93495D537CADA5B4655E0E33A711513
F3015C6578F39A68EF4E05DB44E6745F13D3775A30A36625A9A52F0BF56182A8
CC7A24C3912BCC5CC33ACE734E37F9D0BD068A95415076B5052D79626995FF2A
C207874FED2C61440BC347E71BA51C9C25D806973B1DCC392922B0DA2FDD4BFF
F352E29C186FD5D61C4E86C4D66B3656CFB98DE11C7B4F4827ED11337A84CBD6
6070A75FC82F51A232AB339163E799094B4BB4492DCEA96F8759C57E9464CA83
45C7B01E426CACBE3FC54DFBE9192081B87F32EDBD4254E90F33CA8C85246552
4ABFFDD39D1A8F84F01422CE450F61E67776AE1579FC2319096448F92BC748F4
1B4EEA33E334504B9658DAF01344776AB9B486E54D83B3F6E9D8895BB6707961
C940A25DEF026CB2EDDF0CC8547DFE51D2B2E12EBCF53410F0C8C156072032DB
248C62FA5685810BBCDFD7F6E2BA2E21C4FC80A6C89AE031A95EFA9EE8F86C60
319F0C563EBFC5518AFA38E4014F47D3C81E7DF9B85CD58336D674D56E8C6335
4C7BCF0F7E65AFBCA372A5619ACB49FED96D82599B362AF00BF140F93898772D
809660459579AB1755125F4AD2ED57767A9EB4DE9D63CDDF9DF5C27562260AFB
6FCFE60502332B13FF3A8916D14FA027624ABCA61CE1B0AFB54AF31E7C6E5E4A
02A7C6850296833A933D2D35FFDE28C9E383EB88AD9C3036DDA97353A2DD1E5C
286BF8A1DE1E053AB595F8C8A835052DD86826244A76F6C45C1009C6869D78AB
EE62EF844774E75E9C1DDA3612DAF184728D4D22F4FC9190D7BD17528D189DEF
DAD307B97C60A42705D0A45603013A4217C8E0FB92B9A96FA5D355B186D95426
AEDD9A25E58EF35B7F3CEFA737EE1DD167A172BA21F33A7774D1A883B1832546
4058B2F4D8A121FA0DDE35C1C2E90A999C582CEAB1780606C4D26F7491C80D5C
EC44210FD347FD50AC5D2DC2F16DA7A65FEE070B42D5AAA9444B3A726CEC45B2
C6456F8DEC53DCA96E00A0E08C676848C41302E704FE966A47ABBE717E4E65D7
D07A33B169F50589CB950221393F8424481A9DD617AE21A5B8F8AB51B9265445
D26A8A0E0D17A77A323727C6D32ECB5C4703687289E8029B8A00E135B4EB1F5B
8DE1D89547FB6ECE840A164431A6D49C83C9A29A83E616A94C80974D32B42157
6A8E196AA0DC598D488F2AC6D11E05395934EF62F5043240EDDF55227AB2910F
6A06F3750EAF572912C8D0C0D461042A2E0883195E46C9D45C45890B8261143A
9CE3AE8AF5F908B8CBA6A871DE031E316D476D1868B46D10D614037070E43973
8150BD5E0DCC68A046A48008693113A561C11B0190B7FBB0A0FC58848B5FF361
2F1E7DD46FF982F3D94424EBCDECC43EAFCE270063F1FD7C46413DE340BE5F59
B511D93DDCDA86C01985868C5E69906DE87DE84B8BDEFE56B646534D4E31C2F8
24C2C5B4347783E8B81C1E6A9F13BD40D7884701E52B08A67E8CA24D855BB812
6A3FDEC75480DD0EAA1CA32CEE90A3E84E587BB90337A640172B998808B550CC
15FFD58F8CFE5371B6E334085149F46F74A1625B2A76BBA933568C83655E7199
07CC487F8AC3B269E8F39535DF4F5C05222A17F919A41D323FF15428775AE71C
9F5AD093568BCE983A68CA978416256A17880BA8A90BD939EBDC6B9CCDA3AD58
5E95DD8DA953D52DCCD54FA5B0CBEB877BE3216948A8581A9939C5CACAA9F8E6
D550033326D5AE91FD9A09E27309E02156B34057994B5C3DBB34AD9FF232F440
CEB7B49D22BD4EE3286614DFC93B61143AEFACBE5368394CB96CB71616ACEF06
32823510C2D205AECB4C67EE4FF445EF7E85715A506E528277083580874B01BF
FEE9D2E730725E896A3A81BCA0086E68C7388D0C3354459F989E4AD438B1884B
A1AF0B2521B4ECC3966A966A81AC8E9AE50E907E7C569F1F69A31A8730ED0DB6
F95079A54B454FE7C7D2E8CFCF12A0BC32B319D1A44B9EC824E47939FD1672D2
0E1940B99EAA7EBED5D18BF995E2B92B65A036B5D50089E05BC6ECD6DF53261A
2CD5D7507DA7D5BDFC1810B28A52C9A629F4D1BDA067CDE1A9A354C959103C7C
8007E62CA5FA486B74F0E6DB7C0B60775EAD889BB76E5FA1B8771819769AEF67
8E5F2512AC94E316F25F5EF0F588D0A5D82B7EF147880E74C16E3A79C3EAFBDF
DF5C218492B54A312FDB2E8170D7A57F02E935306831ADBC2F7780A943043CB1
5F1AC74B5227005089CA429746D49099761A26F7E24E032172475510E5142E31
1B5B72FE49FD9EA37376B0A0020FC80FEEFA451EC39586173580030F40929E23
F8E4E35767C5D0BBFF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 96 /lscript put
dup 188 /pi put
dup 193 /phi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC1EDF388B813093984FC653EAE2FF2DB66CBB224FBC82792DF3FB4079CBD
D733D6D49EDF9E2DCD9DE0EB684D4C5B6D7F3885E9C40DA67C04412F6CFD3521
BCC425AC9484A4A95B78EACAA2797AB58B38A5CDFEA4E25BEE707161B0444755
52FBC5C4A8CEC877DF9A6C518175212C74E1EC2B4551ABD8AE83FCFB3BD159C7
3569A93B9D1F8DEFB980018F369F4720B92014405AD0EF2B7E4FB2E203561018
F0CE736461D2BFEEF8BFD513B0380993B8D52A6546D6921A1B884CABA6261D56
0571CACB5F15D022A847255638493156301A8EB7277801B6E41841E2DE908535
2848F0D8B554898FE557F69574567035ACECBD472DBFB9F42CB40A63BBEC54EC
63CCB18E93BC17C32CCD3CBABB682FE69863D29863BC86FF201FAFEFEC05E955
74AFAA473759440CB93D25CEA7D30F5F172527DC0536502358BACF8910AF5801
2C56EEE0E6467948614049610CA704337A94DB0F71FA477269474F88D5A94ACE
249E4FF15785DC708C5E74B13618080511E463091E2AE2CAD52A798964541489
F5578711E664155968122528EC2703E4813D38B6E42113EC9D9F26C400FB88A1
4EEEAA4DB238CAA5F8F73C431357946969FE71C3C07407BE59DC986480CE1823
529BE752F5F02CC4AF584635F1251F500A9D1D287B596475B5BD22B42B5D8C5E
1F1BDC06F9E1CF3FD6C41C43704BF2428C7CFEEB2CCDE6CE9BFF206D26D09DBF
3918E0EE87EBCE74FD786436A3EF2C7324FB945DF7642DFD20364A280761BF7C
368A1EF18FE3025A39B8C93D67D6A35EBC26F8A9EB0410C50B3F187635C2FC11
F5A425FBD4C3802F5588559B7508F4B93F17EC00550FF388851F1A276A044A13
9042AE21AB30177EF6B3A41AA1E687DDD605107786994C63082E9358DE12F49A
842FDCEB040242D2BB91DDFC852D2E681710CD636F99D78C76127AFE4B79CE96
77669C816BA7B034040E9E3724D1D9EE5E62F7649935429BD263026427BE7E50
0FE0FAF7D36481C3AFE1DB31E11C9AF3DAF16F2E9F939017CB26CE5FD4DFBA43
93153CF3F754FEC77FF087E6278F2FC8B22378C247E98CAD8688AD0D3D021419
D10C7DEEDCBBB29DC009A940A209534A793123EA7854C9CEBA97C19B2800D508
8A0A4E78027E149C300A197186E31B66D8F0089A7450F704245A2C8D0E01DA8B
7498CE3EBC01975CCB60FD3AA74799CA72C55DE2406AD4C9092C94CE1D3A996A
887E427C8D81C2D599C7886D534F0D7C1B101464FB471608216A40DC534CBF16
6FA90B11F4A406FB9DA115A9EF0AFB2DD8DDCD76BBA940146535AB04943EA156
512F26726FD32A24727F92691055FAFADF96C7674EB034D3F080C9AC01D9F97D
5B1CCAEF38445D61664B1EA3FAA29DB95850D0920D587E95838450CF93455FC2
C09D04AABA0026D8CD205BFB2A6D3353456BD6F6685946BDE21451DEB8830766
026A8394D0FB4F17EA4B066D4C3EE75029595DB6EAFF04E25F1D6F50C7E61D57
3E0F2749161FBDE6FE4F4F7166765076BC5479F36BB2A3137F14C8D64400
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7B9C1BC1
4A4900169BBA8D40165ECCD95F30CC2092FBD829946232BC4DE9E89FBAD3CFF6
2F1FF73D0D74B9F6EE78EF1B5256746074600486B21F5E5803BBEAD89B77291C
9808EFEF9BE51940D1558297BD0A111E399812A73B944D727A4F7649B7D8DCA9
59C2AEBDD02287FC0C1672094C8AB5763459631C097E3F6CD2ACD95BBF413D8D
505D003420974BF2C37603AFE15349F2888A630B27F0B1CD38343C9904E055EE
DECB39C4D4751525415F804E4954BEF10A221369647AC0C349F7C1D82CBE2E63
184C8945FBE4998EADBB12AC0BA187113E851B1B1B47BC8C45B40AE4FA456390
89A7BF7A14C902F6D7ADC9D7DDFF1716B64996794CA24D2A9902C78A682545A7
A1E828E340CBC679E750E1C0F42C58C912E9509A711B7E4899C8836530F63C88
22E82DE68C52BD9DE43E59097D8E70DA29237CEB7BFF4558AE8A0A3896238651
3B071C94A9BB435EF621DA5EF92CF7C752C8DD03D861C58C2E0223A9475DE6D1
F93154367A16A84DE4E6FD1D06CFCACB1D1484D939BCAA80B78A6BF42C5506FD
D9EB3A74B945666201B2EC9FE90060E17CB920C0D7B83014871D2873DE46F897
83F35683A6A193CFC080B90338CECA16CCD8CA8FF6E553EE7B4394A8B1DBF258
53D51A358C541240AF0FADD007433D7D2D3BFDA747BC3C61D396268E5F37F942
99275952CF7EE0F2D2EE8B87FB4B542FA01EA63750CDB6858004B3F72ABA1E31
E835743813DA86FF010ED1273286A581DA2405A136BE0F9A0F84507C14BABDD0
0AA3EC1EB3D426D8836BE7C0BCA7616799AA13235F0FFC6E25FD3D6ABBAEB4C5
A5264EFF923E647D9CD15AC67C705234BEBB338714C514E82A78D0E0B382CDBB
E8977A8EFACE2D319908473A4B85861F6CE3485B948D1DEA3D3EF2609F7792E8
8DB5AAFB31DC3CE7E1EF1C9B9536B3C5BF838462652174C182
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 41 /bracerightBigg put
dup 112 /radicalbig put
dup 113 /radicalBig put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 161 /parenleftbig put
dup 162 /parenrightbig put
dup 176 /vextenddouble put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
dup 181 /parenleftbigg put
dup 182 /parenrightbigg put
dup 190 /bracerightbigg put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B286886CE534D6C5FD912099
3A92B663224BA680BB6D7ADA2F0D0A2E70E3B183C5952EFD288BB1F787B9E558
AAC41DEDA6E48A8951959336D5914E24F5CD5535C3E56A8EB5794980739133DF
DC62B7FCB563829ADE6CC1D269EB8BF7FB2277C78855BF64EC9BF694D1E7BA89
629CD8492171048BBC3627CC127B35D443B9E4987D71518DB6784756393CE1C1
B41B3B7C3CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E0D47F4F435F098D34
6360D280B813A8BEA26BEBE94936A45983041115DB80EE611AE48CE6F570493D
30555065F649FE81E6B3B1E8D0ECC21206BB80BCFF38644B56D900C34AF2FEA3
57492A2DDB2FF3385AC8D35003E3E298B9771E1C2F962C2514671FBE467C5709
53BFB729938208E4B057BACB5B06F67DE30CACDBCAA3805BE7AA8732F1E173EE
5C8F074CB7052C8103BD160BD12FA04C8A68652228620D2FCF04A137B98960C9
C56E4D4A289B0FAB6426CC72060175B77DC970107833484674F87E25FF5D8E83
1EB01245DD5EA9C4865FEFB3D2C93D061812400C2F5BC1E1A1E7389DE4808E61
20C9A6ECDB5C9BA2B9A441DA122921AE690A11BE0C3F9CF0F3B9E559727DD530
8332B7A2261A529E5A19177BBF30C4399A266CE0B3208E7F3A8A96C83F76ECD2
882B91FCF7E694BBEA02488CBF10A57518BDE41D6377CFFC482C0214FC121131
5D0D6501CFBE7E0A995FE1F23ED1AE1984D78EF2399E862A20FA66812873FEAA
F44747FEFC5918EE391ACC2EBE58CCE03A260F2E92C7807C74EFED2B132A2915
E0454C2ACD6D7EAC386165819C19C75470FB635CB7271D8A2DB88965B8D22AB0
4A724DED273BA060E797C1BB73CF35BCFC3ADB587959D05FAC426FA4A439A7AE
A497F13E68160AE0D42A628E9CEC9E0B59788EB9B9FC10E4245E1F1A6B012114
F6CC526A2939FAFB6C30A399FAE5E0F97FC9B58B6A605314F854A16AC3011DA8
D144B6C814E2F47D48B84F12297AF2D267279A477BC4EC6AFFE3CDE50F7693D5
A4D6BF6BA810B780AD3D7817E986BA77EC41DBACE2826B07DD73D336E5B30DA5
1C210B2B158F31ADAC46B63CC00BEED35638A2E8173445CC09C9417A6D014C32
D1DA4DC02F8945783A3F7CAF0E5640EF885679B52176D5050CC74FE61207B161
E6F39D416B32570E543C37DF2901B611D9294AA5AE9F030772112A25AF16F681
50C378455FDD227E63F22FE0609FA7DF61DB5F15EC186975859E069F70F7D46D
F7F488AE0EDFB11A5257D782C58A59C0F4400503EFB9FEE2EFF78049A3C48F0C
04268D0CFE36B7DE1C27CA6370225085EFD5B0DCB80A1431FA4C9142B0368AFD
3110CEB50ED276FA78B4D384FF8D39CEDEAEEFD4AC9D0810AA85FC712ECE17FC
EFAA298D9825EFB4CB96DEBD076BAB1051616156988E5FFB15923C6B46C57CA3
B136118A7642C3C74BA5ACE4F6B8CE4C28D54A4C88190BB89AC5223FAEE8CFD4
D10CEB9D2168925AA902EB249AD43B82E4FC4C8A13C87EDA441F75211F9A17B6
FD37524D3CE6EE3E785516D1B3A1911F7A23439B0BC5AA095D6677C836A77C13
3BD85337C26E4F7848DCEBCCC5F709ECC3966D194A7E62BD698DD5679E6E2385
E74AED8004E9B536B8FD359840D013167A91CB913179DC122257EA0F5A40C8ED
6E12B65A00A073D791A0E6EFE04C124AED93CDAF096CA364D8F86D069BAFFAC3
CFC7972354D7FE14B278B5523684EDF2BB0F06A96A961A778E1BD6CA3B56438A
51353F490E9F13D343410BE2F34A3FC3B846C36D4479562B9E6C825D6CE88E9B
045894DC10B68326A69F9BCE3A1112CCEC7FAE1C6D1E38504DA25C13D5AB71CA
01DB5DC73ABF800D29C488E71EBDEC95DD9EA596F871ECD2B7672B2E2C1C5374
35F58AAE064545BCCF19F1854DC30F29F5A09E6ECEE60D32D88CEF6F26372891
1C1B5229300F836C69D43C504891B7FE2246A40C72E59705A29002751DD3812E
4AF609B0426006145FB04D76CE28EEF5C8E657AD491B97086FDDA0B5A8EBD1B1
78B764D2C8CA1036C2EEEDBF8E0C2ADA978CB95F974CE4691DAF94C78EB8519B
A19E0DBA8EEB14038DA9DB915782FFC1E792EA4945384BB765AC4D2DDEC40AAD
F05EA874448AE5CAD68BD56F997A2D7377195176EEAA09FB91DD3527B8B50A87
6347D5F9C5DF506A54B351E9E013BDDBAEC83B6294A42CCDC17ACD440485704E
F8D939B5DDEC74738B988200B32D42122459718EED890E4B6F300C38BA62EEFD
3159953D4E453F12E210E8495057AEB3AEE7BFCEAF60DD349D5C231BD824C6A7
9DB172ACC6A0A5E477E33906F19D011620052DF82DA0FE4178C1447710C2FEE2
9C82A6CFD29D8A846D744AE36CED11C0A9E39972BAA2A06A12CB73D65981E5C1
87DD331C258F0094CA4C8845394670F0163756388A079D37BC282205BB52B312
B1422C44DE8FDCC1C794606300ABC9365F4FDBA3FAEE19845E26E2797372BA8D
590B6E50BF3F0DD4F73E9F38F7DA76DBE5C51498766322716BAB6C98FF1915AB
20AF7510376BA5CB3E7DB9BE861885FF8274FF001A1DEC47C6AD5E4ACDC538C4
B8248ED4304FBE7CDC271B4C6905CFCE775FBE0813FDEA29D0D31E749895F8DE
00A1F0ED4CD157C7299D0239A9C82D1915AB177E041F944D191CD38096D63C47
1C190BCBEF9FDAC5CC0E22541660CDED6139837A1FF4350BEEB8112D469DF3F0
D076303F7587F42147756F6BE8CA7A13E5CB0FAC3DA10A1073D8EF5C14798AC8
0A3CC9EA93457FAA8AB898B2912EFAB850CF099E005BF5132B5B5D0C92D38594
1388E224C5D9DF9C79F8EB3BE9C25268AFEE6D07923F8C9B48BCB11281FBC315
ACBA8CC4D1209148627D5DC61A4FFE259EECF10F7128E88B2F086B0C8EB30E31
4BD3270379594617A984FCB7408811593D5AC155DF28F5750116B350E80359B7
00225DE3CF241A1A7D27EEE3AED08505C4AFE9DC1F61B528E8EF6B6500DD51D2
8A036EE401CBBD310C48BCE1FA5A770F033BB56B747FE330B69D218CF47926BD
A71333D1DEF1F99F67BF4CF3E7B025781605B9640153F207742D00BAF00FFCDB
A30CDD400D3C5FE451045638F519DB3DE1A86927F097DBA51836C3785D46A342
D6D7B7F03D037F1A9DC389035532CE822663DA97616F351B8DFFB7FEE0F8F3DE
E65D2EE43A0A03D88EDB8E48489F157380D93C33C4B4DB526D9F2436A800CDE7
0B45A6DA2591434291AC933D51FEA261B7BB0BB53ED9A33D39BC436D9FE6C02F
6148E87AF5C3F68D277F7861587796CA8A6695CBFAB2AFB12CBFC981E7A2A090
6FA8F23285066B64BB785632E3FBAA44AC1D85133322A893F83D5AB3AD5F2BF3
193E605C34BD7FFA0B2D55BAF3B152065AF210AD21818F9E0BB24E1F3EF420AC
9D0C806794FFB00B3B59983E4446B3F8ECD902DA981891608AC52A29293F0BE7
97C74EFE2704950DB44B70F3A999DBF34FA527913FD2F027BD23EFCC4FDCFD11
B81BE10A71B30E3221A5E8BD3D8AFD4B2D24105B15B7B882FFDCF3F8E5982186
E3AC19A52289752DB619247B328022A35B3C9AE740D969068F940FB427EF0AB4
65A5785D118041CC724DAFFBD4E8698A7BCAFB36DA8456CC8FFD4FEE6C7354A9
344AA61D63246EAD064FFEABC2B4F7FB991D6B461556DDB267A3B6A19439E6FE
66A16493779A8513C8E9E8DF2146FF31CAA6724B0E6BD56F9281C0183B69F8D4
BE80705E85DACF5B8A14AC945B500163B32A1A6C6DDDE356ED4190E1A4A09368
EDDE5EA0133890903C60869AAA53E1EE726CD1CC04CD13686B7B8859D8E863CD
027CDF3427F3A1FF0908277FAA8E87E00F3D64D3D3A47C9E5B4BD3AFE25CE260
BA5169650A49C36E12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D47BE08ED6CE96278050BA67680A3B973613647
A93FAEC756FC253B3693FA2D6491B276EF45751EFB306961788E7C15297A5822
AFC5A2DABD0DBBFF0BE135267EA6B9D1B4E4760ED14895FFE1F8C3F564830001
EFA901B8442BD2D98561BAB9A0FD939E0F856E4D2EB04A9A4496704109B8A84C
EA06AB0999427B3B1BE776004AE906D0F22159C051D88CF573A0255D99B56781
CF326CD11919AA40B096769CD6D0ADF3ACEC7957621084ACF21AF1F265416628
86B67FCBDE9370D4F5C6F5CC67EBB0A2727E074090DBCA459AFA1A4778AED4C9
AE5400775223E684BFCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /a0 put
dup 1 /a1 put
dup 3 /a3 put
dup 8 /a8 put
dup 19 /a19 put
dup 24 /a24 put
dup 26 /a26 put
dup 40 /a40 put
dup 65 /a65 put
dup 67 /a67 put
dup 83 /a83 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26F87A2D962A4B4F385DDAE01
08FA1128BEC3C5C7CFE44F545DB4D47458F156E9EAC6EC03071C48E803B3F6BD
82EC1423B7C34CDDE9C577433F1C341D02F22D91A94A03AD5E49DAE414F444AA
0F4354783F96A82D6D0DA26F7B3450EED7F3C71DE5567FE41E13EBC781064CA6
2E9F8016920F08A3DFD779299D1FF6860C9F4998043DD974E4589A06FBDDC408
1F7AD7561B2DDAE18BDF2381C19FEDBBD5DD6EFE2B3839EF0969782164434CA1
112ED571D8903F82D9467266900DBBC56948C9ECF29F191DA94564F7629D6D5A
7FB912252AA32047509F0ADBCAC269D90D21B6267482DA41318B845DC8D1B806
B8B9D4990080BF54C81E36A318B451524138EF7B689213BB0A4EEC25D7D21174
B7D93A5F7EB09AC479ABE778278F1BDEBD5918356AE17ECBA85DAD52985DAA45
786E41635856E12F8BE3ACE0A5D315496ABDA253607D6CA1DBA9C1BF02203A0E
4D7622DDBF9F3E714B49D2D8351472EED64C7C27554D656765A71B8792D44D95
743A28653D640F274D887CB4899C69966C98DB1738EB6A2B15A637F0599BBF2F
E42659C2559E5FE935BB6AA3E13FE0A7615F21B1F2C79323BD99F2B22C76FBA7
875D811D802F8976D475D46F6DC447ACAEE5C672E39986FE0AC2B612088B7B09
CD3B79F6EAF2AA24715FF2AEB37E7E429226B306C0CBC0032BDFFF8F945A943C
462B9305E0C18FAC95A61855B805E237CB34BA182DE0CDDDB707FE6D8DA0AB1B
E534E874DE47A619439DB739909F3C5BBD2FF054FEA3C549E19A6EE24C17120B
DA52C79841CED04A860A737E9155A3F6DD79E69DD64A2040EF751C817B59657E
F65729BF391D58C198DC3487708AED507FF4553134DD114BE13D03381C425672
D52ED7DF593D61AAF973165EC8BBF180A8F49EEEDB49CB7EF1BFC2A052D3A7FC
32856639FB3DB41085DF35B577115A10C1E67742753B66BCC408415B542CDA94
8D43CA83DA50968228D9FF5C4B88A8C1E44DBA5E03144DCB9D160F1C2674A337
99D980CAE48257CE92DA001E184E5142A312E86B273DA83DE6D149DF4B528E82
45603A08ED7CB627187E6D8123EA81B4ECC24EBB4A71D26C9E0F0C3976F6F0ED
54C7B1EF17FD370154B270FA7C180D3C949943FA1B2BB7C82937BD2B466DE0A8
A0430053D236A57311043D17A220CF2023FC3A1A62163D3979C6F43FC7982CDC
DA75135EC7A39E791BCB32653F51ECDEE1942019A4017F31F7B91923F0516272
F4BB5ED5DAA9FAC00CBFF9CB7E7E9A6063A3EC0ACE05EC8B444F2FD2192D8036
207E19A967642500FB58ECACAEE979AE51F4BAE57068D8D8DAC8277AE2AC3D7D
33729927BE422168C06AE2677CAF41EEFB3395036FECA779656EA26EBAF34D26
3FD11BD09BDC0C9F41783022D5AF576CBB6C8B72798837DDF688513C397A3485
DD7D4574201B29E352322ED6277C58EB68BE27D156A5B9CAD20C17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Fourier-Math-Letters
%!PS-AdobeFont-1.0: Fourier-Math-Letters 001.004
%%CreationDate: Sat Oct 30 17:27:29 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 162 /Delta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -247 972 755} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
72A7B8AEA5D41576411085046EB76258673C5CF40021E812997FA677D59CE155
7C55D36F8B6501F00808AEE2A8934EF6E7DF27A6D20490B6AD5EE97365B26935
6D798248ACD56BE774DE447B7979B08E595DB252D6EAC137A081AB9E002A195F
08D19ABEE28C95E9EB56094AACD6A73761A3E376674258165DCB3565F51AAE71
E9E3BEA4BB485DF2A75CD2A4335B926A3CFA77EC6765989F03A680DA1A20D708
470FD9A1DB35B2C937E5FD9AA6266283CD76E05138D55F0932678F1088EF5E7D
EFA66BBBECD836DE750970D76D32957258C0B88132232100F446B1885E4E29EA
B8959844D652017B77C98E7ED6D7FC65E1A01EB35DC733347DA3B63F9ACE67A6
975D81865DC92F610E531602C57AF9FCAB91E2EB7A5A39DD2EF594A1E2E5570B
896D14CC26EB1A42F74F76F2231DD03A6824AA2D1005943DDAF2910597A36559
E4BD2F9380A95F7FE63996A81EBBD94329601C7B1DC913319E879728A46CC916
CCC5A010A86E5C572AB48BC20494C889CCAA475A1782731922CAB36A7EE9AFD9
7CEA3215DD9F8FC10F8D4C3F94311A56C45FFD85FB0A91F315F33490242094D2
1996C1071EAEBA4792B29201666254BF49CB393ED233BC236B6BD7617A918696
D74A776613FB94DBD590A7893CA7FE1606C576DEB3E4D7DF25A7A5FE84A8DFD0
9BF199780DBAA1832D07BFBACCB7B8E9DDA897665613728537094E1E8933F961
EBB5ED1BFA4EE2856B8982377719ECF1D7B187015A90CA694AE0ECB4E32BB9E6
AB395207397C971034AD10D252B419D2C1D8841ED02492B3F2A9D73EFF9C12AE
9F92D8858A5ACAB071F8E0ADBE0794A62FB244F098A3940C82C391F0326B9F50
39B18EBFD2C105167F452AF2841C1AA728F941530ECE5D9C861EC8569D27AEC9
D0C1990DC37113A33454016B20B867FC61B8801E168543797ECDB84855FE5930
BD9570ED61C24D94BB8BC0A27D0FD6A910E2FA78B2A058EA51951A2CBED99275
6972251698C73A94D57FCB838710383EEBEFCEDFA674184AB0138C55F58EE708
2FC4949E9D4DFAD13E3543B67052CD04D314DB659DD45AE9EEE8E188190A0FFF
328F448B24D2B1B028D29F838A52A9CBCC9086AB4D09E359B41CF74AED5B75C0
1085ED28E722B7CB9131013B77B216FE145E5E49AF9C37C2B2F371B1559D8BEB
245FFAA7955250F08E8F5069A6EC77FD3EEFDC15E662E4E766AE5F6AD0EDD28F
3A7F53DB8790493D8EC144A3C3B1586B501DC98F5451F815FF783CDE0A5A0B34
5E8350B8F483C8FE939C71DD0FF87700CE95F21C4C1C9C326172364A0C3D6EC3
8928BFBF73E85DA1EF9EB934479F0419EF52FEC5FF841305A8927C1BDC558808
B1AADE9680499B21830A38C7B58AF68CFECB09313F5745B02B4BB60F1DF993BD
3A75A2F670122E4593F79A14185F16340F67B8F9BD9F4C10B1CA1196BC062E04
A4E5BDC058475F8331F31E58AF3A560C46F0F9A0A0E9FA210EE25DA7A7BF3103
A69A69CDC3FD3C02304CF8B73656C4128FA56827DD7392D7A101E273541B8FFD
8A9F88AF4511A0614101B04CBDDA982E68D06BEF3405EEEAF0EEB7B2AB63CD47
F5B92B2B648967423CFAAB98D4F6646BE196A30A2E76058489FB52C989ED0DF3
B9E74B76D3B8E7C7F223AD7CFFE2D64B8D629B0FF914A78973D4A2F25950B4F9
AF47B4B109FDDE4AC32BAC078A3FA2E50E00AA5E733D7447537DBBE82840469D
6D9A4054EF6423585D81CE61F170B4A39C22DA4A43A3D089565479F0681CD635
EFD41B3BDA5BA453B43C2B28E55CAA9995285FCFA1441EAA7CDBCA61A02134E3
3482870E2FE86BCBF16EE5A0464F44A77D57B9D7B28244FF5A4316FCF991C59B
9C92E45C73AAF019BB29668CE2F33D6D135D5A39A44889166DD4543ED49ABA09
3B9835E728151FF4A7E4EF615E562EB56F74D6A4262A40720C94BE6BB3C58A2B
E86E6C16A35BE9170EEDCC2799E8E182E091609AFD576DF9DB4C741114DB16AA
98B10ECE0C3E84EDCB6ABB64778168EC3EA23E0A1A18F3C95992607C823085E6
C99DEA4FB3BD1E977A370D18615E86F1603B8C38698F41EB8E0E0245B304B2A9
C6BA7931DB5BD31ABDEA7494D1A4AD1C08C9883CB4C001D0B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.001
%%Title: wasy10
%Version: 001.001
%%CreationDate: Wed Jan 15 15:09:25 2020
%%Creator: Michael Sharpe
%Copyright: Glyph unchanged from version 2.0 were copied from the
%Copyright: wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
%Copyright: Glyphs that are new or changed are copyright (c) 2019--2020
%Copyright: by Michael Sharpe using mftrace as the starting point.
% Generated by FontForge 20190801 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /wasy10 def
/FontBBox {-23 -1667 1720 752 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright \050c\051 1998 by Taco Hoekwater. \012Glyphs that are new or changed are copyright \050c\051 2019--2020 by Michael Sharpe using mftrace as the starting point. ) readonly def
% Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
% Glyphs that are new or changed are copyright (c) 2019--2020 by Michael Sharpe using mftrace as the starting point.
/FullName (wasy10) readonly def
/FamilyName (wasy) readonly def
/Weight (Regular) readonly def
/FSType 0 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /eigthnote put
dup 35 /Circle put
dup 44 /smiley put
dup 46 /sun put
dup 47 /frownie put
dup 71 /LEFTCIRCLE put
dup 78 /Euro put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE30585F628C5960F4BA7A0E78D80B
EA23A0384400281199F7528220D2F21D031A35321A044226094B6ED6DB52413E
0BC02D4EAA6BB6C3D02F5D5E4983DFAE1209911A8DDC998656E07B4EEAEF13DE
50FAB8A7D9346FDBBBF1EAF791BE7E3B4BBA8D381C5C32DCB4436D5834A17B60
26188D4C558BC1ED012EA8DED9DF22A29EAE8673C46D0CFF7F5EB4080882EF91
2FF746A93A7B15CFC25341DED2CC7041F5D2FFCE348F17C86124EDBD259F3D7A
A299B032DF19B1C8C6EF386EE2B3655A09E37996670E1878051E7B77C73B0250
EFA23B7014FD87F1D8F38F07EC2ACAF188606F724E436A3D5B001AF774C0BBB2
3B48D49C1D59D3FB5768719967A1086B0C955D8E90D69C2C18593A7EF0CE7A9B
A82AFC9604DDF32B61B5220CEA41E570BF9F9BF018876411E06807D45AEBD705
125665794E0C88DFCBBC57A43A8F7747B4A09C3941DCC35D91F9E238DEE5F56F
4D6E6032FC16C459482F4E32286E48F60DA55F2B5B1B86F3C934052B798067D0
254ECF5D61EDF99B3A6D86DB44265F4545D81B7A002D62C32A22D311876DC636
1CDE6DEFB5164BC751EAFF248E4D6CAB3FCA084FF2565070A0129CAA66035751
8A94EC45A9827D8398C0CAA83B3D4B032C75896D666161D5FB3F6C8F13B692A8
ED5B89F4654956A01FCF6295D4EFF3C7269DD46C0D06362CF44C087C14B0F984
A6CC760D2E439EFC1EFCE34DAAE9C0B017F709E18F64E7762F92A2723CD0728E
11ADE47D1A7AD0B9B75624B220C906D34D1FDB479E312B51DA3721CEF9576B50
F00CE281CC5AC9CA854C150636E2A4BBF26C0CB72843B7E8978C6923B20DF073
7D15F9069ED5C3CE92F4C2AB437BCEAC02473A6E023091F026B8AF8FDE54045D
BA32607DAB9EBE64BB05DDA506E90BDC38D7A94015DBF365B3F727D14E612395
6675298F00239CAB003959FE119E726D4B10B063CE62B1E648DDE9E995ADE22B
AED269BC6481FAC38C9D66CBFB5FA8CC6840F18F49FCA60F6E8D93CD2FE35A98
CB61C80B2F424A61789815DA278578D2AF26831B9B2FBD158D9E0A1620F754CB
09CADBA9303BDC3FAF2DAC469918FE4EDB23B019ABF14F41D32008726CF7A37C
BCC79CF6ECCA075AF7701676E2B3FCE63EA618889A2C0AEF1704DC92873355FC
26CF3A96AC332DBC5C50C97F7E94531169CD22B867371E2BC993B88B9FDA9A8E
48B09176BF39708928502BE11D606AB6076D1AA7F4C88869E2D53DBEE0A70B1D
BD9977A5F4C77183F4CF9B18D3648CE4046A4A17B5C3E9DAF063B335EECF830F
146463EC39A2CFE5B796DD7A53DE942A51CFE578B7FE2C68B0B149678284CC8E
88F53ADA6A0E0105619E50B9CD8A5E22CA076321BF296045FA2394E8C0F13C8A
A04DDF182EB9B278C77FF85029614AA25C250C84A7ED5BECBDAE3D7C09AF01A4
44FC7743D5331E935F94F2A58AA9394588881EF3502D2581E3A21E12FD05D033
B7BB01DD0B9469C910B7A7DFC502BB1A8598FC3ED021147E2BE3B76ED36626C9
3D93B10D9F47DB9287A12F77AE150E4FDDAE8346CD6EA2A4080A732B877EA2DE
D6026CFA1807B087EAB33C9D778DB1DD2B545FF4B9938D2EE9029BD66526CBA0
ADAF315B8E1DEF18FEA368F63489F8963D45A7BAE85AAB0339569338D455D8D3
55DBB8548F0D58ED841F891E7D24B704DA1DC584BF3F662B3E1C1D25A0626495
EDA33E19A4A7E61F818AAF7966EC96004C09C4D8C5AADACC89C52E4241BB747C
37DB43119263FD5919726B50D4D2004F7295D860A2974B73A9E8B594BC88BF28
8931FD635A654243F2DB2D8BFFF3D0D13EE0E48203BB19E97A02E63F8B30EBEE
9FCA1B8B7B45FBB5A5A347B174992DB8D542BEC631C8069D0DF3B6F3A3CB1D76
B0AAC17CCAD6353F06651B9D5B09C17883D34A2C289B000983EE6FC981248775
8BEC50CE0C7C1C1CC33160B2617450B1B61F32572C4946A32BADCDAE25A4270D
0D5D9C6112033C467CA867769AC53093BD9DDA18158C7F8B0BF0F3B22DA67E7E
C571ADC7C213612AB1A2FECFD8B025C2CD224195F91A18B8B8E03397A988482D
22A585867F2B8469A5DFC4AAE701C1AF738E8D2751636084BEC4B57D0AC795E2
D79AC4B8DEDB52BAEDC245455943A3DFE5422C5E45E5D0CD32FA9B260F525B34
0DC1C81FED5A23A13FBD66C14903261166E217CC46FE08016C3DC5161B74DE04
DA7417CCD3048C2190616F793DB31310AA0A8F45140EE4FAEF37C6C0F2D5F535
AE93682E855B1BDD6CE955627283F6F5F66F1571346ABD5D7CBD7A792B3DB478
0894591B13CE7070F27AA426B145A147B8823D214AFF3495192D41FB10A63104
AD5F9CF990CCBB01C6ECBE840BD48DEEA590BF99760E2DC5ECDFCCE4922C000B
0531CBCA370AE364B05486B6A1E5378A10FB3CFE695C7BEA1FF3167597A4E9FD
85E1BC8FCD58CEDD5B6DE63297243EFB20D792FC6BA87AD98A0BAEC9D3F17AE9
CBA28D27B0C8FE22CC936FA22C7FDE983CAF43514254512222EFCF4530BFC848
1C361522D9BEC6A0A706A7D126CF50373AB7D47B509AE6F5C4B100BE8334ABE7
1E1D921DD21A2D91C2C88736994B723070FEDE72BBA18E184B027F08FB8C4E85
D8F183D2C20E7518C87E73EFC86063DE74AB46A38EF4A83D2E4D14BBA67CDAEB
CA79A797C3A4F27AA9924D6616FC860CCAA34024F2CB6A8B9DEBA5BE370090A6
41FC06A1499A5C7EDF2289B4B60A5055543FB599415C638471E3F0B4BC31E3C7
CF994BE8DE8672207703D00D9E6A248413954EAD2376003C4BD53477FC1821C7
E3630875D508C65B66FBBBF11FC3780E630A24EFB520A6F60B505174A51177D5
4798FF0F3074A82D3474850D054DBD9ED91FCB13DD58D02216A81D7104422533
65225052ECAC849E46968514D49014716D5975AEC37D2CCA662CFC638EEB59E5
E1B9022D2E4700F5F4896B8AFA47B404344C8CDACF7FA1C6FF8AF6320D750231
B552FB90F122BBE19AABF32A44BE6C9CEAD20573503B88047D7DFC82E5FB15EB
0718985144596D3F26675EB99BE87FE541973976EF232F76C9D0C0793684D68F
E95129C3217C3EB75C4DB38FAAEEAD1FDAA01C73B0C7D5DCF94A693014ED9690
2B67BCDC6AFEA2CDA4C53332359B80AB857F875A51E9BBED3C9E9AB2A8A79B5A
871AE3191381240CC0667E2ED796A8D6BC9CE98F2B71D9862615A73ADB4AEAA4
56ACCF3FA9FD5C0D7DE2197E5C93A16F02FBD40708F6E4BDDD108241F68A7BCA
1C18DCBF936D800446E46A852229C5B4F6A84675CD614593B5F1AAE52753EE91
7C1B899C55451B2E0D7EE6C005CB90E0EF638B210931772B298BD43EDDF7277E
E29785EE54F083421685CE1D1A785AA70597CBD2D2F88310824B2832924F86F4
9214FEBB4B3AE05A12F0D235D85CD8790A1CFD6359EBFA90EBE9B7BF54177F19
A364AB1ACE2D780F5624CF53DE046A36EFB35B52F053DFF90C7807FC42516B6F
7F7138E02333C892AC77F0EA6EB3037ECFF18C13247D13EB838401FE050B089D
46DAF81E1F113DD4256BE6504185EAF8D48F2D1C731BA03475A731A5E011E6FF
BA0C1AFA5DDB5810F103314980E425643F788913901474B269347E7E5EAC3E41
E80D42533F9FD3EF5242B4CC36E5ACB6352C07E4E66CE479534E5243F266EBC3
C1B5145E5FF84B8F6FFC947AFF63C8F3E58057CB7DDF52D82621176D9E9E7AEB
DAAE3D81E8DE5E0B8B5DF13C561AE27C95E50C6A392E98880D8D5F103AB051DB
B351416D29AD25D461566FA336987EA7A9788E339B4425CF6422C4162F9967EE
44F33A75C620A6611954071EEC065CD4D528C9B692144A8C7D307182B8E4BB83
2F2AEEDF5DDD29980A49ED0160638FE807BCC97058AD6C6223F9E1E530FA0A05
CB23A4F5FC73A69E122EA7DC1F917FAEF2B8A2051B48C7E16D84FB09DFDA92B9
F1E566893756802559F142765897BB83C0311F492902B6E86EFC149284205132
94CE31D691804C05012F33947757652856B7DF695DA5023A0BA6C3F668A5B308
328D75737903DE371E86CD89F135FCB57B19A98C547104AC30364E9D5E07EDD0
4407A1F001998214B591B3A91226C41148BA6021089182CD63A32D31B5446224
5D3DEE81BAAF6BECA0AE2A880253D7E2718929B8111DEAB20A4B507F2E56550E
FCD532CE6A752298088DF392FBFB02141EA660218F5F63583BF2B5146D744675
8F7C265AFF6F5AC9AB8DCFD39ABF76A7AF5BA30A3E51F1878C9AEC6E4CAF0FD8
771328E383FD6A8A03190A36E07AA035875C1E5E6757328BDB70910F2D332CCE
4E29783C71DDFC6C65D0488727A1D2EE2E001DBF2670CBCBF45F0919BD3EC674
9042CA4DF5AB8F4833CD8BAEFD996CD0FE093F02828D90F78FB51104D5F33C6F
0D11440E3BB234828304A06ED81CA1ABEC72C1A8D199D594F481F850B7A41A71
3DF2701848D1A7E1B258DEAA01F9617097035B277B4B69C58D684102896FAA8C
0E6C6C9A494ED7D3226E9B421C02F7A9AE8DAD57CED20C4830286580EBDCAE9E
3300DEB85A6778A2FD2C0A3464AA20E43ABD5A71B00138ED9794BAA198B91452
438F0B7AD7F0BE75306B98E645A9F0F58DDBA0A30C52D66A239698492AEA2C45
3856BF599A1D1D09444ED4232B46FF4F301A09EC2759F88FE5F86380FE3EEA8D
B69A80613CC1140DE94649F2301DC05B65D68B3FD0F3C305EB539E50D021CCD5
C73A30298EE1CE57725508B8ECFAFBBD03B224793174F322076DFD6B4ADE232D
8A456D7A5DF34B70D15E72996CBA0CE999FB1923F290439F2AA53E235FA60A63
52F244DE8C891183CA8D73B58B8F5EA123DCA7A871EAACC802C3552D1F3B6341
D2ADC0FD0D91BB100443263BF538DECE9A09CFE533ECF8C30A45E46C34FC9D01
C1A7A4E4BE53405815ED49FF997F09A70899C32563E50A3AEB826BEE7CF1E907
47D7BD37AF5A825B074D7EFED7FF48B212D79FF51D46E347813C841A40BD3EF6
55343F8335BEB7AB74E08A6A6CCC6D2537EBB837982831CA71121A88D22835C0
82BE9A1C273FBCE1E8E614CD0747F84A7EB7108ECD7E7E0ED110A404B1D0AC70
DF7C8F85CE95024237F8384A2668182B01A59CDCDCF5CB81C54D13ACA6E790A8
C5DB578056CD24095A95F1EAE09B68197E9BC58088AA4966ED8D71EBEC4A4317
3FD664605328BC75417B8A2F6687030FC13E21DC2F8B3DAA7BD11B8451760E71
9804EB45F0DDB70ACD48236B3D141D8BB6B107C05E890748AE4E2C27BA452B94
636C13BF1320C73490D0383FCF7E9E1952BAC42C29E625FB4F039C49B3BF2716
3AE0CD80768A5CBEE641832D131753DBBE41596B635680956447FDDCF6DBBC87
3EF4115F4CB2849DB24C3B4AEE6AC2496F80490CC0D453BE6C819809BF74E866
2DE84298DAA154B2C1E2DDACFF56B9A5427344AA14D654A3B94EAABAF59538EF
5ACB99506E240D7C1FBFA460A7C3C560ECA67742B1664200DF92A579DAD00F8E
C84FB49E2E97DAA1196250F6EF8F051B05CD1FDBECE1BC066FB9D63F5A9BB852
DA3C0519ADF87769CCB30C4286AE3CB80D741E55FD47D12F416D09C455BC0868
0626BCE9E26F25843A22CFF2576923A6B54858DEC89BAE02A5BFECD87F75DCCA
2F6909D4F1DF4039982E89501BB76D51D8F96E09337DEB8E432FCC99779E538D
B6DF4813703E931D45AFBFC36EA70DAAE3500974670C712ED584935E9C4702BC
95F56593710E9675B4356BF89FBA8C9D78BE9D15DEAB6FD8DDF30CBE54FFD830
DB940C58776C1FC06C37677595D14C409323B9CB66442E90FCA7C0191E7A2574
6C988C409CDF89DE98A8410501524321C015C86D3236F31FAE31880548444286
9A2B1A2F5587569AD2095452AEEE0CA96D5B78090961FF2BC633CBAFA285EE59
838E88571924240435BE33E29429E8B97531E4D08F48CDF9E118D2D25AA002FE
41D7075547A23CADBE3F9DD22EF55061B9C024FC55A110F72312555880511C05
7E7AB5F8E5F14905B68200937827D22A9321B10F692FF42BF0B2B7F5F96EB570
A692DD25752290B09537C6098E566AF8228797C10B49BB7F6FCC7CD8431602D5
CBC99169A1A3D96A64F07A16E9FCEAA4D4E7F94F778EB4CFD6355465E567519D
FF073038FD2702811C8CFE79876678C9A97CB68B7553263C6737DA8A44A6118C
4C3298DBC067153C3CCC0023AB8C4755F0441EAC57B5E4BDEEB988B57E8DE17A
99A2BCE76045338FB196192F398FEB4CAA238AA39033826586B6C49761EFCAED
43970A02CCA0F56B4D26EF5C157C7FBFB9F1984B25482256F15846468728B179
3F609262DC5E3AE3D8E54EA95A61315420C64A341A4528DD3D540D435F38A520
F6E546111611FA42103F01724321
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Cal
%!PS-AdobeFont-1.0: Fourier-Math-Cal 001.004
%%CreationDate: Sat Oct 30 17:08:49 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Cal) readonly def
/FamilyName (Fourier-Math-Cal) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Cal def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {17 -274 1252 724} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
71FFD7441F153F65EC489AED623132F7F0AA967C97A2E6C705F58130577D30FE
722A0CE1882455CFC9882D1055821847FF648509DA92A3EE12F984224F7F1904
F3395261ABA61816ECEF5BAB29D1AB8C21A8F46620894FC69C70DAB3226A0DD9
9CE0FBDF78469648F29A99C677B9FDDC8B90082BB7C984DC5C42930D1315FD26
EA08F21054360D1981E79A6EEEF345CC1B9D85A6983CB5E833C9F3CA972A2C88
B6220FBB013192E7B2F79DC214DD0964F4DA52469E9500ED2ADABDB0D259FDAA
648EE5A0339A6EFFDFBFEB97BAC430C00291576483521C8D406E8FA4DC48C7D9
6830DF6FBF39E9153229816D94F6BDDABA2B4759E1FB3DEB54C47D66E283E45F
3BC1B675DA1D8DDC10F24EAB54445658EDD0AC1ECEA12CBA6DA205698F18056D
DB1CCC0A8D93AA9EACBE2B5093275823AB48AD9B7B1A217505522EB1C2F09074
1D7EC269452BD0896C0B1F30769BD683103F7FB568F80576476B511F5ED74F46
E2F35F191BAEAE8C91D87401A8C28DCF476FF0CB9661DE7B93284BC8E2429CEC
A964C815F35C33B2B6E795088998E0EF2CD048D1D54FEC5014B1AD8A46618748
6D1446CEACDF027D1B238173F8FB6C828F10C8FFAEA574888C851EEDF4629C38
4D71F7D93FD74FE5402D7D788D76E28ECE97DCEA9FEDC5985599B679C052E445
3E16B23D20A619B501A088D5A6578CD0F56CCED1F2039876D4FC648DB69CE3CE
9EA0C3B37F27CFD4AB23D96B5BA02308081972E9E62A93B2DC9A37AC4A63E626
F1488017A209F97B3217B85127A8AAB35BD704F9614733E2C55D3004A753ACF4
CBFC509E71BEB3AA1179EC2955F527022F86711D2DDE84B112D18F375E1BAF0F
1DCFFB6A138B1CA05072340D5703F28DCD60FD4F3AF2EE0061AE9AAA0E39384A
E806173146EC48A331E5E3A8F900D7F580E976A3672054A8A2DCF66E132A720B
37F5C9D5DB8401B8BF5879DC472CC0113E27D529AC7265E93F51DCF7A4203C25
CFC3E853E2FEAD9EFFF3BBB849BAB875FF430A8555B7BC6501DA81B1BFA806A3
53E3217EA4E3C6B388B9306AC2B7BD973BFF3E39CC5C4F39303C2B0728CAFFE3
C5B6A3B6132EA83ECEEA7A270247B42BFDC3D46FD72DEC1FA73437080EDCEC04
DF35DC49777BD36938E591D8D8AC90126D06F7B7C2BFE4F6BEA7A13CBF5701F0
925CE2A7432B33308F262A06BF14B6EE20C4144397EBC24D878C2EF41505801E
80D44192B4267A538C9DB82EA1B401676F6268CCABE71D9C2D8DB59C2E58537E
08E7B1F5247E315B20FA3F32E2A69EF068A4BD88A45683BD7521ADB3C2A78601
8FC0DB09F98D6613341AD917AD3962D12E22023F95076A56361CA1906134904B
ADC9F026771AFC9FED26DCC1CEBD7FBC25302DDC78D686E67667BA824113CDCF
19BC7F03E768D109FFC55CAACCD1F6B8BD9AD518D6E86B1AE06921A28F0AFB9A
BB6AA7C8592651382C6609A2DABB7A2A5F7444D81AA66A8791531D1957AAE4DC
4B45E30F64D1644FB80C34FFD3C34EFD6787031F21DC0316207988216849AF2D
9C4CA389DA5CF542069E56C1DE390DD4DD286019B7C773C62F78793D932A97AB
ABD57A76F0F1E3C4ED9B7C90A553204425722A4F611BD1F455BEFA49A7216F8F
ACB3B98090F887F64661081B57610CE55FF07453FC1E48C6A9F0C842D3D7D28C
BC88AFE0FF3407525BE23BDC9E46B28EE347A06396A9481D8DCA2390972B883A
EDDD9001F47830A7B1255496B7D323DE105436DDC980CD75404FA33A678C3D98
302E764EAB7E5F6D5A46EDFBB77EED0B833688C9230D9D5A9093C035173CC4AC
1027F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Alternate-Roman
%!PS-AdobeFont-1.0: Fourier-Alternate-Roman 001.004
%%CreationDate: Sun Sep 14 11:38:05 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Alternate-Roman) readonly def
/FamilyName (Fourier-Alternate-Roman) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Alternate-Roman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /euro put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-33 -242 712 705} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6E6DDD501A8B0E65BE747DB309417A7D065AFBA06D5DB8E3D03B3FD43B0ECB
D4F39A80CE61E0F4FBADA453BFCE3C6B9CE462D62D370BCD3DE038C405023983
EDC758BC3FE4676D7C7E425368D9BE8307FE6D67C848B5CAAD44C85CF6A5010B
5654BB1119047F7CB5CB59F5D19F65237AF4FD514CD08D342AEDE2E5F7D8398E
690BE6AA86CDC35106522B730BA8985D6CD76DF67D9F5C346F6F2CD29444B158
D8AFFC5CE1924E4606B0ED12901491632E0B40C327C6C900589C2BAC0C9BD55C
2743AAE42D5A4246ACBD38B613B1B22B57403DAF3B396EECFCEF0482092DE233
BFA45E317263104DE54C191DA32FCB291FC37733333BF5D95EDD0CDD6F56308E
D38D01B0718B704285B35245190F69DD07B598698D669E5712492321986601F8
A68DDD5AA40404BEC5ADC0E452ED444E2C9B1545936EDD403DFF01CC6D7C645C
91509391F46E021C9E7CF2E911B1304B45C5AC797B2088E5847DAF94ED377393
4CDDFA64449EABB6F2652B6DC69E7D3DCABA5B42747A54A5A2D12609A559606B
44D0C0E6EC19223E3D377BA37E0C46BE0D16D82B9359D2E2A584BC8815ACA894
C383F11A62ECF2213FED7E5489083C0CAB7D9C2637227D4DADEFB207D44CB577
9C5C18AE9CC5B073647C8B52902F08EB7D99B8DD0ECEBDBBC125461A812A3BCE
D9A15FCC901B4A17272D46FA1B680238F27E25FD059559FE02194CC1E4C123DE
7A6F8F17B59DF0DC5D8AB577C5A733CEAB343CFE654304F15EC2DA9280AAB2F0
925E7596A9C8E94991CE54D1921495D8C1D4AAF504842617F5F8151319A54846
5B1B09C2AFB4CB49CD2AE8D5312E0176259B2BB71FCA295F8AB26953CEE0CF73
0BAE460689F536EA9B1352602A778B1395CA8A5501F32FCFDB65FD73EE6D4CAE
4B4F7A0129106AD36022EFAB434B57ED948DF2957D94BBA8A5F8BA3E0E1809D3
042B7CC8E66CC64634F06039254F3061A17C8CE0099A6CF35C3636F9996332C8
77FAEF06756200910B3EA272EF33244ECEF4405FCA6641C7DE5F269A3D435B3F
0ADA000A5730DBBB76F11C8B1B65488D844BC6564F9D52703D887DF2BD7B0F26
CBAF9B836A57B80B8C514B48EE2EB1A7978656C7AA698D93599D9EA93EBA791A
6E52479CB99EFA005CC74D1A2B338B46B7AFAE06A747FDA06F719D6DA461CA95
D6F1B634BE4DCCB0F847E8C4DC1D12D8E83214A47D617FE02515C1BAC88C63FD
A6D36209C3EED215D3ACA2A4946392003099D565A32EEA6546BC68DF7EC7B042
0AFDCB4CB4BFDFDB83FFF532C766C9F507FBE2500858967A7C4A300F4170AB80
6B8D8FD2D2C79AEF68FA39EB55317F7F032B8655B8FCF1F0B2CF5A61EBACCF62
703C6CB60AD2B04F32F5CA9402EB7EA4677CDBA5D71671D9A26CF07604618A9C
2F3CAABDC8BCF4747637505038EB5C6B4C657F7580F6BC0FD12CE8F4559745F1
E89028064CA68183BFB7EAA2258CF3BA78E3C359B1D014013182F34E6A826C99
DB89045D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB2578337771A93B1617F5419CBF89D2FCCF53FF8496A
2F09540CD2E6BACA74151E5CB66BCC1F03B3C9BA42AF2F157AF42FDB1930D18C
3A4D3375828E4EF07D846331B46D1FB5BE1FB12BCB8D2A832FCFD5CCEC74EB45
6CA3DFA6FE50ED4ED9072B120A89C364951DB2F4A495B09D615356D057D21102
1FE53E0BC1264E300B94D15AAB28CD6564C86FA62D5D1AC3AE942B437B9BAA4C
3BC9383BDD3F17ECAB959CA7511ABA497FCF85FDAB081054D266E94B7DFB4AE3
465778B83FCBDA79DAB82C42FF8294E59EDA94D3BB252D1FF6D197C9B9A94B8F
9A74458A9A7357E7533DF3175AA1BC4A976DC9D2D80CF89D2FBBF74F876028A0
B0283D660337D47BD6845D95263021B9711FF8F4A8073376B5C154EC3E566837
FE4BAEB3BCDE7236ECEC04214D39DB8F92396C5D29AEB5E469FDBC4831ED933C
40FD2DD2DAB06EC31F17BB7D93593DE84A7B5C63B63C2B6367C26D249792FA3C
3BA89475C5B81C6CF52850E95BF90A454AF6CCBC960F46ADD3A18DE1F895AEAE
0DCDE8AAED87610C2B5E1C0542A01A77528E5C27039DCF4F445227FF7C68468D
E3602C3B505323AA5C9AEBC8EBE661AA9C2949FA02073BC0A7F58A7BDBFFCDCD
9E4BB1F57C075931FB244590ACC141E310CA0A0A09281D3E62C529AD6F4C749D
FA334C32EA47D403F13845FC36CADCB3F8CFBD1E782E0E46FF798C2CF89EB7D2
CC8AC81E76AB8C31864306D9AB7ED8F02258A3870DC1B0C5ECDF97B61BF9E57F
37B1C0728CC6EFCD02A1D4F730384DF0C1D69651B1885F54BDC577EDA94A5F80
116D83A6363D965F07FF04C079DA39E1AB50B44D547BF93516AB89F3A05B1B29
0696B6576A5FCE31C5F19D1BA50D3B0EA52186ADA86B1A236F2157E12FFC9D80
CC738B18E0040E5B5AF45E59EAE120CBFCD52F4527DD87BC3DE74A67CB22781C
482CA681EFB431B8757102E69801AF26ADD429DB489F429B608DC54B8898C4F7
D0676DBEAE6BECFFFD0856933A3730D29260DED7E3C2BFCB790E0DBFFFF066B7
7F225EB043A2525888557F6E9C1C24B89E426DD97A0A2EBFCFB93C72B5FA17C0
059A95AE4BD1D156FEF121AFDA835E53295E3C85C8416E8156E80C8A3B83181B
ED0ED365B500C7093DD4F978024F807E9993541A3E8C59BA5C51EE6F262A21B9
BE85AF0CCD8D5B824C6D40DBE007822CA24FEA4FE62ABD3BB73B943B5ACF858B
CA0DA5AF5A64DEE8D4B9B9BBE81C094B841F84F59E05007B8526F290F5E73B41
D87267453A0DEDBBB8ACB078B088821A9F12D88EC167CC64BE116BC3DFC67B2A
37D4B3683E142248C650907EF404E3EFEE64B7AC6F89A5F903D6D667BB6DB1E6
1CBF349DDBEFFC14D250F4BA26C0942BEA97167EBF2E2610A742D8B8EE6605B6
894796C51EE3DCE38C845D804EB69B11D9C51C350EA6767BA0E132544D049278
597232979209C1B48738B5B3BDC9B2DEE08656A4F46C8D98E70D3A5E2446C03C
38241F7642C28D896127EBAD3E49030BF702F04CA80EA8F93AB3ECDA18C85A31
7B12DBC16F50A81FD9AAFBE2EAB9CE383B7C5DDE3F1E6D448FC89B90C2734A82
7BC95EF64BC6BCC0595A895140463590309D998A2E7FCA40C7A6247FC26D4F32
2DE2F009B9889051FF864D0C52FEFFB2ACCEDD68D9A20774E5F311E52B1FE21A
8ADDD95602AD49AD5B0793275B569BAEFF229A45F7F4324A2EAA6107CFC7E37E
5E2E14EBBF748D99960C5F4FBC2BF8E94379A2D2DB980DDDC1F2F67B56EB9484
E7008254771D998E5AB55EAB1728DCCF3CCD0C90F2B9539FF583442648DAF5EC
6302E290FB44FA3A8366CBD71C842A00430D78906ACE661BFF07FA5FA1FD1DC6
9E210087C16D9093D5A34CC4ACF2F51BFA6F594B4D5B408D4FDC8547DBB905F6
648E218A2A7872E5E47D00744E616C295C14A0E27CC21D13774FBEA068366839
ADD49634114168D743B3AA0FF50FB54CC7DC126671C9D2CB472E0C58D81F4A4B
F83492D16D11BA90C3015E3571F1200683DFC704DEDFA0B111D4BF5FDC9CF7E5
E5521E2A1777BC487DBA053B56CDCB7AB442C92AEDDCBB833961543A83EE1F04
07BC9CBA535EB2BCB663C24F8CFD95D766E44A674FB036D89937CDF63631AB80
9AEFD18225D436C660B26E72AE9C6CDA0D5169708981CB270F5EB5A859022334
8E50A697F01195920917D81C2F3486C4F7C25F884FF9CB6195E96F945E70E7A9
1F2D0650120F5703C0F03486119D0F73CDC53CF2E2108E455770A9597CB66F5C
C7CA4DF707E27F1FA4DEE91CE3D388AD6F045B012ACDEAC77A45BC268B74AD57
6C865F625827B8C045ABE5EF7E9904235C1C8B3051893F2AFEDC6371FB02C405
02BE6FEDE306E8FCC4B608B471E6A8E493FB9ABB764C7CA8DE5E61CBE2F070CE
E5772B8D856334A29805B71FDB02BBC4249C8D84B647522C99585E78A0FE0658
EE9CA27A82AF7A9EC3C3DACFAA937A60F49BF8F9B4D83F5CABCFAE6515928933
D4355629B7288212F066CE197359A66300A620AC524A7F60DC22D5FEDA041CA4
3E3C92A5F8A65C64455B58752AAC58FA76B08A8157F92E6A39E5CFB649B69E0E
8403D5B382C23B112241F07D1C079E561E172C920C58C4D09950C59D0B797449
E228C80186EFB3A7E67A974693F104E59979F5D15F17BFFC669614D7E4F756B4
399BA6FF7DF40D9FD78D5A33CE2A6001DB66202118946D66BA0971925C6AB022
4772F8147234C76856546516FDACB9A7F6881A7F8CE68790E7F19A835BC6EFC4
99EB384DC7963F7E26BB7BA94962EA0B9E9FE61140BD5B80F9D79C8F460237CB
8D25D9EF7D8CD60FFC744E9A8C6C0B36B00162D97159E9328914AFB0F6E91182
F5D6814AB810238D433CAEDE97BBBE555BF3362241A2AEB1DE5FBABBC4BE4D04
2DBDD5C6B1CEE106241C8BE038ADD1FA7291B28FB3DC5990D7194B18684E880C
D30B27909CFAE9ABCDD6CEC9C72D99FBAB75CC79FA651F01F72A65608248E964
FCA0D0BF38ECB02D64A39987B28E2ED9DBFDE3DB3136A1160A52E24E948DCA5C
D34748A18E26E068F16140D74062D7B46959218034C721F5EF420C1D801AE1C9
A4366AEBC06030382FD79729426BA208FEB6872FD6E32A41AEDF7A9A1D2A485E
14007DBC2067EC814CCC3D954789154DD37FCD05662D9807FE63B0C712FEB927
211D7EBCC6E5B86179E16BEB0F3765A660A476F69FB162D224B1A059AA16DBEA
265E3D4F5AEAA7A8880FD2548212AE8E49B72D08ABE4F2457325AE045F9AF979
094B58B665034152313C46219AA16E210DFCFDF130B91426F4F6704E1038E66B
747B3D5D884AA3747B7A4854EFCB522711D4302A5C63F547BC746A9ADC136D91
52B3104EE2433F680225415A4A7B63F4B43B193A4D04BDDA109DA80AB582FE54
F0B93AB7FBB8C47A097279CB1A91A9939EE658BD6D9B72485E31544D9B05B28F
67C0139C36299413DD9556FF41405AB4179BA7936703FA5D06EA46307E529304
D0A9E8B79EA6F972184585CE610E1EF805A187E4ADE018595CAA6C23D8D37278
6790926B1E9E1FFD3D6432232F9124DBBF37CA230A0F7C55280348D40D3DE3B9
061F7B4B1CBF8F38957F6156A34D04D3AE96EF148ECA56FA55F2F55F4110AA1E
09D5152F89FDFD66939DCC2A7AD2D7F9612EDE8B62C9D122C11502FD8CF7E810
7C082B956F1457EFB0CD12B76397D56023EEDC6A1D084930052FCEEF950021DF
BF2455AC25572C316525B9138695EED597EE4928827028654DD939DDB00630CD
5126B33BF5AF4E11C66C0FD2726E5471F8D8344C35A99620B2750B7A35B605D7
72001C12A392750F3D2FA8E6F3F088037B45A02F86F6354EE6272EC1F39B8555
7D495AD15E818AB8A8EF5FCAC1154498E0872FC0135192132947A8FED0D43498
ADFDFBA62DA37C733BDD4A19E976C26753D44BEEB2FB66E7F06A8C30563B8197
1217CBDAEE90C47F34A8908A279B73A0615FB6A29144F3A400043F51E8AC307B
FE04BD7CE6070FF71BF765EF0305CACACFE2E084CDAA27D10E3370862697C872
A164BD90B981E0537F32DF9E9D8BBEA3ECC81727528710C9562559981992E5C1
5C7A56AC8707468BDE59944B07A91F70047BD7D484C9D839CF9231E61B58E0F0
721E5C5B8696318B4A7FA2AEFCBE4AC81FBF3D4D3ED20E2CB1639219EE36A1C3
CCD41ED86AE809F8A6677FCA42B7F92DC4EAFC2F7D6D45D590A53A74C1813C23
48C50AB48FBD584A22A381AC0398B5A1B70DB5CC98316C94743250F7E88BDADA
C3F0413DDB72DB3C736FACA7F6BDE3175A4C76A7D9D900F22956787D3A108E22
E96B197C4EC28703A05A165B9EE0BA0C8738F65C347E47EC5293D018A9683A31
25015202C1C0BD615BDCBF3B5BA54754CD986116DD0042913BDAEDBF43070BC3
92C1F45CF1ADE6022C7C0AA2495B30F5BA29597E45FD3DC392805A461F0B1887
186061BE2D042712E60AE006E9B608318A6D9B7006BB78A920C38D3816323CE9
89E2FF10D626D6CCC7596B3D3867CBD7966E070D8BE5BBE2250364812FF7C10D
58787200F53A331F9B154377E61F2D96E187D1001F890256CED910690C4BBD7D
C16CF656944DF5BD7282B6F1E814C0755F1986107701680652322B6AAE036D30
935949E9294875DD4507DB91608F9FC0159EADF26324E6855EFD3DD6E6E2457F
C54579DE5EE84687B8DA91E885B9FCAFBC381351DD44B110CD2904ED97BCA410
5BE952893E368B8491E1A1E52C2AE880CA115414EB4652A3DA5FF5956B71CA69
47C08B2D04F0386F6A52C8266E4FC707DCE60BFC7915D6958CBE3997A3490967
DCC9929E1BB1D4C385D55501AA7185CEAF2AD29C8266306092ABBD856D4E0992
424B44B08E2C465AD7B95E44B5B6105D8761A6A48E4AC4CB8B90C69AAF35C89B
22FB6BEF2419CF35AED346AEA8181CE997FFE0C8F2381A3981955A38D3BBB2A9
7497F7B5F9C44E2C537CF25A80C4C8B98875A7F7DD25A2DAE533F1C050D35CD6
BE3C68517AB2F3123333A9CCFF49CDA64277E23F40EE3C5B8B6C85C8579F1D91
2E56D9F7A8E5D9BECF8CCB74BF1B5AEECFE49EBFF0ACFA532C8392799D720AD8
D2B132630A4AD13CEBED8BB03DE02F1CEFD0BD43555041C9F9177F7FA33CEBA9
2FE0C35F5B50AC260591C18FC29F0E6F4161F2468A514669121D562392299D0E
D70285D98433E69AA82CEC81213BF1E9E3F32A623C70A5209D441FC332D6BE6E
E9BC0423C31DDE2AC0C6AAF67D7235D6AB3B597C3818976CCB04676C3D51A012
779EAA0F57FF34E6D241696E73B84B015B02CC55ADCD02E1757601BD9A28941B
A45DCF4EEA6E8F8F3F28273DF3C6A20B7B5878F1A720DE0904F423C2F918602D
D666F27285EDF42BD422C046AC5CB2BCF7D4DB77132F8780E7F43D33D3F55BA2
74FD97632C5E1F1B68A3A52491918291864CD7363B65AB012522EE2F88B276E5
A254AC05886975392272E231983CB5DBD6AC1A5FF96529E7354074785A57C5F4
6CA0679F9B200CEB625A2C4D067EAFEF5EFEA182563FA8F8F692A2CC1E405657
71837B4A4C5246D6B29FF9D2227A6691E51A64CD6DD9A7484EA1C9E334598B8C
AED5B6E811AADFCC8658991A038C6FB664A3EAE19F548225BE30C7B29CE3359B
70BFB53D0BCB1200B31AE146E504180EB98040F819420ED8635BBB3BACE8D08A
E01E641B73BD918AB90C44AD52C359AEFA5A2DAEE1C2B9A1F603DB446FF7007A
86A80CE4D0FC0CC4A121C38FABF1714CC0D532D6E9A8573F88A65B69070B5282
73945B10B7644567FCA80B99858B67EE6EEBC67F9081B067CDBCE3F58A7E50AC
962A66E238A8550E1CA6C5363CC7BC94693B0E1B4C389D02D83EB8C828CA17E1
B37C8C30323C7D36882B255D934BA40A3EDF8B197CE0E7431D2565FED1981B72
0757753408735BB8ABADCF0219493B226C35926A59CD32D2F7533AA884F58A91
21E4FD09D99D3301E0290455A8BBE6143BDED495C7A5DF2E19586E058FDC8F82
8206604B1EAD476C67C1F9AFBEF0323CE1C7A52D3F12C9964D1FFF7A18A4DF33
6E2521A054B82938D459DDE4F7FC3990EDD9AF54F2A08D4211E3EE5B28330B50
36394C19242EA6A9293E6098E23F84C785FF5EF93DBBDC092E21BC63269E2410
7BCE6BE96B77BD9008254D3E3B373D0E5E28B8A428B207C286DEEFCF107F7532
DBC23EE2024F93C1C8861F00421A13379AD5A8728114A0C7743B56A916B3B887
8AE14BDD7A97C2D77EDF0934685EDDC8AB06863CCCDBE52D70875B26DE98BA4D
A6959EE5FC0773C49196DD8C32FFA120C17BA6A8879E1206F6D825323C376B5A
CCAA50E1F5126B4954C0C8AAF77C09222194BF131D997AB87F6998826D10AEEB
D49FF48B078E66984826F1302190E781E785A952E07441407E984BF76F675470
A972C04C03FD253CB3F90859326073F2A301F121C7C08BDD83491930E7050218
4E6A036566987DA5CECF9ACA945E5D8019042E290526AFB6EA042009B0D8D40E
ECF561E43791F5FD497D7B378827F386194698E16369D82F227443D9A631E581
7D131F01B9EBBC691D211B03F706D188446B12B5AE591A35F6479B0DC7EBCA07
EA55786029777CD4780DFB743A1D8DD9C5E945EFDDB11968AFCAC9CAD0F9EE3E
45F533F4D8C0C5268DD5A29D2EA91CD2436294CEF9396A7C9F27E2852B3DAAE5
C7892DA1FD0C2E0A5153E7448D3F583666A97C0AFF39DCAC94447D55D0F21E5A
FB2D186204E8BDCE0D24C14253578B3F0E70737D25614D7649475BFA68E676C1
A80380A5D114C92A89044F1C2AE78835EF3C1DE6C11079E7CD7582010E3BAA63
3249ED9B253D5C7A83A01C0BCC61E33D0D09CC7BCBB93F88FCAE5FE029B888C7
56BC72AAE0FD03352128D79E9571EC642676D7A11670C3B8BA3EDDB81C8623DE
DA5AE895ACE696898292AFA47C863F011DA9D246E827DB2E1E9087E019B3697A
D909FE62C24ACF746C884CDA1542F75DF7846EDC4364AC49A3C48F0C05ECC461
C55F12A4F8D2467147DB634B5098B616D5A91B9BFE6233B0164AB1CC96D35795
38198E3D4727DC0150EB2E78602EA080B0CFB759FCAA34646FEB956E59829E1F
86445A02D300F2AEC6D0C53F5B9CC9E1F2E548D96BA97BDCA799A0706A34C9FA
49CABF39201ACCB1850BB77AB42C25B06AE091DBA5DC229E9D659C81079B3B5B
26AC34B27A3B2FC935773C2CCB8B4A9B4F04D5A1DFAFCFB589D2B12FAFE7AF6F
FDF106C5EE0F27F2856281564D7ECA7773F4E668BA9C2264F84B0D8F398BF661
042A9114498B7D6092C15B68B287F2EA3D90D78E2A7FE7118BC2572E92D94D81
512F84D182EF32EA77BBFA70FAF74275124B5CCD0C1411A78F72B49FEBA0E8C8
C5642DA357F6C374B63D48D37E437518BEF60466E3CEAD02679AC757198A6569
6E6BAC9710AE7EF42F7337FE733928083F409731FFDC34E64D6AA34F80371E23
402AEFB1CE9661537A84CE2E35726691B0E06946D53F32AD0AD8B156815C8AB6
6B6F8B00F1A5B7F0536BD60AA6F89EA6F9D1FCC80549669E230067967A1A332B
20BDD45EA7518C66620BF5339B9FBEB2A653F3312BB061D4A621E454D23D079A
C06A7F81121F882CA3B98A0DEAC58186048382F2D345728A37380B74C655F6A4
98909CE53597169D35F86B6B9BFDE284A384EDF13EADCD2D427D4E1064CD12E8
CEC0FFE8B246545DFB7AC0ADDD04F9E30794B757092D616481C5CDD5EC20E751
D35B742D4981012369FD527798250D87D466C81D750D44818FF5ACE96734EF6C
88E58803633B637ED1029F892C48C4E9C589BBF1CBF88E3CD85805BA5A6BDF5E
FC363C843411F69499063264D7AC58F333266BCE6F9DFAB89E4BA36C5399D1E9
DD80CD1C4395BCA5936292956859D52ABC6F0AAE5F86D4FFC84FA902069857DE
1B0146FC464CB55223FED186AE29BC058CBB56CD30C5D24D4BC469A744E340CA
BCA05C176CA914F02DFA7554836F6E656092724DEDA7987B18C7C48EAE024419
BF96885F9F42FAF9F7E7FFB87C765C8268E3FCF67EA5E0B0712890D8858EFEAC
5843087FB8F1AED575F353B9494BF4A034B010F66027A6667ED52C9486C377A6
0DFEA52A91C6BBABC1A07ABF5FCE2B2AE63C3DA9164AA5D9145723B047775F46
6AE744BB58B3598A41FAE513B854CDC7304BE14E3A2AB7B0DC198A614DC0EBED
EB650FC82A7F5BE53BE6CA61ADAC99110DFA96160753548FDCDD0D525BA24DB0
E547FC4B4348165702BEA75DD0D887174FAE6319CCC3D80FD1CDEE64F8175A50
D6F40788F4CA209282220FDA62280FBB02CDD3D2C4FBE3D64F9FC159ECB07B21
B8B4F16252C1089CC882B92A15E6C083E4FDF42A668CC6004D041C5901FD3C46
C333FF051772A6048BF1E03C3D250586EB6C09A17BF57482CBC20B113648B65C
33A36BE0797F8ABA61C7DBB9BAC01A3AB461AC6B77D4ED7ED124212726C674D6
28F6CF33C6C6E1534E9323AADE88755D9B062CD1F1E94AB4BD88D4DAC5234CD9
385A5AFA0161B6017F1758983039C724682FA729FE71635D62D4F11D2F853285
E4CE9864476BB5F75F001DCFF2ADF6C95A0F0C7DF4F5EA8495EC0EEC7207716C
F3F439FBCE99EFFC1E7C2FF50DF2BAE3647177A98D420854A15DF3143D534721
A8CEE5186292AE634502529ED50DB1897FE3135C8FFF606D5AF1B55B9D9CB250
358135DFF5353CBDD5A99B3060E4D73CCEC99CA577B5033BD70ACE35E3537B22
7AE1F69C9B7313D02B323748083BA3491E0D961D041F780BE2E753DFD7C6F5A8
6BD272D63E09A143FBDEC10E13648482777388218476E84A314DA6AF62E1B2A1
8C0204D4F95452AFFC111C48818ECD315E1A9A1D5320DD1614DC6EE86CBF5EF3
B38C223291A8F54BA712F9C01F5E6FBF8A51964C3CC74DB35DC80F10A65650E5
18B741FC36D327DBDC01040AC9D4F8192063A9D070563FF8FA5C4282B835F667
1E158C0EE0905FD62A6EF9366EB51EF129B23CA3D345D0B1F65AF4CE71F6D013
0BB6382DEF616E35B259D081697EAF51F42B7B3324F5AFF7CB83117D834F2E87
59A9C2AC1977EB1639E120C3E08C2ECA3641A4B6EC8367ADE39A88B604D1CE48
07A2FD01A3E3543A2D4DC7AC66134A70FB285A2BD3642178AB4876871FBF70AD
9543A3ADBEEED7B3ED5A7228962B3400AE0CDF65B4D74A7E4874BD395350439A
D0275C1EE65544AAD6A97E7786191FD2A28634B02B9C7B846D497756B4697305
45F70D5BDA4228D44A3D43949C682CEC7D3F8CD631C9CA81A38BD881BBD49B32
E09A73B57211E5081EBB4796CB93D7A67DB09D855C3A01F721D1697918B3CC3D
248FF74CB09E3104AD5F9CF990FE37A7CF0FDCCDC1C3C67A48289AD7AD8D7064
882747718AA51AFAEE60BABB965860ED730B9304DC0555BFAA70237B3AAC65CE
FEDFCE4D2BDEAC629B39946A0359EABDD6959E3833AB245A75FA52D7DD43B679
C1B5FDC528B342537364E269BDDE4DDF21F59BDD08D57320BDE8C27688B2FFF4
A3B09B1428C2C74D48DD2A44E5185F4F9A85088E4512E99D476FAD9E79BDB33B
A020164857BC43BBC3A6C16C4F5DBE04DBDD121C16ABEA83CC30CE7CB60260EB
41A5403DE3B5841FA63DBE2CF3BA403CB78182A431E7F4B0B75F3692DF4DE833
F0ECB0E465FF36C69FF4A36FE780EB92632772F61C590A827190D81821BDB349
15CA6AB06F64AE4428C799D51725AB44E796E957268FD4D06F5C100492702B36
C69F990DDCB92F3B28F844AFBDAE734B8730CD5944366FA0A80B288722BC97B7
DA969E929FA55DF4052E79957F56A00C48123756954A67AF24C226360C3FFBA2
432FE97BEB9CE61253F8DDF55F29900A7251B11CDDC6FBF1F5B614C2533D9847
45E18F08C0C5BC56773D698FE826F5CD60C7B27FE12371EED397612B33E75BC7
FD9F2C6F6C39FDC3E5E412FBCCB91FB008F328F9DE7F3BCDF87F6B89FAC0D0D8
B0E953DFA96870200E43B506990A1F03DD323C5BCD812174BDC2813E38BDB2C8
10066CCE02A627B76D69D2191B9B9D71C71BF15BC86FCBAF84FADA4612495C6D
7B62D408DD12F76BB5ADD376BE73B0DDEC437AF62C9B4BE0D62D1C46BC9E4C0B
4289FC350499DDB7C6D6B05AD28D4318E52CBF2B44CA969A8268E233574FE878
8DDA5FB1A7D35AC6BDD52F34F7043B31D6A51E14F4A9EE6D9E5786B43C7DDF32
33222F1F99A78AF4C60D17ECBB139769F56B466BA7281D8EA05D6320D0ACF851
40BF062BB57237BBB337869CF99D01F4391F1C0999EB4C225C1C3E5CE7782F9A
F13A87A6AA4130D7EC83F6082F39FDDBF77AA09E981C6694413B3FEC178E2FD7
80E3A0996AF266B537B5E6F2A080C5D35A9A2F0F6D91B02F211C90C59173B673
41A48F4CABAFA33A79A0F4D643289ED305D6721391E6084EFAF64BA95B4850E2
71E9E3BEB8D224139C82C62463F5C40CEC87409B229D10216E4239C618F1DAD2
50258300C607384215CE8E236E498B6FF324C0FA3DDF3BF595C0C15F6CEA4642
F240AC408BB9B61C28D5F837359A1F412CA0ABA987541FCFF8D12A72CCD4B1A9
E5F39E02DF55D62BF45FB7F7AF1CFC91F03AB6022B2A49179B7CD32309F5E6B8
2F2B91FC77C70B68445121E691ABDD69221A28B390D1D36F7C6D18A3950A3A10
E0ED9F990507E0FE200CA3DA6DD531736D4FD351D118A807B25987ACF479E0B9
54AFC9A49DAB3CA5EF90E1FA3209A8F61EFD2B9CF1A143315BE182690E3A4C05
B07E6D9B4EB749A12A950F4A826B5866E245E49607034CC5D3CEC9A1F13242AD
4A1395362C5B790AFDDD209B70104DD7ED657ECA4123A00CE283247B1C78477E
267CFD76790A24A0C8D57E13D5207D5ED6AFAD0403263EE72CCCDBD4FAB8CF81
75EF6BE3F1C940CFD44EEC02E0CE405ECAC07AED579BB5A3107579B4A2B99EE4
2859E504A9DA8B46E0DF0167E14023C191F71D415CD9B4B2933FFD3FD164B017
EC6A8D602B2E0654F2FE6EAFB9E1E29EFBEB2EE4AF7AAD7F08A9B3F1C3AAC2EE
ECB5C2C10E3CA3083F18D74CE203726FD5E1BD6CF881217B834A524DD2BAB399
05F405A311571871513706AD2ECF39B4943E3FD64FB71A8933D47DE4BE33F4A0
500684D76FF6D2E7FE56C30E288C93400F08AF01513D86CB5A08CE67B772253A
4734FB6BA8BBF56B563C5F4F0C2DC41B45709ABD5689BA7FCB9100E2A9E18F2A
709EDE5C9EC41AF4EAC35ACCDD50E3254E0A5C3101304599C4240559D1D2F0F6
C41EF3B024DF4E4E3DD477788CD4A3053FE9D3E37AABFC7D45940FBB27C57765
5F4CF1BA367162713E0FA8DBC790FAA749C2461DB7839361A0CB83D6F9B5743C
0CBA298782B8C172A54BA4F545644BDCD6976D81B11B3054F3C9BFCB4F5B6C07
36992D6E72985C4E6BD2D5181ECE959BA04354FF93F8B4169B73245A029F7603
5F98916E5709255719DF0EDB778637318838C29E6D3CB542EA8C598B1C4C0946
0892A073DF309D9DA1D6BF89D4CC48738D7E61CBBC53C0876558B7A6DD1CBE9D
F0F0E1F71198087BB40A342CC1D2A2826CC4496CBE65F6A61BCB35C994884AB9
67B4C2D064CF192869704342146F9744EA78F130C651FF508B1DDB7F1FA389E7
05F32CBBB7E8641E8FFE42B60DA883BF18DFB558DF85B06DF35C2C3FAF00D307
75F39CFAF7DA3CAF000601419CC2450021E4C15F2CE953823BAEC8599341216B
F5D5EF7738F888BBBCB306FDA19C9218F40284239C8A9022CAD282DF5E2995AC
76F9FC0196A89588E55CE4824262E9800C16D94C4A3419E5AD65D3FA8E23714E
23B756B70A07D9E50E9DE7F1ADB6833AA5E539CA9C0F100EE89150E443A4A682
57D7ADA2DFD5D303EBDD9E59FB65AC2E0E2E9CB0EE09778F73820F99C33DDB56
CF45A4F5ED86944BC3600A6F27D1CE83F3D039471C037F947F9CC0999718F660
160321B65858BC5EBCDDF8BDCE41755A84F244ED20CFFE26F87E3CB17D295CB3
07CA521B432AD565F41BE5FA188E440BB52C18AD088BC7191A4167E9757046AC
D2FCEEC33D3FAA5CD0E2B247840E1CC4E1DBE4047CFC6C395C315526C9B016F6
36E118C6E75DADE15A50D727FB3B0A2AEED0A9FA472B094AF4CA2CB8BC4572E6
BAF6E3474E4CEB98EAAADA1F323D0211B8716912C234758B28F103688A7D1603
833AC2664B21184B5DC0D6DA4A31A65B0CAC1C9947F784C93ADFDD26D93214B5
0BE085E903A6B211D062680850BCC45B1F4A5D68600B6F7821770D5701F857D5
DB99A0F0F6681E3C545E9D3DA9CF7FFF9F8CD9ADF8E0E3F36585EB9069B74E64
CF75F70F6C512AC5D01658B3394A18691E66D6BE88067CB440002BDCC783A2BB
72D4305C56B6562A1134A53862B492C384F35B3C001608A88CE2BD10913CCE7C
A2DE64BE55325BD229AC91335C8687B0522045AB59DE1CCA39161E3DCA950F0B
F999F032F85BF3821146BFA51F805E84158051E5C570F2ACCA99724FC44E5EF2
32548D2C3F5AE8CE6BD53EA630FDCA0136BBAE37853B273DB140A2EB7D88E143
49248D35B6B6224B67B4CE4F3E4B43BF510F589FB14A557973A44BEA158DD737
4D2138D196BF9EEA528F33B6E5994293339E0910DF9B69F620D5348ACBF313DE
55EAF2DA4E924C15398787F73893A4AB2AE057888828C51F1913FF90CCA6CBC8
D9AB9794F660759B7B7812FB0E11E043CAB82CED212AE48BD87E5BA383BBEDBB
9B84A0351E4A7F74A5EDB127DF2E04159F7A43FB25442CE63A20FAF95DBB843E
CFBCA6F36AEC03D8AB17DA5AC444CE9359164BE521EDAACA336CBF9E1856AFDC
BB24F56C4E95218F3B5CD5C8C06DDF34E806EB682E0448C552C377E754122687
CDD073C90086DC897C68CEB93F3CC089024227F616366AE6DAB6064D53107A7C
0BD2BF261DC55A4F377E53B36017059030556BA395C832D3DF3B478C61515665
DF2BEF1FB6302D4F431CDD905504CD4EA798829EA7F97814540248666FEBA824
314E803907D4A0869204A344DE624694FA389E94031F070C452AD42210AEE2A6
4BFF097B8E2C218C18A046EA7DF020CE5552EDD5948A9CABC07FD4DC3458A673
545480B2AFE20A956D440343AF9380675ED26FAFB12799B5DCE5C1ADE1147E77
13BAB565740494EC368B6302E7552A396EC156833D613A75BDDEB13E2A0949A0
953473D02167877D1608552EC5C84FEA43C1403E12951A7A50673C636BB34E64
7405178E5FDE73B364912940B97A1D2131E3784A234BF5B05C241147FB703BA1
7A60B15C65642B493F182B4092B22597E42AB2B55B8E2259F5576DCCEABB96DE
042F7D7A1DDA2CF12D46A03BD1B3D4B656289C26F41D9D62C1DDA867C749D981
2C033A0C448EED517BD58F3B42E479CFB04EC7584F58B47A888E22F6C10578A2
697B18507D67BAF0EE6BEC63777BED49555D406D01E79E36F3D8E956E5E4491F
A346DB10D4064D114FF556B7822D576B2B40D887DB84FD396C1B69F92B1D5278
57AAB22AA9F27313C642379FF438B6FA7932CBB803016DA2FD6FF05EF7C050DA
7AF30093CCBA2BEE9B917D74481334121E28E9C327B6AE22860914E270F52CE4
2455C250D9D7FF17C655A884D8AA864BE6CE68AD80E3A4395B19DCFF3AB4427B
F8235E489E2CAB1AD62FD1D209F3C4E86B87B71004448300E9A0B45076C377EC
73BBC6D5BD349178FEFDB6042B4995452F67CB8116DDC018420ED137A0E11B53
590138D53630E67CAEFC9C06288E121AFB1EA2F875058E7E64A7FE86C30D3375
CDE208878EC54A0CFFCC9BAA9CCFE657604571EAF1D95BFD96B29A0B8AACECEE
10522DDFCAC46C41F8C54C0C4684BAEE0B8577170754A1BC3DAD86748DD75E83
0D334E52230E6325CE2EE084966B8BA802CADBBD3DF60A19A491C41F02F8AA6A
C5824401BC6632643848CD2815E815C7164E55CFF298ED9AA2E9FE11DE215821
631057F9DC410AE6F939BC2142AE61779CFFAFDE979D0C997C871444B7288862
D0E87247D760B9FC7EDDDCB37F490037DC07DA85B472BEA691400A97038D2BA0
674C5DE19326023F156E056EAA0F21DFF0C951B9BA019762AE30B23DB6B9DAC2
1E6C89B8EBF4B1F8D5ADCA1D4C99F400AC04F20E5ED9B401CDC7E5C994F4F213
2D07ECB673729FBE7870301F33AE3B439137EE3949E43C0E506F2CA530F7A2CE
6AEADDBE8D91ECEEDE035728A3D434125AF653F40EB6D37502F7AA0359A793D6
DAB3E43741D9FBFDD6D388832DFEA20166704D25B5425507634BB673491DD2CA
ED844BA8B366F1B1DA3B2C6626C809C292A0143D26DE7BBFFB53FC328A575BCF
0246DF4EEECC789DB99A98E87C53D16EB5D16971D25321149EF1C95E37EFCACB
31D0825A7D7C66EE36548E40B7423A0EC88C9F4C4D085DF00E174D9F57A01B9B
521C8634D2818143962FDF89AA7B241419B8D73636C479E5F31C6DB82CF98496
89D72C3DA12CF1B1FB4BC72416203CD35F5B5F87913D874C4EF5E881C03BAF2A
75AE7E7DCDD2D5151AE25A08438D40F9801E71CDFBF820E3A53ACF1F3D40C2F6
B7D0C2F669ED079B92A2678DFDD859E523EE860ADAD7BACB9F8B6B0299DB6A74
326DC759428F513670B9E6962AF319DFED768984921AA1020E9030D9A36800F1
08E65F7D17A8BC1AB74A42DD598B5DECB818EA24B7DA3B3D01A1FC0881CDF529
3A5D0F1AE8B6F61D6E0138166765F9BB1CFC1CA920BAB774AA18165B67F0AF51
C221AD60C650E9D4AFBA2E6FF27B19100A5047A9614145E4D4CE321AAF980516
AD24836160E0EB84D8839B6ABEC96130247AF8A02747EBED2A720739CEADAC62
437F206FBC0BE8D0258F99CD0F446513144B6B2CB3FB43433BBCB32158B29D76
E3EEB3C0783B5ABBB36E1EEA656D12348EEDD84CDB4497D60CF3B8EE79C4CD6A
EB38B39B0BFAD5CB9981F6C6ABEDC03E897F56B0F6F7D7229C0A35C108D6FF42
D35B94858EAEFE0A4959103E3E3CE90249BEEDAC16762285DDF620DBFC9CF62D
AAB66FFFDEF230DC26DE836E1CE20E01D5320FD7EB9464530E35725FAF31B8DB
D9BAEA7BC4C71873BC9A06D62FF2F73044A2EC2EF6BAB3F806E9D32135AC3B88
A28CEA07C76767AA96DBC6856E18123FD3BF16C6DCA5E11CFE437608882C82A6
68FCDC3B88DB36093A006F3E8B3117FA106224E10AD8053878787AC831B8FFF0
3F0150A409682D7805796F4307D20D34BCF797183E6BD6A95B88CF0E6EB284FE
02FAFEA51F3258135F598F6ED48D8408274A7E16EDB98B14784099269E430277
68162AF23EE8E73D994F4E60472768AE87B98BFF2541AB02F8E691415D32A8E1
061B54D7FF7A2F77467BEE108353E2A2EB00FD03611147385BE0CCD814203E62
C20D80C50465780E4255848B149942DF27E34F197BB73871ADD94375D4ABFFBA
4357378E8936687B6C2220C0D28EB7970D1E9F6E3CB7347F2B54790D7C4B0911
DC56C299569A7787DFEF1110B2918D2150351F161CFF6992EF64DA4FE9E855AB
680FEA7053675F8F808B1C3020ECB8FE194BB22B93C24AA70EB350BDF8BBBA3B
AB830EA523AE22FC9D857C7C0B9041FE8C14E1C6326C9945A092A59C0C7B706C
BA64EC2D0A1D051A5707AF35ADBA5400A9C61C9922EDA3304C81F1B42E5C3D1D
0871B53106CA67CFB61F336CC17B8A1C16C96350C85B7BB41E357840B1E645B4
DF0C7D4EDB42D338271706F0F5775C93F9BF5D6E18CEF6A2606D958F8E20892B
9FC4EF815E30C450D73401162E3FBDF54759CF709C871B7CAA4D56BF4DF7854B
BCC06779D1F00E9F38669EC49CFA8E4C58741D831DEA240828FA5D284E215E0A
8AF481F6BF631FE8EA931228EF2E20C4C1EA5429F1C3BEED0E2F2A61FB973721
3CE0ADE8ACB656A6EB391A42F92FD2B295047A0656441CD95FF7BE46D4AAC6A1
5913DD5D005DB79AD3C9BEA4E9D12D9503758418B13F09D96289A5AFC950778E
1890B42623F0229C9DF514549CDB6AEC53128611620992E0DE28B88CB3EF9B40
DC8301F44A199519B39567CE5808468CADA23180AF99FA0941A2ED45231238E4
D7FB8C029D010474F8E9693123A0559DC37AD0B0F3C8D9CD3E7E035969FCAA37
C6892CF7DADF12776E910E713133E642031CA8D7A03EAC871112A0FB407B0355
795D4F34C695F99C44E44D285CC8606C5EB50CF8BF7D74A4A5316333BEEA94AF
743531B7389AB60B067961F2316A6D88092AD621249287DCD55368E1BCA111C8
3FB1A5B7805C609CC2C3DAFE70AAC8711993986F6FDD26DC15204A6E9C5A018D
E5F2F23842BF6D470F0FEA5F5BA7F1E64EB3E67B5B74F6A43F43F976B1F35AE8
F7E038FB6B4D0E3CA49C20E3B7E78C17CB76DEB270F7821051E7BB8ACB2EDA53
740DA73CD03BC15280A3B84EF1DE6C94916DE74AA6CD71EDFB2BBE18F1877014
CE106C4606AB4B1073115E44B5B66B97C1569FC5BB7DD9DD2133FE35C23D188B
8FEC572DDED2C3C97F50C3C1917A31FDCD5F77D0A6AC9F78794C56C9C34E12F5
B4590CC5E44AF883187A858DA27ED48F4CA3528F41AF2FB60635AC0B6520998E
E3E260021FF3AABDD027B2B678EDEFCE3F3E3B8FDA2B07A7A5C54994E1341F54
8B08B789782073D61C74F860E5FD542389B06B0D93441126CC43F46C042CF879
6EAFE097D87B422DDF6761879667A7992A25CE45C149C67387465EDE74CDAF58
4FAF9208533C01F314C53DB8FA86A4A133E4C991D2BBDB18703E70595D952215
180A51C69FF67B018DA6C1B42AD672AAA3C788608438FCF84417D1D4F5B17849
97BB2848FBD5125245AE05143EEAAFD2BCC6126FFC0DAEEB23451B0D67470C27
D27AD6CE0B49EB6902D5030FB885376FCDF55643F7DA998721F9854898671881
6FCB7A8E72A567370ADFE94F95E88E54BB4148A6A61E6B2D536D62EB3B3E529C
AA87F4B2DD19CCB8C543D54BC469BB7AA43F3C55B5F7368C934103A4839B7728
EC07C29B84250FDF753748DA7A74372A51DECD0A2E928009E2579D8C0F86729E
344E930D757E047540A31140CAC5B2BD6C2E2D28067DA5E739878C553656BAAD
A0BA134408E67DFEEE695E0E2A8E4E6BCD923E86A76DE44C7DA984E511B61D34
E20146B55BBA3C74AB343CCBFCDDE00C7D6E61ED5B9AD2CEFC235FB12CE1C36E
2638753E493F6044684B9705A4F87E4FA7D69C14753586639956212A480B9DC9
30A1F4E68AD55DE21C041913CA4596B903B5C453A22832AA6D2218F98EC6E61A
1AE04FF58FF8767B57C3B9924B8ECB506DD47A5F9FBFA781D23DE171BAB30783
00003843CA66B13EB9DF14FA1D09EDA1F3209F75DB288A2856D85F93108333F1
508E21B276E617E22661AB4D6066A12DD965CE99E7C35FA3E0C1E285DF9F9D56
414C2998C3355B64BEBFE6F92953DFF29EA7183175CE8ABE871273E340508206
A5F3C3C5E3258ED814448CDDCE9FBC39BFF701F323457D241C7A8F7FD03B204F
F60008CD614F766BF33278D2C6A739CAD1141FE7EB71CEE3070E3F52A837C0D8
35697B2E85CDE886DDF4BD1A5034312222D20DF87AF01C4AC5380B60F96D3C18
EE27A3E82DD369E1330E081DBEDC475A0BB68FC8B1D39BB9FAC69CA6E3098810
B1B3AD338D4996F6E7861A94AD6D0CB0DE1E2B18F5C98992B1B7E87E235C002B
F8ECE6277EBBDFE4CE969B2A6FE4A77C1C6ACE9CDD1FC42FA4FB23F73B383DAB
C83B800AB02F36A9EE81110AF9841F80C8CE9101E9C1FBCC1FD0CC5644E66578
0E4C1CF3FDB5997AAD650D518F3F6C72B7B3487217D54E589679841A1BE7E299
2A11951952FE281366DE5CC0024AE9B77B4238F53886C6F4E91F88CD6111AA43
7DEFB0752D487F548970EEB814BD27E851BA1CF0EA38EDAED76C1B3544734A24
01B644E9F1557D2570EBB994BBD61EC4532536BE19E5894367C95E6889FB4D09
63AFC8EEBA00059C9E5FC35DAB60C4C6A4A5C44C919EC61500C7EA2CC48349C2
AD416B31FB6B5858800164740DEFA9A719763DF1D21284237D9E12A1804E9DD1
ECB3F07F66C888A415B445B7E89B31193425A32F4EB3802E5A6B71E4CD42C02E
67E23E438E999E69E651EC50434834B5C0A49A673CD4878F9D1CDFDDEA1AB678
430F8C4B1ACAEEEC16902A57781FFEDC0B2AE07E879075B877FA7972D948CBBF
6D3FBD23B46719E21CBB8AB4F264C4F10500834D27910EF983343C6EB998F361
5F22131C76F147555C302A65F3FAA3554664E3508FC55AD9389558931ADA152A
59F9CDE59109943656EE58770BD20CB9769A4A70E7DEA3A79E255468042BA2E0
37118E86454EB565831067F2AA29353F77278E9DA7AAF69C502DF151B68B53E1
9DABB4F3945F05D6AD7FFF72FC452A0A662CD9573EB9287E104C6A11D079EA28
F0D81670AE3EE81115A67F59FE7D1C6F5714CCF09FE3C600D1763E0EE4F1F8C6
43CB2264C6E69F2E1B1D212BE294552523B7B41A6DB68E4DB611E2C70B741ADF
EA547C0A1BFF0DF864C1A7BB4017365D6160B36714CDABE9C8131213F4FAE63C
2CB7A05AC886B4E4A9F16E32A65B89EDC86B07A04E35BAE61FAD4A41C7B69786
72CD81FC8EA8525AD2E1933818FFFCEBE4945B4123BD3247BE56F1BFC6185C67
E0CE93D72FB87AFD6510A9B14ADEFA0DCAB3AA7790325840A77FAC90682DE0F6
B3B9C27E5D3FECB83805E942FD4A0CD832ED332F6C2A8354F8297FA7AC6D1DD8
77C151702EBA3A61D99D4FD9B6C791E9EF0D56D53419F69B17BC5FE522185B60
38E9C248DDC3C7E3D4B882DF224CD214A315BF56CABC1F2151C4CF0ABE7C43B5
2E6536718CCD18CB71932197BA3C2D88F629668B73D13471DCB4DAB10C794F2D
99AAC23684AD082CC4AE3D5D60C6F10216B7E0484456BAB42822EA93B2712B9E
67A79E775BF80FFBB3E92F7DD8826F8DD421D71800D5671AD72107C11D3BD393
CFA6E18F14BD41687D45AA0D73918D966A4EC08E25A330EFE13BE33736289366
C406BF2A90B1A6FB100B033BD11A3E4B7648DB88FF07A95031D4F8BE820F87A0
1F8C9189992FF104C12B381BC3CB4AE62112CBBDA8DE79BB50BF0941A1BC0438
1D8E96BE281E68077593C9B0F9687462D098F4DBCA8CD43ECFCE61B17C3DF720
0A5EDAD3B1E6256D32E09C7862D3B60E7F510E04DEADCC39676EA9ADB496A225
4EAF2765B2E3702FA8BFE393CE11F03C129EF4952514DBA29BEAD02ACFD5F3B6
AEB7F3441D5966F339BA4D7C51B6234646BC90CBB211F8AC33222AE59AEC52BB
3DBB55C7ACECE79525B04672F2B4A369F0E9CABA02991C2170B03CDBC3CF35FF
B239A739C10739B67B07B019D8C21F6A2303538F14AF07EBB598F70A29548EE6
5E01F3BFAAF063D0D562C5D7C697908EF3E65CDE676FFB13AF663A43D66D9BB7
C22E67745B7670A2AC0B4FBB591D6A77CD7B5358925972722671D85DE74CEF9F
EA350FC3F1B643FB45CFD284744B79CDE5C6D3FA7BD0362FB4F44A0F8F1E6127
D411BCF921293752AEC58E20DB6841A0223917481D7FE0C7E8C61FF0DA4D365C
80EA5661971753BC7069CE2CF56412E7BD60D95CB93E7C046AAFECD96D28D4C7
8DB38C3A9C52EE955BF5F0435AE4A87B91708FE52790C3BE64A90ABC301E03E8
5623455D8FD504D78B242874060CDF28AC9CF6DEDDC3647EAE0FECD3CA22B5C3
FB176E094A56140BF308B8AFF9661F096087C3E79CB6361E6EA6E885A21F927C
3BA8F1508DA757FDB24D66686DD6FDFAD5D0D6C5923E377DFBE8605E8DEB32B4
65F5A8E8BF7475823BD7E77C1CE7769829793B1F0B108A18759B1AB050FD59C5
7314EB2FB60733CFAFFF2CA20566AC7D11065112227A1E97B0893557286F8162
929761EAC264F30459585D0F5AB551BE4C8D1D2DDE6A39834E8BECB8B0BEB451
B5240AE92109FD7408595640B050049560642B80DD87D8EC84C01D34B40D9A68
4F5F633533505BB92B64DBAD2016F031F8B1E415A63B3707C79796C27A25606D
2097EA48E5550F1019215DE900F4507A1809BF297A9EFF462A664C5E7D4AB955
6E7E41BB5159E337AE57BF1AC427F8C7604EA8BC2BDCD5D5FE19696D3C25C988
D3F3AEC50A99DD5270B1430EEA9178898D7E308A86DFC73A1652370303841ED6
F2EC3FA9FAA049EDEF63746C6B6DF9EAB1EB3921D2330BA3D71F4AE3C871F97E
A94893EC1534FE5FD51B619D4837B4963B2BB3F2B1E41C1503E0EFEB7548D12D
859FD40EAD9972134B4D5A6C39C525F391DE70CF6167AC798A73941C4858BB03
DD249743E28C3AB61781ECC7C72020345EFF3C253C0D47BDA60307340D9158A5
DAE85A7196DD7A654BB11AC7FA293FBF2A8401CCA4AB6CAB87686D19DB3F6465
50A49134900EAB469DE288CF14B7CFD0ED7B2E92C15625A7571042A3E81DC762
AE65DB7EEE6A5DE87DFAD433E5DBB08B8FA418EF04944123C49B779B2EEA7695
97B499A9FAB5A6BD06C8B7EE5DC591A20F1930EE3238FE4A53839464D611FD6B
0DF27FB92040BC475A8B9A50E3D11B1D4ABB753FE1B348F266A76B948F0245EC
6FA63C8493F830FD153D3D3BA3DE2D1B3F3A577EC590055177801EDEFD9FADF8
1EFA0DF7BFD14E520D49E129C31E81CAAF19455593C24FD6FCF023F5ED747592
68AC2F62B8A76CF310352C1C162BBDE02F860AF3CEB8FF07BB482774BC3170C0
29ACC61889192E10E6C4DF687CD71FAD95F9BFDEBE5E840CCB5791F103E705A5
C9E0E1F17A86A83CEDF0F2C6551EF14306C852E6F2A37208A9114104412A8476
35EDEC1461EF791240501F36AC00B24BB5C474485757237F54FE52768DE71807
E0A7F1C4039C9C8091A1E179A47D4C26D5DF73913B051B1A660B29D47E58C36D
8C694D789FB0FECF4834502977B64CBE18976993CD955EB7E0984DE605EB2EFC
28F9730DADA5D2681508CC6E47E3A92122C92EED7B29
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesSeconde.dvi)
@start /Fa 58[33 33[33 13 162[{}3 45.8281 /Fourier-Math-Symbols
rf /Fb 140[48 3[63 1[102 3[32 50[58 54[{ TeXBase1Encoding ReEncodeFont }
5 109.987 /Utopia-Regular rf /Fc 138[32 1[23 3[31 33
1[15 2[16 32 28 1[27 3[28 29[37 35 10[28 1[28 28 28 28
28 28 48[{ TeXBase1Encoding ReEncodeFont }19 53.4661
/Utopia-Regular rf /Fd 57[44 44 33[44 163[{}3 61.1042
/Fourier-Math-Symbols rf /Fe 141[19 12[26 49[26 26 50[{
 TeXBase1Encoding ReEncodeFont }4 49.6466 /Utopia-Regular
rf /Ff 157[26 26 28[35 30 29 29 65[{ TeXBase1Encoding ReEncodeFont }6
45.8281 /Utopia-Italic rf /Fg 198[24 24 24 24 24 24 24
24 24 24 48[{ TeXBase1Encoding ReEncodeFont }10 45.8281
/Utopia-Regular rf /Fi 162[52 1[52 91[{ TeXBase1Encoding ReEncodeFont }
2 158.413 /Utopia-Regular rf /Fj 162[63 1[63 91[{
 TeXBase1Encoding ReEncodeFont }2 190.034 /Utopia-Regular
rf /Fk 165[54 8[58 2[58 9[54 68[{}4 76.3801 /Fourier-Math-BlackBoard
rf /Fl 92[37 163[{}1 51.9385 /Fourier-Math-Symbols rf
/Fm 151[32 37[33 66[{ TeXBase1Encoding ReEncodeFont }2
51.9385 /Utopia-Italic rf /Fn 205[28 50[{
 TeXBase1Encoding ReEncodeFont }1 51.9385 /Utopia-Regular
rf /Fq 135[32 2[38 21 1[25 9[37 2[28 3[34 24[47 6[38
65[{ TeXBase1Encoding ReEncodeFont }9 61.1042 /Utopia-Italic
rf /Fr 65[47 7[34 34 31 31 2[42 13[30 30 35[34 34 34
34 8[76 76 70[55 41[{}15 76.3801 /Fourier-Math-Extension
rf /Fs 221[90 34[{}1 76.3802 /fourier-orns rf /Ft 4[37
16[31 31 45[27 15[27 20[31 28[31 30 1[31 37 21 27 24
36 37 35 38 56 17 1[17 18 37 32 19 31 37 30 37 32 3[20
1[20 11[47 2[35 16[16 16 2[32 32 32 32 32 32 32 32 1[16
1[16 2[21 21 17 36[37 2[{ TeXBase1Encoding ReEncodeFont }49
61.1042 /Utopia-Regular rf /Fu 134[27 30 1[30 1[20 2[32
34 2[53 4[35 29 2[34 26 32 33 11[46 2[37 1[36 1[44 53
33 38 20 20 45 1[33 35 44 38 37 36 65[{ TeXBase1Encoding ReEncodeFont }
29 58.049 /Utopia-Italic rf /Fv 159[33 96[{}1 58.049
/Fourier-Math-Letters-Italic rf /Fw 242[83 13[{}1 83.022
/CMSY10 rf /Fx 204[36 36 36 49[{ TeXBase1Encoding ReEncodeFont }3
68.7422 /Utopia-Regular rf /Fy 172[62 15[21 1[42 24[83
13[83 1[83 4[62 10[83 4[21 1[42 83{}11 83.022 /LINE10
rf /Fz 134[36 39 1[39 47 26 1[31 43 45 41 47 70 3[24
46 38 24 1[45 34 43 43 10[49 61 46 41 49 58 47 58 58
70 43 50 27 26 59 54 44 46 58 50 48 48 65[{
 TeXBase1Encoding ReEncodeFont }41 76.3802 /Utopia-Italic
rf /FA 93[54 47 161[{}2 76.3802 /Fourier-Math-Letters
rf /FB 62[53 4[50 91[44 96[{}3 76.3802 /Fourier-Math-Letters-Italic
rf /FC 177[58 6[65 23[67 67 1[67 8[65 23[46 11[{}7 83.022
/wasy10 rf /FD 190[66 65[{}1 76.3802 /Fourier-Math-Cal
rf /FE 34[45 20[55 55 55 55 59 6[55 55 3[55 55 17[55
1[55 21 55 34[59 59 59 11[64 5[21 13[55 55 27[59 8[0
3[45 78 15[76 33[{}26 76.3802 /Fourier-Math-Symbols rf
/FF 57[42 42 33[42 1[42 48[48 63[17 48[{}6 58.049 /Fourier-Math-Symbols
rf /FG 22[30 30 109[28 5[20 25 23 1[35 33 36 8[30 3[30
30[37 37 7[31 31 31 31 31 31 31 31 31 31 1[15 1[15 44[{
 TeXBase1Encoding ReEncodeFont }25 58.049 /Utopia-Regular
rf /FH 221[38 34[{}1 76.3802 /Fourier-Alternate-Roman
rf /FI 4[46 1[46 4[44 4[22 22 3[39 39 39 38 4[40 1[40
22[46 8[49 4[34 10[27 4[34 14[67 4[76 38 31 8[78 14[26
1[26 37 39 37 59 38 46 26 33 30 45 46 44 47 70 21 40
21 22 46 40 24 39 46 38 46 40 3[25 1[25 3[72 48 60 47
41 49 58 46 58 60 72 43 1[27 27 61 56 44 46 60 52 49
49 1[30 1[44 1[20 20 40 40 40 40 40 40 40 40 40 40 35
20 30 20 44 1[27 27 21 1[64 3[18 29[47 47 2[{
 TeXBase1Encoding ReEncodeFont }99 76.3802 /Utopia-Regular
rf /FJ 22[40 40 30[48 24[30 54[40 40 1[40 48 28 34 34
46 47 45 49 72 24 1[24 24 48 41 26 40 46 38 46 42 8[48
1[49 60 48 1[52 1[50 1[56 70 3[29 1[55 45 48 2[52 49
6[21 43 43 43 43 43 43 43 43 43 43 1[21 1[21 4[19 36[49
2[{ TeXBase1Encoding ReEncodeFont }56 76.3802 /Utopia-Bold
rf /FK 22[57 57 30[69 80[57 1[57 69 41 49 48 66 68 64
70 104 34 2[35 69 59 38 57 67 54 67 60 12[69 1[75 1[71
1[81 6[80 65 14[62 62 62 62 62 62 62 4[31 4[28 39[{
 TeXBase1Encoding ReEncodeFont }39 109.987 /Utopia-Bold
rf /FL 22[47 112[45 4[40 36 2[53 5[27 1[48 1[47 55 45
31[63 67[{ TeXBase1Encoding ReEncodeFont }11 91.6562
/Utopia-Regular rf /FM 22[68 82[66 32[80 45 58 1[78 1[76
82 122 3[38 80 2[68 79 65 1[69 13[71 5[125 77[{
 TeXBase1Encoding ReEncodeFont }17 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Rappels de calcul et de g\351om\351trie)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Nombres r\351els)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (G\351om\351trie rep\351r\351e)
/OUT pdfmark end
 -246
-246 a -246 -246 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (\311tudes graphiques de fonctions)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Probabilit\351s)
/OUT pdfmark end
 -246 -246
a -246 -246 a
SDict begin [/Count -0/Dest (section.15) cvn/Title (Fractions et manipulation de formules)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (\311quations de droites)
/OUT pdfmark end
 -246 -246 a -246
-246 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (Pourcentages, taux d'\351volution)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246 -246 a -246 -246
a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 0 TeXcolorgray
1162 166 a FM(M)n(ath\351matiques)30 b(\226)f(S)n(econde)1496
577 y FL(C)o(orr)q(ig\351s)18 b(des)j(exer)n(cices)-246
937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end
 -246 937 a -246 937 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246
937 a FK(T)-10 b(able)22 b(des)h(mati\350r)n(es)p 0 0 1
TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a FJ(1)67 b(Rappels)14
b(de)i(calcul)e(et)i(de)g(g\351om\351tr)q(ie)1045 1120
y
SDict begin 12 H.L end
 1045 1120 a 1045 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1045 1120 a 0 TeXcolorgray
3058 w FJ(2)p 0 0 1 TeXcolorrgb -246 1293 a
SDict begin H.S end
 -246 1293
a FJ(2)67 b(N)n(ombr)o(es)15 b(r\351els)375 1293 y
SDict begin 12 H.L end
 375
1293 a 375 1293 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 375 1293 a 0 TeXcolorgray 3685 w FJ(13)p
0 0 1 TeXcolorrgb -246 1466 a
SDict begin H.S end
 -246 1466 a FJ(3)67 b(G\351om\351tr)q(ie)
15 b(r)o(ep\351r\351e)532 1466 y
SDict begin 12 H.L end
 532 1466 a 532 1466
a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 532 1466 a 0 TeXcolorgray 3528 w FJ(17)p 0 0 1 TeXcolorrgb
-246 1639 a
SDict begin H.S end
 -246 1639 a FJ(4)67 b(\311)o(tudes)16 b(graphiques)e(de)i
(fonctions)981 1639 y
SDict begin 12 H.L end
 981 1639 a 981 1639 a
SDict begin [/Subtype /Link/Dest (section.4) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 981 1639
a 0 TeXcolorgray 3079 w FJ(24)p 0 0 1 TeXcolorrgb -246
1811 a
SDict begin H.S end
 -246 1811 a FJ(5)67 b(P)o(robabilit\351s)300 1811
y
SDict begin 12 H.L end
 300 1811 a 300 1811 a
SDict begin [/Subtype /Link/Dest (section.5) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 300 1811 a 0 TeXcolorgray 3760
w FJ(34)p 0 0 1 TeXcolorrgb -246 1984 a
SDict begin H.S end
 -246 1984 a FJ(15)24
b(F)m(ractions)15 b(et)h(manipulation)f(de)h(for)q(mules)1234
1984 y
SDict begin 12 H.L end
 1234 1984 a 1234 1984 a
SDict begin [/Subtype /Link/Dest (section.15) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1234 1984 a 0 TeXcolorgray
2826 w FJ(39)p 0 0 1 TeXcolorrgb -246 2157 a
SDict begin H.S end
 -246 2157
a FJ(6)67 b(\311quations)14 b(de)i(droites)595 2157 y
SDict begin 12 H.L end

595 2157 a 595 2157 a
SDict begin [/Subtype /Link/Dest (section.6) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 595 2157 a 0 TeXcolorgray 3465
w FJ(42)p 0 0 1 TeXcolorrgb -246 2329 a
SDict begin H.S end
 -246 2329 a FJ(7)67
b(P)m(our)o(centages,)13 b(taux)j(d)n('\351v)o(olution)962
2329 y
SDict begin 12 H.L end
 962 2329 a 962 2329 a
SDict begin [/Subtype /Link/Dest (section.7) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 962 2329 a 0 TeXcolorgray
3098 w FJ(55)p 0 TeXcolorgray 1930 5895 a FI(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x FK(1)105 b(R)o(appels)23 b(de)f(calcul)i(et)f
(de)f(g\351om\351tr)q(ie)-246 -52 y
SDict begin H.S end
 -246 -52 a -246 -52
a
SDict begin 12 H.A end
 -246 -52 a -246 -52 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246 -52 a 0 TeXcolorgray 73
x FJ(Ex)o(er)o(cice)14 b(1)p 0 TeXcolorgray 42 w FI(Dans)i(chaque)i
(question,)i(on)d(obtient)h(la)g(r\351ponse)g(\340)f(l)o('aide)h(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351.)-246 64
y
SDict begin H.S end
 -246 64 a -246 64 a
SDict begin 12 H.A end
 -246 64 a -246 64 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 64 a 0
TeXcolorgray -141 160 a FI(1.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1435 212 1239 4 v 1435 311 4 100 v 1488
282 a(N)n(ombr)o(e)f(de)h(personnes)p 2302 311 V 145
w(4)p 2526 311 V 144 w(6)p 2670 311 V 1435 315 1239 4
v 1435 414 4 100 v 1653 384 a(F)l(ar)q(ine)h(\(en)f(g\))p
2302 414 V 268 w(250)p 2526 414 V 114 w(?)p 2670 414
V 1435 418 1239 4 v 1435 517 4 100 v 1660 487 a(Lait)h(\(en)f(mL\))p
2302 517 V 276 w(500)p 2526 517 V 114 w(?)p 2670 517
V 1435 521 1239 4 v 1435 620 4 100 v 1779 590 a(\214ufs)p
2302 620 V 435 w(4)p 2526 620 V 144 w(6)p 2670 620 V
1435 624 1239 4 v -38 743 a(P)n(our)g(6)g(personnes)o(,)j(il)e(faut)822
710 y FG(250)p FF(\243)p FG(6)p 822 723 165 5 v 889 772
a(4)1011 743 y FE(\306)1090 710 y FG(1)6 b(500)p 1090
723 130 5 v 1139 772 a(4)1243 743 y FE(\306)15 b FI(375)j(g)f(de)g(far)
q(ine)o(,)1860 710 y FG(500)p FF(\243)p FG(6)p 1860 723
165 5 v 1927 772 a(4)2049 743 y FE(\306)2128 710 y FG(3)6
b(000)p 2128 723 130 5 v 2177 772 a(4)2281 743 y FE(\306)14
b FI(750)19 b(mL)f(de)f(lait)h(et,)g(bien)g(s\373r)-5
b(,)18 b(6)g(\234ufs)o(.)-246 785 y
SDict begin H.S end
 -246 785 a -246 785
a
SDict begin 12 H.A end
 -246 785 a -246 785 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 785 a 0 TeXcolorgray -141
869 a FI(2.)p 0 TeXcolorgray 43 w(Les)g(6)g(yaour)q(ts)f(p\350sent)i(6)
10 b FE(\243)g FI(125)16 b FE(\306)e FI(750)19 b(g.)p
0 TeXcolorgray 0 TeXcolorgray 1541 952 1027 4 v 1541
1052 4 100 v 1594 1022 a(masse)f(\(en)g(g\))p 2074 1052
V 102 w(1000)p 2339 1052 V 105 w(750)p 2563 1052 V 1541
1055 1027 4 v 1541 1155 4 100 v 1625 1125 a(pr)q(ix)f(\(en)h
FC(N)p FI(\))p 2074 1155 V 194 w(2)p 2339 1155 V 214
w(?)p 2563 1155 V 1541 1158 1027 4 v -38 1291 a(J)n(e)f(payer)o(ai)325
1258 y FG(750)p FF(\243)p FG(2)p 325 1271 165 5 v 343
1319 a(1)6 b(000)514 1291 y FE(\306)593 1258 y FG(1)g(500)p
593 1271 130 5 v 593 1319 a(1)g(000)747 1291 y FE(\306)14
b FI(1,)8 b(5)18 b FC(N)p FI(.)-246 1333 y
SDict begin H.S end
 -246 1333
a -246 1333 a
SDict begin 12 H.A end
 -246 1333 a -246 1333 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 1333 a 0 TeXcolorgray
-141 1417 a FI(3.)p 0 TeXcolorgray 43 w(G\351n\351r)o(alement,)i(dans)d
(ce)h(type)f(de)g(question,)j(il)d(vaut)h(mieux)h(conver)q(tir)e(en)h
(minutes)p 0 0 1 TeXcolorrgb 2575 1417 a
SDict begin H.S end
 2575 1417 a
-30 x FG(1)2612 1417 y
SDict begin 12 H.L end
 2612 1417 a 2612 1417 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2612 1417
a 0 TeXcolorgray FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1528 1500 1051 4 v 1528 1599 4 100 v 1605 1570 a(temps)h(\(en)e(min\))p
2208 1599 V 127 w(60)p 2392 1599 V 134 w(?)p 2576 1599
V 1528 1603 1051 4 v 1528 1702 4 100 v 1582 1673 a(distance)g(\(en)h
(km\))p 2208 1702 V 103 w(20)p 2392 1702 V 104 w(45)p
2576 1702 V 1528 1706 1051 4 v -38 1850 a(On)f(mettr)o(a)342
1817 y FG(60)p FF(\243)p FG(45)p 342 1830 165 5 v 394
1879 a(20)531 1850 y FE(\306)599 1829 y Fy(\032)611 1817
y FG(20)o FF(\243)p FG(3)p FF(\243)p FG(45)p 611 1830
238 5 v 688 1897 a Fy(\032)699 1885 y FG(20)872 1850
y FE(\306)d FI(135)19 b(min,)g(soit)f(2)f(h)h(15)g(min)g(\(puisque)h
(135)d FE(\306)e FI(120)c FE(\305)g FI(15\).)-246 1901
y
SDict begin H.S end
 -246 1901 a -246 1901 a
SDict begin 12 H.A end
 -246 1901 a -246 1901 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246
1901 a 0 TeXcolorgray -141 1976 a FI(4.)p 0 TeXcolorgray
43 w(L)-10 b('\351nonc\351)19 b(donne)e(les)i(infor)q(mations)f(r)o
(ecens\351es)h(dans)e(le)h(tableau)g(ci-dessous)g(et)g(demande)f(de)h
(compl\351ter)g(la)g(case)3554 1973 y Fx(1)3530 1976
y Fw(\015)p FI(.)p 0 TeXcolorgray 0 TeXcolorgray 1629
2057 850 4 v 1629 2157 4 100 v 1696 2127 a(F)o(lor)q(ins)p
2002 2157 V 118 w(7)p 2146 2157 V 113 w(?)p 2289 2157
V 2366 2124 a Fx(1)2342 2127 y Fw(\015)p 2475 2157 V
1629 2160 850 4 v 1629 2260 4 100 v 1685 2230 a FI(Pistoles)p
2002 2260 V 106 w(6)p 2146 2260 V 1 0 0 TeXcolorrgb 104
w(4)p 0 TeXcolorgray 2289 2260 V 0 TeXcolorgray 2366
2227 a Fx(2)p 0 TeXcolorgray 2342 2230 a Fw(\015)p 2475
2260 V 1629 2263 850 4 v 1629 2363 4 100 v 1682 2333
a FI(Deniers)p 2002 2363 V 113 w(?)p 2146 2363 V 1 0 0
TeXcolorrgb 104 w(5)p 0 TeXcolorgray 2289 2363 V 1 0 0
TeXcolorrgb 104 w(30)p 0 TeXcolorgray 2475 2363 V 1629
2366 850 4 v -38 2484 a(On)f(compl\350te)i(d)n('abor)o(d)d(la)i(case)
981 2481 y Fx(2)958 2484 y Fw(\015)f FI(:)h(en)f(\351change)h(de)f(30)i
(deniers)o(,)f(on)f(a)h(4)10 b FE(\243)g FI(30)g FE(\245)g
FI(5)16 b FE(\306)e FI(24)19 b(pistoles)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1629 2567 V 1629 2667 4 100 v 1696 2637
a(F)o(lor)q(ins)p 2002 2667 V 1 0 0 TeXcolorrgb 118 w(7)p
0 TeXcolorgray 2146 2667 V 113 w(?)p 2289 2667 V 0 TeXcolorgray
2366 2634 a Fx(1)p 0 TeXcolorgray 2342 2637 a Fw(\015)p
2475 2667 V 1629 2670 850 4 v 1629 2770 4 100 v 1685
2740 a FI(Pistoles)p 2002 2770 V 1 0 0 TeXcolorrgb 106
w(6)p 0 TeXcolorgray 2146 2770 V 104 w(4)p 2289 2770
V 1 0 0 TeXcolorrgb 104 w(24)p 0 TeXcolorgray 2475 2770
V 1629 2773 850 4 v 1629 2873 4 100 v 1682 2843 a(Deniers)p
2002 2873 V 113 w(?)p 2146 2873 V 104 w(5)p 2289 2873
V 104 w(30)p 2475 2873 V 1629 2876 850 4 v -38 3031 a(On)e(peut)i
(alors)e(compl\351ter)i(la)e(case)1086 3028 y Fx(1)1063
3031 y Fw(\015)g FI(:)h(en)f(\351change)h(de)f(30)h(deniers)o(,)h(on)e
(a)2280 2998 y FG(7)p FF(\243)p FG(24)p 2280 3011 135
5 v 2332 3059 a(6)2439 3031 y FE(\306)2518 2998 y FG(7)p
FF(\243)p FG(4)p FF(\243)2669 3020 y Fy(\003)2664 2998
y FG(6)p 2518 3011 176 5 v 2595 3099 a Fy(\003)2590 3077
y FG(6)2718 3031 y FE(\306)d FI(28)k(\003or)q(ins)o(.)-246
3143 y
SDict begin H.S end
 -246 3143 a -246 3143 a
SDict begin 12 H.A end
 -246 3143 a -246 3143
a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3143 a -246 3161 a
SDict begin H.S end
 -246 3161 a -246 3161 a
SDict begin 12 H.A end
 -246
3161 a -246 3161 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246 3161 a 0 TeXcolorgray 78 x FJ(Ex)o(er)o(cice)c
(2)p 0 TeXcolorgray 0 TeXcolorgray 147 w FI(1.)p 0 TeXcolorgray
42 w(On)j(compl\350te)i(deux)f(tableaux)g(de)f(propor)q(tionnalit\351)i
(\(on)e(tr)o(availle)i(en)e(min)h(et)g(en)g(km\))f(:)p
0 TeXcolorgray 0 TeXcolorgray 452 3354 1072 4 v 452 3453
4 100 v 528 3423 a(temps)i(\(en)e(min\))p 1131 3453 V
127 w(60)p 1315 3453 V 144 w(?)p 1519 3453 V 452 3457
1072 4 v 452 3556 4 100 v 505 3526 a(distance)h(\(en)f(km\))p
1131 3556 V 123 w(3)p 1315 3556 V 124 w(0,5)p 1519 3556
V 452 3560 1072 4 v 0 TeXcolorgray 0 TeXcolorgray 2615
3354 1011 4 v 2615 3453 4 100 v 2692 3423 a(temps)i(\(en)e(min\))p
3295 3453 V 127 w(60)p 3479 3453 V 114 w(?)p 3622 3453
V 2615 3457 1011 4 v 2615 3556 4 100 v 2668 3526 a(distance)h(\(en)g
(km\))p 3295 3556 V 103 w(15)p 3479 3556 V 104 w(5)p
3622 3556 V 2615 3560 1011 4 v -38 3726 a(S)n(t\351phane)h(nage)497
3689 y FG(60)p FF(\243)p FG(0,5)p 497 3706 181 5 v 571
3754 a(3)701 3726 y FE(\306)780 3693 y FG(30)p 780 3706
62 5 v 796 3754 a(3)866 3726 y FE(\306)14 b FI(10)k(min,)h(puis)f(il)g
(cour)q(t)1649 3693 y FG(60)p FF(\243)p FG(5)p 1649 3706
135 5 v 1685 3754 a(15)1807 3726 y FE(\306)1886 3693
y FG(300)p 1886 3706 93 5 v 1902 3754 a(15)2003 3726
y FE(\306)c FI(20)k(min.)-246 3768 y
SDict begin H.S end
 -246 3768 a -246
3768 a
SDict begin 12 H.A end
 -246 3768 a -246 3768 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 3768 a 0 TeXcolorgray
-141 3852 a FI(2.)p 0 TeXcolorgray 43 w(S)n(t\351phane)h(a)e(par)o
(cour)q(u)g(un)h(total)g(de)f(5)10 b FE(\305)g FI(0,)e(5)16
b FE(\306)e FI(5,)8 b(5)19 b(km,)f(en)g(10)10 b FE(\305)g
FI(20)16 b FE(\306)e FI(30)19 b(min.)p 0 TeXcolorgray
0 TeXcolorgray 1518 3933 1072 4 v 1518 4033 4 100 v 1595
4003 a(temps)g(\(en)e(min\))p 2198 4033 V 137 w(30)p
2402 4033 V 114 w(60)p 2586 4033 V 1518 4036 1072 4 v
1518 4136 4 100 v 1571 4106 a(distance)h(\(en)g(km\))p
2198 4136 V 103 w(5,5)p 2402 4136 V 134 w(?)p 2586 4136
V 1518 4139 1072 4 v -38 4287 a(La)f(vitesse)j(mo)n(yenne)d(de)g(S)n
(t\351phane)j(sur)d(l)o('ensemble)j(de)d(son)h(par)o(cours)f(est)h
(donc)2502 4250 y FG(60)p FF(\243)p FG(5,5)p 2502 4267
181 5 v 2562 4315 a(30)2707 4287 y FE(\306)2775 4262
y Fy(\032)2786 4250 y FG(30)o FF(\243)p FG(2)p FF(\243)p
FG(5,5)p 2786 4267 253 5 v 2871 4334 a Fy(\032)2881 4322
y FG(30)3063 4287 y FE(\306)c FI(11)k(km/h.)-246 4389
y
SDict begin H.S end
 -246 4389 a -246 4389 a
SDict begin 12 H.A end
 -246 4389 a -246 4389 a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246
4389 a 0 TeXcolorgray 92 x FJ(Ex)o(er)o(cice)c(3)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1225 5519
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.69983 a add def
/d 0.0 a add neg def /h 114.9489 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1225 5519 a 837 5746 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 113.81097 113.81097 199.1692
113.81097 199.1692 56.90549 56.90549 56.90549  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 199.1692 68.2864 187.78827
68.2864 187.78827 56.90549 199.1692 56.90549  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 187.78827 113.81097 187.78827
102.43004 199.1692 102.43004 199.1692 113.81097  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 56.90549 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 113.81097 199.1692 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 113.81097 199.1692 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.49803 0 1  setrgbcolor  [ 113.81097
56.90549 101.7393 56.90549 101.7393 68.97714 113.81097 68.97714  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 1.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
113.81097 142.26372 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
56.90549 142.26372 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 837 5746 a
tx@Dict begin { 148.52335 91.04869 } PutCoor PutBegin  end
 837 5746 a 51 x FI(2)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 154.78299 125.1919 } PutCoor PutBegin  end
 837 5746 a 51 x FI(3)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 154.78299 51.21501 } PutCoor PutBegin  end
 837 5746 a 51 x FI(3)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 80.80568 51.21501 } PutCoor PutBegin  end
 837 5746 a 51 x FI(2)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 51.21501 62.02676 } PutCoor PutBegin  end
 837 5746 a 6 w Fz(A)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 201.44547 60.31967 } PutCoor PutBegin  end
 837 5746 a Fz(B)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 201.44547 117.22516 } PutCoor PutBegin  end
 837 5746 a 835 5745 a Fz(C)837
5746 y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 116.08723 117.22516 } PutCoor PutBegin  end
 837 5746 a Fz(D)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 837 5746 a
tx@Dict begin { 108.1205 45.52455 } PutCoor PutBegin  end
 837 5746 a 2 w Fz(H)837 5746
y
tx@Dict begin  PutEnd  end
 837 5746 a 2675 5519 a
currentpoint initclip moveto
 2675 5519 a 0 TeXcolorgray -246
5569 1757 4 v -154 5646 a Ft(1)q(.)p 0 TeXcolorgray -76
5646 a
SDict begin H.S end
 -76 5646 a -76 5646 a
SDict begin H.R end
 -76 5646 a -76 5646 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -76
5646 a 0 TeXcolorgray Ft(Les)g(calculs)g(ne)g(sont)f(pas)h(toujours)g
(plus)f(faciles)i(en)f(minutes)f(qu)n('en)i(heur)o(es)o(,)f(mais)g(c)n
('est)g(g\351n\351r)o(alement)h(le)g(cas)o(.)p 0 TeXcolorgray
0 TeXcolorgray 1930 5895 a FI(2)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -163 a FI(Le)18 b(tr)o(ap\350ze)g(est)g(constitu\351)h(:)p
0 TeXcolorgray -76 -63 a(\225)p 0 TeXcolorgray 42 w(d)n('un)f(r)o
(ectangle)f Fz(B)9 b(H)f(D)t(C)h FI(,)19 b(d)n('air)o(e)e
FB(`)10 b FE(\243)g Fz(L)18 b FE(\306)c FI(3)c FE(\243)g
FI(2)16 b FE(\306)e FI(6)k(;)p 0 TeXcolorgray -76 37
a(\225)p 0 TeXcolorgray 42 w(d)n('un)g(tr)q(iangle)23
b Fz(A)5 b(H)j(D)d FI(,)18 b(d)n('air)o(e)905 4 y Fu(B)6
b FF(\243)p Fu(h)p 905 17 123 5 v 951 65 a FG(2)1052
37 y FE(\306)1131 4 y FG(2)p FF(\243)p FG(2)p 1131 17
104 5 v 1167 65 a(2)1258 37 y FE(\306)14 b FI(2.)-246
136 y(Donc)j(l)o('air)o(e)h(du)f(tr)o(ap\350ze)h(est)g(6)10
b FE(\305)g FI(2)15 b FE(\306)f FI(8.)-246 286 y FJ(R)o(emarque)g(:)k
FI(On)f(peut)h(aussi)h(utiliser)f(la)g(for)q(mule)g(\(hors-progr)o
(amme\))g(:)1301 509 y FD(A)1367 521 y FG(tr)o(ap\350ze)1580
509 y FE(\306)1659 453 y FI(\()p Fz(B)g FE(\305)10 b
Fz(b)t FI(\))g FE(\243)g Fz(h)p 1659 490 358 5 v 1817
566 a FI(2)2040 509 y FE(\306)2120 453 y FI(\(5)g FE(\305)g
FI(3\))g FE(\243)g FI(2)p 2120 490 326 5 v 2262 566 a(2)2469
509 y FE(\306)k FI(8.)-246 649 y
SDict begin H.S end
 -246 649 a -246 649
a
SDict begin 12 H.A end
 -246 649 a -246 649 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 649 a 0 TeXcolorgray 101
x FJ(Ex)o(er)o(cice)g(4)p 0 TeXcolorgray 42 w FI(Le)j(losange)h(est)g
(\253)c(la)j(moiti\351)d(\273)36 b(d)n('un)18 b(r)o(ectangle)f(de)g
(c\364t\351s)h FB(`)f FI(et)h Fz(L)s FI(,)g(donc)f(son)h(air)o(e)f(est)
2730 717 y Fv(`)p FF(\243)p Fu(L)p 2730 730 111 5 v 2769
779 a FG(2)2850 750 y FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1331 1635 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 149.09253 a add def
/d 0.0 a add neg def /h 92.18704 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 1635 a 473 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 142.26372 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 142.26372 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 142.26372 28.45274
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
1331 2108 a
tx@Dict begin { 18.4941 119.50143 } PutCoor PutBegin  end
 1331 2108 a 1 0 0 TeXcolorrgb 57 x FB(`)p
0 TeXcolorgray 1331 2108 a
tx@Dict begin  PutEnd  end
 1331 2108 a 1331 2108 a
tx@Dict begin { 78.24504 81.37486 } PutCoor PutBegin  end
 1331
2108 a 1 0 0 TeXcolorrgb 53 x Fz(L)p 0 TeXcolorgray 1331
2108 a
tx@Dict begin  PutEnd  end
 1331 2108 a 2569 1635 a
currentpoint initclip moveto
 2569 1635 a -246 1718
a
SDict begin H.S end
 -246 1718 a -246 1718 a
SDict begin 12 H.A end
 -246 1718 a -246 1718 a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246
1718 a 0 TeXcolorgray 117 x FJ(Ex)o(er)o(cice)d(5)p 0
TeXcolorgray 42 w(Rappels)g(:)p 0 TeXcolorgray -76 1934
a FI(\225)p 0 TeXcolorgray 42 w(une)19 b(hauteur)g(est)g(une)g(droite)f
(qui)h(passe)g(par)g(un)f(sommet)i(et)f(qui)g(est)g(perpendiculair)o(e)
h(au)e(c\364t\351)h(oppos\351)g(\(les)g(hauteurs)h(sont)f(tr)o
(ac\351es)-3 2034 y(en)e(pointill\351s)j(bleus\))9 b(;)p
0 TeXcolorgray -76 2134 a(\225)p 0 TeXcolorgray 42 w(le)16
b(fait)g(que)h(les)f(hauteurs)h(soient)g(\253)12 b(concour)o(antes)g
(\273)33 b(signi\002e)16 b(qu)n('elles)i(passent)f(toutes)g(les)f
(trois)g(par)g(un)g(m\352me)h(point)g(\226)e(qu)n('on)i(appelle)-3
2233 y(\253)d(or)q(thocentr)o(e)j(du)g(tr)q(iangle)d(\273)34
b(\(nomm\351)16 b Fz(O)22 b FI(sur)17 b(la)h(\002gur)o(e)e
(ci-dessous\).)p 0 TeXcolorgray 0 TeXcolorgray 1152 3491
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.3404 a add def
/d 0.0 a add neg def /h 138.28035 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1152 3491 a 1015 3619 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 59.32503
93.77257 70.23923 88.61395 65.08061 77.70018 54.16684 82.85837  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 112.67305
112.67305 121.20853 104.13713 112.67305 95.60123 104.13713 104.13713
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 82.90004
28.63725 82.85924 40.70891 94.93047 40.74973 94.97127 28.67805  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 196.32375 29.02191 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 82.51277 142.83289 196.32375 29.02191
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 82.51277 142.83289
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 82.90004 28.63725 82.51277
142.83289   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 112.67305 112.67305 28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.32503 93.77257 196.32375
29.02191   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 82.71683
82.71683   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1015 3619 a
tx@Dict begin { 87.06532 68.85558 } PutCoor PutBegin  end
 1015 3619 a 0 0 1 TeXcolorrgb 1013 3618 a
Fz(O)p 0 TeXcolorgray 1015 3619 a
tx@Dict begin  PutEnd  end
 1015 3619 a 2748 3491
a
currentpoint initclip moveto
 2748 3491 a -246 3574 a
SDict begin H.S end
 -246 3574 a -246 3574 a
SDict begin 12 H.A end
 -246
3574 a -246 3574 a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 3574 a 0 TeXcolorgray 117 x FJ(Ex)o(er)o(cice)e
(6)p 0 TeXcolorgray 42 w FI(On)j(note)j Fz(H)25 b FI(le)18
b(pied)g(de)f(la)h(hauteur)g(issue)h(de)k Fz(A)d FI(dans)d(le)h(tr)q
(iangle)23 b Fz(A)s(B)5 b(C)k FI(.)p 0 TeXcolorgray 0
TeXcolorgray 1241 4802 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 170.71645 a add def
/d 0.0 a add neg def /h 120.63936 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1241 4802 a 1246 4878 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 56.90549 28.45274
56.90549 40.5244 68.97714 40.5244 68.97714 28.45274  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.9 0.9  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 28.45274 56.90549
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1246 4878 a
tx@Dict begin { 59.18175 114.94888 } PutCoor PutBegin  end
 1246
4878 a 6 w Fz(A)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246 4878 a
tx@Dict begin { 142.26372 17.07181 } PutCoor PutBegin  end
 1246
4878 a Fz(B)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246 4878 a
tx@Dict begin { 19.91682 17.07181 } PutCoor PutBegin  end
 1246
4878 a 1244 4877 a Fz(C)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246
4878 a
tx@Dict begin { 55.76756 17.07181 } PutCoor PutBegin  end
 1246 4878 a 2 w Fz(H)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 1246
4878 a
tx@Dict begin { 86.49614 17.07181 } PutCoor PutBegin  end
 1246 4878 a 2 w Fz(I)1246 4878 y
tx@Dict begin  PutEnd  end
 1246 4878 a 2659
4802 a
currentpoint initclip moveto
 2659 4802 a -246 4986 a FI([)-214 4985 y Fz(A)c(H)-94
4986 y FI(])-52 4985 y(est)18 b(une)g(hauteur)h(dans)e(les)h(tr)q
(iangles)g Fz(B)9 b(I)15 b(A)22 b FI(et)16 b Fz(C)11
b(I)k(A)s FI(,)j(donc)882 5202 y FD(A)948 5214 y Fu(B)8
b(I)j(A)1082 5202 y FE(\306)p 1 0 0 TeXcolorrgb 1161
5146 a Fz(B)e(I)p 0 TeXcolorgray 21 w FE(\243)16 b Fz(A)5
b(H)p 1161 5183 297 5 v 1288 5259 a FI(2)2412 5202 y
FD(A)2476 5214 y Fu(C)k(I)i(A)2611 5202 y FE(\306)p 1 0 0
TeXcolorrgb 2688 5146 a Fz(C)g(I)p 0 TeXcolorgray 21
w FE(\243)16 b Fz(A)5 b(H)p 2690 5183 V 2819 5259 a FI(2)2997
5202 y(.)-246 5374 y(Or)p 1 0 0 TeXcolorrgb 17 w Fz(B)k(I)p
0 TeXcolorgray 26 w FE(\306)p 1 0 0 TeXcolorrgb 12 w
Fz(C)i(I)p 0 TeXcolorgray 28 w FI(puisque)21 b Fz(I)28
b FI(et)17 b(le)h(milieu)h(de)1003 5375 y([)1029 5374
y Fz(B)5 b(C)1141 5375 y FI(])1175 5374 y(,)17 b(donc)g
Fz(B)9 b(I)15 b(A)23 b FI(et)15 b Fz(C)c(I)k(A)22 b FI(ont)17
b(la)h(m\352me)h(air)o(e)o(.)p 0 TeXcolorgray 1930 5895
a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246
a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray
83 x FJ(Ex)o(er)o(cice)14 b(7)p 0 TeXcolorgray 0 TeXcolorgray
147 w FI(1.)p 0 TeXcolorgray 42 w(La)k(n\351gation)g(de)p
0 0 1 TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb 1521
-5 a(T)-8 b(ous)p 1521 14 164 5 v 0 TeXcolorgray 18 w(les)18
b(hommes)p 0 0 1 TeXcolorrgb 20 w(sont)g(mor)q(tels)p
2134 14 434 5 v 0 TeXcolorgray 1 w(.)p 0 0 1 TeXcolorrgb
0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray -38 153
a(est)p 1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb
1542 312 a(Il)f(existe)p 1542 330 263 5 v 0 TeXcolorgray
19 w(un)h(homme)p 1 0 0 TeXcolorrgb 18 w(immor)q(tel)p
2220 330 325 5 v 0 TeXcolorgray 2 w(.)p 1 0 0 TeXcolorrgb
0 TeXcolorgray 1 0 0 TeXcolorrgb 0 TeXcolorgray -246
393 a
SDict begin H.S end
 -246 393 a -246 393 a
SDict begin 12 H.A end
 -246 393 a -246 393 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246
393 a 0 TeXcolorgray -141 484 a FI(2.)p 0 TeXcolorgray
43 w(La)f(n\351gation)i(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 1333 642 a(Il)d(existe)p 1333 660 263
5 v 0 TeXcolorgray 19 w(un)i(desser)q(t)p 0 0 1 TeXcolorrgb
17 w(sans)g(sucr)o(e)p 1987 660 356 5 v 0 TeXcolorgray
17 w(\340)g(la)f(cantine)o(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 0 TeXcolorgray -38 800 a(est)p 1 0 0
TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb 1349 958
a(T)-8 b(ous)p 1349 977 164 5 v 0 TeXcolorgray 19 w(les)18
b(desser)q(ts)p 1 0 0 TeXcolorrgb 18 w(sont)g(sucr\351s)p
1939 977 388 5 v 0 TeXcolorgray 18 w(\340)f(la)g(cantine)o(.)p
1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0 TeXcolorrgb 0
TeXcolorgray -38 1166 a FJ(R)o(emarque)f(:)k FI(Dans)g(les)h(deux)f
(exemples)i(que)f(nous)g(venons)g(de)f(tr)o(aiter)-5
b(,)21 b(pour)f(\351cr)q(ir)o(e)f(la)i(n\351gation)f(d)n('une)h(phr)o
(ase)o(,)g(il)g(suf\002t)f(de)g(r)o(empla-)-38 1266 y(cer)i(les)h(\253)
15 b(tous)h(\273)45 b(par)22 b(\253)15 b(il)23 b(existe)17
b(\273)22 b(,)g(et)h(r\351ciproquement)9 b(;)24 b(et)f(d)n('inverser)g
(les)g(conclusions)h(\(exemple)g(:)f(immor)q(tel/mor)q(tel\).)h(C'est)g
(une)-38 1366 y(technique)19 b(qui)f(fonctionne)h(toujours)o(.)-246
1399 y
SDict begin H.S end
 -246 1399 a -246 1399 a
SDict begin 12 H.A end
 -246 1399 a -246 1399
a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 1399 a 0 TeXcolorgray -141 1494 a FI(3.)p 0 TeXcolorgray
43 w(La)e(n\351gation)i(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 1078 1653 a(Il)e(existe)p 1078 1671
263 5 v 0 TeXcolorgray 19 w(un)g(pays)h(dans)f(lequel)p
0 0 1 TeXcolorrgb 19 w(tous)p 2057 1671 150 5 v 0 TeXcolorgray
18 w(les)h(hommes)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
20 w(savent)g(lir)o(e)p 2657 1671 353 5 v 0 TeXcolorgray(.)p
0 0 1 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray
-38 1811 a(est)p 0 TeXcolorgray 0 TeXcolorgray 1061 1969
a(Dans)p 1 0 0 TeXcolorrgb 17 w(tous)p 1258 1987 150
5 v 0 TeXcolorgray 18 w(les)g(pays)o(,)p 1 0 0 TeXcolorrgb
18 w(il)g(existe)p 1731 1987 259 5 v 0 TeXcolorgray 18
w(un)g(homme)h(qui)p 1 0 0 TeXcolorrgb 18 w(ne)e(sait)h(pas)g(lir)o(e)p
2536 2004 491 5 v 0 TeXcolorgray(.)p 1 0 0 TeXcolorrgb
0 TeXcolorgray 1 0 0 TeXcolorrgb 0 TeXcolorgray 1 0 0
TeXcolorrgb 0 TeXcolorgray -246 2067 a
SDict begin H.S end
 -246 2067 a -246
2067 a
SDict begin 12 H.A end
 -246 2067 a -246 2067 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 2067 a 0 TeXcolorgray
-141 2141 a FI(4.)p 0 TeXcolorgray 43 w(Le)g(contr)o(air)o(e)f(de)h
(\253)c(\352tr)o(e)j(all\351)h(en)g(Angleterr)o(e)f(ou)h(en)g(Espagne)c
(\273)35 b(est)18 b(\253)c(n)-6 b('\352tr)o(e)18 b(all\351)g(ni)g(en)g
(Angleterr)o(e)o(,)f(ni)h(en)f(Espagne)d(\273,)19 b(donc)e(la)h
(n\351gation)-38 2241 y(de)p 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 830 2399 a(T)-8 b(ous)p 830 2417 164
5 v 0 TeXcolorgray 19 w(les)18 b(\351l\350ves)h(de)e(la)h(classe)p
0 0 1 TeXcolorrgb 18 w(sont)g(d\351j\340)f(all\351s)i(en)e(Angleterr)o
(e)g(ou)h(en)f(Espagne)p 1753 2436 1505 5 v 0 TeXcolorgray
19 w(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb
0 TeXcolorgray -38 2557 a(est)p 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 713 2715 a(Il)g(existe)p 713 2733 263
5 v 0 TeXcolorgray 18 w(un)h(\351l\350ve)h(de)e(la)g(classe)h(qui)p
1 0 0 TeXcolorrgb 18 w(n)-6 b('est)19 b(jamais)f(all\351)g(en)g
(Angleterr)o(e)o(,)f(ni)g(en)h(Espagne)p 1831 2752 1543
5 v 0 TeXcolorgray 1 w(.)p 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 0 TeXcolorgray -246 2815 a
SDict begin H.S end
 -246 2815
a -246 2815 a
SDict begin 12 H.A end
 -246 2815 a -246 2815 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246 2815 a 0 TeXcolorgray
-141 2888 a FI(5.)p 0 TeXcolorgray 43 w(C)o(omme)h(dans)e(l)o('exemple)
j(pr\351c\351dent,)f(le)e(contr)o(air)o(e)h(de)f(\253)d(ni...)k(ni...)c
(\273)35 b(est)18 b(\253)c(ou)g(\273.)j(Donc)g(la)g(n\351gation)h(de)p
0 TeXcolorgray 0 TeXcolorgray 1290 3046 a(Chlo\351)p
0 0 1 TeXcolorrgb 19 w(n)-6 b('aime)18 b(ni)g(les)g(fr)o(aises)o(,)h
(ni)f(les)g(fr)o(amboises)p 1511 3074 1287 5 v 0 TeXcolorgray
1 w(.)p 0 0 1 TeXcolorrgb 0 TeXcolorgray -38 3204 a(est)p
0 TeXcolorgray 0 TeXcolorgray 1364 3362 a(Chlo\351)p
1 0 0 TeXcolorrgb 18 w(aime)g(les)h(fr)o(aises)f(ou)g(les)g(fr)o
(amboises)p 1584 3380 1139 5 v 0 TeXcolorgray 1 w(.)p
1 0 0 TeXcolorrgb 0 TeXcolorgray -246 3495 a
SDict begin H.S end
 -246 3495
a -246 3495 a
SDict begin 12 H.A end
 -246 3495 a -246 3495 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 3495 a -246
3514 a
SDict begin H.S end
 -246 3514 a -246 3514 a
SDict begin 12 H.A end
 -246 3514 a -246 3514
a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 3514 a -246 3514 a
SDict begin H.S end
 -246 3514 a -246 3514 a
SDict begin 12 H.A end
 -246
3514 a -246 3514 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246 3514 a 0 TeXcolorgray 91 x FJ(Ex)o(er)o(cice)c
(8)p 0 TeXcolorgray 0 TeXcolorgray 147 w FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 90 w(\(a\))p 0 TeXcolorgray 41 w(On)j(identi\002e)h(A)f
(et)g(B)h(dans)f(l)o('implication)j(:)p 0 TeXcolorgray
0 TeXcolorgray 1185 3763 a(S)o(i)e(un)f(nombr)o(e)h(se)f(ter)q(mine)i
(par)e(5)1265 3814 y Fr(|)p 1299 3814 411 10 v 411 w({z)p
1778 3814 V 411 w(})1726 3893 y FG(A)2223 3763 y FI(,)h(alors)f(il)h
(est)g(multiple)i(de)d(5)2446 3814 y Fr(|)p 2480 3814
247 10 v 247 w({z)p 2795 3814 V 247 w(})2743 3893 y FG(B)3085
3763 y FI(.)145 4025 y(C)o(ette)h(implication)i(est)e(vr)o(aie)g
(\(cours)f(du)g(pr)q(imair)o(e\).)-246 4056 y
SDict begin H.S end
 -246 4056
a -246 4056 a
SDict begin 12 H.A end
 -246 4056 a -246 4056 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 4056 a 0 TeXcolorgray
4 4153 a FI(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 86
w(\225)p 0 TeXcolorgray 41 w(L)-10 b('implication)21
b(contr)o(apos\351e)d(est)p 0 TeXcolorgray 0 TeXcolorgray
1024 4253 a(S)o(i)g(un)f(nombr)o(e)h(n)-6 b('est)18 b(pas)g(multiple)i
(de)d(5)1104 4304 y Fr(|)p 1138 4304 518 10 v 518 w({z)p
1724 4304 V 518 w(})1612 4383 y FG(non)c(B)2275 4253
y FI(,)18 b(alors)f(il)h(ne)g(se)f(ter)q(mine)i(pas)f(par)f(5)2498
4304 y Fr(|)p 2532 4304 360 10 v 360 w({z)p 2960 4304
V 360 w(})2849 4383 y FG(non)d(A)3363 4253 y FI(.)262
4456 y(C)o(ette)20 b(contr)o(apos\351e)g(est)g(vr)o(aie)o(,)f(puisque)i
(l)o('implication)g(or)q(iginale)e(l)o('est)h(\(cf)f(l)o('\351nonc\351)
h(:)f(quand)g(une)g(implication)i(est)e(vr)o(aie)o(,)g(sa)262
4556 y(contr)o(apos\351e)g(l)o('est)g(aussi\).)p 0 TeXcolorgray
190 4705 a(\225)p 0 TeXcolorgray 41 w(L)-10 b('implication)21
b(r\351ciproque)c(est)p 0 TeXcolorgray 0 TeXcolorgray
1244 4805 a(S)o(i)h(un)f(nombr)o(e)g(est)h(multiple)i(de)d(5)1324
4856 y Fr(|)p 1358 4856 418 10 v 418 w({z)p 1844 4856
V 418 w(})1791 4935 y FG(B)2296 4805 y FI(,)g(alors)h(il)g(se)f(ter)q
(mine)i(par)e(5)2519 4856 y Fr(|)p 2553 4856 240 10 v
240 w({z)p 2861 4856 V 240 w(})2809 4935 y FG(A)3144
4805 y FI(.)262 5008 y(Elle)i(est)f(fausse)o(,)h(comme)f(le)g(montr)o
(e)g(le)f(contr)o(e-exemple)j(suivant)e(:)f(10)i(est)f(multiple)i(de)d
(5,)h(mais)g(il)g(ne)f(se)h(ter)q(mine)g(pas)g(par)f(5.)-246
5039 y
SDict begin H.S end
 -246 5039 a -246 5039 a
SDict begin 12 H.A end
 -246 5039 a -246 5039
a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 5039 a 0 TeXcolorgray -141 5136 a FI(2.)p 0 TeXcolorgray
43 w(L)-10 b('implication)p 0 TeXcolorgray 0 TeXcolorgray
1074 5294 a(S)o(i)17 b(un)h(nombr)o(e)f(se)h(ter)q(mine)g(par)f(0)1153
5346 y Fr(|)p 1187 5346 411 10 v 411 w({z)p 1666 5346
V 411 w(})1614 5424 y FG(A)2112 5294 y FI(,)g(alors)h(il)f(est)h
(multiple)i(de)d(10)2335 5346 y Fr(|)p 2369 5346 267
10 v 267 w({z)p 2704 5346 V 267 w(})2651 5424 y FG(B)3014
5294 y FI(.)-38 5553 y(et)h(sa)f(r\351ciproque)p 0 TeXcolorgray
1930 5895 a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1074 -163 a FI(S)o(i)17
b(un)h(nombr)o(e)f(est)h(multiple)i(de)d(10)1153 -111
y Fr(|)p 1187 -111 438 10 v 438 w({z)p 1693 -111 V 438
w(})1641 -33 y FG(B)2166 -163 y FI(,)g(alors)h(il)g(se)f(ter)q(mine)i
(par)e(0)2389 -111 y Fr(|)p 2423 -111 240 10 v 240 w({z)p
2731 -111 V 240 w(})2679 -33 y FG(A)3014 -163 y FI(.)-38
99 y(sont)h(vr)o(aies)g(toutes)h(les)f(deux.)-246 165
y
SDict begin H.S end
 -246 165 a -246 165 a
SDict begin 12 H.A end
 -246 165 a -246 165 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 165
a 0 TeXcolorgray 133 x FJ(Ex)o(er)o(cice)c(9)p 0 TeXcolorgray
42 w FI(S)o(oit)24 b Fz(A)s(B)5 b(C)27 b FI(un)17 b(tr)q(iangle)-246
331 y
SDict begin H.S end
 -246 331 a -246 331 a
SDict begin 12 H.A end
 -246 331 a -246 331 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246
331 a 0 TeXcolorgray -141 427 a FI(1.)p 0 TeXcolorgray
43 w FJ(Th\351or\350me)d(de)i(P)q(ythagor)o(e.)p 0 TeXcolorgray
0 TeXcolorgray 1192 570 a FI(S)o(i)23 b Fz(A)s(B)5 b(C)27
b FI(est)18 b(r)o(ectangle)f(en)24 b Fz(A)s FI(,)17 b(alors)h
Fz(B)5 b(C)2406 540 y FG(2)2456 570 y FE(\306)20 b Fz(A)s(B)2637
540 y FG(2)2683 570 y FE(\305)10 b Fz(B)5 b(C)2860 540
y FG(2)2896 570 y FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1373 1549 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88808 a add def
/d 0.0 a add neg def /h 107.55135 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1373 1549 a 873 1657 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
28.45274 85.35823 40.5244 97.42989 40.5244 97.42989 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 199.1692 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 28.45274 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
873 1657 a
tx@Dict begin { 73.9773 113.81097 } PutCoor PutBegin  end
 873 1657 a 871 1711 a Fz(C)873 1657 y
tx@Dict begin  PutEnd  end
 873
1657 a 873 1657 a
tx@Dict begin { 73.9773 28.45274 } PutCoor PutBegin  end
 873 1657 a 879 1711 a Fz(A)873 1657
y
tx@Dict begin  PutEnd  end
 873 1657 a 873 1657 a
tx@Dict begin { 204.85966 31.29819 } PutCoor PutBegin  end
 873 1657 a 54 x Fz(B)873 1657
y
tx@Dict begin  PutEnd  end
 873 1657 a 2734 1549 a
currentpoint initclip moveto
 2734 1549 a -246 1592 a
SDict begin H.S end
 -246
1592 a -246 1592 a
SDict begin 12 H.A end
 -246 1592 a -246 1592 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 1592
a 0 TeXcolorgray -141 1707 a FI(2.)p 0 TeXcolorgray 43
w FJ(Th\351or\350me)14 b(contrapos\351)g(de)i(P)q(ythagor)o(e.)p
0 TeXcolorgray 0 TeXcolorgray 1092 1865 a FI(S)o(i)h
Fz(B)5 b(C)1283 1835 y FG(2)1333 1865 y FE(6\306)21 b
Fz(A)s(B)1515 1835 y FG(2)1561 1865 y FE(\305)10 b Fz(B)5
b(C)1738 1835 y FG(2)1773 1865 y FI(,)18 b(alors)23 b
Fz(A)s(B)5 b(C)27 b FI(n)-6 b('est)19 b(pas)e(r)o(ectangle)h(en)23
b Fz(A)s FI(.)-246 1927 y
SDict begin H.S end
 -246 1927 a -246 1927 a
SDict begin 12 H.A end
 -246
1927 a -246 1927 a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 1927 a 0 TeXcolorgray -141 2023
a FI(3.)p 0 TeXcolorgray 43 w FJ(Th\351or\350me)14 b(r\351ciproque)f
(de)j(P)q(ythagor)o(e.)p 0 TeXcolorgray 0 TeXcolorgray
1192 2181 a FI(S)o(i)h Fz(B)5 b(C)1383 2151 y FG(2)1433
2181 y FE(\306)20 b Fz(A)s(B)1614 2151 y FG(2)1660 2181
y FE(\305)10 b Fz(B)5 b(C)1837 2151 y FG(2)1873 2181
y FI(,)17 b(alors)24 b Fz(A)s(B)5 b(C)27 b FI(est)18
b(r)o(ectangle)f(en)24 b Fz(A)s FI(.)-38 2339 y(Le)18
b(th\351or\350me)h(r\351ciproque)e(est)h(bien)g(s\373r)f(vr)o(ai,)i
(comme)f(vous)g(l)o('avez)g(appr)q(is)f(au)h(coll\350ge)o(.)-38
2503 y Fs(")p FI(En)25 b(devoir)-5 b(,)26 b(le)f(corr)o(ecteur)g(ser)o
(a)g(tr\350s)g(attentif)i(au)e(nom)h(du)f(th\351or\350me)h(utilis\351)h
(dans)e(les)h(d\351monstr)o(ations)h(:)e(th\351or\350me)o(,)h
(th\351or\350me)-38 2603 y(contr)o(apos\351)18 b(ou)g(th\351or\350me)h
(r\351ciproque)f(\226)f(il)h(ne)f(faudr)o(a)h(pas)g(confondr)o(e)9
b(!)-246 2686 y
SDict begin H.S end
 -246 2686 a -246 2686 a
SDict begin 12 H.A end
 -246 2686 a -246
2686 a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 2686 a -246 2705 a
SDict begin H.S end
 -246 2705 a -246 2705
a
SDict begin 12 H.A end
 -246 2705 a -246 2705 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 2705 a 0 TeXcolorgray
97 x FJ(Ex)o(er)o(cice)14 b(10)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 43 w(P)n(our)j(constr)q(uir)o(e)g(la)g
(\002gur)o(e)o(,)f(on)i(tr)o(ace)f(successivement)k(:)p
0 TeXcolorgray 7 2916 a(\225)p 0 TeXcolorgray 42 w(Le)d(segment)492
2917 y([)518 2916 y Fz(E)8 b(F)626 2917 y FI(])658 2916
y(.)p 0 TeXcolorgray 7 3016 a(\225)p 0 TeXcolorgray 42
w(La)17 b(perpendiculair)o(e)i(\340)806 3017 y([)831
3016 y Fz(E)8 b(F)939 3017 y FI(])981 3016 y(passant)18
b(par)g Fz(E)9 b FI(.)p 0 TeXcolorgray 7 3115 a(\225)p
0 TeXcolorgray 42 w(U)m(n)18 b(ar)o(c)e(de)h(cer)o(cle)g(de)g(centr)o
(e)g Fz(F)m FI(,)h(de)f(r)o(ayon)f(7)i(cm.)g(Il)e(coupe)j(la)e
(perpendiculair)o(e)i(que)f(nous)g(venons)g(de)f(tr)o(acer)g(en)f
Fz(G)6 b FI(.)p 0 TeXcolorgray 0 TeXcolorgray 197 4528
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 190.29268 a add def
/d 0.0 a add neg def /h 156.14926 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 197 4528 a 753 4396 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ -22.76228
0.0 -22.76228 9.65736 -13.1049 9.65736 -13.1049 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04913 0.0 -22.76228 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 753 4396 a
tx@Dict begin { 22.76228 -4.55238 } PutCoor PutBegin  end
 753
4396 a 51 x FI(5)17 b(cm)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -22.76228 140.21574 -22.76228 -15.93352
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 2.1976990745518967 def /t1 2.5472509907369547
def /dt t1 t sub 49 div def /F@pstplot (1.*7.*cos(t)+0.*7.*sin(t)+4.|0.*7.*cos(t)+1.*7.*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 22.76228 mul
exch 22.76228 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30
22.76228 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 22.76228 mul gt {
moveto } { dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -22.76228 111.51212 91.04913 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 753 4396 a
tx@Dict begin { 34.14342 64.1898 } PutCoor PutBegin  end
 753
4396 a 51 x FI(7)g(cm)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396
a
tx@Dict begin { -34.14342 -6.82875 } PutCoor PutBegin  end
 753 4396 a Fz(E)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396 a
tx@Dict begin { 94.23582 -6.82875 } PutCoor PutBegin  end
 753
4396 a Fz(F)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 753 4396 a
tx@Dict begin { -32.77774 114.72174 } PutCoor PutBegin  end
 753 4396
a 751 4395 a Fz(G)753 4396 y
tx@Dict begin  PutEnd  end
 753 4396 a 1777 4528 a
currentpoint initclip moveto
 1777
4528 a 0 TeXcolorgray 2050 4645 9 1414 v 0 TeXcolorgray
2095 3315 a FI(D)o('apr\350s)24 b FJ(le)d(th\351or\350me)g(de)h(P)q
(ythagor)o(e)g FI(dans)h Fz(E)8 b(F)g(G)29 b FI(r)o(ectangle)24
b(en)2095 3414 y Fz(E)39 b FI(:)2869 3599 y Fz(F)8 b(G)2981
3565 y FG(2)3030 3599 y FE(\306)14 b Fz(E)8 b(F)3207
3565 y FG(2)3251 3599 y FE(\305)i Fz(E)c(G)3428 3565
y FG(2)2940 3735 y FI(7)2980 3701 y FG(2)3030 3735 y
FE(\306)14 b FI(5)3139 3701 y FG(2)3185 3735 y FE(\305)c
Fz(E)c(G)3362 3701 y FG(2)2935 3871 y FI(49)15 b FE(\306)f
FI(25)c FE(\305)g Fz(E)c(G)3366 3837 y FG(2)2778 4008
y FI(49)k FE(\241)g FI(25)17 b FE(\306)d Fz(E)6 b(G)3211
3973 y FG(2)2871 4080 y FE(p)p 2935 4080 82 5 v 69 x
FI(24)15 b FE(\306)f Fz(E)6 b(G)2095 4361 y FI(C)o(onclusion)19
b(:)f Fz(E)6 b(G)20 b FE(\306)2740 4296 y(p)p 2803 4296
V 2803 4361 a FI(24)f(cm.)2095 4528 y Fs(")p FI(S)o(auf)f(si)f(l)o
('\351nonc\351)i(le)f(demande)o(,)f(ne)g(donnez)g(pas)g(de)g(valeur)g
(ap-)2095 4628 y(proch\351e)o(.)-246 4727 y
SDict begin H.S end
 -246 4727
a -246 4727 a
SDict begin 12 H.A end
 -246 4727 a -246 4727 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 4727 a 0 TeXcolorgray
-141 4842 a FI(2.)p 0 TeXcolorgray 43 w(Le)h(plus)g(gr)o(and)f
(c\364t\351)h(est)726 4843 y([)751 4842 y Fz(B)5 b(C)863
4843 y FI(])897 4842 y(,)18 b(donc)f(le)g(tr)q(iangle)h(ne)g(pourr)o
(ait)g(\352tr)o(e)f(r)o(ectangle)g(qu)n('en)24 b Fz(A)s
FI(.)-38 4956 y(On)17 b(calcule)h(:)1139 5035 y Fz(B)5
b(C)1251 5005 y FG(2)1301 5035 y FE(\306)14 b FI(6)1410
5005 y FG(2)1460 5035 y FE(\306)g FI(36)1145 5135 y Fz(A)s(B)1251
5105 y FG(2)1297 5135 y FE(\305)i Fz(A)o(C)1474 5105
y FG(2)1523 5135 y FE(\306)e FI(5)1632 5105 y FG(2)1677
5135 y FE(\305)c FI(4)1782 5105 y FG(2)1832 5135 y FE(\306)k
FI(25)c FE(\305)g FI(16)17 b FE(\306)d FI(41)2344 4977
y Fr(\276)2399 5087 y Fz(B)5 b(C)2511 5052 y FG(2)2561
5087 y FE(6\306)20 b Fz(A)s(B)2742 5052 y FG(2)2788 5087
y FE(\305)c Fz(A)o(C)2965 5052 y FG(2)3000 5087 y FI(.)-38
5280 y(D)o('apr\350s)h FJ(la)e(contrapos\351e)e(du)k(th\351or\350me)e
(de)h(P)q(ythagor)o(e)p FI(,)21 b Fz(A)s(B)5 b(C)26 b
FI(n)-6 b('est)19 b(pas)f(r)o(ectangle)f(en)24 b Fz(A)s
FI(.)-246 5366 y
SDict begin H.S end
 -246 5366 a -246 5366 a
SDict begin 12 H.A end
 -246 5366 a
-246 5366 a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246 5366 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)14
b(11)p 0 TeXcolorgray 47 w Fz(A)s(B)5 b(C)k(D)d(E)i(F)g(G)g(H)26
b FI(est)18 b(un)g(par)o(all\351l\351pip\350de)i(r)o(ectangle)d(tel)i
(que)k Fz(A)s(B)f FE(\306)15 b Fz(B)5 b(C)24 b FE(\306)14
b FI(6)k(et)d Fz(C)6 b(G)21 b FE(\306)14 b FI(3.)p 0
TeXcolorgray 1930 5895 a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 895 913 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 254.15918 a add def
/d 0.0 a add neg def /h 139.57541 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 895 913 a 1693
839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.49803 0 1  setrgbcolor  [ -85.35823
0.0 -73.9773 0.0 -62.59595 5.69046 -73.9773 5.69046  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.49803 0 1  setrgbcolor  [ 74.11884
14.65575 85.35823 11.38092 85.35823 0.0 74.10971 2.81201  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 0.0 -28.45274 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 -85.35823 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 85.35823 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 28.45274 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 85.35823 -28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 -85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 113.81097 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 113.81097 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 0.0 -85.35823 85.35823  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 28.45274 -28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 142.26372 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 -28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 -28.45274 28.45274   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ -62.59595 5.69046
-73.9773 5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ -73.9773 0.0
-62.59595 5.69046   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 74.11884 14.65575
74.10971 2.81201   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35823 11.38092
74.11884 14.65575   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1693 839 a
tx@Dict begin { -57.4308 25.54086 } PutCoor PutBegin  end
 1693 839 a 52 x FI(6)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 0.5683 8.5359 } PutCoor PutBegin  end
 1693 839 a 52 x FI(6)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 89.21742 47.23164 } PutCoor PutBegin  end
 1693 839 a 52 x FI(3)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -38.41138 33.0856 } PutCoor PutBegin  end
 1693 839 a 6 w Fz(A)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -83.36545 5.69046 } PutCoor PutBegin  end
 1693 839 a Fz(B)1693 839
y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 87.33145 4.79306 } PutCoor PutBegin  end
 1693 839 a 1691 838 a Fz(C)1693
839 y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { 143.91566 33.0856 } PutCoor PutBegin  end
 1693 839 a Fz(D)1693 839
y
tx@Dict begin  PutEnd  end
 1693 839 a 1693 839 a
tx@Dict begin { -26.7808 118.43384 } PutCoor PutBegin  end
 1693 839 a Fz(E)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 1693 839 a
tx@Dict begin { -83.36545 90.1413 } PutCoor PutBegin  end
 1693 839 a Fz(F)1693 839 y
tx@Dict begin  PutEnd  end
 1693 839
a 1693 839 a
tx@Dict begin { 83.9355 90.1413 } PutCoor PutBegin  end
 1693 839 a 1691 838 a Fz(G)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 1693 839 a
tx@Dict begin { 143.91566 118.43384 } PutCoor PutBegin  end
 1693 839 a 2 w Fz(H)1693 839 y
tx@Dict begin  PutEnd  end
 1693
839 a 3005 913 a
currentpoint initclip moveto
 3005 913 a -246 1063 a FI(On)18 b(utilise)h(deux)e
(fois)h(de)f(suite)i(le)f(th\351or\350me)h(de)e(Pythagor)o(e)f(:)-246
1251 y(Dans)23 b Fz(A)s(B)5 b(C)27 b FI(r)o(ectangle)17
b(en)h Fz(B)6 b FI(,)642 1550 y Fz(A)o(C)748 1515 y FG(2)797
1550 y FE(\306)20 b Fz(A)s(B)978 1515 y FG(2)1024 1550
y FE(\305)10 b Fz(B)5 b(C)1201 1515 y FG(2)642 1686 y
Fz(A)o(C)748 1652 y FG(2)797 1686 y FE(\306)14 b FI(6)906
1652 y FG(2)952 1686 y FE(\305)c FI(6)1057 1652 y FG(2)642
1822 y Fz(A)o(C)748 1788 y FG(2)797 1822 y FE(\306)k
FI(36)c FE(\305)g FI(36)642 1959 y Fz(A)o(C)748 1924
y FG(2)797 1959 y FE(\306)k FI(72)426 2083 y(\(I)o(nutile)k(de)f
(donner)6 b Fz(A)o(C)26 b FI(!\))p 0 TeXcolorgray 1946
2113 9 946 v 0 TeXcolorgray 1992 1251 a(Dans)c Fz(A)o(C)6
b(G)23 b FI(r)o(ectangle)17 b(en)f Fz(C)9 b FI(,)2774
1534 y Fz(A)o(G)2881 1499 y FG(2)2929 1534 y FE(\306)21
b Fz(A)o(C)3111 1499 y FG(2)3155 1534 y FE(\305)8 b Fz(C)e(G)3334
1499 y FG(2)2774 1670 y Fz(A)o(G)2881 1636 y FG(2)2929
1670 y FE(\306)15 b FI(72)10 b FE(\305)g FI(3)3194 1636
y FG(2)2774 1806 y Fz(A)o(G)2881 1772 y FG(2)2929 1806
y FE(\306)15 b FI(72)10 b FE(\305)g FI(9)2774 1942 y
Fz(A)o(G)2881 1908 y FG(2)2929 1942 y FE(\306)15 b FI(81)2809
2083 y Fz(A)o(G)k FE(\306)2999 2014 y(p)p 3062 2014 82
5 v 3062 2083 a FI(81)c FE(\306)g FI(9)-246 2270 y(C)o(onclusion)20
b(:)j Fz(A)o(G)d FE(\306)14 b FI(9.)-246 2333 y
SDict begin H.S end
 -246
2333 a -246 2333 a
SDict begin 12 H.A end
 -246 2333 a -246 2333 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246 2333
a 0 TeXcolorgray 125 x FJ(Ex)o(er)o(cice)g(12)p 0 TeXcolorgray
41 w FI(S)n(ur)21 b(la)e(\002gur)o(e)g(ci-dessous)i(\(qui)f(n)-6
b('est)21 b(pas)f(\340)g(l)o('\351chelle\),)i(le)f(segment)2305
2459 y([)2332 2458 y Fz(M)7 b(K)2471 2459 y FI(])2516
2458 y(mesur)o(e)21 b(3)f(cm,)g(le)h(segment)3397 2459
y([)3424 2458 y Fz(M)9 b(N)3570 2459 y FI(])3615 2458
y(mesur)o(e)21 b(5)f(cm)g(et)-246 2558 y Fz(h)f FE(\306)14
b FI(1,)8 b(2)19 b(cm.)p 0 TeXcolorgray 0 TeXcolorgray
1260 3670 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.16391 a add def
/d 0.0 a add neg def /h 124.05399 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 3670 a 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 28.45274 28.45274 28.45274
40.5244 40.5244 40.5244 40.5244 28.45274  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8  setgray  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 105.84424 55.76756 115.50156
48.52457 108.25856 38.86723 98.60124 46.11023  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8  setgray  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 28.45274 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 105.84424 55.76756 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1180 3736 a
tx@Dict begin { 88.20367 49.7923 } PutCoor PutBegin  end
 1180 3736 a 57 x Fz(h)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1180 3736 a
tx@Dict begin { 17.64055 27.31482 } PutCoor PutBegin  end

1180 3736 a -1 x Fz(K)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 142.26372 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1180 3736 a
tx@Dict begin { 145.10916 21.62392 } PutCoor PutBegin  end
 1180 3736 a 2 w
Fz(N)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 28.45274 113.81097
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1180 3736 a
tx@Dict begin { 31.86693 116.08723 } PutCoor PutBegin  end
 1180 3736 a 2 w Fz(M)1180 3736
y
tx@Dict begin  PutEnd  end
 1180 3736 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  [ 85.35823 28.45274
  false NArray  /DS 1.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1180 3736 a
tx@Dict begin { 79.66776 19.34766 } PutCoor PutBegin  end
 1180 3736 a Fz(P)1180 3736 y
tx@Dict begin  PutEnd  end
 1180 3736 a
2640 3670 a
currentpoint initclip moveto
 2640 3670 a -246 3722 a
SDict begin H.S end
 -246 3722 a -246
3722 a
SDict begin 12 H.A end
 -246 3722 a -246 3722 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 3722 a 0 TeXcolorgray
-141 3833 a FI(1.)p 0 TeXcolorgray 43 w FD(A)29 3845
y Fu(M)7 b(N)f(P)201 3833 y FE(\306)281 3800 y Fu(M)h(N)f
FF(\243)p Fu(h)p 280 3813 193 5 v 361 3862 a FG(2)497
3833 y FE(\306)576 3797 y FG(5)p FF(\243)p FG(1,2)p 576
3814 150 5 v 635 3862 a(2)750 3833 y FE(\306)14 b FI(3)k(cm)985
3803 y FG(2)1020 3833 y FI(.)-246 3873 y
SDict begin H.S end
 -246 3873 a
-246 3873 a
SDict begin 12 H.A end
 -246 3873 a -246 3873 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246 3873 a 0 TeXcolorgray
-141 3965 a FI(2.)p 0 TeXcolorgray 43 w(On)f(a)g(aussi)h
FD(A)400 3977 y Fu(M)7 b(N)f(P)572 3965 y FE(\306)651
3933 y Fu(P)i(N)e FF(\243)q Fu(M)g(K)p 651 3946 244 5
v 758 3994 a FG(2)905 3965 y FI(,)17 b(donc)g(3)e FE(\306)1268
3933 y Fu(P)8 b(N)e FF(\243)p FG(3)p 1268 3946 167 5
v 1336 3994 a(2)1445 3965 y FI(,)17 b(soit)1625 3982
y Fy(\001)1625 3965 y FI(3)11 b FE(\243)f FI(2)15 b FE(\306)f
Fz(P)c(N)19 b FE(\243)2064 3982 y Fy(\001)2064 3965 y
FI(3)f(;)f(et)h(donc)f Fz(P)10 b(N)23 b FE(\306)14 b
FI(2)k(cm.)-246 4005 y
SDict begin H.S end
 -246 4005 a -246 4005 a
SDict begin 12 H.A end
 -246 4005
a -246 4005 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 4005 a 0 TeXcolorgray -141 4087 a
FI(3.)p 0 TeXcolorgray 43 w(\(N)n(on)e(d\351taill\351.\))j(Il)e(faut)h
(calculer)f(successivement)k Fz(K)14 b(N)9 b FI(,)16
b(puis)j Fz(K)12 b(P)25 b FI(et)20 b Fz(M)7 b(P)-9 b
FI(.)-38 4198 y Fs(")p FI(On)18 b(ne)f(sait)h(pas)o(,)g(\340)g(ce)f
(stade)o(,)g(que)h Fz(P)25 b FI(est)18 b(le)g(milieu)h(de)1700
4199 y([)1726 4198 y Fz(K)14 b(N)1857 4199 y FI(])1889
4198 y(.)p 0 TeXcolorgray 7 4294 a(\225)p 0 TeXcolorgray
42 w(P)n(our)j Fz(K)d(N)9 b FI(,)16 b(on)i(utilise)h(le)f
(th\351or\350me)h(de)e(Pythagor)o(e)f(dans)i(le)f(tr)q(iangle)h
Fz(K)c(M)9 b(N)g FI(.)17 b(On)h(obtient)g Fz(K)c(N)22
b FE(\306)14 b FI(4)k(cm.)p 0 TeXcolorgray 7 4394 a(\225)p
0 TeXcolorgray 42 w Fz(K)12 b(P)22 b FE(\306)14 b Fz(K)g(N)k
FE(\241)10 b Fz(P)g(N)24 b FE(\306)14 b FI(4)c FE(\241)g
FI(2)15 b FE(\306)f FI(2)k(cm.)p 0 TeXcolorgray 7 4494
a(\225)p 0 TeXcolorgray 42 w(En\002n,)f(pour)h(calculer)g
Fz(P)10 b(M)d FI(,)18 b(on)g(utilise)h(le)f(th\351or\350me)g(de)g
(Pythagor)o(e)e(dans)h(le)h(tr)q(iangle)g Fz(K)c(M)7
b(P)-9 b FI(.)18 b(On)f(obtient)j Fz(M)7 b(P)23 b FE(\306)3556
4429 y(p)p 3619 4429 82 5 v 3619 4494 a FI(13)18 b(cm)q(.)-246
4573 y
SDict begin H.S end
 -246 4573 a -246 4573 a
SDict begin 12 H.A end
 -246 4573 a -246 4573
a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 4573 a -246 4589 a
SDict begin H.S end
 -246 4589 a -246 4589 a
SDict begin 12 H.A end
 -246
4589 a -246 4589 a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246 4589 a 0 TeXcolorgray 92 x FJ(Ex)o(er)o(cice)c
(13)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(Les)k(c\364t\351s)g(de)f(l)o('angle)i(droit)d(d)n('un)i(tr)q
(iangle)f(r)o(ectangle)h(mesur)o(ent)i Fz(a)h FI(et)d
Fz(b)q FI(,)g(l)o('hypot\351nuse)i(mesur)o(e)e Fz(c)5
b FI(.)p 0 TeXcolorgray 0 TeXcolorgray 1373 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88808 a add def
/d 0.0 a add neg def /h 107.55135 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1373
5646 a 873 5754 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
28.45274 85.35823 40.5244 97.42989 40.5244 97.42989 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 199.1692 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 113.81097 85.35823 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 28.45274 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
873 5754 a
tx@Dict begin { 147.95418 74.54604 } PutCoor PutBegin  end
 873 5754 a 38 x Fz(c)873 5754 y
tx@Dict begin  PutEnd  end
 873 5754 a
873 5754 a
tx@Dict begin { 131.45152 25.60728 } PutCoor PutBegin  end
 873 5754 a 875 5792 a Fz(a)873 5754 y
tx@Dict begin  PutEnd  end
 873
5754 a 873 5754 a
tx@Dict begin { 69.70912 71.13185 } PutCoor PutBegin  end
 873 5754 a 57 x Fz(b)873 5754 y
tx@Dict begin  PutEnd  end
 873
5754 a 2734 5646 a
currentpoint initclip moveto
 2734 5646 a 0 TeXcolorgray 1930 5895
a FI(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-38 -163 a FI(D)o('apr\350s)17 b(le)h(th\351or\350me)h(de)e(Pythagor)o
(e)o(,)f Fz(c)1202 -193 y FG(2)1252 -163 y FE(\306)g
Fz(a)1370 -193 y FG(2)1415 -163 y FE(\305)10 b Fz(b)1527
-193 y FG(2)1562 -163 y FI(,)17 b(donc)1824 24 y Fz(c)i
FE(\306)1947 -58 y Fr(p)p 2023 -58 241 5 v 2025 24 a
Fz(a)2072 0 y FG(2)2117 24 y FE(\305)10 b Fz(b)2229 0
y FG(2)2264 24 y FI(.)-246 98 y
SDict begin H.S end
 -246 98 a -246 98 a
SDict begin 12 H.A end
 -246
98 a -246 98 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246 98 a 0 TeXcolorgray -141 204 a FI(2.)p
0 TeXcolorgray 43 w(L)-10 b('af\002r)q(mation)p 0 TeXcolorgray
0 TeXcolorgray 1179 339 a(P)n(our)17 b(tous)h(nombr)o(es)g(positifs)j
Fz(a)g FI(et)d Fz(b)q FI(,)2353 269 y FE(p)p 2416 269
241 5 v 2418 339 a Fz(a)2465 315 y FG(2)2510 339 y FE(\305)10
b Fz(b)2622 315 y FG(2)2671 339 y FE(\306)16 b Fz(a)e
FE(\305)c Fz(b)q FI(.)-38 475 y(est)18 b(F)-5 b(A)l(USSE)9
b(!)19 b(V)-5 b(oici)18 b(deux)f(justi\002cations)i(:)p
0 TeXcolorgray 7 587 a(\225)p 0 TeXcolorgray 42 w FJ(P)m(ar)c(le)g
(calcul.)h FI(Il)g(suf\002t)i(de)g(donner)f(un)h(contr)o(e-exemple)h(:)
e(on)h(choisit)i Fz(a)e FE(\306)c FI(4)k(et)g Fz(b)g
FE(\306)c FI(3.)k(Dans)f(ce)g(cas)732 689 y Fr(p)p 809
689 V 811 771 a Fz(a)858 747 y FG(2)903 771 y FE(\305)10
b Fz(b)1015 747 y FG(2)1064 771 y FE(\306)1133 689 y
Fr(p)p 1209 689 227 5 v 82 x FI(4)1249 747 y FG(2)1295
771 y FE(\305)g FI(3)1400 747 y FG(2)1450 771 y FE(\306)1519
703 y(p)p 1582 703 197 5 v 1582 771 a FI(16)g FE(\305)g
FI(9)16 b FE(\306)1863 703 y(p)p 1926 703 82 5 v 1926
771 a FI(25)f FE(\306)g FI(5)146 b(est)18 b(diff\351r)o(ent)g(de)148
b Fz(a)14 b FE(\305)c Fz(b)18 b FE(\306)d FI(4)10 b FE(\305)g
FI(3)15 b FE(\306)f FI(7.)p 0 TeXcolorgray 7 939 a(\225)p
0 TeXcolorgray 42 w FJ(G\351om\351tr)q(iquement)q(.)782
869 y FE(p)p 845 869 241 5 v 847 939 a Fz(a)894 915 y
FG(2)939 939 y FE(\305)c Fz(b)1051 915 y FG(2)1105 939
y FI(est)19 b(la)g(longueur)g(de)g(l)o('hypot\351nuse)j
Fz(c)i FI(du)19 b(tr)q(iangle)f(r)o(ectangle)h(de)g(la)g(question)h(1)9
b(;)19 b(tandis)g(que)j Fz(a)15 b FE(\305)c Fz(b)80 1039
y FI(est)19 b(la)f(somme)h(des)g(longueurs)g(des)f(c\364t\351s)h(de)f
(l)o('angle)h(droit.)f(Or)g(cette)g(somme)i(est)f(str)q(ictement)h
(plus)f(gr)o(ande)f(que)g(celle)h(de)f(l)o('hypo-)80
1138 y(t\351nuse)o(,)g(puisque)i(le)d(chemin)i(le)f(plus)g(cour)q(t)f
(d)n('un)h(point)h(\340)e(un)g(autr)o(e)h(est)g(la)f(ligne)h(droite)o
(.)-246 1219 y
SDict begin H.S end
 -246 1219 a -246 1219 a
SDict begin 12 H.A end
 -246 1219 a -246
1219 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 1219 a 0 TeXcolorgray 110 x FJ(Ex)o(er)o(cice)c(14)p
0 TeXcolorgray 41 w FI(S)o(oit)24 b Fz(A)c FI(un)e(point)h(et)e
FA(\242)h FI(une)g(droite)f(du)g(plan.)h(Le)g(projet\351)g(or)q
(thogonal)g(de)23 b Fz(A)d FI(sur)d FA(\242)h FI(est)g(le)g(point)i
Fz(H)26 b FI(de)17 b FA(\242)h FI(tel)g(que)g(\()6 b
Fz(A)f(H)j FI(\))14 b FE(?)g FA(\242)p FI(.)-246 1372
y
SDict begin H.S end
 -246 1372 a -246 1372 a
SDict begin 12 H.A end
 -246 1372 a -246 1372 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246
1372 a 0 TeXcolorgray -141 1465 a FI(1.)p 0 TeXcolorgray
43 w(On)j(tr)o(ace)h(la)f(perpendiculair)o(e)i(\340)e
FA(\242)g FI(passant)i(par)k Fz(A)s FI(.)17 b(Elle)i(coupe)f
FA(\242)g FI(en)i Fz(H)8 b FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1296 2577 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 182.66698 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1296 2577 a 1910 2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.6 def /x1 3.82 def /dx x1 x sub
49 div def /F@pstplot ((--1.2932--1.42*x)/4.02)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.6 def /x1 3.82
def /dx x1 x sub 49 div def /F@pstplot ((-4.87--4.02*x)/-1.42)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial 1910 2426 a
tx@Dict begin { -43.24829 8.5359 } PutCoor PutBegin  end
 1910 2426 a 54 x
FA(\242)1910 2426 y
tx@Dict begin  PutEnd  end
 1910 2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1910 2426 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1910 2426 a 0.30196 0.30196 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1910 2426 a
tx@Dict begin  PutEnd  end
 1910
2426 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1910 2426
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1910 2426 a 0.30196 0.30196 1 TeXcolorrgb 2 w Fz(H)p
0 TeXcolorgray 1910 2426 a
tx@Dict begin  PutEnd  end
 1910 2426 a 2812 2577 a
currentpoint initclip moveto
 2812
2577 a -246 2613 a
SDict begin H.S end
 -246 2613 a -246 2613 a
SDict begin 12 H.A end
 -246 2613
a -246 2613 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 2613 a 0 TeXcolorgray -141 2725 a
FI(2.)p 0 TeXcolorgray 43 w(P)m(ar)16 b(constr)q(uction,)i(le)f(tr)q
(iangle)22 b Fz(A)5 b(M)k(H)26 b FI(est)17 b(r)o(ectangle)g(en)h
Fz(H)8 b FI(,)18 b(donc)e(son)h(hypot\351nuse)25 b Fz(A)5
b(M)24 b FI(est)17 b(str)q(ictement)h(plus)g(gr)o(ande)e(que)h(le)g
(c\364t\351)g(de)-38 2825 y(l)o('angle)h(droit)23 b Fz(A)5
b(H)26 b FI(\(c)n('est)17 b(le)h(m\352me)h(r)o(aisonnement)g(que)f
(celui)h(de)e(l)o('exer)o(cice)h(pr\351c\351dent\))g(:)1876
2993 y Fz(A)5 b(M)22 b FE(\310)e Fz(A)5 b(H)j FI(.)p
0 TeXcolorgray 0 TeXcolorgray 1253 4109 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1253 4109 a
1867 3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.6 def /x1 4.18 def /dx x1 x sub
49 div def /F@pstplot ((--1.2932--1.42*x)/4.02)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.6 def /x1 4.18
def /dx x1 x sub 49 div def /F@pstplot ((-4.87--4.02*x)/-1.42)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial
1867 3958 a
tx@Dict begin { -43.24829 8.5359 } PutCoor PutBegin  end
 1867 3958 a 53 x FA(\242)1867 3958 y
tx@Dict begin  PutEnd  end
 1867
3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5.12128 83.08195 81.44693 37.92294
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867
3958 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1 TeXcolorrgb 2 w Fz(H)p
0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867 3958 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 81.44693 37.92294   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 3958 a
tx@Dict begin { 83.65112 43.81703 } PutCoor PutBegin  end
 1867 3958 a 0.30196 0.30196 1
TeXcolorrgb 2 w Fz(M)p 0 TeXcolorgray 1867 3958 a
tx@Dict begin  PutEnd  end
 1867
3958 a 2855 4109 a
currentpoint initclip moveto
 2855 4109 a -246 4145 a
SDict begin H.S end
 -246 4145
a -246 4145 a
SDict begin 12 H.A end
 -246 4145 a -246 4145 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246 4145 a 0 TeXcolorgray
-141 4257 a FI(3.)p 0 TeXcolorgray 43 w(Le)18 b(segment)374
4258 y([)406 4257 y Fz(A)5 b(H)526 4258 y FI(])568 4257
y(est)18 b(la)g(hauteur)p 0 0 1 TeXcolorrgb 1048 4257
a
SDict begin H.S end
 1048 4257 a -30 x FG(2)1084 4257 y
SDict begin 12 H.L end
 1084 4257 a 1084
4257 a
SDict begin [/Subtype /Link/Dest (Hfootnote.2) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1084 4257 a 0 TeXcolorgray 17 w FI(issue)h(de)k
Fz(A)d FI(dans)d(le)h(tr)q(iangle)24 b Fz(A)s(B)5 b(C)k
FI(.)p 0 TeXcolorgray 0 TeXcolorgray 1253 5371 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 125.19188 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1253
5371 a 1867 5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 27.77068
18.96255 23.74997 30.34479 35.1322 34.36548 39.15291 22.98326  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5.12128 83.08195 81.44693 37.92294
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -36.14725 -3.61563 5.12128 83.08195
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 81.44693 37.92294 -36.14725 -3.61563
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 5.12128 83.08195 27.77068
18.96255   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 5.12128 83.08195   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220 a
tx@Dict begin { 7.39755 88.77242 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867
5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 27.77068 18.96255   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220
a
tx@Dict begin { 19.91682 6.25963 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1 TeXcolorrgb 2 w Fz(H)p
0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867 5220 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 81.44693 37.92294   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1867 5220 a
tx@Dict begin { 83.65112 43.81703 } PutCoor PutBegin  end
 1867 5220 a 0.30196 0.30196 1
TeXcolorrgb 1865 5219 a Fz(C)p 0 TeXcolorgray 1867 5220
a
tx@Dict begin  PutEnd  end
 1867 5220 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.49019 0.49019 1  setrgbcolor
 [ -36.14725 -3.61563   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1867 5220 a
tx@Dict begin { -46.94684 1.13791 } PutCoor PutBegin  end
 1867 5220 a 0.49019 0.49019 1 TeXcolorrgb
Fz(B)p 0 TeXcolorgray 1867 5220 a
tx@Dict begin  PutEnd  end
 1867 5220 a 2855 5371
a
currentpoint initclip moveto
 2855 5371 a 0 TeXcolorgray -246 5481 1757 4 v -154
5557 a Ft(2)q(.)p 0 TeXcolorgray -76 5557 a
SDict begin H.S end
 -76 5557
a -76 5557 a
SDict begin H.R end
 -76 5557 a -76 5557 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.2) cvn /DEST pdfmark
end
 -76 5557 a 0 TeXcolorgray
Ft(Le)k(mot)g Fq(hauteur)h Ft(est)f(polys\351mique)g(\(il)g(a)f
(plusieurs)g(sens\))g(:)h(le)g(segment)1699 5558 y([)1724
5557 y Fq(A)5 b(H)1820 5558 y Ft(])1853 5557 y(peut)12
b(\352tr)o(e)h(appel\351)h Fq(hauteur)p Ft(,)d(la)i(droite)2797
5558 y(\()2823 5557 y Fq(A)5 b(H)2919 5558 y Ft(\))2953
5557 y(peut)13 b(\351galement)g(\352tr)o(e)g(appel\351e)h
Fq(hauteur)c Ft(;)h(en\002n)-246 5646 y(la)j(longueur)19
b Fq(A)5 b(H)20 b Ft(peut)14 b(elle)h(aussi)e(\352tr)o(e)h(appel\351e)h
Fq(hauteur)h Ft(\226)d(c)n('est)h(cette)h(longueur)l(,)g(par)e(exemple)
o(,)j(que)e(l)o('on)g(r)o(etrouve)g(dans)e(la)i(formule)3108
5620 y Fm(B)5 b Fl(\243)p Fm(h)p 3108 5631 110 4 v 3149
5669 a Fn(2)3241 5646 y Ft(pour)14 b(l)o('air)o(e)g(du)f(triangle)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1930 5895 a FI(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(15)p 0 TeXcolorgray 41 w FI(On)j(r\351sout)i(les)f(\351quations)h(:)
-1 455 y Fz(x)c FE(\305)10 b FI(7)15 b FE(\306)g FI(18)-97
580 y Fz(x)g FE(\305)22 596 y Fy(\001)22 580 y FI(7)p
1 0 0 TeXcolorrgb 2 w FE(\241)119 596 y Fy(\001)119 580
y FI(7)p 0 TeXcolorgray 14 w FE(\306)g FI(18)p 1 0 0
TeXcolorrgb FE(\241)p FI(7)p 0 TeXcolorgray 115 704 a
Fz(x)k FE(\306)c FI(11)-246 1240 y(La)j(solution)h(est)h
Fz(x)f FE(\306)c FI(11)p 0 TeXcolorgray 604 1258 9 1304
v 0 TeXcolorgray 872 315 a(3)r Fz(x)g FE(\305)10 b FI(4)15
b FE(\306)g FI(19)776 439 y(3)r Fz(x)g FE(\305)937 455
y Fy(\001)937 439 y FI(4)p 1 0 0 TeXcolorrgb 2 w FE(\241)1034
455 y Fy(\001)1034 439 y FI(4)p 0 TeXcolorgray 14 w FE(\306)g
FI(19)p 1 0 0 TeXcolorrgb FE(\241)p FI(4)p 0 TeXcolorgray
987 564 a(3)r Fz(x)20 b FE(\306)15 b FI(15)977 710 y
Fy(\001)977 694 y FI(3)s Fz(x)p 977 731 87 5 v 0 0 1
TeXcolorrgb 1001 827 a Fy(\001)1001 811 y FI(3)p 0 TeXcolorgray
1088 750 a FE(\306)1168 694 y FI(15)p 1168 731 82 5 v
0 0 1 TeXcolorrgb 1188 807 a(3)p 0 TeXcolorgray 1030
914 a Fz(x)k FE(\306)c FI(5)649 1240 y(La)j(solution)h(est)h
Fz(x)f FE(\306)c FI(5.)p 0 TeXcolorgray 1498 1258 9 1304
v 0 TeXcolorgray 1752 201 a(3,)8 b(5)r Fz(x)15 b FE(\241)10
b FI(9)17 b FE(\306)d FI(5)1657 325 y(3,)8 b(5)r Fz(x)15
b FE(\241)1886 341 y Fy(\001)1886 325 y FI(9)p 1 0 0
TeXcolorrgb 2 w FE(\305)1983 341 y Fy(\001)1983 325 y
FI(9)p 0 TeXcolorgray 15 w FE(\306)f FI(5)p 1 0 0 TeXcolorrgb
FE(\305)p FI(9)p 0 TeXcolorgray 1868 450 a(3,)8 b(5)r
Fz(x)21 b FE(\306)14 b FI(14)1850 576 y Fy(\010)1893
554 y(\010)1858 565 y FI(3,)8 b(5)s Fz(x)p 1858 601 156
5 v 0 0 1 TeXcolorrgb 1873 689 a Fy(\010)1916 668 y(\010)1881
678 y FI(3,)g(5)p 0 TeXcolorgray 2038 621 a FE(\306)2131
565 y FI(14)p 2117 601 110 5 v 0 0 1 TeXcolorrgb 2117
678 a(3,)g(5)p 0 TeXcolorgray 1979 829 a Fz(x)20 b FE(\306)2131
773 y FI(14)p 2117 810 V 2117 886 a(3,)8 b(5)1544 1041
y(Or)1674 1008 y FG(14)p 1666 1021 77 5 v 1666 1070 a(3,5)1774
1041 y FE(\306)1868 1008 y FG(14)p FF(\243)p FG(2)p 1860
1021 150 5 v 1860 1070 a(3,5)p FF(\243)p FG(2)2041 1041
y FE(\306)2127 1008 y FG(28)p 2127 1021 62 5 v 2142 1070
a(7)2219 1041 y FE(\306)21 b FI(4,)1544 1141 y(donc)e(la)g(solution)h
(est)i Fz(x)f FE(\306)1544 1240 y FI(4.)p 0 TeXcolorgray
2393 1258 9 1304 v 0 TeXcolorgray 2595 214 a Fz(x)15
b FE(\305)10 b FI(1)16 b FE(\306)e(\241)p FI(2)r Fz(x)h
FE(\241)10 b FI(5)2453 339 y Fz(x)15 b FE(\305)10 b FI(1)p
0 1 0 TeXcolorrgb FE(\305)p FI(2)r Fz(x)p 0 TeXcolorgray
22 w FE(\306)2831 333 y Fy(\030)2906 314 y(\030)2839
339 y FE(\241)p FI(2)r Fz(x)16 b FE(\241)10 b FI(5)p
0 1 0 TeXcolorrgb FE(\305)-8 b Fy(\010)3163 329 y(\010)3151
339 y FI(2)r Fz(x)p 0 TeXcolorgray 2553 463 a FI(3)r
Fz(x)15 b FE(\305)10 b FI(1)16 b FE(\306)e(\241)p FI(5)2457
588 y(3)r Fz(x)h FE(\305)2618 604 y Fy(\001)2618 588
y FI(1)p 1 0 0 TeXcolorrgb 2 w FE(\241)2715 604 y Fy(\001)2715
588 y FI(1)p 0 TeXcolorgray 15 w FE(\306)f(\241)p FI(5)p
1 0 0 TeXcolorrgb FE(\241)p FI(1)p 0 TeXcolorgray 2669
712 a(3)r Fz(x)20 b FE(\306)14 b(\241)p FI(6)2658 858
y Fy(\001)2659 842 y FI(3)r Fz(x)p 2659 879 87 5 v 0 0 1
TeXcolorrgb 2682 976 a Fy(\001)2682 959 y FI(3)p 0 TeXcolorgray
2770 899 a FE(\306)2849 842 y(\241)p FI(6)p 2849 879
96 5 v 0 0 1 TeXcolorrgb 2876 956 a(3)p 0 TeXcolorgray
2711 1063 a Fz(x)20 b FE(\306)14 b(\241)p FI(2)2439 1240
y(La)j(solution)j(est)g Fz(x)f FE(\306)14 b(\241)p FI(2.)p
0 TeXcolorgray 3288 1258 9 1304 v 0 TeXcolorgray 3476
222 a FE(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(4)16 b
FE(\306)e FI(3)r Fz(x)h FE(\241)10 b FI(6)3334 347 y
FE(\241)p FI(2)r Fz(x)15 b FE(\305)10 b FI(4)p 0 1 0
TeXcolorrgb FE(\241)p FI(3)r Fz(x)p 0 TeXcolorgray 22
w FE(\306)c Fy(\010)3829 337 y(\010)3817 347 y FI(3)r
Fz(x)16 b FE(\241)10 b FI(6)p 0 1 0 TeXcolorrgb FE(\241)-8
b Fy(\010)4086 337 y(\010)4074 347 y FI(3)r Fz(x)p 0
TeXcolorgray 3476 471 a FE(\241)p FI(5)r Fz(x)15 b FE(\305)10
b FI(4)16 b FE(\306)e(\241)p FI(6)3380 596 y FE(\241)p
FI(5)r Fz(x)h FE(\305)3596 612 y Fy(\001)3596 596 y FI(4)p
1 0 0 TeXcolorrgb 2 w FE(\241)3693 612 y Fy(\001)3693
596 y FI(4)p 0 TeXcolorgray 15 w FE(\306)f(\241)p FI(6)p
1 0 0 TeXcolorrgb FE(\241)p FI(4)p 0 TeXcolorgray 3591
720 a FE(\241)p FI(5)r Fz(x)21 b FE(\306)14 b(\241)p
FI(10)3573 839 y Fy(\010)3602 825 y(\010)3582 837 y FE(\241)p
FI(5)r Fz(x)p 3582 874 142 5 v 0 0 1 TeXcolorrgb 3597
952 a Fy(\010)3625 938 y(\010)3605 950 y FE(\241)p FI(5)p
0 TeXcolorgray 3748 893 a FE(\306)3827 837 y(\241)p FI(10)p
3827 874 136 5 v 0 0 1 TeXcolorrgb 3847 950 a FE(\241)p
FI(5)p 0 TeXcolorgray 3689 1053 a Fz(x)20 b FE(\306)14
b FI(2)3334 1240 y(La)j(solution)i(est)h Fz(x)g FE(\306)14
b FI(2.)-246 1340 y
SDict begin H.S end
 -246 1340 a -246 1340 a
SDict begin 12 H.A end
 -246 1340
a -246 1340 a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 1340 a 0 TeXcolorgray 100 x FJ(Ex)o(er)o(cice)g(16)p
0 TeXcolorgray 41 w FI(Les)k(deux)g(plateaux)h(de)e(la)g(balance)h
(ci-dessous)g(sont)g(en)g(\351quilibr)o(e)o(.)g(Les)g(poids)g(noirs)f
(ont)h(tous)g(la)g(m\352me)g(masse)j Fz(M)k FI(kg.)p
0 TeXcolorgray 0 TeXcolorgray 1213 2283 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 177.54483 a add def
/d 0.0 a add neg def /h 88.31741 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1213 2283 a
1241 2438 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 164.74118 72.15639 164.74118
83.53754 150.51482 83.53754 150.51482 72.15639  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 16.787 71.24605 16.787
82.6272 2.56064 82.6272 2.56064 71.24605  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 36.98865 71.24605 36.98865
82.6272 22.76227 82.6272 22.76227 71.24605  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 56.3363 71.47354 56.3363
82.85469 42.10992 82.85469 42.10992 71.47354  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 114.94888 72.61172 137.71117
72.61172 137.71117 95.60152 114.94888 95.37401  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 42.67911 102.43027 42.67911
91.04913 14.22636 91.04913 14.22636 102.43027  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 68.28685 85.35823 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 68.28685 85.35823 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 68.28685 0.0 68.28685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 68.28685 113.81097 68.28685
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 150.51482 83.53754 150.51482 72.15639
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 164.74118 83.53754 150.51482 83.53754
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 164.74118 72.15639 164.74118 83.53754
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 150.51482 72.15639 164.74118 72.15639
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2.56064 82.6272 2.56064 71.24605  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 16.787 82.6272 2.56064 82.6272   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 16.787 71.24605 16.787 82.6272   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2.56064 71.24605 16.787 71.24605  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76227 82.6272 22.76227 71.24605
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 36.98865 82.6272 22.76227 82.6272 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 36.98865 71.24605 36.98865 82.6272
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76227 71.24605 36.98865 71.24605
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.10992 82.85469 42.10992 71.47354
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.3363 82.85469 42.10992 82.85469
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.3363 71.47354 56.3363 82.85469 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.10992 71.47354 56.3363 71.47354
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 137.71117 95.60152 114.94888 95.37401
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 137.71117 72.61172 137.71117 95.60152
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 114.94888 72.61172 137.71117 72.61172
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 114.94888 95.37401 114.94888 72.61172
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1241 2438 a
tx@Dict begin { 115.23369 86.95209 } PutCoor PutBegin  end
 1241 2438 a 57 x FI(10)19 b(kg)1241 2438
y
tx@Dict begin  PutEnd  end
 1241 2438 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 14.22636 91.04913 14.22636 102.43027
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 91.04913 14.22636 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 102.43027 42.67911 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 14.22636 102.43027 42.67911 102.43027
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1241 2438 a
tx@Dict begin { 21.33955 100.60924 } PutCoor PutBegin  end
 1241 2438 a 57 x FI(7)f(kg)1241 2438 y
tx@Dict begin  PutEnd  end
 1241
2438 a 2687 2283 a
currentpoint initclip moveto
 2687 2283 a -246 2466 a FI(Le)g(fait)g(que)g(la)g
(balance)f(soit)h(en)g(\351quilibr)o(e)g(se)f(tr)o(aduit)h(par)f(l)o
('\351quation)1662 2648 y(3)r Fz(M)i FE(\305)10 b FI(7)k
FE(\306)h FI(10)10 b FE(\305)i Fz(M)7 b FI(.)-246 2831
y(On)18 b(la)f(r\351sout)h(:)1538 3113 y(3)r Fz(M)g FE(\305)10
b FI(7)p 0 1 0 TeXcolorrgb FE(\241)r Fz(M)p 0 TeXcolorgray
23 w FE(\306)k FI(10)c FE(\305)2139 3123 y Fy(\032)2153
3113 y(\032)-87 b Fz(M)p 0 1 0 TeXcolorrgb 9 w FE(\241)2275
3123 y Fy(\032)2288 3113 y(\032)h Fz(M)p 0 TeXcolorgray
1672 3238 a FI(2)r Fz(M)19 b FE(\305)10 b FI(7)15 b FE(\306)f
FI(10)1577 3362 y(2)r Fz(M)k FE(\305)1772 3378 y Fy(\001)1772
3362 y FI(7)p 1 0 0 TeXcolorrgb 1 w FE(\241)1868 3378
y Fy(\001)1868 3362 y FI(7)p 0 TeXcolorgray 15 w FE(\306)c
FI(10)p 1 0 0 TeXcolorrgb FE(\241)p FI(7)p 0 TeXcolorgray
1788 3487 a(2)r Fz(M)23 b FE(\306)14 b FI(3)1778 3633
y Fy(\001)1778 3617 y FI(2)s Fz(M)p 1778 3654 121 5 v
0 0 1 TeXcolorrgb 1818 3750 a Fy(\001)1818 3734 y FI(2)p
0 TeXcolorgray 1923 3673 a FE(\306)2002 3617 y FI(3)p
2002 3654 41 5 v 0 0 1 TeXcolorrgb 2002 3730 a(2)p 0
TeXcolorgray 1831 3837 a Fz(M)22 b FE(\306)14 b FI(1,)8
b(5)-246 4020 y(C)o(onclusion)20 b(:)d(la)g(solution)i(est)h
Fz(M)i FE(\306)15 b FI(1,)8 b(5.)-246 4097 y
SDict begin H.S end
 -246 4097
a -246 4097 a
SDict begin 12 H.A end
 -246 4097 a -246 4097 a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 4097 a 0 TeXcolorgray
122 x FJ(Ex)o(er)o(cice)14 b(17)p 0 TeXcolorgray 41 w
FI(Le)j(stade)g(des)g(Gones)h(compte)g(15)12 b(000)19
b(places)o(.)e(Il)f(y)g(a)j Fz(x)j FI(places)17 b(dans)g(les)g(vir)o
(ages)h(et)f(les)g(autr)o(es)g(dans)f(les)i(tr)q(ibunes)o(.)f(U)m(ne)g
(place)g(en)-246 4319 y(vir)o(age)h(co\373te)g(15)g FH(")g
FI(et)f(une)h(place)g(dans)g(les)g(tr)q(ibunes)g(co\373te)g(25)g
FH(")p FI(.)-246 4468 y(A)n(ujour)o(d)n('hui,)h(le)f(stade)f(est)h
(plein)h(et)e(la)h(r)o(ecette)f(est)h(de)g(295)12 b(000)20
b FH(")p FI(.)-246 4516 y
SDict begin H.S end
 -246 4516 a -246 4516 a
SDict begin 12 H.A end
 -246
4516 a -246 4516 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 4516 a 0 TeXcolorgray -141 4612
a FI(1.)p 0 TeXcolorgray 43 w(Il)d(y)f(a)k Fz(x)i FI(places)c(dans)g
(les)g(vir)o(ages)o(,)g(donc)f(\(15)8 b(000)i FE(\241)i
Fz(x)5 b FI(\))20 b(places)f(dans)e(les)h(tr)q(ibunes)o(.)g(La)f(r)o
(ecette)h(totale)g(en)g FH(")f FI(est)h(donc)1634 4794
y(15)10 b FE(\243)i Fz(x)j FE(\305)10 b FI(25)g FE(\243)g
FI(\(15)e(000)i FE(\241)i Fz(x)5 b FI(\).)-38 4977 y(C)o(omme)19
b(cette)f(r)o(ecette)f(est)h(295)12 b(000)21 b FH(")p
FI(,)e Fz(x)k FI(est)18 b(solution)h(de)e(l)o('\351quation)1542
5160 y(15)r Fz(x)e FE(\305)10 b FI(25\(15)e(000)i FE(\241)i
Fz(x)5 b FI(\))19 b FE(\306)c FI(295)8 b(000.)-246 5252
y
SDict begin H.S end
 -246 5252 a -246 5252 a
SDict begin 12 H.A end
 -246 5252 a -246 5252 a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246
5252 a 0 TeXcolorgray -141 5357 a FI(2.)p 0 TeXcolorgray
43 w(On)17 b(r\351sout)h(l)o('\351quation)i(de)d(la)g(question)i
(pr\351c\351dente)g(:)p 0 TeXcolorgray 1930 5895 a(8)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1542 20 a FI(15)r Fz(x)15 b FE(\305)10 b FI(25\(15)e(000)i
FE(\241)i Fz(x)5 b FI(\))20 b FE(\306)14 b FI(295)8 b(000)1255
145 y(15)r Fz(x)15 b FE(\305)10 b FI(25)g FE(\243)g FI(15)e(000)i
FE(\305)g FI(2)q(5)g FE(\243)h FI(\()p FE(\241)r Fz(x)5
b FI(\))20 b FE(\306)14 b FI(295)8 b(000)1555 269 y(15)r
Fz(x)15 b FE(\305)10 b FI(375)e(000)i FE(\241)g FI(25)r
Fz(x)26 b FE(\306)14 b FI(295)8 b(000)1703 394 y FE(\241)p
FI(10)r Fz(x)15 b FE(\305)10 b FI(375)e(000)19 b FE(\306)14
b FI(295)8 b(000)1396 518 y FE(\241)p FI(10)r Fz(x)15
b FE(\305)1644 526 y Fy(\030)1729 505 y(\030)1812 485
y(\030)1831 480 y(\030)1652 518 y FI(375)8 b(000)p 1 0 0
TeXcolorrgb 5 w FE(\241)1952 526 y Fy(\030)2035 505 y(\030)2118
485 y(\030)2137 480 y(\030)1960 518 y FI(375)g(000)p
0 TeXcolorgray 18 w FE(\306)14 b FI(295)8 b(000)p 1 0 0
TeXcolorrgb FE(\241)p FI(375)g(000)p 0 TeXcolorgray 2029
643 a FE(\241)p FI(10)r Fz(x)21 b FE(\306)14 b(\241)p
FI(80)8 b(000)2011 751 y Fy(\030)2080 733 y(\030)p 0 0 1
TeXcolorrgb 2019 757 a FE(\241)p FI(10)p 0 TeXcolorgray
3 w Fz(x)p 2019 794 183 5 v 0 0 1 TeXcolorrgb 2034 864
a Fy(\030)2104 846 y(\030)2042 870 y FE(\241)p FI(10)p
0 TeXcolorgray 2226 813 a FE(\306)2305 757 y(\241)p FI(80)g(000)p
2305 794 266 5 v 0 0 1 TeXcolorrgb 2370 870 a FE(\241)p
FI(10)p 0 TeXcolorgray 2167 973 a Fz(x)20 b FE(\306)14
b FI(8000.)-38 1220 y(C)o(onclusion)19 b(:)f(il)f(y)g(a)i
Fz(x)h FE(\306)14 b FI(8)8 b(000)19 b(places)g(dans)e(les)h(vir)o(ages)
g(\(et)g(donc)f(7)12 b(000)19 b(dans)e(les)i(tr)q(ibunes\).)-246
1306 y
SDict begin H.S end
 -246 1306 a -246 1306 a
SDict begin 12 H.A end
 -246 1306 a -246 1306
a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 1306 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)14
b(18)p 0 TeXcolorgray 598 1634 a Fz(A)j FE(\306)742 1578
y FI(5)p 742 1615 41 5 v 742 1691 a(6)803 1634 y FE(\305)878
1578 y FI(2)p 878 1615 V 878 1691 a(3)943 1634 y FE(\306)1022
1578 y FI(5)p 1022 1615 V 1022 1691 a(6)1083 1634 y FE(\305)1158
1578 y FI(2)10 b FE(\243)g FI(2)p 1158 1615 157 5 v 1158
1691 a(3)g FE(\243)g FI(2)1338 1634 y FE(\306)1417 1578
y FI(5)p 1417 1615 41 5 v 1417 1691 a(6)1478 1634 y FE(\305)1553
1578 y FI(4)p 1553 1615 V 1553 1691 a(6)1618 1634 y FE(\306)1697
1578 y FI(5)g FE(\305)g FI(4)p 1697 1615 157 5 v 1755
1691 a(6)1877 1634 y FE(\306)1956 1578 y FI(9)p 1956
1615 41 5 v 1956 1691 a(6)2021 1634 y FE(\306)2100 1578
y FI(3)g FE(\243)2215 1594 y Fy(\001)2215 1578 y FI(3)p
2100 1615 157 5 v 2100 1695 a(2)g FE(\243)2215 1711 y
Fy(\001)2215 1695 y FI(3)2281 1634 y FE(\306)2360 1578
y FI(3)p 2360 1615 41 5 v 2360 1691 a(2)593 1836 y Fz(B)22
b FE(\306)742 1780 y FI(3)p 742 1817 V 742 1893 a(4)803
1836 y FE(\241)878 1780 y FI(1)p 878 1817 V 878 1893
a(6)943 1836 y FE(\306)1022 1780 y FI(3)10 b FE(\243)g
FI(3)p 1022 1817 157 5 v 1022 1893 a(4)g FE(\243)g FI(3)1198
1836 y FE(\241)1273 1780 y FI(1)g FE(\243)g FI(2)p 1273
1817 V 1273 1893 a(6)g FE(\243)g FI(2)1454 1836 y FE(\306)1553
1780 y FI(9)p 1533 1817 82 5 v 1533 1893 a(12)1634 1836
y FE(\241)1729 1780 y FI(2)p 1709 1817 V 1709 1893 a(12)1814
1836 y FE(\306)1893 1780 y FI(9)g FE(\241)g FI(2)p 1893
1817 157 5 v 1931 1893 a(12)2074 1836 y FE(\306)2173
1780 y FI(7)p 2153 1817 82 5 v 2153 1893 a(12)590 2034
y Fz(C)23 b FE(\306)14 b FI(2)c FE(\305)858 1978 y FI(1)p
858 2015 41 5 v 858 2091 a(5)923 2034 y FE(\306)1002
1978 y FI(2)p 1002 2015 V 1002 2091 a(1)1063 2034 y FE(\305)1138
1978 y FI(1)p 1138 2015 V 1138 2091 a(5)1202 2034 y FE(\306)1281
1978 y FI(2)g FE(\243)g FI(5)p 1281 2015 157 5 v 1281
2091 a(1)g FE(\243)g FI(5)1458 2034 y FE(\305)1533 1978
y FI(1)p 1533 2015 41 5 v 1533 2091 a(5)1598 2034 y FE(\306)1677
1978 y FI(10)p 1677 2015 82 5 v 1697 2091 a(5)1778 2034
y FE(\305)1853 1978 y FI(1)p 1853 2015 41 5 v 1853 2091
a(5)1918 2034 y FE(\306)1997 1978 y FI(11)p 1997 2015
82 5 v 2017 2091 a(5)585 2243 y Fz(D)20 b FE(\306)763
2187 y FI(3)p 742 2224 V 742 2300 a(10)844 2243 y FE(\243)919
2187 y FI(5)p 919 2224 41 5 v 919 2300 a(6)983 2243 y
FE(\306)1083 2187 y FI(3)10 b FE(\243)g FI(5)p 1062 2224
197 5 v 1062 2300 a(10)g FE(\243)g FI(6)1283 2243 y FE(\306)1362
2187 y FI(15)p 1362 2224 82 5 v 1362 2300 a(60)1468 2243
y FE(\306)1596 2198 y Fy(\032)1611 2187 y(\032)-89 b
FI(15)p 1547 2224 197 5 v 1539 2311 a Fy(\032)1553 2300
y(\032)g FI(15)11 b FE(\243)f FI(4)1768 2243 y FE(\306)1847
2187 y FI(1)p 1847 2224 41 5 v 1847 2300 a(4)596 2457
y Fz(E)21 b FE(\306)14 b FI(2)c FE(\243)858 2401 y FI(5)p
858 2437 V 858 2514 a(6)919 2457 y FE(\241)994 2401 y
FI(4)p 994 2437 V 994 2514 a(9)1059 2457 y FE(\306)1138
2401 y FI(2)g FE(\243)g FI(5)p 1138 2437 157 5 v 1196
2514 a(6)1314 2457 y FE(\241)1389 2401 y FI(4)p 1389
2437 41 5 v 1389 2514 a(9)1454 2457 y FE(\306)1533 2401
y FI(10)g FE(\243)g FI(3)p 1533 2437 197 5 v 1553 2514
a(6)g FE(\243)g FI(3)1750 2457 y FE(\241)1825 2401 y
FI(4)g FE(\243)g FI(2)p 1825 2437 157 5 v 1825 2514 a(9)g
FE(\243)g FI(2)2005 2457 y FE(\306)2084 2401 y FI(30)p
2084 2437 82 5 v 2084 2514 a(18)2186 2457 y FE(\241)2281
2401 y FI(8)p 2261 2437 V 2261 2514 a(18)2366 2457 y
FE(\306)2445 2401 y FI(30)g FE(\241)g FI(8)p 2445 2437
197 5 v 2503 2514 a(18)2666 2457 y FE(\306)2745 2401
y FI(22)p 2745 2437 82 5 v 2745 2514 a(18)2850 2457 y
FE(\306)2929 2401 y FI(11)g FE(\243)3084 2417 y Fy(\001)3084
2401 y FI(2)p 2929 2437 197 5 v 2950 2518 a(9)g FE(\243)3065
2534 y Fy(\001)3065 2518 y FI(2)3150 2457 y FE(\306)3230
2401 y FI(11)p 3230 2437 82 5 v 3250 2514 a(9)595 2675
y Fz(F)24 b FE(\306)14 b FI(4)c FE(\241)g FI(3)g FE(\243)974
2618 y FI(5)p 974 2655 41 5 v 974 2732 a(6)1039 2675
y FE(\306)1118 2618 y FI(4)p 1118 2655 V 1118 2732 a(1)1178
2675 y FE(\241)1253 2618 y FI(3)g FE(\243)g FI(5)p 1253
2655 157 5 v 1311 2732 a(6)1434 2675 y FE(\306)1513 2618
y FI(4)g FE(\243)g FI(6)p 1513 2655 V 1513 2732 a(1)g
FE(\243)g FI(6)1689 2675 y FE(\241)1764 2618 y FI(15)p
1764 2655 82 5 v 1785 2732 a(6)1870 2675 y FE(\306)1949
2618 y FI(24)p 1949 2655 V 1969 2732 a(6)2050 2675 y
FE(\241)2125 2618 y FI(15)p 2125 2655 V 2145 2732 a(6)2230
2675 y FE(\306)2309 2618 y FI(24)g FE(\241)g FI(15)p
2309 2655 238 5 v 2408 2732 a(6)2571 2675 y FE(\306)2650
2618 y FI(9)p 2650 2655 41 5 v 2650 2732 a(6)2715 2675
y FE(\306)2794 2618 y FI(3)g FE(\243)2909 2634 y Fy(\001)2909
2618 y FI(3)p 2794 2655 157 5 v 2794 2735 a(2)g FE(\243)2909
2752 y Fy(\001)2909 2735 y FI(3)2974 2675 y FE(\306)3053
2618 y FI(3)p 3053 2655 41 5 v 3053 2732 a(2)589 2887
y Fz(G)20 b FE(\306)763 2831 y FI(6)p 742 2868 82 5 v
742 2944 a(10)844 2887 y FE(\243)919 2831 y FI(15)p 919
2868 V 939 2944 a(8)1024 2887 y FE(\306)1103 2831 y FI(6)10
b FE(\243)g FI(15)p 1103 2868 197 5 v 1103 2944 a(10)g
FE(\243)g FI(8)1324 2887 y FE(\306)1403 2831 y FI(90)p
1403 2868 82 5 v 1403 2944 a(80)1508 2887 y FE(\306)1587
2831 y FI(9)g FE(\243)1694 2842 y Fy(\032)1709 2831 y(\032)-90
b FI(10)p 1587 2868 197 5 v 1587 2944 a(8)10 b FE(\243)1694
2955 y Fy(\032)1709 2944 y(\032)-90 b FI(10)1808 2887
y FE(\306)1887 2831 y FI(9)p 1887 2868 41 5 v 1887 2944
a(8)581 3105 y Fz(H)23 b FE(\306)732 2995 y Fr(\265)777
3049 y FI(2)p 777 3086 V 777 3162 a(3)827 2995 y Fr(\266)861
3017 y FG(2)910 3105 y FE(\306)989 3049 y FI(2)p 989
3086 V 989 3162 a(3)1050 3105 y FE(\243)1125 3049 y FI(2)p
1125 3086 V 1125 3162 a(3)1190 3105 y FE(\306)1269 3049
y FI(2)10 b FE(\243)g FI(2)p 1269 3086 157 5 v 1269 3162
a(3)g FE(\243)g FI(3)1449 3105 y FE(\306)1529 3049 y
FI(4)p 1529 3086 41 5 v 1529 3162 a(9)-246 3259 y
SDict begin H.S end
 -246
3259 a -246 3259 a
SDict begin 12 H.A end
 -246 3259 a -246 3259 a
SDict begin [/View [/XYZ H.V]/Dest (exo.19) cvn /DEST pdfmark end
 -246 3259
a 0 TeXcolorgray 81 x FJ(Ex)o(er)o(cice)k(19)p 0 TeXcolorgray
41 w FI(Le)k(p\350r)o(e)f(donne)h(le)g(tiers)g(de)f(la)g(somme)i
(n\351cessair)o(e)f(et)g(le)g(petit-fr\350r)o(e)g(donne)g(le)g(quar)q
(t,)f(donc)g(\340)g(eux)h(deux)g(ils)g(en)f(donnent)1324
3500 y(1)p 1324 3537 41 5 v 1324 3613 a(3)1384 3556 y
FE(\305)1460 3500 y FI(1)p 1460 3537 V 1460 3613 a(4)1524
3556 y FE(\306)1603 3500 y FI(1)10 b FE(\243)g FI(4)p
1603 3537 157 5 v 1603 3613 a(3)g FE(\243)g FI(4)1780
3556 y FE(\305)1855 3500 y FI(1)g FE(\243)g FI(3)p 1855
3537 V 1855 3613 a(4)g FE(\243)g FI(3)2035 3556 y FE(\306)2135
3500 y FI(4)p 2114 3537 82 5 v 2114 3613 a(12)2216 3556
y FE(\305)2311 3500 y FI(3)p 2291 3537 V 2291 3613 a(12)2396
3556 y FE(\306)2495 3500 y FI(7)p 2475 3537 V 2475 3613
a(12)2566 3556 y(.)-246 3777 y(Ainsi)18 b(il)f(r)o(este)214
3744 y FG(5)p 198 3757 62 5 v 198 3805 a(12)286 3777
y FI(du)g(pr)q(ix)g(\340)g(payer)f(\340)h(la)g(charge)f(du)h(gr)o
(and-fr\350r)o(e)o(.)f(Or)g(on)i(sait)f(que)h(le)f(gr)o(and)f(fr\350r)o
(e)h(a)g(donn\351)g(10)h FC(N)p FI(,)f(donc)f(le)i(pr)q(ix)f(du)f(livr)
o(e)i(\(soit)4074 3744 y FG(12)p 4074 3757 V 4074 3805
a(12)-246 3876 y FI(du)g(pr)q(ix\))e(est)i(\351gal)g(\340)1419
3954 y(12)p 1419 3991 82 5 v 1439 4068 a(5)1520 4011
y FE(\243)10 b FI(10)15 b FE(\306)1759 3954 y FI(12)10
b FE(\243)g FI(10)p 1759 3991 238 5 v 1858 4068 a(5)2021
4011 y FE(\306)2100 3954 y FI(120)p 2100 3991 122 5 v
2141 4068 a(5)2246 4011 y FE(\306)k FI(24)k FC(N)p FI(.)-246
4247 y FJ(R)o(emarque)c(:)j FI(Il)g(peut)h(\352tr)o(e)f(agr\351able)g
(de)g(pr\351senter)h(les)g(choses)g(avec)f(le)h(sch\351ma)g(ci-dessous)
g(:)g(chaque)f(petite)i(tr)o(anche)f(r)o(epr\351sente)3827
4215 y FG(1)p 3812 4228 62 5 v 3812 4276 a(12)3901 4247
y FI(du)f(pr)q(ix)-246 4356 y(du)g(livr)o(e)g(et)g(vaut)g(2)h
FC(N)p FI(.)e(Ainsi,)i(les)776 4323 y FG(5)p 761 4336
V 761 4385 a(12)849 4356 y FI(du)f(pr)q(ix)g(pay\351)f(\(c)n
('est-\340-dir)o(e)h(le)g(pr)q(ix)g(pay\351)g(par)f(le)i(gr)o
(and-fr\350r)o(e\))d(valent)j(5)9 b FE(\243)g FI(2)15
b FE(\306)f FI(10)k FC(N)9 b FI(;)16 b(et)h(la)g(valeur)g(totale)h(du)
-246 4456 y(livr)o(e)g(est)g(12)10 b FE(\243)g FI(2)16
b FE(\306)e FI(24)k FC(N)p FI(.)p 0 TeXcolorgray 0 TeXcolorgray
455 5157 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 360.21182 a add def
/d 0.0 a add neg def /h 73.40813 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 455 5157 a 998 5445 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  [ -56.90549 85.35823
85.35823 85.35823 85.35823 56.90549 -56.90549 56.90549  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 0.8 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 56.90549 -56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 85.35823 284.52744 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 85.35823 284.52744 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 56.90549 -56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 56.90549 -28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 0.0 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 56.90549 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 56.90549 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 56.90549 170.71646 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 56.90549 199.1692 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 56.90549 227.62195 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 56.90549 256.07469 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 56.90549 -56.90549
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 85.35823 85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 56.90549 -56.90549
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 998 5445 a
tx@Dict begin { -32.72047 98.44667 } PutCoor PutBegin  end
 998
5445 a 0 0 1 TeXcolorrgb 57 x FI(par)q(t)f(du)g(gr)o(and)g(fr\350r)o(e)
p FE(\306)d FI(10)k FC(N)p 0 TeXcolorgray 998 5445 a
tx@Dict begin  PutEnd  end

998 5445 a 998 5445 a
tx@Dict begin { -50.07666 75.11522 } PutCoor PutBegin  end
 998 5445 a 57 x FI(2)g FC(N)998
5445 y
tx@Dict begin  PutEnd  end
 998 5445 a 998 5445 a
tx@Dict begin { 42.67911 51.7842 } PutCoor PutBegin  end
 998 5445 a 57 x FI(valeur)g(totale)g(du)f
(livr)o(e)p FE(\306)e FI(24)j FC(N)998 5445 y
tx@Dict begin  PutEnd  end
 998 5445
a 3445 5157 a
currentpoint initclip moveto
 3445 5157 a -246 5240 a
SDict begin H.S end
 -246 5240 a -246
5240 a
SDict begin 12 H.A end
 -246 5240 a -246 5240 a
SDict begin [/View [/XYZ H.V]/Dest (exo.20) cvn /DEST pdfmark end
 -246 5240 a 0 TeXcolorgray
1930 5895 a FI(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FJ(Ex)o(er)o(cice)14 b(20)p
0 TeXcolorgray 669 46 a Fz(A)j FE(\306)813 -10 y FI(2)853
-40 y FG(15)930 -10 y FE(\243)10 b FI(3)1035 -40 y FG(6)p
813 27 257 5 v 813 103 a FI(2)853 79 y FG(12)930 103
y FE(\243)g FI(3)1035 79 y FG(4)1094 46 y FE(\306)1174
-10 y FI(2)1214 -40 y FG(15)p 1174 27 107 5 v 1174 103
a FI(2)1214 79 y FG(12)1300 46 y FE(\243)1375 -10 y FI(3)1415
-40 y FG(6)p 1375 27 76 5 v 1375 103 a FI(3)1415 79 y
FG(4)1475 46 y FE(\306)k FI(2)1584 12 y FG(15)p FF(\241)p
FG(12)1763 46 y FE(\243)c FI(3)1868 12 y FG(6)p FF(\241)p
FG(4)1991 46 y FE(\306)k FI(2)2100 12 y FG(3)2146 46
y FE(\243)c FI(3)2251 12 y FG(2)2300 46 y FE(\306)15
b FI(8)10 b FE(\243)g FI(9)15 b FE(\306)f FI(72)664 262
y Fz(B)22 b FE(\306)813 206 y FI(5)853 176 y FG(3)899
206 y FE(\243)10 b FI(5)1004 176 y FG(6)p 813 243 227
5 v 889 319 a FI(5)929 295 y FG(7)1064 262 y FE(\306)1143
206 y FI(5)1183 176 y FG(3)p FF(\305)p FG(6)p 1143 243
149 5 v 1179 319 a FI(5)1219 295 y FG(7)1315 262 y FE(\306)1394
206 y FI(5)1434 176 y FG(9)p 1394 243 76 5 v 1394 319
a FI(5)1434 295 y FG(7)1494 262 y FE(\306)k FI(5)1603
228 y FG(9)p FF(\241)p FG(7)1725 262 y FE(\306)g FI(5)1834
228 y FG(2)1884 262 y FE(\306)g FI(25)661 478 y Fz(C)23
b FE(\306)871 422 y FI(2)911 391 y FG(18)p 813 458 223
5 v 813 535 a FI(8)10 b FE(\243)g FI(2)968 511 y FG(12)1059
478 y FE(\306)1214 422 y FI(2)1254 391 y FG(18)p 1139
458 257 5 v 1139 535 a FI(2)1179 511 y FG(3)1224 535
y FE(\243)g FI(2)1329 511 y FG(12)1420 478 y FE(\306)1535
422 y FI(2)1575 391 y FG(18)p 1499 458 179 5 v 1499 535
a FI(2)1539 511 y FG(3)p FF(\305)p FG(12)1702 478 y FE(\306)1781
422 y FI(2)1821 391 y FG(18)p 1781 458 107 5 v 1781 535
a FI(2)1821 511 y FG(15)1911 478 y FE(\306)15 b FI(2)2021
443 y FG(18)p FF(\241)p FG(15)2204 478 y FE(\306)f FI(2)2313
443 y FG(3)2363 478 y FE(\306)g FI(8)656 694 y Fz(D)20
b FE(\306)889 637 y FI(6)929 607 y FG(6)p 813 674 227
5 v 813 750 a FI(2)853 726 y FG(5)899 750 y FE(\243)10
b FI(3)1004 726 y FG(4)1064 694 y FE(\306)1143 637 y
FI(\(2)g FE(\243)g FI(3\))1352 607 y FG(6)p 1143 674
245 5 v 1152 750 a FI(2)1192 726 y FG(5)1238 750 y FE(\243)g
FI(3)1343 726 y FG(4)1412 694 y FE(\306)1491 637 y FI(2)1531
607 y FG(6)1576 637 y FE(\243)g FI(3)1681 607 y FG(6)p
1491 674 227 5 v 1491 750 a FI(2)1531 726 y FG(5)1576
750 y FE(\243)g FI(3)1681 726 y FG(4)1741 694 y FE(\306)1820
637 y FI(2)1860 607 y FG(6)p 1820 674 76 5 v 1820 750
a FI(2)1860 726 y FG(5)1916 694 y FE(\243)1991 637 y
FI(3)2031 607 y FG(6)p 1991 674 V 1991 750 a FI(3)2031
726 y FG(4)2090 694 y FE(\306)15 b FI(2)2200 659 y FG(6)p
FF(\241)p FG(5)2318 694 y FE(\243)10 b FI(3)2423 659
y FG(6)p FF(\241)p FG(4)2545 694 y FE(\306)k FI(2)2654
659 y FG(1)2700 694 y FE(\243)c FI(3)2805 659 y FG(2)2855
694 y FE(\306)k FI(2)c FE(\243)g FI(9)15 b FE(\306)f
FI(18)666 929 y Fz(E)22 b FE(\306)813 803 y Fr(\241)843
868 y FI(10)923 837 y FG(4)959 803 y Fr(\242)989 823
y FG(3)p 813 910 211 5 v 860 986 a FI(10)940 962 y FG(8)1048
929 y FE(\306)1127 873 y FI(10)1207 843 y FG(4)p FF(\243)p
FG(3)p 1127 910 189 5 v 1163 986 a FI(10)1243 962 y FG(8)1339
929 y FE(\306)1419 873 y FI(10)1499 843 y FG(12)p 1419
910 147 5 v 1434 986 a FI(10)1514 962 y FG(8)1590 929
y FE(\306)14 b FI(10)1739 895 y FG(12)p FF(\241)p FG(8)1892
929 y FE(\306)g FI(10)2041 895 y FG(4)2092 929 y FE(\306)g
FI(10)8 b(000)666 1145 y Fz(F)24 b FE(\306)813 1089 y
FI(4)853 1058 y FG(5)p 813 1125 76 5 v 813 1202 a FI(8)853
1178 y FG(3)913 1145 y FE(\306)992 1089 y FI(\(2)1059
1058 y FG(2)1094 1089 y FI(\))1121 1058 y FG(5)p 992
1125 164 5 v 992 1202 a FI(\(2)1059 1178 y FG(3)1094
1202 y FI(\))1121 1178 y FG(3)1180 1145 y FE(\306)1259
1089 y FI(2)1299 1058 y FG(2)p FF(\243)p FG(5)p 1259
1125 149 5 v 1259 1202 a FI(2)1299 1178 y FG(3)p FF(\243)p
FG(3)1431 1145 y FE(\306)1510 1089 y FI(2)1550 1058 y
FG(10)p 1510 1125 107 5 v 1526 1202 a FI(2)1566 1178
y FG(9)1641 1145 y FE(\306)14 b FI(2)1750 1110 y FG(10)p
FF(\241)p FG(9)1903 1145 y FE(\306)g FI(2)660 1370 y
Fz(G)20 b FE(\306)813 1314 y FI(10)893 1283 y FG(10)970
1314 y FE(\305)10 b FI(10)1115 1283 y FG(8)p 813 1350
338 5 v 924 1427 a FI(10)1004 1403 y FG(7)1175 1370 y
FE(\306)1255 1314 y FI(10)1335 1283 y FG(10)p 1255 1350
147 5 v 1270 1427 a FI(10)1350 1403 y FG(7)1421 1370
y FE(\305)1496 1314 y FI(10)1576 1283 y FG(8)p 1496 1350
116 5 v 1496 1427 a FI(10)1576 1403 y FG(7)1637 1370
y FE(\306)k FI(10)1786 1335 y FG(10)p FF(\241)p FG(7)1935
1370 y FE(\305)c FI(10)2080 1335 y FG(8)p FF(\241)p FG(7)2203
1370 y FE(\306)k FI(10)2352 1335 y FG(3)2398 1370 y FE(\305)c
FI(10)2543 1335 y FG(1)2594 1370 y FE(\306)k FI(1)8 b(000)i
FE(\305)g FI(1)17 b FE(\306)d FI(1)8 b(001)-246 1502
y
SDict begin H.S end
 -246 1502 a -246 1502 a
SDict begin 12 H.A end
 -246 1502 a -246 1502 a
SDict begin [/View [/XYZ H.V]/Dest (exo.21) cvn /DEST pdfmark end
 -246
1502 a 0 TeXcolorgray 85 x FJ(Ex)o(er)o(cice)14 b(21)p
0 TeXcolorgray 41 w FI(P)n(our)26 b(r)o(anger)g(les)h(nombr)o(es)g(par)
f(or)o(dr)o(e)f(croissant,)h(on)h(les)g(\351cr)q(it)f(sous)h(for)q(me)g
(d\351cimale)o(,)g(en)g(\351cr)q(ivant)f(\340)g(chaque)h(fois)h(quatr)o
(e)-246 1687 y(chiffr)o(es)18 b(apr\350s)g(la)g(virgule)f(pour)h
(simpli\002er)h(les)f(compar)o(aisons)o(.)-246 1821 y(On)23
b(r)o(appelle)i(avant)e(cela)h(que)f(10)797 1791 y FF(\241)p
FG(3)895 1821 y FE(\306)1017 1765 y FI(1)p 980 1802 116
5 v 980 1878 a(10)1060 1854 y FG(3)1125 1821 y FE(\306)1271
1765 y FI(1)p 1210 1802 163 5 v 1210 1878 a(1000)1402
1821 y FE(\306)36 b FI(0,)8 b(00)1493 1866 y Fr(|)p 1527
1866 7 10 v 7 w({z)p 1602 1866 V 7 w(})1477 1945 y FG(3)k(z\351ros)1667
1821 y FI(1,)24 b(donc)f(multiplier)i(un)f(nombr)o(e)f(par)f(10)2950
1791 y FF(\241)p FG(3)3051 1821 y FI(r)o(evient)i(\340)f(d\351caler)g
(la)g(virgule)g(de)g(3)-246 2030 y(r)o(angs)18 b(vers)f(la)h(gauche)f
(\(le)h(r)o(aisonnement)h(est)f(le)g(m\352me)h(pour)f(10)1765
2000 y FF(\241)p FG(2)1842 2030 y FI(\).)645 2304 y Fz(A)f
FE(\306)d FI(35,)8 b(4)i FE(\243)g FI(10)1082 2270 y
FF(\241)p FG(3)2969 2304 y FE(\306)k FI(0,)8 b(0354)639
2429 y Fz(B)23 b FE(\306)14 b FI(0,)8 b(034)2002 b FE(\306)14
b FI(0,)8 b(0340)637 2565 y Fz(C)23 b FE(\306)14 b FI(3,)8
b(6)i FE(\243)g FI(10)1042 2531 y FF(\241)p FG(2)1135
2565 y FE(\306)15 b FI(0,)8 b(036)1576 b FE(\306)14 b
FI(0,)8 b(0360)631 2736 y Fz(D)21 b FE(\306)789 2680
y FI(355)p 789 2716 122 5 v 792 2793 a(10)872 2769 y
FG(4)935 2736 y FE(\306)1058 2680 y FI(355)p 1014 2716
211 5 v 1014 2793 a(10)8 b(000)2969 2736 y FE(\306)14
b FI(0,)8 b(0355)642 2949 y Fz(E)22 b FE(\306)809 2893
y FI(7)p 789 2930 82 5 v 789 3006 a(60)890 2949 y FE(\243)985
2893 y FI(3)p 965 2930 V 965 3006 a(10)1070 2949 y FE(\306)1190
2893 y FI(7)10 b FE(\243)g FI(3)p 1149 2930 238 5 v 1149
3006 a(60)g FE(\243)g FI(10)1411 2949 y FE(\306)1588
2893 y FI(7)g FE(\243)1703 2909 y Fy(\001)1703 2893 y
FI(3)p 1490 2930 354 5 v 1490 3010 a(20)g FE(\243)1645
3026 y Fy(\001)1645 3010 y FI(3)i FE(\243)e FI(10)1867
2949 y FE(\306)1987 2893 y FI(7)p 1946 2930 122 5 v 1946
3006 a(200)2969 2949 y FE(\306)k FI(0,)8 b(0350)-246
3151 y(C)o(onclusion)20 b(:)d Fz(B)22 b FE(\307)14 b
Fz(E)22 b FE(\307)e Fz(A)d FE(\307)d Fz(D)21 b FE(\307)12
b Fz(C)d FI(.)-246 3217 y
SDict begin H.S end
 -246 3217 a -246 3217 a
SDict begin 12 H.A end
 -246
3217 a -246 3217 a
SDict begin [/View [/XYZ H.V]/Dest (exo.22) cvn /DEST pdfmark end
 -246 3217 a 0 TeXcolorgray 128 x FJ(Ex)o(er)o(cice)
14 b(22)p 0 TeXcolorgray 41 w FI(A)-5 b(vant)22 b(de)f(commencer)-5
b(,)23 b(il)e(est)h(utile)h(de)e(se)g(r)o(appeler)i(que)e(10)i(cm=1)e
(dm)9 b(;)21 b(et)h(que)f(1)h FB(`)c FE(\306)g FI(1)j(dm)3090
3313 y FG(3)3125 3345 y FI(.)g(A)n(utr)o(ement)h(dit,)f(un)h(litr)o(e)f
(est)h(le)-246 3445 y(volume)f(d)n('un)f(cube)f(qui)h(mesur)o(e)f(1)h
(dm)f(sur)h(1)f(dm)g(sur)h(1)f(dm,)h(ou)f(encor)o(e)g(10)h(cm)g(sur)f
(10)h(cm)f(sur)h(10)g(cm)f(\(la)g(\002gur)o(e)f(ci-dessous)j(n)-6
b('est)20 b(bien)f(s\373r)-246 3545 y(pas)f(\340)f(l)o('\351chelle\).)p
0 TeXcolorgray 0 TeXcolorgray 1260 4736 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.1639 a add def
/d 0.0 a add neg def /h 131.45152 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 4736 a
1596 4472 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 56.90549 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 0.0 56.90549   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1596 4472 a
tx@Dict begin { 16.50264 -4.55254 } PutCoor PutBegin  end
 1596 4472 a 57 x FI(1)g(dm)1596 4472 y
tx@Dict begin  PutEnd  end
 1596
4472 a 1596 4472 a
tx@Dict begin { -28.45274 32.4361 } PutCoor PutBegin  end
 1596 4472 a 57 x FI(1)g(dm)1596 4472
y
tx@Dict begin  PutEnd  end
 1596 4472 a 1596 4472 a
tx@Dict begin { 76.82231 14.79555 } PutCoor PutBegin  end
 1596 4472 a 57 x FI(1)g(dm)1596
4472 y
tx@Dict begin  PutEnd  end
 1596 4472 a 1596 4472 a
tx@Dict begin { 26.17647 35.28156 } PutCoor PutBegin  end
 1596 4472 a 57 x FI(1)g
FB(`)1596 4472 y
tx@Dict begin  PutEnd  end
 1596 4472 a 2640 4736 a
currentpoint initclip moveto
 2640 4736 a
-246 4958 a FI(On)g(r)o(emplit)h(d)n('eau)g(un)f(aquar)q(ium)h(r)o
(ectangulair)o(e)e(dont)h(la)h(largeur)e(est)i(80)f(cm,)h(la)f
(profondeur)g(30)h(cm)f(et)h(la)f(hauteur)h(40)g(cm.)f(On)g(dispose)h
(d)n('un)-246 5057 y(robinet)f(dont)h(le)g(d\351bit)f(est)h(de)f(6)h
(litr)o(es)g(par)f(minute)o(.)-246 5101 y
SDict begin H.S end
 -246 5101 a
-246 5101 a
SDict begin 12 H.A end
 -246 5101 a -246 5101 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 5101 a 0 TeXcolorgray
-141 5197 a FI(1.)p 0 TeXcolorgray 43 w(Les)h(dimensions)h(de)e(l)o
('aquar)q(ium)i(sont)f(:)1025 5371 y(largeur)c FE(\306)g
FI(8)k(dm,)155 b(profondeur)14 b FE(\306)g FI(3)k(dm,)155
b(hauteur)15 b FE(\306)f FI(4)k(dm,)-38 5546 y(donc)f(son)h(volume)h
(est)1795 5646 y(8)10 b FE(\243)g FI(3)g FE(\243)g FI(4)16
b FE(\306)e FI(96)19 b FB(`)p FI(.)p 0 TeXcolorgray 1909
5895 a(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 994 926
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 255.20395 a add def
/d 0.0 a add neg def /h 141.11893 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 994 926 a 910 946 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 21.33955 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 106.69777 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 128.03732 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 213.39554 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 256.07465 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 85.35822 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 910 946 a
tx@Dict begin { 122.08083 17.51845 } PutCoor PutBegin  end
 910 946 a 57 x FI(8)18
b(dm)910 946 y
tx@Dict begin  PutEnd  end
 910 946 a 910 946 a
tx@Dict begin { 19.8912 68.34283 } PutCoor PutBegin  end
 910 946 a 57 x FI(4)g(dm)910
946 y
tx@Dict begin  PutEnd  end
 910 946 a 910 946 a
tx@Dict begin { 236.70636 31.57625 } PutCoor PutBegin  end
 910 946 a 57 x FI(3)g(dm)910
946 y
tx@Dict begin  PutEnd  end
 910 946 a 3113 926 a
currentpoint initclip moveto
 3113 926 a -246 966 a
SDict begin H.S end
 -246
966 a -246 966 a
SDict begin 12 H.A end
 -246 966 a -246 966 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 966 a 0 TeXcolorgray
-141 1079 a FI(2.)p 0 TeXcolorgray 43 w(On)i(peut)i(se)f(passer)g(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351)i(:)e(le)h(d\351bit)g(du)f
(robinet)g(est)h(de)f(6)h FB(`)p FI(/min,)h(donc)e(il)h(faut)g(96)11
b FE(\245)g FI(6)19 b FE(\306)f FI(16)j(min)g(pour)-38
1178 y(r)o(emplir)d(les)g(96)g FB(`)f FI(de)g(l)o('aquar)q(ium.)-246
1260 y
SDict begin H.S end
 -246 1260 a -246 1260 a
SDict begin 12 H.A end
 -246 1260 a -246 1260
a
SDict begin [/View [/XYZ H.V]/Dest (exo.23) cvn /DEST pdfmark end
 -246 1260 a 0 TeXcolorgray 113 x FJ(Ex)o(er)o(cice)d(23)p
0 TeXcolorgray 41 w FI(On)j(utilise)j(les)e(identit\351s)h(r)o
(emarquables)e(pour)h(calculer)f(:)464 1648 y(99)544
1614 y FG(2)594 1648 y FE(\306)d FI(\(100)c FE(\241)g
FI(1\))952 1614 y FG(2)1003 1648 y FE(\306)k FI(100)1192
1614 y FG(2)1239 1648 y FE(\241)c FI(2)g FE(\243)g FI(100)g
FE(\243)g FI(1)g FE(\305)g FI(1)1769 1614 y FG(2)1822
1648 y FE(\306)k FI(10)8 b(000)i FE(\241)g FI(200)g FE(\305)g
FI(1)20 b FE(\306)14 b FI(9)8 b(801)687 b(\(IR)17 b(n\2602\))423
1785 y(103)543 1750 y FG(2)594 1785 y FE(\306)d FI(\(100)c
FE(\305)g FI(3\))952 1750 y FG(2)1003 1785 y FE(\306)k
FI(100)1192 1750 y FG(2)1239 1785 y FE(\305)c FI(2)g
FE(\243)g FI(100)g FE(\243)g FI(3)g FE(\305)g FI(3)1769
1750 y FG(2)1822 1785 y FE(\306)k FI(10)8 b(000)i FE(\305)g
FI(600)g FE(\305)g FI(9)20 b FE(\306)14 b FI(10)8 b(609)647
b(\(IR)17 b(n\2601\))342 1921 y(71)10 b FE(\243)g FI(69)17
b FE(\306)d FI(\(70)c FE(\305)g FI(1\)\(70)g FE(\241)g
FI(1\))17 b FE(\306)d FI(70)1327 1886 y FG(2)1373 1921
y FE(\241)c FI(1)1478 1886 y FG(2)1528 1921 y FE(\306)k
FI(4)8 b(900)i FE(\241)g FI(1)17 b FE(\306)d FI(4)8 b(899)1219
b(\(IR)17 b(n\2603\))395 2057 y(2,)8 b(05)543 2023 y
FG(2)594 2057 y FE(\306)14 b FI(\(2)c FE(\305)g FI(0,)e(05\))980
2023 y FG(2)1031 2057 y FE(\306)15 b FI(2)1141 2023 y
FG(2)1186 2057 y FE(\305)10 b FI(2)g FE(\243)g FI(2)g
FE(\243)g FI(0,)e(05)i FE(\305)g FI(0,)e(05)1852 2023
y FG(2)1907 2057 y FE(\306)14 b FI(4)c FE(\305)g FI(0,)e(2)i
FE(\305)g FI(0,)e(0025)20 b FE(\306)14 b FI(4,)8 b(2025)534
b(\(IR)17 b(n\2601\))286 2193 y(4,)8 b(3)i FE(\243)g
FI(3,)e(7)17 b FE(\306)d FI(\(4)c FE(\305)g FI(0,)e(3\)\(4)i
FE(\241)g FI(0,)e(3\))18 b FE(\306)c FI(4)1344 2159 y
FG(2)1389 2193 y FE(\241)c FI(0,)e(3)1562 2159 y FG(2)1613
2193 y FE(\306)14 b FI(16)c FE(\241)g FI(0,)e(09)18 b
FE(\306)c FI(15,)8 b(91)1093 b(\(IR)17 b(n\2603\))-246
2369 y FJ(R)o(emarque)i(:)j FI(C)o(omment)i(calculer)f(0,)8
b(05)1004 2338 y FG(2)1063 2369 y FI(de)22 b(t\352te)9
b(?)22 b(C)o(omme)i(0,)8 b(05)1807 2338 y FG(2)1863 2369
y FE(\306)19 b FI(0,)8 b(05)k FE(\243)g FI(0,)c(05)26
b(et)d(que)f(0,)8 b(05)24 b(a)e(deux)h(chiffr)o(es)g(apr\350s)f(la)h
(virgule)o(,)f(0,)8 b(05)4000 2338 y FG(2)4059 2369 y
FI(en)-246 2468 y(aur)o(a)18 b(2)10 b FE(\305)g FI(2)15
b FE(\306)f FI(4.)k(Il)f(ne)h(r)o(este)f(alors)h(plus)g(qu)n('\340)g
(calculer)g(5)1445 2438 y FG(2)1494 2468 y FE(\306)c
FI(25)19 b(pour)e(pouvoir)i(conclur)o(e)e(:)g(0,)8 b(05)2638
2438 y FG(2)2689 2468 y FE(\306)15 b FI(0,)8 b(0025.)-246
2568 y(A)o(ttention)19 b(cependant)f(\340)f(cette)h(m\351thode)h(:)e
(les)h(der)q(niers)g(chiffr)o(es)g(du)f(r\351sultat)h(peuvent)h(\352tr)
o(e)f(des)f(0,)h(comme)g(dans)g(l)o('exemple)i(suivant)e(:)1514
2743 y(0,)8 b(05)i FE(\243)g FI(0,)e(0006)19 b FE(\306)c
FI(0,)8 b(000030,)-246 2918 y(puisque)20 b(6)10 b FE(\243)g
FI(5)15 b FE(\306)f FI(30)k(et)g(que)g(le)g(r\351sultat)g(doit)g(avoir)
f(2)10 b FE(\305)g FI(4)16 b FE(\306)e FI(6)j(chiffr)o(es)h(apr\350s)g
(la)g(virgule)g(\(le)f(der)q(nier)-5 b(,)18 b(ici,)f(\351tant)i(un)e
(0\).)-246 3002 y
SDict begin H.S end
 -246 3002 a -246 3002 a
SDict begin 12 H.A end
 -246 3002 a
-246 3002 a
SDict begin [/View [/XYZ H.V]/Dest (exo.24) cvn /DEST pdfmark end
 -246 3002 a 0 TeXcolorgray 111 x FJ(Ex)o(er)o(cice)d(24)p
0 TeXcolorgray 41 w FI(Le)k(c\364t\351)g(du)f(gr)o(and)g(carr\351)f
(mesur)o(e)k Fz(a)14 b FE(\305)c Fz(b)q FI(,)18 b(donc)f(son)h(air)o(e)
f(est)h(\()r Fz(a)c FE(\305)c Fz(b)t FI(\))2283 3083
y FG(2)2317 3113 y FI(.)-246 3213 y(D)o('un)15 b(autr)o(e)g
(c\364t\351,)h(le)g(gr)o(and)f(carr\351)f(peut)j(\352tr)o(e)e
(d\351coup\351)h(en)g(quatr)o(e)f(par)q(ties)h(:)f(un)h(carr\351)f(de)g
(c\364t\351)i Fz(a)t FI(,)f(donc)f(d)n('air)o(e)h Fz(a)3166
3183 y FG(2)3216 3213 y FI(\(hachur\351)g(en)g(bleu\),)f(un)h(carr\351)
-246 3313 y(de)j(c\364t\351)h Fz(b)q FI(,)f(donc)g(d)n('air)o(e)g
Fz(b)563 3282 y FG(2)616 3313 y FI(\(hachur\351)h(en)f(ver)q(t\))g(et)g
(deux)h(r)o(ectangles)f(de)g(c\364t\351s)i Fz(a)i FI(et)c
Fz(b)q FI(,)h(donc)f(d)n('air)o(es)i Fz(a)15 b FE(\243)c
Fz(b)22 b FI(\(hachur\351s)e(en)f(rouge\).)g(Ainsi)g(l)o('air)o(e)-246
3412 y(du)f(gr)o(and)e(carr\351)h(est-elle)i(aussi)f(\351gale)g(\340)
1642 3512 y Fz(a)1689 3478 y FG(2)1734 3512 y FE(\305)10
b Fz(b)1846 3478 y FG(2)1891 3512 y FE(\305)g FI(2)g
FE(\243)i Fz(a)i FE(\243)c Fz(b)q FI(.)-246 3657 y(En)18
b(compar)o(ant)g(avec)f(la)h(pr)o(emi\350r)o(e)f(m\351thode)i(de)e
(calcul)h(de)f(l)o('air)o(e)o(,)h(on)f(obtient)h(la)g(r)o(elation)f
(attendue)i(:)1542 3833 y(\()1571 3832 y Fz(a)14 b FE(\305)c
Fz(b)1740 3833 y FI(\))1767 3798 y FG(2)1816 3832 y FE(\306)16
b Fz(a)1934 3798 y FG(2)1979 3832 y FE(\305)10 b FI(2)r
Fz(a)t(b)k FE(\305)c Fz(b)2302 3798 y FG(2)2337 3832
y FI(.)p 0 TeXcolorgray 0 TeXcolorgray 1230 5032 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 173.56189 a add def
/d 0.0 a add neg def /h 133.15862 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1230
5032 a 1532 4782 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor   0.8 SLW 0
0 1  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  56.90549 0.0
lineto 0.0 0.0 lineto closepath gsave 90 rotate  /clipType { clip }
def 45.0 rotate 0.8 SLW 0 0 1  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor   0.8 SLW 1
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 2. def /x1 3. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  85.35823 0.0
lineto 56.90549 0.0 lineto closepath gsave 90 rotate  /clipType { clip
} def 45.0 rotate 0.8 SLW 1 0 0  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor   0.8 SLW 1
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  56.90549 85.35823
lineto  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { /lineto load stopped
{ moveto } if } def /ArrowB { } def /ArrowInside { } def    /x 2. def
/x1 0. def /dx x1 x sub 49 div def /F@pstplot (3.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  0.0 56.90549 lineto closepath gsave 90 rotate  /clipType { clip
} def 45.0 rotate 0.8 SLW 1 0 0  setrgbcolor 5.69046 0.0 0.0 LineFill
 grestore gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor   0.8 SLW 0
1 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 2. def /x1 3. def /dx x1
x sub 49 div def /F@pstplot (2.0)  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx add def
xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul
lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  85.35823 85.35823
lineto  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { /lineto load stopped
{ moveto } if } def /ArrowB { } def /ArrowInside { } def    /x 3. def
/x1 2. def /dx x1 x sub 49 div def /F@pstplot (3.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  56.90549 56.90549 lineto closepath gsave 90 rotate  /clipType
{ clip } def 45.0 rotate 0.8 SLW 0 1 0  setrgbcolor 5.69046 0.0 0.0
LineFill  grestore gsave 0.8 SLW 0 1 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1532 4782 a
tx@Dict begin { 24.185 -3.98335 } PutCoor PutBegin  end
 1532 4782 a 1534 4819 a Fz(a)1532 4782 y
tx@Dict begin  PutEnd  end

1532 4782 a 1532 4782 a
tx@Dict begin { 68.2864 -3.98335 } PutCoor PutBegin  end
 1532 4782 a 57 x Fz(b)1532 4782
y
tx@Dict begin  PutEnd  end
 1532 4782 a 1532 4782 a
tx@Dict begin { -12.51927 29.02191 } PutCoor PutBegin  end
 1532 4782 a 1534 4819 a Fz(a)1532
4782 y
tx@Dict begin  PutEnd  end
 1532 4782 a 1532 4782 a
tx@Dict begin { -12.51927 74.54604 } PutCoor PutBegin  end
 1532 4782 a 57 x Fz(b)1532
4782 y
tx@Dict begin  PutEnd  end
 1532 4782 a 2670 5032 a
currentpoint initclip moveto
 2670 5032 a -246 5108
a
SDict begin H.S end
 -246 5108 a -246 5108 a
SDict begin 12 H.A end
 -246 5108 a -246 5108 a
SDict begin [/View [/XYZ H.V]/Dest (exo.25) cvn /DEST pdfmark end
 -246
5108 a -246 5114 a
SDict begin H.S end
 -246 5114 a -246 5114 a
SDict begin 12 H.A end
 -246 5114
a -246 5114 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 5114 a 0 TeXcolorgray 113 x FJ(Ex)o(er)o(cice)k(25)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compar)o(er)g(les)h(fr)o(actions)i Fz(a)e
FE(\306)1511 5194 y FG(4)p 1511 5207 31 5 v 1511 5256
a(5)1569 5227 y FI(et)g Fz(b)g FE(\306)1792 5194 y FG(5)p
1792 5207 V 1792 5256 a(6)1833 5227 y FI(,)f(on)h(les)g(r\351duit)g(au)
f(m\352me)i(d\351nominateur)g(:)1394 5447 y Fz(a)f FE(\306)1534
5391 y FI(4)10 b FE(\243)g FI(6)p 1534 5428 157 5 v 1534
5504 a(5)g FE(\243)g FI(6)1714 5447 y FE(\306)1793 5391
y FI(24)p 1793 5428 82 5 v 1793 5504 a(30)2030 5447 y(,)155
b Fz(b)18 b FE(\306)2345 5391 y FI(5)10 b FE(\243)g FI(5)p
2345 5428 157 5 v 2345 5504 a(6)g FE(\243)g FI(5)2526
5447 y FE(\306)2605 5391 y FI(25)p 2605 5428 82 5 v 2605
5504 a(30)2696 5447 y(.)-38 5646 y(C)o(omme)19 b(24)c
FE(\307)f FI(25,)19 b(on)e(obtient)j Fz(a)e FE(\307)c
Fz(b)q FI(.)p 0 TeXcolorgray 1909 5895 a(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(On)26 b(compar)o(e)h(\340)f(pr\351sent)i
Fz(c)h FE(\306)932 -195 y FG(524)p 932 -182 93 5 v 932
-134 a(525)1061 -163 y FI(et)d Fz(d)31 b FE(\306)1317
-195 y FG(525)p 1317 -182 V 1317 -134 a(526)1419 -163
y FI(.)c(On)f(r\351duit)h(l\340)g(aussi)g(au)g(m\352me)h
(d\351nominateur)-5 b(,)29 b(mais)e(on)g(n)-6 b('effectue)29
b(aucun)e(calcul)-38 -63 y(\(comme)18 b(nous)g(allons)h(le)e(voir)-5
b(,)18 b(ce)g(n)-6 b('est)18 b(pas)g(n\351cessair)o(e\))g(:)1416
153 y Fz(c)h FE(\306)1549 97 y FI(524)10 b FE(\243)g
FI(526)p 1549 133 319 5 v 1549 210 a(525)g FE(\243)g
FI(526)2023 153 y(,)155 b Fz(d)21 b FE(\306)2343 97 y
FI(525)10 b FE(\243)g FI(525)p 2343 133 V 2343 210 a(526)g
FE(\243)g FI(525)2672 153 y(.)-38 358 y(Les)18 b(d\351nominateurs)h
(sont)f(identiques)o(,)i(donc)d(il)h(suf\002t)g(de)f(compar)o(er)g(les)
h(num\351r)o(ateurs)o(.)h(D)o('apr\350s)e(l)o('identit\351)j(r)o
(emarquable)d(n\2603,)1179 541 y(524)10 b FE(\243)g FI(526)17
b FE(\306)e FI(\(525)10 b FE(\241)g FI(1\)\(525)g FE(\305)g
FI(1\))17 b FE(\306)e FI(525)2366 507 y FG(2)2412 541
y FE(\241)10 b FI(1)2517 507 y FG(2)2567 541 y FE(\306)k
FI(525)2756 507 y FG(2)2803 541 y FE(\241)c FI(1.)-38
724 y(C)o(e)18 b(nombr)o(e)f(est)h(str)q(ictement)h(inf\351r)q(ieur)f
(\340)f(525)10 b FE(\243)g FI(525)17 b FE(\306)e FI(525)1791
694 y FG(2)1827 724 y FI(,)j(donc)f Fz(c)i FE(\307)c
Fz(d)7 b FI(.)-246 801 y
SDict begin H.S end
 -246 801 a -246 801 a
SDict begin 12 H.A end
 -246 801
a -246 801 a
SDict begin [/View [/XYZ H.V]/Dest (exo.26) cvn /DEST pdfmark end
 -246 801 a 0 TeXcolorgray 122 x FJ(Ex)o(er)o(cice)14
b(26)p 0 TeXcolorgray 41 w FI(La)21 b(par)q(tie)g(hachur\351e)h(de)e
(la)h(\002gur)o(e)e(de)i(gauche)g(est)g(un)g(r)o(ectangle)g(de)f
(c\364t\351s)h(\()r Fz(a)15 b FE(\241)c Fz(b)t FI(\))21
b(et)g(\()r Fz(a)15 b FE(\305)c Fz(b)t FI(\),)20 b(donc)h(son)g(air)o
(e)f(est)h(\351gale)g(\340)g(\()r Fz(a)15 b FE(\241)-246
1023 y Fz(b)t FI(\)\()r Fz(a)f FE(\305)c Fz(b)t FI(\).)-246
1122 y(Quant)19 b(\340)g(la)f(par)q(tie)h(hachur\351e)h(de)e(la)h
(\002gur)o(e)f(de)g(droite)o(,)g(c)n('est)h(un)g(carr\351)f(de)h
(c\364t\351)i Fz(a)h FI(duquel)e(on)e(a)h(r)o(etir\351)f(un)h(carr\351)
f(de)h(c\364t\351)g Fz(b)q FI(.)f(S)o(on)h(air)o(e)g(est)g(donc)-246
1222 y(\351gale)f(\340)h Fz(a)57 1192 y FG(2)102 1222
y FE(\241)10 b Fz(b)214 1192 y FG(2)249 1222 y FI(.)-246
1321 y(L)-10 b('identit\351)20 b(r)o(emarquable)d(n\2603)g(nous)h(dit)g
(que)g(\()r Fz(a)c FE(\241)c Fz(b)t FI(\)\()r Fz(a)k
FE(\305)c Fz(b)t FI(\))j FE(\306)j Fz(a)1717 1291 y FG(2)1762
1321 y FE(\241)10 b Fz(b)1874 1291 y FG(2)1909 1321 y
FI(,)17 b(donc)g(les)h(air)o(es)f(des)h(deux)f(zones)h(hachur\351es)g
(sont)g(les)g(m\352mes)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1100 2564 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 204.86188 a add def
/d 0.0 a add neg def /h 136.57458 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1100 2564 a -284 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 17.07182 51.21547 85.35912
51.21547 85.35912 -17.07182 17.07182 -17.07182  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 17.07182 -17.07182 68.2873
-17.07182 68.2873 68.2873 17.07182 68.2873  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 90 rotate  /clipType { clip } def
45.0 rotate 0.8 SLW 0.5  setgray 7.96672 0.0 0.0 LineFill  grestore
gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 85.35912 51.21547 85.35912
68.2873 68.2873 68.2873 68.2873 51.21547  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 187.79005 51.21547 187.79005
-17.07182 119.50276 -17.07182 119.50276 51.21547  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 90 rotate  /clipType { clip } def
45.0 rotate 0.8 SLW 0.5  setgray 7.96672 0.0 0.0 LineFill  grestore
gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 187.79005 34.14365 170.71823
34.14365 170.71823 51.21547 187.79005 51.21547  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 -17.07182 17.07182
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 51.21547 85.35912
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 51.21547 85.35912
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 -17.07182 17.07182
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 68.2873 17.07182 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 -17.07182 68.2873 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 -17.07182 68.2873
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 17.07182 68.2873 17.07182 -17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 7.34074 65.72661 } PutCoor PutBegin  end
 1100 2280 a 57 x Fz(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280
a 1100 2280 a
tx@Dict begin { 73.7504 -3.4143 } PutCoor PutBegin  end
 1100 2280 a 57 x Fz(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100
2280 a 1100 2280 a
tx@Dict begin { 5.80435 20.48613 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a Fz(a)1100
2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 84.33484
-27.65627 47.11813 -27.65627   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 16.7303
-27.65627 47.11813 -27.65627   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1100 2280 a
tx@Dict begin { 47.28902 -21.33977 } PutCoor PutBegin  end
 1100
2280 a 1102 2318 a Fz(a)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 68.2873 68.2873 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 68.2873 68.2873 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35912 51.21547 85.35912
68.2873   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 68.2873 51.21547 85.35912 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 119.50276 -17.07182 119.50276
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 -17.07182 119.50276
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 51.21547 187.79005
-17.07182   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 119.50276 51.21547 187.79005
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 152.11 -22.19342 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a Fz(a)1100 2280 y
tx@Dict begin  PutEnd  end

1100 2280 a 1100 2280 a
tx@Dict begin { 109.25955 23.90044 } PutCoor PutBegin  end
 1100 2280 a 1102 2318 a Fz(a)1100
2280 y
tx@Dict begin  PutEnd  end
 1100 2280 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71823 51.21547 187.79005
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71823 34.14365 170.71823
51.21547   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 34.14365 170.71823
34.14365   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.79005 51.21547 187.79005
34.14365   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1100 2280 a
tx@Dict begin { 175.1568 66.58 } PutCoor PutBegin  end
 1100 2280 a 57 x Fz(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100 2280
a 1100 2280 a
tx@Dict begin { 189.83858 52.0691 } PutCoor PutBegin  end
 1100 2280 a 57 x Fz(b)1100 2280 y
tx@Dict begin  PutEnd  end
 1100
2280 a 2800 2564 a
currentpoint initclip moveto
 2800 2564 a -246 2647 a
SDict begin H.S end
 -246 2647
a -246 2647 a
SDict begin 12 H.A end
 -246 2647 a -246 2647 a
SDict begin [/View [/XYZ H.V]/Dest (exo.27) cvn /DEST pdfmark end
 -246 2647 a 0 TeXcolorgray
116 x FJ(Ex)o(er)o(cice)c(27)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1115 3651 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 201.10605 a add def
/d 0.0 a add neg def /h 95.94356 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1115 3651 a -23 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 17.07182 17.07182 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.07182 85.35912 17.07182 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 68.2873 187.79005 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 96.45569 17.07182 17.07182 85.35912
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 54.7806 50.21907 57.45276 53.32521
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 187.79005 68.2873 96.45569 17.07182
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.3805 40.47523 140.37651 44.04898
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1092 3651 a
tx@Dict begin { 8.5359 51.21547 } PutCoor PutBegin  end
 1092 3651 a 51 x
FI(4)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a 1092 3651 a
tx@Dict begin { 192.91165 43.02106 } PutCoor PutBegin  end
 1092 3651 a
51 x FI(3)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 17.07182 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1092 3651 a
tx@Dict begin { 5.1216 18.7791 } PutCoor PutBegin  end
 1092 3651 a 2 w Fz(M)1092 3651
y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 187.79005 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1092 3651 a
tx@Dict begin { 189.49733 18.43759 } PutCoor PutBegin  end
 1092 3651 a 2 w Fz(N)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 17.07182 85.35912
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1092 3651 a
tx@Dict begin { 9.21866 85.35912 } PutCoor PutBegin  end

1092 3651 a 6 w Fz(A)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 187.79005 68.2873
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1092 3651 a
tx@Dict begin { 189.15582 69.65306 } PutCoor PutBegin  end
 1092 3651 a Fz(B)1092
3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 96.45569 17.07182
  false NArray  /DS 2.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1092 3651 a
tx@Dict begin { 96.62657 20.82764 } PutCoor PutBegin  end
 1092 3651 a Fz(P)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a
1092 3651 a
tx@Dict begin { 51.21547 5.1216 } PutCoor PutBegin  end
 1092 3651 a 1094 3650 a Fz(x)1092 3651 y
tx@Dict begin  PutEnd  end

1092 3651 a 1092 3651 a
tx@Dict begin { 136.57458 5.1216 } PutCoor PutBegin  end
 1092 3651 a -1 x FI(10)c FE(\241)i
Fz(x)1092 3651 y
tx@Dict begin  PutEnd  end
 1092 3651 a 2785 3651 a
currentpoint initclip moveto
 2785 3651 a
-246 3834 a FI(On)18 b(pose)i Fz(M)7 b(P)23 b FE(\306)16
b Fz(x)5 b FI(,)18 b(on)f(a)h(donc)f Fz(P)10 b(N)23 b
FE(\306)16 b Fz(M)9 b(N)19 b FE(\241)12 b Fz(M)7 b(P)24
b FE(\306)14 b FI(10)c FE(\241)i Fz(x)5 b FI(.)-246 3933
y(D)o('apr\350s)17 b(le)h(th\351or\350me)h(de)e(Pythagor)o(e)g(dans)g
(chacun)h(des)f(deux)h(tr)q(iangles)f(r)o(ectangles)24
b Fz(A)5 b(M)i(P)26 b FI(et)19 b Fz(N)9 b(B)e(P)41 b
FI(:)514 4361 y Fz(A)s(P)620 4327 y FG(2)669 4361 y FE(\306)16
b Fz(M)7 b(P)872 4327 y FG(2)918 4361 y FE(\305)12 b
Fz(M)h(A)1119 4327 y FG(2)514 4497 y Fz(A)s(P)620 4463
y FG(2)669 4497 y FE(\306)j Fz(x)784 4463 y FG(2)830
4497 y FE(\305)10 b FI(4)935 4463 y FG(2)514 4633 y Fz(A)s(P)620
4599 y FG(2)669 4633 y FE(\306)16 b Fz(x)784 4599 y FG(2)830
4633 y FE(\305)10 b FI(16)p 0 TeXcolorgray 1946 4892
9 843 v 0 TeXcolorgray 1992 4317 a Fz(B)d(P)2102 4282
y FG(2)2152 4317 y FE(\306)14 b Fz(P)c(N)2345 4282 y
FG(2)2390 4317 y FE(\305)g Fz(B)f(N)2579 4282 y FG(2)1992
4453 y Fz(B)e(P)2102 4419 y FG(2)2152 4453 y FE(\306)14
b FI(\(10)c FE(\241)i Fz(x)5 b FI(\))2476 4419 y FG(2)2522
4453 y FE(\305)10 b FI(3)2627 4419 y FG(2)1992 4589 y
Fz(B)d(P)2102 4555 y FG(2)2152 4589 y FE(\306)14 b FI(10)2301
4555 y FG(2)2347 4589 y FE(\241)c FI(2)g FE(\243)g FI(10)g
FE(\243)i Fz(x)j FE(\305)d Fz(x)2849 4555 y FG(2)2897
4589 y FE(\305)e FI(9)147 b(\(on)17 b(d\351veloppe)i(gr\342ce)e(\340)g
(l)o('IR)h(n\2602\))1992 4726 y Fz(B)7 b(P)2102 4691
y FG(2)2152 4726 y FE(\306)14 b FI(100)c FE(\241)g FI(20)r
Fz(x)15 b FE(\305)d Fz(x)2663 4691 y FG(2)2712 4726 y
FE(\305)e FI(9)1992 4862 y Fz(B)d(P)2102 4827 y FG(2)2152
4862 y FE(\306)16 b Fz(x)2267 4827 y FG(2)2312 4862 y
FE(\241)10 b FI(20)r Fz(x)15 b FE(\305)10 b FI(109)-246
5061 y(On)18 b(sait)f(que)24 b Fz(A)s(P)e FE(\306)15
b Fz(B)7 b(P)-9 b FI(,)19 b(donc)k Fz(A)s(P)795 5031
y FG(2)844 5061 y FE(\306)14 b Fz(B)7 b(P)1023 5031 y
FG(2)1076 5061 y FI(;)17 b(et)h(d)n('apr\350s)g(les)g(deux)g(calculs)g
(ci-dessus)g(:)1531 5267 y Fy(\000)1546 5252 y(\000)1541
5255 y Fz(x)1585 5220 y FG(2)1630 5255 y FE(\305)10 b
FI(16)16 b FE(\306)1852 5267 y Fy(\000)1867 5252 y(\000)1862
5255 y Fz(x)1906 5220 y FG(2)1951 5255 y FE(\241)10 b
FI(20)r Fz(x)15 b FE(\305)10 b FI(109.)-246 5437 y(Il)17
b(n)-6 b('y)17 b(a)g(plus)i(qu)n('\340)e(r\351soudr)o(e)g(:)p
0 TeXcolorgray 1909 5895 a(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1678 12 a FI(16)15 b FE(\306)g(\241)p
FI(20)r Fz(x)g FE(\305)10 b FI(109)1502 137 y(16)p 1 0 0
TeXcolorrgb FE(\241)p FI(109)p 0 TeXcolorgray 16 w FE(\306)15
b(\241)p FI(20)r Fz(x)g FE(\305)2091 146 y Fy(\010)2147
118 y(\010)2099 137 y FI(109)p 1 0 0 TeXcolorrgb 3 w
FE(\241)2269 146 y Fy(\010)2324 118 y(\010)2277 137 y
FI(109)p 0 TeXcolorgray 1613 251 a FE(\241)p FI(93)p
1613 288 136 5 v 0 0 1 TeXcolorrgb 1613 364 a FE(\241)p
FI(20)p 0 TeXcolorgray 1773 307 a FE(\306)1844 245 y
Fy(\030)1914 227 y(\030)1853 251 y FE(\241)p FI(20)s
Fz(x)p 1853 288 183 5 v 0 0 1 TeXcolorrgb 1868 358 a
Fy(\030)1937 340 y(\030)1876 364 y FE(\241)p FI(20)p
0 TeXcolorgray 1609 467 a(4,)8 b(65)16 b FE(\306)h Fz(x)-246
642 y FI(C)o(onclusion)j(:)f Fz(M)7 b(P)23 b FE(\306)14
b FI(4,)8 b(65.)-246 717 y
SDict begin H.S end
 -246 717 a -246 717 a
SDict begin 12 H.A end
 -246
717 a -246 717 a
SDict begin [/View [/XYZ H.V]/Dest (exo.28) cvn /DEST pdfmark end
 -246 717 a 0 TeXcolorgray 120 x FJ(Ex)o(er)o(cice)14
b(28)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1227
1908 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.13065 a add def
/d 0.0 a add neg def /h 118.93227 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1227 1908 a 1010 1993 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 56.90549
28.45274 56.90549 40.5244 68.97714 40.5244 68.97714 28.45274  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1010 1993 a
tx@Dict begin { 95.60123 25.03854 } PutCoor PutBegin  end
 1010 1993 a 1012 2031 a Fz(x)1010 1993 y
tx@Dict begin  PutEnd  end

1010 1993 a 1010 1993 a
tx@Dict begin { 38.12657 72.26978 } PutCoor PutBegin  end
 1010 1993 a 1014 2031 a Fz(y)1010
1993 y
tx@Dict begin  PutEnd  end
 1010 1993 a 1010 1993 a
tx@Dict begin { 120.63979 75.11522 } PutCoor PutBegin  end
 1010 1993 a 51 x FI(13)1010
1993 y
tx@Dict begin  PutEnd  end
 1010 1993 a 2673 1908 a
currentpoint initclip moveto
 2673 1908 a -246 1970
a
SDict begin H.S end
 -246 1970 a -246 1970 a
SDict begin 12 H.A end
 -246 1970 a -246 1970 a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246
1970 a 0 TeXcolorgray -141 2082 a FI(1.)p 0 TeXcolorgray
43 w(D)o('apr\350s)j(le)h(th\351or\350me)h(de)e(Pythagor)o(e)o(,)1724
2182 y Fz(x)1768 2148 y FG(2)1814 2182 y FE(\305)d Fz(y)1926
2148 y FG(2)1975 2182 y FE(\306)g FI(13)2124 2148 y FG(2)2174
2182 y FE(\306)g FI(169.)-38 2340 y(D)o('apr\350s)j(l)o('IR)i(n\2601,)f
(\()r Fz(x)d FE(\305)f Fz(y)7 b FI(\))757 2310 y FG(2)807
2340 y FE(\306)17 b Fz(x)923 2310 y FG(2)968 2340 y FE(\305)d
Fz(y)1080 2310 y FG(2)1126 2340 y FE(\305)c FI(2)r Fz(x)g(y)q
FI(.)20 b(Or)f Fz(x)1510 2310 y FG(2)1556 2340 y FE(\305)14
b Fz(y)1668 2310 y FG(2)1718 2340 y FE(\306)g FI(169,)20
b(et)2041 2298 y Fu(x)t FF(\243)s Fu(y)p 2040 2321 113
5 v 2081 2369 a FG(2)2177 2340 y FE(\306)15 b FI(30,)k(puisque)g(c)n
('est)g(l)o('air)o(e)f(du)g(tr)q(iangle)o(.)f(On)h(en)g(d\351duit)i
Fz(x)15 b FE(\243)f Fz(y)23 b FE(\306)-38 2440 y FI(30)10
b FE(\243)g FI(2)16 b FE(\306)e FI(60,)19 b(puis)1107
2539 y(\()r Fz(x)c FE(\305)f Fz(y)7 b FI(\))1329 2505
y FG(2)1379 2539 y FE(\306)p 0 0 1 TeXcolorrgb 16 w Fz(x)1494
2505 y FG(2)1539 2539 y FE(\305)14 b Fz(y)1651 2505 y
FG(2)p 0 TeXcolorgray 1696 2539 a FE(\305)c FI(2)p 1 0 0
TeXcolorrgb 2 w Fz(x)g(y)p 0 TeXcolorgray 22 w FE(\306)p
0 0 1 TeXcolorrgb 15 w FI(169)p 0 TeXcolorgray 11 w FE(\305)g
FI(2)g FE(\243)p 1 0 0 TeXcolorrgb 10 w FI(60)p 0 TeXcolorgray
16 w FE(\306)15 b FI(169)10 b FE(\305)g FI(120)17 b FE(\306)d
FI(289.)-38 2684 y(F)o(inalement,)20 b(comme)f(\()r Fz(x)c
FE(\305)f Fz(y)7 b FI(\))898 2654 y FG(2)947 2684 y FE(\306)14
b FI(289,)1745 2784 y Fz(x)h FE(\305)f Fz(y)22 b FE(\306)1995
2715 y(p)p 2058 2715 122 5 v 2058 2784 a FI(289)16 b
FE(\306)e FI(17.)-246 2847 y
SDict begin H.S end
 -246 2847 a -246 2847 a
SDict begin 12 H.A end

-246 2847 a -246 2847 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 2847 a 0 TeXcolorgray -141
2941 a FI(2.)p 0 TeXcolorgray 43 w(On)j(utilise)i(cette)f(fois)g(l)o
('IR)g(n\2602)g(:)1128 3041 y(\()r Fz(x)d FE(\241)f Fz(y)7
b FI(\))1350 3007 y FG(2)1399 3041 y FE(\306)p 0 0 1
TeXcolorrgb 16 w Fz(x)1514 3007 y FG(2)1560 3041 y FE(\305)14
b Fz(y)1672 3007 y FG(2)p 0 TeXcolorgray 1717 3041 a
FE(\241)c FI(2)p 1 0 0 TeXcolorrgb 2 w Fz(x)g(y)p 0 TeXcolorgray
22 w FE(\306)p 0 0 1 TeXcolorrgb 14 w FI(169)p 0 TeXcolorgray
11 w FE(\241)g FI(2)g FE(\243)p 1 0 0 TeXcolorrgb 10
w FI(60)p 0 TeXcolorgray 17 w FE(\306)k FI(169)c FE(\241)g
FI(120)17 b FE(\306)e FI(49.)-38 3199 y(Or)k Fz(x)c FE(\241)f
Fz(y)22 b FE(\270)14 b FI(0,)k(puisque)j Fz(x)i FI(est)18
b(plus)g(gr)o(and)f(que)22 b Fz(y)r FI(,)c(donc)1785
3374 y Fz(x)d FE(\241)f Fz(y)22 b FE(\306)2035 3305 y(p)p
2099 3305 82 5 v 69 x FI(49)15 b FE(\306)f FI(7.)-38
3562 y Fs(")p FI(S)o(i)k(on)f(ne)h(savait)g(pas)f(lequel)i(des)f(deux)f
(c\364t\351s)h(est)g(le)g(plus)h(gr)o(and,)d(on)i(pourr)o(ait)g(avoir)h
Fz(x)c FE(\241)f Fz(y)22 b FE(\306)14 b(\241)p FI(7)k(!!!)-38
3721 y(On)f(sait)h(\340)f(pr\351sent)i(que)h Fz(x)15
b FE(\305)f Fz(y)21 b FE(\306)15 b FI(17)j(et)i Fz(x)15
b FE(\241)f Fz(y)21 b FE(\306)14 b FI(7.)k(On)g(ajoute)g(membr)o(e)g
(\340)f(membr)o(e)g(ces)h(\351galit\351s)g(et)g(on)g(en)f(d\351duit)j
Fz(x)37 b FI(:)1654 4009 y(\()r Fz(x)15 b FE(\305)f Fz(y)7
b FI(\))j FE(\305)g FI(\()r Fz(x)15 b FE(\241)f Fz(y)7
b FI(\))15 b FE(\306)f FI(17)c FE(\305)g FI(7)1763 4133
y Fz(x)15 b FE(\305)1885 4165 y Fy(\001)1886 4133 y Fz(y)j
FE(\305)12 b Fz(x)j FE(\241)2129 4165 y Fy(\001)2130
4133 y Fz(y)22 b FE(\306)14 b FI(24)2076 4279 y Fy(\001)2076
4264 y FI(2)s Fz(x)p 2076 4300 87 5 v 2099 4397 a Fy(\001)2100
4381 y FI(2)2188 4320 y FE(\306)2267 4264 y FI(24)p 2267
4300 82 5 v 2287 4377 a(2)2129 4484 y Fz(x)20 b FE(\306)14
b FI(12)-38 4672 y(En\002n,)j(comme)k Fz(x)15 b FE(\305)f
Fz(y)22 b FE(\306)14 b FI(17,)k(on)g(trouve)j Fz(y)g
FE(\306)14 b FI(17)c FE(\241)i Fz(x)21 b FE(\306)14 b
FI(17)c FE(\241)g FI(12)17 b FE(\306)d FI(5.)-38 4785
y(C)o(onclusion)19 b(:)h Fz(x)f FE(\306)14 b FI(12,)23
b Fz(y)e FE(\306)14 b FI(5.)-246 4930 y
SDict begin H.S end
 -246 4930 a -246
4930 a
SDict begin 12 H.A end
 -246 4930 a -246 4930 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -246 4930 a 130 x FK(2)105
b(N)m(ombr)n(es)24 b(r\351els)-246 5145 y
SDict begin H.S end
 -246 5145 a
-246 5145 a
SDict begin 12 H.A end
 -246 5145 a -246 5145 a
SDict begin [/View [/XYZ H.V]/Dest (exo.29) cvn /DEST pdfmark end
 -246 5145 a -246
5132 a
SDict begin H.S end
 -246 5132 a -246 5132 a
SDict begin 12 H.A end
 -246 5132 a -246 5132
a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 5132 a 0 TeXcolorgray 112 x FJ(Ex)o(er)o(cice)14
b(29)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w FE(\241)p FI(7)g FE(2)h Fk(Q)p FI(.)i
FJ(VRAI.)-38 5388 y FI(J)m(usti\002cation)h(:)g FE(\241)p
FI(7)c FE(\306)622 5332 y(\241)p FI(7)p 622 5369 96 5
v 649 5445 a(1)727 5388 y(,)j(donc)h FE(\241)p FI(7)c
FE(2)h Fk(Q)i FI(\(il)g(s)m('\351cr)q(it)h(comme)g(le)g(quotient)h(de)e
(deux)h(entiers\).)-246 5458 y
SDict begin H.S end
 -246 5458 a -246 5458
a
SDict begin 12 H.A end
 -246 5458 a -246 5458 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 5458 a 0 TeXcolorgray
-141 5533 a FI(2.)p 0 TeXcolorgray 43 w FE(\241)p FI(7)d
FE(2)f Fk(N)p FI(.)j FJ(F)-5 b(A)m(UX.)-38 5646 y FI(J)m
(usti\002cation)18 b(:)g FE(\241)p FI(7)f(est)h(str)q(ictement)h
(n\351gatif,)g(donc)e(ce)g(n)-6 b('est)18 b(pas)g(un)g(entier)g(natur)o
(el.)p 0 TeXcolorgray 1909 5895 a(13)p 0 TeXcolorgray
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -138
a FI(3.)p 0 TeXcolorgray 43 w FE(\241)27 -195 y FI(13)p
27 -158 82 5 v 47 -81 a(4)132 -138 y FE(2)15 b Fk(Z)p
FI(.)i FJ(F)-5 b(A)m(UX.)-38 49 y FI(J)m(usti\002cation)18
b(:)g FE(\241)498 -7 y FI(13)p 498 30 V 518 106 a(4)603
49 y FE(\306)c(\241)p FI(3,)8 b(25)19 b(a)e(des)h(chiffr)o(es)g
(apr\350s)g(la)f(virgule)o(,)h(donc)f(il)g(n)-6 b('est)19
b(pas)f(entier)-5 b(.)-38 236 y FJ(R)o(emarque)17 b(:)k
FI(P)n(our)f(obtenir)862 180 y(13)p 862 217 V 883 293
a(4)971 236 y FE(\306)d FI(3,)8 b(25)23 b(sans)e(calculatr)q(ice)o(,)f
(trois)h(possibilit\351s)i(:)2477 233 y Fx(1)2454 236
y Fw(\015)d FI(Diviser)h(de)f(t\352te)i(13)f(par)g(2)g(deux)f(fois)i
(de)e(suite)i(\226)4086 233 y Fx(2)4063 236 y Fw(\015)-38
409 y FI(P)n(oser)17 b(la)g(division)i(\226)619 406 y
Fx(3)596 409 y Fw(\015)e FI(R)o(emarquer)g(que)1258 353
y(13)p 1258 389 V 1278 466 a(4)1363 409 y FE(\306)1442
353 y FI(12)p 1442 389 V 1462 466 a(4)1543 409 y FE(\305)1618
353 y FI(1)p 1618 389 41 5 v 1618 466 a(4)1683 409 y
FE(\306)d FI(3)c FE(\305)g FI(0,)e(25)17 b FE(\306)d
FI(3,)8 b(25.)-246 480 y
SDict begin H.S end
 -246 480 a -246 480 a
SDict begin 12 H.A end
 -246 480
a -246 480 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246 480 a 0 TeXcolorgray -141 611 a FI(4.)p
0 TeXcolorgray 43 w FE(\241)27 554 y FI(13)p 27 591 82
5 v 47 667 a(4)132 611 y FE(2)15 b Fk(D)p FI(.)i FJ(VRAI.)-38
798 y FI(J)m(usti\002cation)h(:)g FE(\241)498 742 y FI(13)p
498 778 V 518 855 a(4)603 798 y FE(\306)c(\241)p FI(3,)8
b(25)19 b(a)e(deux)h(chiffr)o(es)g(apr\350s)g(la)f(virgule)o(,)h(donc)f
(il)g(est)h(d\351cimal.)-246 869 y
SDict begin H.S end
 -246 869 a -246 869
a
SDict begin 12 H.A end
 -246 869 a -246 869 a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 869 a 0 TeXcolorgray -141
945 a FI(5.)p 0 TeXcolorgray 43 w(5,)8 b(824)17 b FE(2)d
Fk(D)p FI(.)k FJ(VRAI.)-38 1059 y FI(J)m(usti\002cation)g(:)g(5,)8
b(824)19 b(a)f(trois)f(chiffr)o(es)h(apr\350s)g(la)f(virgule)o(,)h
(donc)f(il)g(est)h(d\351cimal)-246 1093 y
SDict begin H.S end
 -246 1093 a
-246 1093 a
SDict begin 12 H.A end
 -246 1093 a -246 1093 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -246 1093 a 0 TeXcolorgray
-141 1188 a FI(6.)p 0 TeXcolorgray 43 w(5,)8 b(824)17
b FE(2)d Fk(Q)p FI(.)j FJ(VRAI.)-38 1302 y FI(J)m(usti\002cation)h
(n\2601)g(:)f(5,)8 b(824)20 b(est)e(d\351cimal)g(\(cf)f(question)i
(pr\351c\351dente\),)g(donc)e(il)g(est)h(r)o(ationnel)h(d)n('apr\350s)f
(le)g(cours)f(\()p Fk(D)e FE(\275)f Fk(Q)p FI(\).)-38
1450 y(J)m(usti\002cation)k(n\2602)g(:)f(5,)8 b(824)17
b FE(\306)848 1394 y FI(5)8 b(824)p 848 1431 171 5 v
848 1507 a(1)g(000)1028 1450 y(,)18 b(donc)f(5,)8 b(824)16
b FE(2)f Fk(Q)i FI(\(il)h(s)m('\351cr)q(it)f(comme)h(le)g(quotient)h
(de)e(deux)h(entiers\).)-246 1522 y
SDict begin H.S end
 -246 1522 a -246
1522 a
SDict begin 12 H.A end
 -246 1522 a -246 1522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -246 1522 a 0 TeXcolorgray
-141 1652 a FI(7.)p 0 TeXcolorgray -28 1596 a(10)p -28
1633 82 5 v -8 1709 a(6)77 1652 y FE(2)d Fk(D)p FI(.)i
FJ(F)-5 b(A)m(UX.)-38 1789 y FI(J)m(usti\002cation)18
b(:)g(On)f(pose)h(la)g(division)g(:)p 0 TeXcolorgray
0 TeXcolorgray 1887 1944 a(1)33 b(0)1798 2043 y FE(\241)p
1871 2070 147 4 v 107 w FI(6)1960 2143 y(4)h(0)1871 2243
y FE(\241)p 1944 2269 V 34 w FI(3)g(6)2034 2342 y(4)p
2125 2371 4 499 v 2127 1970 183 4 v 2180 1944 a(6)2180
2043 y(1)6 b(,)h(6)-38 2545 y(C)o(omme)17 b(on)f(obtient)g(deux)g(fois)
h(le)f(m\352me)h(r)o(este)e(\(4\),)h(\347a)f(va)h(continuer)h
(ind\351\002niment.)g(C)o(onclusion)h(:)3060 2489 y(10)p
3060 2526 82 5 v 3081 2602 a(6)3166 2545 y FE(\306)c
FI(1,)8 b(666)g FE(\242)g(\242)g(\242)27 b FI(n)-6 b('est)16
b(pas)h(d\351cimal,)-38 2668 y(puisqu)n('il)i(a)e(une)h(in\002nit\351)h
(de)e(chiffr)o(es)h(apr\350s)g(la)f(virgule)o(.)-246
2701 y
SDict begin H.S end
 -246 2701 a -246 2701 a
SDict begin 12 H.A end
 -246 2701 a -246 2701
a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -246 2701 a 0 TeXcolorgray -141 2832 a FI(8.)p 0 TeXcolorgray
-28 2775 a(17)p -28 2812 82 5 v -28 2889 a(11)77 2832
y FE(2)e Fk(D)p FI(.)i FJ(F)-5 b(A)m(UX.)-38 2969 y FI(J)m
(usti\002cation)18 b(:)g(On)f(pose)h(la)g(division)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1814 3123 a(1)33 b(7)1725
3223 y FE(\241)p 1798 3249 147 4 v 34 w FI(1)g(1)1887
3322 y(6)g(0)1798 3422 y FE(\241)p 1871 3448 V 34 w FI(5)g(5)1960
3521 y(5)h(0)1871 3621 y FE(\241)p 1944 3648 V 34 w FI(4)g(4)2034
3721 y(6)p 2125 3750 4 698 v 2127 3150 256 4 v 2180 3123
a(1)f(1)2180 3223 y(1)6 b(,)h(5)33 b(4)-38 3924 y(C)o(omme)13
b(on)g(obtient)g(deux)g(fois)g(le)g(m)q(\352me)h(r)o(este)f(\(6)q(\),)g
(\347a)g(va)g(cont)q(inue)q(r)g(ind\351\002nim)q(ent.)h(C)o(on)q(clusi)
q(on)f(:)3027 3868 y(17)p 3027 3905 82 5 v 3027 3981
a(11)3132 3924 y FE(\306)h FI(1,)8 b(5454)g FE(\242)g(\242)g(\242)25
b FI(n)-6 b('est)13 b(pas)g(d\351cimal,)-38 4046 y(puisqu)n('il)19
b(a)e(une)h(in\002nit\351)h(de)e(chiffr)o(es)h(apr\350s)g(la)f(virgule)
o(.)-246 4131 y
SDict begin H.S end
 -246 4131 a -246 4131 a
SDict begin 12 H.A end
 -246 4131 a -246
4131 a
SDict begin [/View [/XYZ H.V]/Dest (exo.30) cvn /DEST pdfmark end
 -246 4131 a -246 4150 a
SDict begin H.S end
 -246 4150 a -246 4150
a
SDict begin 12 H.A end
 -246 4150 a -246 4150 a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -246 4150 a 0 TeXcolorgray
95 x FJ(Ex)o(er)o(cice)d(30)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 1361 4345 a Fz(I)1391 4357
y FG(1)1441 4345 y FE(\306)1510 4346 y FI([)1536 4345
y(1;)8 b(4)1644 4346 y(])1827 4345 y Fz(I)1857 4357 y
FG(2)1907 4345 y FE(\306)1976 4346 y FI([)2001 4345 y(5;)g
FE(\3051)2202 4346 y FI([)2384 4345 y Fz(I)2414 4357
y FG(3)2464 4345 y FE(\306)2534 4346 y FI(])2559 4345
y FE(\241)p FI(2;)g(0)2722 4346 y([)p 0 TeXcolorgray
0 TeXcolorgray 670 4854 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 333.46617 a add def
/d 0.0 a add neg def /h 51.7842 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 670 4854 a 1180 4651 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 272.00815  0 -61.45802  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -61.45802
 272.00815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 27.31482  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 272.00815
0.0 -61.45802 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1165 4748 a FG(0)205 b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)-2414
b FF(\241)p FG(1)-309 b FF(\241)p FG(2)1180 4651 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 264.6106 0.0 142.26372
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 0.0 -56.90549 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1180 4651 a
tx@Dict begin { 62.59595 14.22636 } PutCoor PutBegin  end
 1180
4651 a 1 0 0 TeXcolorrgb 1182 4705 a Fz(I)1212 4717 y
FG(1)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180 4651
a
tx@Dict begin { 204.29048 14.22636 } PutCoor PutBegin  end
 1180 4651 a 0 0 1 TeXcolorrgb 1182 4705 a Fz(I)1212
4717 y FG(2)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a
1180 4651 a
tx@Dict begin { -35.28156 14.22636 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 1182 4705 a
Fz(I)1212 4717 y FG(3)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180
4651 a 1180 4651 a
tx@Dict begin { -60.31967 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 135
x Fj(])p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180
4651 a
tx@Dict begin { -3.41418 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 1 0 TeXcolorrgb 135 x Fj([)p 0 TeXcolorgray
1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180 4651 a
tx@Dict begin { 25.03854 9.10507 } PutCoor PutBegin  end
 1180 4651 a 1 0 0
TeXcolorrgb 135 x Fj([)p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180
4651 a 1180 4651 a
tx@Dict begin { 110.39677 9.10507 } PutCoor PutBegin  end
 1180 4651 a 1 0 0 TeXcolorrgb 135
x Fj(])p 0 TeXcolorgray 1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 1180
4651 a
tx@Dict begin { 138.84952 9.10507 } PutCoor PutBegin  end
 1180 4651 a 0 0 1 TeXcolorrgb 135 x Fj([)p 0 TeXcolorgray
1180 4651 a
tx@Dict begin  PutEnd  end
 1180 4651 a 3438 4854 a
currentpoint initclip moveto
 3438 4854 a -246
4898 a
SDict begin H.S end
 -246 4898 a -246 4898 a
SDict begin 12 H.A end
 -246 4898 a -246 4898
a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -246 4898 a 0 TeXcolorgray -141 5012 a FI(2.)p 0 TeXcolorgray
1287 5112 a Fz(I)1317 5124 y FG(1)1368 5112 y FE(\306)1437
5113 y FI([)1462 5112 y FE(\241)p FI(1;)8 b(1)1625 5113
y([)1808 5112 y Fz(I)1838 5124 y FG(2)1888 5112 y FE(\306)1957
5113 y FI(])1982 5112 y(3;)g FE(\3051)2183 5113 y FI([)2366
5112 y Fz(I)2396 5124 y FG(3)2446 5112 y FE(\306)2515
5113 y FI(])2540 5112 y FE(\2411)p FI(;)g FE(\241)p FI(2)2796
5113 y(])p 0 TeXcolorgray 0 TeXcolorgray 433 5622 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 390.37166 a add def
/d 0.0 a add neg def /h 51.7842 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 433
5622 a 1888 5418 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 215.10266  0 -175.269  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -175.269
 215.10266  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.46938  def /maxTickline 27.31482  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 215.10266
0.0 -175.269 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1873 5515 a FG(0)205
b(1)g(2)h(3)f(4)g(5)g(6)h(7)-1942 b FF(\241)p FG(1)-309
b FF(\241)p FG(2)f FF(\241)p FG(3)h FF(\241)p FG(4)g
FF(\241)p FG(5)g FF(\241)p FG(6)1888 5418 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 -28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 264.6106 0.0 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 0.0 -175.269
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1888 5418 a
tx@Dict begin { -8.5359 14.22636 } PutCoor PutBegin  end
 1888
5418 a 1 0 0 TeXcolorrgb 1890 5472 a Fz(I)1920 5484 y
FG(1)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888 5418
a
tx@Dict begin { 147.385 14.22636 } PutCoor PutBegin  end
 1888 5418 a 0 0 1 TeXcolorrgb 1890 5472 a Fz(I)1920
5484 y FG(2)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a
1888 5418 a
tx@Dict begin { -128.03734 14.22636 } PutCoor PutBegin  end
 1888 5418 a 0 1 0 TeXcolorrgb 1890 5472 a
Fz(I)1920 5484 y FG(3)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888
5418 a 1888 5418 a
tx@Dict begin { -60.31967 9.10507 } PutCoor PutBegin  end
 1888 5418 a 0 1 0 TeXcolorrgb 135
x Fj(])p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888
5418 a
tx@Dict begin { -31.86693 9.10507 } PutCoor PutBegin  end
 1888 5418 a 1 0 0 TeXcolorrgb 135 x Fj([)p 0 TeXcolorgray
1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 1888 5418 a
tx@Dict begin { 25.03854 9.10507 } PutCoor PutBegin  end
 1888 5418 a 1 0 0
TeXcolorrgb 135 x Fj([)p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888
5418 a 1888 5418 a
tx@Dict begin { 81.94403 9.10507 } PutCoor PutBegin  end
 1888 5418 a 0 0 1 TeXcolorrgb 135
x Fj(])p 0 TeXcolorgray 1888 5418 a
tx@Dict begin  PutEnd  end
 1888 5418 a 3674
5622 a
currentpoint initclip moveto
 3674 5622 a -246 5688 a
SDict begin H.S end
 -246 5688 a -246 5688
a
SDict begin 12 H.A end
 -246 5688 a -246 5688 a
SDict begin [/View [/XYZ H.V]/Dest (exo.31) cvn /DEST pdfmark end
 -246 5688 a 0 TeXcolorgray
1909 5895 a FI(14)p 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(31)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(5)h FE(2)517 -162 y FI([)542 -163 y(2;)8
b(6)650 -162 y([)-246 -137 y
SDict begin H.S end
 -246 -137 a -246 -137 a
SDict begin 12 H.A end

-246 -137 a -246 -137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -246 -137 a 0 TeXcolorgray -141
-34 a FI(2.)p 0 TeXcolorgray 43 w FE(\241)p FI(2)15 b
FE(\335)131 -33 y FI(])156 -34 y FE(\241)p FI(2;)8 b(1)319
-33 y(])-246 -8 y
SDict begin H.S end
 -246 -8 a -246 -8 a
SDict begin 12 H.A end
 -246 -8 a -246
-8 a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -246 -8 a 0 TeXcolorgray -141 95 a FI(3.)p 0 TeXcolorgray
43 w FB(\274)14 b FE(2)85 96 y FI(])111 95 y(3;)8 b(4)219
96 y([)263 95 y(\(on)17 b(r)o(appelle)i(que)f FB(\274)c
FE(\274)g FI(3,)8 b(14\))-246 179 y
SDict begin H.S end
 -246 179 a -246 179
a
SDict begin 12 H.A end
 -246 179 a -246 179 a
SDict begin [/View [/XYZ H.V]/Dest (exo.32) cvn /DEST pdfmark end
 -246 179 a -246 197 a
SDict begin H.S end
 -246 197
a -246 197 a
SDict begin 12 H.A end
 -246 197 a -246 197 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -246 197 a 0 TeXcolorgray
97 x FJ(Ex)o(er)o(cice)14 b(32)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 43 w(5)c FE(\243)g(j)g(\241)g
FI(6)p FE(j)16 b(\306)e FI(5)c FE(\243)g FI(6)16 b FE(\306)e
FI(30)-246 321 y
SDict begin H.S end
 -246 321 a -246 321 a
SDict begin 12 H.A end
 -246 321 a -246
321 a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -246 321 a 0 TeXcolorgray -141 423 a FI(2.)p 0
TeXcolorgray 43 w FE(j)p FI(3)p FE(j)c(\305)g(j)g(\241)g
FI(3)p FE(j)17 b(\306)d FI(3)c FE(\305)g FI(3)15 b FE(\306)f
FI(6)-246 450 y
SDict begin H.S end
 -246 450 a -246 450 a
SDict begin 12 H.A end
 -246 450 a -246
450 a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -246 450 a 0 TeXcolorgray -141 552 a FI(3.)p 0
TeXcolorgray 43 w FE(j)p FI(5)p FE(j)c(\241)g(j)g(\241)g
FI(5)p FE(j)17 b(\306)d FI(5)c FE(\241)g FI(5)15 b FE(\306)f
FI(0)-246 578 y
SDict begin H.S end
 -246 578 a -246 578 a
SDict begin 12 H.A end
 -246 578 a -246
578 a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -246 578 a 0 TeXcolorgray -141 681 a FI(4.)p 0
TeXcolorgray 43 w FE(j)c(\241)g FI(4)p FE(j)g(\243)g(j)p
FI(2)p FE(j)17 b(\306)d FI(4)c FE(\243)g FI(2)15 b FE(\306)f
FI(8)-246 707 y
SDict begin H.S end
 -246 707 a -246 707 a
SDict begin 12 H.A end
 -246 707 a -246
707 a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -246 707 a 0 TeXcolorgray -141 810 a FI(5.)p 0
TeXcolorgray 43 w FE(j)p FI(7)c FE(\241)g FI(4)p FE(j)16
b(\306)e(j)p FI(3)p FE(j)h(\306)f FI(3)-246 836 y
SDict begin H.S end
 -246
836 a -246 836 a
SDict begin 12 H.A end
 -246 836 a -246 836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -246 836 a 0 TeXcolorgray
-141 939 a FI(6.)p 0 TeXcolorgray 43 w FE(j)p FI(4)c
FE(\241)g FI(7)p FE(j)16 b(\306)e(j)c(\241)g FI(3)p FE(j)16
b(\306)e FI(3)-246 965 y
SDict begin H.S end
 -246 965 a -246 965 a
SDict begin 12 H.A end
 -246 965
a -246 965 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -246 965 a 0 TeXcolorgray -141 1067 a FI(7.)p
0 TeXcolorgray 43 w FE(j)p FI(4)c FE(\241)g FI(3)p FE(j)g(\305)g(j)p
FI(5)g FE(\241)g FI(6)p FE(j)18 b(\306)c(j)p FI(1)p FE(j)c(\305)g(j)g
(\241)g FI(1)p FE(j)17 b(\306)d FI(1)c FE(\305)g FI(1)16
b FE(\306)e FI(2)-246 1094 y
SDict begin H.S end
 -246 1094 a -246 1094 a
SDict begin 12 H.A end

-246 1094 a -246 1094 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -246 1094 a 0 TeXcolorgray -141
1196 a FI(8.)p 0 TeXcolorgray 43 w FE(j)p FI(5)c FE(\241)g
FI(11)p FE(j)g(\305)g FI(2)g FE(\243)g(j)p FI(7)g FE(\241)g
FI(8)p FE(j)19 b(\306)14 b(j)c(\241)g FI(6)p FE(j)g(\305)g
FI(2)g FE(\243)g(j)g(\241)g FI(1)p FE(j)18 b(\306)c FI(6)c
FE(\305)g FI(2)g FE(\243)g FI(1)17 b FE(\306)d FI(6)c
FE(\305)g FI(2)15 b FE(\306)f FI(8)-246 1223 y
SDict begin H.S end
 -246 1223
a -246 1223 a
SDict begin 12 H.A end
 -246 1223 a -246 1223 a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -246 1223 a 0 TeXcolorgray
-141 1325 a FI(9.)p 0 TeXcolorgray 43 w FE(j)p FI(8)c
FE(\241)g FI(5)p FE(j)g(\243)g(j)p FI(7)g FE(\241)g FI(10)p
FE(j)18 b(\306)d(j)p FI(3)p FE(j)10 b(\243)g(j)g(\241)g
FI(3)p FE(j)16 b(\306)f FI(3)10 b FE(\243)g FI(3)15 b
FE(\306)f FI(9)-246 1351 y
SDict begin H.S end
 -246 1351 a -246 1351 a
SDict begin 12 H.A end
 -246
1351 a -246 1351 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -246 1351 a 0 TeXcolorgray -181 1454
a FI(10.)p 0 TeXcolorgray 43 w FE(j)p FI(15)c FE(\241)g
FI(6)p FE(j)g(\241)g FI(4)g FE(\243)g(j)p FI(1)g FE(\241)g
FI(4)p FE(j)19 b(\306)14 b(j)p FI(9)p FE(j)c(\241)g FI(4)g
FE(\243)g(j)g(\241)g FI(3)p FE(j)18 b(\306)c FI(9)c FE(\241)g
FI(4)g FE(\243)g FI(3)16 b FE(\306)e FI(9)c FE(\241)g
FI(12)16 b FE(\306)f(\241)p FI(3)-246 1532 y
SDict begin H.S end
 -246 1532
a -246 1532 a
SDict begin 12 H.A end
 -246 1532 a -246 1532 a
SDict begin [/View [/XYZ H.V]/Dest (exo.33) cvn /DEST pdfmark end
 -246 1532 a -246
1551 a
SDict begin H.S end
 -246 1551 a -246 1551 a
SDict begin 12 H.A end
 -246 1551 a -246 1551
a
SDict begin [/View [/XYZ H.V]/Dest (Item.60) cvn /DEST pdfmark end
 -246 1551 a 0 TeXcolorgray 102 x FJ(Ex)o(er)o(cice)f(33)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(On)j(r\351sout)h(l)o('\351quation)i FE(j)r Fz(x)15
b FE(\241)10 b FI(2)p FE(j)16 b(\306)e FI(3.)-38 1852
y FJ(M\351thode)i(n\2601)f(:)i(av)o(ec)d(la)h(d\351\002nition)h(de)g
(la)f(v)o(aleur)f(absolue.)-38 1993 y FI(Les)k(nombr)o(es)f(dont)h(la)f
(valeur)h(absolue)g(vaut)g(3)g(sont)g(3)f(et)h FE(\241)p
FI(3.)-38 2100 y(Donc)f(dir)o(e)f(que)823 2200 y FE(j)r
Fz(x)f FE(\241)10 b FI(2)p FE(j)16 b(\306)e FI(3)-38
2325 y(r)o(evient)k(\340)f(dir)o(e)g(que)410 2467 y Fz(x)e
FE(\241)10 b FI(2)16 b FE(\306)e FI(3)146 b(ou)18 b(que)149
b Fz(x)15 b FE(\241)10 b FI(2)15 b FE(\306)f(\241)p FI(3)-38
2616 y(Donc)244 2865 y Fz(x)h FE(\241)363 2881 y Fy(\001)363
2865 y FI(2)c FE(\305)479 2881 y Fy(\001)479 2865 y FI(2)k
FE(\306)f FI(3)c FE(\305)g FI(2)148 b(ou)166 b Fz(x)15
b FE(\241)1281 2881 y Fy(\001)1281 2865 y FI(2)c FE(\305)1397
2881 y Fy(\001)1397 2865 y FI(2)k FE(\306)f(\241)p FI(3)c
FE(\305)g FI(2)244 2990 y Fz(x)20 b FE(\306)14 b FI(5)494
b(ou)166 b Fz(x)19 b FE(\306)14 b(\241)p FI(1)-38 3264
y(C)o(onclusion)19 b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h
Fz(x)f FE(\306)14 b FI(5)k(et)i Fz(x)f FE(\306)14 b(\241)p
FI(1.)p 0 TeXcolorgray 2050 3283 9 1514 v 0 TeXcolorgray
2095 1852 a FJ(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
2088 y FI(Dir)o(e)h(que)2956 2263 y FE(j)r Fz(x)f FE(\241)10
b FI(2)p FE(j)16 b(\306)e FI(3)2095 2487 y(r)o(evient)k(\340)g(dir)o(e)
e(que)i(la)g(distance)g(entr)o(e)h Fz(x)k FI(et)17 b(2)h(est)g
(\351gale)g(\340)f(3.)p 0 TeXcolorgray 0 TeXcolorgray
2268 3018 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 205.39366 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2268 3018 a 2610 2921 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -41.25638  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -41.25638
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -41.25638 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2595
3018 a FG(0)64 b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)h(3.0)f(3.5)g(4.0)g
(4.5)g(5.0)-1397 b FF(\241)p FG(0.5)-237 b FF(\241)p
FG(1.0)2610 2921 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2610 2921 a
tx@Dict begin { -8.5359 28.45274 } PutCoor PutBegin  end
 2610
2921 a 1 0 0 TeXcolorrgb 57 x FI(distance)18 b FE(\306)f
FI(3)p 0 TeXcolorgray 2610 2921 a
tx@Dict begin  PutEnd  end
 2610 2921 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2610 2921 a
tx@Dict begin { 76.82231 28.45274 } PutCoor PutBegin  end
 2610 2921 a 1 0 0 TeXcolorrgb 57 x FI(distance)h
FE(\306)f FI(3)p 0 TeXcolorgray 2610 2921 a
tx@Dict begin  PutEnd  end
 2610 2921
a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3973 3018 a
currentpoint initclip moveto
 3973 3018 a 2095 3264 a FI(On)g(voit)h(qu)n('il)h(y)d(a)i
(deux)f(solutions)i(:)h Fz(x)f FE(\306)c FI(5)i(et)j
Fz(x)g FE(\306)14 b(\241)p FI(1.)-246 3363 y
SDict begin H.S end
 -246 3363
a -246 3363 a
SDict begin 12 H.A end
 -246 3363 a -246 3363 a
SDict begin [/View [/XYZ H.V]/Dest (Item.61) cvn /DEST pdfmark end
 -246 3363 a 0 TeXcolorgray
-141 3478 a FI(2.)p 0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o
('\351quation)i FE(j)r Fz(x)15 b FE(\241)10 b FI(1)p
FE(j)16 b(\306)e FI(4.)-38 3677 y FJ(M\351thode)i(n\2601)f(:)i(av)o(ec)
d(la)h(d\351\002nition)h(de)g(la)f(v)o(aleur)f(absolue.)-38
3818 y FI(Les)k(nombr)o(es)f(dont)h(la)f(valeur)h(absolue)g(vaut)g(4)g
(sont)g(4)f(et)h FE(\241)p FI(4.)-38 3925 y(Donc)f(dir)o(e)f(que)823
4024 y FE(j)r Fz(x)f FE(\241)10 b FI(1)p FE(j)16 b(\306)e
FI(4)-38 4149 y(r)o(evient)k(\340)f(dir)o(e)g(que)410
4291 y Fz(x)e FE(\241)10 b FI(1)16 b FE(\306)e FI(4)146
b(ou)18 b(que)149 b Fz(x)15 b FE(\241)10 b FI(1)15 b
FE(\306)f(\241)p FI(4)-38 4441 y(Donc)244 4690 y Fz(x)h
FE(\241)363 4706 y Fy(\001)363 4690 y FI(1)c FE(\305)479
4706 y Fy(\001)479 4690 y FI(1)k FE(\306)f FI(4)c FE(\305)g
FI(1)148 b(ou)166 b Fz(x)15 b FE(\241)1281 4706 y Fy(\001)1281
4690 y FI(1)c FE(\305)1397 4706 y Fy(\001)1397 4690 y
FI(1)k FE(\306)f(\241)p FI(4)c FE(\305)g FI(1)244 4814
y Fz(x)20 b FE(\306)14 b FI(5)494 b(ou)166 b Fz(x)19
b FE(\306)14 b(\241)p FI(3)-38 5088 y(C)o(onclusion)19
b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h Fz(x)f
FE(\306)14 b FI(5)k(et)i Fz(x)f FE(\306)14 b(\241)p FI(3.)p
0 TeXcolorgray 2050 5107 9 1514 v 0 TeXcolorgray 2095
3677 a FJ(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
3898 y FI(Dir)o(e)h(que)2956 4058 y FE(j)r Fz(x)f FE(\241)10
b FI(1)p FE(j)16 b(\306)e FI(4)2095 4267 y(r)o(evient)k(\340)g(dir)o(e)
e(que)i(la)g(distance)g(entr)o(e)h Fz(x)k FI(et)17 b(1)h(est)g
(\351gale)g(\340)f(4.)p 0 TeXcolorgray 0 TeXcolorgray
2095 4860 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.29915 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2095 4860 a 2910 4763 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -98.16187  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -98.16187
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -98.16187 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2895
4860 a FG(0)64 b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)g(3.0)h(3.5)f(4.0)g
(4.5)g(5.0)-1397 b FF(\241)p FG(0.5)-237 b FF(\241)p
FG(1.0)g FF(\241)p FG(1.5)f FF(\241)p FG(2.0)h FF(\241)p
FG(2.5)g FF(\241)p FG(3.0)2910 4763 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-85.35823 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2910
4763 a
tx@Dict begin { -51.21501 28.45274 } PutCoor PutBegin  end
 2910 4763 a 1 0 0 TeXcolorrgb 57 x FI(distance)18
b FE(\306)f FI(4)p 0 TeXcolorgray 2910 4763 a
tx@Dict begin  PutEnd  end
 2910 4763
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2910 4763 a
tx@Dict begin { 51.21501 28.45274 } PutCoor PutBegin  end
 2910 4763 a 1 0 0
TeXcolorrgb 57 x FI(distance)h FE(\306)f FI(4)p 0 TeXcolorgray
2910 4763 a
tx@Dict begin  PutEnd  end
 2910 4763 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -85.35823
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4273 4860 a
currentpoint initclip moveto
 4273 4860 a 2095
5088 a FI(On)g(voit)h(qu)n('il)h(y)d(a)i(deux)f(solutions)i(:)h
Fz(x)f FE(\306)c FI(5)i(et)j Fz(x)g FE(\306)14 b(\241)p
FI(3.)-246 5188 y
SDict begin H.S end
 -246 5188 a -246 5188 a
SDict begin 12 H.A end
 -246 5188 a
-246 5188 a
SDict begin [/View [/XYZ H.V]/Dest (Item.62) cvn /DEST pdfmark end
 -246 5188 a 0 TeXcolorgray -141 5302 a FI(3.)p
0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o('\351quation)i
FE(j)r Fz(x)15 b FE(\305)10 b FI(2)p FE(j)16 b(\306)e
FI(2.)p 0 TeXcolorgray 1909 5895 a(15)p 0 TeXcolorgray
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FJ(M\351thode)16 b(n\2601)f(:)i(av)o(ec)d(la)
h(d\351\002nition)h(de)g(la)f(v)o(aleur)f(absolue.)-38
-3 y FI(Les)k(nombr)o(es)f(dont)h(la)f(valeur)h(absolue)g(vaut)g(2)g
(sont)g(2)f(et)h FE(\241)p FI(2.)-38 109 y(Donc)f(dir)o(e)f(que)823
209 y FE(j)r Fz(x)f FE(\305)10 b FI(2)p FE(j)16 b(\306)e
FI(2)-38 354 y(r)o(evient)k(\340)f(dir)o(e)g(que)410
528 y Fz(x)e FE(\305)10 b FI(2)16 b FE(\306)e FI(2)146
b(ou)18 b(que)149 b Fz(x)15 b FE(\305)10 b FI(2)15 b
FE(\306)f(\241)p FI(2)-38 716 y(Donc)244 1003 y Fz(x)h
FE(\305)363 1019 y Fy(\001)363 1003 y FI(2)c FE(\241)479
1019 y Fy(\001)479 1003 y FI(2)k FE(\306)f FI(2)c FE(\241)g
FI(2)148 b(ou)166 b Fz(x)15 b FE(\305)1281 1019 y Fy(\001)1281
1003 y FI(2)c FE(\241)1397 1019 y Fy(\001)1397 1003 y
FI(2)k FE(\306)f(\241)p FI(2)c FE(\241)g FI(2)244 1128
y Fz(x)20 b FE(\306)14 b FI(0)494 b(ou)166 b Fz(x)19
b FE(\306)14 b(\241)p FI(4)-38 1440 y(C)o(onclusion)19
b(:)f(l)o('\351quation)h(a)e(deux)h(solutions)h(:)h Fz(x)f
FE(\306)14 b FI(0)k(et)i Fz(x)f FE(\306)14 b(\241)p FI(4.)p
0 TeXcolorgray 2050 1458 9 1705 v 0 TeXcolorgray 2095
-163 a FJ(M\351thode)i(n\2602)g(:)g(av)o(ec)f(la)g(distance.)2095
3 y FI(Il)i(y)g(a)g(une)h(vr)o(aie)g(dif\002cult\351)g(:)g(l)o
('\351galit\351)h FE(j)r Fz(x)c FE(\305)10 b FI(2)p FE(j)15
b(\306)g FI(2)i(se)h(r\351\351cr)q(it)2902 186 y FE(j)r
Fz(x)d FE(\241)10 b FI(\()p FE(\241)p FI(2\))p FE(j)15
b(\306)f FI(2)2095 370 y(\(il)26 b(faut)h(absolument)g(fair)o(e)f
(appar)o(a\356tr)o(e)h(un)f(\253)16 b FE(\241)g FI(\273)51
b(pour)27 b(pouvoir)2095 469 y(interpr\351ter)19 b(en)f(ter)q(mes)g(de)
f(distance\).)h(Donc)e(dir)o(e)h(que)2956 653 y FE(j)r
Fz(x)e FE(\305)10 b FI(2)p FE(j)16 b(\306)e FI(2)2095
836 y(r)o(evient)k(\340)g(dir)o(e)e(que)i(la)g(distance)g(entr)o(e)h
Fz(x)k FI(et)17 b FE(\241)p FI(2)h(est)g(\351gale)g(\340)f(2.)p
0 TeXcolorgray 0 TeXcolorgray 2445 1280 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 162.71454 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2445 1280 a
3496 1183 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 36.09993  0 -126.61461  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -126.61461
 36.09993  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 36.09993
0.0 -126.61461 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3481 1280 a FG(0)64 b(0.5)-334
b FF(\241)p FG(0.5)-237 b FF(\241)p FG(1.0)g FF(\241)p
FG(1.5)f FF(\241)p FG(2.0)h FF(\241)p FG(2.5)g FF(\241)p
FG(3.0)g FF(\241)p FG(3.5)g FF(\241)p FG(4.0)3496 1183
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-113.81097 14.22636 -85.35823 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 14.22636 -85.35823 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3496 1183 a
tx@Dict begin { -99.5846 28.45274 } PutCoor PutBegin  end
 3496 1183 a 1 0 0
TeXcolorrgb 57 x FI(dist.)18 b FE(\306)f FI(2)p 0 TeXcolorgray
3496 1183 a
tx@Dict begin  PutEnd  end
 3496 1183 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-56.90549 14.22636 -28.45274 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 14.22636 -28.45274 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3496 1183 a
tx@Dict begin { -42.67911 28.45274 } PutCoor PutBegin  end
 3496
1183 a 1 0 0 TeXcolorrgb 57 x FI(dist.)h FE(\306)f FI(2)p
0 TeXcolorgray 3496 1183 a
tx@Dict begin  PutEnd  end
 3496 1183 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ -56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ -113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 0.0 0.0 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3796 1280 a
currentpoint initclip moveto
 3796
1280 a 2095 1440 a FI(On)g(voit)h(qu)n('il)h(y)d(a)i(deux)f(solutions)i
(:)h Fz(x)f FE(\306)c FI(0)i(et)j Fz(x)g FE(\306)14 b(\241)p
FI(4.)-246 1539 y
SDict begin H.S end
 -246 1539 a -246 1539 a
SDict begin 12 H.A end
 -246 1539 a
-246 1539 a
SDict begin [/View [/XYZ H.V]/Dest (Item.63) cvn /DEST pdfmark end
 -246 1539 a 0 TeXcolorgray -141 1654 a FI(4.)p
0 TeXcolorgray 43 w(On)j(r\351sout)h(l)o('\351quation)i
FE(j)r Fz(x)15 b FE(\241)10 b FI(2)p FE(j)16 b(\306)e(j)r
Fz(x)h FE(\241)10 b FI(6)p FE(j)p FI(.)-38 1768 y(C)o(onfor)q
(m\351ment)25 b(\340)d(l)o('indication,)j(on)e(tr)o(availle)h(avec)f
(la)g(distance)g(:)g(dir)o(e)f(que)h FE(j)r Fz(x)18 b
FE(\241)12 b FI(2)p FE(j)21 b(\306)e(j)r Fz(x)f FE(\241)12
b FI(6)p FE(j)p FI(,)24 b(c)n('est)g(dir)o(e)e(que)h(la)g(distance)g
(entr)o(e)i Fz(x)j FI(et)-38 1867 y(2)22 b(est)h(la)f(m\352me)h(que)g
(la)f(distance)h(entr)o(e)h Fz(x)j FI(et)22 b(6.)h(A)n(utr)o(ement)f
(dit,)j Fz(x)i FI(est)22 b(\340)g(\351gale)h(distance)f(de)g(2)g(et)h
(de)e(6.)i(Il)e(y)h(a)f(un)i(seul)g(nombr)o(e)h Fz(x)j
FI(qui)-38 1967 y(convienne)19 b(:)e(le)h(milieu)h(de)e(l)o('inter)q
(valle)1184 1968 y([)1209 1967 y(2;)8 b(6)1317 1968 y(])1352
1967 y(,)17 b(c)n('est-\340-dir)o(e)i Fz(x)h FE(\306)14
b FI(4.)p 0 TeXcolorgray 0 TeXcolorgray 1345 2402 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 170.71646 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1345
2402 a 1109 2305 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 199.1692  0 28.45274  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 28.45274
 199.1692  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 28.45274 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1094 2402 a FG(0)64
b(0.5)41 b(1.0)g(1.5)g(2.0)g(2.5)g(3.0)g(3.5)g(4.0)g(4.5)h(5.0)f(5.5)g
(6.0)g(6.5)-1494 b(0.5)41 b(1.0)1109 2305 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
170.71646 14.22636 128.03734 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 14.22636 128.03734 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1109 2305 a
tx@Dict begin { 51.21501 28.45274 } PutCoor PutBegin  end
 1109 2305 a 1 0 0 TeXcolorrgb 57 x FI(4)18
b(est)g(\340)f(\351gale)g(distance)h(de)f(2)h(et)g(6)p
0 TeXcolorgray 1109 2305 a
tx@Dict begin  PutEnd  end
 1109 2305 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 71.13185 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 14.22636 71.13185 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 1 0  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2762 2402 a
currentpoint initclip moveto
 2762 2402 a -38 2560 a FI(C)o(onclusion)h(:)f(il)f(y)g(a)g
(une)h(seule)h(solution,)i Fz(x)f FE(\306)14 b FI(4.)-246
2645 y
SDict begin H.S end
 -246 2645 a -246 2645 a
SDict begin 12 H.A end
 -246 2645 a -246 2645
a
SDict begin [/View [/XYZ H.V]/Dest (exo.34) cvn /DEST pdfmark end
 -246 2645 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)g(34)p
0 TeXcolorgray 41 w FI(C)o(ommen\347ons)20 b(par)d(deux)h(exemples)h(:)
p 0 TeXcolorgray -76 2859 a(\225)p 0 TeXcolorgray 42
w(si)g Fz(x)h FE(\306)14 b FI(3,)k(alors)463 2788 y FE(p)p
526 2788 82 5 v 528 2859 a Fz(x)572 2835 y FG(2)622 2859
y FE(\306)691 2788 y(p)p 755 2788 76 5 v 71 x FI(3)795
2835 y FG(2)844 2859 y FE(\306)914 2794 y(p)p 977 2794
41 5 v 977 2859 a FI(9)d FE(\306)f FI(3.)p 0 TeXcolorgray
-76 2958 a(\225)p 0 TeXcolorgray 42 w(si)19 b Fz(x)h
FE(\306)14 b(\241)p FI(3,)k(alors)518 2888 y FE(p)p 581
2888 82 5 v 583 2958 a Fz(x)627 2934 y FG(2)677 2958
y FE(\306)746 2885 y Fr(p)p 822 2885 184 5 v 73 x FI(\()p
FE(\241)p FI(3\))971 2934 y FG(2)1021 2958 y FE(\306)1090
2893 y(p)p 1153 2893 41 5 v 1153 2958 a FI(9)d FE(\306)f
FI(3.)-246 3058 y(On)19 b(compr)o(end)f(que)h(quand)i
Fz(x)i FI(est)c(positif,)i(on)d(aur)o(a)h(toujours)1678
2987 y FE(p)p 1742 2987 82 5 v 1744 3058 a Fz(x)1788
3034 y FG(2)1838 3058 y FE(\306)f Fz(x)i FE(\306)c(j)r
Fz(x)5 b FE(j)19 b FI(;)f(tandis)h(que)g(dans)f(le)h(cas)g(o\371)h
Fz(x)k FI(est)19 b(n\351gatif,)g(le)g(signe)g FE(\241)f
FI(\253)c(dispa-)-246 3157 y(r)o(a\356t)g(\273)35 b(lorsqu)n('on)18
b(\351l\350ve)g(au)g(carr\351,)f(ce)g(qui)h(donne)g(\002nalement)1674
3087 y FE(p)p 1737 3087 V 1739 3157 a Fz(x)1783 3134
y FG(2)1833 3157 y FE(\306)c(j)r Fz(x)5 b FE(j)p FI(.)-246
3257 y(A)n(utr)o(ement)18 b(dit,)g(quel)g(que)g(soit)i
Fz(x)j FI(\(y)16 b(compr)q(is)i(si)i Fz(x)g FE(\306)14
b FI(0\),)k(on)f(a)g(l)o('\351galit\351)1775 3374 y Fr(p)p
1851 3374 V 1853 3456 a Fz(x)1897 3432 y FG(2)1947 3456
y FE(\306)d(j)r Fz(x)5 b FE(j)p FI(.)-246 3535 y
SDict begin H.S end
 -246
3535 a -246 3535 a
SDict begin 12 H.A end
 -246 3535 a -246 3535 a
SDict begin [/View [/XYZ H.V]/Dest (exo.35) cvn /DEST pdfmark end
 -246 3535
a -246 3553 a
SDict begin H.S end
 -246 3553 a -246 3553 a
SDict begin 12 H.A end
 -246 3553 a -246
3553 a
SDict begin [/View [/XYZ H.V]/Dest (Item.64) cvn /DEST pdfmark end
 -246 3553 a 0 TeXcolorgray 103 x FJ(Ex)o(er)o(cice)14
b(35)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(Dir)o(e)19 b(que)h FE(j)r Fz(x)d FE(\241)11
b FI(2)p FE(j)18 b(\307)g FI(3,)i(c)n('est)h(dir)o(e)f(que)g(la)h
(distance)g(entr)o(e)h Fz(x)j FI(et)c(2)g(est)f(str)q(ictement)i
(inf\351r)q(ieur)o(e)f(\340)f(3.)h(On)f(voit)h(que)f(les)j
Fz(x)j FI(qui)-38 3755 y(conviennent)20 b(sont)e(tous)g(les)g(nombr)o
(es)f(de)g(l)o('inter)q(valle)1674 3756 y(])1700 3755
y FE(\241)p FI(1;)8 b(5)1863 3756 y([)1906 3755 y(\(extr\351mit\351s)19
b(ex)o(clues)o(,)h(puisque)f(l)o('in\351galit\351)g(est)f(str)q
(icte\).)p 0 TeXcolorgray 0 TeXcolorgray 1201 4198 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 205.39366 a add def
/d 0.0 a add neg def /h 43.01123 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end

1201 4198 a 1544 4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.13728  0 -41.25638  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -41.25638
 164.13728  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-11.67528  def /maxTickline 31.33595  def /dT 932339 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.13728
0.0 -41.25638 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1529 4198 a FG(0)63
b(0.5)41 b(1.0)h(1.5)f(2.0)g(2.5)g(3.0)g(3.5)g(4.0)g(4.5)g(5.0)-1397
b FF(\241)p FG(0.5)-237 b FF(\241)p FG(1.0)1544 4101
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 14.22636 14.22636 14.22636   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 14.22636 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544 4101 a
tx@Dict begin { -8.5359 28.45274 } PutCoor PutBegin  end
 1544 4101 a 1 0 0
TeXcolorrgb 57 x FI(distance)18 b FE(\306)f FI(3)p 0
TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 14.22636 99.5846 14.22636   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544
4101 a
tx@Dict begin { 76.82231 28.45274 } PutCoor PutBegin  end
 1544 4101 a 1 0 0 TeXcolorrgb 57 x FI(distance)h
FE(\306)f FI(3)p 0 TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 -28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1544 4101 a
tx@Dict begin { 138.84952 9.10507 } PutCoor PutBegin  end

1544 4101 a 0 1 0 TeXcolorrgb 134 x Fj([)p 0 TeXcolorgray
1544 4101 a
tx@Dict begin  PutEnd  end
 1544 4101 a 1544 4101 a
tx@Dict begin { -31.86693 9.10507 } PutCoor PutBegin  end
 1544 4101 a 0 1 0
TeXcolorrgb 134 x Fj(])p 0 TeXcolorgray 1544 4101 a
tx@Dict begin  PutEnd  end
 1544
4101 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2906 4198
a
currentpoint initclip moveto
 2906 4198 a -246 4242 a
SDict begin H.S end
 -246 4242 a -246 4242 a
SDict begin 12 H.A end
 -246
4242 a -246 4242 a
SDict begin [/View [/XYZ H.V]/Dest (Item.65) cvn /DEST pdfmark end
 -246 4242 a 0 TeXcolorgray -141 4356
a FI(2.)p 0 TeXcolorgray 43 w(Les)24 b(points)g(de)f(l)o('inter)q
(valle)j(ci-dessous)e(sont)g(les)g(nombr)o(es)h Fz(x)j
FI(dont)23 b(la)h(distance)f(\340)g(8)h(est)f(inf\351r)q(ieur)o(e)h(ou)
f(\351gale)h(\340)f(2)g(\(donc)g(extr\351mit\351s)-38
4456 y(incluses\))9 b(;)19 b(autr)o(ement)f(dit,)g(ce)f(sont)h(les)g
(nombr)o(es)h Fz(x)k FI(tels)18 b(que)1879 4638 y FE(j)r
Fz(x)d FE(\241)10 b FI(8)p FE(j)16 b(\267)e FI(2.)p 0
TeXcolorgray 0 TeXcolorgray 1109 5119 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 227.62195 a add def
/d 0.0 a add neg def /h 45.52455 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1109 5119 a 164
5001 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 341.43292  0 113.81097  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 113.81097
 341.43292  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-14.22636  def /maxTickline 14.79555  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 341.43292
0.0 113.81097 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 149 5098 a FG(0)205 b(1)g(2)g(3)h(4)f(5)g(6)g
(7)g(8)h(9)189 b(10)175 b(11)-2409 b(1)205 b(2)g(3)h(4)164
5001 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 284.52744 0.0 170.71646
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 164 5001
a
tx@Dict begin { 167.30226 7.96672 } PutCoor PutBegin  end
 164 5001 a 0 1 0 TeXcolorrgb 112 x Fi([)p 0 TeXcolorgray
164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a 164 5001 a
tx@Dict begin { 281.11324 7.96672 } PutCoor PutBegin  end
 164 5001 a 0 1 0 TeXcolorrgb
112 x Fi(])p 0 TeXcolorgray 164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
284.52744 14.22636 241.84831 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
227.62195 14.22636 241.84831 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
164 5001 a
tx@Dict begin { 179.25237 28.45274 } PutCoor PutBegin  end
 164 5001 a 1 0 0 TeXcolorrgb 57 x FI(dist.)18
b FE(\306)f FI(2)p 0 TeXcolorgray 164 5001 a
tx@Dict begin  PutEnd  end
 164 5001
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
170.71646 14.22636 184.94283 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
227.62195 14.22636 184.94283 14.22636   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 164 5001 a
tx@Dict begin { 233.31241 28.45274 } PutCoor PutBegin  end
 164 5001 a 1 0 0
TeXcolorrgb 57 x FI(dist.)h FE(\306)f FI(2)p 0 TeXcolorgray
164 5001 a
tx@Dict begin  PutEnd  end
 164 5001 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0 0 1  setrgbcolor  [ 227.62195
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2999 5119 a
currentpoint initclip moveto
 2999 5119 a -246 5186 a
SDict begin H.S end
 -246 5186 a -246
5186 a
SDict begin 12 H.A end
 -246 5186 a -246 5186 a
SDict begin [/View [/XYZ H.V]/Dest (exo.36) cvn /DEST pdfmark end
 -246 5186 a 0 TeXcolorgray
133 x FJ(Ex)o(er)o(cice)d(36)p 0 TeXcolorgray 41 w FI(Le)23
b(but)f(de)g(l)o('exer)o(cice)h(est)g(de)f(prouver)h(que)1569
5254 y FE(p)p 1632 5254 41 5 v 1632 5319 a FI(2)g(n)-6
b('est)23 b(pas)g(un)f(nombr)o(e)h(r)o(ationnel.)h(P)n(our)d(cela,)i
(on)f(fait)h(un)g(r)o(aisonnement)i(par)-246 5418 y(l)o('absur)o(de)18
b(:)f(on)g(suppose)i(que)691 5353 y FE(p)p 754 5353 V
754 5418 a FI(2)f(est)g(r)o(ationnel,)g(c)n('est-\340-dir)o(e)f(qu)n
('on)h(peut)g(l)o('\351cr)q(ir)o(e)f(sous)h(for)q(me)g(de)f(fr)o
(action)g(irr\351ductible)3551 5353 y FE(p)p 3615 5353
V 65 x FI(2)d FE(\306)3749 5376 y Fu(p)p 3748 5399 40
5 v 3750 5447 a(q)3798 5418 y FI(,)k(o\371)h Fz(p)j FI(et)e
Fz(q)-246 5526 y FI(sont)e(deux)g(entiers)g(str)q(ictement)h(positifs)o
(.)g(Il)e(faut,)h(par)q(tant)g(de)f(l\340,)h(aboutir)f(\340)g(une)h
(absur)o(dit\351.)p 0 TeXcolorgray 1909 5895 a(16)p 0
TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.66) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(par)q(t)g(de)g(l)o
('\351galit\351)633 -228 y FE(p)p 697 -228 41 5 v 65
x FI(2)e FE(\306)832 -205 y Fu(p)p 831 -182 40 5 v 833
-134 a(q)881 -163 y FI(,)i(on)h(\351l\350ve)g(au)f(carr\351)g(et)h(on)f
(multiplie)j(par)g Fz(q)2227 -193 y FG(2)2293 -163 y
FI(:)1840 87 y FE(p)p 1903 87 41 5 v 1903 156 a FI(2)1944
103 y FG(2)1993 156 y FE(\306)2062 46 y Fr(\265)2108
100 y Fz(p)p 2106 137 53 5 v 2109 213 a(q)2169 46 y Fr(\266)2203
67 y FG(2)1938 359 y FI(2)15 b FE(\306)2074 303 y Fz(p)p
2072 340 V 2075 416 a(q)2145 359 y FE(\243)2222 303 y
Fz(p)p 2220 340 V 2223 416 a(q)1938 593 y FI(2)g FE(\306)2074
537 y Fz(p)2125 507 y FG(2)p 2072 574 88 5 v 2075 650
a Fz(q)2124 626 y FG(2)1797 827 y FI(2)p 1 0 0 TeXcolorrgb
FE(\243)r Fz(q)1943 793 y FG(2)p 0 TeXcolorgray 1993
827 a FE(\306)2074 771 y Fz(p)2125 741 y FG(2)p 2072
808 V 2064 926 a Fy(\000)2085 904 y(\000)2075 899 y Fz(q)2124
869 y FG(2)p 1 0 0 TeXcolorrgb 2169 827 a FE(\243)2226
854 y Fy(\023)2246 829 y(\023)2226 827 y Fz(q)2275 793
y FG(2)p 0 TeXcolorgray 1852 1024 a FI(2)r Fz(q)1943
990 y FG(2)1993 1024 y FE(\306)h Fz(p)2115 990 y FG(2)-246
1124 y
SDict begin H.S end
 -246 1124 a -246 1124 a
SDict begin 12 H.A end
 -246 1124 a -246 1124
a
SDict begin [/View [/XYZ H.V]/Dest (Item.67) cvn /DEST pdfmark end
 -246 1124 a 0 TeXcolorgray -141 1207 a FI(2.)p 0 TeXcolorgray
43 w(C)o(ommen\347ons)i(par)e(un)h(exemple)h(:)e(pr)o(enons)h(un)g
(nombr)o(e)f(qui)h(\253)c(se)j(ter)q(mine)h(par)f(4)d(\273)32
b(\(donc)16 b(le)g(chiffr)o(e)h(des)f(unit\351s)i(est)f(4\).)f(Le)h
(carr\351)f(de)g(ce)-38 1306 y(nombr)o(e)h(va)g(\253)d(se)j(ter)q
(miner)h(par)g(6)c(\273,)j(puisque)i(4)1403 1276 y FG(2)1453
1306 y FE(\306)14 b FI(16.)19 b(A)n(utr)o(ement)f(dit,)f(le)h(chiffr)o
(e)g(des)f(unit\351s)i(du)e(carr\351)g(est)h(6.)-38 1418
y(A)-5 b(vec)15 b(la)h(m\352me)h(technique)o(,)g(on)f(voit)g(que)g(si)g
(le)f(chiffr)o(e)h(des)g(unit\351s)h(est)f(9,)g(celui)h(du)e(carr\351)g
(est)h(1)g(\(puisque)h(9)3182 1388 y FG(2)3231 1418 y
FE(\306)e FI(81\))9 b(;)16 b(etc)o(.)g(On)f(r)o(emplit)i(ainsi)-38
1518 y(le)h(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray
878 1580 2352 4 v 878 1679 4 100 v 931 1650 a(Chiffr)o(e)g(des)g
(unit\351s)g(de)h Fz(p)p 1792 1679 V 144 w FI(0)p 1935
1679 V 103 w(1)p 2079 1679 V 104 w(2)p 2222 1679 V 103
w(3)p 2366 1679 V 104 w(4)p 2509 1679 V 103 w(5)p 2653
1679 V 104 w(6)p 2796 1679 V 103 w(7)p 2939 1679 V 104
w(8)p 3083 1679 V 103 w(9)p 3226 1679 V 878 1683 2352
4 v 878 1782 4 100 v 931 1753 a(Chiffr)o(e)f(des)g(unit\351s)g(de)h
Fz(p)1707 1722 y FG(2)p 1792 1782 V 1845 1753 a FI(0)p
1935 1782 V 103 w(1)p 2079 1782 V 104 w(4)p 2222 1782
V 103 w(9)p 2366 1782 V 104 w(6)p 2509 1782 V 103 w(5)p
2653 1782 V 104 w(6)p 2796 1782 V 103 w(9)p 2939 1782
V 104 w(4)p 3083 1782 V 103 w(1)p 3226 1782 V 878 1786
2352 4 v -246 1823 a
SDict begin H.S end
 -246 1823 a -246 1823 a
SDict begin 12 H.A end
 -246 1823
a -246 1823 a
SDict begin [/View [/XYZ H.V]/Dest (Item.68) cvn /DEST pdfmark end
 -246 1823 a 0 TeXcolorgray -141 1913 a
FI(3.)p 0 TeXcolorgray 43 w(P)n(our)f(avoir)h(le)g(chiffr)o(e)g(des)f
(unit\351s)i(de)f(2)r Fz(q)1221 1883 y FG(2)1256 1913
y FI(,)g(il)g(suf\002t)g(de)f(r)o(epr)o(endr)o(e)g(la)g(deuxi\350me)j
(ligne)e(du)f(tableau)h(pr\351c\351dent)h(et)f(de)f(multiplier)j(par)e
(2.)-38 2013 y(P)m(ar)f(exemple)o(,)j(si)e(le)h(chiffr)o(e)f(des)g
(unit\351s)h(de)h Fz(q)k FI(est)19 b(7,)h(alors)f(celui)h(de)g
Fz(q)2087 1982 y FG(2)2141 2013 y FI(est)f(9)h(;)f(et)g(celui)h(de)f(2)
r Fz(q)2822 1982 y FG(2)2875 2013 y FI(est)h(8)f(\(puisque)i(2)11
b FE(\243)g FI(9)16 b FE(\306)g FI(18\).)k(On)e(r)o(emplit)-38
2112 y(ainsi)g(le)g(nouveau)g(tableau)g(:)p 0 TeXcolorgray
0 TeXcolorgray 859 2174 2391 4 v 859 2274 4 100 v 912
2244 a(Chiffr)o(e)g(des)f(unit\351s)i(de)g Fz(q)p 1811
2274 V 184 w FI(0)p 1955 2274 V 104 w(1)p 2098 2274 V
103 w(2)p 2241 2274 V 104 w(3)p 2385 2274 V 103 w(4)p
2528 2274 V 104 w(5)p 2672 2274 V 103 w(6)p 2815 2274
V 103 w(7)p 2959 2274 V 104 w(8)p 3102 2274 V 103 w(9)p
3246 2274 V 859 2277 2391 4 v 859 2377 4 100 v 912 2347
a(Chiffr)o(e)f(des)f(unit\351s)i(de)e(2)r Fz(q)1726 2317
y FG(2)p 1811 2377 V 1864 2347 a FI(0)p 1955 2377 V 104
w(2)p 2098 2377 V 103 w(8)p 2241 2377 V 104 w(8)p 2385
2377 V 103 w(2)p 2528 2377 V 104 w(0)p 2672 2377 V 103
w(2)p 2815 2377 V 103 w(8)p 2959 2377 V 104 w(8)p 3102
2377 V 103 w(2)p 3246 2377 V 859 2380 2391 4 v -246 2417
a
SDict begin H.S end
 -246 2417 a -246 2417 a
SDict begin 12 H.A end
 -246 2417 a -246 2417 a
SDict begin [/View [/XYZ H.V]/Dest (Item.69) cvn /DEST pdfmark end
 -246
2417 a 0 TeXcolorgray -141 2507 a FI(4.)p 0 TeXcolorgray
43 w(D)o('apr\350s)k(la)g(question)i(1,)f(2)r Fz(q)831
2477 y FG(2)884 2507 y FE(\306)e Fz(p)1010 2477 y FG(2)1045
2507 y FI(.)h(Les)h(nombr)o(es)g(2)r Fz(q)1644 2477 y
FG(2)1700 2507 y FI(et)i Fz(p)1840 2477 y FG(2)1895 2507
y FI(\351tant)e(\351gaux,)g(ils)g(ont)g(le)f(m\352me)i(chiffr)o(e)f
(des)f(unit\351s)o(.)h(Or)f(dans)h(nos)f(deux)-38 2607
y(tableaux,)e(le)f(seul)h(chiffr)o(e)f(en)g(commun)h(des)f
(deuxi\350mes)h(lignes)g(est)f(le)g(0)g(;)g(et)g(on)g(l)o('obtient)i
(lorsque)e(le)h(chiffr)o(e)f(des)g(unit\351s)h(de)g Fz(p)k
FI(est)c(0,)f(et)-38 2706 y(lorsque)g(le)g(chiffr)o(e)g(des)f
(unit\351s)i(de)g Fz(q)k FI(est)18 b(0)g(ou)f(5.)-246
2738 y
SDict begin H.S end
 -246 2738 a -246 2738 a
SDict begin 12 H.A end
 -246 2738 a -246 2738
a
SDict begin [/View [/XYZ H.V]/Dest (Item.70) cvn /DEST pdfmark end
 -246 2738 a 0 TeXcolorgray -141 2831 a FI(5.)p 0 TeXcolorgray
43 w(S)n(upposons)25 b(que)518 2766 y FE(p)p 582 2766
41 5 v 65 x FI(2)e(soit)g(r)o(ationnel)h(:)f(on)g(peut)g(donc)g(l)o
('\351cr)q(ir)o(e)f(sous)i(for)q(me)e(de)h(fr)o(action)g
(irr\351ductible)3167 2766 y FE(p)p 3231 2766 V 65 x
FI(2)d FE(\306)3376 2788 y Fu(p)p 3375 2812 40 5 v 3377
2859 a(q)3425 2831 y FI(.)j(D)o('apr\350s)f(la)h(question)-38
2939 y(pr\351c\351dente)o(,)18 b Fz(p)j FI(se)16 b(ter)q(mine)g(par)g
(0)f(et)j Fz(q)j FI(se)16 b(ter)q(mine)g(par)g(0)g(ou)f(5.)h(M)o(ais)g
(alors)i Fz(p)j FI(et)d Fz(q)j FI(sont)16 b(tous)g(deux)g(multiples)i
(de)d(5,)h(et)g(donc)f(la)h(fr)o(action)-27 2996 y Fu(p)p
-28 3019 V -26 3067 a(q)39 3039 y FI(n)-6 b('est)18 b(pas)g
(irr\351ductible)o(,)g(en)f(contr)o(adiction)h(avec)g(l)o
('hypoth\350se)i(que)e(nous)g(avons)g(faite)g(au)f(d\351par)q(t.)-38
3221 y(C)o(onclusion)i(:)f(supposant)h(que)940 3156 y
FE(p)p 1003 3156 41 5 v 1003 3221 a FI(2)f(\351tait)g(r)o(ationnel,)h
(on)f(aboutit)g(\340)f(une)h(absur)o(dit\351)9 b(;)17
b(c)n('est)h(donc)f(que)3056 3156 y FE(p)p 3119 3156
V 3119 3221 a FI(2)h(est)g(irr)o(ationnel)h(:)3716 3156
y FE(p)p 3780 3156 V 65 x FI(2)14 b FE(\335)h Fk(Q)p
FI(.)-246 3364 y
SDict begin H.S end
 -246 3364 a -246 3364 a
SDict begin 12 H.A end
 -246 3364 a
-246 3364 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -246 3364 a 132 x FK(3)105 b(G\351om\351tr)q(ie)23
b(r)n(ep\351r\351e)-246 3605 y
SDict begin H.S end
 -246 3605 a -246 3605
a
SDict begin 12 H.A end
 -246 3605 a -246 3605 a
SDict begin [/View [/XYZ H.V]/Dest (exo.37) cvn /DEST pdfmark end
 -246 3605 a -246 3593 a
SDict begin H.S end
 -246
3593 a -246 3593 a
SDict begin 12 H.A end
 -246 3593 a -246 3593 a
SDict begin [/View [/XYZ H.V]/Dest (Item.71) cvn /DEST pdfmark end
 -246 3593
a 0 TeXcolorgray 87 x FJ(Ex)o(er)o(cice)14 b(37)p 0 TeXcolorgray
0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 934 5208 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 269.73187 a add def
/d 0.0 a add neg def /h 176.97607 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 934 5208 a 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 147.385 0.0 -122.34688 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 77.96066 0.0 -99.01541   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 147.385  0 -122.34688  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 147.385  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.01541  def /maxTickline 77.96066  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.96066
0.0 -99.01541   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 147.385
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 77.96066  0 -99.01541  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -99.01541
 77.96066  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 147.385  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.96066
0.0 -99.01541   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 147.385
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1935 4483 a FG(0)205 b(1)g(2)g(3)g(4)-1233 b FF(\241)p
FG(1)-309 b FF(\241)p FG(2)g FF(\241)p FG(3)g FF(\241)p
FG(4)1861 4405 y(0)1819 4641 y FF(\241)p FG(1)1819 4877
y FF(\241)p FG(2)1819 5113 y FF(\241)p FG(3)1861 4169
y(1)1861 3933 y(2)1950 4386 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 71.13185 0.0 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 46.20705 27.54231 51.67001
31.63943   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 47.91458 25.26604 53.37755
29.36316   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -56.90549 71.13185
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 88.88615 -29.36316 94.34912
-25.26604   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 90.59369 -31.63943 96.05666
-27.54231   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 -14.22636 -113.81097
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -73.31783 18.71638 -68.94588
23.9627   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -85.35823 -28.45274
-14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 12.04039 -52.41545 16.41234
-47.16913   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1950
4386 a 0.30196 0.30196 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1950 4386 a
tx@Dict begin { 116.08723 -51.21501 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1 TeXcolorrgb
Fz(B)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 71.13185
0.0   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 73.40813 4.55254 } PutCoor PutBegin  end
 1950 4386 a 0 1 0
TeXcolorrgb 2 w Fz(I)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950
4386 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -113.81097 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386
a
tx@Dict begin { -111.5347 62.59595 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1 TeXcolorrgb 1948 4385
a Fz(C)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { 59.18175 -79.66776 } PutCoor PutBegin  end
 1950 4386 a 0.30196 0.30196 1
TeXcolorrgb Fz(D)p 0 TeXcolorgray 1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -28.45274
-14.22636   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1950 4386 a
tx@Dict begin { -36.98865 -21.05518 } PutCoor PutBegin  end

1950 4386 a 0 1 0 TeXcolorrgb 1955 4377 a Fz(J)p 0 TeXcolorgray
1950 4386 a
tx@Dict begin  PutEnd  end
 1950 4386 a 3173 5208 a
currentpoint initclip moveto
 3173 5208 a -246
5245 a
SDict begin H.S end
 -246 5245 a -246 5245 a
SDict begin 12 H.A end
 -246 5245 a -246 5245
a
SDict begin [/View [/XYZ H.V]/Dest (Item.72) cvn /DEST pdfmark end
 -246 5245 a 0 TeXcolorgray 10 5357 a FI(\(a\))p 0 TeXcolorgray
41 w(On)17 b(a)23 b Fz(A)s FI(\()15 b(1)409 5403 y Fu(x)444
5413 y Ff(A)496 5357 y FI(;)41 b(2)544 5403 y Fu(y)577
5413 y Ff(A)613 5357 y FI(\))16 b(et)i Fz(B)7 b FI(\()16
b(4)822 5403 y Fu(x)854 5413 y Ff(B)910 5357 y FI(;)26
b FE(\241)p FI(2)971 5403 y Fu(y)1001 5413 y Ff(B)1051
5357 y FI(\).)17 b(On)g(calcule)i(les)f(coor)o(donn\351es)f(de)i
Fz(I)42 b FI(:)983 5617 y Fz(I)1027 5530 y Fr(\263)1071
5561 y Fz(x)1116 5573 y Fu(A)1170 5561 y FE(\305)12 b
Fz(x)1278 5573 y Fu(B)p 1069 5598 257 5 v 1177 5674 a
FI(2)1336 5617 y(;)1378 5561 y Fz(y)1421 5573 y Fu(A)1475
5561 y FE(\305)i Fz(y)1583 5573 y Fu(B)p 1374 5598 256
5 v 1482 5674 a FI(2)1640 5530 y Fr(\264)1828 5617 y
Fz(I)1872 5507 y Fr(\265)1916 5561 y FI(1)c FE(\305)g
FI(4)p 1916 5598 157 5 v 1974 5674 a(2)2082 5617 y(;)2121
5561 y(2)g FE(\305)g FI(\()p FE(\241)p FI(2\))p 2121
5598 265 5 v 2233 5674 a(2)2395 5507 y Fr(\266)2586 5617
y Fz(I)2630 5507 y Fr(\265)2675 5561 y FI(5)p 2675 5598
41 5 v 2675 5674 a(2)2725 5617 y(;)2763 5561 y(0)p 2763
5598 V 2763 5674 a(2)2814 5507 y Fr(\266)3004 5617 y
Fz(I)3048 5618 y FI(\()3075 5617 y(2,)e(5;)g(0)3251 5618
y(\))3289 5617 y(.)p 0 TeXcolorgray 1909 5895 a(17)p
0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.73) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 4 -163
a FI(\(b\))p 0 TeXcolorgray 635 -33 a Fz(A)s(B)22 b FE(\306)825
-136 y Fr(q)p 902 -136 771 5 v 902 -32 a FI(\()930 -33
y Fz(x)971 -21 y Fu(B)1029 -33 y FE(\241)12 b Fz(x)1141
-21 y Fu(A)1185 -32 y FI(\))1211 -62 y FG(2)1257 -33
y FE(\305)1322 -97 y Fr(\241)1355 -33 y Fz(y)1394 -21
y Fu(B)1451 -33 y FE(\241)i Fz(y)1563 -21 y Fu(A)1607
-97 y Fr(\242)1637 -76 y FG(2)1686 -33 y FE(\306)1755
-136 y Fr(q)p 1831 -136 620 5 v 104 x FI(\()1858 -33
y(4)c FE(\241)g FI(1)2013 -32 y(\))2041 -62 y FG(2)2086
-33 y FE(\305)2151 -32 y FI(\()2178 -33 y FE(\241)p FI(2)g
FE(\241)g FI(2)2388 -32 y(\))2416 -62 y FG(2)2465 -33
y FE(\306)2534 -136 y Fr(q)p 2611 -136 335 5 v 2611 -33
a FI(3)2651 -57 y FG(2)2696 -33 y FE(\305)2761 -32 y
FI(\()2788 -33 y FE(\241)p FI(4)2883 -32 y(\))2910 -62
y FG(2)2960 -33 y FE(\306)3029 -102 y(p)p 3092 -102 197
5 v 3092 -33 a FI(9)g FE(\305)g FI(16)16 b FE(\306)3373
-102 y(p)p 3436 -102 82 5 v 3436 -33 a FI(25)f FE(\306)g
FI(5.)-246 48 y
SDict begin H.S end
 -246 48 a -246 48 a
SDict begin 12 H.A end
 -246 48 a -246 48
a
SDict begin [/View [/XYZ H.V]/Dest (Item.74) cvn /DEST pdfmark end
 -246 48 a -246 48 a
SDict begin H.S end
 -246 48 a -246 48 a
SDict begin 12 H.A end
 -246 48 a -246
48 a
SDict begin [/View [/XYZ H.V]/Dest (Item.75) cvn /DEST pdfmark end
 -246 48 a 0 TeXcolorgray -141 131 a FI(2.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w(On)i(a)e
Fz(C)9 b FI(\()p FE(\241)p FI(4)421 177 y Fu(x)452 187
y Ff(C)520 131 y FI(;)41 b(2)569 177 y Fu(y)598 187 y
Ff(C)637 131 y FI(\))17 b(et)g Fz(D)6 b FI(\()18 b(2)855
177 y Fu(x)887 187 y Ff(D)948 131 y FI(;)25 b FE(\241)p
FI(3)1006 177 y Fu(y)1036 187 y Ff(D)1089 131 y FI(\).)17
b(On)g(calcule)h(les)g(coor)o(donn\351es)g(de)k Fz(J)39
b FI(:)839 404 y Fz(J)882 316 y Fr(\263)926 347 y Fz(x)965
359 y Fu(C)1025 347 y FE(\305)12 b Fz(x)1133 359 y Fu(D)p
924 384 263 5 v 1035 461 a FI(2)1197 404 y(;)1239 347
y Fz(y)1276 359 y Fu(C)1336 347 y FE(\305)i Fz(y)1444
359 y Fu(D)p 1235 384 V 1346 461 a FI(2)1507 316 y Fr(\264)1698
404 y Fz(J)1741 294 y Fr(\265)1785 347 y FE(\241)p FI(4)c
FE(\305)g FI(2)p 1785 384 212 5 v 1871 461 a(2)2006 404
y(;)2045 347 y(2)g FE(\305)g FI(\()p FE(\241)p FI(3\))p
2045 384 265 5 v 2157 461 a(2)2319 294 y Fr(\266)2513
404 y Fz(J)2556 294 y Fr(\265)2600 347 y FE(\241)p FI(2)p
2600 384 96 5 v 2627 461 a(2)2705 404 y(;)2744 347 y
FE(\241)p FI(1)p 2744 384 V 2771 461 a(2)2849 294 y Fr(\266)3043
404 y Fz(J)3086 405 y FI(\()3112 404 y FE(\241)p FI(1;)e
FE(\241)p FI(0,)g(5)3398 405 y(\))3435 404 y(.)-246 557
y
SDict begin H.S end
 -246 557 a -246 557 a
SDict begin 12 H.A end
 -246 557 a -246 557 a
SDict begin [/View [/XYZ H.V]/Dest (Item.76) cvn /DEST pdfmark end
 -246 557
a 0 TeXcolorgray 4 637 a FI(\(b\))p 0 TeXcolorgray 604
767 a Fz(C)h(D)20 b FE(\306)810 664 y Fr(q)p 887 664
784 5 v 887 768 a FI(\()916 767 y Fz(x)957 779 y Fu(D)1020
767 y FE(\241)12 b Fz(x)1126 779 y Fu(C)1176 768 y FI(\))1203
738 y FG(2)1248 767 y FE(\305)1313 702 y Fr(\241)1347
767 y Fz(y)1386 779 y Fu(D)1450 767 y FE(\241)i Fz(y)1556
779 y Fu(C)1605 702 y Fr(\242)1635 724 y FG(2)1684 767
y FE(\306)1753 663 y Fr(q)p 1830 663 729 5 v 1830 768
a FI(\()1856 767 y(2)c FE(\241)g FI(\()p FE(\241)p FI(4\))2120
768 y(\))2148 737 y FG(2)2193 767 y FE(\305)2258 768
y FI(\()2285 767 y FE(\241)p FI(3)g FE(\241)g FI(2)2495
768 y(\))2523 738 y FG(2)2572 767 y FE(\306)2641 664
y Fr(q)p 2717 664 335 5 v 103 x FI(6)2757 743 y FG(2)2803
767 y FE(\305)2868 768 y FI(\()2895 767 y FE(\241)p FI(5)2990
768 y(\))3017 738 y FG(2)3066 767 y FE(\306)3135 698
y(p)p 3199 698 238 5 v 69 x FI(36)g FE(\305)g FI(25)16
b FE(\306)3520 698 y(p)p 3583 698 82 5 v 3583 767 a FI(61)q(.)-246
865 y
SDict begin H.S end
 -246 865 a -246 865 a
SDict begin 12 H.A end
 -246 865 a -246 865 a
SDict begin [/View [/XYZ H.V]/Dest (exo.38) cvn /DEST pdfmark end
 -246
865 a -246 883 a
SDict begin H.S end
 -246 883 a -246 883 a
SDict begin 12 H.A end
 -246 883 a -246
883 a
SDict begin [/View [/XYZ H.V]/Dest (Item.77) cvn /DEST pdfmark end
 -246 883 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)e(38)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 847 2970 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 290.78706 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 847 2970 a 1201
2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 248.10796 0.0 -42.67911 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 158.19717 0.0 -75.11522   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 248.10796  0 -42.67911  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -42.67911
 248.10796  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-75.11522  def /maxTickline 158.19717  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.19717
0.0 -75.11522   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 248.10796
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 158.19717  0 -75.11522  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -75.11522
 158.19717  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.67911  def /maxTickline 248.10796  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.19717
0.0 -75.11522   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 248.10796
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1186 2443 a FG(0)205 b(1)g(2)g(3)h(4)f(5)g(6)g
(7)g(8)-2177 b FF(\241)p FG(1)1112 2366 y(0)1070 2602
y FF(\241)p FG(1)1070 2838 y FF(\241)p FG(2)1112 2130
y(1)1112 1893 y(2)1112 1657 y(3)1112 1421 y(4)1112 1185
y(5)1201 2346 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 -56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 142.26372 142.26372 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 85.35823 199.1692 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -56.90549 56.90549 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 99.5846 42.67911 0.0
-56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.20068 -10.53345 46.37202
-5.70479   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 53.21255 -8.52158 48.3839
-3.69292   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 199.1692 142.26372 99.5846
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 150.7853 89.05115 145.95663
93.8798   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 152.79716 91.06302 147.9685
95.89168   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 99.5846 42.67911 56.90549
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 75.8307 61.60434 80.65936
66.433   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 99.5846
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 118.50983 18.92522 123.33849
23.75388   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1201 2346 a
tx@Dict begin { -9.10507 -49.50792 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201
2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 199.1692 142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1201 2346
a
tx@Dict begin { 201.44547 147.95418 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1 TeXcolorrgb Fz(B)p 0
TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1201 2346 a
tx@Dict begin { 59.18175 91.04869 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1
TeXcolorrgb 1199 2345 a Fz(C)p 0 TeXcolorgray 1201 2346
a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 142.26372 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1201 2346 a
tx@Dict begin { 147.95418 5.69046 } PutCoor PutBegin  end
 1201 2346 a 0.30196 0.30196 1 TeXcolorrgb
Fz(D)p 0 TeXcolorgray 1201 2346 a
tx@Dict begin  PutEnd  end
 1201 2346 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 99.5846 42.67911
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3261 2970 a
currentpoint initclip moveto
 3261 2970 a -246
3014 a
SDict begin H.S end
 -246 3014 a -246 3014 a
SDict begin 12 H.A end
 -246 3014 a -246 3014
a
SDict begin [/View [/XYZ H.V]/Dest (Item.78) cvn /DEST pdfmark end
 -246 3014 a 0 TeXcolorgray -141 3128 a FI(2.)p 0 TeXcolorgray
43 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g(de)h
Fz(M)39 b FI(:)802 3334 y Fz(M)888 3247 y Fr(\263)931
3278 y Fz(x)976 3290 y Fu(A)1030 3278 y FE(\305)12 b
Fz(x)1138 3290 y Fu(B)p 929 3315 257 5 v 1037 3391 a
FI(2)1195 3334 y(;)1238 3278 y Fz(y)1281 3290 y Fu(A)1334
3278 y FE(\305)i Fz(y)1442 3290 y Fu(B)p 1234 3315 256
5 v 1341 3391 a FI(2)1499 3247 y Fr(\264)1687 3334 y
Fz(M)1773 3224 y Fr(\265)1817 3278 y FI(0)c FE(\305)g
FI(7)p 1817 3315 157 5 v 1875 3391 a(2)1983 3334 y(;)2022
3278 y FE(\241)p FI(2)g FE(\305)g FI(5)p 2022 3315 212
5 v 2107 3391 a(2)2243 3224 y Fr(\266)2433 3334 y Fz(M)2519
3224 y Fr(\265)2563 3278 y FI(7)p 2563 3315 41 5 v 2563
3391 a(2)2614 3334 y(;)2652 3278 y(3)p 2652 3315 V 2652
3391 a(2)2703 3224 y Fr(\266)2893 3334 y Fz(M)2979 3335
y FI(\()3006 3334 y(3,)e(5;)g(1,)g(5)3250 3335 y(\))3288
3334 y(.)-38 3559 y(P)o(uis)18 b(celles)g(de)i Fz(M)517
3528 y FF(0)570 3559 y FI(:)780 3794 y Fz(M)857 3760
y FF(0)887 3707 y Fr(\263)931 3738 y Fz(x)970 3750 y
Fu(C)1030 3738 y FE(\305)12 b Fz(x)1138 3750 y Fu(D)p
929 3775 263 5 v 1040 3851 a FI(2)1202 3794 y(;)1244
3738 y Fz(y)1281 3750 y Fu(C)1341 3738 y FE(\305)i Fz(y)1449
3750 y Fu(D)p 1240 3775 V 1351 3851 a FI(2)1512 3707
y Fr(\264)1700 3794 y Fz(M)1777 3760 y FF(0)1807 3684
y Fr(\265)1851 3738 y FI(2)c FE(\305)g FI(5)p 1851 3775
157 5 v 1909 3851 a(2)2017 3794 y(;)2056 3738 y(3)g FE(\305)g
FI(0)p 2056 3775 V 2114 3851 a(2)2222 3684 y Fr(\266)2412
3794 y Fz(M)2489 3760 y FF(0)2519 3684 y Fr(\265)2564
3738 y FI(7)p 2564 3775 41 5 v 2564 3851 a(2)2614 3794
y(;)2652 3738 y(3)p 2652 3775 V 2652 3851 a(2)2703 3684
y Fr(\266)2893 3794 y Fz(M)2970 3760 y FF(0)3000 3795
y FI(\()3027 3794 y(3,)e(5;)g(1,)g(5)3271 3795 y(\))3309
3794 y(.)-246 3914 y
SDict begin H.S end
 -246 3914 a -246 3914 a
SDict begin 12 H.A end
 -246 3914
a -246 3914 a
SDict begin [/View [/XYZ H.V]/Dest (Item.79) cvn /DEST pdfmark end
 -246 3914 a 0 TeXcolorgray -141 4000 a
FI(3.)p 0 TeXcolorgray 43 w(On)16 b(constate)i(dans)f(la)g(question)h
(pr\351c\351dente)g(que)h Fz(M)j FE(\306)16 b Fz(M)1771
3970 y FF(0)1793 4000 y FI(,)h(les)h(diagonales)2330
4001 y([)2361 4000 y Fz(A)s(B)2467 4001 y FI(])2510 4000
y(et)2592 4001 y([)2615 4000 y Fz(C)9 b(D)2738 4001 y
FI(])2780 4000 y(du)17 b(quadr)q(ilat\350r)o(e)22 b Fz(A)o(C)9
b(B)e(D)24 b FI(se)17 b(coupent)h(donc)-38 4100 y(en)27
b(leur)g(milieu.)i(D)o('apr\350s)e(une)h(propr)q(i\351t\351)f(du)g
(coll\350ge)o(,)g(cela)g(entr)o(a\356ne)h(que)34 b Fz(A)o(C)9
b(B)e(D)33 b FI(est)28 b(un)f(par)o(all\351logr)o(amme)o(,)i(puis)f
(que)f(ses)h(c\364t\351s)-38 4199 y(oppos\351s)19 b(sont)f(de)f
(m\352me)i(longueur)f(:)f Fz(B)7 b(D)22 b FE(\306)e Fz(A)o(C)9
b FI(,)15 b Fz(C)9 b(B)22 b FE(\306)e Fz(A)s(D)t FI(.)-246
4233 y
SDict begin H.S end
 -246 4233 a -246 4233 a
SDict begin 12 H.A end
 -246 4233 a -246 4233
a
SDict begin [/View [/XYZ H.V]/Dest (Item.80) cvn /DEST pdfmark end
 -246 4233 a 0 TeXcolorgray -141 4328 a FI(4.)p 0 TeXcolorgray
43 w(On)d(calcule)h(les)g(longueurs)25 b Fz(A)o(C)g FI(et)16
b Fz(C)9 b(B)39 b FI(:)p 0 TeXcolorgray 7 4477 a(\225)p
0 TeXcolorgray 48 w Fz(A)o(C)22 b FE(\306)274 4379 y
Fr(q)p 351 4379 772 5 v 351 4478 a FI(\()380 4477 y Fz(x)419
4489 y Fu(C)479 4477 y FE(\241)12 b Fz(x)591 4489 y Fu(A)635
4478 y FI(\))661 4448 y FG(2)707 4477 y FE(\305)772 4413
y Fr(\241)805 4477 y Fz(y)842 4489 y Fu(C)902 4477 y
FE(\241)i Fz(y)1014 4489 y Fu(A)1058 4413 y Fr(\242)1087
4435 y FG(2)1136 4477 y FE(\306)1206 4401 y Fr(p)p 1282
4401 674 5 v 77 x FI(\()1309 4477 y(2)c FE(\241)g FI(0)1464
4478 y(\))1492 4448 y FG(2)1537 4477 y FE(\305)1602 4478
y FI(\()1629 4477 y(3)g FE(\241)g FI(\()p FE(\241)p FI(2\))1893
4478 y(\))1920 4448 y FG(2)1969 4477 y FE(\306)2038 4407
y(p)p 2102 4407 227 5 v 70 x FI(2)2142 4453 y FG(2)2188
4477 y FE(\305)g FI(5)2293 4453 y FG(2)2342 4477 y FE(\306)2412
4413 y(p)p 2475 4413 197 5 v 2475 4477 a FI(4)g FE(\305)g
FI(25)16 b FE(\306)2755 4413 y(p)p 2819 4413 82 5 v 64
x FI(29)q(.)p 0 TeXcolorgray 7 4629 a(\225)p 0 TeXcolorgray
40 w Fz(C)9 b(B)22 b FE(\306)276 4530 y Fr(q)p 352 4530
771 5 v 100 x FI(\()381 4629 y Fz(x)422 4641 y Fu(B)480
4629 y FE(\241)12 b Fz(x)586 4641 y Fu(C)636 4630 y FI(\))662
4600 y FG(2)708 4629 y FE(\305)773 4565 y Fr(\241)806
4629 y Fz(y)845 4641 y Fu(B)902 4629 y FE(\241)i Fz(y)1008
4641 y Fu(C)1058 4565 y Fr(\242)1088 4586 y FG(2)1137
4629 y FE(\306)1206 4553 y Fr(p)p 1282 4553 565 5 v 77
x FI(\()1309 4629 y(7)c FE(\241)g FI(2)1464 4630 y(\))1492
4600 y FG(2)1537 4629 y FE(\305)1602 4630 y FI(\()1629
4629 y(5)g FE(\241)g FI(3)1784 4630 y(\))1812 4600 y
FG(2)1861 4629 y FE(\306)1930 4559 y(p)p 1994 4559 227
5 v 70 x FI(5)2034 4605 y FG(2)2080 4629 y FE(\305)g
FI(2)2185 4605 y FG(2)2234 4629 y FE(\306)2304 4564 y(p)p
2367 4564 197 5 v 2367 4629 a FI(25)g FE(\305)g FI(4)16
b FE(\306)2647 4564 y(p)p 2711 4564 82 5 v 65 x FI(29)q(.)-38
4743 y(On)h(constate)h(que)24 b Fz(A)o(C)f FE(\306)12
b Fz(C)d(B)d FI(,)18 b(donc)f(d)n('apr\350s)h(la)f(question)i
(pr\351c\351dente)g(:)1687 4926 y Fz(B)7 b(D)21 b FE(\306)g
Fz(A)o(C)h FE(\306)12 b Fz(C)d(B)22 b FE(\306)f Fz(A)s(D)t
FI(.)-38 5123 y(C)o(onclusion)e(:)f(le)f(quadr)q(ilat\350r)o(e)23
b Fz(A)o(C)9 b(B)e(D)24 b FI(a)18 b(quatr)o(e)f(c\364t\351s)h(de)f
(m\352me)i(longueur)-5 b(,)18 b(donc)f(c)n('est)h(un)g(losange)o(.)-246
5208 y
SDict begin H.S end
 -246 5208 a -246 5208 a
SDict begin 12 H.A end
 -246 5208 a -246 5208
a
SDict begin [/View [/XYZ H.V]/Dest (exo.39) cvn /DEST pdfmark end
 -246 5208 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)c(39)p
0 TeXcolorgray 0 TeXcolorgray 1909 5895 a FI(18)p 0 TeXcolorgray
eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1149 1691
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 192.90955 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1149 1691 a 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 103.56796 0.0 -89.34158 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 127.46815 0.0 -105.84424   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 103.56796  0 -89.34158  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -89.34158
 103.56796  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-105.84424  def /maxTickline 127.46815  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 127.46815
0.0 -105.84424   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 103.56796
0.0 -89.34158 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 127.46815  0 -105.84424  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -105.84424
 127.46815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-89.34158  def /maxTickline 103.56796  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 127.46815
0.0 -105.84424   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 103.56796
0.0 -89.34158 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1876 910 a FG(0)205
b(1)g(2)g(3)-997 b FF(\241)p FG(1)-309 b FF(\241)p FG(2)g
FF(\241)p FG(3)1802 832 y(0)1760 1068 y FF(\241)p FG(1)1760
1304 y FF(\241)p FG(2)1760 1541 y FF(\241)p FG(3)1802
596 y(1)1802 360 y(2)1802 123 y(3)1891 813 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ -56.90549
28.45274 -47.24815 35.69574 -40.00558 26.0384 -49.66248 18.79541  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 28.45274 28.45274 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -10.64111 -27.54231 -16.10408 -31.63943
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -12.34865 -25.26604 -17.81161 -29.36316
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 113.81097 -56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.91042 67.5466 -3.18669 73.00957 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 3.18669 69.25414 -0.91042 74.7171 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 -85.35823 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1891 813 a
tx@Dict begin { 59.18175 118.36351 } PutCoor PutBegin  end
 1891
813 a 0.30196 0.30196 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1891 813 a
tx@Dict begin  PutEnd  end
 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -56.90549 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1891 813 a
tx@Dict begin { -66.57932 32.4361 } PutCoor PutBegin  end
 1891 813 a 0.30196 0.30196 1 TeXcolorrgb Fz(B)p
0 TeXcolorgray 1891 813 a
tx@Dict begin  PutEnd  end
 1891 813 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1891 813 a
tx@Dict begin { 34.1432 -84.2203 } PutCoor PutBegin  end
 1891 813 a 0.30196 0.30196 1
TeXcolorrgb 1889 812 a Fz(C)p 0 TeXcolorgray 1891 813
a
tx@Dict begin  PutEnd  end
 1891 813 a 2751 1691 a
currentpoint initclip moveto
 2751 1691 a -246 1874 a FI(On)18
b(calcule)g(la)f(longueur)h(des)g(trois)f(c\364t\351s)h(:)p
0 TeXcolorgray -76 2009 a(\225)p 0 TeXcolorgray 48 w
Fz(A)s(B)k FE(\306)193 1910 y Fr(q)p 269 1910 771 5 v
100 x FI(\()298 2009 y Fz(x)339 2021 y Fu(B)397 2009
y FE(\241)12 b Fz(x)509 2021 y Fu(A)553 2010 y FI(\))579
1980 y FG(2)624 2009 y FE(\305)689 1944 y Fr(\241)723
2009 y Fz(y)762 2021 y Fu(B)819 2009 y FE(\241)i Fz(y)931
2021 y Fu(A)975 1944 y Fr(\242)1005 1966 y FG(2)1054
2009 y FE(\306)1123 1933 y Fr(p)p 1199 1933 620 5 v 77
x FI(\()1226 2009 y FE(\241)p FI(2)c FE(\241)g FI(2)1436
2010 y(\))1464 1980 y FG(2)1509 2009 y FE(\305)1574 2010
y FI(\()1601 2009 y(1)g FE(\241)g FI(4)1756 2010 y(\))1784
1980 y FG(2)1833 2009 y FE(\306)1902 1935 y Fr(p)p 1979
1935 444 5 v 1979 2009 a FI(\()p FE(\241)p FI(4\))2128
1985 y FG(2)2173 2009 y FE(\305)g FI(\()p FE(\241)p FI(3\))2387
1985 y FG(2)2436 2009 y FE(\306)2505 1944 y(p)p 2569
1944 197 5 v 65 x FI(16)g FE(\305)g FI(9)16 b FE(\306)2849
1944 y(p)p 2912 1944 82 5 v 2912 2009 a FI(25)g FE(\306)e
FI(5.)p 0 TeXcolorgray -76 2160 a(\225)p 0 TeXcolorgray
48 w Fz(A)o(C)22 b FE(\306)191 2062 y Fr(q)p 268 2062
772 5 v 268 2161 a FI(\()297 2160 y Fz(x)336 2172 y Fu(C)396
2160 y FE(\241)12 b Fz(x)508 2172 y Fu(A)552 2161 y FI(\))578
2131 y FG(2)624 2160 y FE(\305)689 2096 y Fr(\241)722
2160 y Fz(y)759 2172 y Fu(C)819 2160 y FE(\241)i Fz(y)931
2172 y Fu(A)975 2096 y Fr(\242)1004 2117 y FG(2)1053
2160 y FE(\306)1123 2084 y Fr(p)p 1199 2084 620 5 v 77
x FI(\()1226 2160 y(1)c FE(\241)g FI(2)1381 2161 y(\))1409
2131 y FG(2)1454 2160 y FE(\305)1519 2161 y FI(\()1546
2160 y FE(\241)p FI(3)g FE(\241)g FI(4)1756 2161 y(\))1784
2131 y FG(2)1833 2160 y FE(\306)1902 2087 y Fr(p)p 1978
2087 444 5 v 73 x FI(\()p FE(\241)p FI(1\))2127 2136
y FG(2)2172 2160 y FE(\305)g FI(\()p FE(\241)p FI(7\))2386
2136 y FG(2)2436 2160 y FE(\306)2505 2096 y(p)p 2568
2096 197 5 v 2568 2160 a FI(1)g FE(\305)g FI(49)16 b
FE(\306)2849 2096 y(p)p 2912 2096 82 5 v 2912 2160 a
FI(50)q(.)p 0 TeXcolorgray -76 2312 a(\225)p 0 TeXcolorgray
42 w Fz(B)5 b(C)24 b FE(\306)193 2213 y Fr(q)p 269 2213
771 5 v 100 x FI(\()298 2312 y Fz(x)337 2324 y Fu(C)397
2312 y FE(\241)12 b Fz(x)505 2324 y Fu(B)553 2313 y FI(\))579
2283 y FG(2)625 2312 y FE(\305)690 2248 y Fr(\241)723
2312 y Fz(y)760 2324 y Fu(C)820 2312 y FE(\241)i Fz(y)928
2324 y Fu(B)975 2248 y Fr(\242)1005 2269 y FG(2)1054
2312 y FE(\306)1123 2236 y Fr(p)p 1199 2236 729 5 v 77
x FI(\()1226 2312 y(1)c FE(\241)g FI(\()p FE(\241)p FI(2\))1490
2313 y(\))1518 2282 y FG(2)1563 2312 y FE(\305)1628 2313
y FI(\()1655 2312 y FE(\241)p FI(3)g FE(\241)g FI(1)1865
2313 y(\))1893 2283 y FG(2)1942 2312 y FE(\306)2011 2236
y Fr(p)p 2087 2236 335 5 v 76 x FI(3)2127 2288 y FG(2)2173
2312 y FE(\305)2238 2313 y FI(\()2265 2312 y FE(\241)p
FI(4)2360 2313 y(\))2387 2283 y FG(2)2436 2312 y FE(\306)2505
2247 y(p)p 2569 2247 197 5 v 65 x FI(9)g FE(\305)g FI(16)16
b FE(\306)2849 2247 y(p)p 2913 2247 82 5 v 65 x FI(25)f
FE(\306)f FI(5.)-240 2412 y Fz(A)s(B)22 b FE(\306)15
b Fz(B)5 b(C)k FI(,)18 b(donc)23 b Fz(A)s(B)5 b(C)27
b FI(est)18 b(isoc\350le)g(en)g Fz(B)5 b FI(.)18 b(On)f(utilise)j(le)d
(th\351or\350me)i(r\351ciproque)f(de)f(Pythagor)o(e)g(pour)g(prouver)h
(qu)n('il)g(est)g(r)o(ectangle)f(:)1036 2613 y Fz(A)o(C)1142
2583 y FG(2)1191 2613 y FE(\306)1260 2549 y(p)p 1324
2549 V 64 x FI(50)1405 2564 y FG(2)1454 2613 y FE(\306)d
FI(50)1036 2713 y Fz(A)s(B)1142 2683 y FG(2)1188 2713
y FE(\305)c Fz(B)5 b(C)1365 2683 y FG(2)1415 2713 y FE(\306)15
b FI(5)1525 2683 y FG(2)1570 2713 y FE(\305)10 b FI(5)1675
2683 y FG(2)1725 2713 y FE(\306)k FI(25)c FE(\305)g FI(25)17
b FE(\306)d FI(50)2237 2522 y Fr(\))2306 2656 y Fz(A)o(C)2412
2621 y FG(2)2461 2656 y FE(\306)20 b Fz(A)s(B)2642 2621
y FG(2)2688 2656 y FE(\305)10 b Fz(B)5 b(C)2865 2621
y FG(2)2901 2656 y FI(.)-246 2864 y(D)o('apr\350s)17
b(le)h(th\351or\350me)h(r\351ciproque)f(de)f(Pythagor)o(e)o(,)22
b Fz(A)s(B)5 b(C)27 b FI(est)18 b(r)o(ectangle)f(en)h
Fz(B)5 b FI(.)-246 2949 y
SDict begin H.S end
 -246 2949 a -246 2949 a
SDict begin 12 H.A end
 -246
2949 a -246 2949 a
SDict begin [/View [/XYZ H.V]/Dest (exo.40) cvn /DEST pdfmark end
 -246 2949 a -246 2967 a
SDict begin H.S end
 -246 2967
a -246 2967 a
SDict begin 12 H.A end
 -246 2967 a -246 2967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.81) cvn /DEST pdfmark end
 -246 2967 a 0 TeXcolorgray
131 x FJ(Ex)o(er)o(cice)14 b(40)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p
0 TeXcolorgray 48 w Fz(A)s(B)22 b FE(\306)717 2999 y
Fr(q)p 793 2999 771 5 v 100 x FI(\()822 3098 y Fz(x)863
3110 y Fu(B)920 3098 y FE(\241)12 b Fz(x)1032 3110 y
Fu(A)1076 3099 y FI(\))1103 3069 y FG(2)1148 3098 y FE(\305)1213
3034 y Fr(\241)1247 3098 y Fz(y)1286 3110 y Fu(B)1343
3098 y FE(\241)i Fz(y)1455 3110 y Fu(A)1499 3034 y Fr(\242)1529
3055 y FG(2)1578 3098 y FE(\306)1647 3024 y Fr(p)p 1723
3024 565 5 v 74 x FI(\(1)c FE(\241)g FI(6\))1932 3074
y FG(2)1978 3098 y FE(\305)g FI(\(5)g FE(\241)g FI(0\))2252
3074 y FG(2)2302 3098 y FE(\306)2371 3024 y Fr(p)p 2448
3024 335 5 v 2448 3098 a FI(\()p FE(\241)p FI(5\))2597
3074 y FG(2)2642 3098 y FE(\305)g FI(5)2747 3074 y FG(2)2796
3098 y FE(\306)2866 3033 y(p)p 2929 3033 238 5 v 2929
3098 a FI(25)g FE(\305)g FI(25)17 b FE(\306)3250 3033
y(p)p 3313 3033 82 5 v 3313 3098 a FI(50)q(.)p 0 TeXcolorgray
7 3250 a(\225)p 0 TeXcolorgray 48 w Fz(A)o(C)22 b FE(\306)274
3151 y Fr(q)p 351 3151 772 5 v 351 3251 a FI(\()380 3250
y Fz(x)419 3262 y Fu(C)479 3250 y FE(\241)12 b Fz(x)591
3262 y Fu(A)635 3251 y FI(\))661 3221 y FG(2)707 3250
y FE(\305)772 3185 y Fr(\241)805 3250 y Fz(y)842 3262
y Fu(C)902 3250 y FE(\241)i Fz(y)1014 3262 y Fu(A)1058
3185 y Fr(\242)1087 3207 y FG(2)1136 3250 y FE(\306)1206
3176 y Fr(p)p 1282 3176 565 5 v 74 x FI(\(0)c FE(\241)g
FI(6\))1491 3226 y FG(2)1537 3250 y FE(\305)g FI(\(2)g
FE(\241)g FI(0\))1811 3226 y FG(2)1861 3250 y FE(\306)1930
3176 y Fr(p)p 2006 3176 335 5 v 74 x FI(\()p FE(\241)p
FI(6\))2155 3226 y FG(2)2200 3250 y FE(\305)g FI(2)2305
3226 y FG(2)2355 3250 y FE(\306)2424 3185 y(p)p 2488
3185 197 5 v 65 x FI(36)g FE(\305)g FI(4)16 b FE(\306)2768
3185 y(p)p 2832 3185 82 5 v 65 x FI(40)q(.)p 0 TeXcolorgray
7 3401 a(\225)p 0 TeXcolorgray 42 w Fz(B)5 b(C)24 b FE(\306)276
3302 y Fr(q)p 352 3302 771 5 v 100 x FI(\()381 3401 y
Fz(x)420 3413 y Fu(C)480 3401 y FE(\241)12 b Fz(x)588
3413 y Fu(B)636 3402 y FI(\))662 3372 y FG(2)708 3401
y FE(\305)773 3337 y Fr(\241)806 3401 y Fz(y)843 3413
y Fu(C)903 3401 y FE(\241)i Fz(y)1011 3413 y Fu(B)1058
3337 y Fr(\242)1088 3358 y FG(2)1137 3401 y FE(\306)1206
3328 y Fr(p)p 1282 3328 565 5 v 73 x FI(\(0)c FE(\241)g
FI(1\))1491 3377 y FG(2)1537 3401 y FE(\305)g FI(\(2)g
FE(\241)g FI(5\))1811 3377 y FG(2)1861 3401 y FE(\306)1930
3328 y Fr(p)p 2007 3328 444 5 v 2007 3401 a FI(\()p FE(\241)p
FI(1\))2156 3377 y FG(2)2201 3401 y FE(\305)g FI(\()p
FE(\241)p FI(3\))2415 3377 y FG(2)2464 3401 y FE(\306)2533
3336 y(p)p 2597 3336 157 5 v 65 x FI(1)g FE(\305)g FI(9)15
b FE(\306)2837 3336 y(p)p 2900 3336 82 5 v 2900 3401
a FI(10)q(.)-38 3515 y(On)i(a)g(donc)g(:)1037 3613 y
Fz(A)s(B)1143 3583 y FG(2)1193 3613 y FE(\306)1262 3549
y(p)p 1325 3549 V 1325 3613 a FI(50)1407 3564 y FG(2)1456
3613 y FE(\306)d FI(50)1037 3731 y Fz(A)o(C)1143 3701
y FG(2)1187 3731 y FE(\305)c Fz(B)5 b(C)1364 3701 y FG(2)1414
3731 y FE(\306)1483 3667 y(p)p 1547 3667 V 64 x FI(40)1628
3682 y FG(2)1673 3731 y FE(\305)1738 3667 y(p)p 1802
3667 V 64 x FI(10)1883 3682 y FG(2)1932 3731 y FE(\306)14
b FI(40)c FE(\305)g FI(10)17 b FE(\306)d FI(50)2444 3532
y Fr(\))2514 3665 y Fz(A)s(B)2620 3630 y FG(2)2669 3665
y FE(\306)21 b Fz(A)o(C)2851 3630 y FG(2)2895 3665 y
FE(\305)10 b Fz(B)5 b(C)3072 3630 y FG(2)3108 3665 y
FI(.)-38 3876 y(D)o('apr\350s)17 b(le)h(th\351or\350me)h(r\351ciproque)
e(de)g(Pythagor)o(e)o(,)23 b Fz(A)s(B)5 b(C)27 b FI(est)18
b(r)o(ectangle)f(en)f Fz(C)9 b FI(.)-246 3910 y
SDict begin H.S end
 -246
3910 a -246 3910 a
SDict begin 12 H.A end
 -246 3910 a -246 3910 a
SDict begin [/View [/XYZ H.V]/Dest (Item.82) cvn /DEST pdfmark end
 -246 3910
a 0 TeXcolorgray -141 4005 a FI(2.)p 0 TeXcolorgray 43
w(D)o('apr\350s)17 b(la)g(for)q(mule)i(du)e(cours)g(:)1104
4227 y Fz(I)1148 4140 y Fr(\263)1192 4171 y Fz(x)1237
4183 y Fu(A)1291 4171 y FE(\305)12 b Fz(x)1399 4183 y
Fu(B)p 1190 4207 257 5 v 1298 4284 a FI(2)1456 4227 y(;)1499
4171 y Fz(y)1542 4183 y Fu(A)1595 4171 y FE(\305)i Fz(y)1703
4183 y Fu(B)p 1495 4207 256 5 v 1602 4284 a FI(2)1760
4140 y Fr(\264)1948 4227 y Fz(I)1992 4117 y Fr(\265)2037
4171 y FI(6)c FE(\305)g FI(1)p 2037 4207 157 5 v 2095
4284 a(2)2203 4227 y(;)2241 4171 y(0)g FE(\305)g FI(5)p
2241 4207 V 2299 4284 a(2)2407 4117 y Fr(\266)2598 4227
y Fz(I)2642 4228 y FI(\()2669 4227 y(3,)e(5)19 b(;)25
b(2,)8 b(5)2949 4228 y(\))2986 4227 y(.)-246 4380 y
SDict begin H.S end
 -246
4380 a -246 4380 a
SDict begin 12 H.A end
 -246 4380 a -246 4380 a
SDict begin [/View [/XYZ H.V]/Dest (Item.83) cvn /DEST pdfmark end
 -246 4380
a 0 TeXcolorgray -141 4460 a FI(3.)p 0 TeXcolorgray 43
w(Le)16 b(tr)q(iangle)23 b Fz(A)s(B)5 b(C)25 b FI(\351tant)17
b(r)o(ectangle)f(en)e Fz(C)9 b FI(,)16 b(le)h(milieu)i
Fz(I)27 b FI(de)15 b(l)o('hypot\351nuse)2187 4461 y([)2218
4460 y Fz(A)s(B)2324 4461 y FI(])2366 4460 y(est)i(le)f(centr)o(e)g(de)
g FA(\241)g FI(\(r)o(appel)h(de)e(l)o('\351nonc\351\))9
b(;)18 b(et)e(le)g(r)o(ayon)g(de)-38 4559 y FA(\241)h
FI(est)313 4680 y Fz(r)24 b FE(\306)17 b Fz(I)e(A)j FE(\306)616
4577 y Fr(q)p 693 4577 744 5 v 693 4681 a FI(\()721 4680
y Fz(x)766 4692 y Fu(A)820 4680 y FE(\241)12 b Fz(x)930
4692 y Fu(I)962 4681 y FI(\))989 4651 y FG(2)1034 4680
y FE(\305)1099 4615 y Fr(\241)1133 4680 y Fz(y)1176 4692
y Fu(A)1230 4680 y FE(\241)i Fz(y)1340 4692 y Fu(I)1371
4615 y Fr(\242)1401 4637 y FG(2)1450 4680 y FE(\306)1519
4603 y Fr(p)p 1596 4603 703 5 v 1596 4680 a FI(\(6)c
FE(\241)g FI(3,)e(5\))1873 4656 y FG(2)1919 4680 y FE(\305)i
FI(\(0)g FE(\241)g FI(2,)e(5\))2261 4656 y FG(2)2312
4680 y FE(\306)2382 4603 y Fr(p)p 2458 4603 473 5 v 77
x FI(2,)g(5)2566 4656 y FG(2)2612 4680 y FE(\305)i FI(\()p
FE(\241)p FI(2,)e(5\))2894 4656 y FG(2)2944 4680 y FE(\306)3014
4608 y Fr(p)p 3090 4608 376 5 v 72 x FI(6,)g(25)i FE(\305)g
FI(6,)e(25)18 b FE(\306)3548 4608 y Fr(p)p 3625 4608
150 5 v 3625 4680 a FI(12,)8 b(5)r(.)-246 4761 y
SDict begin H.S end
 -246
4761 a -246 4761 a
SDict begin 12 H.A end
 -246 4761 a -246 4761 a
SDict begin [/View [/XYZ H.V]/Dest (Item.84) cvn /DEST pdfmark end
 -246 4761
a 0 TeXcolorgray -141 4844 a FI(4.)p 0 TeXcolorgray 43
w(S)o(avoir)18 b(si)j Fz(H)8 b FI(\(3,)g(5)20 b(;)27
b(6\))19 b(appar)q(tient)g(\340)g FA(\241)f FI(r)o(evient)h(\340)f
(savoir)h(si)g(la)g(longueur)i Fz(I)11 b(H)28 b FI(est)19
b(\351gale)g(\340)g Fz(r)29 b FI(ou)18 b(non.)i(On)e(calcule)h(cette)h
(longueur)f(avec)f(la)-38 4943 y(for)q(mule)g(du)f(cours)h(:)432
5140 y Fz(I)11 b(H)24 b FE(\306)622 5044 y Fr(q)p 698
5044 758 5 v 96 x FI(\()r Fz(x)770 5152 y Fu(H)835 5140
y FE(\241)12 b Fz(x)945 5152 y Fu(I)978 5140 y FI(\))1005
5116 y FG(2)1049 5140 y FE(\305)e FI(\()t Fz(y)1186 5152
y Fu(H)1252 5140 y FE(\241)k Fz(y)1362 5152 y Fu(I)1393
5140 y FI(\))1420 5116 y FG(2)1469 5140 y FE(\306)1538
5063 y Fr(p)p 1615 5063 772 5 v 1615 5140 a FI(\(3,)8
b(5)i FE(\241)g FI(3,)e(5\))1960 5116 y FG(2)2007 5140
y FE(\305)i FI(\(6)g FE(\241)g FI(2,)e(5\))2349 5116
y FG(2)2400 5140 y FE(\306)2469 5063 y Fr(p)p 2546 5063
296 5 v 2546 5140 a FI(0)2586 5116 y FG(2)2631 5140 y
FE(\305)i FI(3,)e(5)2804 5116 y FG(2)2855 5140 y FE(\306)2924
5069 y Fr(p)p 3001 5069 307 5 v 3001 5140 a FI(0)i FE(\305)g
FI(12,)e(25)17 b FE(\306)3390 5069 y Fr(p)p 3467 5069
191 5 v 3467 5140 a FI(12,)8 b(25)r(.)-38 5338 y(C)o(omme)255
5279 y FE(p)p 318 5279 V 318 5338 a FI(12,)g(25)17 b
FE(6\306)592 5279 y(p)p 656 5279 150 5 v 59 x FI(12,)8
b(5)r(,)17 b(le)h(point)g(H)f(n)-6 b('appar)q(tient)19
b(pas)f(\340)f FA(\241)p FI(.)-38 5502 y FJ(N.B.)26 b
FI(La)e(\002gur)o(e)g(est)h(trompeuse)o(,)h(puisqu)n('on)g(a)e(l)o
('impr)o(ession)j(que)g Fz(H)33 b FI(est)25 b(sur)g FA(\241)p
FI(.)f(En)h(r\351alit\351,)h(si)e(vous)i(avez)e(pr)q(is)g(1)h(cm)g
(comme)g(unit\351)-38 5602 y(gr)o(aphique)o(,)18 b(le)g(point)i
Fz(H)26 b FI(est)18 b(\340)f(environ)h(trois)g(cheveux)g(\(au)f(sens)h
(propr)o(e\))f(du)g(cer)o(cle)o(.)p 0 TeXcolorgray 1909
5895 a(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 899 1706
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 253.22923 a add def
/d 0.0 a add neg def /h 235.01949 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 899 1706 a 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -28.45274 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.9481 0.0 -41.54118 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 187.2191 0.0 -50.07666   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 769.36198  0 -39.83366  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -39.83366
 769.36198  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-50.07666  def /maxTickline 363.05684  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 363.05684
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 769.36198
0.0 -39.83366 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 363.05684  0 -50.07666  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -50.07666
 363.05684  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-39.83366  def /maxTickline 769.36198  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 363.05684
0.0 -50.07666   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 769.36198
0.0 -39.83366 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1215 1387 a FG(0)204
b(1)i(2)f(3)g(4)g(5)g(6)h(7)f(8)g(9)190 b(10)174 b(11)g(12)h(13)f(14)g
(15)g(16)g(17)h(18)f(19)g(20)g(21)h(22)f(23)g(24)g(25)g(26)-6445
b FF(\241)p FG(1)1141 1309 y(0)1099 1545 y FF(\241)p
FG(1)1141 1073 y(1)1141 837 y(2)1141 600 y(3)1141 364
y(4)1141 128 y(5)1141 -108 y(6)1141 -345 y(7)1141 -581
y(8)1141 -817 y(9)1110 -1053 y(10)1110 -1289 y(11)1110
-1525 y(12)1230 1290 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  [ 0.0 56.90549
4.83691 71.13185 18.7789 66.29494 14.22636 52.06856  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.89961 0.8 1  setrgbcolor  0.25
.setopacityalpha  fill  grestore gsave 2.0 SLW 0 1 0 0  setcmykcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 142.26372 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 0.0 28.45274 142.26372  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 0.0 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor   99.5846 71.13185
2 copy moveto 100.72252 0 CLW mul round sub dup 0 rmoveto 0 360 arc
closepath  gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1230 1290 a
tx@Dict begin { 181.813 59.75093 } PutCoor PutBegin  end
 1230
1290 a 0 1 0 TeXcolorrgb 53 x FA(\241)p 0 TeXcolorgray
1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1230 1290 a
tx@Dict begin { 168.44019 9.67383 } PutCoor PutBegin  end
 1230 1290 a 0 0 1 TeXcolorrgb 6 w Fz(A)p
0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 28.45274
142.26372   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { 25.60728 148.52335 } PutCoor PutBegin  end
 1230 1290 a 0 0 1
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 0.0 56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { -11.09654 61.7424 } PutCoor PutBegin  end

1230 1290 a 0 0 1 TeXcolorrgb 1228 1289 a Fz(C)p 0 TeXcolorgray
1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 99.5846 71.13185
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1230 1290 a
tx@Dict begin { 102.14523 75.11522 } PutCoor PutBegin  end
 1230 1290 a 0 0 1 TeXcolorrgb 2 w Fz(I)p
0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230 1290 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 99.5846 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /StandardSymL 0. [1.8
0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.  1.  scale
<B4> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1230 1290 a
tx@Dict begin { 106.4134 157.628 } PutCoor PutBegin  end
 1230 1290 a 1 0 0
TeXcolorrgb 2 w Fz(H)p 0 TeXcolorgray 1230 1290 a
tx@Dict begin  PutEnd  end
 1230
1290 a 3001 1706 a
currentpoint initclip moveto
 3001 1706 a -246 1781 a
SDict begin H.S end
 -246 1781
a -246 1781 a
SDict begin 12 H.A end
 -246 1781 a -246 1781 a
SDict begin [/View [/XYZ H.V]/Dest (exo.41) cvn /DEST pdfmark end
 -246 1781 a 0 TeXcolorgray
119 x FJ(Ex)o(er)o(cice)14 b(41)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 785 3921 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 280.54405 a add def
/d 0.0 a add neg def /h 233.3124 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 785 3921 a 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 196.89293 0.0 -83.65112 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 133.7278 0.0 -99.5846   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 196.89293  0 -83.65112  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -83.65112
 196.89293  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.5846  def /maxTickline 133.7278  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.7278
0.0 -99.5846   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 196.89293
0.0 -83.65112 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 133.7278  0 -99.5846  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -99.5846
 133.7278  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-83.65112  def /maxTickline 196.89293  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.7278
0.0 -99.5846   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 196.89293
0.0 -83.65112 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1465 3191 a FG(0)205 b(1)g(2)g(3)g(4)h(5)f(6)-1706 b
FF(\241)p FG(1)-309 b FF(\241)p FG(2)1391 3113 y(0)1349
3350 y FF(\241)p FG(1)1349 3586 y FF(\241)p FG(2)1349
3822 y FF(\241)p FG(3)1391 2877 y(1)1391 2641 y(2)1391
2405 y(3)1391 2169 y(4)1480 3094 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 113.81097 -56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 0.0 113.81097  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 170.71646 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 0.0 113.81097 -85.35823 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 14.22636 -56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -0.98813 3.54877 -1.83516
10.32462   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1.83516 3.90173 0.98813
10.67758   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 112.82283 17.77515 111.9758
24.551   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.64613 18.12811 114.7991
24.90396   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -85.35823 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 81.68788 -36.02483 87.6167
-32.63669   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 83.09975 -38.49516 89.02856
-35.10703   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 113.81097 56.90549
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 32.12308 64.47757 26.19426
61.08943   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 30.71121 66.9479 24.7824
63.55977   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1480 3094 a
tx@Dict begin { 2.27626 119.50143 } PutCoor PutBegin  end
 1480
3094 a 0.30196 0.30196 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71646 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1480 3094 a
tx@Dict begin { 172.99272 34.1432 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1 TeXcolorrgb
Fz(B)p 0 TeXcolorgray 1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 -85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1480 3094 a
tx@Dict begin { 121.20853 -83.08195 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1
TeXcolorrgb 1478 3093 a Fz(C)p 0 TeXcolorgray 1480 3094
a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1480 3094 a
tx@Dict begin { -63.7343 7.39755 } PutCoor PutBegin  end
 1480 3094 a 0.30196 0.30196 1 TeXcolorrgb
Fz(D)p 0 TeXcolorgray 1480 3094 a
tx@Dict begin  PutEnd  end
 1480 3094 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.25  setgray  [ 56.90549 14.22636
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3115 3921 a
currentpoint initclip moveto
 3115 3921 a -246
3983 a
SDict begin H.S end
 -246 3983 a -246 3983 a
SDict begin 12 H.A end
 -246 3983 a -246 3983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.85) cvn /DEST pdfmark end
 -246 3983 a 0 TeXcolorgray -141 4096 a FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Le)18
b(milieu)h(du)e(segment)841 4097 y([)872 4096 y Fz(A)o(C)978
4097 y FI(])1020 4096 y(a)g(pour)g(coor)o(donn\351es)1210
4224 y Fr(\263)1254 4255 y Fz(x)1299 4267 y Fu(A)1353
4255 y FE(\305)12 b Fz(x)1459 4267 y Fu(C)p 1252 4292
258 5 v 1360 4368 a FI(2)1519 4311 y(;)1561 4255 y Fz(y)1604
4267 y Fu(A)1658 4255 y FE(\305)i Fz(y)1764 4267 y Fu(C)p
1557 4292 257 5 v 1665 4368 a FI(2)1823 4224 y Fr(\264)2009
4201 y(\265)2053 4255 y FI(0)c FE(\305)g FI(4)p 2053
4292 157 5 v 2111 4368 a(2)2219 4311 y(;)2258 4255 y(4)g
FE(\305)g FI(\()p FE(\241)p FI(3\))p 2258 4292 265 5
v 2370 4368 a(2)2532 4201 y Fr(\266)2721 4312 y FI(\()2748
4311 y(2)17 b(;)26 b(0,)8 b(5)2959 4312 y(\))2995 4311
y(.)p 0 TeXcolorgray 7 4522 a(\225)p 0 TeXcolorgray 42
w(Le)18 b(milieu)h(du)e(segment)841 4523 y([)866 4522
y Fz(B)7 b(D)985 4523 y FI(])1029 4522 y(a)17 b(pour)h(coor)o
(donn\351es)1205 4650 y Fr(\263)1248 4681 y Fz(x)1289
4693 y Fu(B)1347 4681 y FE(\305)12 b Fz(x)1455 4693 y
Fu(D)p 1246 4718 263 5 v 1357 4794 a FI(2)1519 4737 y(;)1561
4681 y Fz(y)1600 4693 y Fu(B)1657 4681 y FE(\305)i Fz(y)1765
4693 y Fu(D)p 1557 4718 262 5 v 1668 4794 a FI(2)1829
4650 y Fr(\264)2014 4627 y(\265)2058 4681 y FI(6)c FE(\305)g
FI(\()p FE(\241)p FI(2\))p 2058 4718 265 5 v 2170 4794
a(2)2333 4737 y(;)2371 4681 y(1)g FE(\305)g FI(0)p 2371
4718 157 5 v 2429 4794 a(2)2538 4627 y Fr(\266)2726 4738
y FI(\()2753 4737 y(2)17 b(;)26 b(0,)8 b(5)2964 4738
y(\))3000 4737 y(.)-38 4961 y(Les)18 b(diagonales)g(du)f(quadr)q
(ilat\350r)o(e)23 b Fz(A)s(B)5 b(C)k(D)24 b FI(se)18
b(coupent)h(en)f(leur)f(milieu,)j(donc)d(c)n('est)h(un)f(par)o
(all\351logr)o(amme)j(\(propr)q(i\351t\351)d(du)h(coll\350ge\).)-38
5120 y Fs(")p FI(S)o(i)j(vous)h(donnez)e(un)h(nom)h(aux)f(milieux)i
(des)e(diagonales)g FJ(av)o(ant)d(de)h(fair)o(e)f(les)g(calculs)p
FI(,)i(donnez-leur)h(des)g(noms)h(diff\351r)o(ents)f(:)g(avant)-38
5220 y(de)c(fair)o(e)g(les)h(calculs)o(,)h(on)e(n)-6
b('a)18 b(pas)g(encor)o(e)f(prouv\351)h(que)g(les)g(milieux)h
(\351taient)g(les)f(m\352mes)o(.)-246 5250 y
SDict begin H.S end
 -246 5250
a -246 5250 a
SDict begin 12 H.A end
 -246 5250 a -246 5250 a
SDict begin [/View [/XYZ H.V]/Dest (Item.86) cvn /DEST pdfmark end
 -246 5250 a 0 TeXcolorgray
-141 5346 a FI(2.)p 0 TeXcolorgray 43 w(On)f(calcule)h(la)g(longueur)g
(des)f(diagonales)h(:)p 0 TeXcolorgray 7 5494 a(\225)p
0 TeXcolorgray 48 w Fz(A)o(C)k FE(\306)274 5395 y Fr(q)p
351 5395 772 5 v 351 5495 a FI(\()380 5494 y Fz(x)419
5506 y Fu(C)479 5494 y FE(\241)12 b Fz(x)591 5506 y Fu(A)635
5495 y FI(\))661 5465 y FG(2)707 5494 y FE(\305)772 5430
y Fr(\241)805 5494 y Fz(y)842 5506 y Fu(C)902 5494 y
FE(\241)i Fz(y)1014 5506 y Fu(A)1058 5430 y Fr(\242)1087
5451 y FG(2)1136 5494 y FE(\306)1206 5420 y Fr(p)p 1282
5420 620 5 v 74 x FI(\(4)c FE(\241)g FI(0\))1491 5470
y FG(2)1537 5494 y FE(\305)g FI(\()p FE(\241)p FI(3)g
FE(\241)g FI(4\))1866 5470 y FG(2)1916 5494 y FE(\306)1985
5420 y Fr(p)p 2061 5420 335 5 v 74 x FI(4)2101 5470 y
FG(2)2147 5494 y FE(\305)g FI(\()p FE(\241)p FI(7\))2361
5470 y FG(2)2410 5494 y FE(\306)2479 5429 y(p)p 2543
5429 238 5 v 65 x FI(16)g FE(\305)g FI(49)16 b FE(\306)2864
5429 y(p)p 2927 5429 82 5 v 2927 5494 a FI(65)q(.)p 0
TeXcolorgray 7 5646 a(\225)p 0 TeXcolorgray 42 w Fz(B)7
b(D)21 b FE(\306)284 5547 y Fr(q)p 360 5547 782 5 v 100
x FI(\()389 5646 y Fz(x)430 5658 y Fu(D)494 5646 y FE(\241)12
b Fz(x)602 5658 y Fu(B)649 5647 y FI(\))676 5617 y FG(2)721
5646 y FE(\305)786 5581 y Fr(\241)820 5646 y Fz(y)859
5658 y Fu(D)922 5646 y FE(\241)i Fz(y)1030 5658 y Fu(B)1077
5581 y Fr(\242)1107 5603 y FG(2)1156 5646 y FE(\306)1225
5572 y Fr(p)p 1302 5572 620 5 v 1302 5646 a FI(\()p FE(\241)p
FI(2)c FE(\241)g FI(6\))1566 5622 y FG(2)1611 5646 y
FE(\305)g FI(\(0)g FE(\241)g FI(1\))1885 5622 y FG(2)1935
5646 y FE(\306)2004 5572 y Fr(p)p 2081 5572 444 5 v 2081
5646 a FI(\()p FE(\241)p FI(8\))2230 5622 y FG(2)2275
5646 y FE(\305)g FI(\()p FE(\241)p FI(1\))2489 5622 y
FG(2)2538 5646 y FE(\306)2607 5581 y(p)p 2671 5581 197
5 v 65 x FI(64)g FE(\305)g FI(1)16 b FE(\306)2951 5581
y(p)p 3015 5581 82 5 v 65 x FI(65)q(.)p 0 TeXcolorgray
1909 5895 a(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FI(Les)18 b(diagonales)g(du)f(par)o
(all\351logr)o(amme)26 b Fz(A)s(B)5 b(C)k(D)24 b FI(sont)18
b(de)f(m\352me)i(longueur)-5 b(,)19 b(donc)e(c)n('est)h(un)f(r)o
(ectangle)h(\(propr)q(i\351t\351)f(du)g(coll\350ge\).)-246
-79 y
SDict begin H.S end
 -246 -79 a -246 -79 a
SDict begin 12 H.A end
 -246 -79 a -246 -79 a
SDict begin [/View [/XYZ H.V]/Dest (exo.42) cvn /DEST pdfmark end
 -246
-79 a -246 -62 a
SDict begin H.S end
 -246 -62 a -246 -62 a
SDict begin 12 H.A end
 -246 -62 a -246
-62 a
SDict begin [/View [/XYZ H.V]/Dest (Item.87) cvn /DEST pdfmark end
 -246 -62 a 0 TeXcolorgray 95 x FJ(Ex)o(er)o(cice)d(42)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(Le)k(sym\351tr)q(ique)g(de)f(2)h(par)f(r)o(appor)q(t)h(\340)f(5,)8
b(5)18 b(est)g(9.)p 0 TeXcolorgray 0 TeXcolorgray 776
671 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 307.85844 a add def
/d 0.0 a add neg def /h 67.14848 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 776 671 a 889 397 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 294.20126  0 -13.65718  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -13.65718
 294.20126  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-33.00528  def /maxTickline 34.1432  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 294.20126
0.0 -13.65718 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 874 494 a FG(0)205
b(1)g(2)g(3)h(4)f(5)g(6)g(7)h(8)f(9)889 397 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 -3.41418 105.27505
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 108.1205 -3.41418 108.1205
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 256.07469 0.0 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.85966 -3.41418 204.85966
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 207.70511 -3.41418 207.70511
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07469 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3332 671 a
currentpoint initclip moveto
 3332
671 a -246 711 a
SDict begin H.S end
 -246 711 a -246 711 a
SDict begin 12 H.A end
 -246 711 a -246
711 a
SDict begin [/View [/XYZ H.V]/Dest (Item.88) cvn /DEST pdfmark end
 -246 711 a 0 TeXcolorgray -141 825 a FI(2.)p 0
TeXcolorgray 43 w(On)26 b(g\351n\351r)o(alise)h(le)g(tr)o(avail)f(de)g
(la)g(question)i(pr\351c\351dente)f(:)f Fz(c)32 b FI(est)27
b(le)f(sym\351tr)q(ique)h(de)h Fz(a)i FI(par)c(r)o(appor)q(t)g(\340)g
Fz(b)k FI(lorsque)d Fz(b)j FI(est)c(le)h(milieu)h(du)-38
924 y(segment)19 b(qui)e(va)h(de)h Fz(a)i FI(\340)c Fz(c)5
b FI(.)p 0 TeXcolorgray 0 TeXcolorgray 776 1563 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 307.85844 a add def
/d 0.0 a add neg def /h 67.14848 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 776
1563 a 889 1289 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 -3.41418 105.27505
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 108.1205 -3.41418 108.1205
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 256.07469 0.0 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.85966 -3.41418 204.85966
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 207.70511 -3.41418 207.70511
3.41418   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 889 1289 a
tx@Dict begin { 48.36957 -4.55254 } PutCoor PutBegin  end
 889 1289 a 891 1326
a Fz(a)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a 889 1289 a
tx@Dict begin { 148.52335 -4.55254 } PutCoor PutBegin  end
 889 1289 a 57
x Fz(b)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a 889 1289 a
tx@Dict begin { 248.67712 -4.55254 } PutCoor PutBegin  end
 889 1289 a 37
x Fz(c)889 1289 y
tx@Dict begin  PutEnd  end
 889 1289 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07469 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3332 1563 a
currentpoint initclip moveto
 3332 1563 a -38
1716 a FI(A)n(utr)o(ement)18 b(dit)f Fz(b)h FE(\306)601
1683 y Fu(a)s FF(\305)p Fu(c)p 600 1696 110 5 v 640 1745
a FG(2)719 1716 y FI(,)g(ce)f(qui)h(donne)g Fz(b)p 1 0 0
TeXcolorrgb 4 w FE(\243)p FI(2)p 0 TeXcolorgray 14 w
FE(\306)1459 1683 y Fu(a)s FF(\305)p Fu(c)p 1458 1696
V 1503 1784 a Fy(\003)1498 1762 y FG(2)p 1 0 0 TeXcolorrgb
1577 1716 a FE(\243)1632 1732 y Fy(\001)1632 1716 y FI(2)p
0 TeXcolorgray 1 w(,)f(soit)h(2)p Fz(b)h FE(\306)d Fz(a)e
FE(\305)c Fz(c)23 b FI(;)17 b(et)h(donc)1876 1906 y Fz(c)i
FE(\306)14 b FI(2)p Fz(b)g FE(\241)e Fz(a)t FI(.)-246
1983 y
SDict begin H.S end
 -246 1983 a -246 1983 a
SDict begin 12 H.A end
 -246 1983 a -246 1983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.89) cvn /DEST pdfmark end
 -246 1983 a 0 TeXcolorgray -141 2095 a FI(3.)p 0 TeXcolorgray
43 w(On)17 b(place)f Fz(C)9 b FI(,)17 b(sym\351tr)q(ique)i(du)e(point)
24 b Fz(A)c FI(par)e(r)o(appor)q(t)f(au)h(point)g Fz(B)5
b FI(.)p 0 TeXcolorgray 0 TeXcolorgray 984 4298 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 257.78178 a add def
/d 0.0 a add neg def /h 255.5055 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 984
4298 a 1470 2814 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -170.71646 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 199.1692 0.0 -58.61258 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 76.82231 0.0 -178.68318   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 199.1692  0 -58.61258  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -58.61258
 199.1692  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-178.68318  def /maxTickline 76.82231  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 76.82231
0.0 -178.68318   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -58.61258 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 76.82231  0 -178.68318  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -178.68318
 76.82231  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-58.61258  def /maxTickline 199.1692  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 76.82231
0.0 -178.68318   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -58.61258 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1455 2911 a FG(0)205
b(1)g(2)h(3)f(4)g(5)g(6)-1705 b FF(\241)p FG(1)-309 b
FF(\241)p FG(2)1381 2833 y(0)1340 3070 y FF(\241)p FG(1)1340
3306 y FF(\241)p FG(2)1340 3542 y FF(\241)p FG(3)1340
3779 y FF(\241)p FG(4)1340 4015 y FF(\241)p FG(5)1340
4251 y FF(\241)p FG(6)1381 2597 y(1)1381 2361 y(2)1470
2814 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 92.4714 -49.7923 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.80258 3.01997 62.65802
6.53314   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 58.26611 0.58002 64.12157
4.0932   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 -156.49008
92.4714 -49.7923   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 120.82126 -103.6778 126.6767
-100.16463   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 122.28479 -106.11775
128.14023 -102.60457   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1470 2814 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1470
2814 a 0.30196 0.30196 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1470 2814 a
tx@Dict begin  PutEnd  end
 1470 2814 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 92.4714 -49.7923   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1470 2814 a
tx@Dict begin { 95.03206 -44.3862 } PutCoor PutBegin  end
 1470 2814 a 0.30196 0.30196 1 TeXcolorrgb
Fz(B)p 0 TeXcolorgray 1470 2814 a
tx@Dict begin  PutEnd  end
 1470 2814 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 156.49008 -156.49008   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1470 2814 a
tx@Dict begin { 158.76636 -150.79962 } PutCoor PutBegin  end
 1470 2814 a 0.30196 0.30196 1
TeXcolorrgb 1468 2813 a Fz(C)p 0 TeXcolorgray 1470 2814
a
tx@Dict begin  PutEnd  end
 1470 2814 a 3124 4298 a
currentpoint initclip moveto
 3124 4298 a -38 4451 a FI(P)m(ar)21
b(d\351\002nition)g(d)n('une)h(sym\351tr)q(ie)g(centr)o(ale)o(,)g
Fz(B)29 b FI(est)22 b(le)g(milieu)h(du)e(segment)2268
4452 y([)2299 4451 y Fz(A)o(C)2405 4452 y FI(])2438 4451
y(,)g(donc)g(d)n('apr\350s)h(la)f(for)q(mule)h(du)f(cours)h(pour)f(le)h
(milieu)-38 4551 y(d)n('un)c(segment)g(:)1435 4677 y
Fz(x)1476 4689 y Fu(B)1538 4677 y FE(\306)1619 4621 y
Fz(x)1664 4633 y Fu(A)1718 4621 y FE(\305)12 b Fz(x)1824
4633 y Fu(C)p 1617 4658 258 5 v 1725 4734 a FI(2)2030
4677 y(,)158 b Fz(y)2247 4689 y Fu(B)2309 4677 y FE(\306)2392
4621 y Fz(y)2435 4633 y Fu(A)2488 4621 y FE(\305)14 b
Fz(y)2594 4633 y Fu(C)p 2388 4658 257 5 v 2496 4734 a
FI(2)2654 4677 y(.)-38 4859 y(A)n(utr)o(ement)k(dit,)g(en)f(r)o
(empla\347ant)h(avec)g(les)g(donn\351es)g(de)f(l)o('\351nonc\351)i(:)
1396 5068 y(3,)8 b(25)16 b FE(\306)1639 5012 y FI(1)10
b FE(\305)i Fz(x)1795 5024 y Fu(C)p 1639 5049 207 5 v
1722 5125 a FI(2)2002 5068 y(,)155 b FE(\241)p FI(1,)8
b(75)16 b FE(\306)2475 5012 y FI(2)10 b FE(\305)k Fz(y)2631
5024 y Fu(C)p 2475 5049 V 2558 5125 a FI(2)2691 5068
y(.)-38 5280 y(En)j(r)o(aisonnant)i(comme)f(dans)g(la)f(question)i
(pr\351c\351dente)o(,)f(on)g(obtient)1055 5456 y Fz(x)1094
5468 y Fu(C)1158 5456 y FE(\306)d FI(2)10 b FE(\243)g
FI(3,)e(25)i FE(\241)g FI(1)17 b FE(\306)d FI(5,)8 b(5)148
b(,)158 b Fz(y)2163 5468 y Fu(C)2227 5456 y FE(\306)14
b FI(2)c FE(\243)g FI(\()p FE(\241)p FI(1,)e(75\))i FE(\241)g
FI(2)18 b FE(\306)c(\241)p FI(5,)8 b(5.)-38 5646 y(C)o(onclusion)19
b(:)d Fz(C)9 b FI(\(5,)f(5)18 b(;)25 b FE(\241)p FI(5,)8
b(5\).)-246 5721 y
SDict begin H.S end
 -246 5721 a -246 5721 a
SDict begin 12 H.A end
 -246 5721
a -246 5721 a
SDict begin [/View [/XYZ H.V]/Dest (exo.43) cvn /DEST pdfmark end
 -246 5721 a 0 TeXcolorgray 1909 5895 a
FI(21)p 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FJ(Ex)o(er)o(cice)14
b(43)p 0 TeXcolorgray 41 w FI(C)o(et)k(exer)o(cice)g(d)n('introduction)
g(\340)f(la)g(notion)h(de)g(vecteur)f(appelle)j(quelques)f(commentair)o
(es)g(:)-246 -116 y
SDict begin H.S end
 -246 -116 a -246 -116 a
SDict begin 12 H.A end
 -246 -116
a -246 -116 a
SDict begin [/View [/XYZ H.V]/Dest (Item.90) cvn /DEST pdfmark end
 -246 -116 a 0 TeXcolorgray -141 -8 a FI(1.)p
0 TeXcolorgray 43 w(La)e(t\351l\351cabine)i Fz(E)8 b(F)g(G)g(H)25
b FI(glisse)18 b(pour)g(aboutir)f(\340)g(la)h(position)j
Fz(I)14 b(J)8 b(K)k(L)s FI(.)19 b(C)o(e)f(d\351placement)h(est)f
(appel\351)h(\253)14 b(tr)o(anslation)k(de)f(vecteur)3775
-62 y FE(\241)-18 b(!)3781 -8 y Fz(A)s(B)22 b FI(\273.)-246
25 y
SDict begin H.S end
 -246 25 a -246 25 a
SDict begin 12 H.A end
 -246 25 a -246 25 a
SDict begin [/View [/XYZ H.V]/Dest (Item.91) cvn /DEST pdfmark end
 -246 25
a 0 TeXcolorgray -141 133 a FI(2.)p 0 TeXcolorgray 43
w(Le)i(vecteur)348 80 y FE(\241)-19 b(!)354 133 y Fz(A)s(B)31
b FI(a)23 b(\351t\351)h(r)o(epr\351sent\351)g(en)g(violet)g(sur)g(la)f
(\002gur)o(e)o(,)f(il)i(est)g(\351gal)f(\340)g(chacun)h(des)g(vecteurs)
2998 80 y FE(\241)-40 b(!)2998 133 y Fz(E)10 b(I)g FI(,)3133
80 y FE(\241)-38 b(!)3133 133 y Fz(F)15 b(J)8 b FI(,)3270
80 y FE(\241)-33 b(\241)g(!)3268 133 y Fz(G)6 b(K)35
b FI(et)3502 80 y FE(\241)-35 b(\241)g(!)3504 133 y Fz(H)8
b(L)t FI(.)23 b(On)g(peut)i(donc)-38 233 y(\351cr)q(ir)o(e)1610
279 y FE(\241)-19 b(!)1616 332 y Fz(A)s(B)22 b FE(\306)1806
279 y(\241)-40 b(!)1806 332 y Fz(E)10 b(I)24 b FE(\306)1981
279 y(\241)-38 b(!)1981 332 y Fz(F)15 b(J)22 b FE(\306)2158
279 y(\241)-33 b(\241)g(!)2156 332 y Fz(G)6 b(K)26 b
FE(\306)2361 279 y(\241)-35 b(\241)g(!)2363 332 y Fz(H)8
b(L)d FI(.)-246 391 y
SDict begin H.S end
 -246 391 a -246 391 a
SDict begin 12 H.A end
 -246 391
a -246 391 a
SDict begin [/View [/XYZ H.V]/Dest (Item.92) cvn /DEST pdfmark end
 -246 391 a 0 TeXcolorgray -141 496 a FI(3.)p
0 TeXcolorgray 43 w(P)n(our)21 b(aller)i(de)k Fz(A)e
FI(\340)d Fz(B)6 b FI(,)22 b(on)g(avance)g(de)g(4)g(carr)o(eaux)f(en)i
(abscisse)f(et)g(on)g(descend)g(de)g(1)g(carr)o(eau)f(en)i(or)o
(donn\351e)9 b(;)21 b(on)h(dit)g(que)3783 443 y FE(\241)-19
b(!)3789 496 y Fz(A)s(B)29 b FI(a)22 b(pour)-38 643 y(abscisse)c(4)g
(et)f(pour)h(or)o(donn\351e)f FE(\241)p FI(1.)h(On)f(note)1369
589 y FE(\241)-18 b(!)1375 643 y Fz(A)s(B)1490 533 y
Fr(\265)1552 591 y FI(4)1525 691 y FE(\241)p FI(1)1620
533 y Fr(\266)1662 643 y FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1093 2121 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56676 a add def
/d 0.0 a add neg def /h 157.62799 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1093 2121 a 1896 1908 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 109.8276 0.0 -96.73915 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 132.0207 0.0 -25.60728   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 109.8276  0 -96.73915  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -96.73915
 109.8276  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-25.60728  def /maxTickline 132.0207  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -25.60728   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.8276
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 132.0207  0 -25.60728  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -25.60728
 132.0207  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-96.73915  def /maxTickline 109.8276  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -25.60728   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.8276
0.0 -96.73915 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1881 2005 a FG(0)204
b(1)i(2)f(3)-997 b FF(\241)p FG(1)-309 b FF(\241)p FG(2)g
FF(\241)p FG(3)1807 1692 y(1)1807 1455 y(2)1807 1219
y(3)1807 983 y(4)1896 1908 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ -85.35823 28.45274
-28.45274 28.45274 -28.45274 85.35823 -85.35823 85.35823  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 28.45274 0.0 85.35823
0.0 85.35823 56.90549 28.45274 56.90549  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 85.35823 -85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -28.45274 28.45274 -28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -85.35823 28.45274 -28.45274
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -85.35823 85.35823 -85.35823
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 56.90549 28.45274
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 85.35823 -56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 85.35823 -56.90549 113.81097   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 56.90549 -28.45274 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 56.90549 -85.35823 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 0.0 -85.35823 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 0.0 -28.45274 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1896 1908 a
tx@Dict begin { -54.62921 119.50143 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { 59.18175 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908
a 1896 1908 a
tx@Dict begin { -83.08195 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
Fz(E)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908
a
tx@Dict begin { -26.17647 91.04869 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb Fz(F)p 0
TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { -26.17647 34.1432 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 1894 1907 a Fz(G)p
0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { -83.08195 34.1432 } PutCoor PutBegin  end
 1896
1908 a 0.30196 0.30196 1 TeXcolorrgb 2 w Fz(H)p 0 TeXcolorgray
1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896 1908 a
tx@Dict begin { 29.59065 59.75093 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1
TeXcolorrgb 2 w Fz(I)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896
1908 a 1896 1908 a
tx@Dict begin { 87.63449 62.59595 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
1901 1899 a Fz(J)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908
a 1896 1908 a
tx@Dict begin { 87.63449 5.69046 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb
-1 x Fz(K)p 0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 1896
1908 a
tx@Dict begin { 30.729 2.84544 } PutCoor PutBegin  end
 1896 1908 a 0.30196 0.30196 1 TeXcolorrgb Fz(L)p
0 TeXcolorgray 1896 1908 a
tx@Dict begin  PutEnd  end
 1896 1908 a 2807 2121 a
currentpoint initclip moveto
 2807
2121 a -246 2204 a
SDict begin H.S end
 -246 2204 a -246 2204 a
SDict begin 12 H.A end
 -246 2204
a -246 2204 a
SDict begin [/View [/XYZ H.V]/Dest (exo.44) cvn /DEST pdfmark end
 -246 2204 a -246 2206 a
SDict begin H.S end
 -246 2206 a -246
2206 a
SDict begin 12 H.A end
 -246 2206 a -246 2206 a
SDict begin [/View [/XYZ H.V]/Dest (Item.93) cvn /DEST pdfmark end
 -246 2206 a 0 TeXcolorgray
114 x FJ(Ex)o(er)o(cice)14 b(44)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
939 3616 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 268.59395 a add def
/d 0.0 a add neg def /h 147.95416 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 939 3616 a 1813 3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.3189 0.0 -105.27505 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 80.80568 0.0 -67.14848   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.3189  0 -105.27505  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -105.27505
 163.3189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 80.80568  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -67.14848   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -105.27505 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 80.80568  0 -67.14848  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -67.14848
 80.80568  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-105.27505  def /maxTickline 163.3189  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -67.14848   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -105.27505 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1798 3155 a FG(0)205
b(1)g(2)g(3)g(4)h(5)-1470 b FF(\241)p FG(1)-309 b FF(\241)p
FG(2)g FF(\241)p FG(3)1724 3078 y(0)1682 3314 y FF(\241)p
FG(1)1682 3550 y FF(\241)p FG(2)1724 2841 y(1)1724 2605
y(2)1813 3058 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 56.90549 -85.35823 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 0.0 28.45274 -56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -85.35823 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1813 3058 a
tx@Dict begin { -95.03206 6.25963 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813
3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1813 3058
a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1 TeXcolorrgb Fz(B)p 0
TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813 3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1813 3058 a
tx@Dict begin { 19.91682 -52.35294 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1
TeXcolorrgb 2 w Fz(I)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813
3058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 142.26372 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1813 3058
a
tx@Dict begin { 144.53998 5.69046 } PutCoor PutBegin  end
 1813 3058 a 0.30196 0.30196 1 TeXcolorrgb 1818 3049
a Fz(J)p 0 TeXcolorgray 1813 3058 a
tx@Dict begin  PutEnd  end
 1813 3058 a 3169
3616 a
currentpoint initclip moveto
 3169 3616 a -246 3660 a
SDict begin H.S end
 -246 3660 a -246 3660
a
SDict begin 12 H.A end
 -246 3660 a -246 3660 a
SDict begin [/View [/XYZ H.V]/Dest (Item.94) cvn /DEST pdfmark end
 -246 3660 a 0 TeXcolorgray
-141 3774 a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(calcule)h(les)g(coor)o
(donn\351es)g(de)1026 3720 y FE(\241)-19 b(!)1032 3774
y Fz(A)s(B)39 b FI(:)1321 3934 y FE(\241)-19 b(!)1327
3988 y Fz(A)s(B)1442 3878 y Fr(\265)1478 3936 y Fz(x)1519
3948 y Fu(B)1576 3936 y FE(\241)12 b Fz(x)1688 3948 y
Fu(A)1480 4036 y Fz(y)1519 4048 y Fu(B)1576 4036 y FE(\241)i
Fz(y)1688 4048 y Fu(A)1732 3878 y Fr(\266)1921 3934 y
FE(\241)-19 b(!)1927 3988 y Fz(A)s(B)2042 3878 y Fr(\265)2076
3936 y FI(1)10 b FE(\241)g FI(\()p FE(\241)p FI(3\))2130
4036 y(2)g FE(\241)g FI(0)2340 3878 y Fr(\266)2529 3934
y FE(\241)-19 b(!)2535 3988 y Fz(A)s(B)2650 3878 y Fr(\265)2684
3936 y FI(4)2684 4036 y(2)2724 3878 y Fr(\266)2767 3988
y FI(.)-246 4149 y
SDict begin H.S end
 -246 4149 a -246 4149 a
SDict begin 12 H.A end
 -246 4149
a -246 4149 a
SDict begin [/View [/XYZ H.V]/Dest (Item.95) cvn /DEST pdfmark end
 -246 4149 a 0 TeXcolorgray -141 4257 a
FI(3.)p 0 TeXcolorgray 43 w(On)17 b(calcule)h(les)g(coor)o(donn\351es)g
(de)1026 4203 y FE(\241)-53 b(!)1028 4257 y Fz(I)14 b(J)41
b FI(:)1385 4342 y FE(\241)-53 b(!)1387 4395 y Fz(I)14
b(J)1472 4285 y Fr(\265)1508 4344 y Fz(x)1553 4356 y
Fu(J)1594 4344 y FE(\241)e Fz(x)1704 4356 y Fu(I)1510
4444 y Fz(y)1553 4456 y Fu(J)1594 4444 y FE(\241)i Fz(y)1704
4456 y Fu(I)1736 4285 y Fr(\266)1925 4342 y FE(\241)-53
b(!)1927 4395 y Fz(I)14 b(J)2011 4285 y Fr(\265)2100
4344 y FI(5)c FE(\241)g FI(1)2045 4444 y(0)g FE(\241)g
FI(\()p FE(\241)p FI(2\))2310 4285 y Fr(\266)2498 4342
y FE(\241)-53 b(!)2500 4395 y Fz(I)14 b(J)2585 4285 y
Fr(\265)2619 4344 y FI(4)2619 4444 y(2)2660 4285 y Fr(\266)2702
4395 y FI(.)-38 4617 y(C)o(onclusion)19 b(:)f(les)g(vecteurs)830
4563 y FE(\241)-19 b(!)836 4617 y Fz(A)s(B)25 b FI(et)1043
4563 y FE(\241)-53 b(!)1045 4617 y Fz(I)14 b(J)26 b FI(ont)18
b(les)g(m\352mes)h(coor)o(donn\351es)o(,)f(donc)f(ils)h(sont)g
(\351gaux)g(:)2852 4563 y FE(\241)-19 b(!)2858 4617 y
Fz(A)s(B)22 b FE(\306)3048 4563 y(\241)-53 b(!)3050 4617
y Fz(I)14 b(J)c FI(.)p 0 TeXcolorgray 1909 5895 a(22)p
0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.45) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(45)p 0 TeXcolorgray 41 w FI(On)j(consid\350r)o(e)h(les)g(points)25
b Fz(A)s FI(\()p FE(\241)p FI(3;)8 b FE(\241)p FI(2\),)18
b Fz(B)7 b FI(\(5;)h FE(\241)p FI(2\),)17 b Fz(C)9 b
FI(\(1;)f(4\),)18 b Fz(D)6 b FI(\()p FE(\241)p FI(1;)i(1\),)19
b Fz(E)8 b FI(\(3;)g(1\),)18 b Fz(F)10 b FI(\(5;)e(4\).)p
0 TeXcolorgray 0 TeXcolorgray 901 1306 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 252.66048 a add def
/d 0.0 a add neg def /h 198.03128 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 901 1306 a 1719
730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -42.67911 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 115.66034 0.0 -73.83499 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -64.01866 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.45486 0.0 -52.06856   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 115.66034  0 -73.83499  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -73.83499
 115.66034  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-52.06856  def /maxTickline 96.45486  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.45486
0.0 -52.06856   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 115.66034
0.0 -73.83499 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.45486  0 -52.06856  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -52.06856
 96.45486  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-73.83499  def /maxTickline 115.66034  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.45486
0.0 -52.06856   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 115.66034
0.0 -73.83499 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1704 827 a FG(0)145 b(1)h(2)h(3)f(4)g(5)-1115
b FF(\241)p FG(1)-250 b FF(\241)p FG(2)g FF(\241)p FG(3)1630
749 y(0)1588 927 y FF(\241)p FG(1)1588 1104 y FF(\241)p
FG(2)1630 572 y(1)1630 395 y(2)1630 218 y(3)1630 41 y(4)1719
730 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 -42.67911 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 21.33955 85.35822 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 -42.67911 21.33955 85.35822
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 64.01866 21.33955 -21.33955 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 21.33955 85.35822
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 64.01866 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 64.01866 21.33955 -64.01866 -42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69777 85.35822 -21.33955 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -64.01866 -42.67911
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { -69.56682 -38.41125 } PutCoor PutBegin  end
 1719 730 a 6 w Fz(A)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 106.69777 -42.67911
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1719 730 a
tx@Dict begin { 108.40497 -40.11845 } PutCoor PutBegin  end
 1719
730 a Fz(B)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 21.33955 85.35822
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1719 730 a
tx@Dict begin { 23.04675 87.91885 } PutCoor PutBegin  end
 1719 730 a 1717 729 a Fz(C)1719
730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -21.33955 21.33955
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { -29.87524 25.18051 } PutCoor PutBegin  end
 1719 730 a Fz(D)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 64.01866 21.33955
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1719 730 a
tx@Dict begin { 70.42058 16.21794 } PutCoor PutBegin  end
 1719 730 a Fz(E)1719
730 y
tx@Dict begin  PutEnd  end
 1719 730 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 106.69777 85.35822
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1719 730 a
tx@Dict begin { 108.40497 87.91885 } PutCoor PutBegin  end
 1719 730 a Fz(F)1719 730 y
tx@Dict begin  PutEnd  end
 1719 730 a 2999
1306 a
currentpoint initclip moveto
 2999 1306 a -246 1253 a FI(Il)18 b(y)g(a)g(trop)g(de)f
(possibilit\351s)k(pour)e(que)g(les)f(justi\002e)i(toutes)o(.)f(J)n(e)f
(vais)g(me)h(contenter)g(de)f(donner)g(un)h(couple)g(de)f(vecteurs)h
(\351gaux,)g(avec)f(la)h(justi\002-)-246 1352 y(cation)9
b(;)18 b(puis)g(donner)g(toutes)g(les)h(autr)o(es)e(\351galit\351s)h
(possibles)o(,)i(mais)e(sans)g(les)g(justi\002er)g(:)-246
1386 y
SDict begin H.S end
 -246 1386 a -246 1386 a
SDict begin 12 H.A end
 -246 1386 a -246 1386
a
SDict begin [/View [/XYZ H.V]/Dest (Item.96) cvn /DEST pdfmark end
 -246 1386 a 0 TeXcolorgray -141 1481 a FI(1.)p 0 TeXcolorgray
43 w FJ(U)l(ne)d(\351galit\351)g(et)h(sa)f(justi\002cation.)-38
1555 y FE(\241)-33 b(\241)h(!)-38 1608 y Fz(D)t(C)23
b FE(\306)167 1555 y(\241)-25 b(!)167 1608 y Fz(E)8 b(F)h
FI(.)17 b(En)h(effet,)g(ces)g(vecteurs)g(ont)g(les)g(m\352mes)h(coor)o
(donn\351es)f(:)p 0 TeXcolorgray 7 1748 a(\225)p 0 TeXcolorgray
80 1695 a FE(\241)-33 b(\241)h(!)80 1748 y Fz(D)t(C)209
1638 y Fr(\265)245 1697 y Fz(x)284 1709 y Fu(C)344 1697
y FE(\241)12 b Fz(x)452 1709 y Fu(D)248 1796 y Fz(y)285
1808 y Fu(C)344 1796 y FE(\241)i Fz(y)452 1808 y Fu(D)506
1638 y Fr(\266)695 1695 y FE(\241)-33 b(\241)h(!)695
1748 y Fz(D)t(C)824 1638 y Fr(\265)858 1697 y FI(1)10
b FE(\241)g FI(\()p FE(\241)p FI(1\))912 1796 y(4)g FE(\241)g
FI(1)1123 1638 y Fr(\266)1311 1695 y FE(\241)-32 b(\241)f(!)1311
1748 y Fz(D)t(C)1441 1638 y Fr(\265)1475 1697 y FI(2)1475
1796 y(3)1515 1638 y Fr(\266)1558 1748 y FI(.)p 0 TeXcolorgray
7 1956 a(\225)p 0 TeXcolorgray 80 1902 a FE(\241)-24
b(!)80 1956 y Fz(E)8 b(F)195 1846 y Fr(\265)231 1904
y Fz(x)272 1916 y Fu(F)328 1904 y FE(\241)k Fz(x)436
1916 y Fu(E)234 2004 y Fz(y)273 2016 y Fu(F)328 2004
y FE(\241)i Fz(y)436 2016 y Fu(E)481 1846 y Fr(\266)670
1902 y FE(\241)-24 b(!)670 1956 y Fz(E)8 b(F)785 1846
y Fr(\265)819 1904 y FI(5)i FE(\241)g FI(3)819 2004 y(4)g
FE(\241)g FI(1)976 1846 y Fr(\266)1164 1902 y FE(\241)-24
b(!)1164 1956 y Fz(E)8 b(F)1279 1846 y Fr(\265)1313 1904
y FI(2)1313 2004 y(3)1354 1846 y Fr(\266)1396 1956 y
FI(.)-246 2048 y
SDict begin H.S end
 -246 2048 a -246 2048 a
SDict begin 12 H.A end
 -246 2048 a
-246 2048 a
SDict begin [/View [/XYZ H.V]/Dest (Item.97) cvn /DEST pdfmark end
 -246 2048 a 0 TeXcolorgray -141 2129 a FI(2.)p
0 TeXcolorgray 43 w FJ(T)-7 b(outes)15 b(les)h(autr)o(es)e
(\351galit\351s.)-38 2202 y FE(\241)-21 b(!)-40 2255
y Fz(C)9 b(F)24 b FE(\306)156 2202 y(\241)-34 b(\241)g(!)156
2255 y Fz(D)6 b(E)420 2202 y FE(\241)-21 b(!)420 2255
y Fz(F)8 b(C)23 b FE(\306)614 2202 y(\241)-34 b(\241)g(!)614
2255 y Fz(E)8 b(D)878 2202 y FE(\241)-33 b(\241)h(!)876
2255 y Fz(C)9 b(D)20 b FE(\306)1082 2202 y(\241)-24 b(!)1082
2255 y Fz(F)10 b(E)1336 2202 y FE(\241)-33 b(\241)h(!)1336
2255 y Fz(D)t(C)23 b FE(\306)1540 2202 y(\241)-32 b(\241)f(!)1546
2255 y Fz(A)s(D)1808 2202 y FE(\241)-24 b(!)1808 2255
y Fz(E)8 b(F)23 b FE(\306)1998 2202 y(\241)-32 b(\241)f(!)2004
2255 y Fz(A)s(D)2266 2202 y FE(\241)g(\241)g(!)2266 2255
y Fz(D)12 b(A)17 b FE(\306)2470 2202 y(\241)-32 b(\241)f(!)2468
2255 y Fz(C)9 b(D)2738 2202 y FE(\241)-33 b(\241)g(!)2738
2255 y Fz(D)12 b(A)17 b FE(\306)2942 2202 y(\241)-24
b(!)2942 2255 y Fz(F)10 b(E)3196 2202 y FE(\241)-22 b(!)3202
2255 y Fz(A)s(E)21 b FE(\306)3389 2202 y(\241)-34 b(\241)g(!)3389
2255 y Fz(D)6 b(F)3653 2202 y FE(\241)-21 b(!)3653 2255
y Fz(E)14 b(A)j FE(\306)3847 2202 y(\241)-34 b(\241)g(!)3847
2255 y Fz(F)10 b(D)4111 2202 y FE(\241)-21 b(!)4109 2255
y Fz(C)9 b(E)22 b FE(\306)-38 2302 y(\241)-22 b(!)-38
2355 y Fz(E)8 b(B)218 2302 y FE(\241)-22 b(!)218 2355
y Fz(E)6 b(C)22 b FE(\306)411 2302 y(\241)-22 b(!)411
2355 y Fz(B)7 b(E)-38 2519 y Fs(")p FI(A)o(ttention)19
b(\340)e(l)o('or)o(dr)o(e)f(des)h(lettr)o(es)9 b(!)18
b(P)m(ar)f(exemple)o(,)1548 2466 y FE(\241)-32 b(\241)f(!)1548
2519 y Fz(D)t(C)24 b FE(\306)1753 2466 y(\241)-24 b(!)1753
2519 y Fz(E)8 b(F)h FI(,)18 b(mais)2080 2466 y FE(\241)-32
b(\241)f(!)2080 2519 y Fz(D)t(C)24 b FE(6\306)2285 2466
y(\241)-24 b(!)2285 2519 y Fz(F)10 b(E)24 b FI(\(il)18
b(y)e(a)h(un)h(probl\350me)f(de)g(sens)h(:)f(le)h(vecteur)3733
2466 y FE(\241)-33 b(\241)h(!)3733 2519 y Fz(D)t(C)26
b FI(\253)14 b(monte)-38 2631 y(vers)j(le)h(haut)f(et)h(la)f(droite)c
(\273)c(;)16 b(tandis)i(que)1211 2578 y FE(\241)-24 b(!)1211
2631 y Fz(F)10 b(E)24 b FI(\253)13 b(descend)18 b(vers)f(le)g(bas)g(et)
g(la)g(gauche)c(\273)35 b(\226)17 b(l)o('err)o(eur)g(se)g(d\351tecte)h
(aussi)g(bien)f(s\373r)g(en)h(calculant)-38 2731 y(les)g(coor)o
(donn\351es\).)-246 2807 y
SDict begin H.S end
 -246 2807 a -246 2807 a
SDict begin 12 H.A end
 -246
2807 a -246 2807 a
SDict begin [/View [/XYZ H.V]/Dest (exo.46) cvn /DEST pdfmark end
 -246 2807 a 0 TeXcolorgray 123 x FJ(Ex)o(er)o(cice)c
(46)p 0 TeXcolorgray 41 w FI(En)22 b(physique)o(,)h(un)f(vecteur)g(r)o
(epr\351sente)g(une)h(for)o(ce)o(,)e(et)g(la)h(longueur)g(\(ou)g(nor)q
(me\))g(du)f(vecteur)h(corr)o(espond)f(\340)h(l)o('intensit\351)i(de)d
(la)-246 3048 y(for)o(ce)o(.)c(L)-10 b('\351galit\351)264
2957 y Fr(\260)264 3003 y(\260)264 3049 y(\260)306 2994
y FE(\241)-46 b(!)306 3048 y Fz(P)356 3060 y FG(2)392
2957 y Fr(\260)392 3003 y(\260)392 3049 y(\260)448 3048
y FE(\306)14 b FI(2)565 2957 y Fr(\260)565 3003 y(\260)565
3049 y(\260)608 2994 y FE(\241)-46 b(!)608 3048 y Fz(P)658
3060 y FG(1)694 2957 y Fr(\260)694 3003 y(\260)694 3049
y(\260)753 3048 y FI(signi\002e)18 b(que)g(la)f(masse)i(2)e(a)h(un)f
(poids)h(deux)g(fois)g(plus)g(impor)q(tant)h(que)f(celui)g(de)f(la)h
(masse)g(1.)p 0 TeXcolorgray 0 TeXcolorgray 1213 4556
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 177.54527 a add def
/d 0.0 a add neg def /h 165.026 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1213 4556 a 2125 4840 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 56.90549 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 67.71767 0.0 -109.8276 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 199.1692 0.0 34.1432   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -85.35823
85.35823 -85.35823 142.26372   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -28.45274
56.90549 -28.45274 170.71646   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2125 4840 a
tx@Dict begin { -73.9773 128.03734 } PutCoor PutBegin  end
 2125 4840 a 31 x FE(\241)-46 b(!)2125 4925
y Fz(P)2175 4937 y FG(1)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125
4840 a
tx@Dict begin { -17.07181 128.03734 } PutCoor PutBegin  end
 2125 4840 a 31 x FE(\241)g(!)2125 4925 y Fz(P)2175
4937 y FG(2)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125 4840 a
tx@Dict begin { -98.44667 160.47345 } PutCoor PutBegin  end
 2125
4840 a 51 x FI(masse)18 b(1)2125 4840 y
tx@Dict begin  PutEnd  end
 2125 4840 a 2125
4840 a
tx@Dict begin { -45.52455 190.63329 } PutCoor PutBegin  end
 2125 4840 a 51 x FI(masse)g(2)2125 4840 y
tx@Dict begin  PutEnd  end
 2125
4840 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  [ -85.35823 142.26372
  false NArray  /DS 8.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  [ -28.45274 170.71646
  false NArray  /DS 11.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2687 4556 a
currentpoint initclip moveto
 2687 4556 a 0 TeXcolorgray
1909 5895 a FI(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.47) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 121 x FJ(Ex)o(er)o(cice)
14 b(47)p 0 TeXcolorgray 41 w FI(L)-10 b('image)19 b(du)e(tr)q(iangle)
23 b Fz(A)s(B)5 b(C)27 b FI(par)18 b(la)f(tr)o(anslation)i(de)e
(vecteur)2040 -162 y FE(\241)-57 b(!)2052 -125 y Fz(u)2123
-235 y Fr(\265)2184 -176 y FI(5)2157 -76 y FE(\241)p
FI(3)2252 -235 y Fr(\266)2304 -125 y FI(est)18 b(le)f(tr)q(iangle)h
Fz(D)6 b(E)i(F)l FI(.)p 0 TeXcolorgray 0 TeXcolorgray
1045 1976 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 218.09026 a add def
/d 0.0 a add neg def /h 232.601 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1045 1976 a 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 21.33955 64.01866
0.0 -85.35822 -42.67911 42.67911  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 1 0.8 0.8  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ 128.03732 0.0 106.69777
-149.37688 64.01866 -21.33955  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0.8 1 0.8  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 -85.35822 -42.67911
42.67911   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 21.33955 64.01866 0.0
-85.35822   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -42.67911 42.67911 21.33955
64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
64.01866 -21.33955 -42.67911 42.67911   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 -149.37688 0.0 -85.35822   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
128.03732 0.0 21.33955 64.01866   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 -149.37688
64.01866 -21.33955   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03732 0.0 106.69777
-149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 -21.33955 128.03732
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1498 661 a
tx@Dict begin { 72.55435 53.34888 } PutCoor PutBegin  end
 1498
661 a 0.49803 0 1 TeXcolorrgb 84 x FE(\241)-57 b(!)1510
783 y Fz(u)1581 672 y Fr(\265)1642 731 y FI(5)1615 831
y FE(\241)p FI(3)1710 672 y Fr(\266)p 0 TeXcolorgray
1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -42.67911 42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1498 661 a
tx@Dict begin { -40.9719 46.94695 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1 TeXcolorrgb 6
w Fz(A)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -85.35822   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { -11.95009 -81.09036 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33955 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { 23.04675 67.43306 } PutCoor PutBegin  end
 1498
661 a 0.30196 0.30196 1 TeXcolorrgb 1496 660 a Fz(C)p
0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01866 -21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 1498 661 a
tx@Dict begin { 65.72586 -17.0717 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1
TeXcolorrgb Fz(D)p 0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 106.69777 -149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1498 661 a
tx@Dict begin { 110.53873 -145.96246 } PutCoor PutBegin  end
 1498
661 a 0.30196 0.30196 1 TeXcolorrgb Fz(E)p 0 TeXcolorgray
1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1498 661 a
tx@Dict begin { 129.74452 4.26784 } PutCoor PutBegin  end
 1498 661 a 0.30196 0.30196 1 TeXcolorrgb Fz(F)p
0 TeXcolorgray 1498 661 a
tx@Dict begin  PutEnd  end
 1498 661 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -149.37688 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.46106 0.0 -54.6292 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 74.26155 0.0 -158.33945   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.46106  0 -54.6292  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -54.6292
 163.46106  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-158.33945  def /maxTickline 74.26155  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.26155
0.0 -158.33945   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.46106
0.0 -54.6292 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 74.26155  0 -158.33945  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -158.33945
 74.26155  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.6292  def /maxTickline 163.46106  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.26155
0.0 -158.33945   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.46106
0.0 -54.6292 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1483 758 a FG(0)146
b(1)g(2)g(3)g(4)h(5)f(6)g(7)-1469 b FF(\241)p FG(1)-250
b FF(\241)p FG(2)1409 681 y(0)1368 858 y FF(\241)p FG(1)1368
1035 y FF(\241)p FG(2)1368 1212 y FF(\241)p FG(3)1368
1390 y FF(\241)p FG(4)1368 1567 y FF(\241)p FG(5)1368
1744 y FF(\241)p FG(6)1368 1921 y FF(\241)p FG(7)1409
504 y(1)1409 327 y(2)2855 1976 y
currentpoint initclip moveto
 2855 1976 a -246 2104
a
SDict begin H.S end
 -246 2104 a -246 2104 a
SDict begin 12 H.A end
 -246 2104 a -246 2104 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -246
2104 a 149 x FK(4)105 b(\311)n(tudes)23 b(graphiques)g(de)f(fonctions)
-246 2364 y
SDict begin H.S end
 -246 2364 a -246 2364 a
SDict begin 12 H.A end
 -246 2364 a -246
2364 a
SDict begin [/View [/XYZ H.V]/Dest (exo.48) cvn /DEST pdfmark end
 -246 2364 a 0 TeXcolorgray 73 x FJ(Ex)o(er)o(cice)14
b(48)p 0 TeXcolorgray 41 w FI(U)m(n)27 b(vo)n(yageur)e(de)h(commer)o
(ce)g(\()p FE(\306)g FI(un)g(r)o(epr\351sentant\))h(fait)g(une)f(note)h
(de)f(fr)o(ais)g(pour)h(chaque)f(jour)h(de)e(tr)o(avail)i(o\371)f(il)h
(utilise)g(sa)-246 2537 y(voitur)o(e)o(.)18 b(Il)e(r)o(e\347oit)i(une)g
(par)q(t)f(\002xe)g(de)g(30)h FC(N)p FI(,)f(et)h(une)g(indemnit\351)h
(de)e(0,5)i FC(N)p FI(/km.)-246 2686 y FJ(R)o(emarque)f(:)j
FI(On)h(peut)g(penser)g(que)g(l)o('indemnit\351)i(kilom\351tr)q(ique)f
(ser)q(t)f(\340)f(r)o(embourser)g(les)h(fr)o(ais)g(de)f(d\351placement)
i(\(par)e(exemple)i(si)f(le)g(r)o(epr\351-)-246 2786
y(sentant)d(utilise)g(sa)f(propr)o(e)e(voitur)o(e\))9
b(;)18 b(et)f(que)h(la)g(par)q(t)f(\002xe)g(ser)q(t)g(\340)g(payer)g
(les)h(r)o(epas)o(.)-246 2834 y
SDict begin H.S end
 -246 2834 a -246 2834
a
SDict begin 12 H.A end
 -246 2834 a -246 2834 a
SDict begin [/View [/XYZ H.V]/Dest (Item.98) cvn /DEST pdfmark end
 -246 2834 a 0 TeXcolorgray
-141 2929 a FI(1.)p 0 TeXcolorgray 43 w(S)o('il)h(fait)e(120)i(km)f
(dans)f(la)h(jour)q(n\351e)o(,)f(le)h(montant)h(de)e(la)g(note)h(de)g
(fr)o(ais)g(est)g(de)1532 3112 y(30)10 b FE(\305)g FI(120)g
FE(\243)g FI(0,)e(5)19 b FE(\306)14 b FI(30)c FE(\305)g
FI(60)17 b FE(\306)d FI(90)k FC(N)p FI(.)-246 3206 y
SDict begin H.S end

-246 3206 a -246 3206 a
SDict begin 12 H.A end
 -246 3206 a -246 3206 a
SDict begin [/View [/XYZ H.V]/Dest (Item.99) cvn /DEST pdfmark end
 -246
3206 a 0 TeXcolorgray -141 3309 a FI(2.)p 0 TeXcolorgray
43 w(On)f(note)j Fz(x)j FI(le)17 b(nombr)o(e)h(de)f(km)g(par)o(cour)q
(us)g(par)h(le)f(vo)n(yageur)g(de)g(commer)o(ce)o(,)h(et)25
b Fz(f)19 b FI(\()r Fz(x)5 b FI(\))17 b(le)h(montant)h(de)e(la)g(note)h
(de)g(fr)o(ais)o(.)f(On)h(a)f(alors)1543 3492 y Fz(f)i
FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(30)c FE(\305)i
Fz(x)j FE(\243)10 b FI(0,)e(5)18 b FE(\306)c FI(0,)8
b(5)r Fz(x)15 b FE(\305)10 b FI(30.)-246 3593 y
SDict begin H.S end
 -246
3593 a -246 3593 a
SDict begin 12 H.A end
 -246 3593 a -246 3593 a
SDict begin [/View [/XYZ H.V]/Dest (Item.100) cvn /DEST pdfmark end
 -246 3593
a 0 TeXcolorgray -141 3689 a FI(3.)p 0 TeXcolorgray 43
w(La)k(fonction)22 b Fz(f)34 b FI(est)14 b(af\002ne)o(,)g(puisque)22
b Fz(f)f FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(0,)8
b(5)r Fz(x)f FE(\305)r FI(30)14 b(\(c)n('est)g(bien)g(une)g(fonction)g
(de)g(la)g(for)q(me)22 b Fz(f)i FI(\()r Fz(x)5 b FI(\))14
b FE(\306)i Fz(a)6 b(x)h FE(\305)r Fz(b)q FI(,)14 b(avec)i
Fz(a)i FE(\306)c FI(0,)8 b(5)14 b(et)g Fz(b)20 b FE(\306)14
b FI(30\).)g(S)o(a)-38 3789 y(courbe)j(r)o(epr\351sentative)i(est)f
(donc)f(une)h(droite)o(,)f(que)h(l)o('on)g(tr)o(ace)f(\340)g(par)q(tir)
h(d)n('un)f(tableau)h(de)f(valeurs)h(avec)g(deux)f(valeurs)9
b(;)18 b(par)g(exemple)h(:)p 0 TeXcolorgray 0 TeXcolorgray
654 3908 666 4 v 654 4008 4 100 v 762 3978 a Fz(x)p 908
4008 V 180 w FI(0)p 1092 4008 V 124 w(120)p 1317 4008
V 654 4011 666 4 v 654 4111 4 100 v 715 4081 a Fz(f)g
FI(\()r Fz(x)5 b FI(\))p 908 4111 V 103 w(30)p 1092 4111
V 124 w(90)p 1317 4111 V 654 4114 666 4 v 608 4308 a
Fz(f)19 b FI(\(0\))14 b FE(\306)g FI(0,)8 b(5)i FE(\243)g
FI(0)g FE(\305)g FI(30)18 b FE(\306)c FI(30)527 4433
y Fz(f)19 b FI(\(120\))c FE(\306)f FI(0,)8 b(5)i FE(\243)g
FI(120)g FE(\305)g FI(30)19 b FE(\306)14 b FI(90)p 0
TeXcolorgray 2050 4480 9 576 v 0 TeXcolorgray 2095 3988
a(On)21 b(place)h(les)g(points)h(de)e(coor)o(donn\351es)g(\(0;)8
b(30\))23 b(et)f(\(120;)8 b(90\),)23 b(puis)2095 4087
y(on)18 b(tr)o(ace)g(la)g(droite)g(\226)g(en)g(r\351alit\351)h(un)f
(segment,)i(puisqu)n('on)g(va)d(de)h(0)2095 4187 y(\340)f(200)i(en)f
(abscisses)o(.)-38 4726 y FJ(R)o(emarque)e(:)j FI(On)h(a)f(choisi)h
(les)g(valeurs)h(0)f(et)f(120,)i(mais)g(on)e(peut)i(pr)o(endr)o(e)e(n)
-6 b('impor)q(te)20 b(quelles)h(valeurs)g(\226)e(l)o('avantage)i(de)e
(0,)h(c)n('est)g(que)g(le)-38 4826 y(calcul)e(est)g(facile)9
b(;)18 b(et)f(l)o('avantage)i(de)e(120,)i(c)n('est)f(qu)n('on)g(a)f
(d\351j\340)g(fait)h(le)g(calcul)g(dans)f(la)h(question)h(1.)p
0 TeXcolorgray 1909 5895 a(24)p 0 TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.25) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1331 1478
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.20155 a add def
/d 0.0 a add neg def /h 207.61046 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 1478 a 1482 1378 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 15 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 156.01645 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22714
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 195.5174 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22272
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 156.01645  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 156.01645  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 195.5174  def /dT 932100 abs 65536 div viceversa
{ neg } if def /DT 20. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.71114  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.71114  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 195.5174  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 195.5174  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.01645  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.42271  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1467 1475 a FG(0)71
b(20)56 b(40)g(60)g(80)41 b(100)25 b(120)g(140)g(160)g(180)1393
1397 y(0)1362 1279 y(10)1362 1161 y(20)1362 1042 y(30)1362
924 y(40)1362 806 y(50)1362 688 y(60)1362 570 y(70)1362
452 y(80)1362 334 y(90)1331 216 y(100)1331 98 y(110)1331
-21 y(120)1482 1378 y
tx@Dict begin { 92.44766 11.51305 } PutCoor PutBegin  end
 1482 1378 a 57 x FI(km)17 b(par)o(cour)q(us)1482
1378 y
tx@Dict begin  PutEnd  end
 1482 1378 a 1482 1378 a
tx@Dict begin { 4.1484 180.28 } PutCoor PutBegin  end
 1482 1378 a 57 x FI(montant)h(de)f(la)
1482 1534 y(note)h(de)f(fr)o(ais)1482 1378 y
tx@Dict begin  PutEnd  end
 1482 1378
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.22717 184.95285
0.0 42.68143   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 106.70357 0.0
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 0.0 64.00223
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.68143   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.3363 128.04428   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2777 1478 a
currentpoint initclip moveto
 2777 1478 a -246
1522 a
SDict begin H.S end
 -246 1522 a -246 1522 a
SDict begin 12 H.A end
 -246 1522 a -246 1522
a
SDict begin [/View [/XYZ H.V]/Dest (Item.101) cvn /DEST pdfmark end
 -246 1522 a 0 TeXcolorgray -141 1636 a FI(4.)p 0 TeXcolorgray
43 w(Le)j(vo)n(yageur)e(de)h(commer)o(ce)g(a)g(une)h(note)g(de)f(fr)o
(ais)g(de)g(75)h FC(N)p FI(.)f(P)n(our)g(d\351ter)q(miner)g(le)h(nombr)
o(e)f(de)g(km)g(par)o(cour)q(us)g(dans)g(la)g(jour)q(n\351e)o(,)h(il)f
(y)g(a)-38 1736 y(deux)e(m\351thodes)i(:)p 0 TeXcolorgray
7 1850 a(\225)p 0 TeXcolorgray 42 w FJ(G)o(raphiquement)q(.)d
FI(On)i(voit)f(qu)n('il)i(a)e(par)o(cour)q(u)f(90)j(km)e
(\(pointill\351s)j(rouges\))p 0 0 1 TeXcolorrgb 2390
1850 a
SDict begin H.S end
 2390 1850 a -30 x FG(3)2425 1850 y
SDict begin 12 H.L end
 2425 1850 a
2425 1850 a
SDict begin [/Subtype /Link/Dest (Hfootnote.3) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2425 1850 a 0 TeXcolorgray FI(.)p 0 TeXcolorgray
7 1950 a(\225)p 0 TeXcolorgray 42 w FJ(P)m(ar)d(le)h(calcul.)h
FI(On)h(r)o(etir)o(e)f(les)i(fr)o(ais)g(\002xes)f(:)g(90)11
b FE(\241)g FI(30)20 b FE(\306)d FI(60)k FC(N)e FI(d)n('indemnit\351)j
(kilom\351tr)q(ique)o(.)g(P)o(uis)o(,)f(comme)g(chaque)g(km)g(compte)g
(pour)80 2049 y(0,)8 b(5)18 b FC(N)p FI(,)f(on)h(divise)g(:)g(45)10
b FE(\245)g FI(0,)e(5)17 b FE(\306)d FI(45)c FE(\243)g
FI(2)16 b FE(\306)e FI(90)k(km)q(.)p 0 0 1 TeXcolorrgb
1536 2049 a
SDict begin H.S end
 1536 2049 a -30 x FG(4)1571 2049 y
SDict begin 12 H.L end
 1571 2049
a 1571 2049 a
SDict begin [/Subtype /Link/Dest (Hfootnote.4) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1571 2049 a 0 TeXcolorgray -246 2126 a
SDict begin H.S end

-246 2126 a -246 2126 a
SDict begin 12 H.A end
 -246 2126 a -246 2126 a
SDict begin [/View [/XYZ H.V]/Dest (exo.49) cvn /DEST pdfmark end
 -246
2126 a -246 2145 a
SDict begin H.S end
 -246 2145 a -246 2145 a
SDict begin 12 H.A end
 -246 2145
a -246 2145 a
SDict begin [/View [/XYZ H.V]/Dest (Item.102) cvn /DEST pdfmark end
 -246 2145 a 0 TeXcolorgray 103 x FJ(Ex)o(er)o(cice)c(49)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Lorsqu)n('on)k
(t\351l\351charge)g(50)g(M)n(o)m(,)f(on)h(paye)f(3)g
FC(N)p FI(.)p 0 TeXcolorgray 7 2348 a(\225)p 0 TeXcolorgray
42 w(Lorsqu)n('on)i(t\351l\351charge)f(150)h(M)n(o)m(,)e(les)i(100)g
(pr)o(emiers)f(co\373tent)h(3)f FC(N)9 b FI(;)17 b(et)h(les)h(50)f
(suivants)h(co\373tent)g(50)10 b FE(\243)g FI(0,)e(04)18
b FE(\306)d FI(2)j FC(N)p FI(.)f(On)h(paye)f(donc)g(au)80
2448 y(total)h(3)10 b FE(\305)g FI(2)15 b FE(\306)f FI(5)k
FC(N)p FI(.)-246 2463 y
SDict begin H.S end
 -246 2463 a -246 2463 a
SDict begin 12 H.A end
 -246
2463 a -246 2463 a
SDict begin [/View [/XYZ H.V]/Dest (Item.103) cvn /DEST pdfmark end
 -246 2463 a 0 TeXcolorgray -141 2576
a FI(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(le)f(tableau)g(de)f
(valeurs)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1241 2689
1626 4 v 1241 2788 4 100 v 1294 2758 a(N)n(ombr)o(e)e(de)i(M)n(o)p
1862 2788 V 102 w(0)p 2006 2788 V 104 w(50)p 2190 2788
V 104 w(100)p 2414 2788 V 104 w(150)p 2639 2788 V 105
w(200)p 2863 2788 V 1241 2792 1626 4 v 1241 2891 4 100
v 1294 2861 a(P)o(r)q(ix)f(\340)g(payer)p 1862 2891 V
218 w(3)p 2006 2891 V 124 w(3)p 2190 2891 V 164 w(3)p
2414 2891 V 185 w(5)p 2639 2891 V 184 w(7)p 2863 2891
V 1241 2894 1626 4 v -38 3018 a FJ(R)o(emarque)d(:)j
FI(jusqu)n('\340)i(100)g(M)n(o)m(,)e(on)g(paye)g(3)h
FC(N)p FI(.)f(Ensuite)o(,)i(chaque)f(nouvelle)h(tr)o(anche)f(de)f(50)h
(M)n(o)f(est)h(factur\351e)g(2)g FC(N)p FI(.)-246 3052
y
SDict begin H.S end
 -246 3052 a -246 3052 a
SDict begin 12 H.A end
 -246 3052 a -246 3052 a
SDict begin [/View [/XYZ H.V]/Dest (Item.104) cvn /DEST pdfmark end
 -246
3052 a 0 TeXcolorgray -141 3147 a FI(3.)p 0 TeXcolorgray
43 w(On)g(constr)q(uit)h(la)f(courbe)g(qui)h(donne)f(le)h(pr)q(ix)f
(pay\351)g(en)h(fonction)g(du)f(nombr)o(e)g(de)g(M)n(o)g
(t\351l\351charg\351s)o(.)h(Elle)g(est)g(constante)g(sur)g(l)o('inter)q
(valle)-38 3248 y([)-13 3247 y(0;)8 b(100)175 3248 y(])211
3247 y(,)17 b(puis)i(af\002ne)e(sur)h(l)o('inter)q(valle)1140
3248 y([)1165 3247 y(100;)8 b(200)1433 3248 y(])1470
3247 y(.)17 b(Il)g(faut)h(donc)f(utiliser)i(une)f(r\350gle)f(pour)h
(effectuer)h(le)f(tr)o(ac\351)p 0 0 1 TeXcolorrgb 3282
3247 a
SDict begin H.S end
 3282 3247 a -30 x FG(5)3317 3247 y
SDict begin 12 H.L end
 3317 3247 a
3317 3247 a
SDict begin [/Subtype /Link/Dest (Hfootnote.5) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3317 3247 a 0 TeXcolorgray FI(.)p 0 TeXcolorgray
0 TeXcolorgray 1212 4805 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 202.76924 a add def
/d 0.0 a add neg def /h 177.37851 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1212 4805 a 1381 4660 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 182.46393 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 10 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.95384 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33865
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 182.46393  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 182.46393  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.95384  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.42677  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.95384  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.95384  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 182.46393  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1366 4757 a FG(0)130 b(50)100 b(100)84 b(150)g(200)g(250)g(300)h(350)
1292 4680 y(0)1292 4503 y(1)1292 4325 y(2)1292 4148 y(3)1292
3971 y(4)1292 3794 y(5)1292 3617 y(6)1381 4660 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 42.6773 64.01866
0.0 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35461 149.37688
42.6773 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 98.16206 0.0
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 0.0 59.74823
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1381 4660 a
tx@Dict begin { 87.53294 11.3057 } PutCoor PutBegin  end
 1381 4660 a 57 x
FI(N)n(ombr)o(e)16 b(de)h(M)n(o)1381 4660 y
tx@Dict begin  PutEnd  end
 1381 4660
a 1381 4660 a
tx@Dict begin { 1.34561 146.62965 } PutCoor PutBegin  end
 1381 4660 a 54 x FI(P)o(r)q(ix)1381 4660
y
tx@Dict begin  PutEnd  end
 1381 4660 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33865 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6773 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01596 106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35461 149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2895 4805 a
currentpoint initclip moveto
 2895
4805 a -246 4849 a
SDict begin H.S end
 -246 4849 a -246 4849 a
SDict begin 12 H.A end
 -246 4849
a -246 4849 a
SDict begin [/View [/XYZ H.V]/Dest (Item.105) cvn /DEST pdfmark end
 -246 4849 a 0 TeXcolorgray -141 4963 a
FI(4.)p 0 TeXcolorgray 43 w(Il)g(y)f(a)i(deux)f(m\351thodes)i(:)p
0 TeXcolorgray 7 5077 a(\225)p 0 TeXcolorgray 42 w FJ(G)o(raphiquement)
q(.)d FI(On)i(voit)f(qu)n('on)h(a)f(t\351l\351charg\351)h(140)h(M)n(o)e
(\(pointill\351s)i(rouges\).)p 0 TeXcolorgray 7 5177
a(\225)p 0 TeXcolorgray 42 w FJ(P)m(ar)c(le)h(calcul.)g
FI(J'ai)h(pay\351)h(4,60)i FC(N)p FI(,)d(donc)g(3)10
b FE(\305)g FI(1,)e(60)21 b FC(N)p FI(.)c(J'ai)h(donc)f
(t\351l\351charg\351)h(1,)8 b(60)i FE(\245)g FI(0,)e(04)19
b FE(\306)c FI(40)j(M)n(o)g(au-del\340)g(du)f(100)3579
5153 y Fe(e)3606 5177 y FI(.)h(A)n(utr)o(ement)g(dit,)80
5277 y(j)o('ai)f(t\351l\351charg\351)h(140)h(M)n(o)m(.)p
0 TeXcolorgray -246 5348 1757 4 v -154 5425 a Ft(3)q(.)p
0 TeXcolorgray -76 5425 a
SDict begin H.S end
 -76 5425 a -76 5425 a
SDict begin H.R end
 -76 5425
a -76 5425 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.3) cvn /DEST pdfmark
end
 -76 5425 a 0 TeXcolorgray Ft(La)14 b(m\351thode)h(gr)o
(aphique)f(est)g(simple)o(,)g(mais)f(la)h(r\351ponse)g(pourr)o(ait)g
(\352tr)o(e)g(impr\351cise)o(.)-154 5504 y(4)q(.)p 0
TeXcolorgray -76 5504 a
SDict begin H.S end
 -76 5504 a -76 5504 a
SDict begin H.R end
 -76 5504
a -76 5504 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.4) cvn /DEST pdfmark
end
 -76 5504 a 0 TeXcolorgray Ft(On)f(peut)h(aussi)f
(r\351soudr)o(e)h(l)o('\351quation)g(0,)6 b(5)q Fq(x)12
b Fd(\305)c Ft(30)14 b Fd(\306)e Ft(75.)-154 5583 y(5)q(.)p
0 TeXcolorgray -76 5583 a
SDict begin H.S end
 -76 5583 a -76 5583 a
SDict begin H.R end
 -76 5583
a -76 5583 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.5) cvn /DEST pdfmark
end
 -76 5583 a 0 TeXcolorgray Ft(On)h(parle)h(de)g(fonction)g
(\253)d(af\002ne)k(par)e(mor)o(ceaux)e(\273.)p 0 TeXcolorgray
0 TeXcolorgray 1909 5895 a FI(25)p 0 TeXcolorgray eop
end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.26) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.50) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(50)p 0 TeXcolorgray 41 w FI(Les)22 b(gar)o(es)f(de)g(C)o(alais)h(et)g
(de)f(Boulogne-sur)o(-M)n(er)h(sont)g(distantes)g(de)g(30)g(km.)g(U)m
(n)g(tr)o(ain)f(par)q(t)h(\340)f(12)h(h)f(de)h(Boulogne-sur)o(-M)n(er)f
(en)-246 -63 y(dir)o(ection)g(de)g(C)o(alais)h(et)f(roule)g(\340)g(la)g
(vitesse)i(de)e(40)h(km/h.)g(U)m(n)f(tr)o(ain)h(par)q(t)e(de)h(C)o
(alais)h(\340)f(12)h(h)f(15)h(et)f(fait)h(route)f(en)g(sens)h(inverse)g
(\340)f(la)g(vitesse)i(de)-246 37 y(60)c(km/h.)-246 67
y
SDict begin H.S end
 -246 67 a -246 67 a
SDict begin 12 H.A end
 -246 67 a -246 67 a
SDict begin [/View [/XYZ H.V]/Dest (Item.106) cvn /DEST pdfmark end
 -246 67 a 0
TeXcolorgray -141 180 a FI(1.)p 0 TeXcolorgray 43 w(Le)h(tr)o(ain)g
(qui)h(par)q(t)e(\340)h(12)g(h)g(de)g(Boulogne-sur)o(-M)n(er)g(roule)g
(\340)f(la)h(vitesse)i(de)e(40)g(km/h,)h(donc)e(il)i(par)o(cour)q(t)e
(40)h(km)g(en)h(60)f(min.)h(P)n(our)e(savoir)-38 280
y(quand)e(il)h(arr)q(ive)f(\340)g(C)o(alais)o(,)i(on)e(compl\350te)i
(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1528 367 1051 4 v 1528 466 4 100 v 1605
437 a(temps)g(\(en)e(min\))p 2208 466 V 127 w(60)p 2392
466 V 134 w(?)p 2576 466 V 1528 470 1051 4 v 1528 569
4 100 v 1582 540 a(distance)g(\(en)h(km\))p 2208 569
V 103 w(40)p 2392 569 V 104 w(30)p 2576 569 V 1528 573
1051 4 v -38 711 a(Le)g(tr)o(ain)g(mettr)o(a)502 678
y FG(60)p FF(\243)p FG(30)p 502 691 165 5 v 554 740 a(40)691
711 y FE(\306)770 678 y FG(1)6 b(800)p 770 691 130 5
v 804 740 a(40)924 711 y FE(\306)14 b FI(45)k(min)g(pour)g(arr)q(iver)e
(\340)h(C)o(alais)o(,)i(donc)e(il)h(y)f(ser)o(a)h(\340)f(12)h(h)f(45.)
-38 875 y(P)n(our)h(le)i(tr)o(ain)f(qui)h(par)q(t)f(de)f(C)o(alais)o(,)
j(le)e(calcul)h(est)g(plus)g(facile)g(:)f(il)g(roule)g(\340)g(60)h
(km/h,)g(donc)f(par)o(cour)q(t)f(60)i(km)f(en)h(60)f(min)9
b(;)20 b(et)f(ainsi)h(30)g(km)-38 975 y(en)e(30)g(min.)g(C)o(omme)h(il)
f(par)q(t)f(\340)g(12)h(h)g(15,)g(il)g(arr)q(ive)f(\340)g(12)h(h)g(45)g
(lui)g(aussi.)-38 1139 y(On)f(peut)i(ainsi)f(r)o(epr\351senter)g(la)f
(mar)o(che)h(des)f(deux)g(tr)o(ains)i(:)p 0 TeXcolorgray
0 TeXcolorgray 769 2544 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 309.42352 a add def
/d 0.0 a add neg def /h 159.1932 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 769 2544 a 1389 2374 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 213.39554 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 128.03732 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 234.73509  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 234.73509  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 138.70709  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 138.70709  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 138.70709  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 234.73509  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1389 2374 a
tx@Dict begin { -8.53569 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h)1389 2374 y
tx@Dict begin  PutEnd  end
 1389
2374 a 1389 2374 a
tx@Dict begin { 29.87524 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h10)1389 2374
y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 72.55435 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h20)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 115.23346 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h30)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 157.91257 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h40)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 200.59167 -7.25536 } PutCoor PutBegin  end
 1389 2374 a 40 x Fc(12h50)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -6.40192 3.84096 } PutCoor PutBegin  end
 1389 2374 a 36 x Fc(0)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 45.23975 } PutCoor PutBegin  end
 1389 2374 a 36 x Fc(10)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 88.34573 } PutCoor PutBegin  end
 1389 2374 a 36 x Fc(20)1389
2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -44.81319 8.53569 } PutCoor PutBegin  end
 1389 2374 a 1418 2442
a Fc(Boulogne)p 1389 2378 289 4 v 1389 2482 4 107 v 1674
2482 V 1389 2484 289 4 v 1389 2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a 1389
2374 a
tx@Dict begin { -44.81319 136.57301 } PutCoor PutBegin  end
 1389 2374 a 1418 2442 a Fc(C)o(alais)p 1389 2378
203 4 v 1389 2470 4 95 v 1588 2470 V 1389 2472 203 4
v 1389 2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { -12.80385 131.87828 } PutCoor PutBegin  end
 1389 2374 a 36
x Fc(30)1389 2374 y
tx@Dict begin  PutEnd  end
 1389 2374 a 1389 2374 a
tx@Dict begin { 96.02798 -7.25536 } PutCoor PutBegin  end
 1389 2374
a 0 1 0 TeXcolorrgb 40 x Fc(12h27)p 0 TeXcolorgray 1389
2374 a
tx@Dict begin  PutEnd  end
 1389 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 0.0
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 0.0 64.01866
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.23346 0.0 115.23346
76.82251   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
3338 2544 a
currentpoint initclip moveto
 3338 2544 a -246 2588 a
SDict begin H.S end
 -246 2588 a -246
2588 a
SDict begin 12 H.A end
 -246 2588 a -246 2588 a
SDict begin [/View [/XYZ H.V]/Dest (Item.107) cvn /DEST pdfmark end
 -246 2588 a 0 TeXcolorgray
-140 2702 a FI(2.)p 0 TeXcolorgray 42 w(N)n(ous)25 b(allons)i(d\351ter)
q(miner)f(l)o('heur)o(e)h(de)e(croisement)h(des)g(tr)o(ains)g(par)g(le)
g(calcul.)g(Gr)o(aphiquement,)i(cela)e(corr)o(espond)f(\340)h(l)o
('abscisse)h(du)-38 2802 y(point)18 b(d)n('intersection)i(des)d
(courbes)o(.)-38 2966 y(\300)24 b(12h15,)k(le)e(tr)o(ain)f(qui)h(par)q
(t)f(de)g(Boulogne-sur)o(-M)n(er)g(a)g(par)o(cour)q(u)f(10)i(km)g
(\(facile)f(\340)g(v\351r)q(i\002er\),)g(il)h(est)f(donc)g(\340)g(20)h
(km)g(de)f(C)o(alais)o(.)g(C'est)-38 3066 y(l)o('heur)o(e)19
b(\340)e(laquelle)i(le)f(deuxi\350me)h(tr)o(ain)f(par)q(t.)g(C)o(omme)h
(l)o('un)f(roule)g(\340)f(40)i(km/h)f(et)g(l)o('autr)o(e)g(\340)f(60)i
(km/h,)f(tout)h(se)f(passe)g(comme)h(si)f(un)f(seul)-38
3165 y(tr)o(ain)h(devait)f(par)o(cour)q(ir)g(20)h(km)f(\340)h(la)f
(vitesse)i(de)e(40)10 b FE(\305)g FI(60)17 b FE(\306)d
FI(100)19 b(km/h.)f(On)f(compl\350te)j(un)d(tableau)h(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1508
3252 1092 4 v 1508 3352 4 100 v 1585 3322 a(temps)f(\(en)g(min\))p
2188 3352 V 147 w(60)p 2412 3352 V 154 w(?)p 2596 3352
V 1508 3355 1092 4 v 1508 3455 4 100 v 1561 3425 a(distance)g(\(en)g
(km\))p 2188 3455 V 103 w(100)p 2412 3455 V 104 w(20)p
2596 3455 V 1508 3458 1092 4 v -28 3564 a FG(60)p FF(\243)p
FG(20)p -28 3577 165 5 v 8 3625 a(100)161 3597 y FE(\306)240
3564 y FG(1)6 b(200)p 240 3577 130 5 v 259 3625 a(100)394
3597 y FE(\306)14 b FI(12,)k(donc)f(il)h(faudr)o(ait)g(12)g(min)g(\340)
f(ce)h(tr)o(ain)f(pour)h(par)o(cour)q(ir)e(20)j(km.)f(Ainsi,)g(les)g
(deux)f(tr)o(ains)h(se)g(croiseront-ils)g(\340)1445 3779
y(12)h(h)e(15)h(min)11 b FE(\305)f FI(12)19 b(min)c FE(\306)f
FI(12)k(h)g(27)g(min)q(.)-246 3878 y
SDict begin H.S end
 -246 3878 a -246
3878 a
SDict begin 12 H.A end
 -246 3878 a -246 3878 a
SDict begin [/View [/XYZ H.V]/Dest (exo.51) cvn /DEST pdfmark end
 -246 3878 a 0 TeXcolorgray
101 x FJ(Ex)o(er)o(cice)c(51)p 0 TeXcolorgray 41 w FI(J)n(e)k(me)i
(contenter)o(ai)g(du)e(gr)o(aphique)o(,)i(donc)e(je)h(ne)g(fer)o(ai)g
(pas)g(les)h(calculs)f(pour)g(avoir)g(les)g(heur)o(es)g(exactes)h(des)e
(deux)h(r)o(encontr)o(es)f(\226)-246 4078 y(elles)h(s)m('obtiennent)g
(avec)f(les)g(m\352mes)h(techniques)g(que)f(dans)f(l)o('exer)o(cice)i
(pr\351c\351dent.)p 0 TeXcolorgray 0 TeXcolorgray 829
5618 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 269.94522 a add def
/d 0.0 a add neg def /h 172.42363 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 829 5618 a 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 240.06998 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 156.20569 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 240.06998  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 240.06998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.20569  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.20569
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.06998
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 156.20569  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 156.20569  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 240.06998  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.20569
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 240.06998
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { -4.26784 -3.20079 } PutCoor PutBegin  end
 1077
5484 a 56 x FI(9h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { 56.76329 -3.20079 } PutCoor PutBegin  end

1077 5484 a 56 x FI(10h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077
5484 a
tx@Dict begin { 122.06227 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 56 x FI(11h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077 5484
a 1077 5484 a
tx@Dict begin { 185.22716 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 56 x FI(12h)1077 5484 y
tx@Dict begin  PutEnd  end
 1077
5484 a 1077 5484 a
tx@Dict begin { -8.53569 4.26784 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(0)1077 5484 y
tx@Dict begin  PutEnd  end

1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 25.60739 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(10)1077 5484
y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 46.94695 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(20)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 68.2865 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(30)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 89.62605 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(40)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 110.9656 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(50)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -12.80385 132.30516 } PutCoor PutBegin  end
 1077 5484 a 51 x FI(60)1077
5484 y
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 96.02798 64.01866
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 138.70709 64.01866
96.02798 64.01866   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 234.73509 128.03732
138.70709 64.01866   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { 7.25536 35.42374 } PutCoor PutBegin  end
 1077 5484 a 0.30196 0.30196 1
TeXcolorrgb 56 x FI(C)n(ycliste)p 0 TeXcolorgray 1077
5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 42.67911 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 0.0 42.67911
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03732 0.0 106.69777
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 128.03732
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 80.02332 0.0 80.02332
53.34888   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1077 5484 a
tx@Dict begin { 72.12779 -3.20079 } PutCoor PutBegin  end
 1077
5484 a 0 1 0 TeXcolorrgb 56 x FI(10h15)p 0 TeXcolorgray
1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71643 0.0 170.71643
85.35822   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1077 5484 a
tx@Dict begin { 157.91257 -3.20079 } PutCoor PutBegin  end
 1077 5484 a 0 1 0 TeXcolorrgb 56 x FI(11h40)p
0 TeXcolorgray 1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { 6.40192 139.98741 } PutCoor PutBegin  end
 1077
5484 a 1 0 0 TeXcolorrgb 56 x FI(A)n(utomobile)p 0 TeXcolorgray
1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077 5484 a
tx@Dict begin { -27.74147 8.53569 } PutCoor PutBegin  end
 1077 5484 a 1106
5566 a FI(A)p 1077 5487 105 4 v 1077 5592 4 108 v 1179
5592 V 1077 5594 105 4 v 1077 5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a 1077
5484 a
tx@Dict begin { -27.74147 136.57301 } PutCoor PutBegin  end
 1077 5484 a 1106 5566 a FI(B)p 1077 5487 106 4
v 1077 5592 4 108 v 1180 5592 V 1077 5594 106 4 v 1077
5484 a
tx@Dict begin  PutEnd  end
 1077 5484 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 80.02332
53.34888   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 170.71643
85.35822   false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3071 5618 a
currentpoint initclip moveto
 3071
5618 a -246 5701 a
SDict begin H.S end
 -246 5701 a -246 5701 a
SDict begin 12 H.A end
 -246 5701
a -246 5701 a
SDict begin [/View [/XYZ H.V]/Dest (exo.52) cvn /DEST pdfmark end
 -246 5701 a 0 TeXcolorgray 1909 5895 a
FI(26)p 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.27) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FJ(Ex)o(er)o(cice)14
b(52)p 0 TeXcolorgray 41 w FI(Le)i(taux)f(d)n('anticorps)h(\(en)f
(g/l\))g(pr\351sents)h(dans)f(le)h(sang)f(d)n('un)g(nourr)q(isson)h(en)
f(fonction)h(de)f(l)o('\342ge)g(\(en)g(mois\),)h(depuis)g(la)f
(naissance)-246 -63 y(jusqu)n('\340)k(l)o('\342ge)f(de)f(12)h(mois)o(,)
h(est)f(donn\351)g(par)f(la)g(for)q(mule)i(suivante)f(:)1542
96 y Fz(f)h FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(0,)8
b(1)r Fz(x)1922 62 y FG(2)1969 96 y FE(\241)i FI(1,)e(6)r
Fz(x)15 b FE(\305)10 b FI(12.)-246 164 y
SDict begin H.S end
 -246 164 a -246
164 a
SDict begin 12 H.A end
 -246 164 a -246 164 a
SDict begin [/View [/XYZ H.V]/Dest (Item.108) cvn /DEST pdfmark end
 -246 164 a 0 TeXcolorgray
-141 256 a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b Fz(f)36 b FI(sur)1346 257 y([)1372
256 y(0;)8 b(12)1520 257 y(])1564 256 y(avec)17 b(un)h(pas)g(de)f(2)32
b(:)p -38 317 4184 4 v -38 417 4 100 v 69 387 a Fz(x)p
216 417 V 370 w FI(0)p 777 417 V 521 w(2)p 1338 417 V
520 w(4)p 1899 417 V 521 w(6)p 2459 417 V 521 w(8)p 3020
417 V 501 w(10)p 3581 417 V 481 w(12)p 4142 417 V -38
420 4184 4 v -38 520 4 100 v 23 490 a Fz(f)19 b FI(\()r
Fz(x)5 b FI(\))p 216 520 V 291 w(12)p 777 520 V 467 w(9,)j(2)p
1338 520 V 453 w(7,)g(2)p 1899 520 V 487 w(6)p 2459 520
V 487 w(5,)g(6)p 3020 520 V 487 w(6)p 3581 520 V 487
w(7,)g(2)p 4142 520 V -38 523 4184 4 v -38 619 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)p 0 TeXcolorgray 7 714 a(\225)p
0 TeXcolorgray 50 w Fz(f)h FI(\(0\))14 b FE(\306)g FI(0,)8
b(1)i FE(\243)g FI(0)531 684 y FG(2)578 714 y FE(\241)g
FI(1,)e(6)i FE(\243)g FI(0)g FE(\305)g FI(12)18 b FE(\306)c
FI(12.)p 0 TeXcolorgray 7 814 a(\225)p 0 TeXcolorgray
50 w Fz(f)19 b FI(\(12\))14 b FE(\306)h FI(0,)8 b(1)i
FE(\243)g FI(12)612 784 y FG(2)659 814 y FE(\241)g FI(1,)e(6)i
FE(\243)g FI(12)g FE(\305)g FI(12)19 b FE(\306)14 b FI(7,)8
b(2.)-246 843 y
SDict begin H.S end
 -246 843 a -246 843 a
SDict begin 12 H.A end
 -246 843 a -246
843 a
SDict begin [/View [/XYZ H.V]/Dest (Item.109) cvn /DEST pdfmark end
 -246 843 a 0 TeXcolorgray -141 935 a FI(2.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 816 3491 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 298.264 a add def
/d 0.0 a add neg def /h 301.74582 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

816 3491 a 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 260.34248 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 260.34248 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 277.26994  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 277.26994  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 273.3746  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 273.3746  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 273.3746  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 277.26994  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 975 3352 a FG(0)146
b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)131 b(10)115 b(11)g(12)901
3274 y(0)901 3097 y(1)901 2920 y(2)901 2743 y(3)901 2566
y(4)901 2389 y(5)901 2212 y(6)901 2034 y(7)901 1857 y(8)901
1680 y(9)870 1503 y(10)870 1326 y(11)870 1149 y(12)990
3255 y
tx@Dict begin { 209.3771 16.31041 } PutCoor PutBegin  end
 990 3255 a 54 x FI(\342ge)17 b(\(en)g(mois\))990
3255 y
tx@Dict begin  PutEnd  end
 990 3255 a 990 3255 a
tx@Dict begin { 22.52675 272.21411 } PutCoor PutBegin  end
 990 3255 a 58 x FI(T)-8
b(aux)18 b(d)n('anticorps)h(\(en)e(g/)p FB(`)p FI(\))990
3255 y
tx@Dict begin  PutEnd  end
 990 3255 a 990 3255 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 990 3255 a 990 3255 a
tx@Dict begin { 170.71643 119.50162 } PutCoor PutBegin  end
 990
3255 a 990 3255 a
tx@Dict begin ps@rot  RotBegin  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -8. def /x1
4. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/5.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0.30196
0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 990 3255 a
tx@Dict begin RotEnd  end
 990 3255 a 990 3255 a
tx@Dict begin  PutEnd  end
 990 3255
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
234.73509 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 990 3255 a
tx@Dict begin { 154.25069 152.09608 } PutCoor PutBegin  end
 990 3255 a 1 0 0
TeXcolorrgb 78 x Fb(6)25 b(mois)p 0 TeXcolorgray 990
3255 a
tx@Dict begin  PutEnd  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 138.70709 0.0
138.70709   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
990 3255 a
tx@Dict begin { -16.35176 142.81148 } PutCoor PutBegin  end
 990 3255 a 1 0 0 TeXcolorrgb 51 x FI(6,5)p
0 TeXcolorgray 990 3255 a
tx@Dict begin  PutEnd  end
 990 3255 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 256.07465   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.67911 196.32382   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35822 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71643 119.50162   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 213.39554 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07465 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 234.73509 138.70709   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 3292 3491 a
currentpoint initclip moveto
 3292
3491 a -246 3522 a
SDict begin H.S end
 -246 3522 a -246 3522 a
SDict begin 12 H.A end
 -246 3522
a -246 3522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.110) cvn /DEST pdfmark end
 -246 3522 a 0 TeXcolorgray -141 3632 a
FI(3.)p 0 TeXcolorgray 43 w(Le)18 b(taux)g(d)n('anticorps)g(\340)f(la)g
(naissance)i(est)f(de)f(12)h(g/)p FB(`)p FI(.)-246 3662
y
SDict begin H.S end
 -246 3662 a -246 3662 a
SDict begin 12 H.A end
 -246 3662 a -246 3662 a
SDict begin [/View [/XYZ H.V]/Dest (Item.111) cvn /DEST pdfmark end
 -246
3662 a 0 TeXcolorgray -141 3753 a FI(4.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(:)p 0 TeXcolorgray
0 TeXcolorgray 991 3806 a

 991 3806 a 991 3806 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 3806
a
 0 setgray
 991 3806 a 168 w Fz(x)991 3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806
a 117 w Fz(f)1159 3807 y FI(\()1188 3806 y Fz(x)1232
3807 y FI(\))991 3806 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806 a FI(0)991
3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 991 3806 a
 0 setgray
 991 3806 a FI(8)991 3806 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.24191 ] concat

 pgfs


 991 3806
a
 0 setgray
 991 3806 a FI(12)991 3806 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991
3806 a
 0 setgray
 991 3806 a FI(12)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806
a 991 3806 a
 0 setgray
 991 3806 a FI(12)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991
3806 a 991 3806 a
 0 setgray
 991 3806 a FI(5.6)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 3806
a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991 3806 a
 0 setgray
 991 3806 a FI(5.6)991 3806 y


 pgfr

 restore

 restore

 save

0 TeXcolorgray
 81.52844 -42.22433 moveto

 141.85318 -69.58568 lineto

 pgfstr

 save

 [0.91064 -0.41304 0.41304 0.91064 141.85316 -69.58566 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806 a 991
3806 a
 0 setgray
 991 3806 a FI(7.2)991 3806 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 3806 a
 /pgfsc{}def/pgffc{}def
 991 3806
a 991 3806 a
 0 setgray
 991 3806 a FI(7.2)991 3806 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.78467 -70.5778 moveto

 226.89287 -43.79526 lineto

 pgfstr

 save

 [0.91081 0.41269 -0.41269 0.91081 226.89287 -43.79527 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 4658 a FI(Le)g(taux)g(d)n('anticorps)g(est)g
(minimal)h(\340)e(l)o('\342ge)h(de)f(8)h(mois)o(.)-246
4687 y
SDict begin H.S end
 -246 4687 a -246 4687 a
SDict begin 12 H.A end
 -246 4687 a -246 4687
a
SDict begin [/View [/XYZ H.V]/Dest (Item.112) cvn /DEST pdfmark end
 -246 4687 a 0 TeXcolorgray -141 4778 a FI(5.)p 0 TeXcolorgray
43 w(D)o('apr\350s)f(le)h(gr)o(aphique)o(,)g(le)g(taux)g(d)n
('anticorps)g(est)g(inf\351r)q(ieur)g(\340)f(6,5)i(g/)p
FB(`)d FI(pendant)j(6)e(mois)i(\(du)e(5)2845 4755 y Fe(e)2888
4778 y FI(au)g(11)3071 4755 y Fe(e)3115 4778 y FI(mois\).)-246
4857 y
SDict begin H.S end
 -246 4857 a -246 4857 a
SDict begin 12 H.A end
 -246 4857 a -246 4857
a
SDict begin [/View [/XYZ H.V]/Dest (exo.53) cvn /DEST pdfmark end
 -246 4857 a 0 TeXcolorgray 107 x FJ(Ex)o(er)o(cice)d(53)p
0 TeXcolorgray 41 w FI(On)j(consid\350r)o(e)h(la)f(fonction)27
b Fz(f)36 b FI(d\351\002nie)17 b(sur)1513 4965 y([)1538
4964 y FE(\241)p FI(1;)8 b(3)1701 4965 y(])1745 4964
y(par)1709 5123 y Fz(f)19 b FI(\()r Fz(x)5 b FI(\))14
b FE(\306)i Fz(x)1981 5089 y FG(2)2027 5123 y FE(\241)10
b FI(2)r Fz(x)5 b FI(.)-246 5191 y
SDict begin H.S end
 -246 5191 a -246 5191
a
SDict begin 12 H.A end
 -246 5191 a -246 5191 a
SDict begin [/View [/XYZ H.V]/Dest (Item.113) cvn /DEST pdfmark end
 -246 5191 a 0 TeXcolorgray
-141 5283 a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b Fz(f)36 b FI(sur)1346 5284
y([)1372 5283 y FE(\241)p FI(1;)8 b(3)1535 5284 y(])1578
5283 y(avec)18 b(un)f(pas)h(de)f(0,)8 b(5)33 b(:)p -38
5344 4184 4 v -38 5443 4 100 v 69 5413 a Fz(x)p 216 5443
V 280 w FE(\241)p FI(1)p 652 5443 V 307 w FE(\241)p FI(0,)8
b(5)p 1088 5443 V 335 w(0)p 1525 5443 V 362 w(0,)g(5)p
1961 5443 V 362 w(1)p 2397 5443 V 362 w(1,)g(5)p 2833
5443 V 363 w(2)p 3270 5443 V 362 w(2,)g(5)p 3706 5443
V 363 w(3)p 4142 5443 V -38 5447 4184 4 v -38 5546 4
100 v 23 5516 a Fz(f)19 b FI(\()r Fz(x)5 b FI(\))p 216
5546 V 249 w(3)p 652 5546 V 342 w(1,)j(25)p 1088 5546
V 343 w(0)p 1525 5546 V 314 w FE(\241)p FI(0,)g(75)p
1961 5546 V 288 w FE(\241)p FI(1)p 2397 5546 V 287 w
FE(\241)p FI(0,)g(75)p 2833 5546 V 315 w(0)p 3270 5546
V 342 w(1,)g(25)p 3706 5546 V 343 w(3)p 4142 5546 V -38
5550 4184 4 v -38 5646 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 1909 5895 a(27)p 0 TeXcolorgray eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.28) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FI(\225)p 0 TeXcolorgray
50 w Fz(f)19 b FI(\()p FE(\241)p FI(1\))14 b FE(\306)g
FI(\()p FE(\241)p FI(1\))512 -193 y FG(2)557 -163 y FE(\241)c
FI(2)g FE(\243)g FI(\()p FE(\241)p FI(1\))15 b FE(\306)f
FI(1)c FE(\305)g FI(2)16 b FE(\306)e FI(3.)p 0 TeXcolorgray
7 -63 a(\225)p 0 TeXcolorgray 50 w Fz(f)19 b FI(\(0,)8
b(5\))15 b FE(\306)f FI(0,)8 b(5)485 -93 y FG(2)531 -63
y FE(\241)i FI(2)g FE(\243)g FI(0,)e(5)17 b FE(\306)d
FI(0,)8 b(25)i FE(\241)g FI(1)17 b FE(\306)d(\241)p FI(0,)8
b(75.)-246 -30 y
SDict begin H.S end
 -246 -30 a -246 -30 a
SDict begin 12 H.A end
 -246 -30 a -246
-30 a
SDict begin [/View [/XYZ H.V]/Dest (Item.114) cvn /DEST pdfmark end
 -246 -30 a 0 TeXcolorgray -141 66 a FI(2.)p 0 TeXcolorgray
43 w(C)o(ourbe)17 b(r)o(epr\351sentative)i(de)25 b Fz(f)51
b FI(:)p 0 TeXcolorgray 0 TeXcolorgray 1144 1768 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 219.28143 a add def
/d 0.0 a add neg def /h 194.85048 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1144
1768 a 1684 1315 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -42.67912 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 154.2045 0.0 -65.07693 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 42.67912 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67912 0.0 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 140.31113 0.0 -54.53935   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 42.67912 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 154.2045  0 -65.07693  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -65.07693
 154.2045  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.53935  def /maxTickline 140.31113  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 42.67912
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 140.31113
0.0 -54.53935   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 154.2045
0.0 -65.07693 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 140.31113  0 -54.53935  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.53935
 140.31113  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-65.07693  def /maxTickline 154.2045  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 140.31113
0.0 -54.53935   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 154.2045
0.0 -65.07693 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1669 1412 a FG(0)323
b(1)g(2)g(3)-1469 b FF(\241)p FG(1)1595 1335 y(0)1553
1689 y FF(\241)p FG(1)1595 981 y(1)1595 626 y(2)1684
1315 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1684 1315 a 1684 1315 a
tx@Dict begin { 42.67912 -42.67912 } PutCoor PutBegin  end
 1684 1315 a 1684 1315
a
tx@Dict begin ps@rot  RotBegin  end
 1684 1315 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 42.67912 mul F@pstplot 42.67912 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 42.67912
mul gt { moveto } { dup -1.e30 42.67912 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 42.67912 mul gt { moveto } { dup -1.e30 42.67912 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1684 1315 a
tx@Dict begin RotEnd  end
 1684 1315 a 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -34.14342 95.60146 -34.14342
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 95.60146 -34.14342
95.60146   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1684 1315 a
tx@Dict begin { -42.67912 -12.23273 } PutCoor PutBegin  end
 1684 1315 a 0 1 0 TeXcolorrgb 52 x FE(\241)p
FI(0,)8 b(8)p 0 TeXcolorgray 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a
1684 1315 a
tx@Dict begin { 6.4016 99.19562 } PutCoor PutBegin  end
 1684 1315 a 0 1 0 TeXcolorrgb 52 x FI(2,)g(24)p
0 TeXcolorgray 1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 103.03658 42.67912 -17.67833
42.67912   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -17.67833 42.67912 -17.67833
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 103.03658 42.67912 103.03658
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial 1684 1315 a
tx@Dict begin { 96.02802 -4.48633 } PutCoor PutBegin  end
 1684
1315 a 1 0 0 TeXcolorrgb 52 x FI(2,)g(4)p 0 TeXcolorgray
1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a 1684 1315 a
tx@Dict begin { -32.90022 -5.0822 } PutCoor PutBegin  end
 1684 1315 a 1 0 0
TeXcolorrgb 52 x FE(\241)p FI(0,)g(4)p 0 TeXcolorgray
1684 1315 a
tx@Dict begin  PutEnd  end
 1684 1315 a 2964 1768 a
currentpoint initclip moveto
 2964 1768 a -246
1812 a
SDict begin H.S end
 -246 1812 a -246 1812 a
SDict begin 12 H.A end
 -246 1812 a -246 1812
a
SDict begin [/View [/XYZ H.V]/Dest (Item.115) cvn /DEST pdfmark end
 -246 1812 a 0 TeXcolorgray -141 1926 a FI(3.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g FE(\241)p FI(0,)8 b(8)18
b(par)25 b Fz(f)36 b FI(est)1219 2025 y Fz(f)19 b FI(\()p
FE(\241)p FI(0,)8 b(8\))15 b FE(\306)f FI(\()p FE(\241)p
FI(0,)8 b(8\))1780 1991 y FG(2)1826 2025 y FE(\241)i
FI(2)g FE(\243)g FI(\()p FE(\241)p FI(0,)e(8\))16 b FE(\306)e
FI(0,)8 b(64)i FE(\305)g FI(1,)e(6)18 b FE(\306)c FI(2,)8
b(24.)-38 2174 y(On)17 b(a)g(tr)o(ac\351)h(des)f(pointill\351s)j(ver)q
(ts)d(sur)h(le)g(gr)o(aphique)g(qui)g(con\002r)q(ment)g(ce)f
(r\351sultat)h(\226)g(si)g(on)f(a)g(de)g(bons)h(yeux)9
b(!)-246 2208 y
SDict begin H.S end
 -246 2208 a -246 2208 a
SDict begin 12 H.A end
 -246 2208 a -246
2208 a
SDict begin [/View [/XYZ H.V]/Dest (Item.116) cvn /DEST pdfmark end
 -246 2208 a 0 TeXcolorgray -141 2303 a FI(4.)p
0 TeXcolorgray 43 w(Les)18 b(ant\351c\351dents)h(de)e(1)h(par)25
b Fz(f)36 b FI(sont)18 b FE(\241)p FI(0,)8 b(4)19 b(et)e(2,)8
b(4)19 b(environ)f(\(voir)f(pointill\351s)j(rouges\).)-246
2336 y
SDict begin H.S end
 -246 2336 a -246 2336 a
SDict begin 12 H.A end
 -246 2336 a -246 2336
a
SDict begin [/View [/XYZ H.V]/Dest (Item.117) cvn /DEST pdfmark end
 -246 2336 a 0 TeXcolorgray -141 2431 a FI(5.)p 0 TeXcolorgray
43 w(Les)h(solutions)h(l)o('in\351quation)31 b Fz(f)19
b FI(\()r Fz(x)5 b FI(\))17 b FE(\307)g FI(1)k(sont)g(tous)g(les)g
(nombr)o(es)g(dont)f(l)o('image)i(est)f(str)q(ictement)h(inf\351r)q
(ieur)o(e)e(\340)h FE(\241)p FI(1.)f(C)o(es)i(solutions)g(sont)-38
2531 y(tous)c(les)g(nombr)o(es)g(de)f(l)o('inter)q(valle)1053
2532 y(])1078 2531 y FE(\241)p FI(0,)8 b(4;)g(2;)g(4)1377
2532 y([)1423 2531 y(environ.)-246 2556 y
SDict begin H.S end
 -246 2556 a
-246 2556 a
SDict begin 12 H.A end
 -246 2556 a -246 2556 a
SDict begin [/View [/XYZ H.V]/Dest (Item.118) cvn /DEST pdfmark end
 -246 2556 a 0 TeXcolorgray
-141 2660 a FI(6.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b Fz(f)51 b FI(:)p 0 TeXcolorgray
0 TeXcolorgray 991 2746 a

 991 2746 a 991 2746 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 2746
a
 0 setgray
 991 2746 a 168 w Fz(x)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746
a 117 w Fz(f)1159 2747 y FI(\()1188 2746 y Fz(x)1232
2747 y FI(\))991 2746 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746 a FE(\241)p
FI(1)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 2746 a
 0 setgray
 991 2746 a FI(1)991 2746 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs



991 2746 a
 0 setgray
 991 2746 a FI(3)991 2746 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 2746 a
 /pgfsc{}def/pgffc{}def
 991
2746 a 991 2746 a
 0 setgray
 991 2746 a FI(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 2746
a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FI(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991
2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FE(\241)p FI(1)991
2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991 2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FE(\241)p
FI(1)991 2746 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09744 -41.14923 moveto

 142.20209 -69.78137 lineto

 pgfstr

 save

 [0.9106 -0.41315 0.41315 0.9106 142.20207 -69.78136 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 991 2746
a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FI(3)991 2746 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 991
2746 a
 /pgfsc{}def/pgffc{}def
 991 2746 a 991 2746 a
 0 setgray
 991 2746 a FI(3)991 2746
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 3500 a
SDict begin H.S end
 -246 3500
a -246 3500 a
SDict begin 12 H.A end
 -246 3500 a -246 3500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.119) cvn /DEST pdfmark end
 -246 3500 a 0 TeXcolorgray
-141 3614 a FI(7.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(signe)h(de)25 b Fz(f)51 b FI(:)p 0 TeXcolorgray
0 TeXcolorgray 1073 3701 a

 1073 3701 a 1073 3701 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073
3701 a
 0 setgray
 1073 3701 a 167 w Fz(x)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 3701 a
 0 setgray

1073 3701 a 117 w Fz(f)1241 3702 y FI(\()1270 3701 y
Fz(x)1314 3702 y FI(\))1073 3701 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701
a FE(\241)p FI(1)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70421 -12.9651 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a
FI(0)1073 3701 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FI(2)1073 3701
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FI(3)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 3701
a
 0 setgray
 1073 3701 a FE(\305)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701
a FI(0)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FE(\241)1073
3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 3701 a
 0 setgray
 1073 3701 a FI(0)1073 3701 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073
3701 a
 0 setgray
 1073 3701 a FE(\305)1073 3701 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4265 a
SDict begin H.S end
 -246
4265 a -246 4265 a
SDict begin 12 H.A end
 -246 4265 a -246 4265 a
SDict begin [/View [/XYZ H.V]/Dest (exo.54) cvn /DEST pdfmark end
 -246 4265
a 0 TeXcolorgray 132 x FJ(Ex)o(er)o(cice)14 b(54)p 0
TeXcolorgray 41 w FI(On)j(consid\350r)o(e)h(la)f(fonction)k
Fz(g)27 b FI(d\351\002nie)17 b(sur)1511 4398 y([)1537
4397 y(1;)8 b(4)1645 4398 y(])1689 4397 y(par)1731 4614
y Fz(g)i FI(\()r Fz(x)5 b FI(\))14 b FE(\306)i Fz(x)f
FE(\241)2097 4558 y FI(6)p 2094 4595 47 5 v 2096 4671
a Fz(x)2150 4614 y FI(.)-246 4739 y
SDict begin H.S end
 -246 4739 a -246
4739 a
SDict begin 12 H.A end
 -246 4739 a -246 4739 a
SDict begin [/View [/XYZ H.V]/Dest (Item.120) cvn /DEST pdfmark end
 -246 4739 a 0 TeXcolorgray
-141 4819 a FI(1.)p 0 TeXcolorgray 43 w(On)i(fait)h(un)g(tableau)g(de)f
(valeurs)h(pour)26 b Fz(f)36 b FI(sur)1346 4820 y([)1372
4819 y(1;)8 b(4)1480 4820 y(])1523 4819 y(avec)18 b(un)f(pas)h(de)f(0,)
8 b(5)33 b(:)p -38 4889 4184 4 v -38 4989 4 100 v 69
4959 a Fz(x)p 214 4989 V 368 w FI(1)p 775 4989 V 487
w(1,)8 b(5)p 1337 4989 V 488 w(2)p 1898 4989 V 486 w(2,)g(5)p
2459 4989 V 488 w(3)p 3020 4989 V 487 w(3,)g(5)p 3581
4989 V 487 w(4)p 4142 4989 V -38 4992 4184 4 v -38 5091
4 100 v 17 5062 a Fz(g)i FI(\()r Fz(x)5 b FI(\))p 214
5091 V 284 w FE(\241)p FI(5)p 775 5091 V 431 w FE(\241)p
FI(2,)j(5)p 1337 5091 V 433 w FE(\241)p FI(1)p 1898 5091
V 459 w(0,)g(1)p 2459 5091 V 488 w(1)p 3020 5091 V 466
w(1,)g(79)p 3581 5091 V 434 w(2,)g(5)p 4142 5091 V -38
5095 4184 4 v -38 5199 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 7 5299 a(\225)p 0 TeXcolorgray 44 w Fz(g)10
b FI(\(2\))k FE(\306)g FI(2)c FE(\241)432 5266 y FG(6)p
432 5279 31 5 v 432 5327 a(2)487 5299 y FE(\306)15 b
FI(2)10 b FE(\241)g FI(3)15 b FE(\306)f(\241)p FI(1.)p
0 TeXcolorgray 7 5407 a(\225)p 0 TeXcolorgray 44 w Fz(g)c
FI(\(1,)e(5\))14 b FE(\306)h FI(1,)8 b(5)i FE(\241)593
5375 y FG(6)p 570 5388 77 5 v 570 5436 a(1,5)671 5407
y FE(\306)15 b FI(1,)8 b(5)i FE(\241)g FI(4)16 b FE(\306)e(\241)p
FI(2,)8 b(5.)-38 5546 y FJ(R)o(emarque)14 b(:)e FI(L)-10
b('\351nonc\351)17 b(demande)e(d)n('arrondir)e(\340)i(10)1551
5516 y FF(\241)p FG(2)1643 5546 y FI(pr\350s)h(par)e(ex)o(c\350s)o(.)i
(C)o(ela)f(signi\002e)g(qu)n('il)h(faut)f(donner)g(deux)g(chiffr)o(es)h
(apr\350s)f(la)g(virgule)-38 5646 y(et)j(arrondir)e(par)h(valeur)h
(sup\351r)q(ieur)o(e)g(le)g(deuxi\350me)g(chiffr)o(e)g(apr\350s)g(la)f
(virgule)o(.)h(P)m(ar)f(exemple)k Fz(g)10 b FI(\(3,)e(5\))15
b FE(\306)f FI(1,)8 b(7857)g FE(\242)g(\242)g(\242)18
b(\274)c FI(1,)8 b(79.)p 0 TeXcolorgray 1909 5895 a(28)p
0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.29) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.121) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(C)o(ourbe)17 b(r)o(epr\351sentative)i(de)
g Fz(g)41 b FI(:)p 0 TeXcolorgray 0 TeXcolorgray 1305
2200 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 180.39072 a add def
/d 0.0 a add neg def /h 274.28485 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1305 2200 a 1664 825 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -142.26372 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 137.14243 0.0 -43.24829 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 108.68968 0.0 -165.59517   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 137.14243  0 -43.24829  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -43.24829
 137.14243  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-165.59517  def /maxTickline 108.68968  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 108.68968
0.0 -165.59517   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 137.14243
0.0 -43.24829 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 108.68968  0 -165.59517  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -165.59517
 108.68968  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-43.24829  def /maxTickline 137.14243  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 108.68968
0.0 -165.59517   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 137.14243
0.0 -43.24829 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1649 922 a FG(0)205
b(1)g(2)g(3)g(4)-1232 b FF(\241)p FG(1)1575 845 y(0)1533
1081 y FF(\241)p FG(1)1533 1317 y FF(\241)p FG(2)1533
1553 y FF(\241)p FG(3)1533 1790 y FF(\241)p FG(4)1533
2026 y FF(\241)p FG(5)1575 608 y(1)1575 372 y(2)1575
136 y(3)1664 825 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 4 def /dx
x1 x sub 199 div def /F@pstplot (x-6.0/x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 91.04869 37.69978 0.0
37.69978   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 91.04869 0.0 91.04869
37.69978   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1664 825 a
tx@Dict begin { 88.20367 -14.79555 } PutCoor PutBegin  end
 1664 825 a 0 1 0
TeXcolorrgb 51 x FI(3,)8 b(2)p 0 TeXcolorgray 1664 825
a
tx@Dict begin  PutEnd  end
 1664 825 a 1664 825 a
tx@Dict begin { -28.45274 42.67911 } PutCoor PutBegin  end
 1664 825 a 0 1 0 TeXcolorrgb
51 x FI(1,)g(325)p 0 TeXcolorgray 1664 825 a
tx@Dict begin  PutEnd  end
 1664 825
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 -28.45274 0.0
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 56.90549
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial 2803 2200 a
currentpoint initclip moveto
 2803 2200 a -246
2244 a
SDict begin H.S end
 -246 2244 a -246 2244 a
SDict begin 12 H.A end
 -246 2244 a -246 2244
a
SDict begin [/View [/XYZ H.V]/Dest (Item.122) cvn /DEST pdfmark end
 -246 2244 a 0 TeXcolorgray -141 2358 a FI(3.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g(3,)8 b(2)18 b(par)h Fz(g)27
b FI(est)1375 2493 y Fz(g)10 b FI(\(3,)e(2\))14 b FE(\306)g
FI(3,)8 b(2)i FE(\241)1897 2436 y FI(6)p 1863 2473 110
5 v 1863 2550 a(3,)e(2)1997 2493 y FE(\306)14 b FI(3,)8
b(2)i FE(\241)g FI(1,)e(875)18 b FE(\306)c FI(1,)8 b(325.)-38
2675 y(On)17 b(a)g(tr)o(ac\351)h(des)f(pointill\351s)j(ver)q(ts)d(sur)h
(le)g(gr)o(aphique)g(qui)g(con\002r)q(ment)g(ce)f(r\351sultat.)-246
2709 y
SDict begin H.S end
 -246 2709 a -246 2709 a
SDict begin 12 H.A end
 -246 2709 a -246 2709
a
SDict begin [/View [/XYZ H.V]/Dest (Item.123) cvn /DEST pdfmark end
 -246 2709 a 0 TeXcolorgray -141 2804 a FI(4.)p 0 TeXcolorgray
43 w(L)-10 b('unique)19 b(solution)g(de)f(l)o('\351quation)j
Fz(g)10 b FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g(\241)p
FI(1)k(\(donc)e(l)o('unique)k(ant\351c\351dent)e(de)f
FE(\241)p FI(1)h(par)h Fz(g)10 b FI(\))17 b(est)h(2)f(\(pointill\351s)j
(rouges\).)-246 2838 y
SDict begin H.S end
 -246 2838 a -246 2838 a
SDict begin 12 H.A end
 -246 2838
a -246 2838 a
SDict begin [/View [/XYZ H.V]/Dest (Item.124) cvn /DEST pdfmark end
 -246 2838 a 0 TeXcolorgray -141 2933 a
FI(5.)p 0 TeXcolorgray 43 w(Les)i(solutions)i(l)o('in\351quation)i
Fz(g)10 b FI(\()r Fz(x)5 b FI(\))17 b FE(\270)i(\241)p
FI(1)j(sont)g(tous)g(les)g(nombr)o(es)g(dont)f(l)o('image)i(est)f
(sup\351r)q(ieur)o(e)g(ou)g(\351gale)g(\340)f FE(\241)p
FI(1.)h(C)o(es)g(solutions)i(sont)-38 3033 y(tous)18
b(les)g(nombr)o(es)g(de)f(l)o('inter)q(valle)1053 3034
y([)1078 3033 y(2;)8 b(4)1186 3034 y(])1221 3033 y(.)-246
3058 y
SDict begin H.S end
 -246 3058 a -246 3058 a
SDict begin 12 H.A end
 -246 3058 a -246 3058
a
SDict begin [/View [/XYZ H.V]/Dest (Item.125) cvn /DEST pdfmark end
 -246 3058 a 0 TeXcolorgray -141 3162 a FI(6.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(de)h Fz(g)41
b FI(:)p 0 TeXcolorgray 0 TeXcolorgray 1345 3249 a

 1345
3249 a 1345 3249 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1345 3249 a
 0 setgray
 1345 3249 a 168 w Fz(x)1345
3249 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.7696 ] concat

 pgfs


 1345 3249 a
 0 setgray
 1345 3249 a 112 w Fz(g)1513 3250 y
FI(\()1542 3249 y Fz(x)1586 3250 y FI(\))1345 3249 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 170.08086 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 170.08086 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 170.08086 -85.04042 lineto

 170.08086 0.0 lineto

 closepath

 170.08086 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs



1345 3249 a
 0 setgray
 1345 3249 a FI(1)1345 3249 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 1345 3249 a
 0 setgray

1345 3249 a FI(4)1345 3249 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 63.14587 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 65.13843 -79.01295 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a
1345 3249 a
 0 setgray
 1345 3249 a FE(\241)p FI(5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 15.44226 63.14587 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 65.13843 -79.01295 ] concat

 pgfs


 1345
3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a 1345 3249 a
 0 setgray
 1345 3249 a FE(\241)p
FI(5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -40.4615 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249 a 1345 3249 a
 0 setgray

1345 3249 a FI(2.5)1345 3249 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -40.4615 ] concat

 pgfs


 1345 3249 a
 /pgfsc{}def/pgffc{}def
 1345 3249
a 1345 3249 a
 0 setgray
 1345 3249 a FI(2.5)1345 3249 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 82.39542 -70.74854 moveto

 141.8527 -43.79747 lineto

 pgfstr

 save

 [0.91075 0.41281 -0.41281 0.91075 141.85269 -43.79749 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4003 a
SDict begin H.S end
 -246 4003 a -246 4003 a
SDict begin 12 H.A end
 -246
4003 a -246 4003 a
SDict begin [/View [/XYZ H.V]/Dest (Item.126) cvn /DEST pdfmark end
 -246 4003 a 0 TeXcolorgray -141 4117
a FI(7.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)h
Fz(g)41 b FI(:)p 0 TeXcolorgray 0 TeXcolorgray 1321 4204
a

 1321 4204 a 1321 4204 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a 167
w Fz(x)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.76205 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a 112 w Fz(g)1489
4205 y FI(\()1517 4204 y Fz(x)1561 4205 y FI(\))1321
4204 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 178.5874 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 178.5874 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 178.5874 -59.52911 lineto

 178.5874 0.0 lineto

 closepath

 178.5874 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 47.17615 -12.99 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FI(1)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 98.90782 -12.95016 ] concat

 pgfs


 1321
4204 a
 0 setgray
 1321 4204 a FE(\274)14 b FI(2.4)1321 4204 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1321
4204 a
 0 setgray
 1321 4204 a FI(4)1321 4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -41.11218 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321
4204 a FE(\241)1321 4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FI(0)1321
4204 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -42.24297 ] concat

 pgfs


 1321 4204 a
 0 setgray
 1321 4204 a FE(\305)1321 4204 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246
4768 a
SDict begin H.S end
 -246 4768 a -246 4768 a
SDict begin 12 H.A end
 -246 4768 a -246 4768
a
SDict begin [/View [/XYZ H.V]/Dest (exo.55) cvn /DEST pdfmark end
 -246 4768 a -246 4787 a
SDict begin H.S end
 -246 4787 a -246 4787 a
SDict begin 12 H.A end
 -246
4787 a -246 4787 a
SDict begin [/View [/XYZ H.V]/Dest (Item.127) cvn /DEST pdfmark end
 -246 4787 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)g
(55)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
45 w Fz(x)22 b FI(est)c(une)g(longueur)-5 b(,)19 b(donc)g
Fz(x)h FE(\270)14 b FI(0.)k(P)m(ar)f(ailleurs)o(,)i(la)f(longueur)i
Fz(x)i FI(ne)c(peut)g(pas)g(d\351passer)g(4)g(\(car)k
Fz(A)s(B)g FE(\306)15 b FI(4\).)-38 5016 y(C)o(onclusion)k(:)f(on)f(a)g
(l)o('encadr)o(ement)1897 5115 y(0)d FE(\267)i Fz(x)k
FE(\267)14 b FI(4.)-246 5166 y
SDict begin H.S end
 -246 5166 a -246 5166
a
SDict begin 12 H.A end
 -246 5166 a -246 5166 a
SDict begin [/View [/XYZ H.V]/Dest (Item.128) cvn /DEST pdfmark end
 -246 5166 a 0 TeXcolorgray
-141 5279 a FI(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 48 w Fz(A)s(P)22 b FE(\306)e
Fz(A)s(D)c FE(\241)10 b Fz(D)c(P)23 b FE(\306)14 b FI(4)c
FE(\241)i Fz(x)5 b FI(.)p 0 TeXcolorgray 1909 5895 a(29)p
0 TeXcolorgray eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.30) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FI(\225)p 0 TeXcolorgray
42 w(L)-10 b('air)o(e)17 b(du)h(r)o(ectangle)23 b Fz(A)5
b(M)k(N)g(P)25 b FI(est)968 20 y FD(A)1038 32 y Fu(A)t(M)7
b(N)f(P)1250 20 y FE(\306)20 b Fz(A)5 b(M)18 b FE(\243)e
Fz(A)s(P)1250 145 y FE(\306)g Fz(x)f FE(\243)1440 146
y FI(\()1468 145 y(4)10 b FE(\241)i Fz(x)1629 146 y FI(\))2722
145 y(\(car)22 b Fz(A)s(P)g FE(\306)14 b FI(4)c FE(\241)i
Fz(x)5 b FI(\))1250 269 y FE(\306)16 b Fz(x)f FE(\243)10
b FI(4)g FE(\305)i Fz(x)j FE(\243)10 b FI(\()p FE(\241)r
Fz(x)5 b FI(\))891 b(\(on)17 b(d\351veloppe\))1250 405
y FE(\306)d FI(4)r Fz(x)h FE(\241)d Fz(x)1526 371 y FG(2)1563
405 y FI(.)-246 518 y
SDict begin H.S end
 -246 518 a -246 518 a
SDict begin 12 H.A end
 -246 518
a -246 518 a
SDict begin [/View [/XYZ H.V]/Dest (Item.129) cvn /DEST pdfmark end
 -246 518 a 0 TeXcolorgray -141 603 a FI(3.)p
0 TeXcolorgray 43 w(La)17 b(fonction)27 b Fz(f)36 b FI(est)18
b(d\351\002nie)g(pour)f(0)e FE(\267)h Fz(x)k FE(\267)14
b FI(4)k(par)1813 702 y Fz(f)h FI(\()r Fz(x)5 b FI(\))14
b FE(\306)g FI(4)r Fz(x)h FE(\241)d Fz(x)2246 668 y FG(2)2283
702 y FI(.)-38 866 y(A)n(utr)o(ement)18 b(dit,)26 b Fz(f)18
b FI(\()r Fz(x)5 b FI(\))18 b(donne)f(l)o('air)o(e)h(du)f(r)o(ectangle)
23 b Fz(A)5 b(M)k(N)g(P)26 b FI(pour)18 b(une)g(valeur)f(donn\351e)h
(de)i Fz(x)5 b FI(.)-246 929 y
SDict begin H.S end
 -246 929 a -246 929 a
SDict begin 12 H.A end

-246 929 a -246 929 a
SDict begin [/View [/XYZ H.V]/Dest (Item.130) cvn /DEST pdfmark end
 -246 929 a 0 TeXcolorgray 10 1024
a FI(\(a\))p 0 TeXcolorgray 41 w(T)-8 b(ableau)18 b(de)f(valeurs)h(:)p
145 1060 4002 4 v 145 1160 4 100 v 252 1130 a Fz(x)p
398 1160 V 297 w FI(0)p 814 1160 V 341 w(0,)8 b(5)p 1230
1160 V 343 w(1)p 1646 1160 V 341 w(1,)g(5)p 2062 1160
V 343 w(2)p 2478 1160 V 341 w(2,)g(5)p 2894 1160 V 343
w(3)p 3310 1160 V 341 w(3,)g(5)p 3726 1160 V 343 w(4)p
4142 1160 V 145 1163 4002 4 v 145 1263 4 100 v 206 1233
a Fz(f)19 b FI(\()r Fz(x)5 b FI(\))p 398 1263 V 239 w(0)p
814 1263 V 321 w(1,)j(75)p 1230 1263 V 323 w(3)p 1646
1263 V 321 w(3,)g(75)p 2062 1263 V 323 w(4)p 2478 1263
V 321 w(3,)g(75)p 2894 1263 V 323 w(3)p 3310 1263 V 321
w(1,)g(75)p 3726 1263 V 323 w(0)p 4142 1263 V 145 1266
4002 4 v 145 1396 a(C)o(ourbe)17 b(r)o(epr\351sentative)i(:)p
0 TeXcolorgray 0 TeXcolorgray 1451 2836 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 167.30225 a add def
/d 0.0 a add neg def /h 163.31888 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1451 2836 a
1673 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 140.55661 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 136.57324 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 140.55661  0 -26.74564  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -26.74564
 140.55661  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.74564  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57324
0.0 -26.74564   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 140.55661
0.0 -26.74564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 136.57324  0 -26.74564  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -26.74564
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-26.74564  def /maxTickline 140.55661  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57324
0.0 -26.74564   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 140.55661
0.0 -26.74564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1658 2711 a FG(0)204 b(1)i(2)f(3)g(4)1584
2397 y(1)1584 2161 y(2)1584 1924 y(3)1584 1688 y(4)1673
2614 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1673 2614 a 1673 2614 a
tx@Dict begin { 56.90549 113.81097 } PutCoor PutBegin  end
 1673 2614 a 1673 2614
a
tx@Dict begin ps@rot  RotBegin  end
 1673 2614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2. def /x1 2. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1673 2614 a
tx@Dict begin RotEnd  end
 1673 2614 a 1673 2614 a
tx@Dict begin  PutEnd  end
 1673 2614 a 2840
2836 a
currentpoint initclip moveto
 2840 2836 a -246 2879 a
SDict begin H.S end
 -246 2879 a -246 2879
a
SDict begin 12 H.A end
 -246 2879 a -246 2879 a
SDict begin [/View [/XYZ H.V]/Dest (Item.131) cvn /DEST pdfmark end
 -246 2879 a 0 TeXcolorgray
4 2994 a FI(\(b\))p 0 TeXcolorgray 41 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b Fz(f)50 b FI(:)p 0 TeXcolorgray
0 TeXcolorgray 1082 3081 a

 1082 3081 a 1082 3081 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 1082
3081 a
 0 setgray
 1082 3081 a 168 w Fz(x)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 1082 3081 a
 0 setgray

1082 3081 a 118 w Fz(f)1251 3082 y FI(\()1279 3081 y
Fz(x)1323 3082 y FI(\))1082 3081 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081
a FI(0)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081 a FI(2)1082
3081 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.24191 ] concat

 pgfs


 1082 3081 a
 0 setgray
 1082 3081 a FI(4)1082 3081 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -79.01295 ] concat

 pgfs


 1082
3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082 3081 a FI(0)1082
3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082 3081
a FI(0)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 151.48398 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -40.4615 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081
a
 0 setgray
 1082 3081 a FI(4)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 151.48398 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 153.47653 -40.4615 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081
a 1082 3081 a
 0 setgray
 1082 3081 a FI(4)1082 3081 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09747 -72.23705 moveto

 145.49968 -42.11142 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 145.49968 -42.11142 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082 3081 a
 0 setgray
 1082
3081 a FI(0)1082 3081 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -79.01295 ] concat

 pgfs


 1082 3081 a
 /pgfsc{}def/pgffc{}def
 1082 3081 a 1082
3081 a
 0 setgray
 1082 3081 a FI(0)1082 3081 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 164.1379 -41.12527 moveto

 230.5401 -71.2509 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 230.5401 -71.2509 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 3835 a
SDict begin H.S end
 -246 3835 a -246 3835 a
SDict begin 12 H.A end
 -246
3835 a -246 3835 a
SDict begin [/View [/XYZ H.V]/Dest (Item.132) cvn /DEST pdfmark end
 -246 3835 a 0 TeXcolorgray 12 3949
a FI(\(c\))p 0 TeXcolorgray 41 w(La)18 b(fonction)28
b Fz(f)38 b FI(atteint)20 b(son)f(maximum)i(lorsque)h
Fz(x)f FE(\306)15 b FI(2,)20 b(donc)e(l)o('air)o(e)h(du)g(r)o(ectangle)
24 b Fz(A)5 b(M)k(N)g(P)27 b FI(est)20 b(maximale)g(lorsque)i
Fz(x)f FE(\306)16 b FI(2,)j(c)n('est-)145 4049 y(\340-dir)o(e)d(quand)k
Fz(M)25 b FI(est)17 b(le)h(milieu)h(du)f(segment)1560
4050 y([)1591 4049 y Fz(A)s(B)1697 4050 y FI(])1732 4049
y(.)-246 4134 y
SDict begin H.S end
 -246 4134 a -246 4134 a
SDict begin 12 H.A end
 -246 4134 a -246
4134 a
SDict begin [/View [/XYZ H.V]/Dest (exo.56) cvn /DEST pdfmark end
 -246 4134 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)c(56)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 887 5639
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.07468 a add def
/d 0.0 a add neg def /h 156.49008 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 887 5639 a 1444 5185 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 188.9262 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 101.86087 0.0 -54.62921   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 188.9262  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 188.9262  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.62921  def /maxTickline 101.86087  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 101.86087  0 -54.62921  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.62921
 101.86087  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 188.9262  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1429 5282 a FG(0)205
b(1)h(2)f(3)g(4)g(5)g(6)-1705 b FF(\241)p FG(1)-309 b
FF(\241)p FG(2)1356 5205 y(0)1314 5441 y FF(\241)p FG(1)1356
4969 y(1)1356 4732 y(2)1356 4496 y(3)1444 5185 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -28.45274 -56.90549 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 0.0 -28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 113.81097 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 14.22636 0.0
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 56.90549 0.0
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 56.90549 156.49008
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 128.03734 56.90549 128.03734
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 128.03734
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 142.26372 85.35823 156.49008
56.90549   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 156.49008 0.0 128.03734
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1444 5185 a
tx@Dict begin { -18.4941 17.64055 } PutCoor PutBegin  end
 1444
5185 a 0 1 0 TeXcolorrgb 51 x FI(0,)8 b(5)p 0 TeXcolorgray
1444 5185 a
tx@Dict begin  PutEnd  end
 1444 5185 a 1444 5185 a
tx@Dict begin { 119.50143 -8.5359 } PutCoor PutBegin  end
 1444 5185 a 1 0 0
TeXcolorrgb 51 x FI(4,)g(5)p 0 TeXcolorgray 1444 5185
a
tx@Dict begin  PutEnd  end
 1444 5185 a 1444 5185 a
tx@Dict begin { 147.95418 -8.5359 } PutCoor PutBegin  end
 1444 5185 a 1 0 0 TeXcolorrgb
51 x FI(5,)g(5)p 0 TeXcolorgray 1444 5185 a
tx@Dict begin  PutEnd  end
 1444 5185
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 128.03734
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 156.49008
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3013 5639 a
currentpoint initclip moveto
 3013
5639 a 0 TeXcolorgray 1909 5895 a FI(30)p 0 TeXcolorgray
eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.31) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.133) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(1.)p 0 TeXcolorgray 43 w(L)-10 b('image)18 b(de)g(3)f(par)25
b Fz(f)37 b FI(est)18 b(0,)8 b(5)18 b(\(pointill\351s)i(ver)q(ts\).)
-246 -129 y
SDict begin H.S end
 -246 -129 a -246 -129 a
SDict begin 12 H.A end
 -246 -129 a -246
-129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.134) cvn /DEST pdfmark end
 -246 -129 a 0 TeXcolorgray -141 -34 a FI(2.)p
0 TeXcolorgray 43 w(Les)e(solutions)h(de)e(l)o('\351quation)28
b Fz(f)19 b FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(2)k(sont)g(4,)8
b(5)19 b(et)e(5,)8 b(5)19 b(\(pointill\351s)g(rouges\).)-246
0 y
SDict begin H.S end
 -246 0 a -246 0 a
SDict begin 12 H.A end
 -246 0 a -246 0 a
SDict begin [/View [/XYZ H.V]/Dest (Item.135) cvn /DEST pdfmark end
 -246 0 a 0 TeXcolorgray
-141 95 a FI(3.)p 0 TeXcolorgray 43 w(Les)f(solutions)i(de)d(l)o
('in\351quation)28 b Fz(f)19 b FI(\()r Fz(x)5 b FI(\))15
b FE(\270)f FI(2)k(sont)g(tous)g(les)h(nombr)o(es)e(de)h(l)o('inter)q
(valle)2525 96 y([)2550 95 y(4,)8 b(5)19 b(;)25 b(5,)8
b(5)2830 96 y(])2874 95 y(:)18 b(c)n('est)g(sur)g(cet)g(inter)q(valle)h
(que)f(la)g(courbe)-38 195 y(est)g(au)f(dessus)i(de)e(2)g(\(par)q(ties)
h(de)f(la)h(courbe)f(et)g(de)h(l)o('axe)g(des)f(abscisses)i(r)o
(epass\351es)f(en)g(or)o(ange\).)-246 228 y
SDict begin H.S end
 -246 228
a -246 228 a
SDict begin 12 H.A end
 -246 228 a -246 228 a
SDict begin [/View [/XYZ H.V]/Dest (Item.136) cvn /DEST pdfmark end
 -246 228 a 0 TeXcolorgray
-141 324 a FI(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b Fz(f)51 b FI(:)p 0 TeXcolorgray
0 TeXcolorgray 636 411 a

 636 411 a 636 411 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 636 411
a
 0 setgray
 636 411 a 168 w Fz(x)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a
118 w Fz(f)805 412 y FI(\()834 411 y Fz(x)878 412 y FI(\))636
411 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 340.16171 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 340.16171 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 340.16171 -85.04042 lineto

 340.16171 0.0 lineto

 closepath

 340.16171 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FE(\241)p FI(2)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 636
411 a
 0 setgray
 636 411 a FI(0)636 411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FI(5)636
411 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 323.55753 -17.21701 ] concat

 pgfs


 636 411 a
 0 setgray
 636 411 a FI(6)636 411 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FI(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FI(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636
411 a 636 411 a
 0 setgray
 636 411 a FE(\241)p FI(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636
411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411 a FE(\241)p FI(1)636
411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09723 -41.12665 moveto

 142.20247 -69.77762 lineto

 pgfstr

 save

 [0.9105 -0.41336 0.41336 0.9105 142.20247 -69.77762 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411
a 636 411 a
 0 setgray
 636 411 a FI(3)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411
a 636 411 a
 0 setgray
 636 411 a FI(3)636 411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411 a
FI(1)636 411 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 411 a
 /pgfsc{}def/pgffc{}def
 636 411 a 636 411 a
 0 setgray
 636 411
a FI(1)636 411 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 249.17833 -41.15018 moveto

 315.58054 -71.2758 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 315.58054 -71.2758 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 1165
a
SDict begin H.S end
 -246 1165 a -246 1165 a
SDict begin 12 H.A end
 -246 1165 a -246 1165 a
SDict begin [/View [/XYZ H.V]/Dest (Item.137) cvn /DEST pdfmark end
 -246
1165 a 0 TeXcolorgray -141 1279 a FI(5.)p 0 TeXcolorgray
43 w(Le)18 b(maximum)h(de)25 b Fz(f)36 b FI(est)18 b(3,)g(son)g
(minimum)i(est)e FE(\241)p FI(1)f(\(points)i(bleus\).)-246
1312 y
SDict begin H.S end
 -246 1312 a -246 1312 a
SDict begin 12 H.A end
 -246 1312 a -246 1312
a
SDict begin [/View [/XYZ H.V]/Dest (Item.138) cvn /DEST pdfmark end
 -246 1312 a 0 TeXcolorgray -141 1408 a FI(6.)p 0 TeXcolorgray
43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)25 b Fz(f)51
b FI(:)p 0 TeXcolorgray 0 TeXcolorgray 1073 1495 a

 1073
1495 a 1073 1495 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a 167 w Fz(x)1073
1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a 117 w Fz(f)1241 1496 y
FI(\()1270 1495 y Fz(x)1314 1496 y FI(\))1073 1495 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs



1073 1495 a
 0 setgray
 1073 1495 a FE(\241)p FI(2)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 1073
1495 a
 0 setgray
 1073 1495 a FE(\241)p FI(1)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 1495
a
 0 setgray
 1073 1495 a FI(2)1073 1495 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495
a FI(6)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FE(\305)1073
1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FI(0)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073
1495 a
 0 setgray
 1073 1495 a FE(\241)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073
1495 a FI(0)1073 1495 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073 1495 a
 0 setgray
 1073 1495 a FE(\305)1073
1495 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 2059 a
SDict begin H.S end
 -246 2059 a -246 2059 a
SDict begin 12 H.A end
 -246 2059
a -246 2059 a
SDict begin [/View [/XYZ H.V]/Dest (exo.57) cvn /DEST pdfmark end
 -246 2059 a 0 TeXcolorgray 133 x FJ(Ex)o(er)o(cice)14
b(57)p 0 TeXcolorgray 41 w FI(On)27 b(dispose)g(d)n('une)h(cl\364tur)o
(e)e(de)h(100)g(m\350tr)o(es)h(de)e(long)h(pour)f(d\351limiter)i(un)f
(terr)o(ain)g(r)o(ectangulair)o(e)f(le)h(long)g(d)n('une)g(r)q
(ivi\350r)o(e)g(\(la)-246 2292 y(cl\364tur)o(e)18 b(est)g(en)g
(pointill\351s)h(\227)f(on)f(ne)h(met)g(pas)g(de)f(cl\364tur)o(e)h(le)g
(long)f(de)g(la)h(r)q(ivi\350r)o(e\).)f(On)g(note)j Fz(x)j
FI(et)c Fz(x)2734 2262 y FF(0)2773 2292 y FI(les)f(longueurs)h(des)e
(c\364t\351s)h(du)f(terr)o(ain.)p 0 TeXcolorgray 0 TeXcolorgray
1123 3583 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.1692 a add def
/d 0.0 a add neg def /h 142.26372 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1123 3583 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 1  setrgbcolor  [ 28.45274 85.35823
170.71646 85.35823 170.71646 113.81097 28.45274 113.81097  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.7
0.7 1  setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0  setrgbcolor  [ 142.26372 85.35823
142.26372 28.45274 56.90549 28.45274 56.90549 85.35823  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.7 1 0.7  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 0.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 28.45274 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1123 3583 a
tx@Dict begin { 43.81703 56.90549 } PutCoor PutBegin  end
 1123
3583 a 1125 3621 a Fz(x)1123 3583 y
tx@Dict begin  PutEnd  end
 1123 3583 a 1123
3583 a
tx@Dict begin { 146.24707 56.90549 } PutCoor PutBegin  end
 1123 3583 a 1125 3621 a Fz(x)1123 3583 y
tx@Dict begin  PutEnd  end
 1123
3583 a 1123 3583 a
tx@Dict begin { 95.60123 22.76227 } PutCoor PutBegin  end
 1123 3583 a 1125 3646 a Fz(x)1169
3616 y FF(0)1123 3583 y
tx@Dict begin  PutEnd  end
 1123 3583 a 2777 3583 a
currentpoint initclip moveto
 2777
3583 a -246 3766 a FI(On)h(voudr)o(ait)f(d\351limiter)i(le)f(terr)o
(ain)g(le)f(plus)i(gr)o(and)e(possible)o(.)-246 3799
y
SDict begin H.S end
 -246 3799 a -246 3799 a
SDict begin 12 H.A end
 -246 3799 a -246 3799 a
SDict begin [/View [/XYZ H.V]/Dest (Item.139) cvn /DEST pdfmark end
 -246
3799 a -246 3799 a
SDict begin H.S end
 -246 3799 a -246 3799 a
SDict begin 12 H.A end
 -246 3799
a -246 3799 a
SDict begin [/View [/XYZ H.V]/Dest (Item.140) cvn /DEST pdfmark end
 -246 3799 a 0 TeXcolorgray -141 3894 a
FI(1.)p 0 TeXcolorgray 0 TeXcolorgray 43 w(\(a\))p 0
TeXcolorgray 43 w Fz(x)23 b FI(est)c(une)g(longueur)-5
b(,)20 b(donc)h Fz(x)f FE(\270)15 b FI(0.)k(P)m(ar)g(ailleurs)o(,)h(la)
e(longueur)k Fz(x)h FI(appar)o(a\356t)d(deux)e(fois)i(sur)e(la)h
(\002gur)o(e)o(,)e(donc)j Fz(x)k FI(ne)18 b(peut)i(pas)f(d\351passer)97
3994 y(50)f(\(car)e(2)10 b FE(\243)g FI(50)16 b FE(\306)e
FI(100\).)97 4108 y(C)o(onclusion)19 b(:)e(on)h(a)f(l)o('encadr)o
(ement)1944 4208 y(0)d FE(\267)j Fz(x)i FE(\267)14 b
FI(50.)-246 4258 y
SDict begin H.S end
 -246 4258 a -246 4258 a
SDict begin 12 H.A end
 -246 4258
a -246 4258 a
SDict begin [/View [/XYZ H.V]/Dest (Item.141) cvn /DEST pdfmark end
 -246 4258 a 0 TeXcolorgray -44 4372 a FI(\(b\))p
0 TeXcolorgray 41 w(Le)j(p\351r)q(im\350tr)o(e)o(,)h(100)h(m,)f(s)m
('obtient)g(en)g(faisant)g(le)g(calcul)1957 4472 y Fz(x)d
FE(\305)d Fz(x)j FE(\305)d Fz(x)2243 4437 y FF(0)2266
4472 y FI(,)97 4621 y(donc)1885 4721 y(2)r Fz(x)j FE(\305)d
Fz(x)2092 4686 y FF(0)2129 4721 y FE(\306)i FI(100)19
b(;)97 4870 y(et)e(donc)1896 4970 y Fz(x)1940 4936 y
FF(0)1975 4970 y FE(\306)e FI(100)10 b FE(\241)g FI(2)r
Fz(x)5 b FI(.)-246 5020 y
SDict begin H.S end
 -246 5020 a -246 5020 a
SDict begin 12 H.A end
 -246
5020 a -246 5020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.142) cvn /DEST pdfmark end
 -246 5020 a 0 TeXcolorgray -36 5134
a FI(\(c\))p 0 TeXcolorgray 41 w(L)-10 b('air)o(e)17
b(du)g(terr)o(ain)h(est)941 5316 y Fz(x)d FE(\243)d Fz(x)1106
5282 y FF(0)1143 5316 y FE(\306)k Fz(x)f FE(\243)1333
5317 y FI(\()1360 5316 y(100)10 b FE(\241)g FI(2)r Fz(x)1641
5317 y FI(\))2690 5316 y(\(car)19 b Fz(x)2888 5282 y
FF(0)2923 5316 y FE(\306)c FI(100)10 b FE(\241)g FI(2)r
Fz(x)5 b FI(\))1143 5441 y FE(\306)16 b Fz(x)f FE(\243)10
b FI(100)g FE(\305)i Fz(x)j FE(\243)10 b FI(\()p FE(\241)p
FI(2)r Fz(x)5 b FI(\))846 b(\(on)17 b(d\351veloppe\))1143
5577 y FE(\306)d FI(100)r Fz(x)h FE(\241)10 b FI(2)r
Fz(x)1539 5543 y FG(2)1577 5577 y FI(.)p 0 TeXcolorgray
1909 5895 a(31)p 0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.32) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.143) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(d\351\002nit)h(\340)f(pr\351sent)
h(la)g(fonction)26 b Fz(f)36 b FI(sur)1248 -162 y([)1273
-163 y(0;)8 b(50)1421 -162 y(])1465 -163 y(par)1752 -63
y Fz(f)19 b FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(100)r
Fz(x)h FE(\241)10 b FI(2)r Fz(x)2305 -97 y FG(2)2343
-63 y FI(.)-38 86 y(A)n(utr)o(ement)18 b(dit,)26 b Fz(f)18
b FI(\()r Fz(x)5 b FI(\))18 b(donne)f(l)o('air)o(e)h(du)f(terr)o(ain)h
(pour)g(une)g(valeur)f(donn\351e)h(de)i Fz(x)5 b FI(.)-246
120 y
SDict begin H.S end
 -246 120 a -246 120 a
SDict begin 12 H.A end
 -246 120 a -246 120 a
SDict begin [/View [/XYZ H.V]/Dest (Item.144) cvn /DEST pdfmark end
 -246
120 a 0 TeXcolorgray -38 215 a FI(\(a\))p 0 TeXcolorgray
41 w(T)-8 b(ableau)18 b(de)f(valeurs)h(:)p 97 251 4050
4 v 97 351 4 100 v 204 321 a Fz(x)p 350 351 V 261 w FI(0)p
695 351 V 305 w(5)p 1040 351 V 284 w(10)p 1385 351 V
265 w(15)p 1729 351 V 265 w(20)p 2074 351 V 264 w(25)p
2419 351 V 265 w(30)p 2763 351 V 265 w(35)p 3108 351
V 265 w(40)p 3453 351 V 264 w(45)p 3798 351 V 265 w(50)p
4142 351 V 97 354 4050 4 v 97 454 4 100 v 158 424 a Fz(f)h
FI(\()r Fz(x)5 b FI(\))p 350 454 V 203 w(0)p 695 454
V 264 w(450)p 1040 454 V 225 w(800)p 1385 454 V 205 w(1050)p
1729 454 V 184 w(1200)p 2074 454 V 185 w(1250)p 2419
454 V 185 w(1200)p 2763 454 V 184 w(1050)p 3108 454 V
205 w(800)p 3453 454 V 225 w(450)p 3798 454 V 265 w(0)p
4142 454 V 97 457 4050 4 v -246 472 a
SDict begin H.S end
 -246 472 a -246
472 a
SDict begin 12 H.A end
 -246 472 a -246 472 a
SDict begin [/View [/XYZ H.V]/Dest (Item.145) cvn /DEST pdfmark end
 -246 472 a 0 TeXcolorgray
-44 552 a FI(\(b\))p 0 TeXcolorgray 41 w(C)o(ourbe)17
b(r)o(epr\351sentative)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1369 2021 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 181.11247 a add def
/d 0.0 a add neg def /h 166.8665 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1369 2021 a 1582 1895 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 161.83543 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.7478
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 149.7092 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45444
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 161.83543  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 161.83543  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 149.7092  def /dT 1864790 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 2.84544  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 149.7092
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 161.83543
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 149.7092  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 149.7092  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 161.83543  def /dT 1490800 abs 65536 div viceversa
{ neg } if def /DT 200. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.11374  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.11374  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 149.7092
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 161.83543
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1567 1992 a FG(0)189
b(10)175 b(20)f(30)g(40)g(50)1493 1914 y(0)1431 1725
y(200)1431 1536 y(400)1431 1347 y(600)1431 1158 y(800)1401
970 y(1000)1401 781 y(1200)1582 1895 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0.0 def /x1 50.0 def
/dx x1 x sub 199 div def /F@pstplot (100*x-2*x^(2))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 2.84544 mul F@pstplot 0.11374 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 0.11374 mul gt { moveto } { dup -1.e30 0.11374 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 0.11374 mul gt { moveto } { dup -1.e30 0.11374
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 2873 2021 a
currentpoint initclip moveto
 2873 2021 a -246
2065 a
SDict begin H.S end
 -246 2065 a -246 2065 a
SDict begin 12 H.A end
 -246 2065 a -246 2065
a
SDict begin [/View [/XYZ H.V]/Dest (Item.146) cvn /DEST pdfmark end
 -246 2065 a 0 TeXcolorgray -36 2179 a FI(\(c\))p 0
TeXcolorgray 49 w Fz(f)45 b FI(atteint)29 b(son)e(maximum)i(lorsque)h
Fz(x)f FE(\306)24 b FI(25,)k(donc)f(la)g(sur)q(face)g(du)g(terr)o(ain)h
(est)g(maximale)g(lorsque)i Fz(x)f FE(\306)24 b FI(25.)k(Dans)f(ce)g
(cas)o(,)i Fz(x)4045 2149 y FF(0)4091 2179 y FE(\306)97
2278 y FI(100)10 b FE(\241)g FI(2)g FE(\243)g FI(25)17
b FE(\306)e FI(50.)j(A)n(utr)o(ement)g(dit,)g(le)f(terr)o(ain)h(de)f
(sur)q(face)h(maximale)h(mesur)o(e)f(50)g(m)g(sur)f(25)i(m.)-246
2356 y
SDict begin H.S end
 -246 2356 a -246 2356 a
SDict begin 12 H.A end
 -246 2356 a -246 2356
a
SDict begin [/View [/XYZ H.V]/Dest (exo.58) cvn /DEST pdfmark end
 -246 2356 a 0 TeXcolorgray 122 x FJ(Ex)o(er)o(cice)14
b(58)p 0 TeXcolorgray 41 w FI(On)j(constr)q(uit)h(la)g(courbe)f(r)o
(epr\351sentative)i(d)n('une)f(fonction)27 b Fz(f)17
b FI(,)g(d\351\002nie)h(sur)2495 2479 y([)2521 2478 y
FE(\241)p FI(2;)8 b(3)2684 2479 y(])2727 2478 y(et)18
b(v\351r)q(i\002ant)g(les)g(conditions)g(suivantes)h(:)p
0 TeXcolorgray -76 2577 a(\225)p 0 TeXcolorgray 50 w
Fz(f)36 b FI(est)18 b(croissante)g(sur)f(l)o('inter)q(valle)1062
2578 y([)1088 2577 y FE(\241)p FI(2;)8 b(1)1251 2578
y(])1285 2577 y(;)p 0 TeXcolorgray -76 2677 a(\225)p
0 TeXcolorgray 50 w Fz(f)36 b FI(est)18 b(af\002ne)f(sur)h(l)o('inter)q
(valle)907 2678 y([)932 2677 y(1;)8 b(3)1040 2678 y(])1092
2677 y(;)p 0 TeXcolorgray -76 2777 a(\225)p 0 TeXcolorgray
50 w Fz(f)19 b FI(\()p FE(\241)p FI(2\))14 b FE(\306)g(\241)p
FI(4)k(et)25 b Fz(f)19 b FI(\(3\))c FE(\306)f FI(1)j(;)p
0 TeXcolorgray -76 2876 a(\225)p 0 TeXcolorgray 42 w(les)h(solutions)h
(de)e(l)o('\351quation)28 b Fz(f)19 b FI(\()r Fz(x)5
b FI(\))14 b FE(\306)g FI(2)k(sont)g FE(\241)p FI(1)f(et)h(2.)-246
2976 y(Il)f(y)g(a)g(plusieurs)i(\351tapes)g(:)-246 3009
y
SDict begin H.S end
 -246 3009 a -246 3009 a
SDict begin 12 H.A end
 -246 3009 a -246 3009 a
SDict begin [/View [/XYZ H.V]/Dest (Item.147) cvn /DEST pdfmark end
 -246
3009 a 0 TeXcolorgray -141 3105 a FI(1.)p 0 TeXcolorgray
43 w(P)n(our)e(commencer)-5 b(,)19 b(on)e(utilise)j(l)o('ensemble)f(de)
f(d\351\002nition)g(:)f(on)h(sait)f(qu)n('il)i(faut)f(tr)o(acer)f(la)g
(courbe)h(sur)f(l)o('inter)q(valle)3463 3106 y([)3488
3105 y FE(\241)p FI(2;)8 b(3)3651 3106 y(])3695 3105
y(\(zones)17 b(ver)q(tes)-38 3204 y(ex)o(clues\).)-246
3229 y
SDict begin H.S end
 -246 3229 a -246 3229 a
SDict begin 12 H.A end
 -246 3229 a -246 3229
a
SDict begin [/View [/XYZ H.V]/Dest (Item.148) cvn /DEST pdfmark end
 -246 3229 a 0 TeXcolorgray -141 3333 a FI(2.)p 0 TeXcolorgray
43 w(Ensuite)o(,)k(on)e(sait)i(que)28 b Fz(f)19 b FI(\()p
FE(\241)p FI(2\))d FE(\306)g(\241)p FI(4)k(et)28 b Fz(f)19
b FI(\(3\))e FE(\306)f FI(1,)k(donc)f(la)h(courbe)f(r)o
(epr\351sentative)j(passe)e(par)g(les)g(points)h(de)e(coor)o
(donn\351es)h(\()p FE(\241)p FI(2;)8 b FE(\241)p FI(4\))20
b(et)-38 3433 y(\(3;)8 b(1\))18 b(\(plac\351s)g(en)g(bleu\).)-246
3465 y
SDict begin H.S end
 -246 3465 a -246 3465 a
SDict begin 12 H.A end
 -246 3465 a -246 3465
a
SDict begin [/View [/XYZ H.V]/Dest (Item.149) cvn /DEST pdfmark end
 -246 3465 a 0 TeXcolorgray -141 3562 a FI(3.)p 0 TeXcolorgray
43 w(Les)g(solutions)g(de)f(l)o('\351quation)27 b Fz(f)19
b FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(2)j(sont)h
FE(\241)p FI(1)f(et)g(2,)h(donc)e(la)h(courbe)g(r)o(epr\351sentative)h
(passe)g(par)f(les)g(points)h(de)f(coor)o(donn\351es)g(\()p
FE(\241)p FI(1;)8 b(2\))-38 3661 y(et)18 b(\(2;)8 b(2\))19
b(\(plac\351s)f(en)h(rouge\).)e(De)g(plus)o(,)j(la)e(courbe)f(r)o
(epr\351sentative)j(ne)e(coupe)h(nulle)g(par)q(t)f(ailleurs)h(la)f
(droite)f(hor)q(izontale)h(qui)h(passe)g(par)-38 3761
y(l)o('or)o(donn\351e)f(2)g(\(tr)o(ac\351e)f(\351galement)i(en)f(rouge)
o(,)e(en)i(pointill\351s\).)-246 3794 y
SDict begin H.S end
 -246 3794 a -246
3794 a
SDict begin 12 H.A end
 -246 3794 a -246 3794 a
SDict begin [/View [/XYZ H.V]/Dest (Item.150) cvn /DEST pdfmark end
 -246 3794 a 0 TeXcolorgray
-141 3890 a FI(4.)p 0 TeXcolorgray 43 w(La)13 b(fonction)21
b Fz(f)35 b FI(est)13 b(af\002ne)g(sur)873 3891 y([)901
3890 y(1;)8 b(3)1009 3891 y(])1044 3890 y(,)13 b(donc)g(sa)g(courbe)g
(r)o(epr\351sentative)g(sur)g(cet)g(inter)q(v)q(alle)h(est)g(un)g(se)q
(gment)q(.)f(On)h(tr)o(ace)f(l'un)q(ique)h(se)q(gment)-38
3989 y(passant)k(par)g(les)g(points)g(d\351j\340)g(plac\351s)g(\(en)g
(or)o(ange\).)-246 4023 y
SDict begin H.S end
 -246 4023 a -246 4023 a
SDict begin 12 H.A end
 -246
4023 a -246 4023 a
SDict begin [/View [/XYZ H.V]/Dest (Item.151) cvn /DEST pdfmark end
 -246 4023 a 0 TeXcolorgray -141 4118
a FI(5.)p 0 TeXcolorgray 43 w(En\002n)23 b Fz(f)34 b
FI(est)15 b(croissante)h(sur)f(l)o('inter)q(valle)1217
4119 y([)1243 4118 y FE(\241)p FI(2;)8 b(1)1406 4119
y(])1440 4118 y(,)15 b(donc)g(on)g(tr)o(ace)g(une)h(courbe)f(\253)d
(qui)j(monte)d(\273)30 b(sur)16 b(cet)f(inter)q(valle)i(\(en)e(noir\).)
g(Il)f(faut)i(aussi)-38 4218 y(bien)h(s\373r)h(qu)n('elle)h(passe)f
(par)f(les)i(points)f(d\351j\340)g(plac\351s)o(.)-38
4357 y FJ(R)o(emarque)12 b(:)j FI(P)n(our)g(cette)h(der)q(ni\350r)o(e)f
(\351tape)o(,)h(il)f(y)g(a)g(plusieurs)j(dessins)e(possibles)o(.)h(S)n
(ur)e(le)h(gr)o(aphique)h(j)o('ai)e(choisi)h(de)f(tr)o(acer)g(deux)h
(segments)-38 4457 y(par)h(facilit\351)i(\(technique\),)g(mais)f(vous)g
(pouvez)g(fair)o(e)f(une)h(courbe)f(\340)g(main)h(lev\351e)h(qui)f(ne)g
(soit)g(pas)f(droite)o(.)-246 4610 y(La)h(courbe)f(\002nale)h(est)f(tr)
o(ac\351e)h(en)g(noir)f(et)h(en)g(or)o(ange)o(.)p 0 TeXcolorgray
1909 5895 a(32)p 0 TeXcolorgray eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.33) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1071 1668
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 211.68846 a add def
/d 0.0 a add neg def /h 230.46738 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1071 1668 a 1770 638 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 127.46815 0.0 -84.2203 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 106.4134 0.0 -124.05397   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 127.46815  0 -84.2203  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -84.2203
 127.46815  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-124.05397  def /maxTickline 106.4134  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 106.4134
0.0 -124.05397   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 127.46815
0.0 -84.2203 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 106.4134  0 -124.05397  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -124.05397
 106.4134  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-84.2203  def /maxTickline 127.46815  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 106.4134
0.0 -124.05397   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 127.46815
0.0 -84.2203 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1755 735 a FG(0)205
b(1)h(2)f(3)-997 b FF(\241)p FG(1)-309 b FF(\241)p FG(2)1682
657 y(0)1640 893 y FF(\241)p FG(1)1640 1130 y FF(\241)p
FG(2)1640 1366 y FF(\241)p FG(3)1640 1602 y FF(\241)p
FG(4)1682 421 y(1)1682 185 y(2)1682 -52 y(3)1770 638
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ -56.90549 112.10387
-56.90549 -129.74443 -89.91077 -129.74443 -89.91077 112.10387  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.8
1 0.8  setrgbcolor  0.25 .setopacityalpha  fill  grestore gsave 2.0
SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0
 2.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  [ 133.15863 112.10387
133.15863 -129.74443 85.35823 -129.74443 85.35823 112.10387  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.8
1 0.8  setrgbcolor  0.25 .setopacityalpha  fill  grestore gsave 2.0
SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0
 2.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.96 def /x1 4.48
def /dx x1 x sub 49 div def /F@pstplot ((--2.-0.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  2.0  2.0
] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 85.35823
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 56.90549 -56.90549 -113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 -28.45274 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
-113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -28.45274
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 2829 1668 a
currentpoint initclip moveto
 2829
1668 a -246 1751 a
SDict begin H.S end
 -246 1751 a -246 1751 a
SDict begin 12 H.A end
 -246 1751
a -246 1751 a
SDict begin [/View [/XYZ H.V]/Dest (exo.59) cvn /DEST pdfmark end
 -246 1751 a 0 TeXcolorgray 116 x FJ(Ex)o(er)o(cice)14
b(59)p 0 TeXcolorgray 41 w FI(Les)23 b(courbes)f(en)g(for)q(me)h(de)e
(O)l(,)i(de)e(T)i(et)f(de)f(M)h(ne)h(sont)f(pas)h(les)f(courbes)g(r)o
(epr\351sentatives)i(de)e(fonctions)o(,)i(puisqu)n('un)g(nombr)o(e)-246
1967 y(aur)o(ait)18 b(plusieurs)i(images)e(\(pointill\351s)h(rouges\).)
-246 2066 y(En)c(r)o(evanche)o(,)f(la)h(lettr)o(e)g(V)g(n)-6
b('a)14 b(pas)h(ce)g(probl\350me)g(et)g(r)o(epr\351sente)g(bien)g(la)g
(courbe)f(d)n('une)h(fonction)h(\(exemple)g(:)f(la)f(courbe)h(de)f(la)h
(fonction)g(d\351\002nie)-246 2166 y(par)26 b Fz(f)19
b FI(\()r Fz(x)5 b FI(\))14 b FE(\306)g FI(2)p FE(j)r
Fz(x)5 b FE(j)18 b FI(pour)i Fz(x)g FE(2)572 2167 y FI([)598
2166 y FE(\241)p FI(1;)8 b(1)761 2167 y(])804 2166 y(est)18
b(en)g(for)q(me)g(de)f(V)6 b(\).)p 0 TeXcolorgray 0 TeXcolorgray
1119 2630 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 200.08177 a add def
/d 0.0 a add neg def /h 42.67957 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1119 2630 a 1587 2885 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray   -34.14365 51.21547 2 copy
moveto 17.07181 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.07182 34.14365 0.0 68.2873   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14365 68.2873 17.07182 34.14365
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35912 68.2873 51.21547 68.2873 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.2873 34.14365 68.2873 68.2873  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.43094 68.2873 102.43094 34.14365
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.50276 51.21547 102.43094 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57458 68.2873 119.50276 51.21547
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57458 34.14365 136.57458 68.2873
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -34.14365 71.7016 -34.14365
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 68.2873 71.7016 68.2873
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 102.43094 71.7016 102.43094
30.72932   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 2781 2630 a
currentpoint initclip moveto
 2781 2630 a -246
2813 a FI(D)o('une)16 b(mani\350r)o(e)g(g\351n\351r)o(ale)o(,)h(on)f(r)
o(econna\356t)g(une)g(fonction)h(\(et)f(la)g(courbe)g(r)o
(epr\351sentative)h(d)n('une)g(fonction\))f(au)g(fait)h(que)f(tout)h
(nombr)o(e)e(r\351el)h(a)g FJ(au)-246 2913 y(plus)g(une)h
FI(image)g(\(donc)g(0)h(ou)f(1)h(image\).)-246 2998 y
SDict begin H.S end

-246 2998 a -246 2998 a
SDict begin 12 H.A end
 -246 2998 a -246 2998 a
SDict begin [/View [/XYZ H.V]/Dest (exo.60) cvn /DEST pdfmark end
 -246
2998 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)c(60)p
0 TeXcolorgray 41 w FI(Dans)j(tout)h(l)o('exer)o(cice)o(,)g(les)g
(longueurs)g(sont)g(expr)q(im\351es)h(en)f(cm,)g(les)g(air)o(es)f(en)h
(cm)2682 3088 y Fe(2)2726 3112 y FI(et)f(les)h(volumes)h(en)f(cm)3441
3088 y Fe(3)3468 3112 y FI(.)-246 3160 y
SDict begin H.S end
 -246 3160 a
-246 3160 a
SDict begin 12 H.A end
 -246 3160 a -246 3160 a
SDict begin [/View [/XYZ H.V]/Dest (Item.152) cvn /DEST pdfmark end
 -246 3160 a -246
3160 a
SDict begin H.S end
 -246 3160 a -246 3160 a
SDict begin 12 H.A end
 -246 3160 a -246 3160
a
SDict begin [/View [/XYZ H.V]/Dest (Item.153) cvn /DEST pdfmark end
 -246 3160 a 0 TeXcolorgray -141 3255 a FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 43 w Fz(x)k
FI(est)c(une)g(longueur)-5 b(,)18 b(donc)h Fz(x)h FE(\270)14
b FI(0.)k(D)o('autr)o(e)e(par)q(t,)h(la)g(longueur)j
Fz(x)j FI(appar)o(a\356t)18 b(deux)f(fois)o(,)h(donc)f(comme)h(la)g
(plaque)g(de)f(m\351tal)h(a)f(pour)145 3355 y(c\364t\351)g(15,)k
Fz(x)h FI(ne)c(peut)g(d\351passer)g(7,)8 b(5.)19 b(A)n(utr)o(ement)f
(dit)g(:)p 0 TeXcolorgray 0 TeXcolorgray 1673 3513 a
Fz(x)k FI(est)c(compr)q(is)g(entr)o(e)g(0)f(et)h(7,)8
b(5.)-246 3574 y
SDict begin H.S end
 -246 3574 a -246 3574 a
SDict begin 12 H.A end
 -246 3574 a
-246 3574 a
SDict begin [/View [/XYZ H.V]/Dest (Item.154) cvn /DEST pdfmark end
 -246 3574 a 0 TeXcolorgray 4 3671 a FI(\(b\))p
0 TeXcolorgray 41 w(Dans)16 b(cette)i(question,)i(on)d(pr)o(end)i
Fz(x)h FE(\306)14 b FI(3.)k(Il)e(r)o(este)i(alors)g(15)10
b FE(\241)g FI(2)g FE(\243)g FI(3)16 b FE(\306)e FI(9)k(cm)g(pour)f(le)
h(c\364t\351)g(du)f(carr\351)g(centr)o(al.)p 0 TeXcolorgray
0 TeXcolorgray 651 4875 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 113.92433 a add def
/d 0.0 a add neg def /h 131.05283 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 651 4875 a 1187 4664 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 0.0 -39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 19.91684 19.91684 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 19.91684 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 79.66736 39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -59.75052 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -59.75052 79.66736 -59.75052 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 79.66736 -59.75052 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 99.5842 -39.83368 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 99.5842 -39.83368 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 79.66736 19.91684 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 79.66736 19.91684 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1187 4664 a
tx@Dict begin { -11.95021 94.80405 } PutCoor PutBegin  end
 1187
4664 a 51 x FI(9)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187 4664 a
tx@Dict begin { 32.6636 50.1905 } PutCoor PutBegin  end

1187 4664 a 51 x FI(9)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187 4664
a
tx@Dict begin { 13.14517 91.21915 } PutCoor PutBegin  end
 1187 4664 a 51 x FI(3)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a 1187
4664 a
tx@Dict begin { 27.88345 76.879 } PutCoor PutBegin  end
 1187 4664 a 51 x FI(3)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -59.75052
-9.95842 -19.91684 -9.95842   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 39.83368
-9.95842 -19.91684 -9.95842   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1187 4664 a
tx@Dict begin { -13.14517 -12.74677 } PutCoor PutBegin  end
 1187 4664 a 51 x
FI(15)1187 4664 y
tx@Dict begin  PutEnd  end
 1187 4664 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 19.91684 79.66736 19.91684 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 79.66736 19.91684 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 79.66736
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial
1597 4875 a
currentpoint initclip moveto
 1597 4875 a 0 TeXcolorgray 0 TeXcolorgray
2602 4703 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 135.83298 a add def
/d 0.0 a add neg def /h 110.33916 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2602 4703 a 3069 4614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 0.0 -39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 39.83368 39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 39.83368 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 59.75052 39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.83368 19.91684 -39.83368 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 39.83368 19.91684 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 59.75052 -39.83368 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 59.75052 -19.91684 59.75052
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 59.75052 39.83368 59.75052 59.75052
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3069 4614 a
tx@Dict begin { -50.58864 11.95021 } PutCoor PutBegin  end
 3069 4614 a 51 x
FI(3)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a 3069 4614 a
tx@Dict begin { -1.59337 -1.99179 } PutCoor PutBegin  end
 3069 4614 a
51 x FI(9)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a 3069 4614 a
tx@Dict begin { 55.36879 23.50172 } PutCoor PutBegin  end
 3069 4614
a 51 x FI(9)3069 4614 y
tx@Dict begin  PutEnd  end
 3069 4614 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 59.75052 -19.91684 39.83368
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 49.7921 39.83368 -19.91684 39.83368
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -19.91684 39.83368 -29.87526 19.91684
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3730 4703 a
currentpoint initclip moveto
 3730 4703 a 145
5089 a FI(Le)g(volume)i(de)e(la)h(bo\356te)f(est)h(\351gal)g(\340)1709
5189 y Fz(L)c FE(\243)c FB(`)g FE(\243)g Fz(h)19 b FE(\306)14
b FI(9)c FE(\243)g FI(9)g FE(\243)g FI(3)16 b FE(\306)e
FI(243.)-246 5239 y
SDict begin H.S end
 -246 5239 a -246 5239 a
SDict begin 12 H.A end
 -246 5239
a -246 5239 a
SDict begin [/View [/XYZ H.V]/Dest (Item.155) cvn /DEST pdfmark end
 -246 5239 a 0 TeXcolorgray -141 5353 a
FI(2.)p 0 TeXcolorgray 43 w(\300)j(par)q(tir)g(de)g(l\340,)g(je)h(r)o
(egroupe)f(la)g(corr)o(ection)g(des)h(sous-questions)o(.)-38
5517 y(Le)g(carr\351)e(du)i(fond)f(a)g(pour)h(c\364t\351)g(15)10
b FE(\241)i Fz(x)j FE(\241)d Fz(x)21 b FE(\306)14 b FI(15)c
FE(\241)g FI(2)r Fz(x)5 b FI(,)20 b(et)e(la)f(hauteur)h(de)g(la)f
(bo\356te)h(est)i Fz(x)5 b FI(.)p 0 TeXcolorgray 1909
5895 a(33)p 0 TeXcolorgray eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.34) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1513 998
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 130.20027 a add def
/d 0.0 a add neg def /h 149.77585 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1513 998 a 2126 756 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 0.0 -45.52457 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 22.76228 22.76228 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 22.76228 22.76228 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 91.04913 45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 22.76228 -45.52457 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -68.28685 22.76228 -45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -68.28685 91.04913 -68.28685 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 91.04913 -68.28685 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 113.81142 -45.52457 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 113.81142 -45.52457 113.81142
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 91.04913 22.76228 113.81142
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52457 91.04913 22.76228 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2126 756 a
tx@Dict begin { -25.03865 108.34834 } PutCoor PutBegin  end
 2126 756 a 51 x FI(15)10
b FE(\241)g FI(2)r Fz(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756
a
tx@Dict begin  gsave STV CP T /ps@rot 90. def grestore  end
 2126 756 a 2126 756 a
tx@Dict begin { 37.33012 43.24818 } PutCoor PutBegin  end
 2126 756 a 2126 756 a
tx@Dict begin ps@rot  RotBegin  end
 2126 756
a 51 x FI(15)g FE(\241)g FI(2)r Fz(x)2126 756 y
tx@Dict begin RotEnd  end
 2126
756 a 2126 756 a
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756 a
tx@Dict begin { 15.02318 104.2513 } PutCoor PutBegin  end
 2126 756 a 2128
794 a Fz(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a 2126 756 a
tx@Dict begin { 31.86705 87.86243 } PutCoor PutBegin  end
 2126 756
a 2128 794 a Fz(x)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -68.28685
-11.38113 -22.76228 -11.38113   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 45.52457
-11.38113 -22.76228 -11.38113   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2126 756 a
tx@Dict begin { -15.02318 -14.56784 } PutCoor PutBegin  end
 2126 756 a 51 x FI(15)2126 756 y
tx@Dict begin  PutEnd  end
 2126 756
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 22.76228 -45.52457 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76228 91.04913 22.76228 22.76228
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 91.04913 22.76228 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -45.52457 22.76228 -45.52457 91.04913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine
 grestore end
 
@endspecial 2594 998 a
currentpoint initclip moveto
 2594
998 a -38 1156 a FI(Donc)17 b(le)h(volume)g(de)f(la)h(bo\356te)g(est)
1461 1255 y Fz(L)c FE(\243)c FB(`)g FE(\243)g Fz(h)19
b FE(\306)14 b FI(\(15)c FE(\241)g FI(2)r Fz(x)5 b FI(\))10
b FE(\243)g FI(\(15)g FE(\241)g FI(2)r Fz(x)5 b FI(\))10
b FE(\243)i Fz(x)5 b FI(.)-38 1420 y(On)17 b(d\351veloppe)i(cette)f
(expr)o(ession)h(:)1025 1602 y Fz(V)d FI(\()r Fz(x)5
b FI(\))14 b FE(\306)1273 1603 y FI(\()1300 1602 y(15)c
FE(\241)g FI(2)r Fz(x)1541 1603 y FI(\))1580 1602 y FE(\243)1645
1603 y FI(\()1672 1602 y(15)g FE(\241)g FI(2)r Fz(x)1913
1603 y FI(\))1952 1602 y FE(\243)i Fz(x)1204 1727 y FE(\306)1273
1728 y FI(\()1300 1727 y(15)e FE(\243)g FI(15)g FE(\305)g
FI(15)g FE(\243)g FI(\()p FE(\241)p FI(2)r Fz(x)5 b FI(\))10
b FE(\305)g FI(\()p FE(\241)p FI(2)r Fz(x)5 b FI(\))10
b FE(\243)g FI(15)g FE(\305)g FI(\()p FE(\241)p FI(2)r
Fz(x)c FI(\))k FE(\243)g FI(\()p FE(\241)p FI(2)r Fz(x)5
b FI(\))2926 1728 y(\))2969 1727 y FE(\243)12 b Fz(x)1204
1863 y FE(\306)1273 1799 y Fr(\241)1303 1863 y FI(225)e
FE(\241)g FI(30)r Fz(x)15 b FE(\241)10 b FI(30)r Fz(x)15
b FE(\305)10 b FI(4)r Fz(x)1986 1829 y FG(2)2027 1799
y Fr(\242)2066 1863 y FE(\243)i Fz(x)1204 1999 y FE(\306)i
FI(225)r Fz(x)h FE(\241)10 b FI(30)r Fz(x)1640 1965 y
FG(2)1689 1999 y FE(\241)g FI(30)r Fz(x)1880 1965 y FG(2)1926
1999 y FE(\305)g FI(4)r Fz(x)2077 1965 y FG(3)1204 2135
y FE(\306)k FI(4)r Fz(x)1359 2101 y FG(3)1405 2135 y
FE(\241)c FI(60)r Fz(x)1596 2101 y FG(2)1643 2135 y FE(\305)g
FI(225)r Fz(x)5 b FI(.)-38 2383 y(On)17 b(fait)h(un)g(tableau)g(de)f
(valeurs)h(pour)e Fz(V)32 b FI(sur)1358 2384 y([)1383
2383 y(0;)8 b(7,)g(5)1559 2384 y(])1604 2383 y(avec)17
b(un)h(pas)g(de)f(0,)8 b(5,)19 b(puis)f(on)g(constr)q(uit)g(sa)f
(courbe)g(r)o(epr\351sentative)o(.)p -38 2426 4184 4
v -38 2526 4 100 v 75 2496 a Fz(x)p 227 2526 V 217 w
FI(0)p 472 2526 V 170 w(0,)8 b(5)p 717 2526 V 171 w(1)p
961 2526 V 171 w(1,)g(5)p 1206 2526 V 171 w(2)p 1451
2526 V 170 w(2,)g(5)p 1695 2526 V 171 w(3)p 1940 2526
V 170 w(3,)g(5)p 2185 2526 V 172 w(4)p 2429 2526 V 170
w(4,)g(5)p 2674 2526 V 171 w(5)p 2919 2526 V 170 w(5,)g(5)p
3164 2526 V 171 w(6)p 3408 2526 V 171 w(6,)g(5)p 3653
2526 V 171 w(7)p 3898 2526 V 170 w(7,)g(5)p 4142 2526
V -38 2529 4184 4 v -38 2628 4 100 v 13 2599 a Fz(V)16
b FI(\()r Fz(x)5 b FI(\))p 227 2628 V 153 w(0)p 472 2628
V 184 w(98)p 717 2628 V 145 w(169)p 961 2628 V 125 w(216)p
1206 2628 V 124 w(242)p 1451 2628 V 125 w(250)p 1695
2628 V 125 w(243)p 1940 2628 V 124 w(224)p 2185 2628
V 125 w(196)p 2429 2628 V 125 w(162)p 2674 2628 V 124
w(125)p 2919 2628 V 145 w(88)p 3164 2628 V 165 w(54)p
3408 2628 V 165 w(26)p 3653 2628 V 185 w(7)p 3898 2628
V 204 w(0)p 4142 2628 V -38 2632 4184 4 v 0 TeXcolorgray
0 TeXcolorgray 1034 3843 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 245.64108 a add def
/d 0.0 a add neg def /h 137.90868 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1034 3843 a 1270 3666 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.18834 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33865
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 17 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 116.57002 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22636
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 217.18834  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 217.18834  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 116.57002  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 116.57002
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.18834
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 116.57002  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 116.57002  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 217.18834  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.42677  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 116.57002
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.18834
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1255 3763 a FG(0)205 b(1)g(2)h(3)f(4)g(5)g(6)g(7)1181
3686 y(0)1151 3508 y(50)1120 3331 y(100)1120 3154 y(150)1120
2977 y(200)1270 3666 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 7.5 def
/dx x1 x sub 199 div def /F@pstplot (225.0*x-60.0*x^(2.0)+4.0*x^(3.0))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
0.42677 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x dx
add def xy  dup 1.e30 0.42677 mul gt { moveto } { dup -1.e30 0.42677
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 0.42677 mul gt { moveto } { dup
-1.e30 0.42677 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
3073 3843 a
currentpoint initclip moveto
 3073 3843 a -38 4051 a FI(C)o(onclusion)19
b(:)f(d)n('apr\350s)f(le)h(gr)o(aphique)o(,)h(le)e(volume)i(est)f
(maximal)h(lorsque)h Fz(x)g FE(\306)14 b FI(2,)8 b(5.)-246
4198 y
SDict begin H.S end
 -246 4198 a -246 4198 a
SDict begin 12 H.A end
 -246 4198 a -246 4198
a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -246 4198 a 131 x FK(5)105 b(P)o(r)o(obabilit\351s)-246
4413 y
SDict begin H.S end
 -246 4413 a -246 4413 a
SDict begin 12 H.A end
 -246 4413 a -246 4413
a
SDict begin [/View [/XYZ H.V]/Dest (exo.61) cvn /DEST pdfmark end
 -246 4413 a -246 4398 a
SDict begin H.S end
 -246 4398 a -246 4398 a
SDict begin 12 H.A end
 -246
4398 a -246 4398 a
SDict begin [/View [/XYZ H.V]/Dest (Item.156) cvn /DEST pdfmark end
 -246 4398 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)
14 b(61)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p
0 TeXcolorgray 43 w(C)o(omme)f(on)g(ne)g(r)o(emet)g(pas)g(le)g(pr)o
(emier)g(jeton)g(av)q(ant)g(de)g(tir)o(er)g(le)g(deuxi)q(\350me,)g(il)g
(n)-6 b('e)q(st)13 b(p)q(as)g(pos)q(sible)g(d)n(')q(obtenir)g(un)h
(\253)c(double)h(\273.)-38 4612 y(L)-10 b('univers)19
b(est)f(donc)1376 4712 y Fz(U)k FE(\306)1528 4713 y FI({)1554
4712 y(\(1,)8 b(2\);)g(\(1,)g(3\);)g(\(2,)g(1\);)g(\(2,)g(3\);)g(\(3,)g
(1)q(\);)g(\(3,)g(2)q(\))2668 4713 y(})2708 4712 y(.)-246
4772 y
SDict begin H.S end
 -246 4772 a -246 4772 a
SDict begin 12 H.A end
 -246 4772 a -246 4772
a
SDict begin [/View [/XYZ H.V]/Dest (Item.157) cvn /DEST pdfmark end
 -246 4772 a 0 TeXcolorgray -141 4876 a FI(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)27 b Fz(A)17 b FI(:)d(\253)g(un)j(des)h
(jetons)g(por)q(te)g(le)g(n\2601)c(\273)j(s)m('\351cr)q(it)h(sous)g
(for)q(me)f(ensembliste)1595 5058 y Fz(A)g FE(\306)1730
5059 y FI({)1756 5058 y(\(1,)8 b(2\);)g(\(1,)g(3\);)g(\(2,)g(1\);)g
(\(3,)g(1\))2488 5059 y(})-38 5241 y(\(on)17 b(conser)q(ve)i(tous)f
(les)g(\351v\351nements)i(\351l\351mentair)o(es)f(o\371)f(appar)o
(a\356t)g(le)g(chiffr)o(e)g(1\).)-38 5405 y(Il)f(y)f(a)i(4)f(cas)h
(favor)o(ables)g(\340)23 b Fz(A)s FI(,)17 b(et)h(6)f(cas)h(possibles)h
(dans)e(l)o('univers)o(,)j(donc)d Fz(P)8 b FI(\()e Fz(A)s
FI(\))13 b FE(\306)2423 5372 y FG(4)p 2423 5385 31 5
v 2423 5434 a(6)2477 5405 y FE(\306)2557 5372 y FG(2)p
2557 5385 V 2557 5434 a(3)2597 5405 y FI(.)-246 5500
y
SDict begin H.S end
 -246 5500 a -246 5500 a
SDict begin 12 H.A end
 -246 5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (exo.62) cvn /DEST pdfmark end
 -246
5500 a 0 TeXcolorgray 1909 5895 a FI(34)p 0 TeXcolorgray
eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.35) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.158) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(62)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(L)-10 b('univers)19 b(est)419 20 y
Fz(U)k FE(\306)572 21 y FI({)598 20 y(\(1,)8 b(1\);)g(\(1,)g(2\);)g
(\(1,)g(3\);)g(\(1,)g(4\);)g(\(2,)g(1\);)g(\(2)q(,)g(2)q(\);)g(\(2,)g
(3)q(\);)g(\(2,)h(4\);)f(\(3,)h(1\);)f(\(3)q(,)g(2)q(\);)g(\(3,)g(3)q
(\);)g(\(3,)h(4\);)f(\(4,)h(1\);)f(\(4)q(,)g(2)q(\);)g(\(4,)g(3)q(\);)g
(\(4,)h(4\))3624 21 y(})3664 20 y(.)-38 203 y(Il)17 b(compor)q(te)g(4)
10 b FE(\243)g FI(4)16 b FE(\306)e FI(16)k(\351l\351ments)o(.)-246
234 y
SDict begin H.S end
 -246 234 a -246 234 a
SDict begin 12 H.A end
 -246 234 a -246 234 a
SDict begin [/View [/XYZ H.V]/Dest (Item.159) cvn /DEST pdfmark end
 -246
234 a 0 TeXcolorgray -141 331 a FI(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)21 b Fz(B)h FI(:)14 b(\253)g(au)j(moins)i
(l)o('un)f(des)g(deux)f(d\351s)h(tombe)g(sur)f(4)d(\273)j(s)m('\351cr)q
(it)h(sous)g(for)q(me)g(ensembliste)1303 514 y Fz(B)k
FE(\306)1442 515 y FI({)1468 514 y(\(1,)8 b(4\);)g(\(2,)g(4\);)g(\(3,)g
(4\);)g(\(4,)g(1\);)g(\(4,)g(2\);)h(\(4,)f(3)q(\);)g(\(4,)g(4)q(\))2773
515 y(})-38 697 y(\(on)17 b(conser)q(ve)i(tous)f(les)g
(\351v\351nements)i(\351l\351mentair)o(es)f(o\371)f(appar)o(a\356t)g
(au)g(moins)g(un)g(4\).)-38 811 y(Il)f(y)f(a)i(7)f(cas)h(favor)o(ables)
g(\340)f Fz(B)5 b FI(.)-246 844 y
SDict begin H.S end
 -246 844 a -246 844
a
SDict begin 12 H.A end
 -246 844 a -246 844 a
SDict begin [/View [/XYZ H.V]/Dest (Item.160) cvn /DEST pdfmark end
 -246 844 a 0 TeXcolorgray -141
940 a FI(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17 b(les)h(questions)h
(pr\351c\351dentes)o(,)h Fz(P)8 b FI(\()p Fz(B)f FI(\))14
b FE(\306)1446 907 y FG(7)p 1431 920 62 5 v 1431 969
a(16)1502 940 y FI(.)-246 1035 y
SDict begin H.S end
 -246 1035 a -246 1035
a
SDict begin 12 H.A end
 -246 1035 a -246 1035 a
SDict begin [/View [/XYZ H.V]/Dest (exo.63) cvn /DEST pdfmark end
 -246 1035 a -246 1054 a
SDict begin H.S end
 -246
1054 a -246 1054 a
SDict begin 12 H.A end
 -246 1054 a -246 1054 a
SDict begin [/View [/XYZ H.V]/Dest (Item.161) cvn /DEST pdfmark end
 -246 1054
a 0 TeXcolorgray 85 x FJ(Ex)o(er)o(cice)g(63)p 0 TeXcolorgray
0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray 43 w(L)-10
b('univers)19 b(est)895 1322 y Fz(U)j FE(\306)1047 1323
y FI({)1073 1322 y(RRR)q(;)8 b(RRB)q(;)g(RBR)q(;)g(RBB)q(;)g(BRR)q(;)g
(BRB)q(;)g(BBR)q(;)g(BBB)r(;)g(VRR)q(;)g(VRB)q(;)g(VBR)q(;)g(VBB)3155
1323 y(})3189 1322 y(.)-38 1504 y(Il)17 b(compor)q(te)g(3)10
b FE(\243)g FI(2)g FE(\243)g FI(2)17 b FE(\306)d FI(12)k
(\351l\351ments)p 0 0 1 TeXcolorrgb 1162 1504 a
SDict begin H.S end
 1162
1504 a -30 x FG(6)1200 1504 y
SDict begin 12 H.L end
 1200 1504 a 1200 1504 a
SDict begin [/Subtype /Link/Dest (Hfootnote.6) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end

1200 1504 a 0 TeXcolorgray FI(.)-246 1536 y
SDict begin H.S end
 -246 1536
a -246 1536 a
SDict begin 12 H.A end
 -246 1536 a -246 1536 a
SDict begin [/View [/XYZ H.V]/Dest (Item.162) cvn /DEST pdfmark end
 -246 1536 a 0 TeXcolorgray
-141 1633 a FI(2.)p 0 TeXcolorgray 43 w(Le)g(contr)o(air)o(e)f(de)1249
1733 y Fz(A)g FI(:)e(\253)f(la)j(tenue)h(du)f(footballeur)i(compor)q
(te)f(du)f(bleu)d(\273)-38 1882 y(est)p 1114 2029 57
5 v 1120 2096 a Fz(A)j FI(:)e(\253)f(la)j(tenue)h(du)f(footballeur)i
FJ(ne)d FI(compor)q(te)i FJ(pas)f FI(de)g(bleu)d(\273.)-38
2246 y(Il)j(s)m('\351cr)q(it)g(sous)h(for)q(me)g(ensembliste)p
1796 2279 V 1802 2345 a Fz(A)f FE(\306)1937 2346 y FI({)1963
2345 y(RRR;)8 b(VRR)2285 2346 y(})-38 2495 y(\226)17
b(il)h(n)-6 b('y)17 b(a)g(que)h(deux)g(tenues)h(qui)f(n)-6
b('ont)18 b(pas)g(de)f(bleu)9 b(!)-38 2676 y(On)17 b(en)h(d\351duit)f
Fz(P)493 2589 y Fr(\263)p 525 2610 V 531 2676 a Fz(A)582
2589 y Fr(\264)628 2676 y FE(\306)722 2644 y FG(2)p 707
2657 62 5 v 707 2705 a(12)778 2676 y FI(,)h(puis)1426
2839 y Fz(P)8 b FI(\()e Fz(A)s FI(\))13 b FE(\306)h FI(1)c
FE(\241)g Fz(P)1852 2752 y Fr(\263)p 1885 2773 57 5 v
1891 2839 a Fz(A)1942 2752 y Fr(\264)1987 2839 y FE(\306)2066
2783 y FI(12)p 2066 2820 82 5 v 2066 2896 a(12)2168 2839
y FE(\241)2263 2783 y FI(2)p 2243 2820 V 2243 2896 a(12)2348
2839 y FE(\306)2427 2783 y FI(10)p 2427 2820 V 2427 2896
a(12)2532 2839 y FE(\306)2611 2783 y FI(5)p 2611 2820
41 5 v 2611 2896 a(6)2662 2839 y(.)-246 2963 y
SDict begin H.S end
 -246 2963
a -246 2963 a
SDict begin 12 H.A end
 -246 2963 a -246 2963 a
SDict begin [/View [/XYZ H.V]/Dest (exo.64) cvn /DEST pdfmark end
 -246 2963 a -246
2982 a
SDict begin H.S end
 -246 2982 a -246 2982 a
SDict begin 12 H.A end
 -246 2982 a -246 2982
a
SDict begin [/View [/XYZ H.V]/Dest (Item.163) cvn /DEST pdfmark end
 -246 2982 a 0 TeXcolorgray 80 x FJ(Ex)o(er)o(cice)k(64)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(Il)25 b(y)h(a)g(6)h(choix)f(possibles)i(pour)f(le)f(vainqueur)i
(de)e(la)g(course)o(,)g(puis)i(5)e(pour)h(le)f(deuxi\350me)i(\(puisqu)n
('il)g(est)f(diff\351r)o(ent)g(du)-38 3161 y(vainqueur\))9
b(;)18 b(et)g(en\002n)f(4)h(pour)g(le)f(troisi\350me)o(.)i(Donc)e(au)g
(total)1815 3344 y(6)10 b FE(\243)g FI(5)g FE(\243)g
FI(4)17 b FE(\306)d FI(120)-38 3527 y(podiums)19 b(diff\351r)o(ents)f
(possibles)o(.)-246 3558 y
SDict begin H.S end
 -246 3558 a -246 3558 a
SDict begin 12 H.A end
 -246
3558 a -246 3558 a
SDict begin [/View [/XYZ H.V]/Dest (Item.164) cvn /DEST pdfmark end
 -246 3558 a 0 TeXcolorgray -141 3655
a FI(2.)p 0 TeXcolorgray 43 w(I)o(maginons)g(que)f(les)i(chevaux)f
(soient)g(num\351rot\351s)h(de)e(1)h(\340)f(12)h(et)g(que)g(le)f
(classement)j(de)d(la)g(course)h(soit)p 0 TeXcolorgray
0 TeXcolorgray 1019 3799 a(1)1059 3775 y Fe(er)1122 3799
y FI(:)f(Cheval)h(n\2607)271 b(2)1838 3775 y Fe(e)1882
3799 y FI(:)17 b(Cheval)h(n\2604)271 b(3)2598 3775 y
Fe(e)2642 3799 y FI(:)17 b(Cheval)h(n\26010)-38 3942
y(Dans)f(ce)g(cas)o(,)h(le)f(tier)o(c\351)h(dans)f(l)o('or)o(dr)o(e)g
(est)h(\(7,)8 b(4,)g(10\))19 b(;)e(et)h(les)g(tier)o(c\351s)g(dans)f
(le)h(d\351sor)o(dr)o(e)e(sont)1263 4125 y(\(4,)8 b(7,)g(10\))20
b(;)25 b(\(4,)8 b(10,)g(7\))20 b(;)8 b(\(10,)g(7,)g(4\))20
b(;)8 b(\(10,)g(4,)g(7\))19 b(;)8 b(\(7,)g(10,)g(4\).)-38
4322 y(Il)17 b(y)f(a)i(5)f(cas)h(favor)o(ables)g(\340)f
Fz(T)t FI(,)g(donc)1756 4457 y Fz(P)8 b FI(\()p Fz(T)k
FI(\))i FE(\306)2056 4400 y FI(5)p 2016 4437 122 5 v
2016 4514 a(120)2162 4457 y FE(\306)2261 4400 y FI(1)p
2241 4437 82 5 v 2241 4514 a(24)2332 4457 y(.)-246 4580
y
SDict begin H.S end
 -246 4580 a -246 4580 a
SDict begin 12 H.A end
 -246 4580 a -246 4580 a
SDict begin [/View [/XYZ H.V]/Dest (exo.65) cvn /DEST pdfmark end
 -246
4580 a -246 4599 a
SDict begin H.S end
 -246 4599 a -246 4599 a
SDict begin 12 H.A end
 -246 4599
a -246 4599 a
SDict begin [/View [/XYZ H.V]/Dest (Item.165) cvn /DEST pdfmark end
 -246 4599 a 0 TeXcolorgray 80 x FJ(Ex)o(er)o(cice)g(65)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(On)j(r)o(aisonne)h(comme)h(dans)e(l)o('exer)o(cice)h
(pr\351c\351dent)g(:)g(il)g(y)f(a)g(8)10 b FE(\243)g
FI(7)g FE(\243)g FI(6)16 b FE(\306)e FI(336)19 b(podiums)f(possibles)o
(.)-246 4712 y
SDict begin H.S end
 -246 4712 a -246 4712 a
SDict begin 12 H.A end
 -246 4712 a -246
4712 a
SDict begin [/View [/XYZ H.V]/Dest (Item.166) cvn /DEST pdfmark end
 -246 4712 a 0 TeXcolorgray -141 4808 a FI(2.)p
0 TeXcolorgray 43 w(On)25 b(va)h(r)o(egar)o(der)e(l)o('\351v\351nement)
29 b(contr)o(air)o(e)c(et)h(r\351pondr)o(e)g(\340)f(la)h(question)i(:)d
(\253)16 b(C)o(ombien)27 b(y)e(a-t-il)i(de)e(podiums)i
FJ(ne)e FI(compor)q(tant)i FJ(aucun)-38 4907 y FI(Am\351r)q(icain)9
b(?)14 b(\273)-38 5022 y(C)o(omme)19 b(5)e(des)h(8)g(par)q(ticipants)g
(ne)g(sont)g(pas)g(Am\351r)q(icains)o(,)g(le)f(nombr)o(e)h(de)f
(podiums)h(sans)g(aucun)g(Am\351r)q(icain)f(est)h(5)10
b FE(\243)g FI(4)g FE(\243)g FI(3)17 b FE(\306)d FI(60.)-38
5186 y(On)j(r)o(evient)h(\340)f(la)h(question)h(initiale)g(:)e(il)h(r)o
(este)g(336)10 b FE(\241)g FI(60)17 b FE(\306)d FI(276)k(podiums)h
(avec)f(au)f(moins)i(un)e(Am\351r)q(icain.)-246 5269
y
SDict begin H.S end
 -246 5269 a -246 5269 a
SDict begin 12 H.A end
 -246 5269 a -246 5269 a
SDict begin [/View [/XYZ H.V]/Dest (exo.66) cvn /DEST pdfmark end
 -246
5269 a 0 TeXcolorgray -246 5239 1757 4 v -154 5316 a
Ft(6)q(.)p 0 TeXcolorgray -76 5316 a
SDict begin H.S end
 -76 5316 a -76 5316
a
SDict begin H.R end
 -76 5316 a -76 5316 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.6) cvn /DEST pdfmark
end
 -76 5316 a 0 TeXcolorgray Ft(L)-8
b('op\351r)o(ation)18 b(3)9 b Fd(\243)g Ft(2)g Fd(\243)g
Ft(2)18 b(vient)f(du)f(fait)h(qu)n('il)g(y)g(a)f(trois)g(couleurs)h(de)
g(maillot,)g(2)g(couleurs)h(de)e(short)h(et)g(2)g(couleurs)h(de)e
(chaussettes)o(.)h(On)f(pourr)o(ait)h(r)o(epr\351senter)g(la)f
(situation)-246 5395 y(avec)e(un)g(arbr)o(e)f(pour)h(\352tr)o(e)g
(s\373r)f(de)h(n)-5 b('oublier)13 b(aucune)i(tenue)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1909 5895 a FI(35)p 0 TeXcolorgray
eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.36) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FJ(Ex)o(er)o(cice)14
b(66)p 0 TeXcolorgray 41 w FI(On)h(r)o(egroupe)f(la)h(corr)o(ection)g
(des)g(deux)g(questions)o(.)i(On)d(utilise)j(des)e(symboles)h
(diff\351r)o(ents)g(pour)f(chacun)g(des)g(\351v\351nements)o(,)k(mais)
-246 -63 y(un)f(seul)g(tableau)g(suf\002t)g(:)1030 219
y FE(~)152 b Fz(A)17 b FI(:)e(\253)f(la)j(somme)h(des)g(deux)f(faces)h
(est)g(\351gale)g(\340)f(5)d(\273)j(;)1030 344 y FE(|)147
b Fz(B)22 b FI(:)15 b(\253)f(exactement)k(un)g(des)f(deux)h(d\351s)f
(tombe)h(sur)g(4)c(\273)j(;)1030 468 y FE(})144 b Fz(C)23
b FI(:)15 b(\253)f(on)j(tir)o(e)g(deux)g(num\351ros)i(impairs)14
b(\273.)p 0 TeXcolorgray 0 TeXcolorgray 1272 593 1357
4 v 1272 792 4 200 v 1325 762 a(D\351)j(1)1581 662 y(D\351)g(2)1276
792 y
 save /setgray { pop } def
 1276 792 a @beginspecial @setspecial
  0.99626401 0.99626401 scale 0.39998 setlinewidth  0 24 moveto 61.69995
0 lineto stroke
 
@endspecial
1276 792 a
 restore
 1276 792 a 1788 792 4 200 v 1888 714 a FI(1)p
2027 792 V 161 w(2)p 2189 792 V 140 w(3)p 2386 792 V
178 w(4)p 2625 792 V 1272 795 1357 4 v 1272 895 4 100
v 1511 865 a(1)p 1788 895 V 328 w FE(})p 2027 895 V 2189
895 V 321 w(})p 2386 895 V 121 w(~)g(|)p 2625 895 V 1272
898 1357 4 v 1272 998 4 100 v 1511 968 a FI(2)p 1788
998 V 2027 998 V 2189 998 V 708 w FE(~)p 2386 998 V 159
w(|)p 2625 998 V 1272 1001 1357 4 v 1272 1101 4 100 v
1511 1071 a FI(3)p 1788 1101 V 328 w FE(})p 2027 1101
V 142 w(~)p 2189 1101 V 120 w(})p 2386 1101 V 159 w(|)p
2625 1101 V 1272 1104 1357 4 v 1272 1204 4 100 v 1511
1174 a FI(4)p 1788 1204 V 290 w FE(~)g(|)p 2027 1204
V 104 w(|)p 2189 1204 V 120 w(|)p 2386 1204 V 2625 1204
V 1272 1207 1357 4 v -246 1355 a FI(Il)g(y)g(a)g(4)10
b FE(\243)g FI(4)15 b FE(\306)g FI(16)j(cases)g(dans)f(le)h(tableau.)g
(Il)f(y)f(a)i(4)p FE(~)p FI(,)g(6)p FE(|)g FI(et)g(4)p
FE(})g FI(dans)f(le)h(tableau,)g(donc)1025 1573 y Fz(P)8
b FI(\()e Fz(A)s FI(\))14 b FE(\306)1304 1517 y FI(4)p
1284 1554 82 5 v 1284 1630 a(16)1389 1573 y FE(\306)1468
1517 y FI(1)p 1468 1554 41 5 v 1468 1630 a(4)1519 1573
y(,)154 b Fz(P)8 b FI(\()p Fz(B)f FI(\))15 b FE(\306)1972
1517 y FI(6)p 1951 1554 82 5 v 1951 1630 a(16)2057 1573
y FE(\306)2136 1517 y FI(3)p 2136 1554 41 5 v 2136 1630
a(8)2186 1573 y(,)155 b Fz(P)8 b FI(\()n Fz(C)h FI(\))k
FE(\306)2640 1517 y FI(4)p 2620 1554 82 5 v 2620 1630
a(16)2725 1573 y FE(\306)2804 1517 y FI(1)p 2804 1554
41 5 v 2804 1630 a(4)2854 1573 y(.)-246 1713 y
SDict begin H.S end
 -246 1713
a -246 1713 a
SDict begin 12 H.A end
 -246 1713 a -246 1713 a
SDict begin [/View [/XYZ H.V]/Dest (exo.67) cvn /DEST pdfmark end
 -246 1713 a 0 TeXcolorgray
82 x FJ(Ex)o(er)o(cice)h(67)p 0 TeXcolorgray 41 w FI(On)j(place)h(dans)
g(un)g(tableau)f(un)h(symbole)g(pour)g(chaque)g(\351v\351nement)i(:)
1036 1978 y FE(~)153 b Fz(A)17 b FI(:)d(\253)g(la)j(F)o(r)o(ance)g
(joue)d(\273)k(;)1037 2102 y FE(|)146 b Fz(B)23 b FI(:)14
b(\253)g(le)j(match)h(oppose)h(la)f(F)o(r)o(ance)f(\340)g(l)o
('Allemagne)d(\273)19 b(;)1036 2227 y FE(\304)145 b Fz(C)23
b FI(:)14 b(\253)g(le)j(match)h(oppose)h(deux)f(pays)f(du)g(Benelux)d
(\273)q(.)p 0 TeXcolorgray 0 TeXcolorgray 1195 2351 1510
4 v 1195 2451 4 100 v 1424 2451 V 1481 2421 a(F)o(r)o(a)p
1646 2451 V 120 w(All)p 1868 2451 V 117 w(I)n(ta)p 2062
2451 V 103 w(Bel)p 2274 2451 V 103 w(PB)p 2472 2451 V
104 w(L)o(ux)p 2701 2451 V 1195 2454 1510 4 v 1195 2554
4 100 v 1256 2524 a(F)o(r)o(a)p 1424 2554 V 0 TeXcolorgray
1427 2554 219 100 v 0 TeXcolorgray 1646 2554 4 100 v
331 w FE(~|)p 1868 2554 V 120 w(~)p 2062 2554 V 144 w(~)p
2274 2554 V 146 w(~)p 2472 2554 V 155 w(~)p 2701 2554
V 1195 2557 1510 4 v 1195 2657 4 100 v 1266 2627 a FI(All)p
1424 2657 V 120 w FE(~|)p 1646 2657 V 0 TeXcolorgray
1649 2657 219 100 v 0 TeXcolorgray 1868 2657 4 100 v
2062 2657 V 2274 2657 V 2472 2657 V 2701 2657 V 1195
2660 1510 4 v 1195 2760 4 100 v 1266 2730 a FI(I)n(ta)p
1424 2760 V 150 w FE(~)p 1646 2760 V 1868 2760 V 0 TeXcolorgray
1871 2760 191 100 v 0 TeXcolorgray 2062 2760 4 100 v
2274 2760 V 2472 2760 V 2701 2760 V 1195 2763 1510 4
v 1195 2863 4 100 v 1257 2833 a FI(Bel)p 1424 2863 V
141 w FE(~)p 1646 2863 V 1868 2863 V 2062 2863 V 0 TeXcolorgray
2065 2863 210 100 v 0 TeXcolorgray 2274 2863 4 100 v
779 w(\304)p 2472 2863 V 155 w(\304)p 2701 2863 V 1195
2866 1510 4 v 1195 2966 4 100 v 1264 2936 a FI(PB)p 1424
2966 V 148 w FE(~)p 1646 2966 V 1868 2966 V 2062 2966
V 574 w(\304)p 2274 2966 V 0 TeXcolorgray 2277 2966 195
100 v 0 TeXcolorgray 2472 2966 4 100 v 360 w(\304)p 2701
2966 V 1195 2969 1510 4 v 1195 3069 4 100 v 1249 3039
a FI(L)o(ux)p 1424 3069 V 133 w FE(~)p 1646 3069 V 1868
3069 V 2062 3069 V 574 w(\304)p 2274 3069 V 146 w(\304)p
2472 3069 V 0 TeXcolorgray 2476 3069 226 100 v 0 TeXcolorgray
2701 3069 4 100 v 1195 3072 1510 4 v -246 3220 a Fs(")p
FI(Il)j(faut)h(ex)o(clur)o(e)g(la)g(diagonale)o(,)f(car)g(une)h
(\351quipe)g(ne)g(peut)h(jouer)f(contr)o(e)f(elle-m\352me)o(.)i(Il)e(n)
-6 b('y)17 b(a)g(donc)g(que)h(30)h(cases)o(.)-246 3370
y(D)o('apr\350s)e(le)h(tableau)g(:)1339 3503 y Fz(P)8
b FI(\()e Fz(A)s FI(\))14 b FE(\306)1598 3446 y FI(10)p
1598 3483 82 5 v 1598 3560 a(30)1703 3503 y FE(\306)1782
3446 y FI(1)p 1782 3483 41 5 v 1782 3560 a(3)1833 3503
y(,)154 b Fz(P)8 b FI(\()p Fz(B)f FI(\))15 b FE(\306)2285
3446 y FI(2)p 2265 3483 82 5 v 2265 3560 a(30)2370 3503
y FE(\306)2470 3446 y FI(1)p 2450 3483 V 2450 3560 a(15)2541
3503 y(.)-246 3725 y(Les)g(pays)f(du)g(Benelux)h(sont)g(la)f(Belgique)o
(,)h(les)g(P)m(ays-B)o(as)f(\(N)n(ederland\))f(et)h(le)h(L)o
(uxembourg,)f(d)n('o\371)h(les)f FE(\304)h FI(en)f(bas)g(\340)g(droite)
f(du)h(tableau.)h(On)f(obtient)-246 3824 y Fz(P)8 b FI(\()n
Fz(C)h FI(\))14 b FE(\306)29 3792 y FG(6)p 13 3805 62
5 v 13 3853 a(30)99 3824 y FE(\306)178 3792 y FG(1)p
178 3805 31 5 v 178 3853 a(5)219 3824 y FI(.)-246 3920
y
SDict begin H.S end
 -246 3920 a -246 3920 a
SDict begin 12 H.A end
 -246 3920 a -246 3920 a
SDict begin [/View [/XYZ H.V]/Dest (exo.68) cvn /DEST pdfmark end
 -246
3920 a 0 TeXcolorgray 104 x FJ(Ex)o(er)o(cice)g(68)p
0 TeXcolorgray 41 w FI(On)j(place)h(dans)g(un)g(tableau)f(un)h(symbole)
g(pour)g(chaque)g(\351v\351nement)i(:)833 4206 y FE(~)153
b Fz(A)17 b FI(:)d(\253)g(les)k(deux)g(jetons)g(choisis)h(sont)f
(identiques)c(\273)19 b(;)834 4331 y FE(|)147 b Fz(B)22
b FI(:)14 b(\253)g(exactement)19 b(un)f(des)f(deux)h(jetons)h(r)o
(epr\351sente)f(un)g(visage)c(\273)j(;)p 0 TeXcolorgray
0 TeXcolorgray 1444 4580 1013 4 v 1444 4680 4 100 v 1614
4680 V 1667 4650 a FC(.)p 1783 4680 V 103 w(G)-65 b(#)p
1951 4680 V 109 w(\013)p 2113 4680 V 109 w(,)p 2283 4680
V 103 w(/)p 2453 4680 V 1444 4683 1013 4 v 1444 4783
4 100 v 1497 4753 a(.)p 1614 4783 V 106 w FE(~)p 1783
4783 V 1951 4783 V 2113 4783 V 441 w(|)p 2283 4783 V
111 w(|)p 2453 4783 V 1444 4786 1013 4 v 1444 4885 4
100 v 1498 4856 a FC(G)g(#)p 1614 4885 V 1783 4885 V
276 w FE(~)p 1951 4885 V 2113 4885 V 272 w(|)p 2283 4885
V 111 w(|)p 2453 4885 V 1444 4889 1013 4 v 1444 4988
4 100 v 1507 4959 a FC(\013)p 1614 4988 V 1783 4988 V
1951 4988 V 451 w FE(~)p 2113 4988 V 107 w(|)p 2283 4988
V 111 w(|)p 2453 4988 V 1444 4992 1013 4 v 1444 5091
4 100 v 1497 5061 a FC(,)p 1614 5091 V 106 w FE(|)p 1783
5091 V 110 w(|)p 1951 5091 V 106 w(|)p 2113 5091 V 107
w(~)p 2283 5091 V 2453 5091 V 1444 5095 1013 4 v 1444
5194 4 100 v 1497 5164 a FC(/)p 1614 5194 V 106 w FE(|)p
1783 5194 V 110 w(|)p 1951 5194 V 106 w(|)p 2113 5194
V 2283 5194 V 277 w(~)p 2453 5194 V 1444 5198 1013 4
v -246 5346 a FI(On)18 b(obtient)g(:)1431 5463 y Fz(P)8
b FI(\()e Fz(A)s FI(\))14 b FE(\306)1710 5407 y FI(5)p
1690 5444 82 5 v 1690 5520 a(25)1795 5463 y FE(\306)1874
5407 y FI(1)p 1874 5444 41 5 v 1874 5520 a(5)1925 5463
y(,)154 b Fz(P)8 b FI(\()p Fz(B)f FI(\))15 b FE(\306)2357
5407 y FI(12)p 2357 5444 82 5 v 2357 5520 a(25)2448 5463
y(.)-246 5587 y
SDict begin H.S end
 -246 5587 a -246 5587 a
SDict begin 12 H.A end
 -246 5587 a -246
5587 a
SDict begin [/View [/XYZ H.V]/Dest (exo.69) cvn /DEST pdfmark end
 -246 5587 a 0 TeXcolorgray 1909 5895 a FI(36)p
0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.37) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FJ(Ex)o(er)o(cice)14
b(69)p 0 TeXcolorgray 41 w FI(P)n(our)j(simpli\002er)i(et)f(sans)g(r)q
(ien)f(enlever)h(\340)f(la)h(g\351n\351r)o(alit\351)h(du)e(r)o
(aisonnement,)j(on)d(suppose)i(que)f(les)h(questions)g(sont)f
(num\351rot\351es)-246 -63 y(de)f(1)h(\340)f(6)h(en)g(histoir)o(e)g(et)
f(de)h(1)f(\340)g(5)h(en)g(g\351ogr)o(aphie)o(,)g(et)f(que)h(le)g
(candidat)f(conna\356t)h(les)g(questions)h(n\2601,)f(2,)g(3)g(en)g
(histoir)o(e)o(,)g(n\2601)f(et)h(2)g(en)f(g\351ogr)o(aphie)o(.)-246
37 y(Dans)g(le)h(tableau)g(ci-dessous)o(,)h(les)f(questions)h(connues)g
(sont)f(\351cr)q(ites)f(en)h(bleu,)g(les)g(questions)h(inconnues)g
(sont)f(\351cr)q(ites)g(en)g(rouge)o(.)-246 184 y(On)g(a)f(color)q
(i\351)g(les)h(cases)g(de)f(trois)g(couleurs)i(:)p 0
TeXcolorgray -76 283 a(\225)p 0 TeXcolorgray 42 w(en)e(ver)q(t)h(:)f
(le)h(candidat)f(conna\356t)h(les)g(deux)f(questions)9
b(;)p 0 TeXcolorgray -76 383 a(\225)p 0 TeXcolorgray
42 w(en)17 b(or)o(ange)h(:)f(le)h(candidat)f(conna\356t)h(une)g(seule)h
(des)e(deux)h(questions)9 b(;)p 0 TeXcolorgray -76 483
a(\225)p 0 TeXcolorgray 42 w(en)17 b(magenta)h(:)g(le)g(candidat)f(ne)g
(conna\356t)h(aucune)g(des)g(deux)f(questions)o(.)p 0
TeXcolorgray 0 TeXcolorgray 1275 590 1350 4 v 1275 790
4 200 v 1328 759 a(G\351o)1569 660 y(H)o(ist)1279 790
y
 save /setgray { pop } def
 1279 790 a @beginspecial @setspecial
  0.99626401 0.99626401 scale 0.39998 setlinewidth  0 24 moveto 58.03992
0 lineto stroke
 
@endspecial 1279
790 a
 restore
 1279 790 a 1761 790 4 200 v 0 0 1 TeXcolorrgb 1814
712 a FI(1)p 0 TeXcolorgray 1904 790 V 0 0 1 TeXcolorrgb
103 w(2)p 0 TeXcolorgray 2047 790 V 0 0 1 TeXcolorrgb
104 w(3)p 0 TeXcolorgray 2191 790 V 1 0 0 TeXcolorrgb
103 w(4)p 0 TeXcolorgray 2334 790 V 1 0 0 TeXcolorrgb
104 w(5)p 0 TeXcolorgray 2478 790 V 1 0 0 TeXcolorrgb
103 w(6)p 0 TeXcolorgray 2621 790 V 1275 793 1350 4 v
1275 893 4 100 v 0 0 1 TeXcolorrgb 1499 863 a(1)p 0 TeXcolorgray
1761 893 V 0 1 0 TeXcolorrgb 1764 893 141 100 v 0 TeXcolorgray
1904 893 4 100 v 0 1 0 TeXcolorrgb 1907 893 141 100 v
0 TeXcolorgray 2047 893 4 100 v 0 1 0 TeXcolorrgb 2051
893 141 100 v 0 TeXcolorgray 2191 893 4 100 v 1 0.5 0
TeXcolorrgb 2194 893 141 100 v 0 TeXcolorgray 2334 893
4 100 v 1 0.5 0 TeXcolorrgb 2338 893 141 100 v 0 TeXcolorgray
2478 893 4 100 v 1 0.5 0 TeXcolorrgb 2481 893 141 100
v 0 TeXcolorgray 2621 893 4 100 v 1275 896 1350 4 v 1275
996 4 100 v 0 0 1 TeXcolorrgb 1499 966 a(2)p 0 TeXcolorgray
1761 996 V 0 1 0 TeXcolorrgb 1764 996 141 100 v 0 TeXcolorgray
1904 996 4 100 v 0 1 0 TeXcolorrgb 1907 996 141 100 v
0 TeXcolorgray 2047 996 4 100 v 0 1 0 TeXcolorrgb 2051
996 141 100 v 0 TeXcolorgray 2191 996 4 100 v 1 0.5 0
TeXcolorrgb 2194 996 141 100 v 0 TeXcolorgray 2334 996
4 100 v 1 0.5 0 TeXcolorrgb 2338 996 141 100 v 0 TeXcolorgray
2478 996 4 100 v 1 0.5 0 TeXcolorrgb 2481 996 141 100
v 0 TeXcolorgray 2621 996 4 100 v 1275 999 1350 4 v 1275
1098 4 100 v 1 0 0 TeXcolorrgb 1499 1069 a(3)p 0 TeXcolorgray
1761 1098 V 1 0.5 0 TeXcolorrgb 1764 1098 141 100 v 0
TeXcolorgray 1904 1098 4 100 v 1 0.5 0 TeXcolorrgb 1907
1098 141 100 v 0 TeXcolorgray 2047 1098 4 100 v 1 0.5 0
TeXcolorrgb 2051 1098 141 100 v 0 TeXcolorgray 2191 1098
4 100 v 0 1 0 0 TeXcolorcmyk 2194 1098 141 100 v 0 TeXcolorgray
2334 1098 4 100 v 0 1 0 0 TeXcolorcmyk 2338 1098 141
100 v 0 TeXcolorgray 2478 1098 4 100 v 0 1 0 0 TeXcolorcmyk
2481 1098 141 100 v 0 TeXcolorgray 2621 1098 4 100 v
1275 1102 1350 4 v 1275 1201 4 100 v 1 0 0 TeXcolorrgb
1499 1172 a(4)p 0 TeXcolorgray 1761 1201 V 1 0.5 0 TeXcolorrgb
1764 1201 141 100 v 0 TeXcolorgray 1904 1201 4 100 v
1 0.5 0 TeXcolorrgb 1907 1201 141 100 v 0 TeXcolorgray
2047 1201 4 100 v 1 0.5 0 TeXcolorrgb 2051 1201 141 100
v 0 TeXcolorgray 2191 1201 4 100 v 0 1 0 0 TeXcolorcmyk
2194 1201 141 100 v 0 TeXcolorgray 2334 1201 4 100 v
0 1 0 0 TeXcolorcmyk 2338 1201 141 100 v 0 TeXcolorgray
2478 1201 4 100 v 0 1 0 0 TeXcolorcmyk 2481 1201 141
100 v 0 TeXcolorgray 2621 1201 4 100 v 1275 1205 1350
4 v 1275 1304 4 100 v 1 0 0 TeXcolorrgb 1499 1274 a(5)p
0 TeXcolorgray 1761 1304 V 1 0.5 0 TeXcolorrgb 1764 1304
141 100 v 0 TeXcolorgray 1904 1304 4 100 v 1 0.5 0 TeXcolorrgb
1907 1304 141 100 v 0 TeXcolorgray 2047 1304 4 100 v
1 0.5 0 TeXcolorrgb 2051 1304 141 100 v 0 TeXcolorgray
2191 1304 4 100 v 0 1 0 0 TeXcolorcmyk 2194 1304 141
100 v 0 TeXcolorgray 2334 1304 4 100 v 0 1 0 0 TeXcolorcmyk
2338 1304 141 100 v 0 TeXcolorgray 2478 1304 4 100 v
0 1 0 0 TeXcolorcmyk 2481 1304 141 100 v 0 TeXcolorgray
2621 1304 4 100 v 1275 1308 1350 4 v -246 1450 a(C)o(onclusion)j(:)d
(il)h(y)f(a)g(6)10 b FE(\243)g FI(5)15 b FE(\306)f FI(30)19
b(cases)e(au)h(total,)g(6)g(ver)q(tes)g(et)f(15)h(or)o(anges)o(,)h
(donc)e(:)p 0 TeXcolorgray -76 1550 a(\225)p 0 TeXcolorgray
42 w(la)g(probabilit\351)h(que)g(le)f(candidat)g(connaisse)i(les)f
(deux)g(questions)h(est)2176 1517 y FG(6)p 2161 1530
62 5 v 2161 1579 a(30)2247 1550 y FE(\306)2326 1517 y
FG(1)p 2326 1530 31 5 v 2326 1579 a(5)2384 1550 y FI(;)p
0 TeXcolorgray -76 1659 a(\225)p 0 TeXcolorgray 42 w(la)e
(probabilit\351)h(que)g(le)f(candidat)g(connaisse)i(une)f(seule)h(des)e
(deux)h(questions)h(est)2532 1626 y FG(15)p 2532 1639
62 5 v 2532 1687 a(30)2618 1659 y FE(\306)2697 1626 y
FG(1)p 2697 1639 31 5 v 2697 1687 a(2)2738 1659 y FI(.)-246
1752 y
SDict begin H.S end
 -246 1752 a -246 1752 a
SDict begin 12 H.A end
 -246 1752 a -246 1752
a
SDict begin [/View [/XYZ H.V]/Dest (exo.70) cvn /DEST pdfmark end
 -246 1752 a -246 1770 a
SDict begin H.S end
 -246 1770 a -246 1770 a
SDict begin 12 H.A end
 -246
1770 a -246 1770 a
SDict begin [/View [/XYZ H.V]/Dest (Item.167) cvn /DEST pdfmark end
 -246 1770 a 0 TeXcolorgray 85 x FJ(Ex)o(er)o(cice)14
b(70)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g(de)f(l)o
('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 901 1938 2305 4 v 901 2037
4 100 v 1477 2037 V 1530 2007 a(VT)q(T)p 2052 2037 V
2103 1991 149 4 v 432 w(VT)q(T)p 2628 2037 4 100 v 433
w(T)-8 b(otal)p 3203 2037 V 901 2041 2305 4 v 901 2140
4 100 v 954 2110 a(Escalade)p 1477 2140 V 273 w(3)p 2052
2140 V 535 w(7)p 2628 2140 V 536 w(10)p 3203 2140 V 901
2144 2305 4 v 901 2243 4 100 v 952 2197 84 4 v 954 2213
a(Es)p 1031 2197 82 4 v(ca)p 1109 2197 151 4 v(lade)p
1477 2243 4 100 v 273 w(13)p 2052 2243 V 495 w(9)p 2628
2243 V 536 w(22)p 3203 2243 V 901 2247 2305 4 v 901 2346
4 100 v 954 2316 a(T)g(otal)p 1477 2346 V 406 w(16)p
2052 2346 V 495 w(16)p 2628 2346 V 496 w(32)p 3203 2346
V 901 2350 2305 4 v -38 2517 a FJ(R)o(emarque)16 b(:)k
FI(on)h(sait)f(qu)n('il)h(y)f(a)g(autant)g(d)n('\351l\350ves)i(qui)e
(pr)o(atiquent)i(le)f(VT)q(T)g(que)g(d)n('\351l\350ves)h(qui)e(ne)h(le)
f(pr)o(atiquent)i(pas)o(,)f(donc)f(16)h(\351l\350ves)g(le)-38
2616 y(pr)o(atiquent)e(et)f(16)g(ne)g(le)f(pr)o(atiquent)j(pas)o(.)-246
2647 y
SDict begin H.S end
 -246 2647 a -246 2647 a
SDict begin 12 H.A end
 -246 2647 a -246 2647
a
SDict begin [/View [/XYZ H.V]/Dest (Item.168) cvn /DEST pdfmark end
 -246 2647 a 0 TeXcolorgray -141 2743 a FI(2.)p 0 TeXcolorgray
43 w(P)m(ar)d(lectur)o(e)h(du)f(tableau)h(:)f Fz(P)8
b FI(\()e Fz(A)s FI(\))14 b FE(\306)1044 2710 y FG(3)p
1029 2723 62 5 v 1029 2772 a(32)1117 2743 y FI(et)k Fz(P)8
b FI(\()p Fz(B)f FI(\))15 b FE(\306)1474 2710 y FG(9)p
1458 2723 V 1458 2772 a(32)1530 2743 y FI(.)-38 2904
y(Le)g(calcul)f(du)g(nombr)o(e)h(de)f(cas)g(favor)o(ables)h(\340)d
Fz(C)23 b FI(est)15 b(moins)g(\351vident)h(et)e(peut)i(\352tr)o(e)e
(men\351)h(de)f(plusieurs)i(fa\347ons)f(diff\351r)o(entes)o(.)g(P)m(ar)
f(exemple)i(:)p 0 TeXcolorgray 7 3017 a(\225)p 0 TeXcolorgray
42 w(ajouter)25 b(ceux)h(qui)f(font)h(du)f(VT)q(T)h(\340)f(ceux)g(qui)g
(font)h(de)f(l)o('escalade)o(,)g(puis)h(r)o(etr)o(ancher)f(les)h
(\351l\350ves)g(qui)g(pr)o(atiquent)g(les)g(deux)f(spor)q(ts)80
3117 y(\(sinon)18 b(ils)g(sont)g(compt\351s)h(deux)e(fois\))h(:)g(16)10
b FE(\305)g FI(10)g FE(\241)g FI(3)17 b FE(\306)d FI(23.)p
0 TeXcolorgray 7 3216 a(\225)p 0 TeXcolorgray 42 w(ajouter)g(ceux)g
(qui)g(ne)g(font)g(que)g(du)g(VT)q(T)-8 b(,)14 b(ceux)g(qui)g(ne)g
(font)g(que)g(de)g(l)o('escalade)o(,)g(et)g(ceux)g(qui)g(pr)o(atiquent)
g(les)g(deux)g(spor)q(ts)g(:)g(13)r FE(\305)q FI(7)r
FE(\305)q FI(3)21 b FE(\306)80 3316 y FI(23.)p 0 TeXcolorgray
7 3416 a(\225)p 0 TeXcolorgray 42 w(r)o(emarquer)c(que)f
Fz(C)26 b FI(est)18 b(le)f(contr)o(air)o(e)h(de)f Fz(B)25
b FI(et)18 b(donc)f(fair)o(e)g(le)h(calcul)f(:)h(32)10
b FE(\241)g FI(9)16 b FE(\306)e FI(23.)p 0 TeXcolorgray
7 3515 a(\225)p 0 TeXcolorgray 42 w(etc)o(.)-38 3629
y(Dans)j(tous)h(les)g(cas)f(on)h(obtient)g Fz(P)8 b FI(\()n
Fz(C)h FI(\))k FE(\306)1201 3596 y FG(23)p 1201 3609
V 1201 3657 a(32)1272 3629 y FI(.)-246 3722 y
SDict begin H.S end
 -246 3722
a -246 3722 a
SDict begin 12 H.A end
 -246 3722 a -246 3722 a
SDict begin [/View [/XYZ H.V]/Dest (exo.71) cvn /DEST pdfmark end
 -246 3722 a -246
3740 a
SDict begin H.S end
 -246 3740 a -246 3740 a
SDict begin 12 H.A end
 -246 3740 a -246 3740
a
SDict begin [/View [/XYZ H.V]/Dest (Item.169) cvn /DEST pdfmark end
 -246 3740 a 0 TeXcolorgray 84 x FJ(Ex)o(er)o(cice)h(71)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compl\351ter)h(le)g(tableau,)g(on)g(calcule)g(:)p
0 TeXcolorgray 7 3923 a(\225)p 0 TeXcolorgray 42 w(5\045)f(de)h(10)12
b(000)20 b(valent)e(500)9 b(;)p 0 TeXcolorgray 7 4023
a(\225)p 0 TeXcolorgray 42 w(10)f(000)i FE(\241)g FI(500)18
b FE(\306)d FI(9)8 b(500)h(;)p 0 TeXcolorgray 7 4122
a(\225)p 0 TeXcolorgray 42 w(4\045)17 b(de)h(9)12 b(500)19
b(valent)f(380)9 b(;)p 0 TeXcolorgray 7 4222 a(\225)p
0 TeXcolorgray 42 w(on)17 b(compl\350te)i(le)f(r)o(este)g(du)f(tableau)
h(avec)f(des)h(additions/soustr)o(actions)o(.)p 0 TeXcolorgray
0 TeXcolorgray 980 4305 2149 4 v 980 4405 4 100 v 1477
4405 V 1530 4375 a(Animaux)g(sains)p 2085 4405 V 104
w(Animaux)g(malades)p 2807 4405 V 126 w(T)-8 b(otal)p
3125 4405 V 980 4408 2149 4 v 980 4508 4 100 v 1043 4478
a(T)g(est)18 b(positif)p 1477 4508 V 307 w(380)p 2085
4508 V 545 w(500)p 2807 4508 V 400 w(880)p 3125 4508
V 980 4511 2149 4 v 980 4611 4 100 v 1033 4581 a(T)-8
b(est)18 b(n\351gatif)p 1477 4611 V 270 w(9)12 b(120)p
2085 4611 V 559 w(0)p 2807 4611 V 413 w(9)g(120)p 3125
4611 V 980 4614 2149 4 v 980 4714 4 100 v 1144 4684 a(T)-8
b(otal)p 1477 4714 V 382 w(9)12 b(500)p 2085 4714 V 519
w(500)p 2807 4714 V 353 w(10)g(000)p 3125 4714 V 980
4717 2149 4 v -246 4758 a
SDict begin H.S end
 -246 4758 a -246 4758 a
SDict begin 12 H.A end
 -246
4758 a -246 4758 a
SDict begin [/View [/XYZ H.V]/Dest (Item.170) cvn /DEST pdfmark end
 -246 4758 a -246 4758 a
SDict begin H.S end
 -246 4758
a -246 4758 a
SDict begin 12 H.A end
 -246 4758 a -246 4758 a
SDict begin [/View [/XYZ H.V]/Dest (Item.171) cvn /DEST pdfmark end
 -246 4758 a 0 TeXcolorgray
-141 4887 a FI(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 41 w Fz(P)c FI(\()r Fz(M)f FI(\))14
b FE(\306)471 4831 y FI(500)p 426 4868 211 5 v 426 4944
a(10)8 b(000)661 4887 y FE(\306)14 b FI(0,)8 b(05)19
b(\(c)n('est)f(le)g(5)g(\045)f(d\351j\340)g(donn\351)h(par)f(l)o
('\351nonc\351\).)145 5074 y Fz(P)8 b FI(\()p Fz(T)k
FI(\))i FE(\306)449 5017 y FI(880)p 405 5054 V 405 5130
a(10)8 b(000)640 5074 y FE(\306)14 b FI(0,)8 b(088.)-246
5145 y
SDict begin H.S end
 -246 5145 a -246 5145 a
SDict begin 12 H.A end
 -246 5145 a -246 5145
a
SDict begin [/View [/XYZ H.V]/Dest (Item.172) cvn /DEST pdfmark end
 -246 5145 a 0 TeXcolorgray 4 5223 a FI(\(b\))p 0 TeXcolorgray
41 w(500)24 b(des)e(880)i(animaux)g(ayant)f(un)g(test)g(positif)i(sont)
e(malades)o(,)h(donc)e(la)h(probabilit\351)g(qu)n('un)h(animal)f(ayant)
g(un)g(test)g(positif)i(soit)145 5323 y(malade)17 b(est)544
5290 y FG(500)p 544 5303 93 5 v 544 5352 a(880)661 5323
y FE(\274)d FI(57\045.)-246 5366 y
SDict begin H.S end
 -246 5366 a -246 5366
a
SDict begin 12 H.A end
 -246 5366 a -246 5366 a
SDict begin [/View [/XYZ H.V]/Dest (Item.173) cvn /DEST pdfmark end
 -246 5366 a 0 TeXcolorgray
12 5450 a FI(\(c\))p 0 TeXcolorgray 41 w(T)-8 b(ous)18
b(les)g(animaux)h(malades)f(ont)g(un)f(test)i(positif,)g(donc)e(la)g
(probabilit\351)h(qu)n('un)g(animal)g(malade)g(ait)g(un)g(test)g
(positif)h(est)f(1.)-246 5532 y
SDict begin H.S end
 -246 5532 a -246 5532
a
SDict begin 12 H.A end
 -246 5532 a -246 5532 a
SDict begin [/View [/XYZ H.V]/Dest (exo.72) cvn /DEST pdfmark end
 -246 5532 a -246 5550 a
SDict begin H.S end
 -246
5550 a -246 5550 a
SDict begin 12 H.A end
 -246 5550 a -246 5550 a
SDict begin [/View [/XYZ H.V]/Dest (Item.174) cvn /DEST pdfmark end
 -246 5550
a 0 TeXcolorgray 96 x FJ(Ex)o(er)o(cice)c(72)p 0 TeXcolorgray
0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)
g(donn\351es)g(de)f(l)o('\351nonc\351)i(par)f(un)f(tableau)h(d)n
('effectifs)i(:)p 0 TeXcolorgray 1909 5895 a(37)p 0 TeXcolorgray
eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.38) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 370 -242
3368 4 v 370 -143 4 100 v 1300 -143 V 1353 -173 a FI(A)o(bonn\351s)17
b(au)h(soir)p 2111 -143 V 257 w(P)m(as)g(abonn\351s)g(au)f(soir)p
2923 -143 V 132 w(T)-8 b(otal)p 3734 -143 V 370 -139
3368 4 v 370 -40 4 100 v 423 -70 a(A)o(bonn\351s)18 b(au)f(matin)p
1300 -40 V 300 w(50)p 2111 -40 V 731 w(20)p 2923 -40
V 732 w(70)p 3734 -40 V 370 -36 3368 4 v 370 63 4 100
v 423 33 a(P)m(as)g(abonn\351s)h(au)g(matin)p 1300 63
V 174 w(50)p 2111 63 V 731 w(160)p 2923 63 V 692 w(210)p
3734 63 V 370 66 3368 4 v 370 166 4 100 v 423 136 a(T)-8
b(otal)p 1300 166 V 760 w(100)p 2111 166 V 691 w(180)p
2923 166 V 692 w(280)p 3734 166 V 370 169 3368 4 v -246
207 a
SDict begin H.S end
 -246 207 a -246 207 a
SDict begin 12 H.A end
 -246 207 a -246 207 a
SDict begin [/View [/XYZ H.V]/Dest (Item.175) cvn /DEST pdfmark end
 -246
207 a -246 207 a
SDict begin H.S end
 -246 207 a -246 207 a
SDict begin 12 H.A end
 -246 207 a -246
207 a
SDict begin [/View [/XYZ H.V]/Dest (Item.176) cvn /DEST pdfmark end
 -246 207 a 0 TeXcolorgray -141 317 a FI(2.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w Fz(P)8 b FI(\()p Fz(S)d FI(\))13 b FE(\306)392 285
y FG(100)p 392 298 93 5 v 392 346 a(280)640 317 y Fz(P)703
230 y Fr(\263)p 735 251 80 5 v 737 317 a Fz(M)815 230
y Fr(\264)861 317 y FE(\306)940 285 y FG(210)p 940 298
93 5 v 940 346 a(280)1042 317 y FI(.)-246 377 y
SDict begin H.S end
 -246
377 a -246 377 a
SDict begin 12 H.A end
 -246 377 a -246 377 a
SDict begin [/View [/XYZ H.V]/Dest (Item.177) cvn /DEST pdfmark end
 -246 377 a 0 TeXcolorgray
4 455 a FI(\(b\))p 0 TeXcolorgray 41 w(La)k(probabilit\351)h(que)g(le)f
(pensionnair)o(e)i(soit)f(abonn\351)g(aux)f(deux)h(jour)q(naux)g(est)
1864 682 y Fz(P)1927 683 y FI(\()1954 682 y Fz(S)d FE(\\)d
Fz(M)2154 683 y FI(\))2195 682 y FE(\306)2295 626 y FI(50)p
2275 663 122 5 v 2275 739 a(280)2406 682 y(.)-246 782
y
SDict begin H.S end
 -246 782 a -246 782 a
SDict begin 12 H.A end
 -246 782 a -246 782 a
SDict begin [/View [/XYZ H.V]/Dest (Item.178) cvn /DEST pdfmark end
 -246 782
a 0 TeXcolorgray 12 874 a FI(\(c\))p 0 TeXcolorgray 41
w(On)17 b(choisit)h(au)g(hasar)o(d)e(un)i(pensionnair)o(e)h(abonn\351)e
(au)h Fz(Matin)p FI(.)f(La)h(probabilit\351)g(qu)n('il)g(soit)g(aussi)g
(abonn\351)g(au)f Fz(Soir)j FI(est)3760 841 y FG(50)p
3760 854 62 5 v 3760 903 a(70)3832 874 y FI(.)-246 966
y
SDict begin H.S end
 -246 966 a -246 966 a
SDict begin 12 H.A end
 -246 966 a -246 966 a
SDict begin [/View [/XYZ H.V]/Dest (exo.73) cvn /DEST pdfmark end
 -246 966
a -246 983 a
SDict begin H.S end
 -246 983 a -246 983 a
SDict begin 12 H.A end
 -246 983 a -246 983
a
SDict begin [/View [/XYZ H.V]/Dest (Item.179) cvn /DEST pdfmark end
 -246 983 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(73)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(Les)k(nombr)o(es)f(pairs)h(sont)g(2,)g(4,)g(6,)g(.)10
b(.)g(.,)19 b(100.)g(Il)e(y)f(en)i(a)f(50,)i(donc)1752
1270 y Fz(P)8 b FI(\()e Fz(A)s FI(\))14 b FE(\306)2031
1214 y FI(50)p 2011 1251 122 5 v 2011 1327 a(100)2157
1270 y FE(\306)g FI(0,)8 b(5.)-38 1475 y(Les)18 b(multiples)i(de)d(5)h
(sont)1243 1575 y(5)d FE(\306)f FI(5)c FE(\243)p 1 0 0
TeXcolorrgb 10 w FI(1)p 0 TeXcolorgray 1 w(,)26 b(10)15
b FE(\306)f FI(5)c FE(\243)p 1 0 0 TeXcolorrgb 10 w FI(2)p
0 TeXcolorgray 1 w(,)26 b(15)15 b FE(\306)f FI(5)c FE(\243)p
1 0 0 TeXcolorrgb 10 w FI(3)p 0 TeXcolorgray 1 w(,)26
b FE(\242)8 b(\242)g(\242)17 b FI(,)26 b(100)16 b FE(\306)e
FI(5)c FE(\243)p 1 0 0 TeXcolorrgb 10 w FI(20)p 0 TeXcolorgray
2 w(.)-38 1717 y(Il)17 b(y)f(en)i(a)f(20,)i(donc)1753
1851 y Fz(P)8 b FI(\()p Fz(B)f FI(\))14 b FE(\306)2031
1795 y FI(20)p 2010 1832 V 2010 1908 a(100)2156 1851
y FE(\306)g FI(0,)8 b(2.)-246 1951 y
SDict begin H.S end
 -246 1951 a -246
1951 a
SDict begin 12 H.A end
 -246 1951 a -246 1951 a
SDict begin [/View [/XYZ H.V]/Dest (Item.180) cvn /DEST pdfmark end
 -246 1951 a 0 TeXcolorgray
-141 2028 a FI(2.)p 0 TeXcolorgray 43 w(L)-10 b('\351v\351nement)28
b Fz(A)14 b FE(\\)d Fz(B)25 b FI(s)m('\351cr)q(it)18
b(\253)c(le)19 b(nombr)o(e)f(est)h(pair)g(et)g(multiple)i(de)d(5)c
(\273,)19 b(ou)f(de)g(fa\347on)h(plus)h(simple)g(\(et)e(plus)i
(explicite\))g(\253)14 b(le)19 b(nombr)o(e)f(est)-38
2128 y(multiple)i(de)d(10)d(\273.)-246 2157 y
SDict begin H.S end
 -246 2157
a -246 2157 a
SDict begin 12 H.A end
 -246 2157 a -246 2157 a
SDict begin [/View [/XYZ H.V]/Dest (Item.181) cvn /DEST pdfmark end
 -246 2157 a 0 TeXcolorgray
-141 2252 a FI(3.)p 0 TeXcolorgray 43 w(Les)k(multiples)i(de)d(10)i
(sont)f(10,)g(20,)g(30,)h(.)10 b(.)g(.,)19 b(100.)g(Il)d(y)h(en)h(a)f
(10,)i(donc)1687 2457 y Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d
Fz(B)d FI(\))14 b FE(\306)2097 2401 y FI(10)p 2077 2438
122 5 v 2077 2514 a(100)2222 2457 y FE(\306)g FI(0,)8
b(1.)-38 2650 y(D)o('apr\350s)17 b(une)h(for)q(mule)g(du)f(cours)h(:)
1088 2820 y Fz(P)8 b FI(\()e Fz(A)13 b FE([)d Fz(B)d
FI(\))14 b FE(\306)h Fz(P)8 b FI(\()e Fz(A)s FI(\))k
FE(\305)g Fz(P)e FI(\()p Fz(B)f FI(\))j FE(\241)g Fz(P)e
FI(\()e Fz(A)13 b FE(\\)d Fz(B)d FI(\))15 b FE(\306)f
FI(0,)8 b(5)i FE(\305)g FI(0,)e(2)i FE(\241)g FI(0,)e(1)19
b FE(\306)14 b FI(0,)8 b(6.)-246 2901 y
SDict begin H.S end
 -246 2901 a -246
2901 a
SDict begin 12 H.A end
 -246 2901 a -246 2901 a
SDict begin [/View [/XYZ H.V]/Dest (exo.74) cvn /DEST pdfmark end
 -246 2901 a -246 2910
a
SDict begin H.S end
 -246 2910 a -246 2910 a
SDict begin 12 H.A end
 -246 2910 a -246 2910 a
SDict begin [/View [/XYZ H.V]/Dest (Item.182) cvn /DEST pdfmark end
 -246
2910 a 0 TeXcolorgray 101 x FJ(Ex)o(er)o(cice)14 b(74)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)19 b Fz(A)s FE([)p Fz(B)6
b FI(,)13 b(s)m('\351cr)q(it)g(\253)e(au)i(moins)h(l)o(')q(un)f(des)h
(deux)f(f)q(eux)h(est)g(ver)q(t)d(\273.)i(C)o(et)g(\351)q(v\351n)q(eme)
q(nt)g(s)q(e)g(produit)g(\340)h(coup)f(s)q(\373r)-5 b(,)14
b(pui)q(sque)-38 3111 y(les)k(deux)g(feux)g(ne)f(sont)h(jamais)h(tous)f
(les)g(deux)g(rouges)f(en)g(m\352me)i(temps)g(\(cf)e(\351nonc\351\).)h
(On)g(a)f(donc)1833 3281 y Fz(P)8 b FI(\()e Fz(A)13 b
FE([)d Fz(B)d FI(\))15 b FE(\306)f FI(1.)-246 3361 y
SDict begin H.S end

-246 3361 a -246 3361 a
SDict begin 12 H.A end
 -246 3361 a -246 3361 a
SDict begin [/View [/XYZ H.V]/Dest (Item.183) cvn /DEST pdfmark end
 -246
3361 a 0 TeXcolorgray -141 3463 a FI(2.)p 0 TeXcolorgray
43 w(L)-10 b('\351v\351nement)21 b(\253)14 b(Pierr)o(e)i(a)h(les)h
(deux)g(feux)g(ver)q(ts)c(\273)34 b(s)m('\351cr)q(it)24
b Fz(A)13 b FE(\\)d Fz(B)c FI(,)18 b(donc)f(d)n('apr\350s)g(une)i(for)q
(mule)f(du)f(cours)o(,)h(sa)f(probabilit\351)h(est)g(:)1122
3633 y Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d Fz(B)d FI(\))15
b FE(\306)f Fz(P)8 b FI(\()e Fz(A)s FI(\))k FE(\305)g
Fz(P)e FI(\()p Fz(B)f FI(\))j FE(\241)g Fz(P)e FI(\()e
Fz(A)13 b FE([)d Fz(B)d FI(\))15 b FE(\306)g FI(0,)8
b(8)i FE(\305)g FI(0,)e(5)i FE(\241)g FI(1)18 b FE(\306)c
FI(0,)8 b(3.)-246 3714 y
SDict begin H.S end
 -246 3714 a -246 3714 a
SDict begin 12 H.A end
 -246
3714 a -246 3714 a
SDict begin [/View [/XYZ H.V]/Dest (exo.75) cvn /DEST pdfmark end
 -246 3714 a -246 3723 a
SDict begin H.S end
 -246 3723
a -246 3723 a
SDict begin 12 H.A end
 -246 3723 a -246 3723 a
SDict begin [/View [/XYZ H.V]/Dest (Item.184) cvn /DEST pdfmark end
 -246 3723 a 0 TeXcolorgray
101 x FJ(Ex)o(er)o(cice)14 b(75)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 43 w(On)j(suppose)i(que)f
Fz(P)8 b FI(\()e Fz(A)s FI(\))14 b FE(\306)g FI(0,)8
b(4,)19 b Fz(P)8 b FI(\()p Fz(B)f FI(\))15 b FE(\306)f
FI(0,)8 b(6)18 b(et)g Fz(P)8 b FI(\()e Fz(A)13 b FE([)d
Fz(B)d FI(\))15 b FE(\306)f FI(0,)8 b(9.)-246 3851 y
SDict begin H.S end

-246 3851 a -246 3851 a
SDict begin 12 H.A end
 -246 3851 a -246 3851 a
SDict begin [/View [/XYZ H.V]/Dest (Item.185) cvn /DEST pdfmark end
 -246
3851 a 0 TeXcolorgray 10 3946 a FI(\(a\))p 0 TeXcolorgray
41 w(D)o('apr\350s)17 b(une)h(for)q(mule)g(du)f(cours)o(,)1179
4116 y Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d Fz(B)d FI(\))15
b FE(\306)f Fz(P)8 b FI(\()e Fz(A)s FI(\))k FE(\305)g
Fz(P)e FI(\()p Fz(B)f FI(\))j FE(\241)g Fz(P)e FI(\()e
Fz(A)13 b FE([)d Fz(B)d FI(\))15 b FE(\306)g FI(0,)8
b(4)i FE(\305)g FI(0,)e(6)i FE(\241)g FI(0,)e(9)18 b
FE(\306)d FI(0,)8 b(1.)-246 4197 y
SDict begin H.S end
 -246 4197 a -246 4197
a
SDict begin 12 H.A end
 -246 4197 a -246 4197 a
SDict begin [/View [/XYZ H.V]/Dest (Item.186) cvn /DEST pdfmark end
 -246 4197 a 0 TeXcolorgray
4 4298 a FI(\(b\))p 0 TeXcolorgray 41 w(D)o('un)17 b(c\364t\351)g
Fz(P)8 b FI(\()e Fz(A)s FI(\))k FE(\243)g Fz(P)e FI(\()p
Fz(B)f FI(\))15 b FE(\306)f FI(0,)8 b(4)i FE(\243)g FI(0,)e(6)17
b FE(\306)d FI(0,)8 b(24)19 b(;)f(de)f(l)o('autr)o(e)h
Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d Fz(B)d FI(\))15 b
FE(\306)f FI(0,)8 b(1.)145 4410 y(C)o(onclusion)19 b(:)e
Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d Fz(B)d FI(\))15 b
FE(6\306)f Fz(P)8 b FI(\()e Fz(A)s FI(\))k FE(\243)g
Fz(P)e FI(\()p Fz(B)f FI(\),)18 b(donc)23 b Fz(A)d FI(et)e
Fz(B)25 b FI(ne)18 b(sont)g(pas)f(ind\351pendants)o(.)-246
4438 y
SDict begin H.S end
 -246 4438 a -246 4438 a
SDict begin 12 H.A end
 -246 4438 a -246 4438
a
SDict begin [/View [/XYZ H.V]/Dest (Item.187) cvn /DEST pdfmark end
 -246 4438 a -246 4438 a
SDict begin H.S end
 -246 4438 a -246 4438 a
SDict begin 12 H.A end
 -246
4438 a -246 4438 a
SDict begin [/View [/XYZ H.V]/Dest (Item.188) cvn /DEST pdfmark end
 -246 4438 a 0 TeXcolorgray -141 4532
a FI(2.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(L)-10 b('\351v\351nement)26 b Fz(A)13
b FE(\\)d Fz(B)25 b FI(s)m('\351cr)q(it)18 b(\253)c(la)j(car)q(te)g
(est)h(un)g(roi)e(rouge)e(\273.)j(Il)g(y)f(a)i(deux)f(rois)g(rouges)g
(dans)h(le)f(jeu,)i(donc)1737 4737 y Fz(P)8 b FI(\()e
Fz(A)13 b FE(\\)d Fz(B)d FI(\))15 b FE(\306)2148 4681
y FI(2)p 2127 4718 82 5 v 2127 4794 a(32)2233 4737 y
FE(\306)f FI(0,)8 b(0625.)-246 4865 y
SDict begin H.S end
 -246 4865 a -246
4865 a
SDict begin 12 H.A end
 -246 4865 a -246 4865 a
SDict begin [/View [/XYZ H.V]/Dest (Item.189) cvn /DEST pdfmark end
 -246 4865 a 0 TeXcolorgray
4 4957 a FI(\(b\))p 0 TeXcolorgray 41 w(Il)16 b(y)h(a)g(16)h(car)q(tes)
f(rouges)h(dans)f(le)h(jeu,)g(donc)f Fz(P)8 b FI(\()e
Fz(A)s FI(\))14 b FE(\306)1750 4924 y FG(16)p 1750 4937
62 5 v 1750 4986 a(32)1836 4957 y FE(\306)g FI(0,)8 b(5.)145
5078 y(Il)16 b(y)h(a)g(4)h(rois)f(dans)g(le)h(jeu,)g(donc)g
Fz(P)8 b FI(\()p Fz(B)f FI(\))14 b FE(\306)1397 5045
y FG(4)p 1381 5058 V 1381 5107 a(32)1467 5078 y FE(\306)g
FI(0,)8 b(125.)145 5190 y Fz(P)g FI(\()e Fz(A)s FI(\))k
FE(\243)g Fz(P)e FI(\()p Fz(B)f FI(\))14 b FE(\306)g
FI(0,)8 b(5)i FE(\243)g FI(0,)e(125)18 b FE(\306)d FI(0,)8
b(0625)17 b FE(\306)d Fz(P)8 b FI(\()e Fz(A)13 b FE(\\)d
Fz(B)d FI(\),)18 b(donc)23 b Fz(A)d FI(et)e Fz(B)25 b
FI(sont)18 b(ind\351pendants)o(.)145 5347 y FJ(R)o(emarque)f(:)k
FI(Le)h(mot)f(\253)15 b(ind\351pendants)h(\273)42 b(est)22
b(confor)q(me)f(\340)g(l)o('id\351e)h(intuitive)h(que)f(l)o('on)g(s)m
('en)g(fait)f(:)g(deux)h(\351v\351nements)i(sont)d(ind\351-)145
5446 y(pendants)16 b(lorsque)h(la)e(r\351alisation)i(de)f(l)o('un)g(n)
-6 b('a)16 b(pas)g(d)n('incidence)g(sur)g(celle)g(de)g(l)o('autr)o(e)o
(.)g(Dans)e(l)o('exemple)19 b(de)c(la)h(question)h(2,)f(si)g(vous)145
5546 y(savez)g(que)h(la)f(car)q(te)g(est)h(rouge)o(,)f(cela)h(ne)g
(change)f(pas)h(la)g(probabilit\351)f(que)h(ce)g(soit)g(un)g(roi)9
b(;)16 b(et)g(r\351ciproquement,)j(si)e(vous)g(savez)f(que)145
5646 y(c)n('est)h(un)h(roi,)f(vous)h(n)-6 b('en)18 b(tir)o(ez)f(aucune)
h(infor)q(mation)h(sur)e(sa)g(couleur)-5 b(.)p 0 TeXcolorgray
1909 5895 a(38)p 0 TeXcolorgray eop end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.39) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.190) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(3.)p 0 TeXcolorgray 43 w(Dans)17 b(cette)h(question,)h(on)e
(suppose)j(que)e Fz(P)8 b FI(\()e Fz(A)s FI(\))13 b FE(\306)h
FI(0,)8 b(4,)19 b Fz(P)8 b FI(\()e Fz(A)13 b FE([)d Fz(B)d
FI(\))15 b FE(\306)f FI(0,)8 b(7)19 b(;)e(et)h(que)g(les)g
(\351v\351nements)26 b Fz(A)20 b FI(et)e Fz(B)25 b FI(sont)18
b(ind\351pendants)o(.)-38 -1 y(D)o('apr\350s)f(une)h(for)q(mule)g(du)f
(cours)h(et)g(la)f(propr)q(i\351t\351)h(d)n('ind\351pendance)g(:)625
290 y Fz(P)8 b FI(\()e Fz(A)13 b FE([)d Fz(B)d FI(\))15
b FE(\306)f Fz(P)8 b FI(\()e Fz(A)s FI(\))k FE(\305)g
Fz(P)e FI(\()p Fz(B)f FI(\))j FE(\241)g Fz(P)e FI(\()e
Fz(A)13 b FE(\\)d Fz(B)d FI(\))625 414 y Fz(P)h FI(\()e
Fz(A)13 b FE([)d Fz(B)d FI(\))15 b FE(\306)f Fz(P)8 b
FI(\()e Fz(A)s FI(\))k FE(\305)g Fz(P)e FI(\()p Fz(B)f
FI(\))j FE(\241)g Fz(P)e FI(\()e Fz(A)s FI(\))k FE(\243)g
Fz(P)e FI(\()p Fz(B)f FI(\))664 b(\(on)17 b(utilise)i(l)o
('ind\351pendance)r(\))812 539 y(0,)8 b(7)16 b FE(\306)e
FI(0,)8 b(4)i FE(\305)g Fz(P)e FI(\()p Fz(B)f FI(\))j
FE(\241)g FI(0,)e(4)i FE(\243)g Fz(P)e FI(\()p Fz(B)f
FI(\))812 663 y(0,)h(7)16 b FE(\306)e FI(0,)8 b(4)i FE(\305)i
Fz(x)j FE(\241)10 b FI(0,)e(4)r Fz(x)1096 b FI(\(on)17
b(pose)j Fz(x)g FE(\306)14 b Fz(P)8 b FI(\()p Fz(B)f
FI(\)\))812 788 y(0,)h(7)16 b FE(\306)e FI(0,)8 b(4)i
FE(\305)g FI(0,)e(6)r Fz(x)627 913 y FI(0,)g(7)i FE(\241)g
FI(0,)e(4)18 b FE(\306)997 924 y Fy(\010)1040 902 y(\010)1005
913 y FI(0,)8 b(4)j FE(\305)f FI(0,)e(6)r Fz(x)15 b FE(\241)1410
924 y Fy(\010)1455 902 y(\010)1418 913 y FI(0,)8 b(4)1028
b(\(on)17 b(r\351sout)h(l)o('\351quation)r(\))802 1027
y(0,)8 b(3)p 802 1064 110 5 v 802 1140 a(0,)g(6)936 1084
y FE(\306)1006 1038 y Fy(\010)1049 1017 y(\010)1015 1027
y FI(0,)g(6)s Fz(x)p 1015 1064 156 5 v 1030 1151 a Fy(\010)1073
1130 y(\010)1038 1140 y FI(0,)g(6)812 1254 y(0,)g(5)16
b FE(\306)g Fz(x)5 b FI(.)-38 1446 y(C)o(onclusion)19
b(:)f Fz(P)8 b FI(\()p Fz(B)f FI(\))14 b FE(\306)h FI(0,)8
b(5.)-246 1584 y
SDict begin H.S end
 -246 1584 a -246 1584 a
SDict begin 12 H.A end
 -246 1584 a
-246 1584 a
SDict begin [/View [/XYZ H.V]/Dest (section.15) cvn /DEST pdfmark end
 -246 1584 a 138 x FK(15)105 b(F)l(ractions)23
b(et)g(manipulation)g(de)g(for)q(mules)-246 1831 y
SDict begin H.S end
 -246
1831 a -246 1831 a
SDict begin 12 H.A end
 -246 1831 a -246 1831 a
SDict begin [/View [/XYZ H.V]/Dest (exo.76) cvn /DEST pdfmark end
 -246 1831
a -246 1836 a
SDict begin H.S end
 -246 1836 a -246 1836 a
SDict begin 12 H.A end
 -246 1836 a -246
1836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.191) cvn /DEST pdfmark end
 -246 1836 a 0 TeXcolorgray 83 x FJ(Ex)o(er)o(cice)14
b(76)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 49 w Fz(A)j FE(\306)553 1886 y FG(1)p 553
1899 31 5 v 553 1947 a(8)604 1919 y FE(\305)679 1886
y FG(5)p 679 1899 V 679 1947 a(8)734 1919 y FE(\306)813
1886 y FG(6)p 813 1899 V 813 1947 a(8)868 1919 y FE(\306)947
1886 y FG(3)p 947 1899 V 947 1947 a(4)-246 1959 y
SDict begin H.S end
 -246
1959 a -246 1959 a
SDict begin 12 H.A end
 -246 1959 a -246 1959 a
SDict begin [/View [/XYZ H.V]/Dest (Item.192) cvn /DEST pdfmark end
 -246 1959
a 0 TeXcolorgray -141 2050 a FI(2.)p 0 TeXcolorgray 43
w Fz(B)22 b FE(\306)111 2017 y FG(2)p 111 2030 31 5 v
111 2079 a(3)162 2050 y FE(\241)237 2017 y FG(1)p 237
2030 V 237 2079 a(2)292 2050 y FE(\306)371 2017 y FG(4)p
371 2030 V 371 2079 a(6)422 2050 y FE(\241)497 2017 y
FG(3)p 497 2030 V 497 2079 a(6)552 2050 y FE(\306)631
2017 y FG(1)p 631 2030 V 631 2079 a(6)-246 2090 y
SDict begin H.S end
 -246
2090 a -246 2090 a
SDict begin 12 H.A end
 -246 2090 a -246 2090 a
SDict begin [/View [/XYZ H.V]/Dest (Item.193) cvn /DEST pdfmark end
 -246 2090
a 0 TeXcolorgray -141 2181 a FI(3.)p 0 TeXcolorgray 41
w Fz(C)h FE(\306)112 2148 y FG(5)p 112 2161 31 5 v 112
2210 a(6)163 2181 y FE(\241)238 2148 y FG(3)p 238 2161
V 238 2210 a(4)293 2181 y FE(\306)372 2148 y FG(10)p
372 2161 62 5 v 372 2210 a(12)454 2181 y FE(\241)544
2148 y FG(9)p 529 2161 V 529 2210 a(12)615 2181 y FE(\306)709
2148 y FG(1)p 694 2161 V 694 2210 a(12)-246 2221 y
SDict begin H.S end
 -246
2221 a -246 2221 a
SDict begin 12 H.A end
 -246 2221 a -246 2221 a
SDict begin [/View [/XYZ H.V]/Dest (Item.194) cvn /DEST pdfmark end
 -246 2221
a 0 TeXcolorgray -141 2312 a FI(4.)p 0 TeXcolorgray 43
w Fz(D)e FE(\306)135 2280 y FG(4)p 120 2293 62 5 v 120
2341 a(15)201 2312 y FE(\243)276 2280 y FG(5)p 276 2293
31 5 v 276 2341 a(6)331 2312 y FE(\306)426 2280 y FG(4)p
FF(\243)p FG(5)p 410 2293 135 5 v 410 2341 a(15)p FF(\243)p
FG(6)569 2312 y FE(\306)648 2280 y FG(20)p 648 2293 62
5 v 648 2341 a(90)734 2312 y FE(\306)813 2280 y FG(2)p
813 2293 31 5 v 813 2341 a(9)-246 2352 y
SDict begin H.S end
 -246 2352 a
-246 2352 a
SDict begin 12 H.A end
 -246 2352 a -246 2352 a
SDict begin [/View [/XYZ H.V]/Dest (Item.195) cvn /DEST pdfmark end
 -246 2352 a 0 TeXcolorgray
-141 2444 a FI(5.)p 0 TeXcolorgray 43 w Fz(E)h FE(\306)109
2411 y FG(5)p 109 2424 31 5 v 109 2472 a(6)160 2444 y
FE(\243)10 b FI(4)k FE(\306)359 2411 y FG(5)p FF(\243)p
FG(4)p 359 2424 104 5 v 395 2472 a(6)486 2444 y FE(\306)565
2411 y FG(20)p 565 2424 62 5 v 581 2472 a(6)651 2444
y FE(\306)730 2411 y FG(10)p 730 2424 V 745 2472 a(3)-246
2484 y
SDict begin H.S end
 -246 2484 a -246 2484 a
SDict begin 12 H.A end
 -246 2484 a -246 2484
a
SDict begin [/View [/XYZ H.V]/Dest (Item.196) cvn /DEST pdfmark end
 -246 2484 a 0 TeXcolorgray -141 2589 a FI(6.)p 0 TeXcolorgray
43 w Fz(F)24 b FE(\306)99 2525 y Fr(\241)139 2557 y FG(2)p
139 2570 31 5 v 139 2618 a(3)179 2525 y Fr(\242)209 2542
y FG(2)258 2589 y FE(\306)337 2557 y FG(2)p 337 2570
V 337 2618 a(3)388 2589 y FE(\243)463 2557 y FG(2)p 463
2570 V 463 2618 a(3)518 2589 y FE(\306)597 2557 y FG(2)p
FF(\243)p FG(2)p 597 2570 104 5 v 597 2618 a(3)p FF(\243)p
FG(3)725 2589 y FE(\306)804 2557 y FG(4)p 804 2570 31
5 v 804 2618 a(9)-246 2629 y
SDict begin H.S end
 -246 2629 a -246 2629 a
SDict begin 12 H.A end

-246 2629 a -246 2629 a
SDict begin [/View [/XYZ H.V]/Dest (Item.197) cvn /DEST pdfmark end
 -246 2629 a 0 TeXcolorgray -141
2720 a FI(7.)p 0 TeXcolorgray 41 w Fz(G)c FE(\306)113
2688 y FG(4)p 113 2701 31 5 v 113 2749 a(5)164 2720 y
FE(\245)239 2688 y FG(2)p 239 2701 V 239 2749 a(3)294
2720 y FE(\306)373 2688 y FG(4)p 373 2701 V 373 2749
a(5)424 2720 y FE(\243)499 2688 y FG(3)p 499 2701 V 499
2749 a(2)554 2720 y FE(\306)633 2688 y FG(4)p FF(\243)p
FG(3)p 633 2701 104 5 v 633 2749 a(5)p FF(\243)p FG(2)761
2720 y FE(\306)840 2688 y FG(12)p 840 2701 62 5 v 840
2749 a(10)926 2720 y FE(\306)1005 2688 y FG(6)p 1005
2701 31 5 v 1005 2749 a(5)-246 2761 y
SDict begin H.S end
 -246 2761 a -246
2761 a
SDict begin 12 H.A end
 -246 2761 a -246 2761 a
SDict begin [/View [/XYZ H.V]/Dest (Item.198) cvn /DEST pdfmark end
 -246 2761 a 0 TeXcolorgray
-141 2852 a FI(8.)p 0 TeXcolorgray 45 w Fz(H)j FE(\306)14
b FI(3)c FE(\245)241 2819 y FG(15)p 241 2832 62 5 v 256
2880 a(4)326 2852 y FE(\306)k FI(3)c FE(\243)537 2819
y FG(4)p 521 2832 V 521 2880 a(15)607 2852 y FE(\306)686
2819 y FG(3)p FF(\243)p FG(4)p 686 2832 104 5 v 707 2880
a(15)814 2852 y FE(\306)893 2819 y FG(12)p 893 2832 62
5 v 893 2880 a(15)978 2852 y FE(\306)1058 2819 y FG(4)p
1058 2832 31 5 v 1058 2880 a(5)-246 2892 y
SDict begin H.S end
 -246 2892
a -246 2892 a
SDict begin 12 H.A end
 -246 2892 a -246 2892 a
SDict begin [/View [/XYZ H.V]/Dest (Item.199) cvn /DEST pdfmark end
 -246 2892 a 0 TeXcolorgray
-141 2983 a FI(9.)p 0 TeXcolorgray 45 w Fz(I)25 b FE(\306)84
2919 y Fr(\241)123 2950 y FG(1)p 123 2963 31 5 v 123
3012 a(4)174 2983 y FE(\241)249 2950 y FG(1)p 249 2963
V 249 3012 a(6)290 2919 y Fr(\242)330 2983 y FE(\243)10
b FI(3)15 b FE(\306)519 2919 y Fr(\241)574 2950 y FG(3)p
558 2963 62 5 v 558 3012 a(12)640 2983 y FE(\241)731
2950 y FG(2)p 715 2963 V 715 3012 a(12)787 2919 y Fr(\242)826
2983 y FE(\243)10 b FI(3)15 b FE(\306)1041 2950 y FG(1)p
1025 2963 V 1025 3012 a(12)1107 2983 y FE(\243)10 b FI(3)15
b FE(\306)1321 2950 y FG(3)p 1306 2963 V 1306 3012 a(12)1392
2983 y FE(\306)1471 2950 y FG(1)p 1471 2963 31 5 v 1471
3012 a(4)-246 3023 y
SDict begin H.S end
 -246 3023 a -246 3023 a
SDict begin 12 H.A end
 -246 3023
a -246 3023 a
SDict begin [/View [/XYZ H.V]/Dest (Item.200) cvn /DEST pdfmark end
 -246 3023 a 0 TeXcolorgray -181 3114 a
FI(10.)p 0 TeXcolorgray 48 w Fz(J)22 b FE(\306)95 3081
y FG(1)p 95 3094 31 5 v 95 3143 a(3)146 3114 y FE(\305)221
3081 y FG(2)p 221 3094 V 221 3143 a(3)272 3114 y FE(\243)347
3081 y FG(4)p 347 3094 V 347 3143 a(5)402 3114 y FE(\306)481
3081 y FG(1)p 481 3094 V 481 3143 a(3)532 3114 y FE(\305)607
3081 y FG(2)p FF(\243)p FG(4)p 607 3094 104 5 v 607 3143
a(3)p FF(\243)p FG(5)735 3114 y FE(\306)829 3081 y FG(5)p
814 3094 62 5 v 814 3143 a(15)895 3114 y FE(\305)986
3081 y FG(8)p 971 3094 V 971 3143 a(15)1056 3114 y FE(\306)1135
3081 y FG(13)p 1135 3094 V 1135 3143 a(15)p 0 TeXcolorgray
0 TeXcolorgray 1992 1834 a
SDict begin H.S end
 1992 1834 a 1992 1834 a
SDict begin 12 H.A end
 1992
1834 a 1992 1834 a
SDict begin [/View [/XYZ H.V]/Dest (Item.201) cvn /DEST pdfmark end
 1992 1834 a 0 TeXcolorgray 2056 1919
a FI(11.)p 0 TeXcolorgray 43 w Fz(K)k FE(\306)2354 1886
y FG(35)p 2354 1899 62 5 v 2354 1947 a(56)2436 1919 y
FE(\243)2511 1886 y FG(72)p 2511 1899 V 2511 1947 a(45)2597
1919 y FE(\306)2676 1886 y FG(35)p FF(\243)p FG(72)p
2676 1899 165 5 v 2676 1947 a(56)p FF(\243)p FG(45)2865
1919 y FE(\306)p 1 0 0 TeXcolorrgb 2944 1886 a FG(5)p
0 TeXcolorgray FF(\243)p 0 0 1 TeXcolorrgb FG(7)p 0 TeXcolorgray
-1 w FF(\243)p 0 1 0 TeXcolorrgb FG(8)p 0 TeXcolorgray
FF(\243)p 1 0.5 0 TeXcolorrgb FG(9)p 0 TeXcolorgray 2944
1899 249 5 v 0 0 1 TeXcolorrgb 2944 1947 a(7)p 0 TeXcolorgray
FF(\243)p 0 1 0 TeXcolorrgb FG(8)p 0 TeXcolorgray -1
w FF(\243)p 1 0 0 TeXcolorrgb FG(5)p 0 TeXcolorgray FF(\243)p
1 0.5 0 TeXcolorrgb FG(9)p 0 TeXcolorgray 3217 1919 a
FE(\306)14 b FI(1)52 b(\(tout)18 b(se)f(simpli\002e\))1992
1963 y
SDict begin H.S end
 1992 1963 a 1992 1963 a
SDict begin 12 H.A end
 1992 1963 a 1992 1963
a
SDict begin [/View [/XYZ H.V]/Dest (Item.202) cvn /DEST pdfmark end
 1992 1963 a 0 TeXcolorgray 2056 2092 a FI(12.)p 0 TeXcolorgray
43 w Fz(L)h FE(\306)2349 2017 y Fg(4)p 2349 2027 25 4
v 2349 2064 a(3)2383 2042 y FF(\241)2435 2017 y Fg(2)p
2435 2027 V 2435 2064 a(7)p 2339 2073 131 5 v 2349 2108
a(4)p 2349 2118 25 4 v 2349 2155 a(3)2383 2133 y FF(\243)2435
2108 y Fg(2)p 2435 2118 V 2435 2155 a(7)2494 2092 y FE(\306)2583
2018 y Fg(28)p 2583 2028 49 4 v 2583 2064 a(21)2641 2043
y FF(\241)2705 2018 y Fg(6)p 2693 2028 V 2693 2064 a(21)p
2573 2073 179 5 v 2621 2108 a(4)p Fa(\243)p Fg(2)p 2621
2118 82 4 v 2621 2155 a(3)p Fa(\243)p Fg(7)2776 2092
y FE(\306)2865 2018 y Fg(22)p 2865 2028 49 4 v 2865 2064
a(21)p 2855 2073 69 5 v 2877 2108 a(8)p 2865 2118 49
4 v 2865 2155 a(21)2948 2092 y FE(\306)3027 2060 y FG(22)p
3027 2073 62 5 v 3016 2140 a Fy(\032)3027 2128 y FG(21)3108
2092 y FE(\243)3172 2072 y Fy(\032)3183 2060 y FG(21)p
3183 2073 V 3199 2121 a(8)3269 2092 y FE(\306)3348 2060
y FG(22)p 3348 2073 V 3364 2121 a(8)3434 2092 y FE(\306)3513
2060 y FG(11)p 3513 2073 V 3529 2121 a(4)1992 2171 y
SDict begin H.S end

1992 2171 a 1992 2171 a
SDict begin 12 H.A end
 1992 2171 a 1992 2171 a
SDict begin [/View [/XYZ H.V]/Dest (Item.203) cvn /DEST pdfmark end
 1992
2171 a 0 TeXcolorgray 2056 2300 a FI(13.)p 0 TeXcolorgray
45 w Fz(M)k FE(\306)2372 2250 y FG(2)p FF(\241)2455 2225
y Fg(10)p 2455 2235 49 4 v 2467 2272 a(7)p 2372 2281
142 5 v 2388 2316 a(1)p 2388 2326 25 4 v 2388 2362 a(3)2422
2341 y FF(\305)2474 2316 y Fg(5)p 2474 2326 V 2474 2362
a(7)2537 2300 y FE(\306)2639 2225 y Fg(2)p 2639 2235
V 2639 2272 a(1)2673 2250 y FF(\241)2725 2225 y Fg(10)p
2725 2235 49 4 v 2737 2272 a(7)p 2617 2281 179 5 v 2639
2316 a(7)p 2627 2326 49 4 v 2627 2362 a(21)2685 2341
y FF(\305)2737 2316 y Fg(15)p 2737 2326 V 2737 2362 a(21)2820
2300 y FE(\306)2909 2225 y Fg(14)p 2909 2235 V 2921 2272
a(7)2967 2250 y FF(\241)3019 2225 y Fg(10)p 3019 2235
V 3031 2272 a(7)p 2899 2281 179 5 v 2964 2316 a(22)p
2964 2326 49 4 v 2964 2362 a(21)3102 2300 y FE(\306)3203
2225 y Fg(4)p 3203 2235 25 4 v 3203 2272 a(7)p 3181 2281
69 5 v 3191 2316 a(22)p 3191 2326 49 4 v 3191 2362 a(21)3274
2300 y FE(\306)3353 2267 y FG(4)p 3353 2280 31 5 v 3353
2329 a(7)3397 2300 y FE(\243)3465 2267 y FG(21)p 3465
2280 62 5 v 3465 2329 a(22)3551 2300 y FE(\306)3630 2267
y FG(4)p FF(\243)p FG(3)p FF(\243)3781 2290 y Fy(\003)3776
2267 y FG(7)p 3630 2280 176 5 v 3656 2368 a Fy(\003)3651
2346 y FG(7)p FF(\243)p FG(22)3830 2300 y FE(\306)3909
2267 y FG(12)p 3909 2280 62 5 v 3909 2329 a(22)3995 2300
y FE(\306)4090 2267 y FG(6)p 4074 2280 V 4074 2329 a(11)1992
2378 y
SDict begin H.S end
 1992 2378 a 1992 2378 a
SDict begin 12 H.A end
 1992 2378 a 1992 2378
a
SDict begin [/View [/XYZ H.V]/Dest (Item.204) cvn /DEST pdfmark end
 1992 2378 a 0 TeXcolorgray 2056 2488 a FI(14.)p 0 TeXcolorgray
45 w Fz(N)h FE(\306)2351 2424 y Fr(\241)2391 2455 y FG(1)p
2391 2468 31 5 v 2391 2517 a(2)2431 2424 y Fr(\242)2461
2441 y FG(2)2506 2488 y FE(\245)2571 2424 y Fr(\241)2611
2455 y FG(2)p 2611 2468 V 2611 2517 a(3)2652 2424 y Fr(\242)2695
2488 y FE(\306)2775 2455 y FG(1)p 2775 2468 V 2775 2517
a(2)2826 2488 y FE(\243)2901 2455 y FG(1)p 2901 2468
V 2901 2517 a(2)2951 2488 y FE(\243)3027 2455 y FG(3)p
3027 2468 V 3027 2517 a(2)3082 2488 y FE(\306)3161 2455
y FG(1)p FF(\243)p FG(1)p FF(\243)p FG(3)p 3161 2468
176 5 v 3161 2517 a(2)p FF(\243)p FG(2)p FF(\243)p FG(2)3361
2488 y FE(\306)3440 2455 y FG(3)p 3440 2468 31 5 v 3440
2517 a(8)1992 2532 y
SDict begin H.S end
 1992 2532 a 1992 2532 a
SDict begin 12 H.A end
 1992 2532
a 1992 2532 a
SDict begin [/View [/XYZ H.V]/Dest (Item.205) cvn /DEST pdfmark end
 1992 2532 a 0 TeXcolorgray 2056 2628 a
FI(15.)p 0 TeXcolorgray 41 w Fz(O)18 b FE(\306)2353 2595
y FG(5)p 2353 2608 31 5 v 2353 2656 a(7)2403 2628 y FE(\243)2478
2595 y FG(2)p 2478 2608 V 2478 2656 a(9)2529 2628 y FE(\243)2604
2595 y FG(3)p 2604 2608 V 2604 2656 a(5)2655 2628 y FE(\243)2730
2595 y FG(7)p 2730 2608 V 2730 2656 a(4)2785 2628 y FE(\306)p
1 0 0 TeXcolorrgb 2865 2595 a FG(5)p 0 TeXcolorgray -1
w FF(\243)p FG(2)p FF(\243)p FG(3)p FF(\243)p 0 0 1 TeXcolorrgb
FG(7)p 0 TeXcolorgray 2865 2608 249 5 v 0 0 1 TeXcolorrgb
2865 2656 a(7)p 0 TeXcolorgray -1 w FF(\243)p FG(9)p
FF(\243)p 1 0 0 TeXcolorrgb FG(5)p 0 TeXcolorgray -1
w FF(\243)p FG(4)3137 2628 y FE(\306)3232 2595 y FG(6)p
3216 2608 62 5 v 3216 2656 a(36)3302 2628 y FE(\306)3381
2595 y FG(1)p 3381 2608 31 5 v 3381 2656 a(6)1992 2672
y
SDict begin H.S end
 1992 2672 a 1992 2672 a
SDict begin 12 H.A end
 1992 2672 a 1992 2672 a
SDict begin [/View [/XYZ H.V]/Dest (Item.206) cvn /DEST pdfmark end
 1992
2672 a 0 TeXcolorgray 2056 2767 a FI(16.)p 0 TeXcolorgray
43 w Fz(P)k FE(\306)2363 2735 y FG(2)p 2348 2748 62 5
v 2348 2796 a(24)2429 2767 y FE(\305)2504 2735 y FG(5)p
2504 2748 31 5 v 2504 2796 a(2)2555 2767 y FE(\241)2630
2735 y FG(50)p 2630 2748 62 5 v 2630 2796 a(60)2716 2767
y FE(\306)2811 2735 y FG(1)p 2795 2748 V 2795 2796 a(12)2877
2767 y FE(\305)2952 2735 y FG(5)p 2952 2748 31 5 v 2952
2796 a(2)3003 2767 y FE(\241)3078 2735 y FG(5)p 3078
2748 V 3078 2796 a(6)3133 2767 y FE(\306)3227 2735 y
FG(1)p 3212 2748 62 5 v 3212 2796 a(12)3294 2767 y FE(\305)3369
2735 y FG(30)p 3369 2748 V 3369 2796 a(12)3450 2767 y
FE(\241)3525 2735 y FG(10)p 3525 2748 V 3525 2796 a(12)3611
2767 y FE(\306)3690 2735 y FG(21)p 3690 2748 V 3690 2796
a(12)3776 2767 y FE(\306)3855 2735 y FG(7)p 3855 2748
31 5 v 3855 2796 a(4)1992 2812 y
SDict begin H.S end
 1992 2812 a 1992 2812
a
SDict begin 12 H.A end
 1992 2812 a 1992 2812 a
SDict begin [/View [/XYZ H.V]/Dest (Item.207) cvn /DEST pdfmark end
 1992 2812 a 0 TeXcolorgray
2056 2941 a FI(17.)p 0 TeXcolorgray 41 w Fz(Q)d FE(\306)2363
2866 y Fg(5)p 2363 2876 25 4 v 2363 2913 a(6)2398 2891
y FF(\305)2461 2866 y Fg(9)p 2449 2876 49 4 v 2449 2913
a(12)p 2353 2922 155 5 v 2363 2957 a(3)p 2363 2967 25
4 v 2363 3003 a(4)2398 2982 y FF(\305)2450 2957 y Fg(10)p
2449 2967 49 4 v 2449 3003 a(12)2532 2941 y FE(\306)2621
2866 y Fg(10)p 2621 2876 V 2621 2913 a(12)2680 2891 y
FF(\305)2744 2866 y Fg(9)p 2731 2876 V 2731 2913 a(12)p
2611 2922 179 5 v 2633 2957 a(9)p 2621 2967 49 4 v 2621
3003 a(12)2680 2982 y FF(\305)2732 2957 y Fg(10)p 2731
2967 V 2731 3003 a(12)2814 2941 y FE(\306)2903 2866 y
Fg(19)p 2903 2876 V 2903 2913 a(12)p 2893 2922 69 5 v
2903 2957 a(19)p 2903 2967 49 4 v 2903 3003 a(12)2986
2941 y FE(\306)14 b FI(1)1992 3019 y
SDict begin H.S end
 1992 3019 a 1992
3019 a
SDict begin 12 H.A end
 1992 3019 a 1992 3019 a
SDict begin [/View [/XYZ H.V]/Dest (Item.208) cvn /DEST pdfmark end
 1992 3019 a 0 TeXcolorgray
2056 3114 a FI(18.)p 0 TeXcolorgray 43 w Fz(R)20 b FE(\306)2347
3081 y FG(11)p 2347 3094 62 5 v 2363 3143 a(6)2429 3114
y FE(\243)2504 3081 y FG(14)p 2504 3094 V 2519 3143 a(3)2586
3114 y FE(\243)2661 3081 y FG(3)p 2661 3094 31 5 v 2661
3143 a(5)2712 3114 y FE(\243)2787 3081 y FG(6)p 2787
3094 V 2787 3143 a(7)2838 3114 y FE(\243)2928 3081 y
FG(5)p 2913 3094 62 5 v 2913 3143 a(11)2998 3114 y FE(\306)p
1 0 0 TeXcolorrgb 3078 3081 a FG(11)p 0 TeXcolorgray
-1 w FF(\243)p FG(14)p FF(\243)p 1 0.5 0 TeXcolorrgb
FG(3)p 0 TeXcolorgray -1 w FF(\243)p 0 1 0 TeXcolorrgb
FG(6)p 0 TeXcolorgray FF(\243)p 0 0 1 TeXcolorrgb FG(5)p
0 TeXcolorgray 3078 3094 383 5 v 0 1 0 TeXcolorrgb 3093
3143 a(6)p 0 TeXcolorgray FF(\243)p 1 0.5 0 TeXcolorrgb
FG(3)p 0 TeXcolorgray -1 w FF(\243)p 0 0 1 TeXcolorrgb
FG(5)p 0 TeXcolorgray FF(\243)p FG(7)p FF(\243)p 1 0 0
TeXcolorrgb FG(11)p 0 TeXcolorgray 3484 3114 a FE(\306)3564
3081 y FG(14)p 3564 3094 62 5 v 3579 3143 a(7)3649 3114
y FE(\306)14 b FI(2)-246 3211 y
SDict begin H.S end
 -246 3211 a -246 3211
a
SDict begin 12 H.A end
 -246 3211 a -246 3211 a
SDict begin [/View [/XYZ H.V]/Dest (exo.77) cvn /DEST pdfmark end
 -246 3211 a 0 TeXcolorgray
100 x FJ(Ex)o(er)o(cice)g(77)p 0 TeXcolorgray 41 w FI(On)j(r\351duit)h
(au)g(m\352me)g(d\351nominateur)h(:)1007 3604 y Fz(S)f
FE(\306)1146 3548 y FI(1)p 1146 3585 41 5 v 1146 3661
a(2)1206 3604 y FE(\305)1281 3548 y FI(1)p 1281 3585
V 1281 3661 a(4)1342 3604 y FE(\305)1417 3548 y FI(1)p
1417 3585 V 1417 3661 a(6)1478 3604 y FE(\305)1553 3548
y FI(1)p 1553 3585 V 1553 3661 a(8)1613 3604 y FE(\305)1709
3548 y FI(1)p 1688 3585 82 5 v 1688 3661 a(10)1789 3604
y FE(\305)1885 3548 y FI(1)p 1865 3585 V 1865 3661 a(12)1066
3802 y FE(\306)1146 3746 y FI(1)10 b FE(\243)g FI(60)p
1146 3783 197 5 v 1146 3859 a(2)g FE(\243)g FI(60)1362
3802 y FE(\305)1438 3746 y FI(1)g FE(\243)g FI(30)p 1438
3783 V 1438 3859 a(4)g FE(\243)g FI(30)1654 3802 y FE(\305)1730
3746 y FI(1)g FE(\243)g FI(20)p 1730 3783 V 1730 3859
a(6)g FE(\243)g FI(20)1946 3802 y FE(\305)2022 3746 y
FI(1)g FE(\243)g FI(15)p 2022 3783 V 2022 3859 a(8)g
FE(\243)g FI(15)2238 3802 y FE(\305)2334 3746 y FI(1)g
FE(\243)g FI(12)p 2313 3783 238 5 v 2313 3859 a(10)g
FE(\243)g FI(12)2571 3802 y FE(\305)2666 3746 y FI(1)g
FE(\243)g FI(10)p 2646 3783 V 2646 3859 a(12)g FE(\243)g
FI(10)1066 4000 y FE(\306)1166 3944 y FI(60)p 1146 3981
122 5 v 1146 4057 a(120)1287 4000 y FE(\305)1383 3944
y FI(30)p 1362 3981 V 1362 4057 a(120)1504 4000 y FE(\305)1599
3944 y FI(20)p 1579 3981 V 1579 4057 a(120)1721 4000
y FE(\305)1816 3944 y FI(15)p 1796 3981 V 1796 4057 a(120)1937
4000 y FE(\305)2033 3944 y FI(12)p 2012 3981 V 2012 4057
a(120)2154 4000 y FE(\305)2249 3944 y FI(10)p 2229 3981
V 2229 4057 a(120)1066 4198 y FE(\306)1146 4142 y FI(60)g
FE(\305)g FI(30)g FE(\305)g FI(20)g FE(\305)g FI(15)g
FE(\305)g FI(12)g FE(\305)g FI(10)p 1146 4179 863 5 v
1516 4255 a(120)2032 4198 y FE(\306)2111 4142 y FI(147)p
2111 4179 122 5 v 2132 4255 a(20)2243 4198 y(.)-246 4413
y(P)n(our)17 b(obtenir)h(1)d FE(\306)341 4381 y FG(120)p
341 4394 93 5 v 341 4442 a(120)443 4413 y FI(,)i(il)h(y)f(a)680
4381 y FG(27)p 664 4394 V 664 4442 a(120)784 4413 y FI(\253)d(en)j
(trop)d(\273,)j(c)n('est-\340-dir)o(e)1599 4381 y FG(15)p
1584 4394 V 1584 4442 a(120)1697 4413 y FE(\305)1787
4381 y FG(12)p 1772 4394 V 1772 4442 a(120)1874 4413
y FI(.)g(Il)g(faut)h(donc)f(enlever)h(les)h(ter)q(mes)f(corr)o
(espondants)f(:)25 4588 y(60)p 5 4625 122 5 v 5 4701
a(120)376 4644 y FE(\305)702 4588 y FI(30)p 682 4625
V 682 4701 a(120)1053 4644 y FE(\305)1379 4588 y FI(20)p
1359 4625 V 1359 4701 a(120)1730 4644 y FE(\305)2028
4710 y Fy(\023)2091 4627 y(\023)2102 4612 y(\023)-136
b(S)2091 4695 y(S)2102 4710 y(S)2056 4588 y FI(15)p 2036
4625 V 2036 4701 a(120)2407 4644 y FE(\305)2705 4710
y Fy(\023)2768 4627 y(\023)2779 4612 y(\023)g(S)2768
4695 y(S)2779 4710 y(S)2733 4588 y FI(12)p 2712 4625
V 2712 4701 a(120)3084 4644 y FE(\305)3410 4588 y FI(10)p
3389 4625 V 3389 4701 a(120)3775 4644 y FE(\306)15 b
FI(1)5 4794 y(1)p 5 4831 41 5 v 5 4908 a(2)376 4851 y
FE(\305)682 4794 y FI(1)p 682 4831 V 682 4908 a(4)1053
4851 y FE(\305)1359 4794 y FI(1)p 1359 4831 V 1359 4908
a(6)1730 4851 y FE(\305)2033 4916 y Fy(\003)2054 4833
y(\003)2058 4818 y(\003)-46 b(C)2054 4901 y(C)2058 4916
y(C)2036 4794 y FI(1)p 2036 4831 V 2036 4908 a(8)2407
4851 y FE(\305)2708 4916 y Fy(\001)2749 4833 y(\001)2757
4818 y(\001)-91 b(A)2749 4901 y(A)2757 4916 y(A)2733
4794 y FI(1)p 2712 4831 82 5 v 2712 4908 a(10)3084 4851
y FE(\305)3410 4794 y FI(1)p 3389 4831 V 3389 4908 a(12)3775
4851 y FE(\306)15 b FI(1.)-246 4986 y
SDict begin H.S end
 -246 4986 a -246
4986 a
SDict begin 12 H.A end
 -246 4986 a -246 4986 a
SDict begin [/View [/XYZ H.V]/Dest (exo.78) cvn /DEST pdfmark end
 -246 4986 a -246 4991
a
SDict begin H.S end
 -246 4991 a -246 4991 a
SDict begin 12 H.A end
 -246 4991 a -246 4991 a
SDict begin [/View [/XYZ H.V]/Dest (Item.209) cvn /DEST pdfmark end
 -246
4991 a 0 TeXcolorgray 79 x FJ(Ex)o(er)o(cice)f(78)p 0
TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(On)j(\351cr)q(it)g(comme)h(somme)h(de)e(deux)h(fr)o(actions)g
(\351gyptiennes)h(:)1744 5226 y(3)p 1744 5263 41 5 v
1744 5340 a(4)1809 5283 y FE(\306)1888 5226 y FI(2)p
1888 5263 V 1888 5340 a(4)1948 5283 y FE(\305)2023 5226
y FI(1)p 2023 5263 V 2023 5340 a(4)2088 5283 y FE(\306)2167
5226 y FI(1)p 2167 5263 V 2167 5340 a(2)2228 5283 y FE(\305)2303
5226 y FI(1)p 2303 5263 V 2303 5340 a(4)2353 5283 y(.)-246
5418 y
SDict begin H.S end
 -246 5418 a -246 5418 a
SDict begin 12 H.A end
 -246 5418 a -246 5418
a
SDict begin [/View [/XYZ H.V]/Dest (Item.210) cvn /DEST pdfmark end
 -246 5418 a 0 TeXcolorgray -141 5497 a FI(2.)p 0 TeXcolorgray
43 w(On)e(cher)o(che)g(l)o('entier)i Fz(n)j FI(tel)c(que)1878
5573 y(2)p 1878 5610 41 5 v 1878 5687 a(5)1943 5630 y
FE(\306)2022 5573 y FI(1)p 2022 5610 V 2022 5687 a(3)2083
5630 y FE(\305)2163 5573 y FI(1)p 2158 5610 52 5 v 2158
5687 a Fz(n)2219 5630 y FI(.)p 0 TeXcolorgray 1909 5895
a(39)p 0 TeXcolorgray eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.40) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FI(C)o(ette)18 b(\351galit\351)h(se)e
(r\351\351cr)q(it)1762 -84 y(2)10 b FE(\243)g FI(3)p
1762 -47 157 5 v 1762 29 a(5)g FE(\243)g FI(3)1943 -28
y FE(\306)2022 -84 y FI(1)g FE(\243)g FI(5)p 2022 -47
V 2022 29 a(3)g FE(\243)g FI(5)2198 -28 y FE(\305)2279
-84 y FI(1)p 2273 -47 52 5 v 2273 29 a Fz(n)2335 -28
y FI(,)-38 142 y(soit)1858 201 y(6)p 1838 238 82 5 v
1838 315 a(15)1943 258 y FE(\306)2042 201 y FI(5)p 2022
238 V 2022 315 a(15)2123 258 y FE(\305)2204 201 y FI(1)p
2198 238 52 5 v 2198 315 a Fz(n)2260 258 y FI(.)-38 430
y(Il)17 b(est)h(clair)f(que)h Fz(n)g FE(\306)d FI(15)j(convient,)h(et)f
(que)g(c)n('est)f(le)h(seul)h(nombr)o(e)e(qui)h(convienne)o(.)-246
462 y
SDict begin H.S end
 -246 462 a -246 462 a
SDict begin 12 H.A end
 -246 462 a -246 462 a
SDict begin [/View [/XYZ H.V]/Dest (Item.211) cvn /DEST pdfmark end
 -246
462 a -246 462 a
SDict begin H.S end
 -246 462 a -246 462 a
SDict begin 12 H.A end
 -246 462 a -246
462 a
SDict begin [/View [/XYZ H.V]/Dest (Item.212) cvn /DEST pdfmark end
 -246 462 a 0 TeXcolorgray -141 559 a FI(3.)p 0
TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray
41 w(On)f(a)g(int\351r\352t)h(\340)f(\253)d(par)q(tir)j(du)g(membr)o(e)
h(de)f(droite)d(\273)i(:)i(pour)f(tout)i(entier)h Fz(a)h
FI(sup\351r)q(ieur)d(\340)f(1,)690 719 y(1)p 628 756
165 5 v 630 832 a Fz(a)d FE(\305)c FI(1)813 775 y FE(\305)1001
719 y FI(1)p 888 756 267 5 v 890 832 a Fz(a)t FI(\()r
Fz(a)k FE(\305)c FI(1\))1179 775 y FE(\306)p 1 0 0 TeXcolorrgb
1349 719 a Fz(a)p 0 TeXcolorgray 14 w FE(\243)g FI(1)p
1258 756 343 5 v 1 0 0 TeXcolorrgb 1260 832 a Fz(a)p
0 TeXcolorgray 14 w FE(\243)g FI(\()r Fz(a)k FE(\305)c
FI(1\))1620 775 y FE(\305)1808 719 y FI(1)p 1695 756
267 5 v 1697 832 a Fz(a)t FI(\()r Fz(a)k FE(\305)c FI(1\))2446
775 y(\(on)17 b(r\351duit)h(au)f(m\352me)i(d\351nominateur\))1179
982 y FE(\306)1369 926 y Fz(a)p 1258 963 V 1260 1039
a(a)t FI(\()r Fz(a)14 b FE(\305)c FI(1\))1545 982 y FE(\305)1733
926 y FI(1)p 1620 963 V 1622 1039 a Fz(a)t FI(\()r Fz(a)k
FE(\305)c FI(1\))1179 1186 y FE(\306)1301 1127 y Fy(\030)1384
1107 y(\030)1399 1103 y(\030)1311 1130 y Fz(a)k FE(\305)c
FI(1)p 1258 1167 V 1260 1243 a Fz(a)t FI(\()1326 1240
y Fy(\030)1408 1220 y(\030)1423 1216 y(\030)1336 1243
y Fz(a)k FE(\305)c FI(1\))2446 1186 y(\(on)17 b(simpli\002e\))1179
1393 y FE(\306)1262 1337 y FI(1)p 1258 1374 49 5 v 1260
1450 a Fz(a)1317 1393 y FI(.)145 1614 y(C'est)h(bien)g(l)o
('\351galit\351)h(attendue)o(.)-246 1647 y
SDict begin H.S end
 -246 1647
a -246 1647 a
SDict begin 12 H.A end
 -246 1647 a -246 1647 a
SDict begin [/View [/XYZ H.V]/Dest (Item.213) cvn /DEST pdfmark end
 -246 1647 a 0 TeXcolorgray
4 1743 a FI(\(b\))p 0 TeXcolorgray 41 w(On)e(utilise)i(la)e(question)i
(pr\351c\351dente)g(avec)g Fz(a)f FE(\306)c FI(6)32 b(:)559
1902 y(1)p 559 1939 41 5 v 559 2015 a(6)624 1958 y FE(\306)761
1902 y FI(1)p 703 1939 157 5 v 703 2015 a(6)10 b FE(\305)g
FI(1)879 1958 y FE(\305)1059 1902 y FI(1)p 954 1939 251
5 v 954 2015 a(6\(6)g FE(\305)g FI(1\))559 2109 y(1)p
559 2146 41 5 v 559 2223 a(6)624 2166 y FE(\306)703 2109
y FI(1)p 703 2146 V 703 2223 a(7)763 2166 y FE(\305)859
2109 y FI(1)p 838 2146 82 5 v 838 2223 a(42)1619 2166
y(\(\351cr)q(itur)o(e)16 b(de)2045 2109 y(1)p 2045 2146
41 5 v 2045 2223 a(6)2112 2166 y(comme)j(somme)f(de)f(deux)h(fr)o
(actions)g(\351gyptiennes\))r(.)-246 2306 y
SDict begin H.S end
 -246 2306
a -246 2306 a
SDict begin 12 H.A end
 -246 2306 a -246 2306 a
SDict begin [/View [/XYZ H.V]/Dest (exo.79) cvn /DEST pdfmark end
 -246 2306 a 0 TeXcolorgray
82 x FJ(Ex)o(er)o(cice)c(79)p 0 TeXcolorgray 41 w FI(La)k(mo)n(yenne)f
(har)q(monique)i(de)e(deux)h(nombr)o(es)f(str)q(ictement)i(positifs)i
Fz(a)g FI(et)d Fz(b)j FI(est)d(le)g(nombr)o(e)f Fz(h)22
b FI(d\351\002ni)17 b(par)34 b(:)1769 2605 y Fz(h)19
b FE(\306)1987 2549 y FI(2)p 1913 2586 188 5 v 1926 2638
a FG(1)p 1923 2651 38 5 v 1924 2700 a Fu(a)1980 2671
y FE(\305)2058 2638 y FG(1)p 2055 2651 36 5 v 2055 2700
a Fu(b)2111 2605 y FI(.)-246 2769 y
SDict begin H.S end
 -246 2769 a -246
2769 a
SDict begin 12 H.A end
 -246 2769 a -246 2769 a
SDict begin [/View [/XYZ H.V]/Dest (Item.214) cvn /DEST pdfmark end
 -246 2769 a -246 2769
a
SDict begin H.S end
 -246 2769 a -246 2769 a
SDict begin 12 H.A end
 -246 2769 a -246 2769 a
SDict begin [/View [/XYZ H.V]/Dest (Item.215) cvn /DEST pdfmark end
 -246
2769 a 0 TeXcolorgray -141 2848 a FI(1.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w(La)e(mo)n(yenne)h(har)q
(monique)g(de)f(2)h(et)g(6)f(est)1614 3022 y(2)p 1546
3059 177 5 v 1556 3111 a FG(1)p 1556 3124 31 5 v 1556
3173 a(2)1607 3144 y FE(\305)1682 3111 y FG(1)p 1682
3124 V 1682 3173 a(6)1747 3078 y FE(\306)1894 3022 y
FI(2)p 1826 3059 177 5 v 1836 3111 a FG(3)p 1836 3124
31 5 v 1836 3173 a(6)1887 3144 y FE(\305)1962 3111 y
FG(1)p 1962 3124 V 1962 3173 a(6)2027 3078 y FE(\306)2111
3022 y FI(2)p 2106 3059 51 5 v 2116 3111 a FG(4)p 2116
3124 31 5 v 2116 3173 a(6)2181 3078 y FE(\306)d FI(2)c
FE(\243)2375 3022 y FI(6)p 2375 3059 41 5 v 2375 3135
a(4)2440 3078 y FE(\306)2519 3022 y FI(12)p 2519 3059
82 5 v 2540 3135 a(4)2624 3078 y FE(\306)15 b FI(3.)-246
3223 y
SDict begin H.S end
 -246 3223 a -246 3223 a
SDict begin 12 H.A end
 -246 3223 a -246 3223
a
SDict begin [/View [/XYZ H.V]/Dest (Item.216) cvn /DEST pdfmark end
 -246 3223 a 0 TeXcolorgray 4 3303 a FI(\(b\))p 0 TeXcolorgray
41 w(La)i(mo)n(yenne)h(har)q(monique)g(de)f(4)h(et)g(16)g(est)1513
3476 y(2)p 1429 3513 208 5 v 1439 3565 a FG(1)p 1439
3578 31 5 v 1439 3627 a(4)1490 3598 y FE(\305)1581 3565
y FG(1)p 1565 3578 62 5 v 1565 3627 a(16)1661 3532 y
FE(\306)1839 3476 y FI(2)p 1740 3513 239 5 v 1766 3565
a FG(4)p 1750 3578 62 5 v 1750 3627 a(16)1832 3598 y
FE(\305)1922 3565 y FG(1)p 1907 3578 V 1907 3627 a(16)2003
3532 y FE(\306)2102 3476 y FI(2)p 2082 3513 82 5 v 2107
3565 a FG(5)p 2092 3578 62 5 v 2092 3627 a(16)2187 3532
y FE(\306)d FI(2)10 b FE(\243)2382 3476 y FI(16)p 2382
3513 82 5 v 2403 3589 a(5)2488 3532 y FE(\306)2567 3476
y FI(32)p 2567 3513 V 2587 3589 a(5)2672 3532 y FE(\306)k
FI(6,)8 b(4.)-246 3677 y
SDict begin H.S end
 -246 3677 a -246 3677 a
SDict begin 12 H.A end
 -246
3677 a -246 3677 a
SDict begin [/View [/XYZ H.V]/Dest (Item.217) cvn /DEST pdfmark end
 -246 3677 a 0 TeXcolorgray -141 3757
a FI(2.)p 0 TeXcolorgray 43 w(U)m(n)18 b(cycliste)h(monte)g(une)g
(c\364te)f(de)g(7)g(km)h(\340)e(la)i(vitesse)h(mo)n(yenne)e(de)g(14)h
(km/h.)g(Arr)q(iv\351)e(en)i(haut,)g(il)f(fait)h(demi-tour)g(et)f(r)o
(edescend)g(la)g(c\364te)-38 3856 y(\340)f(la)g(vitesse)j(mo)n(yenne)d
(de)h(35)g(km/h.)-246 3919 y
SDict begin H.S end
 -246 3919 a -246 3919 a
SDict begin 12 H.A end

-246 3919 a -246 3919 a
SDict begin [/View [/XYZ H.V]/Dest (Item.218) cvn /DEST pdfmark end
 -246 3919 a 0 TeXcolorgray 10
4014 a FI(\(a\))p 0 TeXcolorgray 41 w(On)f(compl\350te)i(deux)e
(tableaux)h(de)g(propor)q(tionnalit\351)g(\(on)g(tr)o(availle)g(en)g(h)
f(et)h(en)g(km\))f(:)p 0 TeXcolorgray 0 TeXcolorgray
619 4134 1011 4 v 619 4233 4 100 v 742 4204 a(temps)i(\(en)e(h\))p
1298 4233 V 194 w(1)p 1482 4233 V 133 w(?)p 1626 4233
V 619 4237 1011 4 v 619 4336 4 100 v 672 4307 a(distance)h(\(en)f(km\))
p 1298 4336 V 104 w(14)p 1482 4336 V 104 w(7)p 1626 4336
V 619 4340 1011 4 v 0 TeXcolorgray 0 TeXcolorgray 2661
4134 V 2661 4233 4 100 v 2784 4204 a(temps)i(\(en)f(h\))p
3341 4233 V 193 w(1)p 3525 4233 V 133 w(?)p 3668 4233
V 2661 4237 1011 4 v 2661 4336 4 100 v 2714 4307 a(distance)g(\(en)f
(km\))p 3341 4336 V 104 w(35)p 3525 4336 V 104 w(7)p
3668 4336 V 2661 4340 1011 4 v 145 4512 a(Le)g(cycliste)h(met)681
4479 y FG(1)p FF(\243)p FG(7)p 681 4492 104 5 v 702 4541
a(14)809 4512 y FE(\306)929 4502 y Fy(\003)924 4479 y
FG(7)p 888 4492 V 888 4558 a(2)p FF(\243)966 4580 y Fy(\003)961
4558 y FG(7)1015 4512 y FE(\306)1094 4479 y FG(1)p 1094
4492 31 5 v 1094 4541 a(2)1149 4512 y FE(\306)c FI(0,)8
b(5)19 b(h)f(pour)f(monter)h(la)g(c\364te)o(,)f(puis)2304
4479 y FG(1)p FF(\243)p FG(7)p 2304 4492 104 5 v 2325
4541 a(35)2431 4512 y FE(\306)2552 4502 y Fy(\003)2547
4479 y FG(7)p 2510 4492 V 2510 4558 a(5)p FF(\243)2588
4580 y Fy(\003)2583 4558 y FG(7)2638 4512 y FE(\306)2717
4479 y FG(1)p 2717 4492 31 5 v 2717 4541 a(5)2772 4512
y FE(\306)d FI(0,)8 b(2)19 b(h)e(pour)h(la)f(descendr)o(e)o(.)-246
4575 y
SDict begin H.S end
 -246 4575 a -246 4575 a
SDict begin 12 H.A end
 -246 4575 a -246 4575
a
SDict begin [/View [/XYZ H.V]/Dest (Item.219) cvn /DEST pdfmark end
 -246 4575 a 0 TeXcolorgray 4 4655 a FI(\(b\))p 0 TeXcolorgray
41 w(A)n(u)g(total,)h(le)g(cycliste)f(a)g(par)o(cour)q(u)g(7)10
b FE(\305)g FI(7)15 b FE(\306)g FI(14)j(km)f(en)h(0,)8
b(5)i FE(\305)g FI(0,)e(2)17 b FE(\306)e FI(0,)8 b(7)18
b(h.)g(On)f(calcule)h(sa)g(vitesse)h(mo)n(yenne)f(:)p
0 TeXcolorgray 0 TeXcolorgray 1630 4744 1031 4 v 1630
4843 4 100 v 1753 4813 a(temps)h(\(en)e(h\))p 2309 4843
V 173 w(0,7)p 2514 4843 V 105 w(1)p 2657 4843 V 1630
4847 1031 4 v 1630 4946 4 100 v 1683 4916 a(distance)h(\(en)f(km\))p
2309 4946 V 114 w(14)p 2514 4946 V 123 w(?)p 2657 4946
V 1630 4950 1031 4 v 145 5088 a(La)27 b(distance)i(par)o(cour)q(ue)e
(par)g(le)h(cycliste)g(en)g(1)g(h)g(est)1868 5055 y FG(1)p
FF(\243)p FG(14)p 1868 5068 135 5 v 1897 5116 a(0,7)2036
5088 y FE(\306)2126 5055 y FG(140)p 2126 5068 93 5 v
2156 5116 a(7)2252 5088 y FE(\306)d FI(20)j(km,)g(donc)g(sa)f(vitesse)j
(mo)n(yenne)e(sur)g(l)o('ensemble)i(du)145 5187 y(par)o(cours)17
b(est)h(de)f(20)h(km/h.)-246 5219 y
SDict begin H.S end
 -246 5219 a -246
5219 a
SDict begin 12 H.A end
 -246 5219 a -246 5219 a
SDict begin [/View [/XYZ H.V]/Dest (Item.220) cvn /DEST pdfmark end
 -246 5219 a 0 TeXcolorgray
12 5316 a FI(\(c\))p 0 TeXcolorgray 41 w(V\351r)q(i\002ons)f(que)h(la)g
(mo)n(yenne)f(har)q(monique)i(de)e(14)h(et)g(35)g(est)g(\351gale)g
(\340)f(20)h(:)1527 5490 y(2)p 1428 5527 239 5 v 1453
5579 a FG(1)p 1438 5592 62 5 v 1438 5640 a(14)1520 5612
y FE(\305)1610 5579 y FG(1)p 1595 5592 V 1595 5640 a(35)1690
5546 y FE(\306)1868 5490 y FI(2)p 1770 5527 239 5 v 1795
5579 a FG(5)p 1780 5592 62 5 v 1780 5640 a(70)1861 5612
y FE(\305)1952 5579 y FG(2)p 1936 5592 V 1936 5640 a(70)2032
5546 y FE(\306)2132 5490 y FI(2)p 2111 5527 82 5 v 2136
5579 a FG(7)p 2121 5592 62 5 v 2121 5640 a(70)2217 5546
y FE(\306)2316 5490 y FI(2)p 2296 5527 82 5 v 2321 5579
a FG(1)p 2306 5592 62 5 v 2306 5640 a(10)2402 5546 y
FE(\306)c FI(2)c FE(\243)2597 5490 y FI(10)p 2597 5527
82 5 v 2617 5603 a(1)2702 5546 y FE(\306)k FI(20.)p 0
TeXcolorgray 1909 5895 a(40)p 0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.41) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.221) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(3.)p 0 TeXcolorgray 43 w(On)17 b(note)h Fz(d)25
b FI(la)17 b(longueur)h(de)g(la)f(c\364te)o(,)i Fz(v)1146
-151 y FG(1)1198 -163 y FI(la)f(vitesse)h(du)e(cycliste)h(en)f
(mont\351e)o(,)k Fz(v)2360 -151 y FG(2)2412 -163 y FI(sa)c(vitesse)j
(en)d(descente)o(.)-38 -15 y(Gr\342ce)f(\340)i(la)f(for)q(mule)j
Fz(t)i FE(\306)740 -47 y Fu(d)p 740 -34 40 5 v 743 14
a(v)789 -15 y FI(,)c(on)f(voit)h(que)g(:)p 0 TeXcolorgray
7 94 a(\225)p 0 TeXcolorgray 42 w(le)g(temps)g(de)g(mont\351e)g(est)i
Fz(t)922 106 y FG(1)972 94 y FE(\306)1062 61 y Fu(d)p
1051 74 63 5 v 1052 123 a(v)1085 132 y Fg(1)1140 94 y
FI(;)p 0 TeXcolorgray 7 217 a(\225)p 0 TeXcolorgray 42
w(le)e(temps)g(de)g(descente)g(est)i Fz(t)964 229 y FG(2)1013
217 y FE(\306)1104 184 y Fu(d)p 1092 197 V 1093 245 a(v)1126
254 y Fg(2)1165 217 y FI(.)-38 334 y(Donc)f(au)h(total,)g(le)h
(cycliste)e(a)h(par)o(cour)q(u)f(la)h(distance)g Fz(D)j
FE(\306)16 b Fz(d)j FE(\305)11 b Fz(d)24 b FE(\306)16
b FI(2)p Fz(d)7 b FI(,)21 b(en)f(un)g(temps)i Fz(T)28
b FE(\306)19 b Fz(t)2806 346 y FG(1)2852 334 y FE(\305)13
b Fz(t)2948 346 y FG(2)3000 334 y FE(\306)3092 301 y
Fu(d)p 3081 314 V 3082 363 a(v)3115 372 y Fg(1)3165 334
y FE(\305)3252 301 y Fu(d)p 3241 314 V 3242 363 a(v)3275
372 y Fg(2)3313 334 y FI(.)20 b(S)o(a)f(vitesse)j(mo)n(yenne)e(est)-38
434 y(donc)1350 568 y Fz(V)29 b FE(\306)1508 512 y Fz(D)p
1508 549 65 5 v 1511 625 a(T)1596 568 y FE(\306)1749
512 y FI(2)p Fz(d)p 1675 549 241 5 v 1697 606 a Fu(d)p
1685 619 63 5 v 1686 667 a(v)1719 676 y Fg(1)1768 639
y FE(\305)1854 606 y Fu(d)p 1843 619 V 1844 667 a(v)1877
676 y Fg(2)1940 568 y FE(\306)2154 512 y FI(2)2189 526
y Fy(\023)2194 512 y Fz(d)p 2019 549 364 5 v 2014 666
a Fy(\023)2019 653 y Fz(d)2079 566 y Fr(\263)2137 620
y FG(1)p 2121 633 63 5 v 2122 681 a Fu(v)2155 690 y Fg(1)2203
653 y FE(\305)2294 620 y FG(1)p 2278 633 V 2279 681 a
Fu(v)2312 690 y Fg(2)2351 566 y Fr(\264)2406 568 y FE(\306)2585
512 y FI(2)p 2486 549 241 5 v 2511 601 a FG(1)p 2496
614 63 5 v 2497 663 a Fu(v)2530 672 y Fg(1)2578 634 y
FE(\305)2669 601 y FG(1)p 2653 614 V 2654 663 a Fu(v)2687
672 y Fg(2)2736 568 y FI(.)-38 798 y(Il)17 b(s)m('agit)g(bien)h(de)f
(la)h(mo)n(yenne)f(har)q(monique)i(de)g Fz(v)1512 810
y FG(1)1564 798 y FI(et)g Fz(v)1691 810 y FG(2)1726 798
y FI(.)-38 946 y FJ(R)o(emarque)14 b(:)19 b FI(U)m(ne)g(err)o(eur)e
(fr\351quente)j(est)f(de)e(croir)o(e)g(que)i(si)g(on)f(monte)h(\340)f
(la)g(vitesse)k Fz(v)2583 958 y FG(1)2636 946 y FI(et)c(que)h(l)o('on)g
(r)o(edescend)f(\340)g(la)g(vitesse)k Fz(v)3825 958 y
FG(2)3860 946 y FI(,)c(alors)g(la)-38 1046 y(vitesse)f(mo)n(yenne)e
(sur)h(l)o('ensemble)h(du)e(par)o(cours)g(est)1617 1008
y Fu(v)1650 1017 y Fg(1)1678 1008 y FF(\305)q Fu(v)1754
1017 y Fg(2)p 1616 1027 167 5 v 1684 1075 a FG(2)1792
1046 y FI(.)h(C'est)g(la)f(for)q(mule)h(de)f(la)g(mo)n(yenne)h(que)f
(vous)h(utilisez)g(habituellement)j(\(on)-38 1146 y(l)o('appelle)k
(\253)15 b(mo)n(yenne)21 b(ar)q(ithm\351tique)c(\273)41
b(de)22 b Fz(v)1365 1158 y FG(1)1421 1146 y FI(et)h Fz(v)1552
1158 y FG(2)1586 1146 y FI(\),)e(mais)h(elle)f(n)-6 b('est)22
b(pas)f(adapt\351e)h(ici.)f(C'est)h(facile)g(\340)e(compr)o(endr)o(e)g
(intuitivement)k(:)-38 1245 y(comme)15 b(on)f(passe)h(g\351n\351r)o
(alement)h(plus)g(de)d(temps)j(\340)e(monter)-5 b(,)15
b(la)f(vitesse)i(en)f(mont\351e)g(a)f(plus)h(d)n('impor)q(tance)g(que)g
(la)f(vitesse)i(en)f(descente)-38 1345 y(et)j(la)f(mo)n(yenne)h(ar)q
(ithm\351tique)h(\(qui)f(attr)q(ibue)f(une)h(impor)q(tance)g(\351gale)g
(\340)h Fz(v)2256 1357 y FG(1)2308 1345 y FI(et)h Fz(v)2436
1357 y FG(2)2470 1345 y FI(\))d(ne)h(convient)h(pas)o(.)-246
1461 y
SDict begin H.S end
 -246 1461 a -246 1461 a
SDict begin 12 H.A end
 -246 1461 a -246 1461
a
SDict begin [/View [/XYZ H.V]/Dest (exo.80) cvn /DEST pdfmark end
 -246 1461 a 0 TeXcolorgray 105 x FJ(Ex)o(er)o(cice)14
b(80)p 0 TeXcolorgray 41 w FI(L)-10 b('id\351e)22 b(consiste)g(\340)e
(\253)15 b(par)q(tir)20 b(d)n('en)h(bas)f(\340)g(droite)15
b(\273,)20 b(puis)i(\340)e(\253)15 b(r)o(emonter)g(\273)40
b(dans)21 b(la)g(fr)o(action.)g(P)m(ar)f(exemple)o(,)i(dans)f(1)11
b FE(\305)3883 1534 y FG(1)p 3763 1547 272 5 v 3763 1607
a(2)p FF(\305)3923 1582 y Fg(1)p 3846 1592 179 4 v 3846
1646 a(2)p Fa(\305)3952 1626 y Fg(1)p 3913 1634 102 3
v 3913 1687 a(2)p Fa(\305)3980 1668 y Fg(1)p 3980 1676
25 3 v 3980 1709 a(2)4044 1566 y FI(,)21 b(le)-246 1789
y(pr)o(emier)d(calcul)g(\340)f(effectuer)i(est)f(le)g(2)10
b FE(\305)969 1756 y FG(1)p 969 1769 31 5 v 969 1818
a(2)1027 1789 y FI(tout)18 b(en)g(bas)f(\340)g(droite)o(.)-246
1927 y(P)m(ar)23 b(ailleurs)o(,)i(on)e(fer)o(a)h(bien)f(attention)i(d)n
('\351cr)q(ir)o(e)d(les)i(barr)o(es)e(de)h(fr)o(actions)h(sur)g(toute)g
(la)f(largeur)f(n\351cessair)o(e)o(,)i(sans)g(oublier)g(aucun)f(ter)q
(me)h(de)-246 2027 y(l)o('expr)o(ession.)e(P)m(ar)d(exemple)o(,)j(pour)
e(commencer)g(le)g(pr)o(emier)g(calcul,)h(il)f(faut)g(obligatoir)o
(ement)h(\351cr)q(ir)o(e)d(la)i(grosse)f(expr)o(ession)i(1)11
b FE(\305)3879 1994 y FG(1)p 3759 2007 272 5 v 3759 2068
a(1)p FF(\305)3918 2043 y Fg(1)p 3841 2053 179 4 v 3841
2107 a(1)p Fa(\305)3947 2087 y Fg(1)p 3908 2095 102 3
v 3908 2148 a(1)p Fa(\305)3976 2129 y Fg(1)p 3976 2137
25 3 v 3976 2170 a(1)4059 2027 y FI(en)-246 2235 y(entier)19
b(\226)e(sinon)h(c)n('est)g(faux)9 b(!)-246 2374 y(En\002n,)27
b(il)g(est)g(agr\351able)g(de)f(r)o(emarquer)g(que)1187
2341 y FG(1)p 1177 2354 50 5 v 1188 2381 a Ff(a)p 1187
2391 30 4 v 1188 2429 a(b)1260 2374 y FE(\306)d FI(1)14
b FE(\243)1472 2341 y Fu(b)p 1471 2354 38 5 v 1472 2402
a(a)1542 2374 y FE(\306)1631 2341 y Fu(b)p 1630 2354
V 1631 2402 a(a)1727 2374 y FI(:)27 b(pour)g(inverser)g(une)g(fr)o
(action,)h(il)f(suf\002t)g(d)n('inter)q(ver)q(tir)h(le)f(num\351r)o
(ateur)h(et)f(le)-246 2495 y(d\351nominateur)-5 b(.)20
b(La)d(situation)i(se)f(pr\351senter)o(a)h(constamment)h(dans)d(les)h
(calculs)g(ci-dessous)o(.)70 2804 y(1)10 b FE(\305)340
2748 y FI(1)p 195 2785 330 5 v 195 2870 a(1)g FE(\305)403
2837 y FG(1)p 321 2850 195 5 v 321 2910 a(1)p FF(\305)442
2886 y Fg(1)p 404 2896 102 4 v 404 2949 a(1)p Fa(\305)471
2930 y Fg(1)p 471 2938 25 3 v 471 2971 a(1)549 2804 y
FE(\306)k FI(1)c FE(\305)879 2748 y FI(1)p 744 2785 310
5 v 744 2870 a(1)g FE(\305)941 2837 y FG(1)p 870 2850
175 5 v 870 2910 a(1)p FF(\305)981 2886 y Fg(1)p 952
2896 82 4 v 952 2932 a(1)p Fa(\305)p Fg(1)1078 2804 y
FE(\306)k FI(1)c FE(\305)1386 2748 y FI(1)p 1273 2785
266 5 v 1273 2870 a(1)g FE(\305)1448 2837 y FG(1)p 1399
2850 131 5 v 1409 2886 a Fg(2)p 1409 2896 25 4 v 1409
2932 a(2)1443 2910 y FF(\305)1495 2886 y Fg(1)p 1495
2896 V 1495 2932 a(2)1563 2804 y FE(\306)k FI(1)c FE(\305)1828
2748 y FI(1)p 1758 2785 180 5 v 1758 2870 a(1)g FE(\305)1890
2837 y FG(1)p 1884 2850 45 5 v 1894 2886 a Fg(3)p 1894
2896 25 4 v 1894 2932 a(2)1962 2804 y FE(\306)k FI(1)c
FE(\305)2220 2748 y FI(1)p 2157 2785 167 5 v 2157 2870
a(1)g FE(\305)2283 2837 y FG(2)p 2283 2850 31 5 v 2283
2898 a(3)2348 2804 y FE(\306)k FI(1)c FE(\305)2610 2748
y FI(1)p 2542 2785 177 5 v 2552 2837 a FG(3)p 2552 2850
31 5 v 2552 2898 a(3)2603 2870 y FE(\305)2678 2837 y
FG(2)p 2678 2850 V 2678 2898 a(3)2743 2804 y FE(\306)k
FI(1)c FE(\305)2943 2748 y FI(1)p 2938 2785 51 5 v 2948
2837 a FG(5)p 2948 2850 31 5 v 2948 2898 a(3)3013 2804
y FE(\306)k FI(1)c FE(\305)3208 2748 y FI(3)p 3208 2785
41 5 v 3208 2861 a(5)3273 2804 y FE(\306)3352 2748 y
FI(5)p 3352 2785 V 3352 2861 a(5)3412 2804 y FE(\305)3487
2748 y FI(3)p 3487 2785 V 3487 2861 a(5)3552 2804 y FE(\306)3631
2748 y FI(8)p 3631 2785 V 3631 2861 a(5)70 3112 y(1)g
FE(\305)340 3056 y FI(1)p 195 3092 330 5 v 195 3177 a(2)g
FE(\305)403 3145 y FG(1)p 321 3158 195 5 v 321 3218 a(2)p
FF(\305)442 3193 y Fg(1)p 404 3203 102 4 v 404 3257 a(2)p
Fa(\305)471 3237 y Fg(1)p 471 3245 25 3 v 471 3279 a(2)549
3112 y FE(\306)k FI(1)c FE(\305)899 3056 y FI(1)p 744
3092 350 5 v 744 3177 a(2)g FE(\305)961 3145 y FG(1)p
870 3158 214 5 v 870 3218 a(2)p FF(\305)1001 3193 y Fg(1)p
952 3203 122 4 v 962 3237 a(4)p 962 3245 25 3 v 962 3279
a(2)997 3257 y Fa(\305)1039 3237 y Fg(1)p 1039 3245 V
1039 3279 a(2)1118 3112 y FE(\306)k FI(1)c FE(\305)1429
3056 y FI(1)p 1313 3092 273 5 v 1313 3177 a(2)g FE(\305)1491
3145 y FG(1)p 1438 3158 137 5 v 1438 3218 a(2)p FF(\305)1531
3193 y Fg(1)p 1521 3203 45 4 v 1531 3237 a(5)p 1531 3245
25 3 v 1531 3279 a(2)1609 3112 y FE(\306)k FI(1)c FE(\305)1929
3056 y FI(1)p 1804 3092 291 5 v 1804 3177 a(2)g FE(\305)1992
3145 y FG(1)p 1930 3158 155 5 v 1940 3193 a Fg(10)p 1940
3203 49 4 v 1952 3240 a(5)1998 3218 y FF(\305)2050 3193
y Fg(2)p 2050 3203 25 4 v 2050 3240 a(5)2119 3112 y FE(\306)k
FI(1)c FE(\305)2395 3056 y FI(1)p 2314 3092 205 5 v 2314
3177 a(2)g FE(\305)2458 3145 y FG(1)p 2439 3158 69 5
v 2449 3193 a Fg(12)p 2449 3203 49 4 v 2461 3240 a(5)2542
3112 y FE(\306)k FI(1)c FE(\305)2836 3056 y FI(1)p 2737
3092 239 5 v 2747 3145 a FG(24)p 2747 3158 62 5 v 2747
3206 a(12)2828 3177 y FE(\305)2919 3145 y FG(5)p 2904
3158 V 2904 3206 a(12)2999 3112 y FE(\306)k FI(1)c FE(\305)3215
3056 y FI(1)p 3194 3092 82 5 v 3204 3145 a FG(29)p 3204
3158 62 5 v 3204 3206 a(12)3300 3112 y FE(\306)3379 3056
y FI(29)p 3379 3092 82 5 v 3379 3169 a(29)3480 3112 y
FE(\305)3555 3056 y FI(12)p 3555 3092 V 3555 3169 a(29)3660
3112 y FE(\306)3739 3056 y FI(41)p 3739 3092 V 3739 3169
a(29)-246 3433 y FJ(R)o(emarques)k(:)p 0 TeXcolorgray
-76 3533 a FI(\225)p 0 TeXcolorgray 42 w(Il)i(y)g(a)h(un)g(lien)h(entr)
o(e)f(le)g(pr)o(emier)g(calcul)h(et)f(la)g(suite)h(de)f(F)o(ibonacci)g
(:)g(1,)g(1,)h(2,)f(3,)h(5,)f(8,)h(13,)g(...,)f(dont)g(chaque)h(ter)q
(me)f(s)m('obtient)h(en)g(faisant)f(la)-3 3632 y(somme)i(des)e(deux)h
(pr\351c\351dents)g(:)f(1)10 b FE(\305)g FI(1)16 b FE(\306)e
FI(2,)k(1)10 b FE(\305)g FI(2)15 b FE(\306)g FI(3,)j(2)10
b FE(\305)g FI(3)15 b FE(\306)f FI(5,)k(3)10 b FE(\305)g
FI(5)16 b FE(\306)e FI(8,)k(8)10 b FE(\305)g FI(5)15
b FE(\306)f FI(13,)19 b(etc)o(.)p 0 TeXcolorgray -76
3732 a(\225)p 0 TeXcolorgray 42 w(On)24 b(pourr)o(ait)h(poursuivr)o(e)g
(la)g(fr)o(action)g(jusqu)n('\340)g(l)o('in\002ni)h(:)e(1)13
b FE(\305)2042 3699 y FG(1)p 1915 3712 286 5 v 1915 3773
a(1)p FF(\305)2082 3748 y Fg(1)p 1998 3758 193 4 v 1998
3812 a(1)p Fa(\305)2111 3792 y Fg(1)p 2065 3800 116 3
v 2065 3853 a(1)p Fa(\305)2139 3833 y Fg(1)p 2132 3841
39 3 v 2132 3870 a Fa(\242\242\242)2210 3732 y FI(.)25
b(Plus)f(on)g(avance)o(,)h(plus)g(on)f(se)h(r)o(approche)g(du)f(nombr)o
(e)g(d)n('or)-3 3969 y FB(\301)14 b FE(\306)143 3934
y FG(1)p FF(\305)216 3885 y(p)p 264 3885 31 4 v 49 x
FG(5)p 143 3950 152 5 v 204 3998 a(2)319 3969 y FE(\274)g
FI(1,)8 b(618.)p 0 TeXcolorgray -76 4080 a(\225)p 0 TeXcolorgray
42 w(On)23 b(pourr)o(ait)h(aussi)h(poursuivr)o(e)g(la)e(deuxi\350me)i
(fr)o(action)f(jusqu)n('\340)h(l)o('in\002ni)g(:)e(1)13
b FE(\305)2597 4047 y FG(1)p 2470 4060 286 5 v 2470 4121
a(2)p FF(\305)2637 4096 y Fg(1)p 2552 4106 193 4 v 2552
4160 a(2)p Fa(\305)2665 4140 y Fg(1)p 2620 4148 116 3
v 2620 4201 a(2)p Fa(\305)2694 4181 y Fg(1)p 2687 4189
39 3 v 2687 4218 a Fa(\242\242\242)2765 4080 y FI(.)24
b(Dans)e(ce)i(cas)o(,)g(on)f(se)h(r)o(approche)g(de)3966
4015 y FE(p)p 4030 4015 41 5 v 65 x FI(2)d FE(\274)-3
4278 y FI(1,)8 b(414.)p 0 TeXcolorgray -76 4377 a(\225)p
0 TeXcolorgray 42 w(C)o(es)21 b(\253)15 b(fr)o(actions)21
b(in\002nies)16 b(\273)41 b(sont)22 b(\351tudi\351es)g(par)e(les)i
(math\351maticiens)h(depuis)f(longtemps)9 b(;)23 b(leur)e(nom)g
(of\002ciel)g(est)h(\253)14 b(fr)o(actions)22 b(conti-)-3
4477 y(nues)14 b(\273.)-246 4535 y
SDict begin H.S end
 -246 4535 a -246 4535
a
SDict begin 12 H.A end
 -246 4535 a -246 4535 a
SDict begin [/View [/XYZ H.V]/Dest (exo.81) cvn /DEST pdfmark end
 -246 4535 a -246 4550 a
SDict begin H.S end
 -246
4550 a -246 4550 a
SDict begin 12 H.A end
 -246 4550 a -246 4550 a
SDict begin [/View [/XYZ H.V]/Dest (Item.222) cvn /DEST pdfmark end
 -246 4550
a 0 TeXcolorgray 109 x FJ(Ex)o(er)o(cice)g(81)p 0 TeXcolorgray
0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray 43 w(P)n(our)j(\253)d
(isoler)g(\273)34 b Fz(d)7 b FI(,)18 b(on)g(par)q(t)f(de)g(l)o
('\351galit\351)k Fz(v)g FE(\306)1792 4627 y Fu(d)p 1792
4640 40 5 v 1799 4688 a(t)1842 4659 y FI(,)c(dont)h(on)f(multiplie)j
(les)e(deux)g(membr)o(es)g(par)h Fz(t)39 b FI(:)1833
4865 y Fz(v)17 b FE(\243)p 1 0 0 TeXcolorrgb 12 w Fz(t)p
0 TeXcolorgray 22 w FE(\306)2083 4809 y Fz(d)p 2083 4846
53 5 v 2089 4942 a Fy(\001)2093 4924 y Fz(t)2156 4865
y FE(\243)2218 4884 y Fy(\001)p 1 0 0 TeXcolorrgb 2223
4865 a Fz(t)p 0 TeXcolorgray 8 w FI(.)-38 5046 y(Les)j
Fz(t)25 b FI(se)18 b(simpli\002ent)h(dans)f(le)f(membr)o(e)h(de)f
(droite)g(:)h(on)f(obtient)j Fz(v)d FE(\243)12 b Fz(t)22
b FE(\306)15 b Fz(d)7 b FI(.)-38 5194 y(P)n(our)17 b(\253)d(isoler)g
(\273)36 b Fz(t)8 b FI(,)17 b(on)h(r)o(epar)q(t)e(de)i(l)o
('\351galit\351)j Fz(v)c FE(\243)12 b Fz(t)22 b FE(\306)14
b Fz(d)7 b FI(,)18 b(dont)f(on)h(divise)g(les)g(deux)g(membr)o(es)g
(par)h Fz(v)38 b FI(:)1889 5359 y Fy(\001)1888 5336 y
Fz(v)17 b FE(\243)12 b Fz(t)p 1886 5373 159 5 v 1945
5472 a Fy(\001)p 1 0 0 TeXcolorrgb 1944 5449 a Fz(v)p
0 TeXcolorgray 2069 5392 a FE(\306)2148 5336 y Fz(d)p
2148 5373 53 5 v 1 0 0 TeXcolorrgb 2152 5449 a(v)p 0
TeXcolorgray 2211 5392 a FI(.)-38 5630 y(C)o(onclusion)19
b(:)46 b Fz(d)22 b FE(\306)16 b Fz(v)h FE(\243)12 b Fz(t)p
412 5548 352 4 v 412 5657 4 111 v 760 5657 V 412 5659
352 4 v 573 w(t)22 b FE(\306)1427 5597 y Fu(d)p 1427
5610 40 5 v 1430 5658 a(v)p 1270 5529 236 4 v 1270 5686
4 159 v 1502 5686 V 1270 5688 236 4 v 0 TeXcolorgray
1909 5895 a FI(41)p 0 TeXcolorgray eop end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.42) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.223) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(par)q(t)g(de)g(l)o
('\351galit\351)e Fz(U)23 b FE(\306)14 b Fz(R)7 b(I)i
FI(,)20 b(dont)d(on)h(divise)g(les)g(deux)g(membr)o(es)g(par)f
Fz(R)37 b FI(:)1871 24 y Fz(U)p 1875 61 66 5 v 1 0 0
TeXcolorrgb 1880 137 a(R)p 0 TeXcolorgray 1965 80 a FE(\306)2030
39 y Fy(\000)2044 24 y Fz(R)16 b FE(\243)c Fz(I)p 2044
61 169 5 v 2087 157 a Fy(\000)p 1 0 0 TeXcolorrgb 2101
142 a Fz(R)p 0 TeXcolorgray 2222 80 a FI(.)-38 298 y(C)o(onclusion)19
b(:)48 b Fz(I)24 b FE(\306)569 265 y Fu(U)p 572 278 50
5 v 576 327 a(R)p 412 200 248 4 v 412 353 4 156 v 656
353 V 412 355 248 4 v -246 365 a
SDict begin H.S end
 -246 365 a -246 365
a
SDict begin 12 H.A end
 -246 365 a -246 365 a
SDict begin [/View [/XYZ H.V]/Dest (Item.224) cvn /DEST pdfmark end
 -246 365 a 0 TeXcolorgray -141
453 a FI(3.)p 0 TeXcolorgray 43 w Fz(P)e FE(\306)10 b
Fz(U)h(I)28 b FI(et)13 b Fz(U)23 b FE(\306)14 b Fz(R)7
b(I)29 b FI(donc)17 b Fz(P)22 b FE(\306)46 b Fz(U)894
488 y Fr(|{z})907 566 y FF(\306)p Fu(R)7 b(I)1042 453
y Fz(I)24 b FE(\306)15 b Fz(R)7 b(I)21 b FE(\243)12 b
Fz(I)25 b FE(\306)14 b Fz(R)7 b(I)1543 423 y FG(2)-38
690 y FI(C)o(onclusion)19 b(:)46 b Fz(P)22 b FE(\306)14
b Fz(R)7 b(I)669 660 y FG(2)p 412 596 324 4 v 412 716
4 123 v 731 716 V 412 718 324 4 v -38 840 a FJ(R)o(emarque)13
b(:)18 b FI(Les)f(for)q(mules)i(des)e(questions)i(2)e(et)g(3)h(sont)f
(des)h(for)q(mules)g(sur)f(les)h(cir)o(cuits)f(\351lectr)q(iques)o(.)d
Fz(U)25 b FI(d\351signe)18 b(la)f(tension)i(\(en)e(volts\),)-36
940 y Fz(I)28 b FI(l)o('intensit\351)20 b(\(en)d(amp\350r)o(es\),)h
Fz(R)23 b FI(la)18 b(r\351sistance)g(\(en)g(ohms\))g(et)g
Fz(P)25 b FI(la)17 b(puissance)i(\(en)f(watts\).)-246
967 y
SDict begin H.S end
 -246 967 a -246 967 a
SDict begin 12 H.A end
 -246 967 a -246 967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.225) cvn /DEST pdfmark end
 -246
967 a 0 TeXcolorgray -141 1060 a FI(4.)p 0 TeXcolorgray
43 w(On)f(par)q(t)g(de)g(l)o('\351galit\351)k Fz(v)g
FE(\306)764 994 y Fr(p)p 841 994 141 5 v 841 1060 a FI(2)r
Fz(g)10 b(h)t FI(,)18 b(dont)f(on)h(\351l\350ve)g(les)g(deux)g(membr)o
(es)g(au)f(carr\351)g(:)1847 1266 y Fz(v)1893 1232 y
FG(2)1942 1266 y FE(\306)2011 1173 y Fr(q)p 2087 1173
V 93 x FI(2)r Fz(g)10 b(h)2228 1188 y FG(2)1847 1414
y Fz(v)1893 1379 y FG(2)1942 1414 y FE(\306)k FI(2)r
Fz(g)c(h)-38 1583 y FI(P)o(uis)18 b(on)f(divise)i(par)e(2)r
Fz(g)42 b FI(:)1882 1770 y Fz(v)1928 1740 y FG(2)p 1877
1807 91 5 v 1 0 0 TeXcolorrgb 1877 1883 a FI(2)r Fz(g)p
0 TeXcolorgray 1991 1826 a FE(\306)2062 1794 y Fy(\032)2085
1776 y(\032)2070 1770 y FI(2)r Fz(g)10 b(h)p 2070 1807
141 5 v 2087 1907 a Fy(\032)2111 1889 y(\032)p 1 0 0
TeXcolorrgb 2095 1883 a FI(2)r Fz(g)p 0 TeXcolorgray
2221 1826 a FI(.)-38 2070 y(C)o(onclusion)19 b(:)46 b
Fz(h)18 b FE(\306)586 2038 y Fu(v)621 2015 y Fg(2)p 584
2051 69 5 v 584 2099 a FG(2)q Fu(g)p 412 1959 279 4 v
412 2140 4 183 v 687 2140 V 412 2142 279 4 v -38 2258
a FJ(R)o(emarque)c(:)k FI(Dans)f(ces)h(for)q(mules)o(,)k
Fz(v)i FI(d\351signe)18 b(la)g(vitesse)i(\(en)e(m/s\))g(et)g
Fz(h)k FI(la)c(distance)g(par)o(cour)q(ue)g(\(en)g(m\))f(par)h(un)g
(objet)g(en)h(chute)f(libr)o(e)o(,)-38 2357 y(en)13 b(supposant)g(qu)n
('il)g(n)-6 b('est)14 b(soum)q(is)g(qu)n('\340)g(son)g(propr)o(e)f(poi)
q(ds)g(\(on)h(sup)q(pose)g(en)g(p)q(ar)q(ticulier)f(q)q(u)n('il)h(n)-6
b('y)13 b(a)h(pas)g(de)f(f)q(rottemen)q(t\).)g(L)q(a)g(con)q(stante)-36
2457 y Fz(g)27 b FI(d\351signe)17 b(l)o('acc\351l\351r)o(ation)j(de)d
(la)g(pesanteur)i(sur)f(la)f(terr)o(e)o(,)g(elle)h(vaut)g(environ)g(9,)
8 b(8.)-38 2567 y(Exemple)23 b(:)e(lorsqu)n('une)i(personne)g(chute)f
(d)n('une)h(hauteur)f(de)f(5)h(m,)g(sa)f(vitesse)j(\340)d(l)o('impact)i
(est)h Fz(v)h FE(\306)3052 2501 y Fr(p)p 3128 2501 141
5 v 66 x FI(2)r Fz(g)10 b(h)23 b FE(\274)3360 2507 y(p)p
3424 2507 341 5 v 60 x FI(2)10 b FE(\243)g FI(9,)e(8)i
FE(\243)g FI(5)21 b FE(\274)d FI(9,)8 b(9)23 b(m/s,)-38
2666 y(soit)18 b(environ)g(35,6)h(km/h.)-246 2688 y
SDict begin H.S end
 -246
2688 a -246 2688 a
SDict begin 12 H.A end
 -246 2688 a -246 2688 a
SDict begin [/View [/XYZ H.V]/Dest (Item.226) cvn /DEST pdfmark end
 -246 2688
a 0 TeXcolorgray -141 2787 a FI(5.)p 0 TeXcolorgray 43
w(On)e(par)q(t)g(de)g(l)o('\351galit\351)i Fz(E)j FE(\306)14
b Fz(m)t(c)883 2757 y FG(2)919 2787 y FI(,)j(et)h(l)o('on)g(divise)g(d)
n('abor)o(d)e(par)i Fz(m)35 b FI(:)1891 2942 y Fz(E)p
1881 2979 74 5 v 1 0 0 TeXcolorrgb 1881 3055 a(m)p 0
TeXcolorgray 1979 2998 a FE(\306)2050 2957 y Fy(\032)2057
2952 y(\032)2058 2942 y Fz(m)t(c)2171 2912 y FG(2)p 2058
2979 149 5 v 2087 3070 a Fy(\032)2094 3065 y(\032)p 1 0 0
TeXcolorrgb 2095 3055 a Fz(m)p 0 TeXcolorgray 2216 2998
a FI(.)-38 3265 y(On)17 b(obtient)h Fz(c)391 3235 y FG(2)441
3265 y FE(\306)528 3232 y Fu(E)p 520 3245 57 5 v 520
3293 a(m)586 3265 y FI(,)g(d)n('o\371)46 b Fz(c)20 b
FE(\306)948 3173 y Fr(q)p 1024 3173 77 5 v 1042 3232
a Fu(E)p 1034 3245 57 5 v 1034 3293 a(m)p 796 3139 332
4 v 796 3334 4 197 v 1125 3334 V 796 3336 332 4 v -38
3463 a FJ(R)o(emarque)11 b(:)16 b FI(La)f(r)o(elation)g
Fz(E)22 b FE(\306)14 b Fz(m)t(c)1014 3433 y FG(2)1065
3463 y FI(est)h(due)g(\340)g(Einstein.)i(J)n(e)d(laisse)j(aux)e
(amateurs)h(de)f(physique)h(le)g(plaisir)g(de)f(se)g(r)o(enseigner)h
(\340)e(son)i(sujet.)-246 3606 y
SDict begin H.S end
 -246 3606 a -246 3606
a
SDict begin 12 H.A end
 -246 3606 a -246 3606 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -246 3606 a 130 x FK(6)105
b(\311)o(quations)23 b(de)g(dr)o(oites)-246 3845 y
SDict begin H.S end
 -246
3845 a -246 3845 a
SDict begin 12 H.A end
 -246 3845 a -246 3845 a
SDict begin [/View [/XYZ H.V]/Dest (exo.76) cvn /DEST pdfmark end
 -246 3845
a -246 3835 a
SDict begin H.S end
 -246 3835 a -246 3835 a
SDict begin 12 H.A end
 -246 3835 a -246
3835 a
SDict begin [/View [/XYZ H.V]/Dest (Item.227) cvn /DEST pdfmark end
 -246 3835 a 0 TeXcolorgray 85 x FJ(Ex)o(er)o(cice)14
b(76)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(ace)g(la)h(droite)f Fz(d)22
b FI(:)c Fz(y)j FE(\306)14 b FI(0,)8 b(5)r Fz(x)15 b
FE(\241)10 b FI(2)20 b(\340)d(par)q(tir)g(d)n('un)h(tableau)g(de)f
(valeurs)h(avec)g(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p
0 TeXcolorgray 0 TeXcolorgray 712 4025 551 4 v 712 4125
4 100 v 767 4095 a Fz(x)p 862 4125 V 137 w FI(0)p 1060
4125 V 158 w(2)p 1259 4125 V 712 4128 551 4 v 712 4228
4 100 v 769 4198 a Fz(y)p 862 4228 V 110 w FE(\241)p
FI(2)p 1060 4228 V 103 w FE(\241)p FI(1)p 1259 4228 V
712 4231 551 4 v 0 TeXcolorgray 2050 4261 9 240 v 0 TeXcolorgray
2861 4105 a(0,)8 b(5)i FE(\243)g FI(0)g FE(\241)g FI(2)17
b FE(\306)d(\241)p FI(2)2861 4229 y(0,)8 b(5)i FE(\243)g
FI(2)g FE(\241)g FI(2)17 b FE(\306)d(\241)p FI(1)-38
4426 y(On)j(place)h(les)g(deux)g(points)g(en)g(ver)q(t,)f(puis)i(on)e
(tr)o(ace)h(la)f(droite)g(de)g(la)h(m\352me)h(couleur)-5
b(.)p 0 TeXcolorgray 0 TeXcolorgray 825 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 295.90836 a add def
/d 0.0 a add neg def /h 138.84952 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 825 5646
a 1459 4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 5 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 219.65521 0.0 -76.25314 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 43.24829 0.0 -95.60123   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 219.65521  0 -76.25314  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.25314
 219.65521  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-95.60123  def /maxTickline 43.24829  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 43.24829
0.0 -95.60123   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 219.65521
0.0 -76.25314 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 43.24829  0 -95.60123  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -95.60123
 43.24829  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.25314  def /maxTickline 219.65521  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 43.24829
0.0 -95.60123   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 219.65521
0.0 -76.25314 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1444 4949 a FG(0)204
b(1)i(2)f(3)g(4)g(5)g(6)h(7)-1942 b FF(\241)p FG(1)-309
b FF(\241)p FG(2)1370 4871 y(0)1328 5108 y FF(\241)p
FG(1)1328 5344 y FF(\241)p FG(2)1328 5580 y FF(\241)p
FG(3)1370 4635 y(1)1459 4852 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.68 def /x1 7.72
def /dx x1 x sub 49 div def /F@pstplot ((-2.--0.5*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 1459 4852 a
tx@Dict begin { 172.42355 24.46938 } PutCoor PutBegin  end
 1459 4852 a 0 1 0 TeXcolorrgb
57 x Fz(d)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852 a
tx@Dict begin { 30.729 -22.76227 } PutCoor PutBegin  end
 1459 4852 a 1 0 0
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459
4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852
a
tx@Dict begin { 116.08723 5.69046 } PutCoor PutBegin  end
 1459 4852 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
-85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1459 4852 a
tx@Dict begin { -54.62921 -79.66776 } PutCoor PutBegin  end
 1459 4852 a 0 0 1 TeXcolorrgb 1457 4851 a
Fz(C)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 142.26372
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1459 4852 a
tx@Dict begin { 144.53998 34.1432 } PutCoor PutBegin  end
 1459 4852 a 1 0 0
TeXcolorrgb Fz(E)p 0 TeXcolorgray 1459 4852 a
tx@Dict begin  PutEnd  end
 1459 4852
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 56.90549
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 0.0 -56.90549
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3282 5646 a
currentpoint initclip moveto
 3282 5646 a 0 TeXcolorgray
1909 5895 a FI(42)p 0 TeXcolorgray eop end
%%Page: 43 43
TeXDict begin 43 42 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.43) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.228) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(D)o('apr\350s)18 b(le)h(cours)o(,)g(un)g
(point)i Fz(M)960 -227 y Fr(\241)992 -163 y Fz(x)1034
-151 y Fu(M)1098 -163 y FI(;)12 b Fz(y)1170 -151 y Fu(M)1235
-227 y Fr(\242)1283 -163 y FI(appar)q(tient)19 b(\340)f
Fz(d)26 b FI(si,)19 b(et)g(seulement)i(si,)i Fz(y)2491
-151 y Fu(M)2570 -163 y FE(\306)16 b FI(0,)8 b(5)j FE(\243)i
Fz(x)2870 -151 y Fu(M)2945 -163 y FE(\241)e FI(2.)19
b(P)m(ar)f(exemple)o(,)i Fz(B)7 b FI(\()16 b(4)3634 -117
y Fu(x)3666 -107 y Ff(B)3704 -163 y FI(;)24 b(0)3735
-116 y Fu(y)3765 -106 y Ff(B)3803 -163 y FI(\))18 b(est)i(sur)e
Fz(d)-38 -35 y FI(car)32 b(0)90 11 y Fu(y)120 21 y Ff(B)171
-35 y FE(\306)15 b FI(0,)8 b(5)i FE(\243)26 b FI(4)425
11 y Fu(x)457 21 y Ff(B)506 -35 y FE(\241)10 b FI(2.)-38
110 y(F)l(aisons)21 b(le)e(calcul)h(pour)f(chacun)g(des)h(points)g
(propos\351s)o(.)g(On)f(les)g(place)h(ensuite)h(en)e(bleu)h(sur)f(le)h
(gr)o(aphique)g(s)m('ils)g(sont)g(sur)f Fz(d)7 b FI(,)20
b(en)f(rouge)-38 209 y(sinon.)606 485 y(P)n(oint)24 b
Fz(A)s FI(\(1;)8 b FE(\241)p FI(1\))32 b(:)710 b FE(\241)10
b FI(1)15 b FE(6\306)f FI(0,)8 b(5)i FE(\243)g FI(1)g
FE(\241)g FI(2)756 b(donc)23 b Fz(A)17 b FE(\335)d Fz(d)606
609 y FI(P)n(oint)k Fz(B)7 b FI(\(4;)h(0\))33 b(:)756
b(0)15 b FE(\306)f FI(0,)8 b(5)i FE(\243)g FI(4)g FE(\241)g
FI(2)831 b(donc)17 b Fz(B)22 b FE(2)15 b Fz(d)606 734
y FI(P)n(oint)h Fz(C)9 b FI(\()p FE(\241)p FI(2;)f FE(\241)p
FI(3\))32 b(:)655 b FE(\241)10 b FI(3)15 b FE(\306)f
FI(0,)8 b(5)i FE(\243)g FI(\()p FE(\241)p FI(2\))g FE(\241)g
FI(2)647 b(donc)15 b Fz(C)23 b FE(2)15 b Fz(d)606 858
y FI(P)n(oint)j Fz(E)8 b FI(\(5;)g(1\))32 b(:)758 b(1)15
b FE(6\306)f FI(0,)8 b(5)i FE(\243)g FI(5)g FE(\241)g
FI(2)831 b(donc)17 b Fz(E)22 b FE(\335)14 b Fz(d)-246
1077 y
SDict begin H.S end
 -246 1077 a -246 1077 a
SDict begin 12 H.A end
 -246 1077 a -246 1077
a
SDict begin [/View [/XYZ H.V]/Dest (Item.229) cvn /DEST pdfmark end
 -246 1077 a 0 TeXcolorgray -141 1158 a FI(3.)p 0 TeXcolorgray
43 w(S)o(oit)k FA(\242)d FI(:)j Fz(y)j FE(\306)14 b(\241)r
Fz(x)h FE(\305)10 b FI(3.)19 b(P)n(our)e(savoir)g(si)h(les)g(points)h
(propos\351s)f(sont)g(sur)g FA(\242)p FI(,)g(on)f(r)o(epr)o(end)g(la)g
(m\351thode)i(de)e(la)g(question)i(2)f(:)579 1433 y(P)n(oint)i
Fz(H)8 b FI(\(1;)g(2\))32 b(:)846 b(2)14 b FE(\306)h(\241)p
FI(1)10 b FE(\305)g FI(3)896 b(donc)19 b Fz(H)k FE(2)14
b FA(\242)579 1558 y FI(P)n(oint)20 b Fz(I)9 b FI(\()p
FE(\241)p FI(2;)f(6\))33 b(:)822 b(6)14 b FE(6\306)h(\241)p
FI(\()p FE(\241)p FI(2\))10 b FE(\305)g FI(3)787 b(donc)19
b Fz(I)24 b FE(\335)15 b FA(\242)579 1683 y FI(P)n(oint)23
b Fz(J)8 b FI(\(1000;)g FE(\241)p FI(997\))34 b(:)628
b FE(\241)10 b FI(997)16 b FE(\306)e(\241)p FI(1000)c
FE(\305)g FI(3)620 b(donc)22 b Fz(J)g FE(2)14 b FA(\242)-246
1902 y
SDict begin H.S end
 -246 1902 a -246 1902 a
SDict begin 12 H.A end
 -246 1902 a -246 1902
a
SDict begin [/View [/XYZ H.V]/Dest (exo.77) cvn /DEST pdfmark end
 -246 1902 a -246 1915 a
SDict begin H.S end
 -246 1915 a -246 1915 a
SDict begin 12 H.A end
 -246
1915 a -246 1915 a
SDict begin [/View [/XYZ H.V]/Dest (Item.230) cvn /DEST pdfmark end
 -246 1915 a 0 TeXcolorgray 80 x FJ(Ex)o(er)o(cice)g
(77)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(S)o(oit)k Fz(D)j FI(:)d Fz(y)j FE(\306)14 b FI(2)r
Fz(x)h FE(\305)10 b FI(1.)-246 2022 y
SDict begin H.S end
 -246 2022 a -246
2022 a
SDict begin 12 H.A end
 -246 2022 a -246 2022 a
SDict begin [/View [/XYZ H.V]/Dest (Item.231) cvn /DEST pdfmark end
 -246 2022 a 0 TeXcolorgray
10 2114 a FI(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 733 2223 782 4 v 733 2322 4 100 v 788 2293
a Fz(x)p 883 2322 V 109 w FE(\241)p FI(1)p 1081 2322
V 103 w(0)p 1225 2322 V 104 w(1)p 1368 2322 V 103 w(2)p
1512 2322 V 733 2326 782 4 v 733 2425 4 100 v 790 2396
a Fz(y)p 883 2425 V 110 w FE(\241)p FI(1)p 1081 2425
V 103 w(1)p 1225 2425 V 104 w(3)p 1368 2425 V 103 w(5)p
1512 2425 V 733 2429 782 4 v 844 3110 a(2)g FE(\243)g
FI(\()p FE(\241)p FI(1\))g FE(\305)g FI(1)16 b FE(\306)e(\241)p
FI(1)844 3234 y(2)c FE(\243)g FI(0)g FE(\305)g FI(1)17
b FE(\306)d FI(1)844 3359 y(2)c FE(\243)g FI(1)g FE(\305)g
FI(1)17 b FE(\306)d FI(3)844 3483 y(2)c FE(\243)g FI(2)g
FE(\305)g FI(1)17 b FE(\306)d FI(5)p 0 TeXcolorgray 2141
3625 9 1406 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2240 3603 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 223.07043 a add def
/d 0.0 a add neg def /h 166.61972 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2240 3603 a 3053 3240 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 -68.28685 T 15
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 175.72485 0.0 -113.81142 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  -113.81142 0.0 T 15
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.33598 0.0 -113.81142   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 125.19255  0 -97.87788  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -97.87788
 125.19255  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-43.70354  def /maxTickline 122.91618  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.91618
0.0 -43.70354   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 125.19255
0.0 -97.87788 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.91618  0 -43.70354  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -43.70354
 122.91618  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-97.87788  def /maxTickline 125.19255  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.91618
0.0 -43.70354   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 125.19255
0.0 -97.87788 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3038 3337 a FG(0)157
b(1)h(2)g(3)g(4)g(5)-1186 b FF(\241)p FG(1)-261 b FF(\241)p
FG(2)f FF(\241)p FG(3)g FF(\241)p FG(4)2964 3259 y(0)2922
3448 y FF(\241)p FG(1)2964 3070 y(1)2964 2881 y(2)2964
2692 y(3)2964 2504 y(4)3053 3240 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.5 def
/dx x1 x sub 49 div def /F@pstplot ((+1.--2.*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot 22.76228 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
22.76228 mul gt { moveto } { dup -1.e30 22.76228 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 3053 3240 a
tx@Dict begin { 18.20988 91.04913 } PutCoor PutBegin  end
 3053 3240 a 1 0 0 TeXcolorrgb
53 x Fz(D)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ -22.76228
-22.76228   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 0.0 22.76228
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 22.76228
68.28685   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 1 0 0  setrgbcolor  [ 45.52457
113.81142   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 -22.76228 -22.76228 -22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 22.76228 0.0 -22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 22.76228 0.0 22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 68.28685 22.76228 22.76228   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 68.28685 22.76228 68.28685   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
45.52457 113.81142 45.52457 68.28685   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3053 3240 a
tx@Dict begin { -15.93352 -13.6575 } PutCoor PutBegin  end
 3053 3240 a 0 0 1
TeXcolorrgb 51 x FE(\305)p FI(1)p 0 TeXcolorgray 3053
3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240 a
tx@Dict begin { 2.27637 -4.55238 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb
51 x FE(\305)p FI(2)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053
3240 a 3053 3240 a
tx@Dict begin { 6.82875 31.86705 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x
FE(\305)p FI(1)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240
a 3053 3240 a
tx@Dict begin { 25.03865 45.52457 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x FE(\305)p
FI(2)p 0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240
a
tx@Dict begin { 47.80093 91.04913 } PutCoor PutBegin  end
 3053 3240 a 0 0 1 TeXcolorrgb 51 x FE(\305)p FI(2)p
0 TeXcolorgray 3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 3053 3240 a
tx@Dict begin { 29.59103 77.39162 } PutCoor PutBegin  end
 3053
3240 a 0 0 1 TeXcolorrgb 51 x FE(\305)p FI(1)p 0 TeXcolorgray
3053 3240 a
tx@Dict begin  PutEnd  end
 3053 3240 a 4092 3603 a
currentpoint initclip moveto
 4092 3603 a -246
3696 a
SDict begin H.S end
 -246 3696 a -246 3696 a
SDict begin 12 H.A end
 -246 3696 a -246 3696
a
SDict begin [/View [/XYZ H.V]/Dest (Item.232) cvn /DEST pdfmark end
 -246 3696 a 0 TeXcolorgray 4 3807 a FI(\(b\))p 0 TeXcolorgray
41 w(Quand)19 b Fz(x)j FI(augmente)d(de)e(1,)22 b Fz(y)i
FI(augmente)19 b(de)e(2.)145 3918 y(En)f(effet,)i(dans)f(le)f(tableau)i
(pr\351c\351dent,)f(les)g(valeurs)g(de)i Fz(x)i FI(augmente)d(de)e(1)h
(en)g(1)9 b(;)17 b(tandis)g(les)g(valeurs)g(de)j Fz(y)k
FI(augmentent)18 b(de)e(2)h(en)g(2.)145 4018 y(On)g(l)o('obser)q(ve)i
(bien)e(sur)h(le)g(gr)o(aphique)g(\351galement.)145 4171
y FJ(R)o(emarque)12 b(:)17 b FI(C)o(ela)g(vient)g(du)f(\253)d(2)g(\273)
32 b(de)16 b(l)o('\351quation)23 b Fz(y)e FE(\306)14
b FI(2)r Fz(x)e FE(\305)7 b FI(1)32 b(:)17 b(si)h Fz(x)k
FI(augmente)17 b(de)f(1,)h(alors)f(2)r Fz(x)22 b FI(augmente)c(de)e(2.)
h(C'est)g(la)f(m\351thode)145 4271 y(que)22 b(l)o('on)g(utiliser)o(a)h
(pour)f(v\351r)q(i\002er)f(gr)o(aphiquement)j(la)d(valeur)h(du)g
(coef\002cient)g(dir)o(ecteur)f(\(cf)g(les)h(\253)15
b FE(\305)p FI(2)g(\273)43 b(sur)21 b(le)h(gr)o(aphique\))9
b(;)22 b(elle)145 4371 y(est)c(g\351n\351r)o(alis\351e)g(dans)g(la)f
(question)i(suivante)o(.)-246 4398 y
SDict begin H.S end
 -246 4398 a -246
4398 a
SDict begin 12 H.A end
 -246 4398 a -246 4398 a
SDict begin [/View [/XYZ H.V]/Dest (Item.233) cvn /DEST pdfmark end
 -246 4398 a 0 TeXcolorgray
-141 4490 a FI(2.)p 0 TeXcolorgray 43 w(S)o(oit)f FA(\242)g
FI(une)g(droite)f(non)g(ver)q(ticale)h(quelconque)o(,)h(d)n
('\351quation)k Fz(y)e FE(\306)16 b Fz(a)6 b(x)15 b FE(\305)10
b Fz(b)22 b FI(;)17 b(et)h(soient)24 b Fz(A)c FI(et)e
Fz(B)25 b FI(deux)18 b(points)h(distincts)f(de)f FA(\242)p
FI(.)-246 4517 y
SDict begin H.S end
 -246 4517 a -246 4517 a
SDict begin 12 H.A end
 -246 4517 a
-246 4517 a
SDict begin [/View [/XYZ H.V]/Dest (Item.234) cvn /DEST pdfmark end
 -246 4517 a 0 TeXcolorgray 10 4609 a FI(\(a\))p
0 TeXcolorgray 47 w Fz(A)j FI(est)d(sur)h FA(\242)p FI(,)g(donc)j
Fz(y)792 4621 y Fu(A)850 4609 y FE(\306)16 b Fz(a)e FE(\243)e
Fz(x)1090 4621 y Fu(A)1144 4609 y FE(\305)e Fz(b)q FI(.)17
b(De)g(m\352me)o(,)h Fz(B)25 b FI(est)18 b(sur)g FA(\242)p
FI(,)g(donc)j Fz(y)2304 4621 y Fu(B)2365 4609 y FE(\306)16
b Fz(a)e FE(\243)e Fz(x)2601 4621 y Fu(B)2659 4609 y
FE(\305)e Fz(b)q FI(.)-246 4639 y
SDict begin H.S end
 -246 4639 a -246 4639
a
SDict begin 12 H.A end
 -246 4639 a -246 4639 a
SDict begin [/View [/XYZ H.V]/Dest (Item.235) cvn /DEST pdfmark end
 -246 4639 a 0 TeXcolorgray
4 4731 a FI(\(b\))p 0 TeXcolorgray 41 w(On)17 b(sait)h(que)k
Fz(y)601 4743 y Fu(A)658 4731 y FE(\306)17 b Fz(a)6 b(x)824
4743 y Fu(A)877 4731 y FE(\305)k Fz(b)21 b FI(et)d(que)k
Fz(y)1280 4743 y Fu(B)1341 4731 y FE(\306)16 b Fz(a)6
b(x)1502 4743 y Fu(B)1560 4731 y FE(\305)k Fz(b)q FI(,)18
b(donc)1552 4896 y Fz(y)1591 4908 y Fu(B)1648 4896 y
FE(\241)c Fz(y)1760 4908 y Fu(A)1818 4896 y FE(\306)1887
4897 y FI(\()1916 4896 y Fz(a)g FE(\243)e Fz(x)2081 4908
y Fu(B)2138 4896 y FE(\305)e Fz(b)2250 4897 y FI(\))2287
4896 y FE(\241)2352 4897 y FI(\()2381 4896 y Fz(a)k FE(\243)e
Fz(x)2550 4908 y Fu(A)2604 4896 y FE(\305)e Fz(b)2716
4897 y FI(\))1818 5020 y FE(\306)16 b Fz(a)e FE(\243)e
Fz(x)2054 5032 y Fu(B)2111 5020 y FE(\305)2179 5033 y
Fy(\001)2176 5020 y Fz(b)i FE(\241)e Fz(a)i FE(\243)e
Fz(x)2469 5032 y Fu(A)2524 5020 y FE(\241)2592 5033 y
Fy(\001)2589 5020 y Fz(b)1818 5145 y FE(\306)k Fz(a)1944
5146 y FI(\()1973 5145 y Fz(x)2014 5157 y Fu(B)2071 5145
y FE(\241)c Fz(x)2183 5157 y Fu(A)2227 5146 y FI(\))2262
5145 y(.)145 5320 y(On)17 b(en)g(d\351duit)1714 5501
y Fz(y)1753 5513 y Fu(B)1810 5501 y FE(\241)d Fz(y)1922
5513 y Fu(A)p 1710 5538 257 5 v 1712 5614 a Fz(x)1753
5626 y Fu(B)1810 5614 y FE(\241)e Fz(x)1922 5626 y Fu(A)1990
5557 y FE(\306)2071 5501 y Fz(a)2110 5521 y Fy(\030)2193
5500 y(\030)2276 5480 y(\030)2353 5460 y(\030)2118 5502
y FI(\()2147 5501 y Fz(x)2188 5513 y Fu(B)2245 5501 y
FE(\241)g Fz(x)2357 5513 y Fu(A)2401 5502 y FI(\))p 2069
5538 359 5 v 2112 5624 a Fy(\()2195 5610 y(\()2278 5596
y(\()2302 5592 y(\()2123 5614 y Fz(x)2164 5626 y Fu(B)2221
5614 y FE(\241)g Fz(x)2333 5626 y Fu(A)2452 5557 y FE(\306)k
Fz(a)t FI(.)p 0 TeXcolorgray 1909 5895 a(43)p 0 TeXcolorgray
eop end
%%Page: 44 44
TeXDict begin 44 43 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.44) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.78) cvn /DEST pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246
a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.236) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray
83 x FJ(Ex)o(er)o(cice)14 b(78)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
218 1357 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 185.22716 a add def
/d 0.0 a add neg def /h 169.0092 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 218 1357 a 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -42.67911 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 149.37688 0.0 -35.85028 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 119.07474 0.0 -49.93446   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 149.37688  0 -35.85028  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -35.85028
 149.37688  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-49.93446  def /maxTickline 119.07474  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 119.07474
0.0 -49.93446   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.37688
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 119.07474  0 -49.93446  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -49.93446
 119.07474  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-35.85028  def /maxTickline 149.37688  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 119.07474
0.0 -49.93446   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.37688
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 501 1039 a FG(0)146
b(1)g(2)g(3)g(4)g(5)g(6)-1292 b FF(\241)p FG(1)427 961
y(0)385 1139 y FF(\241)p FG(1)385 1316 y FF(\241)p FG(2)427
784 y(1)427 607 y(2)427 430 y(3)427 253 y(4)516 942 y
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 7. def
/dx x1 x sub 49 div def /F@pstplot ((-2.--4.*x)/2.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 7. def
/dx x1 x sub 49 div def /F@pstplot ((--16.-4.*x)/4.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 21.33955
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 15.3645 25.18051 } PutCoor PutBegin  end
 516 942 a 0 0 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 64.01866
106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 58.89705 110.53873 } PutCoor PutBegin  end
 516 942 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 106.69777
-21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
516 942 a
tx@Dict begin { 108.40497 -17.0717 } PutCoor PutBegin  end
 516 942 a 1 0 0 TeXcolorrgb 514 941 a Fz(C)p
0 TeXcolorgray 516 942 a
tx@Dict begin  PutEnd  end
 516 942 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 21.33955
64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 516 942 a
tx@Dict begin { 23.04675 68.2865 } PutCoor PutBegin  end
 516 942 a 1 0 0 TeXcolorrgb Fz(D)p
0 TeXcolorgray 516 942 a
tx@Dict begin  PutEnd  end
 516 942 a 1756 1357 a
currentpoint initclip moveto
 1756 1357
a -38 1514 a
SDict begin H.S end
 -38 1514 a -38 1514 a
SDict begin 12 H.A end
 -38 1514 a -38 1514
a
SDict begin [/View [/XYZ H.V]/Dest (Item.237) cvn /DEST pdfmark end
 -38 1514 a 0 TeXcolorgray 10 1666 a FI(\(a\))p 0 TeXcolorgray
47 w Fz(A)s FI(\(1;)8 b(1\),)18 b Fz(B)7 b FI(\(3;)h(5\).)145
1818 y(La)22 b(droite)f(\()6 b Fz(A)s(B)h FI(\))22 b(a)g(une)h
(\351quation)g(de)f(la)g(for)q(me)k Fz(y)f FE(\306)c
Fz(a)6 b(x)17 b FE(\305)12 b Fz(b)q FI(.)145 1918 y(D)o('apr\350s)17
b(le)g(cours)h(:)602 2315 y Fz(a)g FE(\306)747 2258 y
Fz(y)786 2270 y Fu(B)843 2258 y FE(\241)c Fz(y)955 2270
y Fu(A)p 742 2295 257 5 v 744 2372 a Fz(x)785 2384 y
Fu(B)843 2372 y FE(\241)e Fz(x)955 2384 y Fu(A)1023 2315
y FE(\306)1102 2258 y FI(5)e FE(\241)g FI(1)p 1102 2295
157 5 v 1102 2372 a(3)g FE(\241)g FI(1)1283 2315 y FE(\306)1362
2258 y FI(4)p 1362 2295 41 5 v 1362 2372 a(2)1427 2315
y FE(\306)k FI(2.)145 2681 y(A)i(ce)i(stade)o(,)f(on)g(sait)h(que)g(\()
6 b Fz(A)s(B)h FI(\))15 b(:)j Fz(y)j FE(\306)14 b FI(2)r
Fz(x)h FE(\305)10 b Fz(b)q FI(.)p 0 TeXcolorgray 2050
2700 9 2746 v 0 TeXcolorgray 2278 37 a(La)17 b(droite)g(\()6
b Fz(A)s(B)h FI(\))18 b(passe)g(par)23 b Fz(A)s FI(\(1)3216
82 y Fu(x)3253 37 y FI(;)8 b(1)3287 82 y Fu(y)3321 37
y FI(\),)18 b(donc)3069 266 y(1)c FE(\306)g FI(2)c FE(\243)g
FI(1)g FE(\305)g Fz(b)3069 390 y FI(1)k FE(\306)g FI(2)c
FE(\305)g Fz(b)2953 515 y FI(1)g FE(\241)g FI(2)15 b
FE(\306)3192 531 y Fy(\001)3192 515 y FI(2)c FE(\305)f
Fz(b)k FE(\241)3430 531 y Fy(\001)3430 515 y FI(2)3014
639 y FE(\241)p FI(1)g FE(\306)g Fz(b)2278 837 y FI(C)o(onclusion)19
b(:)f(\()6 b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14
b FI(2)r Fz(x)h FE(\241)10 b FI(1.)2095 871 y
SDict begin H.S end
 2095 871
a 2095 871 a
SDict begin 12 H.A end
 2095 871 a 2095 871 a
SDict begin [/View [/XYZ H.V]/Dest (Item.238) cvn /DEST pdfmark end
 2095 871 a 0 TeXcolorgray
2137 967 a FI(\(b\))p 0 TeXcolorgray 39 w Fz(C)f FI(\(5;)f
FE(\241)p FI(1\),)18 b Fz(D)6 b FI(\(1;)i(3\).)2278 1081
y(La)21 b(droite)g(\()n Fz(C)9 b(D)d FI(\))21 b(a)g(une)h(\351quation)g
(de)f(la)h(for)q(me)j Fz(y)g FE(\306)20 b Fz(a)6 b(x)17
b FE(\305)12 b Fz(b)q FI(.)2278 1181 y(D)o('apr\350s)17
b(le)h(cours)f(:)2623 1415 y Fz(a)h FE(\306)2768 1358
y Fz(y)2807 1370 y Fu(D)2870 1358 y FE(\241)c Fz(y)2976
1370 y Fu(C)p 2763 1395 263 5 v 2765 1471 a Fz(x)2806
1483 y Fu(D)2870 1471 y FE(\241)e Fz(x)2976 1483 y Fu(C)3051
1415 y FE(\306)3130 1358 y FI(3)e FE(\241)g FI(\()p FE(\241)p
FI(1\))p 3130 1395 265 5 v 3184 1471 a(1)g FE(\241)g
FI(5)3419 1415 y FE(\306)3525 1358 y FI(4)p 3498 1395
96 5 v 3498 1471 a FE(\241)p FI(4)3617 1415 y FE(\306)15
b(\241)p FI(1.)2278 1616 y(A)i(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()n
Fz(C)9 b(D)d FI(\))14 b(:)k Fz(y)j FE(\306)14 b(\241)p
FI(1)r Fz(x)h FE(\305)10 b Fz(b)q FI(.)2278 1780 y(La)17
b(droite)g(\()n Fz(C)9 b(D)d FI(\))17 b(passe)i(par)c
Fz(C)9 b FI(\(5)3225 1827 y Fu(x)3261 1780 y FI(;)f FE(\241)p
FI(1)3322 1826 y Fu(y)3385 1780 y FI(\),)17 b(donc)3014
2010 y FE(\241)p FI(1)d FE(\306)g(\241)p FI(1)c FE(\243)g
FI(5)g FE(\305)g Fz(b)3014 2134 y FE(\241)p FI(1)k FE(\306)g(\241)p
FI(5)c FE(\305)g Fz(b)2898 2259 y FE(\241)p FI(1)g FE(\305)g
FI(5)15 b FE(\306)3184 2261 y Fy(\010)3213 2247 y(\010)3192
2259 y FE(\241)p FI(5)c FE(\305)f Fz(b)k FE(\305)3485
2275 y Fy(\001)3485 2259 y FI(5)3069 2383 y(4)g FE(\306)g
Fz(b)2278 2581 y FI(C)o(onclusion)22 b(:)e(\()n Fz(C)9
b(D)d FI(\))16 b(:)21 b Fz(y)i FE(\306)17 b(\241)p FI(1)r
Fz(x)g FE(\305)11 b FI(4)20 b(\226)g(ou)g(encor)o(e)g(\()n
Fz(C)9 b(D)d FI(\))16 b(:)21 b Fz(y)j FE(\306)2278 2681
y(\241)r Fz(x)15 b FE(\305)10 b FI(4.)-246 2780 y
SDict begin H.S end
 -246
2780 a -246 2780 a
SDict begin 12 H.A end
 -246 2780 a -246 2780 a
SDict begin [/View [/XYZ H.V]/Dest (Item.239) cvn /DEST pdfmark end
 -246 2780
a 0 TeXcolorgray -141 2895 a FI(2.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 140 4414 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 204.00606 a add def
/d 0.0 a add neg def /h 169.00922 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 140 4414 a 604
3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35822 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 148.09654 0.0 -55.90952 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -42.67911 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 74.68843 0.0 -94.32079   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 148.09654  0 -55.90952  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -55.90952
 148.09654  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-94.32079  def /maxTickline 74.68843  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.68843
0.0 -94.32079   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.09654
0.0 -55.90952 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 74.68843  0 -94.32079  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -94.32079
 74.68843  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-55.90952  def /maxTickline 148.09654  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 74.68843
0.0 -94.32079   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.09654
0.0 -55.90952 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 589 3728 a FG(0)146 b(1)g(2)g(3)h(4)f(5)g(6)
-1292 b FF(\241)p FG(1)-250 b FF(\241)p FG(2)515 3650
y(0)474 3828 y FF(\241)p FG(1)474 4005 y FF(\241)p FG(2)474
4182 y FF(\241)p FG(3)474 4359 y FF(\241)p FG(4)515 3473
y(1)515 3296 y(2)604 3631 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.62 def /x1 6.94
def /dx x1 x sub 49 div def /F@pstplot ((-16.--4.*x)/8.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.62 def /x1 6.94
def /dx x1 x sub 49 div def /F@pstplot ((--4.-1.*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -42.67911
-64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 604 3631 a
tx@Dict begin { -48.65414 -60.17769 } PutCoor PutBegin  end
 604 3631 a 0 0 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604
3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 128.03732
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 604 3631
a
tx@Dict begin { 122.91571 25.18051 } PutCoor PutBegin  end
 604 3631 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 21.33955
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
604 3631 a
tx@Dict begin { 23.04675 25.60739 } PutCoor PutBegin  end
 604 3631 a 1 0 0 TeXcolorrgb 602 3630 a Fz(C)p
0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -42.67911
42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 604 3631 a
tx@Dict begin { -40.9719 46.94695 } PutCoor PutBegin  end
 604 3631 a 1 0 0 TeXcolorrgb
Fz(D)p 0 TeXcolorgray 604 3631 a
tx@Dict begin  PutEnd  end
 604 3631 a 1834 4414
a
currentpoint initclip moveto
 1834 4414 a -38 4551 a
SDict begin H.S end
 -38 4551 a -38 4551 a
SDict begin 12 H.A end
 -38 4551
a -38 4551 a
SDict begin [/View [/XYZ H.V]/Dest (Item.240) cvn /DEST pdfmark end
 -38 4551 a 0 TeXcolorgray 10 4696 a FI(\(a\))p
0 TeXcolorgray 47 w Fz(A)s FI(\()p FE(\241)p FI(2;)8
b FE(\241)p FI(3\),)18 b Fz(B)7 b FI(\(6;)h(1\).)145
4841 y(La)22 b(droite)f(\()6 b Fz(A)s(B)h FI(\))22 b(a)g(une)h
(\351quation)g(de)f(la)g(for)q(me)k Fz(y)f FE(\306)c
Fz(a)6 b(x)17 b FE(\305)12 b Fz(b)q FI(.)145 4941 y(D)o('apr\350s)17
b(le)g(cours)h(:)514 5310 y Fz(a)g FE(\306)658 5254 y
Fz(y)697 5266 y Fu(B)754 5254 y FE(\241)c Fz(y)866 5266
y Fu(A)p 654 5291 257 5 v 656 5367 a Fz(x)697 5379 y
Fu(B)754 5367 y FE(\241)e Fz(x)866 5379 y Fu(A)934 5310
y FE(\306)1014 5254 y FI(1)e FE(\241)g FI(\()p FE(\241)p
FI(3\))p 1014 5291 265 5 v 1014 5367 a(6)g FE(\241)g
FI(\()p FE(\241)p FI(2\))1302 5310 y FE(\306)1382 5254
y FI(4)p 1382 5291 41 5 v 1382 5367 a(8)1446 5310 y FE(\306)k
FI(0,)8 b(5.)145 5646 y(A)16 b(ce)i(stade)o(,)f(on)g(sait)h(que)g(\()6
b Fz(A)s(B)h FI(\))15 b(:)j Fz(y)j FE(\306)14 b FI(0,)8
b(5)r Fz(x)15 b FE(\305)10 b Fz(b)q FI(.)p 0 TeXcolorgray
2050 5675 9 2664 v 0 TeXcolorgray 2278 3094 a(La)17 b(droite)g(\()6
b Fz(A)s(B)h FI(\))18 b(passe)g(par)23 b Fz(A)s FI(\()p
FE(\241)p FI(2)3243 3140 y Fu(x)3307 3094 y FI(;)8 b
FE(\241)p FI(3)3369 3140 y Fu(y)3431 3094 y FI(\),)18
b(donc)2952 3449 y FE(\241)p FI(3)d FE(\306)f FI(0,)8
b(5)i FE(\243)g FI(\()p FE(\241)p FI(2\))g FE(\305)g
Fz(b)2952 3574 y FE(\241)p FI(3)15 b FE(\306)f(\241)p
FI(1)c FE(\305)g Fz(b)2837 3698 y FE(\241)p FI(3)g FE(\305)g
FI(1)15 b FE(\306)3123 3700 y Fy(\010)3152 3686 y(\010)3131
3698 y FE(\241)p FI(1)c FE(\305)f Fz(b)k FE(\305)3424
3714 y Fy(\001)3424 3698 y FI(1)2952 3823 y FE(\241)p
FI(2)h FE(\306)f Fz(b)2278 4202 y FI(C)o(onclusion)19
b(:)f(\()6 b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14
b FI(0,)8 b(5)r Fz(x)15 b FE(\241)10 b FI(2.)2095 4291
y
SDict begin H.S end
 2095 4291 a 2095 4291 a
SDict begin 12 H.A end
 2095 4291 a 2095 4291 a
SDict begin [/View [/XYZ H.V]/Dest (Item.241) cvn /DEST pdfmark end
 2095
4291 a 0 TeXcolorgray 2137 4442 a FI(\(b\))p 0 TeXcolorgray
39 w Fz(C)f FI(\(1;)f(1\),)18 b Fz(D)6 b FI(\()p FE(\241)p
FI(2;)i(2\).)2278 4612 y(La)21 b(droite)g(\()n Fz(C)9
b(D)d FI(\))21 b(a)g(une)h(\351quation)g(de)f(la)h(for)q(me)j
Fz(y)g FE(\306)20 b Fz(a)6 b(x)17 b FE(\305)12 b Fz(b)q
FI(.)2278 4711 y(D)o('apr\350s)17 b(le)h(cours)f(:)2640
5186 y Fz(a)h FE(\306)2785 5130 y Fz(y)2824 5142 y Fu(D)2887
5130 y FE(\241)c Fz(y)2993 5142 y Fu(C)p 2780 5167 263
5 v 2782 5243 a Fz(x)2823 5255 y Fu(D)2887 5243 y FE(\241)e
Fz(x)2993 5255 y Fu(C)3067 5186 y FE(\306)3174 5130 y
FI(2)e FE(\241)g FI(1)p 3146 5167 212 5 v 3146 5243 a
FE(\241)p FI(2)g FE(\241)g FI(1)3382 5186 y FE(\306)3489
5130 y FI(1)p 3461 5167 96 5 v 3461 5243 a FE(\241)p
FI(3)3581 5186 y FE(\306)k(\241)3715 5130 y FI(1)p 3715
5167 41 5 v 3715 5243 a(3)3765 5186 y(.)2278 5646 y(A)j(ce)g(stade)o(,)
g(on)h(sait)g(que)g(\()n Fz(C)9 b(D)d FI(\))14 b(:)k
Fz(y)j FE(\306)14 b(\241)3472 5613 y FG(1)p 3472 5626
31 5 v 3472 5674 a(3)3515 5646 y Fz(x)h FE(\305)10 b
Fz(b)q FI(.)p 0 TeXcolorgray 1909 5895 a(44)p 0 TeXcolorgray
eop end
%%Page: 45 45
TeXDict begin 45 44 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.45) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 145 -163 a FI(La)17 b(droite)g(\()n Fz(C)9
b(D)d FI(\))17 b(passe)h(par)e Fz(C)9 b FI(\(1)1092 -117
y Fu(x)1128 -163 y FI(;)f(1)1162 -117 y Fu(y)1197 -163
y FI(\),)17 b(donc)908 68 y(1)d FE(\306)h(\241)1097 11
y FI(1)p 1097 48 41 5 v 1097 125 a(3)1157 68 y FE(\243)10
b FI(1)g FE(\305)g Fz(b)908 266 y FI(1)k FE(\306)h(\241)1097
209 y FI(1)p 1097 246 V 1097 322 a(3)1157 266 y FE(\305)10
b Fz(b)772 472 y FI(1)g FE(\305)898 416 y FI(1)p 898
452 V 898 529 a(3)962 472 y FE(\306)1021 537 y Fy(\023)1084
454 y(\023)1095 439 y(\023)1032 472 y FE(\241)1097 416
y FI(1)p 1097 452 V 1097 529 a(3)1157 472 y FE(\305)g
Fz(b)k FE(\305)1352 537 y Fy(\003)1373 454 y(\003)1376
439 y(\003)1354 416 y FI(1)p 1354 452 V 1354 529 a(3)762
613 y(3)p 762 650 V 762 727 a(3)823 670 y FE(\305)898
613 y FI(1)p 898 650 V 898 727 a(3)962 670 y FE(\306)h
Fz(b)898 811 y FI(4)p 898 848 V 898 925 a(3)962 868 y
FE(\306)g Fz(b)p 0 TeXcolorgray 2050 942 9 1188 v 0 TeXcolorgray
2278 -163 a FI(C)o(onclusion)k(:)f(\()n Fz(C)9 b(D)d
FI(\))14 b(:)k Fz(y)j FE(\306)14 b(\241)3146 -195 y FG(1)p
3146 -182 31 5 v 3146 -134 a(3)3189 -163 y Fz(x)h FE(\305)3319
-195 y FG(4)p 3319 -182 V 3319 -134 a(3)3359 -163 y FI(.)-246
1025 y
SDict begin H.S end
 -246 1025 a -246 1025 a
SDict begin 12 H.A end
 -246 1025 a -246 1025
a
SDict begin [/View [/XYZ H.V]/Dest (Item.242) cvn /DEST pdfmark end
 -246 1025 a 0 TeXcolorgray -141 1139 a FI(3.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 287 2658 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 168.58232 a add def
/d 0.0 a add neg def /h 169.0092 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 287 2658 a 585
2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -64.01866 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 132.73204 0.0 -35.85028 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 92.61357 0.0 -76.39563   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 132.73204  0 -35.85028  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -35.85028
 132.73204  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.39563  def /maxTickline 92.61357  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.61357
0.0 -76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 92.61357  0 -76.39563  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -76.39563
 92.61357  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-35.85028  def /maxTickline 132.73204  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 92.61357
0.0 -76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -35.85028 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 570 2121 a FG(0)146 b(1)g(2)g(3)g(4)g(5)-1115
b FF(\241)p FG(1)496 2043 y(0)454 2221 y FF(\241)p FG(1)454
2398 y FF(\241)p FG(2)454 2575 y FF(\241)p FG(3)496 1866
y(1)496 1689 y(2)496 1512 y(3)585 2024 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.68 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((--6.-0.*x)/-3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35822 92.61357 85.35822
-76.39563   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 42.67911
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 585 2024 a
tx@Dict begin { 36.70406 -38.83813 } PutCoor PutBegin  end
 585
2024 a 0 0 1 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 585
2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -21.33955
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
585 2024 a
tx@Dict begin { -26.46115 -38.83813 } PutCoor PutBegin  end
 585 2024 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 85.35822
-64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
585 2024 a
tx@Dict begin { 87.06541 -59.75081 } PutCoor PutBegin  end
 585 2024 a 1 0 0 TeXcolorrgb 583 2023 a Fz(C)p
0 TeXcolorgray 585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 85.35822
85.35822   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 585 2024 a
tx@Dict begin { 89.19917 76.39563 } PutCoor PutBegin  end
 585 2024 a 1 0 0 TeXcolorrgb
Fz(D)p 0 TeXcolorgray 585 2024 a
tx@Dict begin  PutEnd  end
 585 2024 a 1687 2658
a
currentpoint initclip moveto
 1687 2658 a 0 TeXcolorgray 2050 2684 9 1429 v 0 TeXcolorgray
2101 1338 a Fz(A)s FI(\(2;)8 b FE(\241)p FI(2\),)18 b
Fz(B)7 b FI(\()p FE(\241)p FI(1;)h FE(\241)p FI(2\),)18
b Fz(C)9 b FI(\(4;)f FE(\241)p FI(3\),)18 b Fz(D)6 b
FI(\(4;)i(4\).)2095 1453 y(La)27 b(droite)e(\()6 b Fz(A)s(B)h
FI(\))27 b(est)f(hor)q(izontale)o(,)h(c)n('est)f(l)o('ensemble)j(des)d
(points)2095 1552 y(d)n('or)o(donn\351e)c Fz(y)f FE(\306)14
b(\241)p FI(2,)k(donc)f(son)h(\351quation)g(est)k Fz(y)f
FE(\306)15 b(\241)p FI(2.)2890 1736 y(\()6 b Fz(A)s(B)h
FI(\))14 b(:)19 b Fz(y)i FE(\306)14 b(\241)p FI(2.)2095
1935 y(La)38 b(droite)g(\()n Fz(C)9 b(D)d FI(\))37 b(est)i(ver)q
(ticale)o(,)f(c)n('est)h(l)o('ensemble)h(des)e(points)2095
2034 y(d)n('abscisse)20 b Fz(x)g FE(\306)14 b FI(4,)k(donc)f(son)h
(\351quation)h(est)h Fz(x)f FE(\306)14 b FI(4.)2913 2218
y(\()n Fz(C)9 b(D)d FI(\))14 b(:)j Fz(x)j FE(\306)14
b FI(4.)2095 2467 y FJ(R)o(emarques)23 b(:)28 b FI(Dans)e(le)i(cas)f
(de)g(droites)g(hor)q(izontales)g(ou)h(ver)q(ti-)2095
2567 y(cales)o(,)i(on)e(n)-6 b('attend)29 b(aucune)g(justi\002cation)h
(de)e(votr)o(e)g(par)q(t,)g(vous)2095 2666 y(pouvez)18
b(dir)o(ectement)g(donner)g(l)o('\351quation.)-246 2766
y
SDict begin H.S end
 -246 2766 a -246 2766 a
SDict begin 12 H.A end
 -246 2766 a -246 2766 a
SDict begin [/View [/XYZ H.V]/Dest (exo.79) cvn /DEST pdfmark end
 -246
2766 a -246 2751 a
SDict begin H.S end
 -246 2751 a -246 2751 a
SDict begin 12 H.A end
 -246 2751
a -246 2751 a
SDict begin [/View [/XYZ H.V]/Dest (Item.243) cvn /DEST pdfmark end
 -246 2751 a 0 TeXcolorgray 115 x FJ(Ex)o(er)o(cice)c(79)p
0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0 TeXcolorgray
43 w(On)j(tr)o(ace)g(les)i(droites)e Fz(D)1146 2878 y
FG(1)1195 2866 y FI(:)i Fz(y)i FE(\306)16 b Fz(x)f FE(\241)10
b FI(4)18 b(et)g Fz(D)1685 2878 y FG(2)1734 2866 y FI(:)h
Fz(y)i FE(\306)14 b(\241)p FI(2)r Fz(x)h FE(\305)10 b
FI(3)19 b(\340)e(par)q(tir)g(de)g(deux)h(tableaux)g(de)f(valeurs)h(:)
-38 3065 y(T)-6 b(r)o(ac\351)17 b(de)g Fz(D)331 3077
y FG(1)367 3065 y FI(.)p -38 3095 425 5 v 0 TeXcolorgray
0 TeXcolorgray 712 3155 551 4 v 712 3255 4 100 v 767
3225 a Fz(x)p 862 3255 V 137 w FI(0)p 1060 3255 V 158
w(2)p 1259 3255 V 712 3258 551 4 v 712 3358 4 100 v 769
3328 a Fz(y)p 862 3358 V 110 w FE(\241)p FI(4)p 1060
3358 V 103 w FE(\241)p FI(2)p 1259 3358 V 712 3361 551
4 v 820 3604 a(0)10 b FE(\241)g FI(4)15 b FE(\306)f(\241)p
FI(4)820 3728 y(2)c FE(\241)g FI(4)15 b FE(\306)f(\241)p
FI(2)p 0 TeXcolorgray 2050 3758 9 777 v 0 TeXcolorgray
2095 3065 a(T)-6 b(r)o(ac\351)18 b(de)f Fz(D)2465 3077
y FG(2)2500 3065 y FI(.)p 2095 3095 425 5 v 0 TeXcolorgray
0 TeXcolorgray 2873 3155 496 4 v 2873 3255 4 100 v 2928
3225 a Fz(x)p 3023 3255 V 109 w FI(0)p 3166 3255 V 131
w(2)p 3365 3255 V 2873 3258 496 4 v 2873 3358 4 100 v
2930 3328 a Fz(y)p 3023 3358 V 110 w FI(3)p 3166 3358
V 103 w FE(\241)p FI(1)p 3365 3358 V 2873 3361 496 4
v 2868 3604 a FE(\241)10 b FI(2)g FE(\243)g FI(0)g FE(\305)g
FI(3)16 b FE(\306)e FI(3)2868 3728 y FE(\241)c FI(2)g
FE(\243)g FI(2)g FE(\305)g FI(3)16 b FE(\306)e(\241)p
FI(1)p 0 TeXcolorgray 0 TeXcolorgray 1342 5346 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 171.57018 a add def
/d 0.0 a add neg def /h 181.81308 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1342
5346 a 1664 4492 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35822 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 132.73204 0.0 -38.83813 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 21.33955 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -21.33955 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 78.95628 0.0 -102.8568   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 21.33955 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 132.73204  0 -38.83813  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -38.83813
 132.73204  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-102.8568  def /maxTickline 78.95628  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 21.33955
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 78.95628
0.0 -102.8568   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -38.83813 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 78.95628  0 -102.8568  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -102.8568
 78.95628  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-38.83813  def /maxTickline 132.73204  def /dT 1398509 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 78.95628
0.0 -102.8568   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 132.73204
0.0 -38.83813 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1649 4589 a FG(0)146
b(1)g(2)g(3)g(4)g(5)-1114 b FF(\241)p FG(1)1575 4511
y(0)1533 4689 y FF(\241)p FG(1)1533 4866 y FF(\241)p
FG(2)1533 5043 y FF(\241)p FG(3)1533 5220 y FF(\241)p
FG(4)1575 4334 y(1)1575 4157 y(2)1575 3980 y(3)1664 4492
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.82 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((-4.--1.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1.82 def /x1 6.22
def /dx x1 x sub 49 div def /F@pstplot ((--3.-2.*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30
21.33955 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1664 4492 a
tx@Dict begin { 86.21164 26.03427 } PutCoor PutBegin  end
 1664 4492 a 1 0 0
TeXcolorrgb 53 x Fz(D)1727 4557 y FG(1)p 0 TeXcolorgray
1664 4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 1664 4492 a
tx@Dict begin { 23.90019 30.30212 } PutCoor PutBegin  end
 1664 4492 a 0 0 1
TeXcolorrgb 53 x Fz(D)1727 4557 y FG(2)p 0 TeXcolorgray
1664 4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 1664 4492 a
tx@Dict begin { -9.38945 -100.72272 } PutCoor PutBegin  end
 1664 4492 a 1 0 0
TeXcolorrgb 1672 4473 a Fz(f)p 0 TeXcolorgray 1664 4492
a
tx@Dict begin  PutEnd  end
 1664 4492 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 64.01866
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 42.67911
-21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 -85.35822
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 42.67911
-42.67911   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 49.79218
-35.56602   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1664 4492 a
tx@Dict begin { 53.77576 -38.41125 } PutCoor PutBegin  end
 1664
4492 a 0 1 0 TeXcolorrgb 2 w Fz(M)p 0 TeXcolorgray 1664
4492 a
tx@Dict begin  PutEnd  end
 1664 4492 a 2766 5346 a
currentpoint initclip moveto
 2766 5346 a -246 5390
a
SDict begin H.S end
 -246 5390 a -246 5390 a
SDict begin 12 H.A end
 -246 5390 a -246 5390 a
SDict begin [/View [/XYZ H.V]/Dest (Item.244) cvn /DEST pdfmark end
 -246
5390 a 0 TeXcolorgray -141 5504 a FI(2.)p 0 TeXcolorgray
43 w(On)18 b(note)i Fz(M)26 b FI(le)18 b(point)h(d)n('intersection)h
(de)d Fz(D)1302 5516 y FG(1)1352 5504 y FI(:)i Fz(y)j
FE(\306)17 b Fz(x)e FE(\241)10 b FI(4)19 b(et)f Fz(D)1845
5516 y FG(2)1895 5504 y FI(:)h Fz(y)j FE(\306)14 b(\241)p
FI(2)r Fz(x)h FE(\305)10 b FI(3.)21 b(P)n(our)c(d\351ter)q(miner)h(ses)
h(coor)o(donn\351es)o(,)f(on)h(r\351sout)f(l)o('\351qua-)-38
5604 y(tion)g(:)p 0 TeXcolorgray 1909 5895 a(45)p 0 TeXcolorgray
eop end
%%Page: 46 46
TeXDict begin 46 45 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.46) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1781 20 a Fz(x)15 b FE(\241)10 b FI(4)15
b FE(\306)g(\241)p FI(2)r Fz(x)g FE(\305)10 b FI(3)1665
144 y Fz(x)15 b FE(\241)1784 160 y Fy(\001)1784 144 y
FI(4)d FE(\305)1901 160 y Fy(\001)1901 144 y FI(4)i FE(\306)h(\241)p
FI(2)r Fz(x)g FE(\305)10 b FI(3)g FE(\305)g FI(4)1735
269 y Fz(x)15 b FE(\305)10 b FI(2)r Fz(x)20 b FE(\306)2016
263 y Fy(\030)2092 245 y(\030)2025 269 y FE(\241)p FI(2)r
Fz(x)c FE(\305)10 b FI(7)g FE(\305)r Fy(\010)2370 259
y(\010)2357 269 y FI(2)r Fz(x)1844 415 y Fy(\001)1844
399 y FI(3)s Fz(x)p 1844 436 87 5 v 1867 532 a Fy(\001)1867
516 y FI(3)1955 455 y FE(\306)2034 399 y FI(7)p 2034
436 41 5 v 2034 512 a(3)1897 657 y Fz(x)19 b FE(\306)2034
601 y FI(7)p 2034 638 V 2034 714 a(3)2085 657 y(.)-38
891 y(On)e(en)h(d\351duit)j Fz(y)g FE(\306)c Fz(x)e FE(\241)10
b FI(4)15 b FE(\306)816 859 y FG(7)p 816 872 31 5 v 816
920 a(3)867 891 y FE(\241)942 859 y FG(4)p 942 872 V
942 920 a(1)997 891 y FE(\306)1076 859 y FG(7)p 1076
872 V 1076 920 a(3)1127 891 y FE(\241)1202 859 y FG(12)p
1202 872 62 5 v 1218 920 a(3)1288 891 y FE(\306)f(\241)1422
859 y FG(5)p 1422 872 31 5 v 1422 920 a(3)1463 891 y
FI(.)-38 1015 y(C)o(onclusion)19 b(:)h Fz(M)500 950 y
Fr(\241)539 982 y FG(7)p 539 995 V 539 1043 a(3)580 1015
y FI(;)8 b FE(\241)673 982 y FG(5)p 673 995 V 673 1043
a(3)714 950 y Fr(\242)752 1015 y FI(.)-246 1110 y
SDict begin H.S end
 -246
1110 a -246 1110 a
SDict begin 12 H.A end
 -246 1110 a -246 1110 a
SDict begin [/View [/XYZ H.V]/Dest (exo.80) cvn /DEST pdfmark end
 -246 1110
a -246 1129 a
SDict begin H.S end
 -246 1129 a -246 1129 a
SDict begin 12 H.A end
 -246 1129 a -246
1129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.245) cvn /DEST pdfmark end
 -246 1129 a 0 TeXcolorgray 85 x FJ(Ex)o(er)o(cice)14
b(80)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(ace)g(la)h(droite)f Fz(D)j
FI(:)f Fz(y)i FE(\306)14 b FI(2)r Fz(x)h FE(\305)10 b
FI(1)19 b(\340)e(par)q(tir)g(d)n('un)h(tableau)g(de)f(valeurs)h(avec)g
(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray
0 TeXcolorgray 767 1333 441 4 v 767 1433 4 100 v 822
1403 a Fz(x)p 917 1433 V 109 w FI(0)p 1060 1433 V 103
w(2)p 1204 1433 V 767 1436 441 4 v 767 1536 4 100 v 824
1506 a Fz(y)p 917 1536 V 110 w FI(1)p 1060 1536 V 103
w(5)p 1204 1536 V 767 1539 441 4 v 0 TeXcolorgray 2050
1569 9 240 v 0 TeXcolorgray 2923 1413 a(2)10 b FE(\243)g
FI(0)g FE(\305)g FI(1)16 b FE(\306)e FI(1)2923 1537 y(2)c
FE(\243)g FI(2)g FE(\305)g FI(1)16 b FE(\306)e FI(5)-246
1639 y
SDict begin H.S end
 -246 1639 a -246 1639 a
SDict begin 12 H.A end
 -246 1639 a -246 1639
a
SDict begin [/View [/XYZ H.V]/Dest (Item.246) cvn /DEST pdfmark end
 -246 1639 a 0 TeXcolorgray -141 1753 a FI(2.)p 0 TeXcolorgray
43 w(La)j(droite)g(\()6 b Fz(A)s(B)h FI(\))18 b(a)f(une)h(\351quation)h
(de)e(la)g(for)q(me)22 b Fz(y)f FE(\306)16 b Fz(a)6 b(x)15
b FE(\305)10 b Fz(b)q FI(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1495
1983 y Fz(a)h FE(\306)1640 1926 y Fz(y)1679 1938 y Fu(B)1736
1926 y FE(\241)c Fz(y)1848 1938 y Fu(A)p 1635 1963 257
5 v 1637 2040 a Fz(x)1678 2052 y Fu(B)1736 2040 y FE(\241)e
Fz(x)1848 2052 y Fu(A)1916 1983 y FE(\306)1995 1926 y(\241)p
FI(2)e FE(\241)g FI(2)p 1995 1963 212 5 v 2023 2040 a(4)g
FE(\241)g FI(2)2231 1983 y FE(\306)2310 1926 y(\241)p
FI(4)p 2310 1963 96 5 v 2337 2040 a(2)2429 1983 y FE(\306)15
b(\241)p FI(2.)-38 2182 y(A)i(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14 b(\241)p
FI(2)r Fz(x)h FE(\305)10 b Fz(b)q FI(.)-38 2345 y(La)17
b(droite)g(\()6 b Fz(A)s(B)h FI(\))18 b(passe)g(par)23
b Fz(A)s FI(\(2;)8 b(2\),)19 b(donc)1883 2528 y(2)c FE(\306)f(\241)p
FI(2)c FE(\243)g FI(2)g FE(\305)g Fz(b)1883 2652 y FI(2)15
b FE(\306)f(\241)p FI(4)c FE(\305)g Fz(b)1767 2777 y
FI(2)g FE(\305)g FI(4)16 b FE(\306)1999 2779 y Fy(\010)2028
2765 y(\010)2007 2777 y FE(\241)p FI(4)11 b FE(\305)f
Fz(b)k FE(\305)2300 2793 y Fy(\001)2300 2777 y FI(4)1883
2901 y(6)h FE(\306)f Fz(b)-38 3098 y FI(C)o(onclusion)19
b(:)f(\()6 b Fz(A)s(B)h FI(\))14 b(:)k Fz(y)k FE(\306)14
b(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(6.)-246 3132 y
SDict begin H.S end

-246 3132 a -246 3132 a
SDict begin 12 H.A end
 -246 3132 a -246 3132 a
SDict begin [/View [/XYZ H.V]/Dest (Item.247) cvn /DEST pdfmark end
 -246
3132 a 0 TeXcolorgray -141 3227 a FI(3.)p 0 TeXcolorgray
43 w(On)17 b(a)g Fz(D)k FI(:)d Fz(y)j FE(\306)15 b FI(2)r
Fz(x)g FE(\305)10 b FI(1)18 b(et)g(\()6 b Fz(A)s(B)h
FI(\))15 b(:)j Fz(y)j FE(\306)14 b(\241)p FI(2)r Fz(x)h
FE(\305)10 b FI(6.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o
(donn\351es)g(de)h Fz(M)7 b FI(,)18 b(on)g(r\351sout)g(l)o
('\351quation)h(:)1759 3524 y(2)r Fz(x)c FE(\305)10 b
FI(1)16 b FE(\306)e(\241)p FI(2)r Fz(x)h FE(\305)10 b
FI(6)1643 3648 y(2)r Fz(x)15 b FE(\305)1804 3664 y Fy(\001)1804
3648 y FI(1)d FE(\241)1921 3664 y Fy(\001)1921 3648 y
FI(1)j FE(\306)f(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(6)g
FE(\241)g FI(1)1712 3773 y(2)r Fz(x)15 b FE(\305)10 b
FI(2)r Fz(x)22 b FE(\306)2037 3767 y Fy(\030)2112 3748
y(\030)2045 3773 y FE(\241)p FI(2)r Fz(x)16 b FE(\305)10
b FI(5)g FE(\305)r Fy(\010)2390 3763 y(\010)2377 3773
y FI(2)r Fz(x)1864 3919 y Fy(\001)1865 3903 y FI(4)r
Fz(x)p 1865 3940 87 5 v 1887 4036 a Fy(\001)1888 4020
y FI(4)1976 3959 y FE(\306)2055 3903 y FI(5)p 2055 3940
41 5 v 2055 4016 a(4)1917 4123 y Fz(x)20 b FE(\306)14
b FI(1,)8 b(25.)-38 4320 y(On)17 b(en)h(d\351duit)j Fz(y)g
FE(\306)15 b FI(2)r Fz(x)g FE(\305)10 b FI(1)16 b FE(\306)e
FI(2)c FE(\243)g FI(1,)e(25)i FE(\305)g FI(1)17 b FE(\306)e
FI(3,)8 b(5.)-38 4434 y(C)o(onclusion)19 b(:)h Fz(M)7
b FI(\(1,)h(25)19 b(;)26 b(3,)8 b(5\).)-246 4460 y
SDict begin H.S end
 -246
4460 a -246 4460 a
SDict begin 12 H.A end
 -246 4460 a -246 4460 a
SDict begin [/View [/XYZ H.V]/Dest (Item.248) cvn /DEST pdfmark end
 -246 4460
a 0 TeXcolorgray -141 4563 a FI(4.)p 0 TeXcolorgray 43
w Fz(D)21 b FI(:)d Fz(y)j FE(\306)14 b FI(2)r Fz(x)h
FE(\305)10 b FI(1)19 b(coupe)f(l)o('axe)h(des)e(abscisses)h(en)i
Fz(N)9 b FI(,)17 b(donc)g(l)o('or)o(donn\351e)h(de)h
Fz(N)26 b FI(est)18 b(0.)-38 4677 y(P)n(our)f(d\351ter)q(miner)h(l)o
('abscisse)g(de)i Fz(N)9 b FI(,)17 b(on)g(r)o(emplace)h(donc)j
Fz(y)j FI(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e
Fz(D)24 b FI(et)18 b(on)f(r\351sout)h(l)o('\351quation)i(:)1895
4974 y(0)14 b FE(\306)g FI(2)r Fz(x)h FE(\305)10 b FI(1)1779
5098 y(0)g FE(\241)g FI(1)15 b FE(\306)f FI(2)r Fz(x)h
FE(\305)2179 5114 y Fy(\001)2179 5098 y FI(1)d FE(\241)2296
5114 y Fy(\001)2296 5098 y FI(1)1830 5229 y FE(\241)p
FI(1)p 1830 5265 96 5 v 1857 5342 a(2)1949 5285 y FE(\306)2028
5244 y Fy(\001)2028 5229 y FI(2)s Fz(x)p 2028 5265 87
5 v 2051 5362 a Fy(\001)2052 5346 y FI(2)1771 5449 y
FE(\241)p FI(0,)c(5)15 b FE(\306)h Fz(x)5 b FI(.)-38
5646 y(C)o(onclusion)19 b(:)h Fz(N)9 b FI(\()p FE(\241)p
FI(0,)f(5)17 b(;)26 b(0\).)p 0 TeXcolorgray 1909 5895
a(46)p 0 TeXcolorgray eop end
%%Page: 47 47
TeXDict begin 47 46 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.47) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 842 1989
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.88686 a add def
/d 0.0 a add neg def /h 269.16269 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 842 1989 a 1858 1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 144.53998 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 186.64992 0.0 -82.51277   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 144.53998  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 144.53998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-82.51277  def /maxTickline 186.64992  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 186.64992  0 -82.51277  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -82.51277
 186.64992  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 144.53998  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1843 1401 a FG(0)205
b(1)g(2)g(3)g(4)-1233 b FF(\241)p FG(1)-309 b FF(\241)p
FG(2)g FF(\241)p FG(3)g FF(\241)p FG(4)1769 1323 y(0)1727
1560 y FF(\241)p FG(1)1727 1796 y FF(\241)p FG(2)1769
1087 y(1)1769 851 y(2)1769 615 y(3)1769 378 y(4)1769
142 y(5)1769 -94 y(6)1858 1304 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 5.08 def /dx x1 x sub 49 div def /F@pstplot ((--2.--4.*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.08
def /dx x1 x sub 49 div def /F@pstplot ((-12.--4.*x)/-2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304 a
tx@Dict begin { -45.52455 -39.83366 } PutCoor PutBegin  end
 1858
1304 a 0.30196 0.30196 1 TeXcolorrgb Fz(D)p 0 TeXcolorgray
1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a 1858 1304 a
tx@Dict begin { 59.18175 62.59595 } PutCoor PutBegin  end
 1858 1304 a 1 0 0
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858
1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304
a
tx@Dict begin { 116.08723 -51.21501 } PutCoor PutBegin  end
 1858 1304 a 1 0 0 TeXcolorrgb Fz(B)p 0 TeXcolorgray
1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 35.56592
99.5846   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 1304 a
tx@Dict begin { 43.24829 100.15378 } PutCoor PutBegin  end
 1858 1304 a 0 1 0 TeXcolorrgb 2 w Fz(M)p
0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858 1304 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -14.22636
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 1304 a
tx@Dict begin { -22.1931 6.82881 } PutCoor PutBegin  end
 1858 1304 a 0 1 0
TeXcolorrgb 2 w Fz(N)p 0 TeXcolorgray 1858 1304 a
tx@Dict begin  PutEnd  end
 1858
1304 a 3058 1989 a
currentpoint initclip moveto
 3058 1989 a -246 2072 a
SDict begin H.S end
 -246 2072
a -246 2072 a
SDict begin 12 H.A end
 -246 2072 a -246 2072 a
SDict begin [/View [/XYZ H.V]/Dest (exo.81) cvn /DEST pdfmark end
 -246 2072 a -246
2074 a
SDict begin H.S end
 -246 2074 a -246 2074 a
SDict begin 12 H.A end
 -246 2074 a -246 2074
a
SDict begin [/View [/XYZ H.V]/Dest (Item.249) cvn /DEST pdfmark end
 -246 2074 a 0 TeXcolorgray 114 x FJ(Ex)o(er)o(cice)14
b(81)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(La)j(\002gur)o(e)g(est)h(\340)f(la)g(\002n.)-246
2222 y
SDict begin H.S end
 -246 2222 a -246 2222 a
SDict begin 12 H.A end
 -246 2222 a -246 2222
a
SDict begin [/View [/XYZ H.V]/Dest (Item.250) cvn /DEST pdfmark end
 -246 2222 a 0 TeXcolorgray -141 2317 a FI(2.)p 0 TeXcolorgray
43 w(La)g(droite)g(\()6 b Fz(A)s(B)h FI(\))18 b(a)f(une)h(\351quation)h
(de)e(la)g(for)q(me)22 b Fz(y)f FE(\306)16 b Fz(a)6 b(x)15
b FE(\305)10 b Fz(b)q FI(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1585
2547 y Fz(a)h FE(\306)1730 2491 y Fz(y)1769 2503 y Fu(B)1826
2491 y FE(\241)c Fz(y)1938 2503 y Fu(A)p 1726 2528 257
5 v 1728 2604 a Fz(x)1769 2616 y Fu(B)1826 2604 y FE(\241)e
Fz(x)1938 2616 y Fu(A)2006 2547 y FE(\306)2140 2491 y
FI(3)e FE(\241)g FI(1)p 2085 2528 265 5 v 2085 2604 a(1)g
FE(\241)g FI(\()p FE(\241)p FI(2\))2374 2547 y FE(\306)2453
2491 y FI(2)p 2453 2528 41 5 v 2453 2604 a(3)2504 2547
y(.)-38 2761 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)1093 2728
y FG(2)p 1093 2741 31 5 v 1093 2789 a(3)1136 2761 y Fz(x)15
b FE(\305)10 b Fz(b)q FI(.)-38 2925 y(La)17 b(droite)g(\()6
b Fz(A)s(B)h FI(\))18 b(passe)g(par)23 b Fz(A)s FI(\()p
FE(\241)p FI(2;)8 b(1\),)19 b(donc)1866 3140 y(1)c FE(\306)2000
3084 y FI(2)p 2000 3121 41 5 v 2000 3197 a(3)2061 3140
y FE(\243)10 b FI(\()p FE(\241)p FI(2\))g FE(\305)g Fz(b)1866
3338 y FI(1)15 b FE(\306)f(\241)2055 3282 y FI(4)p 2055
3319 V 2055 3395 a(3)2116 3338 y FE(\305)c Fz(b)1721
3488 y FI(3)p 1721 3525 V 1721 3602 a(3)1781 3545 y FE(\305)1856
3488 y FI(4)p 1856 3525 V 1856 3602 a(3)1921 3545 y FE(\306)1980
3610 y Fy(\023)2042 3527 y(\023)2054 3512 y(\023)1990
3545 y FE(\241)2055 3488 y FI(4)p 2055 3525 V 2055 3602
a(3)2116 3545 y FE(\305)g Fz(b)k FE(\305)2310 3610 y
Fy(\003)2331 3527 y(\003)2335 3512 y(\003)2313 3488 y
FI(4)p 2313 3525 V 2313 3602 a(3)1856 3686 y(7)p 1856
3723 V 1856 3799 a(3)1921 3743 y FE(\306)g Fz(b)-38 3977
y FI(C)o(onclusion)19 b(:)f(\()6 b Fz(A)s(B)h FI(\))14
b(:)k Fz(y)k FE(\306)767 3945 y FG(2)p 767 3958 31 5
v 767 4006 a(3)809 3977 y Fz(x)15 b FE(\305)939 3945
y FG(7)p 939 3958 V 939 4006 a(3)980 3977 y FI(.)-246
4021 y
SDict begin H.S end
 -246 4021 a -246 4021 a
SDict begin 12 H.A end
 -246 4021 a -246 4021
a
SDict begin [/View [/XYZ H.V]/Dest (Item.251) cvn /DEST pdfmark end
 -246 4021 a 0 TeXcolorgray -141 4106 a FI(3.)p 0 TeXcolorgray
43 w(On)i(tr)o(ace)h(la)f(droite)g FA(\242)e FI(:)j Fz(y)j
FE(\306)14 b(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(3)19
b(\340)e(par)q(tir)g(d)n('un)h(tableau)g(de)f(valeurs)h(avec)g(deux)f
(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray
0 TeXcolorgray 740 4226 496 4 v 740 4325 4 100 v 795
4296 a Fz(x)p 889 4325 V 109 w FI(0)p 1033 4325 V 130
w(2)p 1231 4325 V 740 4329 496 4 v 740 4428 4 100 v 797
4399 a Fz(y)p 889 4428 V 110 w FI(3)p 1033 4428 V 103
w FE(\241)p FI(1)p 1231 4428 V 740 4432 496 4 v 0 TeXcolorgray
2050 4462 9 240 v 0 TeXcolorgray 2868 4306 a FE(\241)10
b FI(2)g FE(\243)g FI(0)g FE(\305)g FI(3)16 b FE(\306)e
FI(3)2868 4430 y FE(\241)c FI(2)g FE(\243)g FI(2)g FE(\305)g
FI(3)16 b FE(\306)e(\241)p FI(1)-246 4531 y
SDict begin H.S end
 -246 4531
a -246 4531 a
SDict begin 12 H.A end
 -246 4531 a -246 4531 a
SDict begin [/View [/XYZ H.V]/Dest (Item.252) cvn /DEST pdfmark end
 -246 4531 a 0 TeXcolorgray
-141 4646 a FI(4.)p 0 TeXcolorgray 43 w(\()6 b Fz(A)s(B)h
FI(\))14 b(:)19 b Fz(y)i FE(\306)317 4613 y FG(2)p 317
4626 31 5 v 317 4674 a(3)360 4646 y Fz(x)15 b FE(\305)489
4613 y FG(7)p 489 4626 V 489 4674 a(3)547 4646 y FI(coupe)k(l)o('axe)f
(des)f(abscisses)i(en)g Fz(M)7 b FI(,)19 b(donc)e(l)o('or)o(donn\351e)h
(de)h Fz(M)25 b FI(est)18 b(0.)-38 4760 y(P)n(our)f(d\351ter)q(miner)h
(l)o('abscisse)g(de)i Fz(M)7 b FI(,)18 b(on)f(r)o(emplace)h(donc)j
Fz(y)j FI(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e(\()6
b Fz(A)s(B)h FI(\))18 b(et)g(on)f(r\351sout)h(l)o('\351quation)i(:)p
0 TeXcolorgray 1909 5895 a(47)p 0 TeXcolorgray eop end
%%Page: 48 48
TeXDict begin 48 47 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.48) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1908 35 a FI(0)15 b FE(\306)2042 -21 y
FI(2)p 2042 16 41 5 v 2042 92 a(3)2094 35 y Fz(x)g FE(\305)2224
-21 y FI(7)p 2224 16 V 2224 92 a(3)1772 242 y(0)10 b
FE(\241)1898 185 y FI(7)p 1898 222 V 1898 298 a(3)1963
242 y FE(\306)2042 185 y FI(2)p 2042 222 V 2042 298 a(3)2094
242 y Fz(x)15 b FE(\305)2222 307 y Fy(\003)2242 224 y(\003)2246
209 y(\003)2224 185 y FI(7)p 2224 222 V 2224 298 a(3)2285
242 y FE(\241)2357 307 y Fy(\003)2378 224 y(\003)2382
209 y(\003)2360 185 y FI(7)p 2360 222 V 2360 298 a(3)1833
412 y FE(\241)1898 379 y FG(7)p 1898 392 31 5 v 1898
441 a(3)p 1833 459 106 5 v 1870 511 a(2)p 1870 524 31
5 v 1870 572 a(3)1963 478 y FE(\306)2038 449 y Fy(\001)2055
415 y(\001)2052 379 y FG(2)p 2052 392 V 2052 441 a(3)2095
412 y Fz(x)p 2042 459 98 5 v 2061 589 a Fy(\001)2078
555 y(\001)2075 519 y FG(2)p 2075 532 31 5 v 2075 580
a(3)1697 737 y FE(\241)1762 681 y FI(7)p 1762 718 41
5 v 1762 814 a Fy(\001)1762 798 y FI(3)1823 737 y FE(\243)1898
697 y Fy(\001)1898 681 y FI(3)p 1898 718 V 1898 794 a(2)1963
737 y FE(\306)h Fz(x)1784 901 y FE(\241)p FI(3,)8 b(5)16
b FE(\306)g Fz(x)5 b FI(.)-38 1098 y(C)o(onclusion)19
b(:)h Fz(M)7 b FI(\()p FE(\241)p FI(3,)h(5)19 b(;)25
b(0\).)-246 1123 y
SDict begin H.S end
 -246 1123 a -246 1123 a
SDict begin 12 H.A end
 -246 1123
a -246 1123 a
SDict begin [/View [/XYZ H.V]/Dest (Item.253) cvn /DEST pdfmark end
 -246 1123 a 0 TeXcolorgray -141 1226 a
FI(5.)p 0 TeXcolorgray 43 w(On)17 b(a)g(\()6 b Fz(A)s(B)h
FI(\))15 b(:)j Fz(y)j FE(\306)496 1194 y FG(2)p 496 1207
31 5 v 496 1255 a(3)539 1226 y Fz(x)15 b FE(\305)669
1194 y FG(7)p 669 1207 V 669 1255 a(3)727 1226 y FI(et)i
FA(\242)e FI(:)k Fz(y)i FE(\306)14 b(\241)p FI(2)r Fz(x)h
FE(\305)10 b FI(3.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o
(donn\351es)f(de)i Fz(N)9 b FI(,)17 b(on)h(r\351sout)g(l)o
('\351quation)i(:)1749 1482 y(2)p 1749 1519 41 5 v 1749
1595 a(3)1801 1538 y Fz(x)15 b FE(\305)1931 1482 y FI(7)p
1931 1519 V 1931 1595 a(3)1996 1538 y FE(\306)f(\241)p
FI(2)r Fz(x)h FE(\305)10 b FI(3)1613 1688 y(2)p 1613
1725 V 1613 1802 a(3)1666 1745 y Fz(x)15 b FE(\305)1793
1810 y Fy(\003)1814 1727 y(\003)1817 1712 y(\003)1795
1688 y FI(7)p 1795 1725 V 1795 1802 a(3)1856 1745 y FE(\241)1928
1810 y Fy(\003)1949 1727 y(\003)1953 1712 y(\003)1931
1688 y FI(7)p 1931 1725 V 1931 1802 a(3)1996 1745 y FE(\306)f(\241)p
FI(2)r Fz(x)h FE(\305)2292 1688 y FI(9)p 2292 1725 V
2292 1802 a(3)2352 1745 y FE(\241)2427 1688 y FI(7)p
2427 1725 V 2427 1802 a(3)1722 1886 y(2)p 1722 1923 V
1722 1999 a(3)1775 1943 y Fz(x)g FE(\305)10 b FI(2)r
Fz(x)21 b FE(\306)2057 1937 y Fy(\030)2132 1918 y(\030)2065
1943 y FE(\241)p FI(2)r Fz(x)16 b FE(\305)2292 1886 y
FI(2)p 2292 1923 V 2292 1999 a(3)2352 1943 y FE(\305)r
Fy(\010)2430 1933 y(\010)2417 1943 y FI(2)r Fz(x)1702
2084 y FI(2)p 1702 2121 V 1702 2197 a(3)1755 2140 y Fz(x)f
FE(\305)1884 2084 y FI(6)p 1884 2121 V 1884 2197 a(3)1937
2140 y Fz(x)20 b FE(\306)2075 2084 y FI(2)p 2075 2121
V 2075 2197 a(3)1870 2348 y Fy(\001)1887 2314 y(\001)1884
2278 y FG(8)p 1884 2291 31 5 v 1884 2340 a(3)1927 2311
y Fz(x)p 1874 2358 98 5 v 1894 2488 a Fy(\001)1911 2454
y(\001)1907 2418 y FG(8)p 1907 2431 31 5 v 1907 2479
a(3)1996 2377 y FE(\306)2085 2278 y FG(2)p 2085 2291
V 2085 2340 a(3)p 2075 2358 51 5 v 2085 2410 a(8)p 2085
2423 31 5 v 2085 2471 a(3)1937 2636 y Fz(x)g FE(\306)2075
2580 y FI(2)p 2075 2617 41 5 v 2075 2713 a Fy(\001)2075
2697 y FI(3)2135 2636 y FE(\243)2210 2596 y Fy(\001)2210
2580 y FI(3)p 2210 2617 V 2210 2693 a(8)1937 2800 y Fz(x)g
FE(\306)14 b FI(0,)8 b(25)-38 2997 y(On)17 b(en)h(d\351duit)j
Fz(y)g FE(\306)15 b(\241)p FI(2)r Fz(x)g FE(\305)10 b
FI(3)16 b FE(\306)e(\241)p FI(2)c FE(\243)g FI(0,)e(25)i
FE(\305)g FI(3)17 b FE(\306)d FI(2,)8 b(5.)-38 3111 y(C)o(onclusion)19
b(:)h Fz(N)9 b FI(\(0,)f(25)18 b(;)26 b(2,)8 b(5\).)p
0 TeXcolorgray 0 TeXcolorgray 842 5447 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.88686 a add def
/d 0.0 a add neg def /h 269.16269 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 842 5447 a 1858
4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 144.53998 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 186.64992 0.0 -82.51277   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 144.53998  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 144.53998  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-82.51277  def /maxTickline 186.64992  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 186.64992  0 -82.51277  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -82.51277
 186.64992  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 144.53998  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 -82.51277   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 144.53998
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1843 4859 a FG(0)205 b(1)g(2)g(3)g(4)-1233
b FF(\241)p FG(1)-309 b FF(\241)p FG(2)g FF(\241)p FG(3)g
FF(\241)p FG(4)1769 4781 y(0)1727 5017 y FF(\241)p FG(1)1727
5254 y FF(\241)p FG(2)1769 4545 y(1)1769 4309 y(2)1769
4072 y(3)1769 3836 y(4)1769 3600 y(5)1769 3364 y(6)1858
4762 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 5.08 def /dx x1 x sub 49 div def /F@pstplot ((--6.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 5.08
def /dx x1 x sub 49 div def /F@pstplot ((-7.-2.*x)/-3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1858 4762 a
tx@Dict begin { -43.81703 144.53998 } PutCoor PutBegin  end
 1858 4762 a 0.30196 0.30196 1
TeXcolorrgb 53 x FA(\242)p 0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end

1858 4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 -28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 4762 a
tx@Dict begin { -53.49129 19.34766 } PutCoor PutBegin  end
 1858 4762 a 1 0 0 TeXcolorrgb 6 w Fz(A)p
0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 4762 a
tx@Dict begin { 35.8503 74.54604 } PutCoor PutBegin  end
 1858 4762 a 1 0 0
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 7.11317 71.13185
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1858 4762 a
tx@Dict begin { 2.27626 54.62921 } PutCoor PutBegin  end

1858 4762 a 0 1 0 TeXcolorrgb 2 w Fz(N)p 0 TeXcolorgray
1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -99.5846
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1858 4762 a
tx@Dict begin { -107.55133 6.82881 } PutCoor PutBegin  end
 1858 4762 a 0 1 0 TeXcolorrgb 2 w Fz(M)p
0 TeXcolorgray 1858 4762 a
tx@Dict begin  PutEnd  end
 1858 4762 a 3058 5447 a
currentpoint initclip moveto
 3058
5447 a -246 5529 a
SDict begin H.S end
 -246 5529 a -246 5529 a
SDict begin 12 H.A end
 -246 5529
a -246 5529 a
SDict begin [/View [/XYZ H.V]/Dest (exo.82) cvn /DEST pdfmark end
 -246 5529 a -246 5531 a
SDict begin H.S end
 -246 5531 a -246
5531 a
SDict begin 12 H.A end
 -246 5531 a -246 5531 a
SDict begin [/View [/XYZ H.V]/Dest (Item.254) cvn /DEST pdfmark end
 -246 5531 a 0 TeXcolorgray
115 x FJ(Ex)o(er)o(cice)14 b(82)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 43 w(P)n(our)j(tr)o(acer)g(les)h(droites)f
FA(\242)h FI(et)f(D,)g(on)h(fait)g(un)g(tableau)f(de)h(valeurs)g(avec)f
(deux)h(valeurs)g(\(je)f(ne)h(donne)g(pas)f(de)h(d\351tail\).)p
0 TeXcolorgray 1909 5895 a(48)p 0 TeXcolorgray eop end
%%Page: 49 49
TeXDict begin 49 48 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.49) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.255) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(a)g FA(\242)e FI(:)j
Fz(y)j FE(\306)c Fz(x)e FE(\241)10 b FI(3)18 b(et)g(D)13
b(:)19 b Fz(y)i FE(\306)14 b(\241)p FI(2)r Fz(x)h FE(\305)10
b FI(1.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o(donn\351es)g(de)
h Fz(M)7 b FI(,)18 b(on)f(r\351sout)i(l)o('\351quation)g(:)1781
134 y Fz(x)c FE(\241)10 b FI(3)15 b FE(\306)g(\241)p
FI(2)r Fz(x)g FE(\305)10 b FI(1)1665 259 y Fz(x)15 b
FE(\241)1784 275 y Fy(\001)1784 259 y FI(3)d FE(\305)1901
275 y Fy(\001)1901 259 y FI(3)i FE(\306)h(\241)p FI(2)r
Fz(x)g FE(\305)10 b FI(1)g FE(\305)g FI(3)1735 383 y
Fz(x)15 b FE(\305)10 b FI(2)r Fz(x)20 b FE(\306)2016
377 y Fy(\030)2092 359 y(\030)2025 383 y FE(\241)p FI(2)r
Fz(x)c FE(\305)10 b FI(4)g FE(\305)r Fy(\010)2370 373
y(\010)2357 383 y FI(2)r Fz(x)1844 529 y Fy(\001)1844
513 y FI(3)s Fz(x)p 1844 550 87 5 v 1867 647 a Fy(\001)1867
630 y FI(3)1955 569 y FE(\306)2034 513 y FI(4)p 2034
550 41 5 v 2034 626 a(3)1897 771 y Fz(x)19 b FE(\306)2034
715 y FI(4)p 2034 752 V 2034 828 a(3)2085 771 y(.)-38
1006 y(On)e(en)h(d\351duit)j Fz(y)g FE(\306)c Fz(x)e
FE(\241)10 b FI(3)15 b FE(\306)816 974 y FG(4)p 816 987
31 5 v 816 1035 a(3)867 1006 y FE(\241)942 974 y FG(9)p
942 987 V 942 1035 a(3)997 1006 y FE(\306)f(\241)1131
974 y FG(5)p 1131 987 V 1131 1035 a(3)1172 1006 y FI(.)-38
1130 y(C)o(onclusion)19 b(:)h Fz(M)500 1065 y Fr(\241)539
1097 y FG(4)p 539 1110 V 539 1158 a(3)580 1130 y FI(;)8
b FE(\241)673 1097 y FG(5)p 673 1110 V 673 1158 a(3)714
1065 y Fr(\242)752 1130 y FI(.)-246 1173 y
SDict begin H.S end
 -246 1173
a -246 1173 a
SDict begin 12 H.A end
 -246 1173 a -246 1173 a
SDict begin [/View [/XYZ H.V]/Dest (Item.256) cvn /DEST pdfmark end
 -246 1173 a 0 TeXcolorgray
-141 1259 a FI(3.)p 0 TeXcolorgray 43 w(La)17 b(droite)g(\()6
b Fz(A)s(B)h FI(\))18 b(a)f(une)h(\351quation)h(de)e(la)g(for)q(me)22
b Fz(y)f FE(\306)16 b Fz(a)6 b(x)15 b FE(\305)10 b Fz(b)q
FI(.)18 b(D)o('apr\350s)f(le)h(cours)f(:)1489 1488 y
Fz(a)h FE(\306)1634 1432 y Fz(y)1673 1444 y Fu(B)1730
1432 y FE(\241)c Fz(y)1842 1444 y Fu(A)p 1629 1469 257
5 v 1631 1545 a Fz(x)1672 1557 y Fu(B)1730 1545 y FE(\241)e
Fz(x)1842 1557 y Fu(A)1910 1488 y FE(\306)2043 1432 y
FI(5)e FE(\241)g FI(1)p 1989 1469 265 5 v 1989 1545 a(3)g
FE(\241)g FI(\()p FE(\241)p FI(2\))2278 1488 y FE(\306)2357
1432 y FI(4)p 2357 1469 41 5 v 2357 1545 a(5)2422 1488
y FE(\306)k FI(0,)8 b(8.)-38 1688 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g
(que)g(\()6 b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14
b FI(0,)8 b(8)r Fz(x)15 b FE(\305)10 b Fz(b)q FI(.)-38
1852 y(La)17 b(droite)g(\()6 b Fz(A)s(B)h FI(\))18 b(passe)g(par)23
b Fz(A)s FI(\()p FE(\241)p FI(2;)8 b(1\),)19 b(donc)1849
2034 y(1)14 b FE(\306)g FI(0,)8 b(8)i FE(\243)g FI(\()p
FE(\241)p FI(2\))g FE(\305)g Fz(b)1849 2159 y FI(1)k
FE(\306)g(\241)p FI(1,)8 b(6)i FE(\305)g Fz(b)1664 2283
y FI(1)g FE(\305)g FI(1,)e(6)16 b FE(\306)1964 2285 y
Fy(\030)2047 2265 y(\030)2062 2261 y(\030)1972 2283 y
FE(\241)p FI(1,)8 b(6)k FE(\305)e Fz(b)k FE(\305)2326
2294 y Fy(\010)2369 2273 y(\010)2334 2283 y FI(1,)8 b(6)1780
2408 y(2,)g(6)15 b FE(\306)f Fz(b)-38 2605 y FI(C)o(onclusion)19
b(:)f(\()6 b Fz(A)s(B)h FI(\))14 b(:)k Fz(y)k FE(\306)14
b FI(0,)8 b(8)r Fz(x)15 b FE(\305)10 b FI(2,)e(6.)-246
2639 y
SDict begin H.S end
 -246 2639 a -246 2639 a
SDict begin 12 H.A end
 -246 2639 a -246 2639
a
SDict begin [/View [/XYZ H.V]/Dest (Item.257) cvn /DEST pdfmark end
 -246 2639 a 0 TeXcolorgray -141 2734 a FI(4.)p 0 TeXcolorgray
43 w(\()e Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14
b FI(0,)8 b(8)r Fz(x)15 b FE(\305)10 b FI(2,)e(6)21 b(coupe)d(l)o('axe)
g(des)g(abscisses)g(en)i Fz(N)9 b FI(,)17 b(donc)g(l)o('or)o(donn\351e)
h(de)h Fz(N)26 b FI(est)18 b(0.)-38 2848 y(P)n(our)f(d\351ter)q(miner)h
(l)o('abscisse)g(de)i Fz(N)9 b FI(,)17 b(on)g(r)o(emplace)h(donc)j
Fz(y)j FI(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e(\()6
b Fz(A)s(B)h FI(\))18 b(et)f(on)h(r\351sout)g(l)o('\351quation)i(:)1822
3145 y(0)14 b FE(\306)g FI(0,)8 b(8)r Fz(x)15 b FE(\305)10
b FI(2,)e(6)1637 3270 y(0)i FE(\241)g FI(2,)e(6)16 b
FE(\306)e FI(0,)8 b(8)r Fz(x)15 b FE(\305)2166 3281 y
Fy(\010)2211 3260 y(\010)2174 3270 y FI(2,)8 b(6)14 b
FE(\241)2353 3281 y Fy(\010)2396 3260 y(\010)2361 3270
y FI(2,)8 b(6)1688 3384 y FE(\241)p FI(2,)g(6)p 1688
3421 165 5 v 1715 3498 a(0,)g(8)1876 3441 y FE(\306)1947
3395 y Fy(\010)1990 3374 y(\010)1955 3384 y FI(0,)g(8)t
Fz(x)p 1955 3421 156 5 v 1970 3509 a Fy(\010)2013 3487
y(\010)1979 3498 y FI(0,)g(8)1657 3611 y FE(\241)p FI(3,)g(25)16
b FE(\306)g Fz(x)5 b FI(.)-38 3809 y(C)o(onclusion)19
b(:)h Fz(N)9 b FI(\()p FE(\241)p FI(3,)f(25)18 b(;)26
b(0\).)p 0 TeXcolorgray 1909 5895 a(49)p 0 TeXcolorgray
eop end
%%Page: 50 50
TeXDict begin 50 49 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.50) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 795 1951
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 278.26778 a add def
/d 0.0 a add neg def /h 264.61015 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 795 1951 a 1948 1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 139.41826 0.0 -138.84952 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 157.628 0.0 -106.98215   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 139.41826  0 -138.84952  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -138.84952
 139.41826  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-106.98215  def /maxTickline 157.628  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 157.628
0.0 -106.98215   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.41826
0.0 -138.84952 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 157.628  0 -106.98215  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -106.98215
 157.628  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-138.84952  def /maxTickline 139.41826  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 157.628
0.0 -106.98215   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 139.41826
0.0 -138.84952 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1933 1160 a FG(0)204
b(1)i(2)f(3)g(4)-1233 b FF(\241)p FG(1)-309 b FF(\241)p
FG(2)g FF(\241)p FG(3)f FF(\241)p FG(4)1859 1082 y(0)1817
1319 y FF(\241)p FG(1)1817 1555 y FF(\241)p FG(2)1817
1791 y FF(\241)p FG(3)1859 846 y(1)1859 610 y(2)1859
374 y(3)1859 138 y(4)1859 -99 y(5)1948 1063 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((-3--1*x)/1)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((--1-2*x)/1)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.06 def /x1 4.86
def /dx x1 x sub 49 div def /F@pstplot ((--13--4*x)/5)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1948 1063 a
tx@Dict begin { 95.03206 31.29819 } PutCoor PutBegin  end
 1948
1063 a 0 1 0 TeXcolorrgb 53 x FA(\242)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a 1948 1063 a
tx@Dict begin { -46.94684 98.16187 } PutCoor PutBegin  end
 1948 1063 a 1 0 0
TeXcolorrgb 53 x Fz(D)p 0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948
1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 37.8422 -47.51602
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063
a
tx@Dict begin { 45.52455 -51.7842 } PutCoor PutBegin  end
 1948 1063 a 0 0 1 TeXcolorrgb 2 w Fz(M)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1948 1063 a
tx@Dict begin { -64.30304 33.57402 } PutCoor PutBegin  end
 1948 1063 a 0 0 1 TeXcolorrgb 6 w Fz(A)p
0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
142.26372   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063 a
tx@Dict begin { 77.96066 146.53145 } PutCoor PutBegin  end
 1948 1063 a 0 0 1
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ -92.4714
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1948 1063 a
tx@Dict begin { -99.5846 5.69046 } PutCoor PutBegin  end

1948 1063 a 0 0 1 TeXcolorrgb 2 w Fz(N)p 0 TeXcolorgray
1948 1063 a
tx@Dict begin  PutEnd  end
 1948 1063 a 3105 1951 a
currentpoint initclip moveto
 3105 1951 a -246
1996 a
SDict begin H.S end
 -246 1996 a -246 1996 a
SDict begin 12 H.A end
 -246 1996 a -246 1996
a
SDict begin [/View [/XYZ H.V]/Dest (exo.83) cvn /DEST pdfmark end
 -246 1996 a -246 2020 a
SDict begin H.S end
 -246 2020 a -246 2020 a
SDict begin 12 H.A end
 -246
2020 a -246 2020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.258) cvn /DEST pdfmark end
 -246 2020 a -246 2020 a
SDict begin H.S end
 -246 2020
a -246 2020 a
SDict begin 12 H.A end
 -246 2020 a -246 2020 a
SDict begin [/View [/XYZ H.V]/Dest (Item.259) cvn /DEST pdfmark end
 -246 2020 a 0 TeXcolorgray
107 x FJ(Ex)o(er)o(cice)14 b(83)p 0 TeXcolorgray 0 TeXcolorgray
146 w FI(1.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 40 w(On)k(tr)o(ace)f(la)h(droite)e Fz(d)22
b FI(:)d Fz(y)i FE(\306)14 b FI(1,)8 b(5)r Fz(x)15 b
FE(\241)10 b FI(2,)e(4)21 b(\340)c(par)q(tir)g(d)n('un)h(tableau)g(de)f
(valeurs)h(avec)f(deux)h(valeurs)o(.)f(P)m(ar)g(exemple)j(:)p
0 TeXcolorgray 0 TeXcolorgray 808 2224 633 4 v 808 2323
4 100 v 863 2293 a Fz(x)p 957 2323 V 171 w FI(0)p 1225
2323 V 199 w(2)p 1437 2323 V 808 2327 633 4 v 808 2426
4 100 v 865 2396 a Fz(y)p 957 2426 V 110 w FE(\241)p
FI(2,)8 b(4)p 1225 2426 V 104 w(0,)g(6)p 1437 2426 V
808 2430 633 4 v 0 TeXcolorgray 2141 2459 9 240 v 0 TeXcolorgray
2837 2303 a(1,)g(5)i FE(\243)g FI(0)g FE(\241)g FI(2,)e(4)18
b FE(\306)d(\241)p FI(2,)8 b(4)2837 2428 y(1,)g(5)i FE(\243)g
FI(2)g FE(\241)g FI(2,)e(4)18 b FE(\306)d FI(0,)8 b(6)-246
2506 y
SDict begin H.S end
 -246 2506 a -246 2506 a
SDict begin 12 H.A end
 -246 2506 a -246 2506
a
SDict begin [/View [/XYZ H.V]/Dest (Item.260) cvn /DEST pdfmark end
 -246 2506 a 0 TeXcolorgray 4 2613 a FI(\(b\))p 0 TeXcolorgray
41 w(La)17 b(droite)g FA(\242)g FI(est)h(par)o(all\350le)h(\340)e
Fz(d)7 b FI(,)18 b(donc)f(elles)i(ont)e(le)h(m\352me)g(coef\002cient)h
(dir)o(ecteur)-5 b(.)17 b(Or)g(le)h(coef\002cient)g(dir)o(ecteur)f(de)g
Fz(d)24 b FI(est)18 b(1,)8 b(5)19 b(donc)145 2713 y(le)e(coef\002cient)
h(dir)o(ecteur)f(de)h FA(\242)f FI(est)h(1,)8 b(5)19
b(\351galement.)g(On)e(a)g(donc)1881 2857 y FA(\242)e
FI(:)j Fz(y)j FE(\306)14 b FI(1,)8 b(5)r Fz(x)15 b FE(\305)10
b Fz(b)q FI(.)145 3143 y(La)17 b(droite)g FA(\242)h FI(passe)g(par)23
b Fz(A)s FI(\(1,)8 b(4)18 b(;)26 b(2,)8 b(2\),)19 b(donc)1933
3287 y(2,)8 b(2)16 b FE(\306)e FI(1,)8 b(5)i FE(\243)g
FI(1,)e(4)i FE(\305)g Fz(b)1933 3411 y FI(2,)e(2)16 b
FE(\306)e FI(2,)8 b(1)1748 3536 y(2,)g(2)i FE(\241)g
FI(2,)e(1)18 b FE(\306)2118 3547 y Fy(\010)2160 3526
y(\010)2126 3536 y FI(2,)8 b(1)j FE(\305)f Fz(b)k FE(\241)2424
3547 y Fy(\010)2467 3526 y(\010)2432 3536 y FI(2,)8 b(1)1933
3661 y(0,)g(1)16 b FE(\306)e Fz(b)145 3812 y FI(C)o(onclusion)19
b(:)e FA(\242)e FI(:)j Fz(y)j FE(\306)15 b FI(1,)8 b(5)r
Fz(x)15 b FE(\305)10 b FI(0,)e(1.)p 0 TeXcolorgray 0
TeXcolorgray 1125 5515 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 223.63857 a add def
/d 0.0 a add neg def /h 198.03128 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1125 5515 a 1688 4669 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -85.35823 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 155.9209 0.0 -67.71767 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.17041 0.0 -101.86087   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 155.9209  0 -67.71767  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.71767
 155.9209  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-101.86087  def /maxTickline 96.17041  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.17041
0.0 -101.86087   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 155.9209
0.0 -67.71767 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 96.17041  0 -101.86087  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -101.86087
 96.17041  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.71767  def /maxTickline 155.9209  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 96.17041
0.0 -101.86087   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 155.9209
0.0 -67.71767 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1673 4766 a FG(0)204 b(1)i(2)f(3)g(4)-1233 b FF(\241)p
FG(1)-309 b FF(\241)p FG(2)1599 4688 y(0)1557 4925 y
FF(\241)p FG(1)1557 5161 y FF(\241)p FG(2)1557 5397 y
FF(\241)p FG(3)1599 4452 y(1)1599 4216 y(2)1688 4669
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -2.38 def
/x1 5.48 def /dx x1 x sub 49 div def /F@pstplot ((-4.8--3.*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1688 4669 a
tx@Dict begin { 98.44667 77.96066 } PutCoor PutBegin  end

1688 4669 a 0.30196 0.30196 1 TeXcolorrgb 57 x Fz(d)p
0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end
 1688 4669 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.38 def /x1 5.48
def /dx x1 x sub 49 div def /F@pstplot ((--0.2--3.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1688 4669 a
tx@Dict begin { -43.81703 -42.67911 } PutCoor PutBegin  end
 1688 4669 a 1 0 0
TeXcolorrgb 54 x FA(\242)p 0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end

1688 4669 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -68.2864   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 17.07181   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 39.83366
62.59595   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1688 4669 a
tx@Dict begin { 30.15984 67.14848 } PutCoor PutBegin  end
 1688 4669 a 1 0 0 TeXcolorrgb 6 w Fz(A)p
0 TeXcolorgray 1688 4669 a
tx@Dict begin  PutEnd  end
 1688 4669 a 2982 5515 a
currentpoint initclip moveto
 2982
5515 a -246 5538 a
SDict begin H.S end
 -246 5538 a -246 5538 a
SDict begin 12 H.A end
 -246 5538
a -246 5538 a
SDict begin [/View [/XYZ H.V]/Dest (Item.261) cvn /DEST pdfmark end
 -246 5538 a -246 5538 a
SDict begin H.S end
 -246 5538 a -246
5538 a
SDict begin 12 H.A end
 -246 5538 a -246 5538 a
SDict begin [/View [/XYZ H.V]/Dest (Item.262) cvn /DEST pdfmark end
 -246 5538 a 0 TeXcolorgray
-141 5646 a FI(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 41 w(On)17 b(tr)o(ace)g(la)h(droite)f
Fz(D)j FI(:)f Fz(y)i FE(\306)14 b(\241)p FI(1,)8 b(5)r
Fz(x)15 b FE(\241)10 b FI(1)20 b(\340)d(par)q(tir)g(d)n('un)h(tableau)g
(de)f(valeurs)h(avec)f(deux)h(valeurs)o(.)g(P)m(ar)e(exemple)k(:)p
0 TeXcolorgray 1909 5895 a(50)p 0 TeXcolorgray eop end
%%Page: 51 51
TeXDict begin 51 50 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.51) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 849 -242
551 4 v 849 -143 4 100 v 904 -173 a Fz(x)p 999 -143 V
137 w FI(0)p 1197 -143 V 130 w FE(\241)p FI(2)p 1396
-143 V 849 -139 551 4 v 849 -40 4 100 v 906 -70 a Fz(y)p
999 -40 V 110 w FE(\241)p FI(1)p 1197 -40 V 131 w(2)p
1396 -40 V 849 -36 551 4 v 0 TeXcolorgray 2141 -7 9 240
v 0 TeXcolorgray 2852 -163 a FE(\241)10 b FI(1,)e(5)i
FE(\243)g FI(0)g FE(\241)g FI(1)17 b FE(\306)d(\241)p
FI(1)2852 -38 y FE(\241)c FI(1,)e(5)i FE(\243)g FI(\()p
FE(\241)p FI(2\))g FE(\241)g FI(1)17 b FE(\306)d FI(2)-246
56 y
SDict begin H.S end
 -246 56 a -246 56 a
SDict begin 12 H.A end
 -246 56 a -246 56 a
SDict begin [/View [/XYZ H.V]/Dest (Item.263) cvn /DEST pdfmark end
 -246 56
a 0 TeXcolorgray 4 168 a FI(\(b\))p 0 TeXcolorgray 41
w(Le)j(coef\002cient)i(dir)o(ecteur)e(de)g Fz(D)23 b
FI(est)18 b FE(\241)p FI(1,)8 b(5.)145 280 y(Le)17 b(coef\002cient)i
(dir)o(ecteur)e(de)g(\()6 b Fz(A)s(B)h FI(\))17 b(est)1538
405 y Fz(a)h FE(\306)1683 349 y Fz(y)1722 361 y Fu(B)1779
349 y FE(\241)c Fz(y)1891 361 y Fu(A)p 1678 386 257 5
v 1680 462 a Fz(x)1721 474 y Fu(B)1779 462 y FE(\241)e
Fz(x)1891 474 y Fu(A)1959 405 y FE(\306)2038 349 y FI(5,)c(2)i
FE(\241)g FI(2)p 2038 386 226 5 v 2045 462 a FE(\241)p
FI(1)g FE(\241)g FI(1)2287 405 y FE(\306)2367 349 y FI(3,)e(2)p
2367 386 110 5 v 2374 462 a FE(\241)p FI(2)2500 405 y
FE(\306)14 b(\241)p FI(1,)8 b(6.)145 595 y(Les)18 b(droites)f
Fz(D)24 b FI(et)17 b(\()6 b Fz(A)s(B)h FI(\))18 b(n)-6
b('ont)18 b(pas)g(le)f(m\352me)i(coef\002cient)f(dir)o(ecteur)-5
b(,)18 b(donc)f(elles)i(ne)e(sont)h(pas)g(par)o(all\350les)o(.)p
0 TeXcolorgray 0 TeXcolorgray 979 2598 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 258.92012 a add def
/d 0.0 a add neg def /h 232.17448 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 979 2598 a 1995
2159 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57324 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 179.25237 0.0 -52.92212   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 136.57324  0 -122.34688  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -122.34688
 136.57324  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-52.92212  def /maxTickline 179.25237  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 179.25237
0.0 -52.92212   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 179.25237  0 -52.92212  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -52.92212
 179.25237  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-122.34688  def /maxTickline 136.57324  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 179.25237
0.0 -52.92212   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57324
0.0 -122.34688 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1980 2256 a FG(0)205 b(1)g(2)g(3)g(4)-1233
b FF(\241)p FG(1)-309 b FF(\241)p FG(2)g FF(\241)p FG(3)g
FF(\241)p FG(4)1906 2178 y(0)1864 2414 y FF(\241)p FG(1)1906
1942 y(1)1906 1706 y(2)1906 1469 y(3)1906 1233 y(4)1906
997 y(5)1995 2159 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -4.3 def
/x1 4.8 def /dx x1 x sub 49 div def /F@pstplot ((--7.2-3.2*x)/2.) 
tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -4.3 def /x1 4.8 def
/dx x1 x sub 49 div def /F@pstplot ((-1.-1.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 1995 2159 a
tx@Dict begin { -96.73915 84.2203 } PutCoor PutBegin  end
 1995
2159 a 1 0 0 TeXcolorrgb 53 x Fz(D)p 0 TeXcolorgray 1995
2159 a
tx@Dict begin  PutEnd  end
 1995 2159 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
1995 2159 a
tx@Dict begin { 30.729 62.59595 } PutCoor PutBegin  end
 1995 2159 a 0.30196 0.30196 1 TeXcolorrgb
6 w Fz(A)p 0 TeXcolorgray 1995 2159 a
tx@Dict begin  PutEnd  end
 1995 2159 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -28.45274 147.95418   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 1995 2159 a
tx@Dict begin { -26.17647 153.64464 } PutCoor PutBegin  end
 1995 2159 a 0.30196 0.30196 1
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1995 2159 a
tx@Dict begin  PutEnd  end
 1995 2159
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3129 2598 a
currentpoint initclip moveto
 3129 2598 a -246
2661 a
SDict begin H.S end
 -246 2661 a -246 2661 a
SDict begin 12 H.A end
 -246 2661 a -246 2661
a
SDict begin [/View [/XYZ H.V]/Dest (exo.84) cvn /DEST pdfmark end
 -246 2661 a -246 2678 a
SDict begin H.S end
 -246 2678 a -246 2678 a
SDict begin 12 H.A end
 -246
2678 a -246 2678 a
SDict begin [/View [/XYZ H.V]/Dest (Item.264) cvn /DEST pdfmark end
 -246 2678 a 0 TeXcolorgray 112 x FJ(Ex)o(er)o(cice)
14 b(84)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p
0 TeXcolorgray 43 w(La)j(droite)g(\()6 b Fz(A)s(B)h FI(\))18
b(a)f(une)h(\351quation)h(de)e(la)g(for)q(me)22 b Fz(y)f
FE(\306)16 b Fz(a)6 b(x)15 b FE(\305)10 b Fz(b)q FI(.)18
b(D)o('apr\350s)f(le)h(cours)f(:)1489 3021 y Fz(a)h FE(\306)1634
2965 y Fz(y)1673 2977 y Fu(B)1730 2965 y FE(\241)c Fz(y)1842
2977 y Fu(A)p 1629 3002 257 5 v 1631 3078 a Fz(x)1672
3090 y Fu(B)1730 3078 y FE(\241)e Fz(x)1842 3090 y Fu(A)1910
3021 y FE(\306)1989 2965 y FI(0)e FE(\241)g FI(\()p FE(\241)p
FI(2\))p 1989 3002 265 5 v 2043 3078 a(5)g FE(\241)g
FI(1)2278 3021 y FE(\306)2357 2965 y FI(2)p 2357 3002
41 5 v 2357 3078 a(4)2422 3021 y FE(\306)k FI(0,)8 b(5.)-38
3211 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g(\()6
b Fz(A)s(B)h FI(\))14 b(:)19 b Fz(y)i FE(\306)14 b FI(0,)8
b(5)r Fz(x)15 b FE(\305)10 b Fz(b)q FI(.)-38 3368 y(La)17
b(droite)g(\()6 b Fz(A)s(B)h FI(\))18 b(passe)g(par)23
b Fz(A)s FI(\(1;)8 b FE(\241)p FI(2\),)19 b(donc)1849
3538 y FE(\241)p FI(2)14 b FE(\306)g FI(0,)8 b(5)i FE(\243)g
FI(1)g FE(\305)g Fz(b)1849 3663 y FE(\241)p FI(2)k FE(\306)g
FI(0,)8 b(5)i FE(\305)g Fz(b)1664 3787 y FE(\241)p FI(2)g
FE(\241)g FI(0,)e(5)16 b FE(\306)2019 3798 y Fy(\010)2062
3777 y(\010)2027 3787 y FI(0,)8 b(5)k FE(\305)e Fz(b)k
FE(\241)2326 3798 y Fy(\010)2369 3777 y(\010)2334 3787
y FI(0,)8 b(5)1780 3912 y FE(\241)p FI(2,)g(5)15 b FE(\306)f
Fz(b)-38 4095 y FI(C)o(onclusion)19 b(:)f(\()6 b Fz(A)s(B)h
FI(\))14 b(:)k Fz(y)k FE(\306)14 b FI(0,)8 b(5)r Fz(x)15
b FE(\241)10 b FI(2,)e(5.)-246 4126 y
SDict begin H.S end
 -246 4126 a -246
4126 a
SDict begin 12 H.A end
 -246 4126 a -246 4126 a
SDict begin [/View [/XYZ H.V]/Dest (Item.265) cvn /DEST pdfmark end
 -246 4126 a 0 TeXcolorgray
-141 4220 a FI(2.)p 0 TeXcolorgray 43 w(On)17 b(tr)o(ace)h(la)f(droite)
g FA(\242)e FI(:)j Fz(y)j FE(\306)14 b(\241)p FI(2)r
Fz(x)h FE(\305)10 b FI(5)19 b(\340)e(par)q(tir)g(d)n('un)h(tableau)g
(de)f(valeurs)h(avec)g(deux)f(valeurs)o(.)h(P)m(ar)f(exemple)i(:)p
0 TeXcolorgray 0 TeXcolorgray 767 4332 441 4 v 767 4432
4 100 v 822 4402 a Fz(x)p 917 4432 V 109 w FI(0)p 1060
4432 V 103 w(2)p 1204 4432 V 767 4435 441 4 v 767 4535
4 100 v 824 4505 a Fz(y)p 917 4535 V 110 w FI(5)p 1060
4535 V 103 w(1)p 1204 4535 V 767 4538 441 4 v 0 TeXcolorgray
2050 4568 9 240 v 0 TeXcolorgray 2895 4412 a FE(\241)10
b FI(2)g FE(\243)g FI(0)g FE(\305)g FI(5)16 b FE(\306)f
FI(5)2895 4536 y FE(\241)10 b FI(2)g FE(\243)g FI(2)g
FE(\305)g FI(5)16 b FE(\306)f FI(1)-246 4630 y
SDict begin H.S end
 -246 4630
a -246 4630 a
SDict begin 12 H.A end
 -246 4630 a -246 4630 a
SDict begin [/View [/XYZ H.V]/Dest (Item.266) cvn /DEST pdfmark end
 -246 4630 a 0 TeXcolorgray
-141 4742 a FI(3.)p 0 TeXcolorgray 43 w(On)i(a)g(\()6
b Fz(A)s(B)h FI(\))15 b(:)j Fz(y)j FE(\306)14 b FI(0,)8
b(5)r Fz(x)15 b FE(\241)10 b FI(2,)e(5)21 b(et)d FA(\242)c
FI(:)19 b Fz(y)i FE(\306)14 b(\241)p FI(2)r Fz(x)h FE(\305)10
b FI(5.)19 b(P)n(our)e(d\351ter)q(miner)h(les)g(coor)o(donn\351es)g(de)
h Fz(M)7 b FI(,)18 b(on)f(r\351sout)i(l)o('\351quation)g(:)1690
5025 y(0,)8 b(5)r Fz(x)15 b FE(\241)10 b FI(2,)e(5)18
b FE(\306)c(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(5)1505
5150 y(0,)e(5)r Fz(x)15 b FE(\241)1726 5161 y Fy(\010)1771
5139 y(\010)1734 5150 y FI(2,)8 b(5)14 b FE(\305)1913
5161 y Fy(\010)1956 5139 y(\010)1921 5150 y FI(2,)8 b(5)16
b FE(\306)e(\241)p FI(2)r Fz(x)h FE(\305)10 b FI(5)g
FE(\305)g FI(2,)e(5)1712 5274 y(0,)g(5)r Fz(x)15 b FE(\305)10
b FI(2)r Fz(x)23 b FE(\306)2106 5268 y Fy(\030)2181 5250
y(\030)2114 5274 y FE(\241)p FI(2)r Fz(x)16 b FE(\305)10
b FI(7,)e(5)i FE(\305)r Fy(\010)2528 5264 y(\010)2514
5274 y FI(2)r Fz(x)1856 5400 y Fy(\010)1899 5379 y(\010)1865
5389 y FI(2,)e(5)s Fz(x)p 1865 5426 156 5 v 1879 5513
a Fy(\010)1922 5492 y(\010)1888 5502 y FI(2,)g(5)2045
5445 y FE(\306)2124 5389 y FI(7,)g(5)p 2124 5426 110
5 v 2124 5502 a(2,)g(5)1986 5616 y Fz(x)20 b FE(\306)14
b FI(3.)p 0 TeXcolorgray 1909 5895 a(51)p 0 TeXcolorgray
eop end
%%Page: 52 52
TeXDict begin 52 51 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.52) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FI(On)17 b(en)h(d\351duit)j
Fz(y)g FE(\306)15 b FI(0,)8 b(5)r Fz(x)15 b FE(\241)10
b FI(2,)e(5)17 b FE(\306)e FI(0,)8 b(5)i FE(\243)g FI(3)g
FE(\241)g FI(2,)e(5)18 b FE(\306)c FI(1,)8 b(5)i FE(\241)g
FI(2,)e(5)17 b FE(\306)d(\241)p FI(1.)-38 -48 y(C)o(onclusion)19
b(:)h Fz(M)7 b FI(\(3;)h FE(\241)p FI(1\).)-246 -23 y
SDict begin H.S end

-246 -23 a -246 -23 a
SDict begin 12 H.A end
 -246 -23 a -246 -23 a
SDict begin [/View [/XYZ H.V]/Dest (Item.267) cvn /DEST pdfmark end
 -246 -23
a 0 TeXcolorgray -141 80 a FI(4.)p 0 TeXcolorgray 43
w Fz(d)25 b FI(est)18 b(par)o(all\350le)h(\340)e FA(\242)p
FI(,)h(donc)f(elles)h(ont)g(le)g(m\352me)h(coef\002cient)f(dir)o
(ecteur)f(\()p FE(\241)p FI(2\))9 b(;)17 b(on)g(a)g(donc)g
Fz(d)22 b FI(:)d Fz(y)i FE(\306)14 b(\241)p FI(2)r Fz(x)h
FE(\305)10 b Fz(b)q FI(.)-38 244 y(P)n(our)17 b(trouver)g
Fz(b)q FI(,)h(on)f(utilise)i(le)f(fait)g(que)g Fz(d)25
b FI(passe)18 b(par)d Fz(C)9 b FI(\()p FE(\241)p FI(2)1714
290 y Fu(x)1779 244 y FI(;)f(3)1813 291 y Fu(y)1847 244
y FI(\))32 b(:)1829 541 y(3)15 b FE(\306)f(\241)p FI(2)c
FE(\243)g FI(\()p FE(\241)p FI(2\))g FE(\305)g Fz(b)1829
666 y FI(3)15 b FE(\306)f FI(4)c FE(\305)g Fz(b)1713
790 y FI(3)g FE(\241)g FI(4)16 b FE(\306)1953 806 y Fy(\001)1953
790 y FI(4)10 b FE(\305)g Fz(b)k FE(\241)2190 806 y Fy(\001)2190
790 y FI(4)1774 915 y FE(\241)p FI(1)h FE(\306)f Fz(b)-38
1112 y FI(C)o(onclusion)19 b(:)f Fz(d)j FI(:)e Fz(y)i
FE(\306)14 b(\241)p FI(2)r Fz(x)h FE(\241)10 b FI(1.)-246
1146 y
SDict begin H.S end
 -246 1146 a -246 1146 a
SDict begin 12 H.A end
 -246 1146 a -246 1146
a
SDict begin [/View [/XYZ H.V]/Dest (Item.268) cvn /DEST pdfmark end
 -246 1146 a 0 TeXcolorgray -141 1241 a FI(5.)p 0 TeXcolorgray
43 w Fz(d)22 b FI(:)c Fz(y)j FE(\306)14 b(\241)p FI(2)r
Fz(x)h FE(\241)10 b FI(1)19 b(coupe)f(l)o('axe)h(des)e(abscisses)h(en)i
Fz(N)9 b FI(,)17 b(donc)g(l)o('or)o(donn\351e)h(de)h
Fz(N)26 b FI(est)18 b(0.)-38 1355 y(P)n(our)f(d\351ter)q(miner)h(l)o
('abscisse)g(de)i Fz(N)9 b FI(,)17 b(on)g(r)o(emplace)h(donc)j
Fz(y)j FI(par)18 b(0)f(dans)h(l)o('\351quation)h(de)e
Fz(d)25 b FI(et)18 b(on)f(r\351sout)h(l)o('\351quation)i(:)1867
1652 y(0)15 b FE(\306)f(\241)p FI(2)r Fz(x)h FE(\241)10
b FI(1)1751 1777 y(0)g FE(\305)g FI(1)16 b FE(\306)e(\241)p
FI(2)r Fz(x)h FE(\241)2207 1793 y Fy(\001)2207 1777 y
FI(1)d FE(\305)2324 1793 y Fy(\001)2324 1777 y FI(1)1830
1893 y(1)p 1802 1930 96 5 v 1802 2007 a FE(\241)p FI(2)1922
1950 y FE(\306)1993 1895 y Fy(\010)2022 1881 y(\010)2001
1893 y FE(\241)p FI(2)r Fz(x)p 2001 1930 142 5 v 2016
2009 a Fy(\010)2045 1995 y(\010)2024 2007 y FE(\241)p
FI(2)1743 2110 y FE(\241)p FI(0,)c(5)16 b FE(\306)g Fz(x)5
b FI(.)-38 2307 y(C)o(onclusion)19 b(:)h Fz(N)9 b FI(\()p
FE(\241)p FI(0,)f(5)17 b(;)26 b(0\).)p 0 TeXcolorgray
0 TeXcolorgray 922 4266 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 247.53876 a add def
/d 0.0 a add neg def /h 223.63857 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 922 4266 a 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 169.00935 0.0 -78.5294 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 145.10916 0.0 -78.5294   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 169.00935  0 -78.5294  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -78.5294
 169.00935  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-78.5294  def /maxTickline 145.10916  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.10916
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.00935
0.0 -78.5294 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 145.10916  0 -78.5294  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -78.5294
 145.10916  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-78.5294  def /maxTickline 169.00935  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.10916
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.00935
0.0 -78.5294 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1559 3711 a FG(0)205 b(1)g(2)h(3)f(4)g(5)-1469 b FF(\241)p
FG(1)-309 b FF(\241)p FG(2)1486 3633 y(0)1444 3869 y
FF(\241)p FG(1)1444 4105 y FF(\241)p FG(2)1486 3397 y(1)1486
3161 y(2)1486 2924 y(3)1486 2688 y(4)1574 3614 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((-10.--2.*x)/4.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((--10.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
1574 3614 a
tx@Dict begin { 11.38092 125.1919 } PutCoor PutBegin  end
 1574 3614 a 0 0 1 TeXcolorrgb 53 x FA(\242)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.76 def /x1 5.94
def /dx x1 x sub 49 div def /F@pstplot ((-2.-4.*x)/2.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 1 0 0  setcmykcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 28.45274
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { 30.729 -51.21501 } PutCoor PutBegin  end
 1574 3614 a 1 0.49803 0 TeXcolorrgb 6 w Fz(A)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 142.26372
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1574 3614 a
tx@Dict begin { 144.53998 5.69046 } PutCoor PutBegin  end
 1574 3614 a 1 0.49803 0
TeXcolorrgb Fz(B)p 0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614
a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 142.26372
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 85.35823
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { 87.63449 -22.76227 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 TeXcolorrgb 2 w Fz(M)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0 0  setcmykcolor  [ -56.90549
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1574 3614 a
tx@Dict begin { -54.62921 91.04869 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 0
TeXcolorcmyk 1572 3613 a Fz(C)p 0 TeXcolorgray 1574 3614
a
tx@Dict begin  PutEnd  end
 1574 3614 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ -14.22636
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1574 3614 a
tx@Dict begin { -11.95009 5.69046 } PutCoor PutBegin  end
 1574 3614 a 0 1 0 TeXcolorrgb 2 w Fz(N)p
0 TeXcolorgray 1574 3614 a
tx@Dict begin  PutEnd  end
 1574 3614 a 2978 4266 a
currentpoint initclip moveto
 2978
4266 a -246 4349 a
SDict begin H.S end
 -246 4349 a -246 4349 a
SDict begin 12 H.A end
 -246 4349
a -246 4349 a
SDict begin [/View [/XYZ H.V]/Dest (exo.85) cvn /DEST pdfmark end
 -246 4349 a 0 TeXcolorgray 116 x FJ(Ex)o(er)o(cice)14
b(85)p 0 TeXcolorgray 41 w FI(Les)k(deux)g(questions)h(sont)f
(ind\351pendantes)o(.)-246 4511 y
SDict begin H.S end
 -246 4511 a -246 4511
a
SDict begin 12 H.A end
 -246 4511 a -246 4511 a
SDict begin [/View [/XYZ H.V]/Dest (Item.269) cvn /DEST pdfmark end
 -246 4511 a 0 TeXcolorgray
-141 4608 a FI(1.)p 0 TeXcolorgray 43 w(S)o(oient)25
b Fz(A)s FI(\(0;)8 b FE(\241)p FI(4\),)18 b Fz(B)7 b
FI(\(3;)h(0,)g(5\),)18 b Fz(C)9 b FI(\()p FE(\241)p FI(2;)f(2\))18
b(et)f Fz(D)6 b FI(\(1;)i(0\).)p 0 TeXcolorgray 1909
5895 a(52)p 0 TeXcolorgray eop end
%%Page: 53 53
TeXDict begin 53 52 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.53) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1038 1550
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 244.69376 a add def
/d 0.0 a add neg def /h 216.24057 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1038 1550 a 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 8
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 157.05927 0.0 -87.63449 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -85.35823 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 80.80568 0.0 -135.43489   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 157.05927  0 -87.63449  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -87.63449
 157.05927  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-135.43489  def /maxTickline 80.80568  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -135.43489   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 157.05927
0.0 -87.63449 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 80.80568  0 -135.43489  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -135.43489
 80.80568  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-87.63449  def /maxTickline 157.05927  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 80.80568
0.0 -135.43489   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 157.05927
0.0 -87.63449 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1751 522 a FG(0)204
b(1)i(2)f(3)g(4)g(5)-1469 b FF(\241)p FG(1)-309 b FF(\241)p
FG(2)g FF(\241)p FG(3)1677 444 y(0)1635 681 y FF(\241)p
FG(1)1635 917 y FF(\241)p FG(2)1635 1153 y FF(\241)p
FG(3)1635 1390 y FF(\241)p FG(4)1677 208 y(1)1677 -28
y(2)1766 425 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.08 def /x1 5.52
def /dx x1 x sub 49 div def /F@pstplot ((-12.--4.5*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.08 def /x1 5.52
def /dx x1 x sub 49 div def /F@pstplot ((--2.-2.*x)/3.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -113.81097
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1766 425 a
tx@Dict begin { 8.5359 -112.67305 } PutCoor PutBegin  end
 1766 425 a 0 0 1
TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766
425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
14.22636   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1766 425
a
tx@Dict begin { 91.04869 13.65718 } PutCoor PutBegin  end
 1766 425 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1766 425 a
tx@Dict begin { -54.62921 62.59595 } PutCoor PutBegin  end
 1766 425 a 1 0 0 TeXcolorrgb 1764 424 a Fz(C)p
0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 1766 425 a
tx@Dict begin { 30.729 5.69046 } PutCoor PutBegin  end
 1766 425 a 1 0 0 TeXcolorrgb
Fz(D)p 0 TeXcolorgray 1766 425 a
tx@Dict begin  PutEnd  end
 1766 425 a 3070 1550
a
currentpoint initclip moveto
 3070 1550 a -38 1708 a FI(Le)18 b(coef\002cient)g(dir)o(ecteur)f(de)g
(\()6 b Fz(A)s(B)h FI(\))18 b(est)1420 1836 y Fz(a)g
FE(\306)1565 1780 y Fz(y)1604 1792 y Fu(B)1661 1780 y
FE(\241)c Fz(y)1773 1792 y Fu(A)p 1560 1817 257 5 v 1562
1893 a Fz(x)1603 1905 y Fu(B)1661 1893 y FE(\241)e Fz(x)1773
1905 y Fu(A)1841 1836 y FE(\306)1920 1780 y FI(0,)c(5)i
FE(\241)g FI(\()p FE(\241)p FI(4\))p 1920 1817 334 5
v 2009 1893 a(3)g FE(\241)g FI(0)2278 1836 y FE(\306)2357
1780 y FI(4,)e(5)p 2357 1817 110 5 v 2391 1893 a(3)2491
1836 y FE(\306)14 b FI(1,)8 b(5.)-38 2035 y(Le)18 b(coef\002cient)g
(dir)o(ecteur)f(de)g(\()n Fz(C)9 b(D)d FI(\))17 b(est)1544
2160 y Fz(a)1591 2126 y FF(0)1626 2160 y FE(\306)1710
2104 y Fz(y)1749 2116 y Fu(D)1812 2104 y FE(\241)d Fz(y)1918
2116 y Fu(C)p 1706 2141 263 5 v 1708 2217 a Fz(x)1749
2229 y Fu(D)1812 2217 y FE(\241)e Fz(x)1918 2229 y Fu(C)1993
2160 y FE(\306)2126 2104 y FI(0)e FE(\241)g FI(2)p 2072
2141 265 5 v 2072 2217 a(1)g FE(\241)g FI(\()p FE(\241)p
FI(2\))2361 2160 y FE(\306)2440 2104 y(\241)p FI(2)p
2440 2141 96 5 v 2467 2217 a(3)2545 2160 y(.)-38 2360
y(On)17 b(calcule)h(le)g(produit)f(:)1376 2493 y Fz(a)d
FE(\243)e Fz(a)1547 2459 y FF(0)1583 2493 y FE(\306)i
FI(1,)8 b(5)i FE(\243)1846 2437 y(\241)p FI(2)p 1846
2474 V 1874 2550 a(3)1966 2493 y FE(\306)k(\241)2100
2437 y FI(1,)8 b(5)i FE(\243)g FI(2)p 2100 2474 226 5
v 2193 2550 a(3)2350 2493 y FE(\306)k(\241)2484 2437
y FI(3)p 2484 2474 41 5 v 2484 2550 a(3)2548 2493 y FE(\306)g(\241)p
FI(1.)-38 2680 y(D)o('apr\350s)j(la)g(propr)q(i\351t\351)h(donn\351e)g
(avant)g(l)o('\351nonc\351,)h(les)f(droites)f(\()6 b
Fz(A)s(B)h FI(\))18 b(et)f(\()n Fz(C)9 b(D)d FI(\))17
b(sont)h(perpendiculair)o(es)o(.)-246 2712 y
SDict begin H.S end
 -246 2712
a -246 2712 a
SDict begin 12 H.A end
 -246 2712 a -246 2712 a
SDict begin [/View [/XYZ H.V]/Dest (Item.270) cvn /DEST pdfmark end
 -246 2712 a 0 TeXcolorgray
-141 2809 a FI(2.)p 0 TeXcolorgray 43 w(S)o(oient)25
b Fz(A)s FI(\()p FE(\241)p FI(1;)8 b(0\),)18 b Fz(B)7
b FI(\(2;)h(4\),)17 b Fz(C)9 b FI(\(5;)f FE(\241)p FI(2\))18
b(;)f(et)h FA(\242)g FI(la)f(perpendiculair)o(e)i(\340)e(\()p
Fz(B)5 b(C)k FI(\))17 b(passant)i(par)k Fz(A)s FI(.)p
0 TeXcolorgray 0 TeXcolorgray 1026 4608 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 247.53877 a add def
/d 0.0 a add neg def /h 206.56674 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1026 4608 a
1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 184.94283 0.0 -62.59595 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 135.43489 0.0 -71.13185   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 184.94283  0 -62.59595  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -62.59595
 184.94283  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-71.13185  def /maxTickline 135.43489  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 135.43489
0.0 -71.13185   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -62.59595 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 135.43489  0 -71.13185  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -71.13185
 135.43489  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-62.59595  def /maxTickline 184.94283  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 135.43489
0.0 -71.13185   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -62.59595 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1531 4114 a FG(0)205 b(1)g(2)g(3)g(4)h(5)f(6)
-1706 b FF(\241)p FG(1)-309 b FF(\241)p FG(2)1457 4036
y(0)1415 4273 y FF(\241)p FG(1)1415 4509 y FF(\241)p
FG(2)1457 3800 y(1)1457 3564 y(2)1457 3328 y(3)1457 3092
y(4)1546 4017 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  [ 85.35823
56.90549 90.75693 46.10849 79.95952 40.70978 74.56123 51.50677  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.89961
0.8 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 2.0
SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.2 def /x1 6.5 def
/dx x1 x sub 49 div def /F@pstplot ((--24.-6.*x)/3.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.2 def /x1 6.5 def
/dx x1 x sub 49 div def /F@pstplot ((--3.--3.*x)/6.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 1546 4017 a
tx@Dict begin { 116.65642 67.14848 } PutCoor PutBegin  end
 1546 4017 a 1 0 0
TeXcolorrgb 54 x FA(\242)p 0 TeXcolorgray 1546 4017 a
tx@Dict begin  PutEnd  end

1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -28.45274
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1546
4017 a
tx@Dict begin { -26.17647 5.69046 } PutCoor PutBegin  end
 1546 4017 a 1 0 0 TeXcolorrgb 6 w Fz(A)p 0 TeXcolorgray
1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1546 4017 a
tx@Dict begin { 59.18175 119.50143 } PutCoor PutBegin  end
 1546 4017 a 0 0 1 TeXcolorrgb Fz(B)p 0 TeXcolorgray
1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1546 4017 a
tx@Dict begin { 144.53998 -51.21501 } PutCoor PutBegin  end
 1546 4017 a 0 0 1 TeXcolorrgb 1544 4016 a
Fz(C)p 0 TeXcolorgray 1546 4017 a
tx@Dict begin  PutEnd  end
 1546 4017 a 3081 4608
a
currentpoint initclip moveto
 3081 4608 a -38 4766 a FI(Le)18 b(coef\002cient)g(dir)o(ecteur)f(de)g
(\()p Fz(B)5 b(C)k FI(\))18 b(est)1495 4891 y Fz(a)g
FE(\306)1640 4835 y Fz(y)1677 4847 y Fu(C)1736 4835 y
FE(\241)c Fz(y)1844 4847 y Fu(B)p 1635 4872 257 5 v 1637
4948 a Fz(x)1676 4960 y Fu(C)1736 4948 y FE(\241)e Fz(x)1844
4960 y Fu(B)1916 4891 y FE(\306)1995 4835 y(\241)p FI(2)e
FE(\241)g FI(4)p 1995 4872 212 5 v 2023 4948 a(5)g FE(\241)g
FI(2)2231 4891 y FE(\306)2310 4835 y(\241)p FI(6)p 2310
4872 96 5 v 2337 4948 a(3)2429 4891 y FE(\306)15 b(\241)p
FI(2.)-38 5097 y(On)23 b(note)j Fz(a)319 5067 y FF(0)363
5097 y FI(le)d(coef\002cient)h(dir)o(ecteur)f(de)g FA(\242)p
FI(.)h(C)o(omme)g(\()p Fz(B)5 b(C)k FI(\))21 b FE(?)f
FA(\242)p FI(,)k(d)n('apr\350s)g(la)f(propr)q(i\351t\351)g(donn\351e)h
(avant)f(l)o('\351nonc\351,)28 b Fz(a)16 b FE(\243)e
Fz(a)3765 5067 y FF(0)3806 5097 y FE(\306)20 b(\241)p
FI(1,)k(soit)-38 5197 y(\()p FE(\241)p FI(2\))10 b FE(\243)i
Fz(a)235 5167 y FF(0)270 5197 y FE(\306)j(\241)p FI(1.)i(On)h(a)f(donc)
1452 5280 y Fy(\010)1481 5266 y(\010)1460 5278 y FE(\241)p
FI(2)s Fz(a)1605 5248 y FF(0)p 1460 5315 166 5 v 1487
5393 a Fy(\010)1516 5379 y(\010)1495 5391 y FE(\241)p
FI(2)1650 5334 y FE(\306)1729 5278 y(\241)p FI(1)p 1729
5315 96 5 v 1729 5391 a FE(\241)p FI(2)1981 5334 y(et)g(ainsi)149
b Fz(a)2423 5300 y FF(0)2459 5334 y FE(\306)14 b FI(0,)8
b(5.)-38 5521 y(A)17 b(ce)g(stade)o(,)g(on)h(sait)g(que)g
FA(\242)c FI(:)19 b Fz(y)i FE(\306)14 b FI(0,)8 b(5)r
Fz(x)15 b FE(\305)10 b Fz(b)q FI(.)p 0 TeXcolorgray 1909
5895 a(53)p 0 TeXcolorgray eop end
%%Page: 54 54
TeXDict begin 54 53 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.54) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FI(La)17 b(droite)g FA(\242)h
FI(passe)g(par)24 b Fz(A)s FI(\()p FE(\241)p FI(1;)8
b(0\),)18 b(donc)1849 1 y(0)c FE(\306)g FI(0,)8 b(5)i
FE(\243)g FI(\()p FE(\241)p FI(1\))g FE(\305)g Fz(b)1849
126 y FI(0)k FE(\306)g(\241)p FI(0,)8 b(5)i FE(\305)g
Fz(b)1664 250 y FI(0)g FE(\305)g FI(0,)e(5)16 b FE(\306)1964
252 y Fy(\030)2047 232 y(\030)2062 228 y(\030)1972 250
y FE(\241)p FI(0,)8 b(5)k FE(\305)e Fz(b)k FE(\305)2326
261 y Fy(\010)2369 240 y(\010)2334 250 y FI(0,)8 b(5)1780
375 y(0,)g(5)15 b FE(\306)f Fz(b)-38 550 y FI(C)o(onclusion)19
b(:)f FA(\242)c FI(:)19 b Fz(y)i FE(\306)14 b FI(0,)8
b(5)r Fz(x)15 b FE(\305)10 b FI(0,)e(5.)-246 630 y
SDict begin H.S end
 -246
630 a -246 630 a
SDict begin 12 H.A end
 -246 630 a -246 630 a
SDict begin [/View [/XYZ H.V]/Dest (exo.86) cvn /DEST pdfmark end
 -246 630 a 0 TeXcolorgray
108 x FJ(Ex)o(er)o(cice)14 b(86)p 0 TeXcolorgray 41 w
FI(Le)k(tableau)g(suivant)g(donne)f(la)h(par)q(t)f(\(en)g(pour)o
(centage\))g(des)g(voitur)o(es)h(diesel)g(dans)f(les)h(ventes)h(de)d
(voitur)o(es)i(neuves)o(,)h(en)f(F)o(r)o(ance)o(,)-246
838 y(entr)o(e)g(2012)h(et)f(2017.)p 0 TeXcolorgray 0
TeXcolorgray 991 914 1919 4 v 991 1014 4 100 v 1044 984
a(R)o(ang)f(de)g(l)o('ann\351e)p 1802 1014 V 285 w(0)p
1986 1014 V 144 w(1)p 2170 1014 V 144 w(2)p 2354 1014
V 144 w(3)p 2538 1014 V 144 w(4)p 2722 1014 V 143 w(5)p
2906 1014 V 991 1017 1919 4 v 991 1117 4 100 v 1044 1087
a(\045)f(des)g(voitur)o(es)g(diesel)p 1802 1117 V 104
w(73)p 1986 1117 V 104 w(67)p 2170 1117 V 104 w(64)p
2354 1117 V 104 w(58)p 2538 1117 V 104 w(52)p 2722 1117
V 104 w(48)p 2906 1117 V 991 1120 1919 4 v -246 1173
a
SDict begin H.S end
 -246 1173 a -246 1173 a
SDict begin 12 H.A end
 -246 1173 a -246 1173 a
SDict begin [/View [/XYZ H.V]/Dest (Item.271) cvn /DEST pdfmark end
 -246
1173 a 0 TeXcolorgray -141 1250 a FI(1.)p 0 TeXcolorgray
43 w(On)i(place)g(les)h(points)g(\(en)f(bleu\))g(dans)f(un)i(r)o
(ep\350r)o(e)e(comme)i(s)m('il)g(s)m('agissait)g(de)e(tr)o(acer)h(la)g
(courbe)f(r)o(epr\351sentative)j(d)n('une)e(fonction.)h(On)f(ne)-38
1350 y(les)g(r)o(elie)g(pas)o(.)-246 1378 y
SDict begin H.S end
 -246 1378
a -246 1378 a
SDict begin 12 H.A end
 -246 1378 a -246 1378 a
SDict begin [/View [/XYZ H.V]/Dest (Item.272) cvn /DEST pdfmark end
 -246 1378 a 0 TeXcolorgray
-141 1472 a FI(2.)p 0 TeXcolorgray 43 w(Les)g(points)g(plac\351s)g
(\340)f(la)g(question)i(pr\351c\351dente)f(sont)g(\253)c(pr)o(esque)j
(align\351s)d(\273.)k(La)f(calculatr)q(ice)g(per)q(met)h(d)n('obtenir)g
(l)o('\351quation)h(de)e(la)g(droite)-38 1571 y(\253)d(la)j(plus)h
(proche)c(\273)35 b(de)17 b(ces)g(points)o(,)i(qu)n('on)f(appelle)i
(droite)c(d)n('ajustement)k(\(ou)e(droite)f(de)g(r\351gr)o(ession\).)
-38 1725 y(A)-5 b(vec)17 b(une)h(C)o(alculatr)q(ice)g(coll\350ge)o(,)g
(la)g(proc\351dur)o(e)e(est)i(la)g(suivante)g(:)p 0 TeXcolorgray
7 1848 a(\225)p 0 TeXcolorgray 42 w(touche)46 b(MENU)p
337 1769 295 4 v 337 1876 4 109 v 629 1876 V 337 1878
295 4 v 46 w(\226)18 b(on)f(choisit)47 b(2)17 b(:S)n(tatistiques)p
1063 1769 535 4 v 1063 1892 4 125 v 1594 1892 V 1063
1894 535 4 v 49 w(puis)47 b(2)17 b(:y=ax+b)p 1780 1767
383 4 v 1780 1894 4 129 v 2159 1894 V 1780 1896 383 4
v 0 TeXcolorgray 7 1961 a(\225)p 0 TeXcolorgray 42 w(on)g(entr)o(e)h
(les)g(valeurs)g(du)f(tableau)h(en)g(colonne)p 0 TeXcolorgray
7 2060 a(\225)p 0 TeXcolorgray 42 w(touche)46 b(OPTN)p
337 1981 268 4 v 337 2088 4 109 v 601 2088 V 337 2090
268 4 v 46 w(\226)17 b(on)h(choisit)46 b(4)18 b(:C)o(alc)g(r\351gr)o
(ession)p 1035 1978 659 4 v 1035 2106 4 129 v 1690 2106
V 1035 2108 659 4 v 46 w(\226)f(on)h(lit)g(les)g(valeurs)g(de)f(a)g(et)
h(b)-38 2184 y(On)f(obtient)h(a)c FE(\274)h(\241)p FI(5,)8
b(0)18 b(et)g(b)c FE(\274)g FI(72,)8 b(9.)19 b(La)f(droite)f(d)n
('ajustement)j Fz(D)j FI(a)17 b(donc)g(pour)h(\351quation)23
b Fz(y)e FE(\306)14 b(\241)p FI(5)r Fz(x)h FE(\305)10
b FI(72,)e(9.)-246 2214 y
SDict begin H.S end
 -246 2214 a -246 2214 a
SDict begin 12 H.A end
 -246
2214 a -246 2214 a
SDict begin [/View [/XYZ H.V]/Dest (Item.273) cvn /DEST pdfmark end
 -246 2214 a 0 TeXcolorgray -141 2306
a FI(3.)p 0 TeXcolorgray 43 w(On)17 b(tr)o(ace)h(la)f(droite)g
Fz(D)k FI(:)d Fz(y)j FE(\306)14 b(\241)p FI(5)r Fz(x)h
FE(\305)10 b FI(72,)e(9)21 b(\(en)c(rouge\))f(\340)i(par)q(tir)f(d)n
('un)g(tableau)h(de)f(valeurs)i(avec)e(deux)g(valeurs)o(.)h(P)m(ar)f
(exemple)j(:)p 0 TeXcolorgray 0 TeXcolorgray 658 2415
659 4 v 658 2514 4 100 v 713 2484 a Fz(x)p 807 2514 V
163 w FI(0)p 1060 2514 V 213 w(5)p 1313 2514 V 658 2517
659 4 v 658 2617 4 100 v 715 2587 a Fz(y)p 807 2617 V
110 w FI(72,)8 b(9)p 1060 2617 V 104 w(47,)g(9)p 1313
2617 V 658 2620 659 4 v 0 TeXcolorgray 2050 2650 9 240
v 0 TeXcolorgray 2786 2494 a FE(\241)i FI(5)g FE(\243)g
FI(0)g FE(\305)g FI(72,)e(9)17 b FE(\306)e FI(72,)8 b(9)2786
2619 y FE(\241)i FI(5)g FE(\243)g FI(5)g FE(\305)g FI(72,)e(9)17
b FE(\306)e FI(47,)8 b(9)p 0 TeXcolorgray 0 TeXcolorgray
918 4370 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 273.51 a add def /d
0.0 a add neg def /h 199.04211 a add def a neg d moveto a neg h L w
h L w d L closepath clip newpath 0 0 moveto setmatrix end
 918 4370 a 1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 239.1245 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.7626
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 174.29945 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 22.76228
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 239.1245  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 239.1245  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 174.29945  def /dT 1491749 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 22.76228  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 174.29945
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 239.1245
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 174.29945  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 174.29945  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 239.1245  def /dT 1491770 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.27626  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.27626  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 174.29945
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 239.1245
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1189 4261 a FG(0)157
b(1)h(2)g(3)g(4)g(5)g(6)g(7)g(8)g(9)1115 4184 y(0)1084
3995 y(10)1084 3806 y(20)1084 3617 y(30)1084 3428 y(40)1084
3239 y(50)1084 3050 y(60)1084 2861 y(70)1204 4164 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0. def /x1 10.505288442894784
def /dx x1 x sub 49 div def /F@pstplot ((--364.5-25.*x)/5.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot 2.27626 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 2.27626 mul gt { moveto } { dup -1.e30 2.27626 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 2.27626 mul gt { moveto } { dup -1.e30
2.27626 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1204 4164 a
tx@Dict begin { 125.83893 112.01416 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 54 x Fz(D)p 0 TeXcolorgray 1204 4164 a
tx@Dict begin  PutEnd  end
 1204
4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.86055 63.50764 0.0
63.50764   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  4.0  4.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 204.86055 0.0 204.86055
63.50764   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  4.0  4.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1204 4164 a
tx@Dict begin { 180.45055 -15.93382 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 54 x FI(ann\351e)18 b(2021)p 0 TeXcolorgray
1204 4164 a
tx@Dict begin  PutEnd  end
 1204 4164 a 1204 4164 a
tx@Dict begin { -21.29657 61.45903 } PutCoor PutBegin  end
 1204 4164 a 1 0 0
TeXcolorrgb 51 x FI(27,9)p 0 TeXcolorgray 1204 4164 a
tx@Dict begin  PutEnd  end

1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 204.86055
47.57382 158.33499 26.71039   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1204
4164 a
tx@Dict begin { 97.87788 31.67514 } PutCoor PutBegin  end
 1204 4164 a 57 x FI(ventes)g(r\351elles)1204 4164
y
tx@Dict begin  PutEnd  end
 1204 4164 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 166.167   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 22.76228 152.50945   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 45.52457 145.68066   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 68.28685 132.0231   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 91.04913 118.36554   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 0.0 165.93936
  false NArray  /DS 5.0 0. CLW mul add 2 div def /StandardSymL 0. [1.8
0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.  1.  scale
<B4> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81142
109.03285   false NArray  /DS 5.0 0. CLW mul add 2 div def /StandardSymL
0. [1.8 0.0 0.0 1.8 -0.495 -0.4788] FontDot /Dot { moveto gsave 1.
 1.  scale <B4> show grestore } bind def   1. .setopacityalpha  newpath
n { transform floor .5 add exch floor .5 add exch itransform Dot }
repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 204.86055
47.57382   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3189 4370 a
currentpoint initclip moveto
 3189
4370 a -38 4515 a FI(La)f(droite)g(est)h(toute)h(proche)e(des)g(points)
i(bleus)o(.)f(Elle)h(\253)14 b(mod\351lise)g(\273)35
b(l)o('\351volution)20 b(de)d(la)g(par)q(t)h(des)f(voitur)o(es)h
(diesel)g(\340)f(par)q(tir)g(de)g(2012.)-38 4668 y(S)o(i)g(cet)g
(ajustement)i(\351tait)f(\002able)o(,)e(en)i(2021)g(\(ann\351e)g
(n\2609\),)f(le)h(pour)o(centage)f(de)g(diesels)h(dans)f(les)g(ventes)i
(de)d(voitur)o(es)i(neuves)g(devr)o(ait)g(\352tr)o(e)-38
4768 y(appro)o(ximativement)i(\351gal)d(\340)1719 4867
y FE(\241)p FI(5)10 b FE(\243)g FI(9)g FE(\305)g FI(72,)e(9)18
b FE(\306)c FI(27,)8 b(9)-38 5005 y(\(voir)17 b(pointill\351s)j
(rouges\).)-38 5159 y(En)f(r\351alit\351,)i(les)f(diesels)g(ne)g(r)o
(epr\351sentaient)h(plus)f(que)g(20,9)h(\045)e(des)g(ventes)i(en)e
(2021,)j(ce)d(qui)h(montr)o(e)f(que)h(l)o('ajustement)j(propos\351)d
(dans)-38 5258 y(l)o('\351nonc\351)f(n)-6 b('est)18 b(plus)h(valable)e
(\226)h(c)n('est)g(\340)f(par)q(tir)g(de)g(2018)i(que)f(les)g(ventes)h
(commencent)g(\340)e(\253)d(d\351crocher)g(\273.)-246
5336 y
SDict begin H.S end
 -246 5336 a -246 5336 a
SDict begin 12 H.A end
 -246 5336 a -246 5336
a
SDict begin [/View [/XYZ H.V]/Dest (exo.87) cvn /DEST pdfmark end
 -246 5336 a 0 TeXcolorgray 110 x FJ(Ex)o(er)o(cice)g(87)p
0 TeXcolorgray 41 w FI(A)n(u)19 b(18\260)h(si\350cle)o(,)g(l)o
('\351tude)h(des)e(distances)h(entr)o(e)f(les)h(plan\350tes)h(et)f(le)g
(soleil)g(a)f(conduit)h(les)g(astronomes)g(T)m(itius)h(et)f(Bode)f
(\340)g(imaginer)-246 5546 y(l)o('existence)h(d)n('une)e(plan\350te)h
(encor)o(e)e(inconnue)o(,)i(C\351r\350s)o(,)f(entr)o(e)g(M)o(ars)f(et)h
(J)m(upiter)-5 b(.)-246 5646 y(Le)18 b(gr)o(aphique)h(ci-dessous)f
(donne)g(les)g(distances)g(des)g(plan\350tes)h(au)e(soleil,)i(en)f
(unit\351s)h(astronomiques)g(\(1)e(U)m(A)d FE(\306)g
FI(distance)k(terr)o(e-soleil)r(\).)p 0 TeXcolorgray
1909 5895 a(54)p 0 TeXcolorgray eop end
%%Page: 55 55
TeXDict begin 55 54 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.55) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 890 -242
2120 4 v 890 -143 4 100 v 1010 -173 a FI(N)n(om)p 1298
-143 V 169 w(V\351nus)p 1616 -143 V 105 w(T)-8 b(err)o(e)p
1895 -143 V 103 w(M)o(ars)p 2172 -143 V 103 w(C\351r\350s)p
2469 -143 V 104 w(J)m(up)m(.)p 2706 -143 V 104 w(S)o(atur)j(.)p
3006 -143 V 890 -139 2120 4 v 890 -40 4 100 v 1008 -70
a(R)o(ang)p 1298 -40 V 255 w(1)p 1616 -40 V 259 w(2)p
1895 -40 V 238 w(3)p 2172 -40 V 247 w(4)p 2469 -40 V
227 w(5)p 2706 -40 V 228 w(6)p 3006 -40 V 890 -36 2120
4 v 890 63 4 100 v 943 33 a(Distance)p 1298 63 V 160
w(0,7)p 1616 63 V 229 w(1)p 1895 63 V 208 w(1,5)p 2172
63 V 226 w(?)p 2469 63 V 197 w(5,2)p 2706 63 V 169 w(9,5)p
3006 63 V 890 66 2120 4 v -246 135 a
SDict begin H.S end
 -246 135 a -246
135 a
SDict begin 12 H.A end
 -246 135 a -246 135 a
SDict begin [/View [/XYZ H.V]/Dest (Item.274) cvn /DEST pdfmark end
 -246 135 a 0 TeXcolorgray
-141 215 a FI(1.)p 0 TeXcolorgray 43 w(On)17 b(constr)q(uit)i(le)f
(nuage)g(de)f(points)i(associ\351)g(\340)e(cette)i(s\351r)q(ie)f(comme)
g(dans)g(l)o('exer)o(cice)h(pr\351c\351dent.)f(On)g(laisse)h(vide)f(l)o
('emplacement)j(pour)-38 314 y(la)c(plan\350te)i(n\2604.)-246
346 y
SDict begin H.S end
 -246 346 a -246 346 a
SDict begin 12 H.A end
 -246 346 a -246 346 a
SDict begin [/View [/XYZ H.V]/Dest (Item.275) cvn /DEST pdfmark end
 -246
346 a 0 TeXcolorgray -141 443 a FI(2.)p 0 TeXcolorgray
43 w(P)n(our)e(tr)o(acer)g(la)g(courbe)g(de)h(la)f(fonction,)i(on)e
(fait)h(un)g(tableau)g(de)f(valeurs)h(sur)2331 444 y([)2356
443 y(0;)8 b(6)2464 444 y(])2508 443 y(avec)17 b(un)h(pas)g(de)f(1.)p
0 TeXcolorgray 0 TeXcolorgray 799 555 2511 4 v 799 655
4 100 v 906 625 a Fz(x)p 1052 655 V 250 w FI(0)p 1374
655 V 282 w(1)p 1696 655 V 282 w(2)p 2018 655 V 281 w(3)p
2340 655 V 282 w(4)p 2662 655 V 282 w(5)p 2984 655 V
282 w(6)p 3306 655 V 799 658 2511 4 v 799 758 4 100 v
860 728 a Fz(f)i FI(\()r Fz(x)5 b FI(\))p 1052 758 V
157 w(0,)j(7)p 1374 758 V 249 w(1)p 1696 758 V 247 w(1,)g(6)p
2018 758 V 214 w(2,)g(8)p 2340 758 V 214 w(5,)g(2)p 2662
758 V 248 w(6)p 2984 758 V 262 w(10)p 3306 758 V 799
761 2511 4 v -38 910 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)p
0 TeXcolorgray 7 1009 a(\225)p 0 TeXcolorgray 50 w Fz(f)h
FI(\(0\))14 b FE(\306)g FI(0,)8 b(4)i FE(\305)g FI(0,)e(15)i
FE(\243)g FI(2)754 979 y FG(0)808 1009 y FE(\306)k FI(0,)8
b(4)i FE(\305)g FI(0,)e(15)i FE(\243)g FI(1)18 b FE(\306)c
FI(0,)8 b(4)i FE(\305)g FI(0,)e(15)18 b FE(\306)c FI(0,)8
b(55)148 b(\()p Fs(")q FI(2)2282 979 y FG(0)2331 1009
y FE(\306)14 b FI(1\).)p 0 TeXcolorgray 7 1109 a(\225)p
0 TeXcolorgray 50 w Fz(f)19 b FI(\(3\))14 b FE(\306)g
FI(0,)8 b(4)i FE(\305)g FI(0,)e(15)i FE(\243)g FI(2)754
1079 y FG(3)808 1109 y FE(\306)k FI(0,)8 b(4)i FE(\305)g
FI(0,)e(15)i FE(\243)g FI(8)18 b FE(\306)c FI(0,)8 b(4)i
FE(\305)g FI(1,)e(2)18 b FE(\306)c FI(1,)8 b(6.)-38 1259
y(On)17 b(tr)o(ace)h(la)f(courbe)g(en)h(rouge)f(dans)g(le)h(r)o
(ep\350r)o(e)f(ci-dessous)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1022 3458 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 248.56902 a add def
/d 0.0 a add neg def /h 254.59373 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1022 3458 a 1231 3266 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 223.42236 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 231.47437 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 223.42236  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 223.42236  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 231.47437  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 231.47437
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 223.42236
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 231.47437  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 231.47437  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 223.42236  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 231.47437
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 223.42236
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1216 3363 a FG(0)205
b(1)g(2)g(3)g(4)g(5)h(6)f(7)1142 3285 y(0)1142 3108 y(1)1142
2931 y(2)1142 2754 y(3)1142 2577 y(4)1142 2399 y(5)1142
2222 y(6)1142 2045 y(7)1142 1868 y(8)1142 1691 y(9)1111
1513 y(10)1231 3266 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 6 def /dx
x1 x sub 199 div def /F@pstplot (0.4+0.15*2.0^(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 1 0 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 59.75081 0.0
59.75081   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 113.81097
59.75081   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1231 3266 a
tx@Dict begin { 100.1707 -12.79083 } PutCoor PutBegin  end
 1231 3266 a 1 0 0
TeXcolorrgb 54 x FI(C\351r\350s)p 0 TeXcolorgray 1231
3266 a
tx@Dict begin  PutEnd  end
 1231 3266 a 1231 3266 a
tx@Dict begin { -21.70381 59.50757 } PutCoor PutBegin  end
 1231 3266 a 1 0 0 TeXcolorrgb
51 x FI(2,8)p 0 TeXcolorgray 1231 3266 a
tx@Dict begin  PutEnd  end
 1231 3266 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 28.45274
14.93762   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 56.90549
21.33955   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 85.35823
32.00932   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
110.9656   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 170.71646
202.72575   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
59.75081   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3086 3458 a
currentpoint initclip moveto
 3086 3458 a -246 3502 a
SDict begin H.S end
 -246 3502 a -246
3502 a
SDict begin 12 H.A end
 -246 3502 a -246 3502 a
SDict begin [/View [/XYZ H.V]/Dest (Item.276) cvn /DEST pdfmark end
 -246 3502 a 0 TeXcolorgray
-141 3616 a FI(3.)p 0 TeXcolorgray 43 w(S)n(uivant)19
b(l)o('ajustement)h(par)e(la)f(fonction)27 b Fz(f)17
b FI(,)g(la)h(plan\350te)h(n\2604)e(C\351r\350s)h(devr)o(ait)g(se)g
(trouver)f(\340)g(2,8)i(U.A.)f(du)f(soleil.)-38 3780
y FJ(R)o(emarque)f(:)j FI(Il)g(existe)i(bel)e(et)h(bien)g(une)g
(plan\350te)h(naine)f(C\351r\350s)o(,)h(dans)e(la)h(ceintur)o(e)g(d)n
('ast\351ro\357de)o(,)f(entr)o(e)h(M)o(ars)f(et)h(J)m(upiter)-5
b(.)21 b(Le)f(mod\350le)h(de)-38 3880 y(l)o('\351nonc\351)16
b(a)f(\351galement)h(par)q(ticip\351)g(\340)e(la)h(d\351couver)q(te)g
(d)n('U)m(r)o(anus)o(.)h(P)n(our)q(tant,)e(on)h(consid\350r)o(e)g
(aujour)o(d)n('hui)h(que)f(ce)g(mod\350le)h(n)-6 b('est)16
b(pas)f(\002able)-38 3979 y(et)i(que)h(son)f(ef\002cacit\351)g(\340)g
(d\351tecter)g(des)g(plan\350tes)i(r)o(el\350ve)e(d)n('un)g(\253)c
(coup)18 b(de)f(chance)c(\273)34 b(for)q(midable)17 b(\(le)g(ter)q(me)g
(savant)g(est)h(\253)13 b(s\351r)o(endipit\351)g(\273\).)-38
4079 y(On)k(r)o(envoie)h(le)g(lecteur)g(\340)f(l)o('ar)q(ticle)h(W)o
(ikip\351dia)g(sur)g(la)f(loi)h(de)f(T)m(itius-Bode)i(pour)f(plus)h(de)
e(d\351tails)o(.)-246 4224 y
SDict begin H.S end
 -246 4224 a -246 4224 a
SDict begin 12 H.A end

-246 4224 a -246 4224 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 -246 4224 a 132 x FK(7)105 b(P)l(our)n
(centages,)24 b(taux)f(d)m('\351v)n(olution)-246 4467
y
SDict begin H.S end
 -246 4467 a -246 4467 a
SDict begin 12 H.A end
 -246 4467 a -246 4467 a
SDict begin [/View [/XYZ H.V]/Dest (exo.88) cvn /DEST pdfmark end
 -246
4467 a -246 4452 a
SDict begin H.S end
 -246 4452 a -246 4452 a
SDict begin 12 H.A end
 -246 4452
a -246 4452 a
SDict begin [/View [/XYZ H.V]/Dest (Item.277) cvn /DEST pdfmark end
 -246 4452 a 0 TeXcolorgray 88 x FJ(Ex)o(er)o(cice)14
b(88)p 0 TeXcolorgray 0 TeXcolorgray 146 w FI(1.)p 0
TeXcolorgray 43 w(On)j(compl\350te)i(un)f(tableau)g(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1425
4627 1258 4 v 1425 4727 4 100 v 1478 4697 a(\311l\350ves)p
2001 4727 V 360 w(30)p 2340 4727 V 268 w(?)p 2679 4727
V 1425 4730 1258 4 v 1425 4829 4 100 v 1478 4800 a(P)n(our)o(centage)p
2001 4829 V 144 w(100)p 2340 4829 V 219 w(80)p 2679 4829
V 1425 4833 1258 4 v -38 4956 a(Il)e(y)f(a)i(30)10 b
FE(\243)g FI(80)g FE(\245)g FI(100)18 b FE(\306)c FI(24)k(\002lles)g
(dans)g(la)f(classe)o(.)-246 4990 y
SDict begin H.S end
 -246 4990 a -246
4990 a
SDict begin 12 H.A end
 -246 4990 a -246 4990 a
SDict begin [/View [/XYZ H.V]/Dest (Item.278) cvn /DEST pdfmark end
 -246 4990 a 0 TeXcolorgray
-141 5085 a FI(2.)p 0 TeXcolorgray 43 w(On)g(compl\350te)i(un)f
(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1425 5172 1258 4 v 1425 5272 4 100 v 1478
5242 a(M)o(ar)q(ins)p 2001 5272 V 332 w(1)12 b(760)p
2340 5272 V 167 w(1)g(046)p 2679 5272 V 1425 5275 1258
4 v 1425 5375 4 100 v 1478 5345 a(P)n(our)o(centage)p
2001 5375 V 144 w(100)p 2340 5375 V 228 w(?)p 2679 5375
V 1425 5378 1258 4 v 0 TeXcolorgray 1909 5895 a(55)p
0 TeXcolorgray eop end
%%Page: 56 56
TeXDict begin 56 55 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.56) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FI(1)8 b(046)i FE(\243)g FI(100)g
FE(\245)g FI(1)e(760)20 b FE(\274)15 b FI(59,)8 b(43,)20
b(donc)d(environ)h(59,43)h(\045)e(des)h(mar)q(ins)f(sont)h(tomb\351s)h
(malades)o(.)-38 1 y FJ(N.B.)f FI(On)e(fait)h(le)g(calcul)f(et,)h
(seulement)i(apr\350s)o(,)f(on)e(\351cr)q(it)g(la)h(r\351ponse)g(avec)g
(le)f(symbole)h(\045.)g(R)o(appelons)h(\340)e(cette)i(occasion)e(la)h
(signi\002cation)-38 101 y(de)g(59,43)j(\045)d(:)1604
227 y(59,)8 b(43)19 b(\045)c FE(\306)1969 171 y FI(59,)8
b(43)p 1969 208 191 5 v 2003 284 a(100)2183 227 y FE(\306)15
b FI(0,)8 b(5943.)-38 450 y(Donc)17 b(dir)o(e)f(que)i(59,43)i(\045)d
(des)g(mar)q(ins)h(sont)g(tomb\351s)g(malades)o(,)h(c)n('est)f(dir)o(e)
f(que)g(la)h(propor)q(tion)f(de)h(malades)g(est)3401
394 y(59,)8 b(43)p 3401 431 V 3435 507 a(100)3601 450
y(.)-246 522 y
SDict begin H.S end
 -246 522 a -246 522 a
SDict begin 12 H.A end
 -246 522 a -246
522 a
SDict begin [/View [/XYZ H.V]/Dest (Item.279) cvn /DEST pdfmark end
 -246 522 a 0 TeXcolorgray -141 602 a FI(3.)p 0
TeXcolorgray 43 w(Le)22 b(fait)h(que)f(la)h(bouteille)g(soit)g
(titr\351e)g(\340)e(12)i(\045)f(vol.)h(signi\002e)f(qu)n('elle)h
(contient)h(12)e(\045)g(d)n('alcool)h(pur)-5 b(.)23 b(On)e(compl\350te)
j(donc)e(un)g(tableau)h(de)-38 702 y(propor)q(tionnalit\351)c(:)p
0 TeXcolorgray 0 TeXcolorgray 1366 789 1376 4 v 1366
889 4 100 v 1419 859 a(V)-5 b(olume)19 b(\(en)f(mL\))p
2060 889 V 141 w(500)p 2399 889 V 228 w(?)p 2738 889
V 1366 892 1376 4 v 1366 991 4 100 v 1419 962 a(P)n(our)o(centage)p
2060 991 V 262 w(100)p 2399 991 V 219 w(12)p 2738 991
V 1366 995 1376 4 v -38 1119 a(La)f(bouteille)i(contient)g(500)10
b FE(\243)g FI(12)g FE(\245)g FI(100)19 b FE(\306)14
b FI(60)k(mL)g(d)n('alcool)g(pur)-5 b(.)-246 1150 y
SDict begin H.S end
 -246
1150 a -246 1150 a
SDict begin 12 H.A end
 -246 1150 a -246 1150 a
SDict begin [/View [/XYZ H.V]/Dest (Item.280) cvn /DEST pdfmark end
 -246 1150
a 0 TeXcolorgray -141 1247 a FI(4.)p 0 TeXcolorgray 43
w(On)17 b(compl\350te)i(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)
p 0 TeXcolorgray 0 TeXcolorgray 1425 1335 1258 4 v 1425
1434 4 100 v 1478 1404 a(V)-5 b(otes)p 2001 1434 V 391
w(16)12 b(161)p 2340 1434 V 127 w(8)g(892)p 2679 1434
V 1425 1437 1258 4 v 1425 1537 4 100 v 1478 1507 a(P)n(our)o(centage)p
2001 1537 V 144 w(100)p 2340 1537 V 228 w(?)p 2679 1537
V 1425 1540 1258 4 v -38 1664 a(8)c(892)i FE(\243)g FI(100)g
FE(\245)g FI(16)e(161)21 b FE(\274)14 b FI(55,)8 b(02,)20
b(donc)d(environ)h(55,02)i(\045)d(des)g(\351lecteurs)i(ont)f(vot\351)g
(pour)f(E.)h(M)o(acron.)-246 1696 y
SDict begin H.S end
 -246 1696 a -246
1696 a
SDict begin 12 H.A end
 -246 1696 a -246 1696 a
SDict begin [/View [/XYZ H.V]/Dest (Item.281) cvn /DEST pdfmark end
 -246 1696 a 0 TeXcolorgray
-141 1793 a FI(5.)p 0 TeXcolorgray 43 w(S)n(ur)g(100)g(personnes)h(de)e
(l)o('entr)o(epr)q(ise)o(,)i(il)f(y)f(a)g(56)h(hommes)o(.)-38
1907 y(25)g(\045)f(d)n('entr)o(e)h(eux)g(fument,)h(ce)e(qui)h(r)o
(epr\351sente)1566 2090 y(25)10 b FE(\243)g FI(56)g FE(\245)g
FI(100)18 b FE(\306)d FI(14)j(personnes)-38 2273 y(\(on)f(peut)i(bien)e
(s\373r)h(fair)o(e)f(un)h(tableau)g(de)f(propor)q(tionnalit\351)h(pour)
g(obtenir)g(cette)g(r\351ponse\).)-38 2387 y(C)o(onclusion)h(:)f(les)g
(hommes)h(fumeurs)g(r)o(epr\351sentent)g(14)f(\045)f(du)g(personnel)i
(de)e(l)o('entr)o(epr)q(ise)o(.)p 0 TeXcolorgray 1909
5895 a(56)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
