%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesTechno.dvi
%%CreationDate: Mon Nov 25 12:25:06 2024
%%Pages: 22
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Symbols
%%+ Fourier-Math-Letters-Italic wasy10 CMSY10 Utopia-Italic
%%+ XYATIP-Medium XYBTIP-Medium Fourier-Math-Extension fourier-orns
%%+ MSAM10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesTechno.ps
%+ CorrigesTechno.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.11.25:1325
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /trianglerightsld put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE0B8C242F6EA75
5CA2D45C688BEE3FE55AE3ACF0B696E444C8FF31EB68E7868ECB1E8069FE1F61
74267389141060BB9E7F70CC4ACE145589916E01771975AB24DFF6BC7A2AEE55
DAD15F08252EDFD92DBF9D82CD081ACF2464284F5D54A83BF518CDD4370AFF9D
077D74D8C7DCD2F7ADE2465D8DFA46EAE6ABE863D7AFBDB909A0B9A944A74D14
89DFD974588112D4CB630389A4F601F2870E6C6A01AF6C1A517F86D2C6190AFE
9B31BC892F0355E991C525AE6E8CCDE226F4902BF46D68C5DAFA90C418428EEA
7FE8502D8A61B50F46B5B91224C722E7211327F13F8133ADCE7C195BF3B07AA2
B353A44EA785E273ED52156C072485C5377874A00CE95E8CA6BF14A5D39DE3A7
ABDE2A6F2F91C5C4EAFABA29E96C569BACF9290478CFDD203BA47E66E3B89327
F2C88A313272183BFDF418D3C46EE0B1269CC8781E2CADC336A4AFAC6A910A6B
158DC42E97769D57AB2B2D70122634D5A247EE4D8672339B1D90113137D4F9B8
7901F18B38FBFF69D3FCB65A973610C405074CE3DE045C9E582DF0DC455AD6DD
65F47D33F454316DDAC452AE79C0C7596E61997B1C1F3C19B4A0FD935426EBB7
BC46BEFAE400803D67E797DBBFD885DC2D0892F936D6DF2322FBF59875757C36
37C45159BF0E1C332C69FDADB27871E711B7F00F668A0240AC9A7D179E386226
60DBAB749090871FD2316356C3CF06A91C46716827503C93150922D97E5DA774
EBD006978CBDECF5B347CCE0D73E5DEF603D68C3984D89641875C81B274C8608
360CB80F0E85619073C13E213CE2CD9638D809084927E0DA3DB454B1BED8CD3E
C75326188E2EE4CF408214A4AA87D2D24B95D35C381AA7D2DDD0EC02B2B7658D
F687C9A775D9EA3C72674A561939FD25EDEF04A2B4D3084E86BE8B45B2158D28
4F2D0E9F020D3FC6A0A62B66FF1976403B8C17B6DB619D0DF87CFC1DD1D68FAF
F1AF62A48B92A023EC0FDA8B73C48F068DC7B6146A0FF73318128ABBF13F33FF
7DCD3EBB6BD8CD9B34D5EE86C314F6EECF2F28EB74D60E31F7C6E25794CEB48A
306E9448AD569D93E0D16ACAA34C7B5AC9D031D95FA94F8161EBF018376B3906
F9886DC5470C9098E46006A8E968E2782FED1DFAA90D199868A39608735374B9
4A52913F25E79B7CE6E908496D6A7432C7F861BF53AF14B0B9CB5C10D56BC9F8
FC755012CF3167FBDC29D062680850691795079BDB9FBFF9BB3BF66D7D3031E3
1CC2B067F7F7DB21753AF1E53B757FA94068730FECEDE5088075E62D584B0DE3
E508B5599C789E817C016B307FC0DF2F4C8424F29E00856DBF740717B386EAC9
0E340AA4F24116CEB01623A4C092FCB1E6BBFFAC38DAEBDD05100D732CDB2772
E18723
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B3552F3E5FB02EC27C94DEC59320A85D8638
839E0B4A706FEE1C919E60BD887421EBA20B332314919A7DCE09D6BC9AFE8A87
AABC30C4C8E71760B8D8BFF54A92D01D56633B98C875EAE44A8E1A57FA8C4B4A
78D6DAEF11DA248A1939C377F5801511B68EC34FE531B3D50F27D872796BC5B1
A6EE6CC8E4E57B32B8C2F4F1BA4FFBBF8252F09AECDAC3A7B0BF0FB64D740B7B
50FF95786E4E2F3D63943BD9F084F1B2648E88B4B9D847024797DC8F8377930E
B0B645734348FF709A3777D21C0CC75DEF2CAA2F135AE7D0622B4A37A8442609
E5549935182284C73E5D8B037CD15B4F200BDCE328E922DFF65B3BBD5EA5D5C9
45E91A7EA9602A98D668B4CC098C8A1B48EB84088D6D105A449978AF68129DB8
FC82C4FEAF417F70F9612E9BCF0CB8912007BB7FE129E4490D4ABDE908FA203E
80D4CED4A9F446BEBD55BC05625808D316D8C6B88BCA1474166B68522597BF1C
C26EF2B5A772F241E93F83D22E0381B50FA89510078C8BC5DFD9C4796FA7438A
3546F055C70A70F9AA1E54B4AEA99E028A18F036FE6D2229D884B8D528BEC858
25505E9784F7B00BA4248BEEF3BE171BCB56C11FE175B04CB19D55ECE1206263
3A852FDB440DB2B3DE1E5987FD160563C890C123FD26625448C8BCE2D50CC8BE
53A55ACBE4C407C9AFB5722FBDC9D8724AB76515C00BAB56C7CD5A036611019A
BC3A8D7B194D57ED18B46C0401F2C0271ACF806D9EC45F0DF90C88316FCB48AF
4855E6C6A8B4F4A467C6325B8C959840CBA497F2ED5429AE3612094F48348C6A
AEFD523313A4A6CE23AA0B10EF946198A57AC0CEA9F4E532E7D09BB99B35D788
713FD948D2C386A57414BFE2C4B396D944701CB64FE3AE0F463BC0B531C04E30
66D63D9DC838585209BA92E6B7E141D48C89B347E0E5AE6E4E4185EB0CEBD749
40DD8CE71DCF6FEC89674E0685EA0AFF47C8FA4E67D56C072B661741C175B7E9
13DFE1E26D2326450221094902AE184027AD2C8D0D728A0F1102E217DCC45A85
BD249CEF2A2E58B698E6125884996A4F98DF10A379009014AF83486A34CEE46E
1FACA78CD544CAD889A95D91BED4A57FD950428EE23296F33C16CD56BB1BC8ED
72650F3A29B593BFCE9A09E2D823B3CBB368A4EE87E2A0F4B825B6775B4C626C
81862C5EB68AA7BF6988CBC4C26849ABEC190E9200584982ABB26EE6C5A0A6BA
5D72238FBA0F27765983310A3FD897A0EECED01073F0678CCD6B4990D718912B
C8E174BE6CBBE623F0524D9781A6058D0A7997CF3EA85B62067A1B787A8C1BFA
0FE99727FD5EB139A144D2BB487629A7A03902CB3A9C34234DE31E455E453418
A2CE1E130C5FC4B624A13D7DA02F61D82949491D5C9B1739D4F847FFCB0F1D6F
79DABEF5B317DABB613E8759D241C6709E48702BB9EB165921F2A9CF8CC1958D
12016161C1CCC9C3F35DB98E8D905484B4295F324F6903A9678E848283871921
7B917E9C22F58E599ED7180EFB0546A88D33651D791F5D8483ADAF674D869DF6
ED4976562546FC7811868FCB3D3D4009CDF5B022349B7B42BA4523B3F92BAC1F
56B89E2DDAE1A763A29FA1721BC7ED828C886FF7088CB8AECF44C06992639530
AADBA02AFBCA7392BD38AF74D0F58CB0F7EC02D7FE1DE620C06C95DB63F32AC2
6D3669D220535E95709D41CB0DADC64CDCDE73E69085B97D74A2910A1469478F
3B73CD51CF95D1148F3B76E75EA9A3FEBA69AC58A122216BAB65A1452E92625E
32FDAAE4E01889E245B444E6179C7DC60FDC37C7290801C9804EA23006322118
0D51A5F3948C0FE4561A01DBDE31F125CA9A8E1A500DF96D8874D0C96A1AB6BB
9FF21907BC265A0B6C7E6DD0E2252D701B1758A3230D24E02700315EA3C1F38F
F0A9D79FE440B263D9A537EE469EFC46FCBC316B6081CBD6A0D3B3F8B82FB4F3
A926EF4F9CDE56B92C5C6124A08505562835AF0135C18A59E1E7292DF4A2E45E
BF04F830B91AEFD201DD58A2809F9A06AA88B5517BEB6E62E6BEA486C924239F
E29DC595FA5949011D11B02A5EBCC56321A3F4EA849BDA7BA6985010EA9A9B3B
8E3ABF532E4D424C9ED5B009417D88BEEB9D853AFFFC7069A31D428F4288FA70
780EAB85BE54318B4D35041CBA46A6E9AD5116C6F6EFC39BB97F9196B7C5CA83
BABE929C82551596CDF2D121CCB79D8A84BFAB50FEB869CF59ADFB52B6402492
7ED395164D16CDCFF7998C68B9A8D684827B3A38F1DBC1A7F6A92296CB0504F9
11A13CAB2768A8A54DD7B9F4F827BDAF4F82FC50FE4B63175B48D7CE22ABE468
ECD5ADDBAB21243726B2ECBECB6D32A4568B8ACFDE2ED410DEC7CABD82BD7D0B
25F3FFEB3D89021D601510FE87012D7BDF64D8DA7A2EC7ED8BE1E8CD42E2C534
74539DF9CCBAA6F264F62B5267D45950A83A513556D0536B7C6632BEFE3CC967
D7B189F7AB2AB23D244FDBDF6CF368FE636659418465126559BFF85288F1BED9
0F03DC4316C0D7B9FE2BE780C770A16ED76C3348A349847AB61BB1479DEB4F6A
2008CC7E3AB92D00C9F6A8837A464AE00C70F0EBF5A645508714576B2DA46570
BECEDABDB458093AA734114AAEA4D2D904E95649E2590810988BDD6DD0043E90
AFCFD0C50C7F4E69B70F32FFE7482AB76C8ED4C41B5236E4A1373B617E06110A
53BEFCF0C3009E0720D9B0FBF331B613442B58C905DCD59980E28902380F35CB
C34545974332099CACE56BFE347A05D88620189B6E2732EBC81F6962E8CEFDB2
9906CFA911850C285135AE8678D30F3766B18DE35BCD995F104905D16150E4A8
F790B8A401AAEB94830DFB4133ED0EB3B110AD5E5ABCC46F626B4FB27CBBD8FB
DBC74AC16305389F1557F329D0F80D67D99618EFD38EDEDB1D4122C575AB22EE
DD94657D7038E55B5ACD20C3C1B5385D4C10FE88F181A9E52A6827C420A7FC6E
7DB5B40CB3617DB08E82ACDF7D3B12216B93D0B4D99B18BDCC7BAB38070717A2
5A0C43121A1801FC8944C5855E1758023B1DE929B93A0A2DA020657D72BE0838
A2C117957309A1387E31A317971EB7CC5B2DF05077261F545FEC5D73D44E566D
6302BB644776630B40A69C009C23072D074A1E88071DC18E7041925FB1974994
BA7A069CB69BE829AB36A40A0F822F9553CB7D5F455E95DDA77AB11F68C19165
706AE857959E844B9525606821CA6934AB31C29198BA47FCA90D7978ED4979FE
5A1DAFCFFF495F5CC13A41307AE53875F99FB73533A6B0A5A39B0E0A8E88D451
0A351908B219226E857F455B403F7FF21A85BE2CC7CEC11DD682B12AF7CADABD
B3E7D4B772FEB417144CDEF1010AD1084A0415C5AD7EC67CDE2EED6D3D574A2B
A104DCA24F44268DC4BD16716908507D4F570791A966E7F79E3BAFD58A546223
BC522CF3A1D6A5F695689DF57481E7F5B31E5C1FC1510660D64FE134A8307403
FCC2EE800363BE0773A8C50E65286EF4D194EDAEBA284A2740106141EEB04A35
31F7992895778CDDBF8CC5C32EB8084D6B44E4818B1F3415591FA4D27A6DEC10
EAE2BF858379B5720F9C20D8E2C2BFDC1E07BC67665F5766185F4F9A85088E4F
02D128FD8F756A744CFD1DFADF8886A0522874157228F3D6E2BBC248B2C2F496
315AD04ECEC1381D61C836F31EDEE358CC367AE1F46F9A9024949B47DF3E7E36
31228A73A807F269EF8CE919C5A396F7AA483EA284E7858F6D5153F811DD1DC7
5B726E9D7DE44D6777D90A309C51D26422533698803DFB2A1222965E2FA5A1A5
36B046B213CD9B2C10E1D94FB357637B45D1057A46F76C851F17A3260A640F55
E6619309070CC5EF7327B65AAA277FB652A01338938DE7FCA9FBAF4750861CDE
3E3D8AAB4A2B8CE676DB0E55C067F25DB921541FB869B698124165D04988965D
58DB5C3C24A9110620FFC77F70B79A51E19413476D2677CBE766FFC5849B42DB
9E915DC6DEF5691057AA2BFE5DBE018EB4041BFA239973D3E5C54FFA6D481EAB
8B7CCA4B9BE3B24AE6A4CCB1269CC87816907CEEC7B4B2B67ED4126ADFAD0B3D
C00B01624CD897AA457FBA3A994ADDC7E4BD49F4BED62AE975849408D395F785
CB0FDA43BEDED757461D7624B3EE5A864F5CB871A6339B8132DA656499186FC7
A03B593C211118DADCD837704903140681E72DE08AF7B31448EDD178E74AA9D6
382E1EEA30BE62E804EDDD045F95C4F4716519A103D0D9B5FF7657AABF1E2593
031D3A6E4C5685DB21ABFDF5F1B4A158DF3B3C743459AB3A2702D1F680589DD5
B474EFD297FF3A0E6E57FC88C63D583D1AA7FBC84786655EB950D131C7F302A2
F9C9E94ABF52DD99F281EB8BFADCFAD185B80B478DA671B0FDF9B94F09E0E126
951297AB795ECA68079BC703BA5F08E67DAF3474C8D08F4DA5D66F9EEEF258E5
0F283890E01BC025737C5BEB893542D357AE25A87821BE256AECFE7712B3B11B
3D7253A225360650BFBD8434092F51366837400D4BAD380A3729C9FF29E681CF
19262AF6A41E4834FCEE21C6D309D120FF0F0D3030BD9E3DE599AC7E7417A04C
914BD29199EB733D598F7C1ADD90503C29F78E7819E9978914CBDAC60C54AE17
B91B525F946F4E5F0DEF676C26ED1D06839FBFC5DFFF8BB0E07981D6DA729617
B1B0BB3166E27FD07FDE135418CD2E73696F7EE6A9941883962192FEA4659FE5
44E244A68E74F04288B9E2EADAED78CA6F57B93F8F773C12A8F362785757771B
7639B4216AC2992050597209F2B13BBC139E9487C11CEBE50FBA27885CAA2937
E82518CF33BBF61F0164529FBA57A3921272262F5C621FF49BD2B5ACCF7EEAD5
B0AAE65FFBA9E79C35B3CDCC0E49AE3D7453C6029FE6A9BCF8269776B6A97218
8096D55B67837FE1827B388FE9F8656FD98193FFEDAF9FE5FCB204DC95C34FB9
E7BC9FC85152371A52865C4E83479EA2651919870DAF71D9B5219029D7F6C79F
64F6AB6878C9A0CCB76532F1857247383D681759E48E3DFFF7511A3253B37B08
E03DB0B88848073CD912F06BBEAE2D30B88485FD5F1BCBAAAA7BD807BDC1497F
A3924B7B7C32C1391BA053E401E2F3A22C80B10DA76845967CFBBED547005615
DD22AFA65C10C3256903BF3C2DD396E6B0D92D75C3AA0761C5312E8784D635D3
6E883E3362DAF1605BF2978770028E3B0EE69E51684F29C40542D1D0DDF0A49E
BDFD2563EE95D933D6EA65B8E7DDBC5BA7E86AC4896D45F7B592DF2FBD00592C
2FF2A519D7B88222EBF0BF9FAF123F4F88DEF4E851C2F2033ACCE673604D21A8
2E214C8552AEE6AEF972E7B7FD99BA17F983A58538CA2C397E82CE6C2C40771F
1475B92B1E413DDEC8546A8F5A9D05350C683679B065EDD16B94477FDF68D1E1
4D14EB3338FB7CAD4516201E34966CBE7AA23D68191A29D8FC585197A4ED015C
A94E1865797B98971258A2702BD8EFB6A3523D21EFC59F9EE250AD0FE4032C77
B468EE1312C9CA770FD67B27AD952BF970FDEB48C7E1D5D9DE193599349A912F
A1E5AFEDD981899A75FE5987D365078EB2F12BBDECD2985FEDEE1B27BEC93702
0B6F50C8CB7DC9CB0006F3988ACB87F0C84F80B37A1BDA8CA065EEC0DFD78D5C
2743D2920466DA7B65F9176558D884B8D528BEC85BB4BAFC51D5C49D2D49E438
90022BA055773CA3C6D3D33355ABA6EB98CB47CF74CBC06D994B28A23580AA56
07E9B0705E9ADED33740E5C0993168D25B10C409BDF508AE91D36AB0BC30C1FE
927744CD650C8526C17A44CDD63239F48042FE9D02470FA6CD82091B6DF2AC04
7116ED7629C77CE215B0D55DDEFD5FA08B54489F9B849449A58453A140FD7B00
1C6600614244F640E90024F331FE72D5328776F8B18AE46FBDDB0AFA3575D3E1
F628D7837DE4AE387F1D4C174FA56386E5E05F56AC75CB0A6B8FE6E5178D6E02
C27139D2E01A12C7A2A96BE68483556A06CC4B9458B432E53820812A1841BE9D
41C128CE27D9AF179FD6BB63708A9D8E055E3A5130E577938F128771B2F83173
492ADF17ED86DE9A50266376F7781CDA036413905FB8E060AB87CAE5484BCA81
A23219DB29B42F8F4E2261A1B0741D04863DA14FEBA3A8181D9E4CCCB636F2FA
4550F81E73D2BA95D15B8AF7F362939BF5E2BA0A344DC4E531AD97BCD6CD33D4
7DF45A664E7852285BB1029C68539402EF4CAD1ADC11271C05A37D0D508230C1
7E595D3C5B8E6211C3F4C1B76C0CF5686C5B974F452CB2DAC4720CC128DCAB10
DB1130F5AE1117DFD3124DA727F3AD72FA86B7C18ABE243644F25B389C4B5A88
91EC6D14F3764154D0848CA4C7015BB9C4109E89E7CFD5F5C47BA0C27A8666C3
2D51271008635B74CA881353D65E3C8FEB7D7C3F1F9497CF49F2DECE0C75A70B
6E4224FE51C7D95B1107A3993AB45C3432F79AADFDE23DDFE63DA3C7CCB49105
2DDC00A5C7BCCCB1BFFCC5F579BA7BFDEC471ACB16DC882F820B0C2EF1860C28
A6960DF68C0C0BAA791BE2F9F3A9F5610B75F9E7C686D6EBA79E856FCA20931A
BF0858C1C2C5C6B21B02FF29B64C360D5E12E5800403459AB8EDB7E7F3A4977F
7DA14915258827674D0F63A3E9A857949EE410BA4F8250E227FB0D6D3B48739C
FCF066E41065DEBF00634BF670E3642F5B4038603058CEB7950098A3AFD45F22
BDE7BF32E706484DAE8979632308CE6072760DF478A7BD6CAB5EA1284D297EA2
667C1C3E750A52C0426BBE1EFE79053C69F80EFD96ECA5E7039852BE3ABBA220
217A2575A68A091B6DF2AC047116ED7629C77CE215B0D55DDEF1887362246DD5
FC0E4077566D4E73E38C7AC82B401E2EDE57B96F6DB93EBBAE2BBD03BD83B701
F2F4733024489300A2D03E4546F0351CDD45086905342281244096C45802FBE8
1B8D3532498E4A071D85D21F369B08B3A981A37A60CEA089E994C35EB8777A6A
9C8C8AEA68C2C3142FFF3FF35E8AEB458EB901367C934DB7761341EBA68AA72F
30E59575D382BE089C9D6E4B95BBC8FCC70A7C187E6C6BC46FB1259637AA8BA1
5DE5277152A924539755DBF27622E2B141D5417FF60CEBF7927D587BC35FDE66
35A453405917D47D54DA01E2EB6615E55909E236D8373A908EC4853FCE7AF13C
690ACA2DC5CBE9910F8D8CB4050C2A38EEA022C6A164A4716C534FE3DAB83C4B
0FDEC8CD522A94096B54D067FC40C6548AEA95E2FEC3DC7B4B8770D3E61EEEDA
3DFF2E9C9C04F27174DA4C87113ED4682C5BB6FD87E637298D7336ECC4A254B8
59FA6144BEC765BEACD8D6C6254EDBBF17B2B985FD54B884C3BD04169446D29A
C24146E47931D7A314294C0DA6D1B0AD44DA699160F8838BCDA72E3C70E1A084
8CF32F6904206D27C06741F0F15ADD2807D9B8A8734DC0750B3E207F9BF82373
87DF6F810850ADEDC383D7B0EB9DCE18A18413A45EB18E90215572B80D1D1D74
EE1703612D3C8C6321EBF1C5590DE5679AD5E9786AD39AE161318750243705F5
337B1E0022F4590AA853CFD684DBF7C3A6365ABB158E1DFB81AB15768C6249D7
9C68EFF801C5BA46C06744DC7C298E5E4F311F53E88750944A93FC4A56D4A62C
5C7223FE077C0237F7A3D8165EDF7E7FAC2596297F80510F9CF89D301A7C7480
ABD73C898C5F12F17BF31008C992E50F855EC09D14D8B95E970DAA2463EC7EE7
02114BABBDF2327A8FEC2A6E130AC470C8F9697B517182B1449A163902376029
0E419D8C87BC21D8029C6BCFC958A32A6C3761032C19EC40149DAEC4602A7BD8
342153922B585FF78E1E9626FC775736E6BF71C686B40457AC6E4E2626692F1C
24BF5C3A0DF3CC3E5D8C3B553BC6B7FE4860F334822902F7767E50C446FC97D7
EEBD0593AB1EA8B6BE61A0FDC9250EF1460C9DDC9D4F59324F7E892F5B7BD352
D1887CA074CA9C0F06BE3CA42A2304F46631626586CF1ABFB5DDD867CF308DA5
C9E4F23D916751060C0F577C699903F9398CF12E595E61D0934D1DFDF4349897
CED74EB5CDA16237EC903640B377E88B75B2AF2A140340326B5796ED502E687C
B0966C425D3C63E6D609EC7B4FFEA0F54332F0E87CDE96A538D34EF88E699F72
F629A3F78F02736CCE49F6EADB01104A5731D5DB2AE38F39FFDB34B2FBF5EFD9
A4DB7F6B909784E5F6E8587F1507E3A993D84A59855F563D8D2AAC313A09E284
BBE73FE7D7B56F31806FBC04AE2F0CB74E8ADB339C55B867A9A3CFD6F50E29CD
F61893BFDA2F53FB41FBD26118E0B79008CA1FD50BB9E672C7D9989BED508216
3E90A5512C4E6D2E99F731941AC88B371D710ED9C7FDD83DFEC430008AFF0EA6
0A174A2AD02BF31F00311A53F09AD95BCB4F3D0E2892B6CCE29C06927FB2D5F5
4CBEA7300DABFD38FE3A3B946D89854475AB2FB9650D74E4D890C928C6E4A1C8
F097D8DCDA6E1185F1632762399A791BC5C8B9E87A2F859299581818B2EA8531
C0E0DA8E3519DEDBBD1612ADB1AFAAAB8CF80640266B30248A467785F3451295
C4A24CA845F6ED77062ABE60347AC6CBA41C80C74817CDD0DA3480DDA636A517
245FD0EDAC118698062E01EF103F0F3A1F44A90E1D73A36DF4911E1CBC90CB0C
CC194500714864D7A5B0B74FDD47BD4F4E78C7AD0D07A2A7F2F20819023A4D22
C704AE988F339E3F3D8697DDFEB78DFB7464C36D1DF8730FE01EBAF6D30DC74A
F154F5DBF6C9B309FDD6A4009513E5964F13FB81D403010A8DBB6D4CA24C6DEB
68E7F2EFFBF0ECDAFF4B8208EBCD444A348D084EFAF64BA95B485B8379A819C0
4E9131DAA0822D38E9DB26045D9BE9945AF997C4470EA4CFD3CD5D5C612529C9
B9A1C8C7BAF1DB14917EF4F739BFCDF6DCC8FD3D80DFD3B6058CA1BF910A6C88
44AC42050B0B67377C3A9AC38295C4538ADF77E93B45A5436D584A5E314F053C
ECAF311C509E8857280111FAC80608EEE83C630D01C326D8C4934D7EAC75FB12
385CCF2BA660E7D1D19F57CDA952D24E557DE5B9A6646B1336F6642FE68212EE
33C5FF3CB9D3C40BF6FD12A7960E55EDB1A65CC0FF846CA5E7CE474F62E7377C
CDCF829EEA57EEAB1E701E46FE8C89B2D0A18D5B704F2A749726AB74C6B98994
0FE2EEE8BE488121CB4175ECA5BCA8F100D059D1F7378FB06BC61E8A79DCC0A4
31FF208470A3423ADD23FBC8F7ABE770F5BD477C276F0513B863481582AF4DD3
4A5765E2BB95D447B5C29FC463EE30EF460673E831E8E67BA36A68B361B95866
53ABD2E2DBD204C1C33560DA4674BD9F4806454E2AF44F244D29C35B9AA47327
0C8BBB23AB548C2BE9DD2ACD3D3B5821999879C1BDB510C1E17BF86E72691F99
F94F5F3FF6CF4B659DBABB4AF07C4B1328C68A9B74E29C120A3AA6D821D7BC66
6B1C666FF18886D8FA3B44E13C87B57AF9F5B6D7B565E8C57F2C0398FCD4A1B2
B1275EFFE5BE1B98B337A2A3C4B2EDC83A4B00F9C86664FBE221337EE881EA15
B90E11CF3D1AF832B30300EB1BE83994FADFCE37776690F231B6A0FC125B7C3D
623D402CFF11380D2A8D81A5A4AA2511A144AB2DABD2EAB10CB75FA9CFF325F1
52D37658B4CE6781A6B1EAB7F53F6C106FE7784BE7FDC218CF1D6A1A2643C786
A79B91A966098094F7AA66DE31AF19BF6E34E5623D6B14A8022F283684553CD0
487E99CA61768FFDE14CCE3914F3030CE1117D5D6511B45011B55D421049691D
99B3BED6635C7ABD2363DBCEA0915F84FA6D39661BA68683C519B99EDBB0BCAF
37821296D0E24CF757583A65C060DBBD6287A17A642C20EFE90F8148640C5A98
8F6C421EE63729792E700191C5F3C4FCD8089BA008A66AEA90EA8173E8911520
DA6254084481F020B2EFB073723135743E57675A6BE90BEEA52DCE5A90D63624
094F008B156E60D5216D0C69FFC9FA63FAF5EA0049B9C5DBB806EB6A982AC267
2081505B449F768AAD9114DA347B3F365E4653C81C9B13D8FCF2BDFCF4DF69A3
58753BAD7A43FD14E058D6557BE0E46D69A9E54D926ED9CBC76F7757AB5CAA71
F14EAE523B8347CB02CEF4493C70F74968938AC1E37A2C3DE3B8E15790C51629
BEC4CAA1662353BD71CDC25BB14A17077B1C1000827311218C6ED5CAD31482A1
A0BE0F3EC947A5ABCECCF8988465C50F025D41549859743644ACF028E491BDEA
8F0435719F5FD4F029B26AE04CDE3FC303EAE11BC25177DCDBDEE5A1491C7001
E6FC7B01708F37373BBAD856A96FC439B48B048C91769B596F1D415230B18CD9
6E78C7FD9234C2AD1E1BBB096BB3CE45B84E4E72DE9F96724448C27480B75CFE
EC13CEED24691350F170ACB61F6440CFB01A91C455E6D0492964454AEDA43798
D601F5A9081514431F7181763B5FE6935BBD863AD0FC336ED2259395F9FCF7BC
DAD880B81188909CB01E395487352B2D9ACD3BFA829AFB883539D2231EB02312
C28D40DB0DAFC987679E354989D7F401D80161A57CC2F8A628544D35D22FCAE0
36CC54A6BBBD15FA447AA0EAD8C8110BFCAA9BDA04F50F8F8653F23976BE2F32
4BA6C0CAE10E815044D1B3BDDCCD553560CB14A3406A359C9C2616E842A64966
9596AA9EE8E35D31600ED61F48925A093F0A5972106CDB0FE8CCAE9DCA6AC07A
169BA82F34980422DA618CBFF2B1E990D07CD32154A68B09CE0182AE9D09077C
DA1C8E407DCBE6C85D7FBB616CEA7C849806360C169949FB7F045F7FBCA8774D
C7626439A66EAB348A1C9EBAC286E7E6B9FA2D66D597B3F045D99ECED8652D97
41E8BD30C459DA6054436BB19679B165C2C163CD6FFF2ABFFDB0B2B77839D60C
C4CC073193011FC6EAF9C4CACAFB8F5119098C9E2A518E780043AA9B0193A82C
07F23425B9530E28C9BFE284E153FFFCF70255543A23A93388420623DD3B2F19
987EEF3510E5677F89357324B3FD9B36DEA2BCE9E7785FECEB16DEBEC297A495
70467609A7BF7CA0BBC3F18EE51D45C42B8D0CCA9F8DB5E4EFAA4AAB3EC8A0C1
9B7FF80F2008843DADB63F2B6EB794B4B0AC808A7AB1016C46ED173F8C4EEDFD
956368BCCBA1E777C86E198C357F911C7F03FED02D4A69DB7EE1DC4DE7BA6149
2EF21A7E6F7871C6BBAA69940548F47A4FC86EAB10AB785BCC36AA8680D1C4B1
7A836C2C0623AAC9C7FB106DF366196C921BA7EE782C2ED6A762D80328B1BA1B
799E586BD33211A89B15B6C452EE90D2B3897F22CA8FA7DEA188BB6D3C2A4165
4DCB390717561BFA7A13946A26E037B334982DC3DBCF6FCC89A4AD2126F989E4
97AFE37206B39DF0F8E92B886C2F625CA6C4DC9923CD1E30C7C7FCE482ADFE01
8899621A04D732F7D17232AD234AE44563320D69D94BE22F06062A929AC8B693
0AE574EF0D3C96BFF90324CB5C7B8C15724B40A571182C3922BA1DA3DF29C6A0
A1D1822D1FACD4A36632A3FF9E823541A1A659336F04EC8914D92378CD112BC4
2BF109FB34C3F8153BE9B7C58D0F3E8A04A6D73FEA2F8D923A4F2379E35E5E59
9B4730F175B7BF9B3050113FD4F7093BC939CEC63F73F15AAC882CDFC01EE367
B055AF4E12C54B93CA1BC9010792B70AE878B9FC956B637291939F10C0469685
3222DB7EF51DCACFFC8CFC5347D7945ADDCF38958AC09BD39AA56A2A3417D061
00A30017EB57AAE482A9E5C31E8C884A1A3DE41FA513584F10DD7C5C52CD04D3
14DDD5039F54A66E31B2EF14363972D80C79D27775BAC4F68D0857A6AB7F07B7
B3468425A67D5D3BB0FB2FCB702581DCC24EA63876BB341CB325897C7B7D71DA
6A2E6EDA1E127CE05B5C3A664C21F0C836662EE7265BAF995088EFAC64DEC5A8
F7D17A37BCD1227FFC8192C4C7FF1248144E853574DA3E5C3628887FD095776A
7DDBDA18159F64A34BF2F6077DE4BFFF8111EF339F666978BF1ED60493DF79CC
3F8EC7646E5C67DAE2E33476825F0AD1BBE9B5D0E40E660ACB167CF17B97FD59
B0CC335F16E85DCC256B4D76A22280E7032205BFB45CDE8FBF02B9D02C567010
49112EB3C577601BA13591FA20CBC93E444581B8E8896701588EFDA50240D281
7E0C86DEC30F16F40BCF48380A14A4738FA9B9F3F6E65B54533C23F5FA260974
EC85DFCB13CBB652CC009A1873ECA54288755D73062C5D70FECAEEE86DAE4C80
E5607CEFC2A101FA5E094864E25D63AB008AAC32B7F65A47E87687656CBDEF4A
A7FC3F3564B6E93FEDC8E5A1260E01E27D921618B8359714C13C0DC3782E1F34
BCD6CF9EA391EAFE4402700B4106B636DF3633A6E33C3E6D75D5EF62806D4D14
82CB8C675E7E2300FE4526D85A93AE6B7A0363EF07C4D001B7C8D3186A77BF1C
D010C09BAAD2D6B3939BD2FC2E5825F6F95BAD659921A1CCD35FD989AF7DA2F0
9CCBA98F8EB9BD161B4F8868FE10E8C2B538AF1F7A2F407C2E93D88DC856FEDB
B97EF7CE5463049488C39AB11CF966EF33B756FBBE7178026BEB8E20BAADB072
25AC24DC87551EB53EAE1CFD8A6B5C7C35AECC236573685EC7C1DEB88CA58CF8
150494A7C6D2F35143854FCE7C188A7281E16316316B440F18EBFEE3704C3F31
2480BB1196821321444A93455703C99DA6F8F0EB450C30B88C595FD1D888F575
035689A92A75C8BF4D57042C6FD5D8F83C47211D6180CB5FBEDA55537A2A31CB
A1DAE3AE3556F08AEC3DBCABF4856D1319C3784DE1380429D80F757213FED3D8
71DA5B156E3C56B37733509CB711FFC8F3D23CEAB8165BEC5D477B0BBF25A43E
B1ECD78C0AA2474121239512571B106899A169B0DB6D196B43A07955AC5F20BD
7B15EC3B293EDB2ED4F11EC8DC10CFEEAD3C4810D1C3524F6F89EC269576AB3C
EF0442C5FEB387AF7BD121A104D906B39AA95AC7457B48A70ADBE08C751337C6
E11AE6DA0CE7CF5BB36C04ED487378AAE600EF8AFA58B71F59914ED9676FA1BF
A7A65FDF6E5C164375C62E772926B55E7F75E7F95A703FDE63DF174AB21287DD
FF1ACB5E462E1890389DB9BA1D62D2805591631E81969909FC25C307EDBFF4A6
CDBEE9EFF00404DC52B356EEE51DCD31136A5EDF9192A45E083C382D189EEB72
95A14EED74348E81463DEF3D2A9450C73598297E004A8AD12432384F393A7FDB
3913E305506F3537FAB128E390A38D589E2F605F454F06D9E6E25048920C2EF9
7EC75B289FDE9B405E97EDA7F1A25BB7E76F2E0A8B5DE633011971BED4817D1E
4801D8B181EE290A3260ED0231F730BC1C5EB00D78F8C967FDC944713AE77801
FCD5B367227DC62EEBD441FAE4EF657EFE4E4A945B0E40A750069E7B2B8CFCC9
540DD19C3530F7A59BB3D21C98D98A7AD77DFCEAE3B21FD6D24C8B0D4C8DB489
5F1F95D5F181CDD605A5D7F22560324C9A3A01510FDBF77FF826E2C47E916C77
2925F520920702B399EACDAE38C98C41C8DB347793F57AB8AA50C339D273A6F8
5D8CF4B3562A19716D2678A1541273175A7AB2F07EE0298F80902D1E9BD62D64
E4B97CA0147B6EFB4D056E828DDF60DA67EEAB671F9D176A8DEECC7A54CBCD1F
B81B8961F03AC8D68C3A8E77E0CF7849612AEA757EE64FE2DAD4DAAF16A67529
54063EE227BBEF1F3347E99679413D47F116AD1971BABC988A283E33284B47E2
3EF3BD6E9EBC195C0FB9CF45AB9E4CF7B3F00C2538B495E9C36ED5FA70232686
F9519B51C70AA85DD6FE3D75CC0FACA3270A052C902FEA061D2112C90C0CBD9E
688D43848B2B72103F94129A33B8C3DB4D8D7B1A7F73C4E38ABDB2790F119239
5ECCCFDB2247261325E8EF1BFF1C0B7B16777C5EF7187BB1EC475DB71B0C17FA
31EB900AE8222D6EB778060F371E6B31A15CF8D8AC0DD6A33A02721DE359EB1E
423F7F1A77DF0E876884F3C534FA14A59A1FD464A4D1728151BBFCE2419E2284
8162CF3A8526D6DE7B67998A0A2D27A6D35697837D7692AF27221592104309CF
C79629AD44F3B5F305D3805B43C1707E436341B87F1659BC540B960A8440A5CA
9F7E57B76F945703BF76023073B5C62BD779D9E64F1AFA610DF881FD1E1387F9
ECA0E6995F5C6917E4DB76302AE79D5DE2CB22B12618FCE9D05A480279B173CE
0D50285E125D6388D070C1C5F48B19364D0AD448731F49E11DC10DE091BAB63A
F35424EC63D09251243053215D837B6A2D09BBB0ABCE0111660DE4D0AFC8A33D
58A9894CFFBA0BA92664677BC0C896F6A4A870C437B55086E8EBDAB73F6FBE35
26A7969881EA6FDE670FD5FB7024000E2C1100493672DE6C66D1913EFCD03DB8
6F9AC891DCAE6A94C6EAF95C3E1C0D52E1D70678D108E4C7C8176E5C10CA4129
8001FB39B6FC699FE091EAEB985B2CBC9E887937FF2C7B49D501CAA5B8663CD4
73541AF15175E63A90A64867533A281C3B9CA44E48162ABED4300E050A5AFF61
7F45DE382180E0443EDA6DE8331344F1A61357B95658A2D2145BE0125AE787BC
75F7588FCAC391B29C34956B7CD2674BED3985A894AF33DDB8DCDDCE95A0FED7
C3FB5B3299367D032AECD6DC51C39A7D9DE388F44F0E90E79032D5E1121B97B3
84F619D1503D31F6FA30DFE295BEB8295C7A9E9B6E5DAC7A0324909EC1672902
C0442A79ADABA659974DFBF9811F18290D9853BD737AED3D1166327F296E625F
24DBD3D8AE99D93152F45B98921D9D329CB7845F291604B9F7FA87614FFB73BC
126CAEBF6D83F0DAD193354ED2623785D1D38AE939D233F18EB23E195592ED54
BB7E043D58D97A5B9ABE3726A7022E1CABD5189ADB62BA337112BBE55E3ABA6F
6F7FC49F786AAE41BBB28A710D773A32E966697C29A67200DF8B6B3D5F86F05A
45B1595F2CE6395C14ACD40CE327E311A169FE7E86B5E347F8D13222CC3645E9
4D42956C39B1B16BAFBD57FF6D08F61C9DE13DB247EC9FD987828C00A63401C9
6E862231108250B5F4DF793587852B69ABB505DB584857687C00BB2C95BA06A1
2E470B34E1A80F954144B3EE2167582764A79324BA831788DA9EA9794BB6905F
F7B17EEDFF3BB68D91BD5C8C1B3BDE6F6EA39F70207CB22CD7D371E08541CA18
5C2BE6F6BC36D9FB3D040BD03FE5D7AA1D92AFC4FC7D5AEB44961F4FB38000D3
93B13457E9583F9812B5C8E9E6F3D328F8692924F5ACEF389553636C97658879
24B28B3C2278E829D3358D48142B265CBD50A2263F93712FBB26487C13908CA5
AF9437D6B92B4433B8C99CF48958E4E61BFC22D86C6E7E21859EBC075DBB1923
C67DEF2943F93D1EE671B6BE8A3250B0550CB0DE9F99A91B60E7A00DF7549275
11F97603748D64A99A47C0B3C05751801A270F057C288CCD7B6299909E724A91
5E22117072256D7CFFBBB484AECC1B4F5C3F46E4AE3DC7F4020D71C1703B93AB
6A24494DC237B1D2BE7A8D5268DD7B41DF8BA4B662B6C6718446BE2CAEAEF56D
44CD0DF080D7D4C960400C2D11A17914D4D15CEDD73C3B5D5D7DAEF3986D455D
6388E33C0E37286CBEF3CD1FD1253E1F37CC1D8BFEB0A061D5F4FC1BDE9CB2E5
F65EA3336B0C7009C3933F1BD36ED71F593A04CB7959E437394FA5508EC4D6FF
D2A1751C40FB66573A5E9DB59361669994B74C3FC09DD9735668175FA8BF2514
CF93D104B447AFD299597E970F95A2A67F6CDE53D4A4D457EA3A9F19EF02C156
3A7B1A7FCE3E5982936B54E581E3A4C2C79C089F94B8EE0B5FAC6C9C806CDAEC
4F8889C1870484AF9672FA7FC96AC8D09947DE3D2583839EDC53211C1F69A67E
56E39365CA9C50FA653B526E33E19175F85DF6AD61BA145C4DD3B682C3C75A9A
333F069794FB78D2B86600D38BED1DD0EB5D5B06523833CCECBF59C1D7BE29FF
BABBD31803AD8EB967B5B5BD744133A685534D2422F094674B1E1F67983FF4E4
69DC9BA779353B32E969729A2AB5B54FB473EB17BC669708DE080EE570F4668E
D20658E4381046687689579DE051CD6A13A4DF8F5C1BD76366514B9BCF0EF3BD
31EBDE50671634A0D2B91B013B82B78ED2292CDA3912557C8F76259A21AFDE35
3072F975C7FC6B75B14AAB328EA25E6EB8F21CBBE5F921F7F38367987D742F7B
7617D29C33E0333BCB2C79723117B8B72D269747AF9D3D78280E2BE12F1843CA
FC6AEBC8664862CB96614C6E630F67E5834B3A1051709F8A3940B76286C2FB30
ACFF7B176D487F1C45A064AFCF60B6C7F481DB6D8C556142DF5C13382E01EECE
7A7C46A364BF02A221BF9BF326CC7C1D831A50BC8CAEC937EE2AC851A56DB332
8EE4D12318D8F972DCEE4E3636F2106557AE37B80241939379094D1685F80256
56290530BE748EB919BB446AB214F1555C1D839E647FB6C6F1B2C1252019BE9E
8C67E60600DCF0167D1879941275A517D124B8F322EECF3EE8BBBB75178B6F7F
F9ACC9B16CFC950C781E94846A134EBA919C74C72450B4366B3C4C58A33B0366
00B3C51EA21EB995750285BF0972BB2E013B603937903A5FEDC873B89277A563
1CF36DE7E623D41170936D9EBF046466D80BAEB18DFEC21854E439BD75E09435
743A14D440477694A29C65A9324ACB1DE5D68B0F84C178D66F342D47FC565973
302AA443DF7A4A1260D40F824897E150462BD2BDEDF17E42DB35982E10AC617A
9FA1B4BD71062F84803755547A4BD054BB31D792A59042BBB6F86573ABFF5329
38CFFD9EF0368A0601DD58D8B76C265EF85F1A7EC1664F66C02EA96D123BFD54
85F7DA114F6A958724D393B1BE0FA62EAD0D51E0FB653B34EB4CC4D97D2A3BAA
7F8E0F85700DE11E6A13BF01F4E3AB9A5BF02727F74D2C9145CE7CEC97FCEDAA
8D4449DEBDA93D3A13447A75EE8E350DADFAD30FE4F99FE67FC5215F0BD9BF39
0C5DCA1EB7CE171314CF1A92DF48FC4EA2069252AD407F5BF6B5E63F0FF1D25C
EEDCE181FFC12C3C19F9A78A90A1DC01A6D7A05D5C72669BCBF35B3E203C8104
DE394B6E089351928B4BE4C3528EBFAF09A792E8F6603FE4ABC50028949E3AFC
78CCB0E0BA0862859607910E1CAFE88629810915D806CC3896FA1001A9E27999
283406D7B9E2C772F02C32DC5606EF69C337D2223FC81A833AD11234E95E2914
FB52182DD243F9F2A4A45F46DBA08F45625D11ABBE782F2C19A1D16988C45E2A
DB31C2CCAB9E30BD3894A60EA5812A61C5E8624F410071958C1C2A082D1D7ADF
39DAC3A0CB3B752230948BD43B5F61F8697AC3223A76204A32EE60F62BDC9AF4
1A7DADF05F604EEE7EAB14BCE368925ECB7EA207EF9D6F09B11D9DAA47C1C805
F2EB1ACDC23E44F3F0BF67EEB64340EBCF7274B577DF1DC6211114CD51BC280E
B0B5B86060D4A5EFD0144871E89CA520182171D931399D7637191BD08A76D58A
C751E3AD01C3FAF3220EC502D6E2F6E827C53E6E352C78237C64A25886BCB709
2A3D2875B9C6D7DE391523F03869678CCC69F812E2BCF804B0DB4860E8125771
B55B0E3E7F501702DE68C307D16495B9F34A77D812A3D877559C4C1089203814
143AEE294A94BF15C50F9B3ED591EE8247330E1F38F4DB836F99AF7233C57DA1
A8E46007297C2C8F827F1CA4218AB3CDC32160CD51BDC50A109B30F1FB309ECA
66D7E45CF472C0B9F77A39F8B87FEACE44416AED403D7E00DC24BE386487D7B2
11BBE6BA1670372F3AEC4818DD0A5F32799AC34C55A98640C2A4A8605432611D
6D5237AEA6DC999A2DBE4825C09C3AE32FE122B161905CD2663B91038517EBA6
AECFCAEC23381B4BE322EA482DC62A5BE927F58B022E4220688BAACF5888F05A
2FE04B0C86B8B387FE6264D237A5B29E4C2154DFABD885383A953E054C357630
DC9C23165C7973F227054F9F64EF8196F72980F8E67A84941654D87338039FF7
B4B556D09379056AA5D257BD30DAD9337B3B1343AF893ADC5C3F091EE2FD693C
F39DA35065C55D1A2DDADCB4E1575140044C8E75491811C87210902E1DC829CB
B6616C2287BA3936B47019C99C32BD115C3A7146B2E87CCF11518E6DA3E0D60A
05262850F0A67C14441E5CBFA7E7CF90904D3CA81C742679FD9C3815BA81229C
D0D9824D70BDED7C5AF1B28410FA84685B671CA3628546EF165F666644D72A9A
F617D7A2514FA5A89AE1702BB1B47105A0DE6E90AD203770699863AAC533DB2D
D4D7AE6EF3A694A9A11EA9F7DA68FAFE913741A6A213DA40374AD7BBDA692F9A
FBFA30A576C2E1FE7A9B689A899394EF4FE029ECDBB667473C9A68FB2D26B641
618447148DF5D30701F8B494795D24E55EC76ACDC9788E70CB395C4FDF12ABA2
CA14AE4EB749308B252C2765BB7281EEE3E796B760C784DEB56F624CC6431A42
F5BF9D6D7F72FF6AA672D54E12B70F6850FE8611EF2278CEE4C7266DFE02FF08
33133B07D08B85A7B5BAC2B8B61FCBACFCC5A3D3190ED1DD450E70DDB2F1906B
27D015D1A2406A2D6976770C696E1D0AC1703CCF0FF2F5230B1648FBCAA03001
16B016BA6A915FD53D27405232D9C8B4D56812A680A9087A255BA0D27C5EDE54
FD5499E1ACD92654874580942EC282734D512EFFA6AA79D4A73833480C57E020
06DA6ACF06B7E7223787895E37A85FE76FE85D88CB29BEE3B3C73FB04E6C342E
40835F395716E5143B0FA6A53E52E37FCF876563ADF52E21D102BB5B62ED34C6
0B44E369B782CAF4D35E660EB8D20CCCCE0AB53EB0C3685C1C0BF4BD54D073F0
BA881B86D62332427191317E8725C994C17D7AB148F3BD0FAA6498079E1A6D56
F638DF59B2BD8CF57BAEABAF8F4D6B64F6D2CED68030DFA57EC4532826924544
DDE50D7A2F91325FF4A534AD0CC63C4305A75E4835CFDEBE5C6C68EDB5731BF7
1EC03C3624389999D4B2A2292DF77AC06A865BF2A4E1B8D91299AABEBAB801C7
2790584FC9436FD310DFE74152455179631DA5F209D4166E758E24401AC3BA13
93BCD4E6CD7108FA8C31688ED94B63204633DC4B9AC979143A33885DDAE81D2D
3B9D1074F5FDD4DDF9ED090A992AF5744769E0951F9C1D495DC57357C8661683
3488CFDBE24127A25BD1D8A7781E99F12E7116CEA980BEAA5E7A0110B90B577D
2C78707835DF5EE784A4F0D267E3DBA524F345596C64945525AACADF1284E93F
DB7D76900CD121773A10471BE69B90F2CA68EAFA4F150ADF35C0F2702CBB9A58
F6200E7BB172E9E82DBEB71FD7CB461EB08ED8D2D1ECC67F1810C647740D00E8
E41A1D7262EA343098B262253A4E06F219DEB2781CB9EF256C25BEA2F9434290
60034A8D648ADA54DD34F2C53F124A2A71717113FFBA629E47F7EB1CECB2B023
C99510D7124DDF98F332AAB61D9C7BC7DA26EB486BAF7DEFD974B47C7ADB218F
4DCBFA958059ADA3D77B3673C16AEAD93CBDB954FE99E0E5168C8D75759100E6
BDC0A3005C71FF31773F1CD3E1210C0D9EB6FAF47D90D9551C0953D4841F012D
E4071A2EF0A2A3376B377A65707B8D1B0E3130E271905C3F1BE4DEB2CF426BD7
46023CB1A9C95F0A8787A6BB2EE33AEEB51A491A3734F1BFF4C6ABEDC03D48EA
449B79D786E0948EADFFCA7C6D782CE561D275728466DE7E386503401EE87BB2
1EFCBE70BB23CAD992832A23D3526BA7587F6A76524B7C7E9DEBCA1292420D2F
8CDAD7F01EFD33BA71287BA2CAE6F7625A2DC5A10CE6DBB78CA1D8C959EE1BF5
9DDCF78F1C3D9079A07626410AAD104FA00A15E74F879FED39C7C994934FAA3D
2A2B63ED5938561F253FEB82C80DA61FE0EC38C00070CE51AAF375D5C2F2EDEF
6572AA14D2307D4E890A020231B25235E2391DA9FBA9242809AA673691AC5950
A31EFBAB112C1122AB30F4A859FF6D9287DDC10452E62A0FF1AE3FFB265BFCB0
132E19BB4F6D0F55472EBC446634486DF5933E87EA761CCC5887A70768646AF0
EDB5769BA5F27C552F9306974D4135B7EA1F83B818DE1B562DCD4FBCC939F9C7
4118B7ECEF1F76C683BA8A5B61295CA8388A99E5EFE3D698CA548013D63CCA41
A22C836C6483AA6C68EBDA687BFE2C253AC5EE99001E6B0C62D743BB34A9A07D
9F08AF514D36BB919CA8C16E5004F935FCBA82B525D72CE88443C4C8C57D7F1C
CB752CED212B3F9749421D5F6F8CEC3021C870CD842C286B0E47AE452A561CDA
A50C38B42DFBEDC7E0CCF966589889066662EBC09C973E3A1C62D06DA30B0501
5A79630F9BD5C6474A6BBF230F6C66B7540A14E930A10A1886877E9EB99FC0F9
2B7FCEF8EB0855C37C6C5E5C7953661FDFE0A13C14AE10480BA5918EC982DDA1
30426F4A336403E539148AED54FB1F26103172E0118ADED0D14C77015C30B7D2
396B50D7AB7EB86FD4A3C360EF83954036C9507F3F7C8222B23D96031A6079FF
2627C257D7F8D9926E9FE0BF25D8F17B7623C62CE6B08D30434E2C16817F55B2
A32042CB8EC377674C49759CFA939D53CDCE3FDA26CA86EF951D4A756C7E29A8
654FB0A48A7AC902303552804778062ACE9A37E45A382FB7CBA6DF184ED75153
31CBF7D2337AD8E69432A776CAF7FAA59D90EBE0233E678795E22A2A2DE52101
141B684577627E70C90C4A9ED1197450E54C8406306F14796A27EF4CDAD19EF3
E0A8432AC6734978EB32A1AF2E7879D1615430D9544C27A41ED30B1547E397AF
5464D60EF2D8C6246F63C786C3FA4EFD4624540688F993F6BAE22B68E0EECA78
69ED721A8555FAB3B4571E8A1A4CE777F4EF7E77C40CD2182B232027D81423EE
4051E764A913FEE31701AE3F2D456F1FA0BC1CFFC243BF5D4BAA4DC2EC5ACE4B
93650AD57A21742FD742A339D5F8ED54548275BE7EE32038EC6319CDCDC5BE7C
80B9C7A9FC6B6BA97BB247FD9A2BEE1AC1693D017B4A03AE989DA385DC208D16
C70DDF757EE7F82AF028DFEAC06D32EBE43E0EF02783FD98FB32243FAEB9DBC4
4BD9B9F27814E9F9E65718801645C9D5E3CCEE511723AA0C6C0887CDC6358769
11BE62069417E5F5F113BD774AA211917AEF04882735861141F6A457247C60F2
863F24E3ED791959D770EDD829A71AC713E75CAD22F64B5262710FC602EC6379
587CE14F90FCDFB30DFCE3E831FAB556CF12FF50CC48B5EF9AA90B3A661CE09F
F36CC449503531D9E2C407661B9ECC6208BFEE07A127FC31B4F9D7A3B7A3D81C
DD37CB67174614A13F7757C32B01C4D44A2C9737FA868C78E573DD8FEEFFB8D7
B5EEF40B5C38935478255B9291268751F881ECFAAEC8B62F9EC6E9AAD25A26C9
185BE5CCBB94A34049F1CE78C1165BA7BCC4B9371E22332CB4CCD2475BFED912
887B7FE5EB4887A222697C3053F2A4A16F33A3666189FFD7C795C55DFF09E545
436695C274BC162B134D6C610B384DE8EFEE3B7D47871F22824B30178243D6F7
CCF2773350F03F87A6C965336BC5F05FC9E92C46D9266CD63AA64A42C95CA4FB
757CE871AF94CC69DA251219063610388615566C47D5D9E105DF3D87870278E6
52CF6FEBD9B59BB4BEF66712E2F0669C33912543C68711576F4E28536E9BDC88
21BC289D7BFF5C030BD7957FC577199F4038AAA718FD1A99CC8A24D018FB29CF
B5AB7A764DE20C6A588BCB74F07E31D2114AD5ADA7C2C34812A2DA6D8AAF97F1
BDCEB59D5B94ABB4E43A5FB27E604F904E870E2C2B48762E2B9374DB4320704E
E497DBE5A8D94E6092DA61CE465F0032D54DC901077A7A2D0619A4116F88A39F
F929620828E75DCCDCC97DE99A882797D22E217F8832E8CA3586234754055E32
2861C0812211F7940E74E2CC8C1450DF37BA3F4A1ACD60DA26CDF7E5031CA17D
5DA718B09DAEFD662583A26A852B12FF347D81BA8154D2687B970A4C0C807B25
90A90046A83FB6FBC9622B0972DA4F8E7D1734650311B538AEA2548CD12EEB64
5116A3C1341559146DC3972D43D8BE2E0BC5EC333A4C758DDA86F9B253F37547
2908F6F1A08EE7BC34316B40F2F4A13385106CAB61FE13221BD41B58FFB4D38F
872EF7E032A80DAD80183D3F3412B062C13E5E56CA95D54BC55F0663151C0176
7C8E6231DAB46959219B4C1D46E37461BAA71F86FA7E70079CE6061334E4B8B1
3127044B4781C6C7FECD4D9F97635C407559B64467ADC135310F0F952CB92B3C
00C6F587F1A040D731381E5201AADF808054F66D28BD3532EC62EB6661F3576F
8BA9EC0FDC92724FA3FC753AB3DBE7D49B9C41AAB1328C8BB2C9521DCA8C6E07
7EFF4E5A95FF52BD4CE8BCCD2E50ED1372FDD9BDA39C2FFEA30570893EEA00E4
CC0ABC503FF04EE1C3DC57DBF62787B449D31B7D5E008175812908CE2D2681D3
BE8EA6C7AA03D469894E73E936F864A4F17AD0784CACA718B14695957DC11D6D
A7C90BC5D53AFE2B877406D6B0F5268382AA1F6C5F589FE638B1329DB8A49DCD
B690290A9B1C3FDDCBF898D621537BCF70CD28DA83F70752766F68C43F546536
3B87BF2E0947BD2446F2CEB654460ECCDBE81D785B440531CE6D550C707FCBB0
BE1594800C53F29CC500F964EEA17C929EA9FE3D5054A060D339A187A456CF9B
097657E4B00851260DDDD062C86394A0B3679F81C41B7DEDD3191ED98CDAA0F8
56D480E505CEFC142DC5434B84D2A9AF50C76B76FC5F0944DAEE1F278C09EC82
A9145C40E3F132564C5ED6AF31FAB6D7D151754228927F857FE71833F3788736
4E0A07A0F4CF5EFBA05B2DB2E42D8323A9843E5A9938474EE6E6867F7DEF0D64
8C9B0D54AF6E6B9621F5F3D1FBF8F7ACA3AFEEC464CCCEDD1A671744C64365CA
6ED50608A12B4977C073F2949533FD40789C1574F7395C267F2688950BE467B2
96923D6E6196D963A895B67E538EECC429C74E81BA4A8B39D1D489192404BD01
A30C75B0E1644F763F48F2C083059CC6AA86781FE6AB7908017767190C9910F0
63059C6C0536A5368724410BCAF3D517AA43E94AEB1CC19F6DF7E4D0F2D7D026
CE09144BF940E8617CCCA090304E28C4456974F3F85D27F5102EC0D005D6AC6B
4E082367529F4D28F3089B2FE8EF7F9AE540A8E22E3E8717BC0DF3056C458D11
C91DA227A9BAC745D4D064ED3C106F80E3AD7EF629C01F63E2B4AF9AF0331425
94E7238A9A32B70AF4E036891947C8819B381CD3B946562B09381DCE5FA009F8
AC38400689BD396996DE0FAA50264CAD0E61CED547729B4DE82F2586DB26555F
187D16BC0A7C0AF9B313EACAB795BB218BA0EADF233217AB78B7084C3ED12C78
DE4A6369A47198FB3B2436C7E89AA70BDA02053A5793E88A383987ADA7D4F7D9
3294030DCCBB0CBA48AE5CE5E9B88E0785EB2B435075E59A42723E6B57FF92EE
26972DCCE88ABAAD0E298065F2DDB1974B2844AD7AA8889C458A69ACDEE8A4BA
563BA13DA3F115F2C8E7BCA1981B5E2633E8F8F4999AE210590F54B6D4200A65
0CFC46308F7C2DC59C5AFB617FC3A31690E4ED4AADC98AFFD32234C3AA1B5919
14AD5FB7EF6E07F12AD1C87C71F4426825F41DB74A8819012574468CB8A2376D
C995493B9B432653ECB5E775265C0AD21D13377AAA589AB3B56F5159D9ED1678
935CC0A842959B23A0F23B538DCBD5607F9DAC5F30B85028C9DE6D00A24298C4
DD2B513611A0BB7B1A68A651BF62E600248AF818DD4CD374CEA89C75997D6648
87EDD3B67FB8DA68CAFE7024A9DAC970395C6D6A91C865D834871F9568993A24
30E9DDA4E6E921623B318F317A6CE67F2CEC98B0F32B096FFBC4D675B313BAE2
D6E3FA516468F17FBF01A2808556C42A45EF028C8B08064281B2CCD10BA33BE5
CB1DE653F9CDE467F1A20B1E1AD69EFE223E91A372F29625FF22674A3768B392
3EBDF47301DCED2C2C29960C6D0E69DBEC2D42696410E99A048680AB1549163B
664CDE1CA620E5E40D27252CB95968A804F2A1D1A3E3B274D1B4B6276B1D4B41
B2211573205EB58660171357DA677B349659BF2B7FD797116FFC51FABC25ED8C
3D66BABDFB1D429F4BA0012EDEDE239B008EB085CAC065DAD11EE5EC325AAE88
2288109C5A61D326C030C782748C65427F41EB373351E1AA972E54479198AC5C
35D49C92222CC5738A4DCEC1C89389023BFB454E448AE8D4B98472AF5E362D03
82DCDB62B4B9B0C9B0E5667E498A38A45D7F888895D3D9B8CA61172565D0E26A
35456ECC519B3942B9FCF7A45659BC7FE47B15CC413327048F4FF8413F8D5299
AA154620C0A4632902E3A2E21CC6716090136029E49131CD2B6DAD7330A7C389
898D258E75570ECD3E13D7C98A2F0CA15DCED596058E55A33591D585EDE8FF34
AD0A5543F7BBAA383DE163D120B60BD29E60BA263714F22E11607AAEF72A6129
0C91B8180B5FB11640A8DC7092502E390D47B3AFCD156BB9BDBEAD3A1CE53A42
DB8452C6C2EE79079A8BD79AE1A6C9943C09451B424F86655A443F43328B71BD
924CEAE63C614F07603A8DEFC76B588DBE5A2A21D850CF132FD4A49CFE32F0AA
9131DB711433683AF5229D13E2A86390D09D884DDB7319A92441F74E69443552
6316271C01ACEFA643D563AFD3B572AF445771F2DC0F59EE1FA420AEE792B05D
B7530A638CB968AAB9A8223CF61307EEF4180DE517C6F9F4EC558B1D18CEEA27
F3A1ACE4AE2F80ABADB9BDBF00442C5AF0DF8779B46F15FBB749DEF2B74CE793
0C6519F2B4B3E13F70FC381879E6CDBE4F5475B0B5685C5BA8C9B243171C7C16
511E994EE030C95D58811143F455EE048291A8B79FBD6323B16BC9DAB8ADDBDB
EFB55F58E97E4AE1875DC11F59140262149CD607F2429AD2906EDEBEE73BECE7
C10A2A0937272198DEC364C9426B422A0C821E2D9F87453A597B2ED8A29C1BEA
2BA0DB6DAD8F1FBE75D04FF0C7EFCF5F8778CBCE038CD581907FC23A164CF7BE
A417EF604D105A2CA3A5CF0BF4A23D1854D88B5402C2E90C674B0A47665446A3
0F6C092980C711C410F333B85530E9767AA308DD656EDD6FC89016AC3A63891C
7BE54E700598FF611C48CC11ED2EEE0D2E5BD5CCB3D64EB95809E82E6AFE1E16
96C807C6029074F9846B6E15E7FC30EE7B14ECBBDFED0A2A1C0B4FC5F7A95897
3076D31D88B6002C4911F020BFEDCDBCD8E89EF2D1BB68214B56097FD784FB3A
EDFA80E82DB8DE642DF3419014B6B616571B118B9A77D83674E441B68F1FDA86
AF498E8525F10C97C1E9167BAA22146DC5F8BCED9499837450DDCBD98E433C6A
2E83FB7C1B823126E1769CD96748F0A474EF08A93777566AC59256AB2FEDFF16
6AA0063FAB98B3ECA4CEE1B36589712142F9FC0CBBAA8C11FB17C19C07A4E700
4ABEB5CD4C10C0D59440C9094B5B8F8636309B9F68D330072F752984AF0F4E22
E1E33E8224EFDF3A72BC5211F5E27C608CF4FE1C9BAB5B254DBF57D2D8F6CACC
86E419F3775DF571259B3BC4E4E8745F73B0C0801A0A05392E368E9D18EB7915
D8D1733AA8A26526B70874450AC345E3B827BBA56274B378A36FDCA17406BA6A
04705B64F395783341F342218C83D567F61B205B924F1D4290739C9F85316565
017B0FBB672ECBC28A8AD8DF1A1999333F4F3A15A4427BE4CF39F42E7B02939E
D35BF559FC7FE0CA86EF64D9E24B0BF9693273B0F22E4568A4F1B8690A0E2C67
7183CB20BE576E887E370C7008640EED2E5A31BC1147AA3AE0D8CD029F9D16FA
D2707576247B08BF94E9D0E056367D2E86CE75BA71C5AA6BB71EA318A11F7B5D
8F34828E959A4026A5B1C8C21BDAE6863550B27075B642BA6D1723E9389227BA
473570A689A4CF2235F44AF694399AFFE740B041CDD38EFC79606932A8FF0CCF
E8DFA18F91E17E80EC9A15866CF5AF6671269B365AABB443B2F7DB2E8F49E4AF
5AC012292C4672945F5416A97A5706E4E7E3EA5C824193872E3B8E3023564812
7877341BB0F17A00D6B9377DCD164F6A413BB2C6E6AB431E71F58C40D4219B63
8BA64BB8A567596505446911760D63DF4DF428B6D642F8565AC6D949EB3C1961
784C406317B7338F17693A6C6A99496C575B4449CDD9D3E755E2742F2B42D61C
1C15B6A3603B99C8F25DA670BB33BECC6E0CED34CA623C750A697BD74A2DFA3A
093704FE04A625C91F22481BD02F067EBEEDB79FA8084E96D343F0482718A247
945A7E02C292F90B47DB51B7CF4ADFC8ADF6778430643B1158363FC8F0FBAFA4
2C587E82ED400A18BC87EC1FBB7A68857C2F2F7E30503C225098A6D2F11E88CB
4F3D344BBD24AE898244F52AC777CD39D1CD1CF48A17AF600D43F040C0B388BF
2EFE62A39EE19A5327689F7DD558677F2F3FDF8B913F42D09B936A413169AFE5
BDE74076C32D9D39141F4949C399DB9FD32FF41B0EDA25C596C7075DDFFD0AA3
CFAC8B2B798E29CB3AAAF5C9CB5962E924237F95F420A012A72A25FD4835FFC8
EB5E2CB939C9E238196DD0F8434DBEED1B6CDF833ECB27D2D6799061133D3BB7
320ED857950B9A0DB1D63DD14584629C857337A10137A5D5B3CF78B1593DBA1A
41DB0B56AD8CE1E34CC33C4CF83660AC761CCB8D1F301FF1B7C0539DAD020D4C
6ED523849FFB966C633A6652DD3767ACC392D2CDC01191DE9F367DDCC272BE38
645C7D5B6AB2EDE3843672D0CBA9A7036B2D9D2C64147DCEC98BF021C2BA1847
7A1F9A6EB4F5E13580B07103D2DF38570D9E6DA640D5E94A861F2804DFA456A1
E7F73C36B7DE1576C61C543793BCB9603CC7171ACD72AD2F0FA9EB5934BAAA58
E56F072F827691F691212278652C9EC3CBC4E2BF1438C0A91AE81BA4295CF2C8
7B69C1BFF58D938574557037A879CAE80567B8BBAF16AC1B98EFDCF114F89C53
FCD1F2F2DD2879173CC29DDD41F000B2EB56B26E94AB92C95F5A4C17067BB075
1DDADA5968D728E3DC21A30837177EC3F98AD0D956427009AD183BE2ED21637D
117233460336B56EE3514572511C37D9023ABA61EAB7CAD2AF285173AE258FB8
6F86F44584B652D0E52F3C9C4F681804387C97E6602CC3080AFCA1A2CA72DB42
A77AD85DF2CAD86520753D1E1F2C9A18F9DB7E964D26D0308406B12EEDA937E2
1BD4265D51E8D430F006D3B8862980CEC2EBDB72C1565B7C5AE3F3999CE74515
1476E1CD57122CCCEEB50DC683FDF386313D308CA27A5D9984141218447D234D
171F84D7735DD5CB5D6460AE5620D281F7B20E4F5771BD83BB262858614B064D
EA0D271C25C9D59249F6A87CD3D677468D90B037098B2320C774A8F2EAF17E79
194424EFA6339D0AFE511E4B55EC039F7D9E7C47CFB761D02A6E2A45A6EBB960
37405F4B4C9FB1725F467BE7521A9F3F7535F5F9BCE2A1C0C3C035FC36D8FD51
0C90DF71C97AACE69BA9FF406DBE31EA08A5B6C5ADD39E8280352056E5C44161
BB76FF1D4CB29E6AB5E79AED3EAA20549595C7DA9CFC0698E3DF830628874F68
2D3425219AEB356B42C3EFBC98730018FB677DF50E31B797590DA7420A7F4897
7F24E7B20F86809F12BB08303E7723AE08EBE599D5423274906565FDF7558FA9
71C0D23134FC0D002BFFA01146D06CDD9A371F6BBFC2783E6BFCBDF8D81BE5D2
A8E4FA6510328A561ADA9E69B9C8F86DBE878FAAF0941F12C0B0CC02B81A1137
89635E8BB8063C9DEB9E51C2685750F9A239CCE951AF25BC9852F6FABBB267BA
65CE6C98666FD749D0E8199049B0B56B2487253C6E872E145AEFB68E0C34E052
9139250A64DCF86BFEAF7AA33D01673EA66579DD346035F80B88144B6273B27E
21F8D365E15B96E0CA7A6496F58DBF2072570775198DAF0D29C3E8B9C47813F3
DD5537AD10F3C436DCF2ABC79053512B048B97DC2F4313B33764A6266189B58A
E2E4B2658839984D839109C7A2B5C4CDA4C2CF2C7247C572DA1DA8F2FD079BA2
848EC338C9D1835368A6B53193D34471C60114E9BF71229C778D6A746889E194
E939623F109FBF01F16397214C7F3CCE8689CF83B3DECCD7922EF8001A4B52AC
0730FAF8E2480FDABD323925BF8712B14312D0DCD02AB6BCBD314198B3106DA1
477144AB4E09FAE231924330004ECCBF955AF82FBD08E8BEECAF4C97CF254DC3
117D38BDC9DB8FDBC7FCB795CF16E4C4A5221136ADDC6D1ED8EEF29D58604D76
D5DB6D665E94058D130DA7FC8F660492DCE57C810CB5FEA901123A1CF52FF7E7
4DFC38C40B2ED8230455E802081AAF9E5BA6BA13BF6CE3E869BD5A667C2A865C
881BA60329486B637A6C97B739F540361FDF529B624FAEF06564C1DCB0B12669
D33AB8A3A61B052AA482139943296684E60C1AC2DD4E904F6D261CA4C0E99313
E9333E985DB24D3B4BD8B2867327DA995C8F8485F6DAE80E34A9E5AB9AEEB735
1593A72FED1ABEC8490961C07307CBF41AB61BC3E9394A320189F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 91 /union put
dup 92 /intersection put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 165 /divide put
dup 188 /approxequal put
dup 197 /plus put
dup 198 /equal put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735FB6B8836B8B5A4D2AA84
96C5E265C58458246B1452B308A022655587FDF933817766BE8A1E6C29DC4365
DC1ED202CBD81E0339EC4C3C57B054EADA2C699385B3CD763CA06787E96684BF
86F7BBA7009447D8D50167498735295CFFA5358D068EA503BEBC2D3A7EEDE760
BBC03394A6B01B1AEC021C9F06834D1CDE5DED19A5A1F9097078C00473BD0B7F
46A0B35416F89E0B56CE39E95524F86B8516AB80BD32590E7B23CEB9BF53A313
F70EB6FFC5F217D5443DF922C873CA50362616261A28F011D1BD6932D2DDCD3F
1346EF1CD9EDC5C03FA51FBC7BFA21DF70A6F0916340F924DD54EF6823C556CE
20E3A0D39307CC0586141ED6630EF495DB2F978066B052DB621011A3C09E4DD3
271B411D7DC93087AB2F511758CAA594F3220DF1570C3397C812C4B7B00FF028
72DAD530D23FC96B06D824929CB76358CCC9F0CC20E11454A860A889B94CC3B0
5C30181FDCA483E053337ED08F7BB118DF650AFEC91735B71CE9F6EDC401BA48
6E3F0029CC7D23CE3F287BBC852896B7C8D7FB2561C508E4EDC9A1199911A88F
8F11EE31F57ED0A5AFE02141572AE6CC6DE29C450EA81AA6E79C012CEF45D8DD
BBE5218C0E76854509DA5117E12662C4A71835D1A1374B4DCA069CE2E0A2DEF0
4877BA22E90A992AF0FC3BAB7DE88FE693E2A660D5E6061E9962458E2D975C5D
972B1F8FEE797DCEE0EE0E8C0C6A72AE694367C64B666643606812AA6537D972
F3E6389680C75E2CF2345AB24D545AA2691C7E9656E63724274E06B8DCE8C0A8
28F2F8704C556C9FDD76C1F924EEA2205BB42187445D023A168E0866B74E4625
EA7C3F2A2E5CE9D1C163E77E8F81A14DF57533C878FFD068844C754CB0AF2BD1
61E97F0F3FFD64109A1BE1A8E97F9AD705973B514EE9CDA8013A20D6FCF63CDB
3A42020EC4D73ABEE5213E6F114328A2A54252BF9616DC98820DB2CCB1CE298D
B9C7CE65264A0E976BCF61484D9EB73B8A1439E58D7D237B4973A9CAEA5DF4EC
A50573A6BED0F505BE62970C6B70CCF2AE5DBC6AA7748E29546819EF937A0130
1A19E7A81826CC40F42996CA87BF00402B9530C5F8DC92EB9C08669C9737EC90
E24532B441559CC80F85EC10ED515CB4926B2E933DFE9DFDE0C9123EDC2B6884
4A286248003ED11C02EBD4C52D5C6F119EE54A61A8D65AE89336AB9CC73A8812
44A006F45FFC014FF469FF0ACDBCD089F4378DB859693CE2BA9B297C24C95F85
763D1F33ABB4989D0DDBF620E0A9CAD4EFD856B3A8733F504C351293DCD033C3
4B6F2CC615923E0112B59CC27EFB3C46FABF16B1E592C1AD027C2D0B36DD9F6D
E375098ED3334A19B35C5A70BFD2219C817DF68BE806A607D1A24B20E7B26A2D
61A8A588CB59AB03FD0577898939939BEAE15514C359FCDEF77C6D1CC3868CA6
B5DA15D3CC2EF20E2B2457856884FBB9F37083413FDD260596C68958B71396B4
CD9F8DF5037F0D43F502AAA34DD9163C3DC1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7410C5BC584A6FD6CECBF3A0
6263414BCE81888528B6D00FD524B3E8A9F72055812C6B34B53A27A4DDF49EE7
703DAF38098846BCB32AA54EA696669DC99DE3BF32B96E7D0A4107DD5E132FC2
4DEA28F304E91752899FA8BCDCC3D498B5E50B2FC370906607CC7EE79F2B8401
2920F318C7C15BB0A7ADFDD2E1779F1307346D19833FB655D41CA42BB4848ECE
46F740769FF65FC3860D88FA7440A3E6197359BD222D0AD59143180A4CECFA73
BC65F0AF65086878591C85D37B4521D9ECD654E53B72647D9CD0F6A9D09C62F0
0720E1966B4081CA48332B5A5548C8E22E9F467B553F5FB957681C7400A03D95
765C079FA72EE85F0B8D0058ECC4E243CB3A58D039174202E3214745BA472D39
0D3A037DB040BCE1683EBC8F2B43219E7542AA1E1DD13BA42349375524621539
25BAEFE15AAFC017BC085A39BC7B106A1F859A7BD0B76050F96B980A1D82E91C
8499E6428AD036B3CD6B79686A7C4E73978974D32CAE118F50E58B83585E838B
F4E9863C2CAD6DCD24A4624B7CD1FEC6C3959F468CD1B4255C64F9D2EB45F8EF
9429592FAA85A85A8C7A6C02F4FC4FE7EE5344787B394B63EC51FC4F15022F60
E826BC6C58C10F14C5CD9EB6BA7905C1A06C2C962B47880CC6B282B8F502C3F3
FF67FDB7D2767736315FF815E67207A8E469C0945216F4B4A2A760689B0D794D
8433BC57F11A56839FB65FA8E5222EA9A4B5B760E4957CF80035672F0E127296
7040C0D5153336F1C57444753F21C7A2224394411E5142A0B33145DB2DBC85D6
1ADA5BC37EE9215B73B7E88D9B255616AD093C909067BC67DE168ADA889723AC
952E6D0DF94F448085BB986340DF308B966FBCFBD9E9879DD03B43F0240E07C1
CCB2A00BA43D8BE4F0C4C16B7ADFA0E47C8ADA6F33F274E322692410F18B3593
684980219702064F30E256DC646668641E4C15422D8DAE5A86550A344C3DD6BF
EFE2663FA57A881534708C378F40466E1741ABC937739A93A9708BAFDD6B9F09
DA1BCC4AC17C7E8E4B5D609CB0F6C0972CE96B85A351293BDB2D6C41EDF8B74D
44AAAF83D66C2124FD165C2D397D12BFE79C1AFE9EA5C2C1296AE7329A4A890A
C7214607A445DDBEEA736E06476732FB24541F1F435A13F6298BF08314368A21
E37A3513F8EBD9E500653F2BA4B366FFC485D37B59782FA17828181A7002BFE5
21DE1DA426950A66B0D7A78D98F35CD2F4934C5CC9DAB4DD887BF492F06C0285
2394EF7D22B2B8E4899E3162B9BA949C4F6CD5621A497C042921C72B89C78D00
35BBEF52DBD2C0554D446BC7A5C2A033C767BD66F5615EA29BE5ABE7879D8557
7FB496F3710974ADBEF7AC54AEF0AD0088750FAECED19F8E95C2A24C71480018
56F76E79BE7F7030D8A0AEA216AD0AA12D6FF10DC6F1E8D3FD25EA1409D14482
11CB4EEFFBD0CCDD07FB5C9E2E7EE043222361CA8A48711917090DB412B32B89
AD7CB06BAD3DF33C53348F5E2D3745222561F53FCEAE64910D03241B5A1F7F09
1E4EE61363C7504767B66AA62A1A3CBE12D3C8A0A3D3093085EE9A2E32786894
881256E8F3F74441169F15B92FB15F42FDB57573FFCE11FA59F31471FE8C18DF
4A3A6B8D63DA3A075AFD8F3024F3B650E5C383F28BB41E593207EC10A9EF8EEB
25F6A2027EB23DE8F34ACFF12C954F71276A1AAA5F1598DEEA0A248016BD9E3D
0CE333B192BA917D5B91FCCEBF45A9DA7EF2B06A80A46FC5DCAC2042AD0EA5B5
310A0DAF0C033B961160F6981EAA7A1E62A19F64D15309EC4DB628F52DEEF30B
110E5D5F87B6E4B2A7BBB0CC0694942EB51E2444DD6458A14D84C98B3D3567FC
98EA46996586C97A6E8AABEF1FDAC258BA3A6F8AB8D5DF741B59140A25835C03
C5830CB34DDAFC67CC0E7F47A8B5009CBD51395DFB4DC616FB202BD43CF2BC22
C933BF33A8DF426FF193765CCEAA8932A612AFC7EDA10C345F5F5AD056392403
240FDEFF8C9434BE02AEC0C2EB6B2857EB8D5467CA2F787F249350AC2221EFD5
CC084F39B3A578F379EFE6DDF791276F2A90442F6E7B501FD9D823E357583D71
472DCB7D1B50065334F9818C8FF706AE3CB77D042409FA281E618224E663F142
979B41CD0A1A8E09D84F02CDEC17A318EC823A5D44235A2B8B8280899AC6A8C2
1E67E4C2F3CD667D6B19E4A4D7D97069E9178CA0D3735BA91EC2B41BE8E83E46
B663CF17559D33F5A373D1DA9F95542D5E464066A7F3B4713E8AD5092CC98484
9F18C61D22DF4C54B1E14DE042864A1D5AA87CE7B4FA6757C3A8498D213B5D99
4A1C25D91223CBE851C203B9C5CFBABED23B44EED859B60614CC33983C3A4EED
2F60C3FBED039BAA6F171D808785CA3C2A55C23F2288A937BCA9050F46F0688B
43E5C35CD3D7460BE6C143C758C69FC4729B398C08FDBC8C5DF58F53725F47DB
A3120166427FC660E99B9F753094D02BE65FABBD89A939A0B9E63F46D971A023
FA493AF506488044F2E2432A65BA21E90F6826750E2403B9D471AE983AB6FD0D
5BF4C98E40C0BFEC475959648C244FA98D904DF26C22F2FC67F53E41FBEE2380
DD4C4DC1AB49B790255658842AB358E77D7DBD2E8030E628DE16A0B6C9EE8839
E66BA62E6954CF4E4D7E3C20446A7DF07EF041A774447F3C464816AE987C40BB
B2013BA5181AD717F46069859AA0320983B8FAA404BC8989B77983DF1D145FCF
969B9735DE70B863BA363430752AC24AEBE6444EE62A17A42068CCE35AC40EFB
0C1CDD8925A3A35E032B8E1D12E05FFD60CB441B01CFD2C21C94BD96367DEE3D
90BAB76E5248A3CC52A043CD8BD07CD2391EBD6625AEDF928AB2757C3310D9A0
72642B081672A0BE31E078E27EE814B92E5D5AE2BD4C2AC5C79EC115E9E715A8
C2711AA6107DA029A597264EC42628BDFA57F4575B19F32A62F241570D1B2B0F
01F38C4736C20B14C1A381E2165B72FB49F017F5BFF9397355579F650836B2C8
6A8FA9ECE136F8F487D55CBD4EE0C0329C0FAB54EAE0FB68F94CEF2C7EF0229E
DA7C63C0DA21C717E37A0B7FE9B3AAEFE2D464D0037D7E1DE358037AFBCD7E16
9510940A9DEE365FA32844D7E3F8CD4087B07657D199CDC8B4D059A9857E0622
02D94FFDE5CDDD6F15EAD4D4A4E456EDDB37369DAF480732EBB5A447923265A8
9F851C4B56F067FAACED707CBF314702BD0D13F2BBC7B17EFFAFFBF18CA88047
5218A3AE67A8BDDF4B0DB7C5804A37D7AAA3940FE3F09C34772DFECD83E52235
9CCE25CBA439439D6165F6BA2B3C2A0FC1C352E21DB63C14CBD5367C4DA04324
FADC2B172D32AFDE2858E791FF27FEDEA94FFA3EDC5353F3D13AD6541D1D3A02
FFCE3E48707FC2B29CABA2CC1E6ED69870A5E696419DD3E3F9FAABD30F258B30
4C5DC0FC0E616DB9326A5B02888C21474C0E7F6515A41387CA09255000B8CFDA
02D382EF4843C3D3C262C5E48B2E6754D488DE30960146ACA6F4238A70754421
E6444BA967C3D189A1B89481EBDDBE9C1637E9A95034D478188A51C8E9877DF0
54C337554B4D0C4266B025DF0C804A6913C95B13962A2C98343446F1B1CFBE3C
57C6A63083C1D5DA8109D359C4D44A302F82CEFF81A78A8A700FE2858FBA0DDC
4A3891F4DA2B17D50229D50FDA8862526DD5D640FD3E229726A2D989A3F9D0EF
3AD7ED5799E53CC35CE78D1C5B3579919510B0A8B7B1E6661195C76A6AD7F7F4
AD1ACC659F95B1279647B812EA75ECB0DE30D83A33E038A149724E295352F5E0
E2304C204721E87D385891592B8AC53C6B73BACF76E1D732F894C4CF4013E1EF
04A2CB5F5E23EBEE3478351C7C7807A8018AA8AAF0BB53C7BE139AC9A4AC6838
2789DF8C7471DB48B5721B919CC91202FCB8C480220D500914B57385DF486813
AD7EA8C808D50EE3FB531946F5E38D81CE621A8AC2BAA2F5DCBAF905C19B77E0
34C891A8CB59733983D4DE7A9B79B9222DDA32C649691C3E5A6DD07945EEC698
7D4F4F18A1AD10A9184E4148C46F02C3F231CD7AA8F372B8719B95C8C26CAE7C
FC7209F4A732ECFE85CE880085849EDB6CB9DA70104826CC10B9E8A1B044164E
CE1C1FD5A30B240DE3246DFCBBD6E445583DF954ED78EBC44BE29E5C21CB755A
ECDE8F62C158612D954EF05A84003435A911AABD44046D11F671C2C063293515
00C4D3114908982D4155DB034B881B24BB6B371D04C1878F0CEEE222834DF194
765FA7BB3B83067874632068CC40344D48AE247D5EB409EBC3EFCFE7DA1232D3
4A047DDF4DCAE65591627DBB33EECD7981415B03C51183D7173C502BBB968B61
EEE0649E3217A42293F04478516C42AF74097CDB6E280F9036073AF8AF91E71F
504DA5D4479D3FC7623589A1849014DBD8EC2677B2FC8CF73D874F38BA2148B7
6A51E5D0EA176683406301E0DA4B2337009C13E8ABA9112B0FBA4201511C2A47
DF05F6A7745CACEF9C426092A2BEEE09CE9979BB6B4BE6A668B709CD8F1266A3
F243E53B17731753936BF8271243C7E347570AD63E3560A993F60008C8E51972
04416FE7E234C13F17FB07C03B59FA55C6056259BFC7302C491CDE2B42701E5C
86D928424F3B1371BA1FA319D8CF831273356F2EA1A4FF868414C293A71128B8
7293D4363E5D0A84F94FEBF608D04D39DD4C20619428DE80FCBC622441621ACD
19BFDB6C06E027C4A7E177C3A4B89E5D79A8443C89E3C3F66FB13808C36FEAEC
D80F3B0D1292834D8A6DA27CCD46A7F9CB12318E20B6B24C0CD14763A1A4CB82
2F7C21F5F8BCA8559C58B4A4960FCE4C041E608C61B458491EE391DBF8FBD2E9
7E6D408712B817EDD8632D9306802AD03AF067FC6D5207A8BDB9FF44B795582D
55D94C892831CCB18FB0C624A636BBAECB3CA080F2F766A702C538FB890DA817
DF81D7EC96641F4C8CDA818F5E66C7005ED540FE827D7116F771F3F66F3B0EDB
5493BFA8010815AD83855C0832ED8BBB0A41A71DD2A0B4ED5FB3D4EC94C0B371
EF1D05A8751F11BFF2F766A702C538FB890DA817DF81D7EC96641F4853BAA0FE
28119768A161F8C244EAFBCB63B91DF95D43A13874CEFD242C25F6952AF7572A
42B4F49CD0B41D4D491CC1CA568D45B8071F06C81C1A18951AF9817D66484E09
E454F8D0EE5E9E046E5C67C0B1A2945DB5075C757B6E862A02B266C187423702
DC554242D43DCD622B0972C19559C5264F3F4D9B7F37A368EC5E5AEB1E8572AB
02BA29CF3FCB731BD3EFAEE422E62BD73CD91FD6BBF10DF518D2435BE59C2A1D
11BE76A4899DA4BAA23ABA404F170CA64F762A9B14F265599811CE71A65B8055
42515AA19B6CA23A8418AC936A47C6F5D4DF3A6B732D964B0495D6781DB760D6
0E2F31CA552ACD56645EA2B73CCF0BF24A91156AA4251247833BA252386B7576
3481C3AC3EEE6C723521766E3E3F07227B64467EDCC0085445F8E223D8B46EEC
66F753C0764B9843AFAE1A3100D64A2DA02D2FC57BE3DB21E774576111D7F9DC
F56786CEAD196CFC2ECCDED97BEB1AC1693D1A305823F46DA72848745C4BAF97
2DBFFE2723351138FE79B813422EFAF11FD52ACD52051083A3F5EEE267243EFD
320E1C74C825AFE8B02AD2698ECB9C59A17DF138F3D9F5F51DFF437FF7578E58
F32ECBFE5E76D6627244791BEA2675775A1399E9A3159A277BB42D415C6D4470
DDBBA89A6045A9715277D804C5C7F06F2AEEF587F7FFA23EEE44C3C8536FB72F
FF2722B485BCB7F3D74FE088A0C65C626C8EB38B1DED23D009D2B3347F514E97
0B04A385C8736540923880549AB96F55898CADE88736716631BA515DF04156E4
E96D97B8BC1543CC1E8E8ADF0D346F8434E939042ADBEDF76460DADCF9A34345
28F9867BDE889FD19F7A086924D7D37445D9DC55E2703AAA6CC20D0DFDC24F0C
4F450305373271A4C05B128C54749538DF2D036813952D6B1E15A51D08E7BCF3
6B8FF289CC52A6CC5CDF6A8B3FC64E39E2DE83E407FFFFC7383C4E7AC93405F6
58E8FB7D4ACB8090D201501A8E798124570A4A7B3DE356F4522D02299535B6A3
A946C631927A80993F93B9DE8EFBBDD3C355D5E09CDA43120B7DE7CE3CB9E0BD
314E9031A6E6EA0EBCF391BE9C97E0DC84C047F86C8FD229220F8B49FE28D3DD
0C225D7003B6A7360EF1090B966119E09CC2806011CFFE9F80178FFB0CF4E74D
B18E58917EC6B6CC9FE97D51E895AA9149FF86910B658A61B785B89C20DD38D7
1B7AD97F57BCDDEB76DA5C72C6F813D50DF6FD82D4047EAB0CA506808E9321DF
14947CFA3DCC97477F8C211FB86695F9762ECB5E7566E858B2CC7CEFD34C4EF0
583D400AEB0AD05B3D73C071CEA58802D0CC5BB2D007171071C47925EC6F2741
B3A91D90005AEE42439A73813AFA3C61D51618FD7A725B42CBCDA289CFE59086
EDD58556845CE7BDAC9197EC4A05B8BE04D971C7226C52488A189C4038874E7F
840DAB77ACB2D34AC2C5F6AB1643E3F7FF9B34B48930980221FED4D966B2FD22
60425B5AA25DA3E4D438F8BDA3270F2BAB32DD9E7E17D4564C575AFDA00BCF5B
6712749BFD5C15D965C9CCD3A16CB8E6C84AAFBD92F03381173924E6DC3A8D0B
46403C3CCD7A15991E257FC43AE5CA2765235EE8CCF48BA76C83942FF755C0A1
B07FCFBC72438829B24666A8291EAE01AF4CCD120E7C240AA332B33482774779
EA28AE02072BB6F5ADF57360BA02BDDA25100628CA8C6345E0B9A27050E5C2B7
25D220C7917389BCB7C1C0F50A144053B30A15AACBEE1178398C4DF6FFE183E4
0A7ECF6A046F3399265EB58758CB837687B425861AD49253D2983A840B68D664
FCF5A4442342FB6346E80E941233C0EB41B10B64F3698FAC50F4137102C4468D
6345E0B9A7EC9F9ADB1FF02E05C9F08F8DAEF445B8B01DB81B7BB883D20AC4F1
49B41FE02A73130CD58EBACB55F2DED83CFFB2A1D1A65A6B5AE9789EF16A0F3F
8D5B7ECABDC25EFC26F2B8B01B366F9A300C032875D64A54B929901BC49D8780
47C312BCC326331F40C0FB159942388C98F23D18B36684FFD7FA6E43AB24250B
C1BCF08277419D50610BA45F203117169AE6FABC9407D73861DB240EF439972F
5736A0004F25CA8ED1ECF0AF816631BD6A334F4E2A3E2BEEC3A938B2130A2912
F0CFB1A11F2070FB0397008FA9C202B154B2FE236FA95C333FB261E1E1BBA006
E8B1CCFE370470D5DBF341CFE349E2AAE1431C5152331FDC39DA653ECCC856FA
9B441D33FCAB8FCC1DDF2F947C23B7BB11C60C25F824A30F3FA1A7F3C70626AD
B91641B5C0E5BF7FE47CB6376A6A924437CAAF5109758FEDE872B4C45D35D43D
6F3645711390A4DEB3EC95E92C2B3EFEEEE95EAA5126DF6216665CB33D7C01D7
0565B0BD1E7921EA497FDDD211FA28F12210ADF2DDAC91F01AF0190518934B2D
4F4797D800A050453D24FC405049431B89CB55809E8DCB3AB809D92ED867A3C2
79A97DF639B3524546284113E6C8198ED2D561E7E41D2CFB259033CFD19CDD1B
C406C761166B3D5021F68F775FBEA75F370F70E612B7F12E737719EF4D0EA9CC
61A8F6382BE06798241C1CF39D4038A82B74096C4A3E98063338C409E0C7EE81
08DA9FB9E79D526BE9237410BD2D179F1B362B2DD45F2938939EC836E6020224
D8D34E270311E790C228B3D6E4332F885364C62C2BF5BE936B10063B41D8B58A
C6632D9506A3CAAC89C0D8656BED059FC0C1FCE63D260B699B5216B92376C07F
E9F608C87FD4977259638DDC718F8E96EBE70EACB30F9076F35DDB69E9BE8AF5
C2B0778B99FEFECD97B1D112A6566375422FFA404F901540A46D06096AFF61CB
2C9EBEF60AF10D5698CCC0AC60048630284C43749F58977A652BCF054121BF52
52C84E876F9B0069B7FE13B500E722021FAD70EB58EB39B567FCE94F6CBEB0FA
1EC3005F30BE38C6101F1F18E2FB5C7735423AEB5FA89CCCF0FF6FCFF61F8035
3697799124C7D8F5E5FDCA58068D104BE183D0A9A11D8B4BAD6094308DBF06A7
35A8A10E8796E1C0D87C54CE1218DA31F62CA8F00F1E1B7F5A04882696273B95
1CE02A07CAF20F9B743CBD8DF5DBF7B9B5F6E0C8292E0BB6A8A9041F8DECBABE
3FB7EE49ACF5667D78046F961E972F891B067A37EFBBF1F53606B87A9580B228
76B58E93C6B0FAFD4510E52A5A5EB54E4D177F9EA05A3698C58D791AEF54AED6
629A4F0E50D3A7D0395B2286CBDD0BE79AAA74B4ACF9A7F93C9BBA1F25F67D00
52AA4F8A58ED924A503E551A3806E3FC576D2F7CC6C659DEA1528D3AF34BDC5F
F000A290E003A1BEAB1E720035DF76DFCA3A137520A6B9451AC306E99D144220
DA9A6A7A1BC4BF5FA2678FD62F14A5B2D6FAE703EBA171F0C279B66757E75E2B
9F06A1C1CCD5B823CD6A417F7D6AC9258A648BF1AF23D85FA2E28D4B382C8357
1C810FDD496070C5D33FF7B1FEEEC83E446B44EC9383FDEE310FB8C7B776E279
22D871458120235FE1D53EDFF2849E4C3C7B503854FE184DA0388C0B84A54D0B
6B647097086C9328710523E454331F624D0F63A3E9A857949EE410BA4F8250E2
27FB0E1FF64338BF5C55973D0823D8CD11F8F14040D636319A0913C4B1770D6B
2C7687612FC7C9946E6130BD6690763D0FB496A451A11CFDB9B1090F66B81AC1
911ECC9896D43BBCA6391E59DCFEE0984D5FEC71490F8DDE98605BC9C09C31D7
C73A7A3B2EEA2AE1696FD5A780FA1273395EED764C5B63DF3E01BB88F754A365
2A6A3ACBE3D401AAF991C2A0C0935AB85A438AAB424675F65011FEA13A7ED8A0
EE9C480B614B52234E623A5468DC67A64619744ED145705803088793E219FC87
96A0B3FDE5424CD62055FE3BEEA5CEFFB276253DA5C544849DAF72BB83974714
9E833866B83632E72C29715C857EA20DB515C85D4C8550EE32F7F43D740F0E20
5391377621667E33FB2934B6E3BABDFBEACB8AB7025E85853AD75158AACE5408
C25408CD005CD545FD65B67A7F3087AE6FE2189788942BBA67E95FBE6E34A8F8
C31B235F13514C5411AB26EE2212F88A3DC7471C53D6AA38521E1901195CD56F
9D6F5536EC9E7A5E810DA32884F594B4D4AB92C1D462A387077140AD343DB3E6
76861B728C410B5D21CF721B288E1FD9E80ECF7BD18A638F6D21C4E73610AFBE
66079D3F2AC47400CCC6B99CD5698E182D35F5B059DF6AFF2373628BA4D6D642
2A4CC4DFBAC85A8C3C99D0EBAC0F32924E1C6F28DDFA49C5368CE8F6F8BB4382
003153D4DA1FCD9013BD4924E50B6D177C8E5B26813C605482A267B4E0A71CBA
4CB7F0D3AB4095069C3CACF33CF3F5D386645652144482C1C91A1F5EB0CF680A
FAC9EF32222FCCFECEEFDE1905F34DF1C54D0DDCD121789928BC0F95702A9D2B
4D491A09D66BDD8D45878D1DE82BA72506FB6F14584FB4330583221E926718C4
DE83FEFF859D9A706ED983062887718289C2E49ADC38BDF3854C9B0AE84C277E
86E735E31B61E46B930615223C66681D8A7ED9F7ED7144068A443914C79572A3
586B22C8A970802F50EAC63D9925D13990FFCDB4BA3653552757519F57AF5047
0C6784B190E2CBB29DA87CC41366E3F026AA81783D3871D5E5B878EDA1FF328B
09641161BCFFD1247F7CEF83BE08B821E89788F03FBD942DC0F855582D9BD75E
81CCEBD4C3A735A55B99F998C318A8FE36E203EA6D6A3CD9257A93D839C7320E
951D01199A9CAB5225D8B82A82DD5B49E3B6E95B33EF98D43B12DB2543892B29
71A138E0BC7211079BC7CAD60B6423F2E3BB004C95E41CD225EAA5D72C2499B3
8CDF2AD5B830370FBDD67247BD53B5DD056D9C33F0C2B632FDE3C1152BE563BF
3844421AD1DED8711457B0A1BD9DB810B665519E7E2689DF33968A094E68534E
0C4CFD2CDD6C52BAD1A162F15593442E09AFA93DD1880C52FCD565E1B83462C1
50F36D629D34F187533BD57C512C2C654890C77650BF1E7E171058EC303E628A
0D1D340ADAF86F9EE1568A4E516818D3D3CD786074314CB5B555491A3FDB51A1
E89BC2FB9E323097213458EEA13C3BC0D8832830186064205595806C4CBFE6AB
1DC75B2B36A1D03DBB111A3CEF6C5BF9C853D613E6CB13417C27F6858D13962C
B3A79E49246ED416AE66126E3BD76F0FC84339E97EAA35BD7DEF5A660EA3317D
DCB3B45FB4FE7B054A183BFDF418D3C45C26803F091EBB1A804D6E1B1C217054
727BA157B28255712F2E5C5E3C774B9BF148F3240595F465CB8E2A191FC543BF
FF9842173732C0C0109861075F936970D3191CD08D0D3AD670C2465E8326ACE6
F0EDA60C3807EE1C5BB02C211BB19DAF5AFA4603CD4DCAFC78CA5A18B0304B41
4DF1A49EEA8DB62DD4A9474DC3A0F68078EC4FFDB2355C2DACD0C99C9A4CE516
45DBBB7C708E402F27923922469A3903974322A1C767537CFC73FEF9318FD72B
FEA55222DEBD063982AF134962BD30586218DFE43DFAC0FD66C230D2A84BC911
D294B471CED3750A6E7856E0323CA9B40F918E814A200FFD16EC55DBEB377ADE
9E6B18A95A9D2741FD04632DD5088FEA076DACC7C279DA94761D9C9117358DD2
A122C11ADDE30C448F26313DC0A49B70758E36562C5C7CBD2D06B8ED858D43F4
88621CAD8291F8544136DC293C877FE4CCF6364ACB9D24DD409612326E6FE5F7
694874CBBCF0B308A65971DA9C4C7E32CE50565D55263040F997073475804061
6AC6AAF49B512D8670FC08719D6688C530ABA7DD36DF8A1547D7ADB4D7267113
66E3F026AA8179E2829F0A3EA51E5666D7579BCEA6E28DF04768CC0D7EBBEB68
50AB19775DE49BC81327BA3EE5EB69F699C9BE8742B9C1DC9B1A5DF3666FD45C
D2C6EC3AAA7A4C7AD01A4965F05C134EDA0484916CC2580142F94723A80CE937
F274A34A965EC784A3545F496F39143D546367F222F389B8367EC1D522E99F51
94F7B6155DF7C08072FDBA5D33B1FDBC09B3392CB73AA960E2391BC8BF6C7AA2
CD75F2BB3ECB8658627F9E6BA7288EB21DF18BA90C89389BACA480B6D7771370
CE9618B99249C327B9FC1AD32777073A4131570C57EDB59F8533EDDFB8B2ABA5
FC13BE6596B360A0A47BE1870FF765B4485E9D91A2FBE40D773F6335426B6BD4
8DFF5D4348453352A5F1797D4222E9697B0CF3786B75C2982BB9845BFA40D95B
4C73C76B00C7998D76D92FDAD522A6F45FBC7794A97992FE8722AA88B68EB4CA
D8437F7EFEC38631037EB47017DEA8809853062DD873AB587F48A7E87443E987
2A35F383B6791237C0D154623202B534E0B2B745E35D0B8B521B85187FA2900A
D5119F9690F806DA78EFFA9E6625EF1B1BE4F3E31764641A605FA36AFEB78CD8
101BB455A9519672F5109E3EE88D6F36513DEA5271740DEF4E7CF2799E75BB6F
0D034710815174AE15C05513D07771943D2D2628CC56F28BDFAC26D794BE236C
A3F7829296DCB0F42A2CCD3D3B5821999879C1BDB510C1E17BF86E72686FA3CD
B04B163CC4EFBC41E908A88840C87B04A743F2EB7D92FC02BC0D08B92B6E82C0
C672D685FA44E465F59108765D43191609AD892AE8C5ACFAF8463F48C5D2EFCB
363E6570234F7F320DBFD2CAEC9B4A40764ABDC644A87D0F4D49A317C1C75C48
CD62863F52F3962692B3E0F3230894D122858A4F16F51DA1E106E6674945DBAF
16CB022CABB9E9E51A3E515C7CCCB5AF4A870AAD7D181F635F266FF6EA9469CC
9473F5805D4E8B69F6F982D880F47D402E9E2A5446F76534441BAC195FEF4F68
5C43586781B6BA786DB1A5A2BF33C29E007481457123AE6DB8994DD4E9ADA138
7512E98A7BE62DAB5C9DB455EDDF989254E2711EFEBE6748C76AF62016DCD060
7AFD4EED93FDB020040175C45E43540E7225E035338A9C85F68D1ECA0C38F422
49A82AE2A84DEEBA48293137BBA0EBB4121AF7B84678F5C171A2C17BBA7DC9E9
FDF581420C72389565ED2C78DFA328160D3AB4975C46C8188C2307DA381AF793
9870B07871195B87CA96E2E00C89DCECDCF831DCE93FC183B92C92D95731E6B4
6680DF46D8D26272E95695B6ED06E7FB01C784E4B54417D6745EDC2FA6C0625A
DC0F6861B97F788A60AA13D357442E60448BD3E87F52DF6604705D1CCBA78266
F5B28815863310891584A96C2FC70C7D9B92D7B3C4FA049B7CE55FC1444C30E2
50A98EE53C27C22C70ED2F1DB6FF64BEC027B69A86715ED5ACCF11CC40EC8BAC
34BCE17F4D8771BFC62258B55A8298ADEEEEC514035BC713ADA857AC555A59EF
78B6610BEB74C19CBA84C27519E625969810FDAD6E21854C992C0D5CC5085078
C38B519E70FA9F1A882DBE4EA7F1B5EBAE1E903F0BEE573BDBE70BC25E2DE3F6
11EB67AA7BE51CCB9AF7A89F52C293402D2144AF7E96BC203683426003FC4784
D753BBB882B2C3D4E074A9A853BE474ACE3E01C310714D3DD291F5D1D040C19E
714B371A0AECA9BD3CA67835A3ED965B764D3142B5E5579BED378BD148A4B273
B56E5821492C865374501530AB1C34B77B033A1752FF04CDAF5AC2817E435E17
7227A90DD14153535F31A6D521FAC26A1DBF1B5CA9EB619A75DFCBC7F0C8D207
9761516F52BCA6764925323ACE4A85A57830F8564F36431ACB4119FE116BCAF9
944E64D7087062669802D776C42F0AFEF0714C1443484F7A53A2B908E9EA3FBE
89496505830E4391AA62A2DEE42F8440DA033CC0B31995967C4B8437470E7FA9
B2D2762E140D904FB491F53C3434421B9444E6D2D3E4489FDE875E645BDE431B
AFF2EF48D0CC0C61727CBD529514561BCE906D3E623F60D716D29E8FD7A2499A
F5C78794A24C6A0F980174231762801CA8FCB208B1E2A278771B76B02CFBFB12
34374162B30D40F55FA9D9926AA277298FC86966C36A1DE47A8E0F9FFD9A5FD7
517BD0FD04C73F8DE58E8097DE605BE90451BA06542E8C4AFDA2153EE48B2C8B
3176A04199F26D10BF19A25FB465FE9CC524D0669F93D9EE63A008F83730167E
BC6A229D1404CF83C29F86EA2A7FF45E74FC4F1469DBC64DF73E84CBF26BA5BE
308695DD0D6B35B01D0001AB6B34C041E559D78B29D0D6A92E87470FF4E979CC
FC2339AD8EF6A51AC27305A50EF545FA2C8A0481D91A3A715DBC2D68077D0891
B26FAD295E36149DFDC190A773EBBCE77CB17B98D0487D2D3EDDE488765BD1BC
34B10381F09D4979C65B90D85782C9A061E06186C0A632D9BFF732F13182053D
B2DD2836269C0502CBB72E40ECB725351A5E83237BDF7FC4BD5126E52CB747AF
C05A5B973CD6C89AE8F0D0BFF09A33CA122B0344AD0345890D8AFA5F1CCE93B5
41936891F3F7F274DCE3A2E82399AC0F813D19063DA7450E0286AF95B6226FAC
D522DCD1E0D2AE270230041691B1F4C5BAA7134730B3EE22C79F08C9C8E390DE
DC58471BE932DDD90DF228B7AE4E85B0C9C22431F97871EE58D09B5E722DE483
C01D0878FD11E89A60EB750D328C7EC8FF32C09D0E6429D3AD175A3EC6972CDE
7E8A74350D78C60BE6252233F9C0A4B2E09912FFAD3D64892431AF8CFE1FB577
8504FD3D045DC07F1EEB209DBF7EE1686A8CDB1A54B4ECA0ABA42BE49A427C7D
66709425786CB2E621ACF70FC594097C6D8E46C3E8D5CAE999B3417719D19AB3
D26118068267CFDA2E54243E4513E3CF869C37E8D995163D729B9564B61014D5
61416C5E58F29F16A5CD1418D4800FEC65705F67D91FE05563D58F9AAF636A42
1DD744A452A29D1D57A9F3F049601BEA286D30A65A429B8D89858D94C7057448
5964CE24B011E456D15D854EDE602898C8514D2AACCB110C2EB77B43CCB0E272
FCF5B8B2E0601FD8524E6797738D440DDADE2C0492270F2BC3EA349FAC4E8140
60776B313E7A9E2428B8FC2432C6D2F2A59DBAD59DE138AFC38B4837E791F004
C3E6A629FB2AB4B8AA1079CD6DA32F8F374B8B2D917045FE5CF4C7EDEF8D6242
E618EB5B20F3F661AD6030E09725AD1A5B7B5BD90FE786F48BDFBD75D7B11358
BC4E9099BA0A1B4BC6C064F813ABD5640DF07079383216366B6AC5435D0C890C
A94790E05BAA342D1F8087A57051EEB74EF54883B9D584FBE699B751797466FF
6A0B1C845BAC1EED93F1E053BA4305F085438E38C33DD1E98464214DDA998857
689F4CAA390299DEFA878AE3B75034A490C83F72AED725D49D39198BA8E1BCA3
C78964045A75F17F3C33960635C427E6B1E2A8BDB11263AC4080104668A70899
B3FF10EC6F1A3B1502732AF00DD8D6A0C49957AF98BAA6D7F47CA2A38F66D73F
020E241619ADB8B52098265F2BD13F53B90B2EC284821B30E15CC963DDA5C9F5
EEFA629A8392FF143C2ADFF6CF718694857BAEE414D7D939F60FD5B5B5097EC5
64FB0E98E6615670FA7031BA54C2F89F93836D28C6F54C25EED3AB7226BD3BD1
A4A97D9CE050029EF374A15E6BC5464B0A54B5BBC3FC1E95A8D6726F63A70FEE
ED68DC7A3463A3B6EFF7236B034C6CF71FEBEA4DDB5226D93B4799BF59EA59E3
539389DA9E8FB3CC12A4621CA30B07B1F201A365F9AEF45EBEF7A2F7B0CB7DB0
499C9443ABFA577DE284CE505D6BE8D0EE2711AC5A0FEE0617743678084958F5
547EF4C87829123756C9E15A36A783286F1B01294783A17BD27E47FCF1168324
47A7477DF96C7F9DC017D5E0FBA36C5A99D3190671FB711A20081445454FC343
95749F4B7AF6444F5F7F37C65D103C281D2C28F44EC78105ACBBB45EDC19F7B6
AFB479BEE669685FFD5505FC8EE8E55952946F2339D5CC16C603EBCDBF04E223
FFF71613E3F630DC790B30E57644293222C044EB93AE2AAFC967CD625E24B6A9
26BEB5A91010C5F7E29C0E2691561F028A40596CD64756898A9C0EB87347C79D
EEACDCCE48183FA5C248F2B7E1F7940B71F4F1E66E493042C177EE597D426268
5EAFA80068E3878B3C89029DEBEF532130CD28E4D93358186C1C96F8E5D39685
DE22CCE0649097865DAFC3096D4434C34FF48540250E1872A3A9E3D86A4F0F90
C7205EC19C9BE6E1499CDC0729A405FFC59409782B8F8FA1A2FB42A0DA113DC1
A5F09C66216FE859B91AE13E1FAE81ACAE81A3C5347B07F93A6156F0A3BADA43
BFE74673A7ED436A9CFBA866349AB079147A5547248154C9B7B895068472CAF5
155DD80BDC168657EABB31908CE7207E772567900D661FBD121756E193B226CF
4539F7C7B93A489C72941297AB9354855B86953C69D167C6C82D76151A9BA6C9
8C698F0D8A154D269762F21E9304A3390F60D5029F3C9496046328CE2B7D1AFA
59DDB9C9CAC5B622084F13802DA51CFD6EBAF85DF8001E821183849D36401A23
61EBE94CE4E80846A3D7FA2BF67ED18696198DF9FC8372F1FAE3960DE47F59AC
E6F2822C3041E66137FF7CA4A39103AD3A3FC3F8D9D19287C4D41EBBF2E79688
BB6FB556D41D3E03F71366AE611F1402A86CC26EEB025CF283377E7035C683F0
561E0807FA496BB6CFE3A8819317729A035C16DA4BE7C4F349E4C4BDC31E2BE9
E6D4BBCF78E402F11F15CD43EA0E2C4BDA95EB813C88B724F55C54C9CE941CEE
828C0A85B801DBE1188457FB91632918C94E2D0D11C5B4C5617286EB3F3B4F87
8079A87779658FD90E55734D73DD4D592122EAD4CA7F373404150875DABF15A6
268643EB94D27860855E0A747F98A37373524C1C9B938470AD727322374E692A
5FD658E9D2526A2215314E94291A9DFF325D4644C07433DA55266E78793A2DEF
F8E550D820454E7C453AB234FAB2A9A64F45DB47FD996534E0D88E3D8687598B
B33C9995659C978199F74457BAC16A61426A9E98DCEB1DF03CEA380BC8974D04
6F88A4B6C168FDE0B836AEF013555A3110D5F6EE53879DA773F62619BACBD1C3
2FF587B25B0BEA9CAC90FD1619B14FD2C859B38DF6E46304095869E495B9C613
BC69009DB28B05ACE14D0E4753D8A7FEFB642F9119ADDF6FE30A954B311AF708
06F64BEA9875E296ECD5B21F8FBE997834BD63B1BEEAA160F5846B51FAF83980
D38F1FCFE0E11C2752D2186B2D15F6F0E688BDED7CF3CAC1E32EF8E7D568F2EC
1B5BBB921E7AACA0D760E60E6931B6C795CCFE0B208A66E42AA899FC9A040DC7
2AFE0B60542965CBD8E183CE54706CC97D3460B85892BF4A6C79C5A90DBE1938
5159942D01037178664EC6CCAA3CC2061DA9D2B39DB66B00D32F6F348254EC52
6F425107775BC4024DCBC511C540955AE97B33570650D93B632E6BB1564A81C8
0D041C139FDB412A0D218602E6E9A73E2331F06A18FB69336B3FE07A1CC7FA23
680FACA43D623299B12B66904B49C44584FF222D74B4EAB444D30240808B16EE
F1EE502593B69ABB6841E6C565B601A2332DF083DBEA5D75FF36BFD8FC73F42C
281A7488FE3F2F5E9A099DC0F84A5B965513B42FC6CB340BA4B1D9EE3945B686
A634DA8104937D83CC3526E9745284E3DD614BCDD5E060454EDD767B7733628B
6AD38F6D7992923405F4D27A6D3506B8AEE7CB84F2C1B8C4289F2C757D02EB85
37035A3808BD8FC3B329A5A5C0A922111498F128789AB50F9B73B71333C4AD39
C2D0067DCE7D977F8382D525F6C76086DB19C6DB82565174170C35A6D788554F
7202FBB8E5267573AE57657D37141F890598CCDEC56C053AD294A43554398356
D71EAC00F8FDBD825B1EE4FA0D848CD9013C40B060200B4109842FC597B88C3F
E820FF79523FCD8A1A09762005BBD043B16F3F093A01F325002D60FBE34E6C1A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 96 /lscript put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC466A669A15614813CCF13D5DACCEFC0044612E8DA68D16BD1CD44FAC85B
77D4EC8E51FAB737E69A5BF653B8E6BFDCFE4783C4DF6C06F669EED412848DB1
C2BFD00F84455918F6F7B0125E9AD62A8D51C0DB9E7286A8A2312B11DE4D3837
1E5D5E2FBDDB3EE8368C068CA768739C7B57E06AA6F782FD61F4CD0197B54D1F
72CC1A4B453BD8AD2A79E22212442BE535E01859C46C6A00E00209115AE10C86
D4134C8C541EE0C702938B25160E5A62B76BA761C38714A62CA5BA035C5B8BBD
EAA179648C41D4F6477AC75D7275831735AB24C6944A71D97332B5C2775851E9
6006A6604ED6429695CF8D4986849D9B31036E93C48FB693ECC593299A09D377
AC9DCC0396B2F1FA8ABD3B94B89311E353E7BF370F2CC662E1B6B61D8AEF337B
E4D6FBD832273999367D05A85FE31B5F2C0387456A37B80A3000B907D78BF114
6556892940F1A66A7FA4B442A843A915E7D3D27B2DD42D72D01CFE2A664E0632
E56F8C1D694079CB51AB44F3DF083D15E6BE7076BB0BE11B36F8E4D8E14950D5
A13146B2FE9CA799E8F5D938B6A1A2D12857FE53146A346ED4829FDA3718A154
35BECB6C91A2A41F9C4C4CA66E9CD469993C5BC48C2ABD45F298
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B286886B2FD9B2FFFE1A996E
B0F752104862EFB24394FA6D39DCDA3FB70D93E95FE58AC0B21D109900667349
5B2D43FDF1E4EE5CE4F0CA7062C6BC568A897DFD9185BD17E8FB9AFB68659C86
242E30DE8D95EB6A9E9CB42398895F1F95D5F191D6FF2E3E78E08934514C342F
45D4DD4D84EA7F29299E3CAB95D642A2CD023A1848E1121734CA2E7AB11BBED9
E4D18AA5240AFE1BD43AA1CEFBCBA72DCEBCFC2F4C267D7D1A41F79C9222CDE4
78323FC84497174F388FDA403B899415F3729C825E7F753741CDC08D66FEC318
F4ACE1FBDAAD85BB8A31F20281267275F4AB88DC02E3050D55F714F441B73409
F339E67C954A941B31FEC074901D3343ED1D4D28A327FF490B7B73D35660B642
D8363B07D1BE14B5BC2CC9CF4D1A6EE39F275660D02196D153D0C3E90BE448CA
847EE7127504933763B9D32FB20D616574EFE595D315417C9352D58104DC13B7
A3460EA982F490F9E132F2E222E0B47F1439F5FF20D50DA787CC554B8D83BCFF
44EE3B67C34D1FA552407C97835DFDAB70FC4391E1B7EFF49CAD949F76135529
18939F79C3659CDED77678CDCEB9F81E60DCA591B5EB2D8C6A12300C088CC449
A1B3BE274F1F3E515D7AD3A53C30EC2EAC74A6162936B372F35642F099637138
55DE5D4C697C74A5CFDC99B5F903268ED71607AB03E869A6E96FB2711D2048E8
0C1AB2DC42DD11E591E91F581F8C9F2CF1096383CAF45C16115EF08D996954C7
1E00DBC219B2C123276AB966700ADF9B47D827B82BB5541C28A91C525205A76A
EAAB74DB7BBE835F6E8B9268B6760C941544F1E0C45F6EA5A8C41B594E58F214
CBD46CE9E9D10F47000482EBA4B32F93C10DF87F671A5426E64468012098A851
FAC0685F7AE6A6EFDD0CA64AA917A6A48119E8D8EFF12121E6B543F5DF552BBE
5BE65D20E1864E86B4B44739388555AD3D728A093A747F7D335EEC5A9D765416
FF51B86F4A43CD2D9331B1BA6FAF3FAE0C9A98F10329FEB56EF8CC851C551074
32D1473CC3C5FD31A14BA1B2AA661ECCCB77BAB1E882C97B9E647A3FEBFFCDE4
42426AD42BBF0CB1F4352AEAF13ABF87A46D17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYBTIP-Medium
%!PS-AdobeFont-1.0: XYBTIP-Medium 001.389
%%Title: XYBTIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:32 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYBTIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYBTIP) readonly def
/FamilyName (XYBTIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /d35 put
dup 36 /d36 put
dup 37 /d37 put
dup 38 /d38 put
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C68B75B8C6A2
18BEDF073A57F5212819DB38E30D9BA47521ABEBEAF35446353D5BFBD13F0FF3
5104C7E7B27F68240654E12DB59447C153C755A51AC2D8A60523ACBB0BBACF9A
605174A4E65D6320DB4B0B413999F0F132D46F188C11F9F61722C49616A2AA90
84ED72650D8EE114E75CDF80D98B0F86081110D9220DCEECAAD9E18B33AFB8C0
C81E5B7BEFD8BD70FB1666E4B0E60D68C76ABB487E9DF06F8C0854B04230C3A1
871520619EF605B65CD8EBCD33ED99BFD9AE77A5EF384F862E7F74302C0CD0B5
3D0CD2785C3898A10E23575E442E7F4E27F18C2C3EF3335AFBDCECFC630C93D2
42DB0D82F5E710E8B72F7A2C7A334BC02F848C8C796EB9B19E98407FFEC9DB8E
546FF05F254C41D701ACCD0EF56387CED4F569385655BBDC7794C5C087B2B26A
FDB1B5E75BACF169128194A648C42049D69A59FEF5447DE9D8D4DBE27460F06E
683DBC80CE204B1AB46B9CABA4D166D9721ADCC309AA5997B95BB0BC623F91A3
15024E6F218991959D281E104E7C93298D654D337CCEE6F26760A0DE5B7481B7
0C1E686727C7EF358E139EF8E33EFD761BD63CE9A7EFC7947291853C3AD8B9DB
42F1E81C42B108CF2879B9C5A99C82169FCEC9797911D43EE78A66B7BBDED558
FF3381F35658D25C3FCB9C4FF8D41AA291064E9EFDD63F79701AD21387D8F889
AA4D4BE9A7B77CCEFC6B5B563D78A08C52BA94D852C2993D9235708FAFE02144
E77CDB6F08D2E3773FD8B7D529F4B45382F3E6E6B701E1BA31FBF29C71674E10
94242E4486024D3F85ED159ABD20D9DF06296084EEFD45273DC14FF5F14377D7
5506A96D881AD3F6D51DD868484A5DE3B0D8C18390B2A2FC7F7449D981043EB8
B55EE334C43027A8AC3EAA5DFC660F68AFFC18CB10256BEC8230A00D3993A2B2
011F23203AF092A9101B44D4411C3D031EDDCC575FDD3597D959E95672485A1F
48AB44F5A97E70FD1031DA7DC6D0B3EBF92847B380B21B5A6B1E4ED580C62ED3
99D694B98D1619E2745A3DEDADD8BE44289054E9D84866163B8473F4607ABA9F
8E2CDAB8AD7AAF0C5ABAE4B64D27A318777CC73452A5014F30094C2B992137BB
B0E83229F52B51BB5D76684908CF438F16AA2F855084DF044CBEDD925E48C47A
7905ED8E678B0AD1E8B7B272E5AD8FE66E9F81183127A934AF55A5EFCBB67293
5E049CB377621610778155F2595C2139E0996A862C3C13370506E3E37C77F485
F8A2BE78B039602058AA50400404A954F4966218AB7C71C9442533EBA97282A9
0EF862B5EB63D02430B51D8C2854B565543DC0C680C6E876EEF707884F101696
241FAFC674F5CF11F536B72E36AB61513F33EC3CEE4867547911521C015B8A46
43302D52F2AED2853AEDD55E793DC3F1B4BA9DE3CB004F3B0358FF0D9B1FAE0C
FE93ED3F9D8C4F58344AD245E4C20E83C29A9D7421758D8C5E60623C4E57DF18
691503FC146F8EEC131449403854FA400D377D9465380D324C874F4AE58E524B
6F9EE2AFD7FCBD10259FA789C0530ECFD910510F745A72F8A7B334CAF8DEE750
C18D074F1885636A51BCB1244FAD8450171DDE6F56E46694DFC2BC2C525441FD
EA47193E94BD2BB790BB62EC80B5B0A28B1AB0D2D77108F2A23D98D9EA63486E
B7F66EFB961EF379059E21B55644320C002DF667D44510C0C6F721484273EEA4
61FC5328274D9CF525702C5C3EB3780CFAE85215E6C47CE6FACFD618109CE016
75AE68FA3A326AF8037935649F456E00AFC0A03CB7319145EA43F10D2D31670F
3FBE6D22402CDA46AD7E210082D64A8B3E9F0D6C972FDC37F1B9E0E99ECFCB81
B9FBC620CB68D2C2EA715CB116207672073DA9288E3DFA6C155553883A5AB945
CB5F28A7D21A01E906CC3042787749637457743E6E4605D712F1B93D81584595
101D40942A962F76C98D91355B19CCCA6BC89A05278B4BE77DA8EAFD7CEB5007
36B5DAF8737103D7286AD3673C642236A824C364F7C59279BD264EDE91F3A6AE
FC44C66418CB0E6D7C27195EC479AE21ADEE733FCD8309A8D54BE5F9B63AF812
BA15BF66877F06815695BF796EFAD388FC422FCB762AA0C250306315A6044BBB
61F8B3ACB72D201C432EA85893C5A53599E346F0B1CAB830FAD12A7A35B468B1
C2E85696D4F9439F433A2EE8C22F90D815D3AF75BC853B597AB43634846F66F7
70F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYATIP-Medium
%!PS-AdobeFont-1.0: XYATIP-Medium 001.389
%%Title: XYATIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:27 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYATIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYATIP) readonly def
/FamilyName (XYATIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /d35 put
dup 36 /d36 put
dup 37 /d37 put
dup 38 /d38 put
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C1848C9E83EB
8BC4A503624130F2632568342D516987E84088FEC7D823F0719B19EAC26EF619
6C4DEA4F593450E106FD3234BE1307FB0D93D305C419CAED51F295549FDBA441
5EA8D965CFF4CC48C0567333129B1781CDD7473FE9F231006E32433B94B6E4EE
7A6B010DE67402C3861DB9FFC57EFC00625BB337DCA4D54887DDC159E071059C
795D614DC19F65DAB6AA9F3C1649BD0AA3F1A941820229AED5887D23EFC80D9F
7CE6C0A60CB4E3B5DCFF3671C7722C2E115303C0B37028E584F11A091773C86F
DC03F457EC33A987A275963D9316AF4302101DC71ABC50904C23B5540F5EB3E4
4659FEBFDA7118DEA4F5653BBE4E09A43F8D6BB9AAB31D72EF202E1990E00763
63E5FC804136E6500EA8E454C1B45ABE01C39F83B614F3665FD18A53F2A8D88C
5DC2703EF4A5E6BD6CD87BA32F6ABCB96A75D769B74E0E0361FE54966AA0FA78
456937DFFFDA2ED807FF3CEEBA4D8635BC8BB3C9826C42D5A61AFB527E2346FB
9A0DEB66787284C96B6BD54110ABEDC6F5CB25496F2D7D7FF103602DBC2134A6
AD96357B2ED001DD02FB7DB2E80CDEC6F52F15548C2AB8430AC8907D7B3A9C9F
0B13907073BA09B096642F3E4CCC309B07D8EFE86A2949F304B999960E621450
C64D3DFBCFDE020F7511AD9145E0762B75EAE1ECC42E60CA8E05E9B0B9A98473
8B4877E4A4499426BED9C6B86120F28ABC64A2C0F0B9F8348946364AD469E75C
3923B20AA27F071081416DB3F0F9C09137FFB6617F2FC2BB60E3AB70FBF4B6FB
BD728B866307DCA478EC288F33E6EED97FF91EA2A00DA14002E454BEFE44D396
C0F4CACD46D0025426B350AAA724D57D88736C8B93AFA3239BF83BB80BF96BE9
0E6D63C3C8560FED54B116E1E492C9BEEC6C62782A7F5EBF0F0D8EDE89A1C9FF
8B0DADC372644F49185F616BDEB8CFBADF5B6EEA5B244FC48EF9FE9352E31241
51FFFB4AAE5FCBD9DA5E4DB8966CFA6BA8BD253BDCDAD9CF5C21AA93BA661EF2
C4E57ECAD9FA71B96C67E501D74CB29BBCFD1BF954EBA730A34DA0D0B21619B1
048053F1283A10F2DBD3D90B64C68B3B60B5FCD85907DF4AAD868CE0EB80ED71
B761ED6CEBC13CA9316538BC1D1F22532696A6676AAE0F233E4E2266D5EF964A
7AD7FCB1671EBB5213A5EC24EB61FBA1DBCCA4AC216ED7FBF579621482727B71
EC51A478D3206B6772DA229A8D4F4C9D9CCA78390E1E3289727E1F2E3A8E583C
DC35DD2B29AC825E799B7282F78B1C1156CA9C52257D5E06FBD32F1F0F10360B
CF9B325716F1C618EDF1808D87868D4488F300D071B198101B4EF339B304E3B8
820D282556AA2C5DB3BE6076E79F1AD2D5CC1247654836F18AE88B6F381C9861
2E2D60656B8D5EC679B8B80936068EAB2532404109F3B981B74D25F822024466
F28E9A3ACD5D126FD5A6DB767E65B630AAF27DDDA1560B6E7765BF028B30E727
44EB03DDC31A44618D2310E4782AE8006CED49ACC69DECF58A7793FD6B11E1E4
0A3A15AED59CC492C6664BD90F68CFAC6B39BA4E9DCA6F02019D8618447E4F9C
BA6762E83F470B11142846DD4EF8124DB8168227FCF78B82DC96036A44FEC450
A4900006F9863789002BD27B4A8D69F476831F1F9219D9CD7BDD208DD4549A8A
E888A7B2A6AB8F3730C49BAFF8ACD318E241A481252B3AA3470B58EA31974511
15CEF90A04D689E0DB6A71C7B1F40014F4E8960D1292B996BFC4736C3FCBC17B
66807338C501859BAD74CF943AAAC6A83C1880620C4168C8817033E4ECE5D706
12F4B21504DE43A3717B577BCF4D6B2CFDD62418E0E17E962DF54191D0067535
3252B0A008ECE1FA08B3CD80CB08A844AF7419EF3256E528F0D97692830A3E4D
519B7A630AF9B41461FCD5C37F466662F68F6443A97FDCD8EE1F929292D1A6D0
8212553A4082281F51C15B44D2D94F53619FB6AE77EEF98DC05F504F7C451670
330BE3B6329EB6BE4DE967E3D82F4F2B1D6D840BF1B33A7E54FDF66C22876847
E07F75D429462DF2F91ED177135275C90238B06A195653A34241E941A18B3C24
D34ACD27C6AC9ABE8D531559B47B9A0353E3A579EB5C36DC53DF44B1AB9DA64F
9C41E053D000572501207696826B690B40DC96FF496434EF9AF362F5CD95D7E7
6B5BA95A19FC829A2A7C3A53493548DF83
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D47BE08ED6CE96278050BA67680A3B973613647
A93FAEC756FC253B3693FA2D6491B276EF45751EFB306961788E7C15297A5822
AFC5A2DABD0DBBFF0BE135267EA6B9D1B4E4760ED14895FFE1F8C3F564830001
EFA901B8442BD2D98561BAB9A0FD939E0F856E4D2EB04A9A4496704109B8A84C
EA06AB0999427B3B1BE776004AE906D0F22159C051D88CF573A0255D99B56781
CF326CD11919AA40B096769CD6D0ADF3ACEC7957621084ACF21AF1F265416628
86B67FCBDE9370D4F5C6F5CC67EBB0A2727E074090DBCA459AFA1A4778AED4C9
AE5400775223E684BFCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.001
%%Title: wasy10
%Version: 001.001
%%CreationDate: Wed Jan 15 15:09:25 2020
%%Creator: Michael Sharpe
%Copyright: Glyph unchanged from version 2.0 were copied from the
%Copyright: wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
%Copyright: Glyphs that are new or changed are copyright (c) 2019--2020
%Copyright: by Michael Sharpe using mftrace as the starting point.
% Generated by FontForge 20190801 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /wasy10 def
/FontBBox {-23 -1667 1720 752 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright \050c\051 1998 by Taco Hoekwater. \012Glyphs that are new or changed are copyright \050c\051 2019--2020 by Michael Sharpe using mftrace as the starting point. ) readonly def
% Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
% Glyphs that are new or changed are copyright (c) 2019--2020 by Michael Sharpe using mftrace as the starting point.
/FullName (wasy10) readonly def
/FamilyName (wasy) readonly def
/Weight (Regular) readonly def
/FSType 0 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /Euro put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE30585F628C5960F4BA7A0E78D80B
EA23A0384400281199F7528220D2F21D031A35321A044226094B6ED6DB52413E
0BC02D4EAA6BB6C3D02F5D5E4983DFAE1209911A8DDC998656E07B4EEAEF13DE
50FAB8A7D9346FDBBBF1EAF791BE7E3B4BBA8D381C5C32DCB4436D5834A17B60
26188D4C558BC1ED012EA8DED9DF22A29EAE8673C46D0CFF7F5EB4080882EF91
2FF746A93A7B15CFC25341DED2CC7041F5D2FFCE348F17C86124EDBD259F3D7A
A299B032DF19B1C8C6EF386EE2B3655A09E37996670E1878051E7B77C73B0250
EFA23B7014FD87F1D8F38F07EC2ACAF188606F724E436A3D5B001AF774C0BBB2
3B48D49C1D59D3FB5768719967A1086B0C955D8E90D69C2C18593A7EF0CE7A9B
A82AFC9604DDF32B61B5220CEA41E570BF9F9BF018876411E06807D45AEBD705
125665794E0C88DFCBBC57A43A8F7747B4A09C3941DCC35D91F9E238DEE5F56F
4D6E6032FC16C459482F4E32286E48F60DA55F2B5B1B86F3C934052B798067D0
254ECF5D61EDF99B3A6D86DB44265F4545D81B7A002D62C32A22D311876DC636
1CDE6DEFB5164BC751EAFF248E4D6CAB3FCA084FF2565070A0129CAA66035751
8A94EC45A9827D8398C0CAA83B3D4B032C75896D666161D5FB3F6C8F13B692A8
ED5B89F4654956A01FCF6295D4EFF3C7269DD46C0D06362CF44C087C14B0F984
A6CC760D2E439EFC1EFCE34DAAE9C0B017F709E18F64E7762F92A2723CD0728E
11ADE47D1A7AD0B9B75624B220C906D34D1FDB479E312B51DA3721CEF9576B50
F00CE281CC5AC9CA854C150636E2A4BBF26C0CB72843B7E8978C6923B20DF073
7D15F9069ED5C3CE92F4C2AB437BCEAC02473A6E023091F026B8AF8FDE54045D
BA32607DAB9EBE64BB05DDA506E90BDC38D7A94015DBF365B3F727D14E612395
6675298F00239CAB003959FE119E726D4B10B063CE62B1E648DDE9E995ADE22B
AED269BC6481FAC38C9D66CBFB5FA8CC6840F18F49FCA60F6E8D93CD2FE35A98
CB61C80B2F424A61789815DA278578DE6755411E3159852E8A76A43932A489B5
A8C48972C22CBE66C9DAA6EC7F3C70760DC4384C7D5E552E41C9969113FE9B41
4C792F58801331862721CC920D6060DB63D12BBDDDE58C2B1CFC0D1CFCB7EADF
9D0AB31059712DFECD2A616D70DD0EE5E53514B474FFAA0B184BB85B618303E7
DA826C2B7D1CBAFD1645C06F9A00BC1FF1222F94937A87EE04C4684B0A121DA3
E26BD7272D71E93BF96376F11C750E53E6AE7E9915809A21512969ED830C6395
1395B0E6790CE19FF4896550A040821442A2EA1CD3AC4DC9A0B90419882F45C0
598E040B77E600BEC9FF9AC627A92638BDC359317492BA4BAB8B1F2CC6A5AFBF
E81F9CE51A6BA62D5CE57EFC9607693B47AFE3EA791B97EF8B73C7C234FCDFC9
70357D3E9B4D8D8F475BC7448C1B25929B019FDED75169DE66513CCC23D034A2
7EBF6E2D44E394667EF8D57924D4D1F874B89EDA39976CAB94B3D58EA6551D10
3F4DF6E795D36E5C468ACD33C7B78CDCAD0B29ED5145EF4D2CCC59706188D10C
712973EABECD7A3FF3EAA14767ACB0551E39C831ED5452E0088D4F1A826548B9
726B84209947D4BB01DCA1E29FD478879E7F845E833C3AD2E29A83260A53F64C
BD36FC42E14A07FAFEC1B14C54A53A5E2D852263D358E675B62F9E30FDDD384A
56440941B4C437D4418A7898667D111FD994ED002E2E9C6DD47FE9D3C7F1D6A8
E5040A87A39A0509FFE4884E63CA3C0434F07185D8026E5B93B8A50AF015C796
033F05AEC49175ADDD337E2C1E9CFE41838999960D874AE74B8EA0FA61DA9497
58AFFB7A98DBB36FF2693F4EA3B83C6331BE4677D1F5D8150F9A66002C4E37E8
4DD52CEDD41ED9B724D09B3E562CD93B50414D87AD378B7D0523536041FE0EC3
3A5C2343D7DD645BF1A70B6AF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB25783332BA57551CD78D79C802ED86245B0AEF9EE79
FE4AD5DDBC8AC5E400BC65AA5098854899BDB132956B7B058EBA3281B1DA0261
F7DDFCCCE244EF6E8C8D251E849321FE2DC55C542923370614897C30B247E1C1
91AF30B9E16ECFE5819E4FB0F6F593CEAABC2C85B02B37A8FF505BE1FAEA0CF0
B00E35685EC3AA0E606A89C7E6362AA22FEDA49B3BD0B0B7F71EA793E0C15C2F
92202040F95E97DD9B83E8797F8BBC480FA9D314650F4A4D5E2B983D5ADDEF8B
291C386143E6FECDE716FC5117135342E68D09CD435E392A6A2823657831DB12
A5D815080FE0674008A0AD0FF9FED8154DE4A72A6314E54395BBF726F0909442
73E1C2F5FF05D498C124BF0A962E290E4F1586B625B53B7C5CDAF36399A49A6F
4FF5BC5F996904E36279CAB17562096C255C63987A621C04C7860A4DA6654A84
BBFC50F15A9C99C0EFE948C58576081F34410F29457C455A6A32B6A302235825
1E86CC0CD96FC5E7819E44DE8716A2EA5394485C96847D1128DFB53BB2E2FC1A
2E9C72A308BA02F330BAFF42FCB3579CB6CFB106386C07DA3375D1408E68585A
B5F218ABF992520938055DECBFEBB843D296E77612FD181EE78688186743DB0A
6F90ADEAF899B491DC15C17FCB6BA97BDCA72C7652A89C04F95623C5108D98F8
6CC15D58F72275B9BB9ACBB87F796D86AA5E2CC5ED343F1BD91519C333540AC4
1D8A6728E403BD8C4E416B5B54D16105E69CE7288CC0E69FAC766B996FDA5D25
8A6A2295E900D7205D45EA4698F5482ABDDBCC456226080703D8749FC9F705D0
FE0F50B11CFEDA10526CD295555248E4454E88BE455017CC1C18813D74FC9F68
C106D0A804AE3DA845EA4A33511B47CC671E07791446F9E9E350A8AA982FBDA4
14A0648449BF594E3789E35E8AB95B06B81BDE74A62031812FD8660143EC63ED
EB70D4F7E864F897FEC13F6F4F920D5C808A5C99F19898AD5D77B66F45D98DD8
5AEBF789C9A3EDF62F8D188F20809FF23AC4B95AC1256B7DCCA0D750080FC0DB
D2A65BA72074BD65666143963E60399FE0041E7E81C90C34CD64453CB6087D65
343CA79088451E0260FEF706074446CE2FC494D2B867BF1D21A728BDD2FB6294
8EECDF3FCC1E589098EFFD75DA0DD648A764BEC82508222F0EE3CD323B86F7C0
22A92E7F1118BBCFE386CB2E941DFCE60C71E20321F93E7B747BD0F6FE9D645B
05468179AC6BA24261224F728990E3DC28EA61B8403198354DC5C16A97FDFD3D
AC5A6BF5F852DBF73EDA1BFCBC00ECC3D0E9E5FC8771BA038D736FF8C79D2C98
83689CF3026E90AA685A766C1433139D75F5892DE53E6410EB7F10A75017F34F
B850F26A5FE9015B470881549A38F403B6D8D0296ED00DF564E3B93CE18C17D7
8EB5D08ABD958E11F2DA633FBA91D9F208AD872216C209F9AB5B594958908F54
85DAB874D73B37437BD5441005321C699AC0A7A4DB5B62B1A74B7DB4EC2B55EC
21B9DFD06AE7C7DF31797A6F4C3F2D7E78999E218C70ABAA0E4B4D3DA15BFE8B
2061655520CFEFC456872DCFEA9A23DEC2DF8D68589B541EE02DB78D99D66F0F
50B55270E344F95B464D1201CF14357CBDA0443347D3BE9D35C97869D590777F
0DB3914B4BC224F6CB127AAC70CF96C0F72E9717B692652ACDE3A03E80133E2D
2432EE94D79A84C2050088FB77D2B5F5C2C8B487DB19775CBA4110CBD2BF6E12
CA1387AC2CACF43C47BFBFACE209705DAB52C47A089656CE15382390F1073F1B
61EB1502D64929BFB106181AC4AE735247443C7CA02789340D72F80E132FDD56
63895FA7EF605075EE1F68B6C6D9F7389E48968EC723C6ECED524A95C0C39E20
7FED583B1F84BD428DC3C92F99CB8EADEC06C2B70F128D6A4DABDFCB2969304C
409F6C5B15158C970A38634C54961BA2CABA9FBD2EA3D5A9AFB56EB18DD3BE91
59E567D1112B25F7E8138058B5A0E0963D0CD6B8FC4A449627C32643342AA024
9A6BB3824E930EA733E735A5E7C441BE9B41E54758ECDD0650073776D1EFE941
5A19E78E69505DD83EA858CDC79F9742058E8BBCBE9E9408EC43F9471B4B6678
A13A0DBB058C293BB4A1D1D9161B43C8C6741D805FE0D16382E94590CFF1D46F
A7AC9373D28BBE3339D7CF54F8E35FB2A3EAE667C941D0C4879D925B30EEF427
D26BA6B6754C2BB959F9270F77DDBC2BEB20710F727786A512E806CAB0779389
3F4B84A13F11425D158C40DEB7E0C94CAF9E0E605ABD0F73C1DDC59FE67B0EB8
7709727629C1AAD24FC217718DAB725672FF8DF4BFF1A7B0EC1A5ADF9E9E06F2
8A90E019C2FD3BA07154D1F83D82454A83734429C4C210A5B8BE0779DF12CAB0
53F3A82E4CAF7B184A429747ABA09AC81B6CA6306D03DB9E68B80534BF712A9B
07EDE637D6BC79BD595632905CD8B42F008E2C896BB88B0A8F0D83768FFFE676
5000BCE9A1A628102304F2F59A51809E106E6065F59E7F3AF5AFFEA1138F01FB
4737B89D23A93F4E276F3A8F40FC28A8CA329F6CC3FF5B108844F0C3C8435972
36A903ED359C0C635B437AEC8C29ACEC6A570C974DEDC6612AB65C1CD41798C7
6408CFEE4F016755D8DCE17FB1C4101D92E78065FD64BC056B6C6E7140733E56
DC109D35D454521E715BEC8F8C5BF6FC0B379F31D79095F8A0E1B6EF5562BF5C
5ABF51315628026C9B262C5BAF4AE40855E052CE13A6777AA3826435CFB2CD64
CDB2EFD7E802FE062ADAA2BFCD12B76397D56023EEDC6A1D084930052FCEEF97
E42F06062A929AC8B6930AE574EF0D3C96BFF9009628397E82CE6C2C40771F14
75B92B1E413DDEC854682E2E0788313E46C18AF378060BB39E499346B2E37CB7
56EB629FDD35736EA7255D81F62E47AADCB32BF788F7953F3E9AF473A7FB099D
3D6349F4F52DE538CCDFCF4BF223465975965843EE8BC8621836C0823239DA0D
CFF5FA6F6EE3FEB641B33A0B25A5ACCD0185ED8679A9B64DAD461652E3B2D6B3
8E8C5A324D31B9E9DA0FE7470CACB03E1B344E3B299B49B5A65638BC3F8B5152
FD312C2339F566E12D0783A7BEF609DC613AE1FE33E73AC45E7402C711D4CC35
763C2B61D2B29F0CE6897801B20AB2905B986C113C338E7B485BDA3DB4A41A1F
A667E7328E735DB9743B83CCC1B4DC56DBD9E080DE6ED387CBEFE56A4BA18D1A
F32C0D836DF5EC9AF8F12A09BE6393730E9182953C575C363FAE272E7701F26F
B3BD6EFBE783A69ADED472E963C4FB594F46A4DFD58143D7E93FD4820B84C8FB
725763040082383A5C8E404E5CF6BDD0638402D602A9644C80857D68F63A8FE0
29244AF2BC2908169D105E4738D64D62C7E4B3E06EA6FBE9F3002E56D88C433C
5CA5E618D61E60E2252303D8BACE0102ACA9C88F882E29F7513574BEA00E20AA
D0147814BF27FAF12A603AA2DF749FA1C113C5ADCC3340C7BC2658AAD8BDB89D
ADA5541D85FE964AAFB8B3A886423D1095B3676EE853A7D7754583639A1BCD32
5C78530B4675B669723240EF425736274052F301446379D93A84E87D22B2B8E4
8DD25F9E3F60F10CAB24A584DCC97AA2A1D7463ED69CAF062F90D3FDB1BB581F
F57DDBFF4A170C35D1CB9986F46EBEF1B1FEC4867AFCC7CF8CFBFB16FBEDE6EF
A3364E0CAA21E75E4E4259D1B6F287E72FF971C3640FE57CC518EF03DD0A4632
BBD84EEEF97F87C59290CBD78B9126A2243036B85F30B1D15B78C53B26867AAA
C218F7D297158E0BF374472B5C499E29AEB79355F8F3705152418BA6F4F7DE78
99B7C34A62A593FC18CF46CF304AFD3B91179FD995E5023DF38C6954DA65F162
A105CD4E367FAE47F5A0448E9D5A39141AAF70D238A20704AEF8CD37058F1CC0
903D76CEFB2BCA14A8319F302BA4F4C5709F6D806CFFCFC4E6EFA07A8A6DA352
4C88A9E3D1FAB6CD1B21B744CD55A2E1DAE2DE84BEB87CFB60A8DF8CF7B4AF6B
C2076434721451DC687839C5A8A658C9B86656C5F1FA3166ADDB5CB20693B029
E6942CC123CA62478537949FFAFFC5B4D2D81883A21AFCC8EC389FACADA30893
D24365A1D19CAA6D91259BDBFE8580A7EF7997464E57BE1B7BFB1475E6D22D97
C40FF5EA8280325F2A21B065600DBB29116D90EA1754B0F0A92C00DC7C725D0B
33DBB24BA46385F53FD965998C2C3FE8B27F5559C0B2FE8FF49E753051038033
03CD3CE2799F40F541FF2DC295AE9F340D5E4700AD99E61704AE2558AFA79FE6
AD8F3C7E4B3D8D636C58654C0D32CF8FBB2C8A2EDB25F39494094E398D816EE7
3DC17331388226B5C052756DB6D6B122BAB6D1FE57C3E9B70C39DF8F351E1509
B8BD6276ADADE8BAC470FFC12FB17F5FA640732510AC23802A8039FD3BE978BD
8B129AEF4A850A8F551940448715CC39D48C67443C4C5AF52902A5B6843748AC
5EC0B4DC2BA0FFFB8D48AF134F684D275FEF10D34491C8A266218502336A2F95
97E461E5A2EF03007432A6D7971824A4B1833CA14AB91B1027FDA86CF65CDAC3
4AC084B6A91223F1D52116B1697DCE7759EF0C24CE0D3D63D6A249814E1F8EFC
7B1F9E2579D68D3E938C8C15B9712494B0F84FC470E07AD608D1092A6928536D
D4FA06D1D00E822201763A1B45E8AECB82A793AD55F1D27FC5F16DF76A5DD43F
D062A50C0E368AF9ED2ED65CE2F5B15F8A61F20E2DCAECAF285C3FBF1A53CB33
8FE331B44E83D0F523312D89212889A061EAFD87E0B808857F24A3FF4883488D
476D4E7CF43DE8F3300A8A8B95375633D7D1377C0D013CCE0631663E230D0A9A
6DE669A80F6AB050CB3E74C7CE0C6918C7EF5B7A7233F62EE27B88F9818F791A
70802250D294379B638B8652673D451B160EA1277E25966075AB8D36BC6DD378
460E71C37928BA15AF41660910B48FAB5422C5A56CB6DF8524FD750AA124D171
C22295884677488AADC0E322925621D30115B6F54E3B94EDA0A940DA3730FA73
9F117C063DA2B21F5E97F57D5097A0915AD56CDE8071BA6DB857FAE57CF0E7EE
B0C14B3245C688EFD4D944DD8BBD09258A14A05A7CBCF9D74B72CB30302C9DFD
C77AF97A4F4A20164C48032236E5C8B8A9DDBFF8AAF0B89A98202A2087CC39A4
D98AE7F80E84757AEF97576EC7FC91FDB4F0A407E679147A7476DAE2FC80A9A1
DB2E339944CA758059FA024562C44C451D338E7E47A2EB2A05C799FD07482666
C61F054D8C429DA7974739AE99002116A593A43A2556A0D4E648240D872C0BE6
1544C2326BD2EDE7655C5BFD32FA1257A3E128E4B775E36C219531226ED166AF
E8AE202EEC55EDD26171F394D0A1E4D3E727B168BD31695A11CC691CE9632E97
B54E9B4DEF9D348B8C38A1B75DD571F6C2E21795634D70CDBF7D3D9E9D6B6704
310B269840592EA7361A8DB1AA2D11DEAA3714E2044F38542BBC5DB5A1080BA7
38D65EEBA914A5158CD4849962B1841F3E2E12BB91CB428012077754BA0AE6C3
8D5C2B084C2F596AC1A28D9AC50950FE544F4E52D1446648C6033025ADF6FC3A
B68C507C4C5DB9D1ECB790793CA2CC4037BCAD5E6A7BE320021EC11018CF238C
F8C95B02202F950CEB157992DC7BC4F5D033F3201D2A494B4A60C4B6AA0931F1
F17FE0D882FB8C6330A30AFEA399BB2E9B04862B4D2709B24E10F69A1D69BD45
5268F74187293D953BD70AF44BB32F9C2F750FC0A519E41A017ABBD99764199F
43CBA720C342540277D26CC3EB0E9F22433159BD52E079F0C21F4A4BF83492D1
676096F4960460CBB676F5234572A143531F4A3F9C4CEF188D73063F6ACB34A3
6947D272CB99AB85167527333748AC553712A3AE147AEBDDBADE226432BFD941
B3351F128C0632BB310B4D67130AD5D81C62943378B3975A654B28AF0A42BAB4
4E62225ABB4BA02B72FBDB9209162C84B62ABF7760B6EB83F15AF366220D2B6B
8877F7D65B1E3D3133C7200962256B85AA8408E2274F811DD9C51C35BBD4C1D7
EF7B8FE9F8697B41DEED474CE34BF7BD4F2E7C3CCABAAE0F68AE093CF80C19A7
3DE9B59D53B7BE5CB0BD793CC19807E21A6FE1A22EDC1BCC641E9CC8B89441B6
74DE079EE97EAD789E542253C0F9C07BDCC02101AFF3B90397E5EF69920365F3
21990C9F7124E291CB27BF223D7358A6A00E5AEFF157A69EF65E4111CBB13CC3
99AC152FA12A6FE2E4797BF8C2D534E669A162E422811A9046778ECB41B65240
C636DB8B2B892C457338A018B965C3EBB8EBB3586AEF5F4A2EF3158A09F3E26A
AC09689487F5D27B234163E66B9B5A0C8D10A6C3C2DDCF5DA974B234E6232BC7
98A170066E992C02C69EC148AF4245BFD547734D938D1804FDDF8F652C970D1F
53B0BC5F23DF3CB3392FF62B0E1E0C191B44E57647DC06D8D63F5802B8487616
6C8D2029E64605DF0564329854A9219F16E9BE170AD87D86CBA0A22A251ED1BE
CB87935862069141B1C0E6DDB815FD3D35E39A0EF6E7C69F1C0CE4000F3EC50C
9819A7490E99D75F55E041452C09A870D0F0889F77AA9337C25522EC3ABD5036
FF737A0D361D6FE24A5A456A11331C2FD7513F32F05EC5AF89F2DD165F4A03CD
56C00B890203ED6C1FC893294F84690F26999D6C3B175DF8D62C40F32C788ED1
DAD91DEA1C59E9A14E6A2AE2304D109A3ADDD70CB109D8018C4E198457CD2573
F5FC6D51A86C4610D4902351FADCEB23F38AB010CE0D596D2265A7C5C62972F1
B174C52E211A92B71D6DCE3774B6BE30324BC56D2C9200C5AA06D9ED1DA53DAC
2D1E354118C14F4D27F1890A7406C6FB1DB2166BBCC8585426A2E0B94F45A55A
7C6494195C06F09AD55960D1149905264A3BC46BB34D6EBB96B5021481D8908F
EC9886F99EB1FF3D51063F0B293D12E5797D3B3CC1AFCDF3D6D2F4DC26442C92
440B7E5DB06444DD85710693DE51B0D5E04C17D740BA9F13A263FE331CA64E35
DCE8FEF8A5F42473708C0957A97A173020D49598FCCCC6146E7B4808ACC2B41B
ED193C8AB345EB9B17B14B881DB3A7B975EA4762354A57CBA88A723EA32D237E
6ED8D23C3D92508FEF1D22D80C2CA4ADFCD3F5368420EF654A19018C5811D11D
1658CC398B89A932CF6586BF3E5D501EBA9E2DF0413547027AD40E05A24078F8
FA919F23A2F2CF48FF0CA96215E57C50D5DAABBC7C845487B8EDB0C04BBAA442
ADE2BB44DCE8622607B2BA3AAF130034D981AAF6D1583ED0BC88F4DEEFF7DB37
31D582786431FD05E330D0ACD7BD544B9A78FA0A1EDEC79949F5337EF82F1C41
61165E574298E63B56D20FECC97D620A208FBB70137448A679D75CB0F5716D80
4BE5590ADB5C73ABB97DDE04945D49836B6EA21CFAFA3C5603B4A299A174873D
6D8B5FC17038F55983732D56BED2F6CFC5344C1CB5971687E391AFCBC02B5E65
6614F3BBB07477C84311925B87D967F33FCF0AE6ABA98FCC778535767AC5DEBF
ADAD66E571CC0653F0C344DD52EBCA506B56B21C94594116E0ED70D4542350EC
3C94C649C19E6AF261C900070138E8C73B0B87D0FA405B2F289EDAC0A495CB3A
C168FB5811093E2C416E64196AAAFAD6A4E78DAE9264B058D39A0682C8252EAA
882042B8022157417E938F4D2320282D5A05E8056E1725B0D92691052F60B397
8F8A08429A2EED1F7F2086377AFD7EB570524209330F952E0666AF9AB3E83B51
837E57FCE14F0F474779B1B105F609F2D5D2420AEA3FA457A2B5292867A13234
E97B0AA1C672E2023E1F52279AE364E7FAFDDA92802CA43279E02760F34CF923
79560417F3D0E6CA78E8E3871417BA3CB379727B8F72CD960E0A227BCC8194EB
5809FF71BEE68AC17E42721DA4937B83C6F9803CB930CB22A9C04C96CD130C3C
83AC082C2C9BDB67AB6426322A046ABB565E2EC6364DF6E218EE5C8C232E9B1C
B309FCC36A7F2EFC8585C9272079E1DDC9F5E1BB3521EAF0A65F51A4A78FC2B5
0A224E057E2C203CA65BC233823665085CA1895F2FAAB9D83E1A457316D96EA9
4927D7A893731B17E2476F99BC485D1CC9167C7F909DCEF162734BC085913F0F
02C8B60F4D7C40D7B712298B4CFB83F121196637A87358C6C1A929FF87ED7468
BA8331768CE24E293DAF89CB20359AA3E136CE9BF1FB3D3775DA9B982227E3C3
E853E2FEAB14642F6EE9391A64AD9C7AB786BB027602CC252BACE70B526E18BD
B4EAEC427757048AEE68E5C4E64CBA520A027E216E1D84AF7649C3FA87917010
50A1DB9BCCD0CC4ABF16396A586610F633944D5267D9FFC192568EE43A9632DD
C321504EFA0E51ACAE7F5CFB6E2DFF264280ADF80961D71E2CA93C19B45F4865
BE3E3889CB14818E19DE76FDC3CD9831BE459BCEED8D80A4BA78B4262676EC35
197A7BA67F9C42F07C38BA3E68376992183BF6B996A877CFF424F9A7525B2562
91CA3F52F8702FA3D5FB28A8A1103B073569C89F1833DED4FAD150B44C3DD4E2
33478800B706C6445B955B0DE398A0FD2A3D2090A746FBD485BAEC75587B797B
F749EA844B4BF05EBAC592B8FCE8FC585E146B9CFE6C566DE91910F18DA30AD1
BC97D92B75E2802B6764B6E0CA20D59274928D5481ABD1C1D18CA5C5DCCFB814
A935A34B1FC9BCEA550E86185D7276A04C9BC4D8DB9EA0959B288EB4E436170B
AAC1542094E8A78937BC7CC677985B71F6282A8A17FD7CABE7F841CE9CE41F9D
586E0FBDB6E79358A8CE7B00A2E8B33E4404291E17DE655749E26E60949B0459
DA43B1A2A5CF912298968FBA2BF9FAF909E5D946231081D823FDE8A137F3FB56
AEE0A27C9A77B1647311C2A4AF759481F319AA50F05759E92FD3CD82346B95C1
D9042C749D715C965FCB65E4A4C5514F6DB7581D97491823882B73913843D925
C11D46E75E8AE7CFFE59F18F689842FE797BA4473720F58F80DCDDC04356ECBF
3317A2B5866BF2DF4275BA9A84C6A6255B044301093085443E2438288BAED26B
9D870CFCD99983A485C989B65370CC2FBC6057E28EE3348C0A9B4C146E164A73
A94366ABE12AB189072BEBB498D8F7098BC76CA1F25E0DD69315EE00BAC69265
CF4D86D91CAA01D15F539FC31CA7707EDED071F8FAF12394DF7EE2575E926B66
32224BE4537DA0FA7E03FD9353EAA3604E86F4C180EAA5FDB588D2612B015623
C9D9BD348C9B523591390D5AB4BF0E141D474CC7D5B0C78F21C722C0318582EF
AEAE9D9B03B2BD10E06159250B165F1EB6E4C1FF39E2804DBF9F6E2DB3441084
AA36C860609A5DEC2B5353AB2F02311548A337B7D1EE596E98104060043017B3
ED923F661E1071BA8483F29699EFB0CAB810D6DB590C626E61257B9CA29149E6
1DF4C75ADA3F1A5811E92B41EE3495E6BC048E44755B21D513D091BDA5AA5E6E
A005E5251150D4ADAFF7B26EF4C31958D58F53AAAF796B9FFA2AB4B6665DCB01
1595FB83586DACB628F3C6FE847954D298DCADB9D19C7961635089F5ED726D42
502E67A2A96662DF0BB982DE2C8C985456765A2E398720823182FFD95A51744B
DD8BBC5FF6F6B4E6B176F4413F9B9FA48D4DA0747B9A864EB1F6512A32C11F93
E76FCC5C42CAE9F1CE123DC8A3301485FD03CAED4D962218383EBED208AA9A84
2E441070DE2A827B641CD1B3B8E5EA269932442EDAB4BCA4BB45C49782EB6C88
467D82474484ED76327F50A5C7935303AD6D3FD56A5142B2E6999A3E906F6F84
386A0DC2B658C26AD39134D41DFD72E8AC2DD9A19DAB8DDA1DFDE5EB127CF6FE
C0A285D354207EB12980F70646162157C99B48A864EA103C3C80C4674698836D
50D265A34DAE1DDF8E867B6C8F778E8EFDCD06640CCB4B10E9E14AE1E34F34BC
CDD5EAC17A078C2205226026543291A5941FF5A10E985C06CAA73CB2E240110A
2FD0D45CA4B588B72720FFD143B221A5E9CC27B516C81FBF3D4D3ED20D7262AB
1F0677B49D02AA08ABFA2BAB2A1AD8F4364B8C7A630F0D3DF021BE0D84FF7712
1C250F9B6C1E2599554DA1578FBCB49FD0B1A273C1DFA62F55D62CB37E99A989
CA6ADCFEE6A980304B1300222A02DF36EF40F5C3D55A169EBE06A8E462A9334D
8DCF4CB7FC03E6135209E596C5727ED81446B5F93C238C29ACA64E3053703332
B1164850BD5128456B6AA311D5E9443C005CEF516B4535D34E950BEE93FCCD46
CD6181C42659C20EF060DF100588A5792495B722A652A14D28937B31239CF3A1
66C3C3B81C63F41A271DACCCC742D048E391D95453A1FA4D74B7CBD601429453
64ED2E391F08E5F4AA217A5B8C1AB7CF41D060A5C6E75A63F139A8BF47C4A047
E253DEFFF62C2B25E731770A883D5D0AD260F335E7F39CDA32AB6FEC1B5DCED2
94E8B18C7B8C412F4F99C4ED4E0472928548854D637C93EC4068B5ECB70F2C50
E01D5B529DF55C6FCA86DEE2A80FA74F48A3EC5ADDA9936D9B774F170FE16472
9D1B900ABA46B78CDD8789E1D35D4AD2FADFB285A859F1A0A62392D333A2CF40
580EFCCA85F9CFAB6514BFA932C6FC0F7739F1A395E36AEC39008113AE926C86
71B35695B721433517B58FB2627B4EB802422BDAC7F6980A02DBDD5F66AA6BCF
8680C7AE755857D51E6D78F0F14F63873EC9923789E13CC70948E66138E5304F
DC0F81C9CA1A0BB667335CAE5F1146DB230163A0C001E6C05B941882E64A0289
0FEF4808EBA67669C4B19FCE4C08CBA37D3BFA1F239FFC938BAF8FF5472F99CC
7AD881CD1245C9112FBF7353BB4A8A3D07D6D97403972B365B116F6ECF8A0145
B56208097FFE58FA2BC93A311A106BFFCADFE62CB1C4CD8BB1BDD7C4ED410F6B
3241E595079D7DAEDABA4741F36C0D29EAF116043325BE10094D4C195CF8E71C
E392DF43EB30C88DC97C1711BCF10381382FF9CA7779F500A35D56E221990C9F
71A738D903BC114E7092778259E791D5254A8E391ADE6CAF3D8DB4A5C0A92211
2381C573C14131352911A8E50004468C75EDC6A2DD418EB401D614AD73D3CE88
B1AB5D379DE30CEC09886490886629893E820A07E38120835B6714B0AE936947
365F6F25D2228D1B86139B8292F71D03C7F2C57E82F5F17A2190551D1C46AFE2
BD81E23DA886483D445D0714A98A7CFD56E213BEB567A28C966C3D59EC4B615A
6CC13CA82577AB92333388661F12BA348C9B5280EAFE1FCB031A9531C4F38A54
0ACB6313FD9D352D3A7BB0659B58D13BBD84E1216E6632D13EEE0E581049B03F
FAD23840E32D227A953532BF9D67C6FB3670F0CA366E48FD27E853B368E43C18
04BE1F62BC5F050397CCDEBCB93ED8893DF2338017D43C472CC0462FD1858299
59CC09CCF0FCE7E7293E53B2F9FD5EBB9A08F0F689A83788729B177CC5DED343
900B9D6D151B1EDF138181AB1CF328392E0BE21EE92FA7DDBCDCB2C473C56F54
0FFE8BCDBE3CAE303DDA7B54BE6D8143CC5187ECF4043DEBDFC0CA16ADFAAB5F
20443F3E18211D66726DDB067CA9BC2708F01B5D6F4E6060B9CAD6F07989F5BB
DB56995DBA78775A3A6F66CDBF3C81F4409445E21B741B5BEDEE368CA8B63B4B
920E187FF1FE6D531F8963984CCE5F200F633D3E50B5F9A2267DC59856970C85
743AA3787D2B8124FA9E957B2648C7EC5406DF4663F09A243EFB5F1CC88D6E64
91D7EB95ECF4787CF3C9BD93805C333447BDD1C16876367BAC1A98BBD49015A5
7ED0C3D67B610F01F0D4BCA8169009AC60C25D9D3EE940A78D3960105D54C7F3
0322FEEAEF9D663AD513B4B81CB89C4873D3954CD3F615BE883C519B630D93D2
8D521C1664AB21C48203C63AE7D56CEAD87AFEC50146CF28D54CF20363A4562F
B15C6F50C479A9CF0828C0A763EC983EB7D654152C9558319D356A7B269734CF
3A828F88713FB8009CCFD4F3DC54D583F3D972FC7D565C45261089E29C6E8961
2E96D09CF132829DAFF653300EE8B3C35F0DDA4D467E635D30AFA8AD60D7068D
6A3AF9812E57F4F2D842D5490250EB2CCCDBD479C48AA197CCDC61BE9787EC8E
3DD4CCF0B6BE7E22EF1F381C56E45AB036DFB8FAD18989FE719CF323F535F399
6CA0EB1C2DB4CB11884B70E90C646C5D388B3157D39E2ADF2B1B539C5AECFDD0
C11221AA26C0D4665C53A9A22E66277777F1DA316400AC3CDD3863596BFC9D3F
849A94B5989B5B6D262282A4898259FDC6D1541709F4E57B8B14C53BA2148CDC
D13B00FCF0866FD8D822178A4F93075F35E32DA35722C36EB0B65D43A3702FF5
593D8D88008E68A836D8F3FB9FE88FDB12E47FBFCD13202342AE99A1A0D38DBA
BD6980DFE1889A2F9DF46018B025F4AD0A09159E46EC8BC36BB9035BF0F0C55D
11BAFF020CFCE6D268E34547E71A75BACAB8C5A06C2C96AD808350CD0E8B8334
924B7CC84BB40D64FAC4C8572A5A86DAE2FDAE7934A91116A3757CF93210997A
5CC84D1EFF368CEF1ADB6C241833E2B3638F6F827E239216DA34D5E507339A17
C4CED2BF0F6338D116DD9FC7870C7DB23575718E0EED75AD1C4E000740D79A48
516E7B414394D8E02C05354A9D2A06EABFDB5DD0F34B0537DFB8E768FCA8B11C
293415E76D4DC6AEBE60D42EB29DDACD86FE8C02F0FD3F438F30E318D6107C33
48F125E65B419724A5AA1DD4F321E981E0D9A5A84B1A7C9DB16EBC16D6574500
9CB2825FCF2C7C181155E9EE02C022FC8C90B570AC0E968525D2118E36398E73
15E68AAD8949B140E48EFE365CA4289A7FDD6634337C29847DC87D3384F9C922
4896B9F740B5A106838F9C4F8F7103DC96CC96962CAB8A89B8C232AC6808797A
B5A181D53276EC02C26A4CBA0FA8F838BF7994340CA726A8081577D3DAF7B478
AFA260BE8A48AA90FDD0169ECB1EF3511D3819ECF6B7AFE760FC75A4245AB578
C233E2F847F82292868206650095E1C10EA06D296010A996054A44077F50AD49
3F48F3EF0E8DBAC4C1FF4EE1760D2762285520CF7FAB6FED67819E647B8FCC8A
EF53B88A0459C88FD3E11C74A30ADDB36F6FC9FB0DA1C65C9D67A7B2DC4ED68A
69A14449FE66AFBDFDCFBD83C5197415994206C6BE5B0F18261FA7B1CD7E2FF2
C12C4E6047B653EF181093CC458FA1B20C3D7569253D6314232B8622C5099D7F
5664938CDFBD717405722AE12832ADC265D892566E8DDCAF501AD9E43F52C65A
919C3625753115A9FE574583A414FD419967CC6DC554AAA940A36938C5C26645
0084C39B9AD3B9E34AE8FDE1F7A097394459C2E2B63DE4CEF7706CF404DF14F7
827A94C643960BC27A27EF4DD26A75398676D7A2ABC7B6E397BC837956CFC5C3
343C5D4ACE768D07FF65F7FFE57D467A851AFCA0CD63BB9FD863F8953A9CE9B5
24C6834C61D3B37CE965EF1895BACC3F523B2F544560FB8CF3907FE966A144D5
540842F855ADEE41824511C75DC7831D72291A1BAE8CCFF5F3F5D9EF33D16EA9
201EF0D2A1A58EA7195179A862D74031E3CB5644F98B33CF471CFB61E4C254CB
9702E3B21A5995B66EDB9756EC47BC4310044B891D8D6661ED6F5FAEB50D8E27
42E43F2CFC90AF237AA0CAA1DD8EEC5B444BB3BCB7B5956CBA69805F4A8F3058
14DF78D63DC33E2EA56A42D6DADE9218BC2875607BFBB7DF768DA663585E2C3D
AC130D980E4B0756417C5F1DEAB12097E56E29CF3B050C491A37881E57AD0882
85217061DEEEA1C2D2EAE18E9BD9C9B4F54C616A264198500ED0E028EB1A8C14
705556F8412C3509023B3CBE5BC3744037B7DEA83D3CDBE82B01249086D66D87
A4AEA6C5E4A3831F3F75B09CE86CE573389B5E0D4262237F9241E362F96FD0EB
CC49892D6C2031E76FD49AA2F2A4908D737E1C670CD9EF50F9CB5DF716580279
0F5362596D260F0D4392C16F33B4228A58B928A2C885A2305DD16444941E5FD7
734D15212A011E4FF3270A4E36914748F0FC64CC920F47E5A3D34128ED532486
C1D4E2E85FFC35031BAB22189EE1618C03926B62D916833E391E6AFC316984E7
2AACE6D1CB2FCB5378A60069D9CBEACF3950A4021AA8A6638019B31B2A064023
45E1EEC3B92DDF376060B845C21F9D0B5FD19BD8F1788DE4AFE8E81075995F63
0A15597778943C734F25CAA9C9E9C737374EB6E1E27E747B27AFB366944EF0E8
B3420E752B923DFF074923F1A20A9E481925DA1E42AB543EC03D53CD65FAB41B
3A86F37D1C46C32CFDA1536AA8C09FF100E7A8499FB2EB03B339C10B161F3E52
B25EE02565D9DE9BCA6FAD8A3308920A997EC9AFA0CAA97CA95EDD28AC505D2B
600CD10813FEFB9AEA7403A56A0AA48027C220C9FE8AFAE1D6B8658E08746E6C
DB29EA5678C98DE35EF2E2E1FB4F7958E4E008BBE71F2F7F8DA39368897DE9C1
0F1B698F8517FB8572CC7A3D813377E9FDF1695AAC036048427CC9A8EFA382C4
BF67BDD9145B8863A0023BBE828ED393C7BB5D16FD1841E437E67FF4683E29AA
F55864F11D934F0C08C80CE4B41AC94DFBD27FBFCAD63EEB84B75B4418F7B6E8
760C72C85C56FED4D2BB10DE5A9215C509E9D7C11C829CD21D7E13AF31AB1BD4
DB70441CCE2C8E6C0B7373B6CB9631EE73F6826D23990B5599DB03B108718FFB
493947AE50E833EFD5316F166407E4957E4E290B6E08849281CEE38CE2EDA9D8
2EB3706623CC3966F38EBE74AFEA224F2EF399F0D56A631C6980AC39B84FFD71
C7CD8DFFF862C7D27ECBD77F27A127235A6DE7467BCC96B2FB61B3435BB00418
99639FFACCD818DE947C26797EA4DD3EEF0434EDD9B70FE86199C2F20A1CE56B
0B613F62DA8AC9234170CDC28E59025120D31D556838A5E9B801FCB54034F725
D3C07827A57A26CC17CE71CBC6FD8742777012A3A40C396B8FCCA5E859F9FDFD
D1B4536DCA58F1A09F21468F6098825F36207590D5CCE55EBCD87F62D5805EFB
89937B82A6B956859F825CFAE7C0B2D9A209C1A868EEDD7F633D496CF77CF9D2
86003F93BF63894F8E12C5BBCAA8CF2986428D5B4211DE036351DAF042539EB2
69063BCDEE45CB64C1CFC2FC1E77A47876404D9E06AA26573E491D37105AD099
2186AF7D054338F8FFA201EEB9A1D6D195BFF9C5A19EF9C282C8B1E92DDD9862
CCC657856311BF9D2C378DD66BA232940EC02F88B4DEB5405B5E325DC3CDCB38
352D90E73DBC8CCDCBD82402871FE9C4BFC99A98F1CDBA6E2ACDFEFBF75C09FC
14891BB3F7AEC9ACC705B7D426C2EDB5C5CA92639021C58A6881F7C5E38A76C8
218D01C9CF6ACCB4A84653C8FAE7461FD1B227E0E968AA898AF11A5C50A87A05
BAE20511D83B977713462CB45968B8843321A814D2751DDFFB87798FB8A1D01A
DBEAA23EB4D3E96500125BDFF5E79E4D893F06B23FCA7E5E13670236D89D384C
1D6F7EF878A29F197BCF8213B6FDD4EA1534C9F7181FBA2F8A9860CA00D39AD6
C3BD8EB152FEEA6F606677FF563898A61CE32E9053D4F73E3C6116407E4CBC7D
DC2BCCF62097FCFB228BAD6601DB46D3147573208EEC1F5697F9CD610BF67BCB
520F38AE301941F9AF1830EE9B07024BA971FFF2BD93BC3607D6B5A52F8E3BD0
EACD329E3E703E1141F75F6470E9304BFDAF937594A1A76FAD8FA334F3CA4829
B88C3E4E3C2AB616223EB5D6DAD667F9D979163BB480234207D861EF66757994
A51B017A3FE3B4FB74FC564BCB45500725448767C1694DE5D28AE79F2200CA33
81F72FAA655444496D967575441094B81DFBE09932F94E59C0CBB3EB8065B65D
4C989EEE536F8B33B825210BE02C41FA72086AFC37D054FE571181E12C71586B
B3CFBA9A344269BC9E6023B84495691C2935BA35FCFC6C76A2603392B47D839B
917C3648E2F116315FB3D62E72A33F4527EA476B66D036CEEA9C17EC952B4EF9
57881AC2362F70A73F28A88113640788D67489BC49B8809F8957FF0C3B99B736
62CA7B6BFD031E8152645B16BA911A79E8B8B0D87C3D93D9B807FB6C4084EE3A
6AF1FA457ECCC8AAE61927A577B5D9DC00D96A6A0AC9A59725249A7A850BE5EC
E3AEFB5FC8A604D11FCA99E6F345FDD99976B4231FE791CDD8CE2190826569C8
799F881F60756F8FBA7CF235FFF852BD7389E37A7C406C89E0AAE558E536D96D
A431A8114216BC524BA52E03F6ADF5D040606155D818614E7FE2E5CA86D64DAE
60828528A746152557828A67C4873F3903AFBC1A7946F9360570EDA6D9223448
9FC17E901CF5778F75E6204D45BC65DFC85185F3115C7C9E0C2E8D91FE72DE2E
884FD35FEB31DD932579D3BB9D1037EC28105D21C6139C598254E5E99879EAD3
F67407345E001748D1C56849B09420258407AC5DFEE9CA4AD9DCAAEE782C2E49
E420717CF1F7D4C81A98ED486D8C75256D1F790D999CE1C3516536F37A7BCFB1
457D750B6A6150373AEA9C5E29FB6418F8C22966FABA06885941507E7B51081B
2E5CCF28E37064972F5620360D63BAD795EAB78AA959EAB12D7917F7ECCAC463
EF43FA16D335EDD5764BB7ADD6404A6DDCB5284204BE7F36657882785A809660
FF06247718D5170C0EB3988C8784A3986F698B929972A4478643E308F76E504B
B0B5C0F3D081791B49CF8EF044AB53B904618A63A68B18D2418F3629FDCA6A11
FFD20C416EFF1A4EC13DFEBDE186C20C3A8BCF572A843D607A859B1729F7F835
981C0D81B92DC99E14F886A2D71CC9173AC3BD84DE5A576B6250418BB185F1BF
496FA2946BE77BF4271DE1674159105724BFED12941E526624C29FA2A34E3805
E4A56704C7058A8485FBFF781FC52C6AE119312D1EF00E1A8FA5394F85473658
61566B837A08DDB4BBF8446D2793B84EC235A8237EF007F8B373BA0AEA82863D
D0293E91383415430775FD03770B4618980FCA174C6860C7487DEAA039C92721
6910EF4E855F5A9FE6B4DF392EE6FB36D02F97B0FCE8ADD226224CC5BF8F9C7D
EDF707E721744567E555CFA922DCA34D44D119165895E5C49948364C41C4FF1A
32AB0F9647770198AC34C2187583152A05ABF83AF30D8E07C1B685C06378D706
83CF44CEB169A49C68A03FA4CEEFEF9F97C69C3AB8469F17911B05AFC0BA2A06
090EF920AFB610654F30E751405B7DA1E9353D83BA77B1572457AA2C35CE9644
AC670C0011C02B5168A342DF46F3A6DD93827FB2847575724705FB7B040A3A7C
520B3D26CE2873559930465D90E84C04D8567936177107D7E831D174363A4AF1
C92D017B330B4C393E986E957C886EA811B4986D4A6A0A9F71B207E49A5F3E8F
AF58966B2F9F071A1E8F1F19A536EF164F84A0B2641D4DA10ADE87B8C87A502D
0031F0A13AA2580944EB6350D6BDD8A6A8BAFC48B38EE97A40F1037BFB065634
C32D2B2C8330A2CB8F5208D824A7FAF1E10F60FC3194C4F799F9DBE865EC22C8
AE3E2367D7A2BF1E3EE62B2E44C0352624F1AF0DFBA816C06B565D815ABFDA64
B248CCD01BA936999EDDCC2ADF336C87144F5B9AB824229778C9911F09DF509D
3CEBE3150025CD326C8371D3781AA6869BCBAB2418CD08597B08491313755DA0
1D56B04FF700DB47DE03A6A9617ACF0751EF90F9B29812B1DCE308A6053006E3
2BD5E05B442A8B4026492493E733768C0B7BF8ECB4D9E98982D088D777137DFD
E0499FF5F6BBA424364A444E578294C6916AA5ACC99B4D2B1052E326B7C08F96
01373C53344F14A4860BE00D5F0D9AFBA79A3B85B1BA73345C83F7D8AC5BC483
EAE510D5B8B5479CA81032FCD6FBAAA50B10E2E1F288B3358F22D55ECF45F84B
460E7E5587C5E9A8E7DF3A328FDC92D801A91CEDB510BFAC0C20C8F91C457EB8
8B01BA957A75DB232AFB379B772F02747DB6EDC28E0731266F292C823063E0B4
D38A30989E0D0DBE038B32DD587FFBB9409488FC160984AAAFB5629463B7899E
18A84B1B33B2A2A890BC4BFBD102F95AB55029A311B52817DEFF01A487E0CFC3
D84EA815C76533BB9D7BB94B242C35872E0967BD678C3D0A3CC9806ACBC79F0B
A64117D8AFD9F3BED91C5DB96A3779F716F10749EE31288F44E8CA0A4185381D
25CE783AA22AABE6E8C939B817B439C6CA6B9C62FFBB11248F88129D64F8E8A3
3A7BD57E64440AD273EAC8679ADC54FAED826E5910B6C0E8B9ED7CE4BF3B0490
5034A8FB31CC49DC866DCDC566C451FEBCF2904512F2D4253E71D5E60CCD1AE9
77EA3611203375D0441BE1D6922FEE2A6433932E1D1B3B7F91449353D3AC4C2E
E362E0E87291F06775BA9A2F6F32E466135136CEE0CC7ACDB5664DE7B314D6A4
F67CE0FCD6DE0F7708271D8C0F60B811A7C24A9C226921B23334017E72CA3371
F0E546DFF23D7C98953948B381392CC4FF9E042E15C02BBDC9D872EA2407A5E7
F3BE4336732EDF4BA8DC803C6E9F23520D7F9C9107B17F485C3C0853344F0CAA
BD81310870DED7E37F12B00EE6F226501F3CF4C02208DE5BD6DC400E83A2F87A
DEC205CF82B9D52E0C98594380D9B260B1679F21D5B4CC5584D097BA66791AA4
B5FD8639F91701E52195917BFBDA44DE100B93CAA1B8BB82D6512783102CED2D
A7CE90BFD70717100B810B0BFD69C06C821D01ADB37830470941D3CA868259D2
7788231238A047FC3C2A85B598ED5AD2497D9575D206D665629F5D7BB85DA7ED
830F0FF6E15DA292D7EC2E908546985ECE50C453E97AE607FD784E7C0B189AB1
12A743647A4F9979D8C8B50784B0AAD87C920221EB1DD1E3639F473B98E421C8
932826798D1A84A5AEFF419EA6EECE0BAB1BB5ECA370F55017A3E7FDE3ABAA0D
5721A1975023E5DDBDF5376C5C5D89F3BCAD69F7DAD005BAC65EEA2159C4AA41
EAE60433E094DC886C0AC7BB6696CAAFED0FDC4406D8D40F7D68DC0D51161C46
C1FC8B5D88A91CF84D9805D5F32EDB89B87F571C72928EBFD153D10C0688BB87
F87E7E5C14AEF8132769CCA2277BC0355BB013D1C7B6A86DF06E2C8346FCBFE7
B960F155C60A689D26EBFAAAEAD01617B9A7FE7E33B951112744FE5D2054C774
5447639522945055F4D80279F383D36986AE0383024F2F18D35C348077A14FC5
E658899D90CFE0F79F243B3E6601643D435C2DA5C9E6967FF8754E29D98C190E
5FA863A8F038FC558597AF8E8A34D6BACC866A1367010117423D00A8E755541C
4AAD8A7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesTechno.dvi)
@start /Fa 182[65 73[{}1 83.022 /MSAM10 rf /Fb 140[48
3[63 1[102 3[32 50[58 54[{ TeXBase1Encoding ReEncodeFont }5
109.987 /Utopia-Regular rf /Fc 138[32 1[23 3[31 33 1[15
2[16 32 28 1[27 3[28 29[37 35 10[28 1[28 28 28 28 28
28 48[{ TeXBase1Encoding ReEncodeFont }19 53.4661 /Utopia-Regular
rf /Fd 57[44 44 197[{}2 61.1042 /Fourier-Math-Symbols
rf /Fe 135[32 120[{ TeXBase1Encoding ReEncodeFont }1
61.1042 /Utopia-Italic rf /Fg 75[31 31 53[34 34 34 34
122[{}6 76.3801 /Fourier-Math-Extension rf /Fh 213[0
0 0 0 0 0 0 0 35[{}8 83.022 /XYBTIP-Medium rf /Fi 213[0
0 0 0 0 0 0 0 35[{}8 83.022 /XYATIP-Medium rf /Fj 58[42
33[42 1[42 161[{}3 58.049 /Fourier-Math-Symbols rf /Fk
141[19 12[26 101[{ TeXBase1Encoding ReEncodeFont }2 49.6466
/Utopia-Regular rf /Fl 221[90 34[{}1 76.3802 /fourier-orns
rf /Fm 135[30 5[23 32 2[36 23[37 1[35 6[53 5[41 3[38
67[{ TeXBase1Encoding ReEncodeFont }9 58.049 /Utopia-Italic
rf /Fo 21[31 31 31 44[27 15[27 14[54 35[30 1[31 37 21
27 24 36 37 35 38 56 17 1[17 18 37 32 19 31 37 30 37
32 17[47 2[35 2[21 13[16 3[32 1[32 32 32 32 32 32 1[16
1[16 4[17 36[37 2[{ TeXBase1Encoding ReEncodeFont }43
61.1042 /Utopia-Regular rf /Fp 139[20 25 23 2[33 1[54
3[17 2[19 30 37[23 5[31 31 31 31 31 31 31 31 31 31 3[15
44[{ TeXBase1Encoding ReEncodeFont }20 58.049 /Utopia-Regular
rf /Fq 242[83 13[{}1 83.022 /CMSY10 rf /Fr 205[36 36
49[{ TeXBase1Encoding ReEncodeFont }2 68.7422 /Utopia-Regular
rf /Fs 177[58 78[{}1 83.022 /wasy10 rf /Ft 134[36 39
1[39 47 26 1[31 43 1[41 47 4[24 2[24 35 1[34 43 43 10[49
1[46 41 2[47 1[58 70 3[26 1[54 1[46 58 50 48 7[20 58[{
 TeXBase1Encoding ReEncodeFont }28 76.3802 /Utopia-Italic
rf /Fu 159[44 96[{}1 76.3802 /Fourier-Math-Letters-Italic
rf /Fv 57[55 55 8[55 22[55 1[55 21 55 68[55 55 91[{}9
76.3802 /Fourier-Math-Symbols rf /Fw 4[46 1[46 9[22 22
3[39 39 39 38 4[40 1[40 22[46 8[49 4[34 15[34 14[67 5[38
31 8[78 17[37 39 37 1[38 46 26 33 30 45 46 44 47 70 21
40 21 22 46 40 24 39 46 38 46 40 3[25 1[25 47 3[48 60
47 41 49 58 46 58 60 72 43 50 27 27 61 56 44 46 60 52
49 49 1[30 1[44 1[20 20 40 40 40 40 40 40 40 40 40 40
35 20 30 20 44 31 27 27 21 54 64 3[18 29[47 47 2[{
 TeXBase1Encoding ReEncodeFont }96 76.3802 /Utopia-Regular
rf /Fx 22[40 40 30[48 80[40 1[40 48 28 34 34 46 47 45
49 72 24 2[24 48 41 26 40 46 38 46 42 12[48 1[52 1[50
1[56 6[55 45 48 59 1[52 7[21 43 43 43 43 43 43 43 43
43 43 1[21 1[21 4[19 39[{ TeXBase1Encoding ReEncodeFont }47
76.3802 /Utopia-Bold rf /Fy 22[57 57 30[69 80[57 1[57
69 41 49 48 66 68 64 70 104 34 2[35 1[59 38 57 67 54
67 60 12[69 3[71 11[85 14[62 62 62 62 62 4[31 4[28 39[{
 TeXBase1Encoding ReEncodeFont }33 109.987 /Utopia-Bold
rf /Fz 22[47 112[45 4[40 36 2[53 5[27 1[48 1[47 55 45
31[63 67[{ TeXBase1Encoding ReEncodeFont }11 91.6562
/Utopia-Regular rf /FA 22[68 68 81[66 32[80 45 58 51
78 1[76 82 122 37 2[38 80 69 1[68 1[65 1[69 16[79 2[125
77[{ TeXBase1Encoding ReEncodeFont }20 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Proportionnalit\351)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Droites et suites de nombres)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (\311tudes de fonctions)
/OUT pdfmark end
 -246
-246 a -246 -246 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Tableaux d'effectifs et probabilit\351s conditionnelles)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Taux d'\351volution, suites g\351om\351triques)
/OUT pdfmark end
 -246 -246
a -246 -246 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246 -246 a -246 -246 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246 -246 a -246
-246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246 -246
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 0 TeXcolorgray 700 166 a
FA(M)n(ath\351matiques)30 b(\226)g(P)n(r)m(emi\350r)m(e)h
(technologique)1496 577 y Fz(C)o(orr)q(ig\351s)18 b(des)j(exer)n(cices)
-246 937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end
 -246 937 a -246 937
a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246 937 a Fy(T)-10 b(able)22 b(des)h(mati\350r)n(es)p
0 0 1 TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a Fx(1)67 b(P)o(ropor)q
(tionnalit\351)472 1120 y
SDict begin 12 H.L end
 472 1120 a 472 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 472 1120
a 0 TeXcolorgray 3631 w Fx(2)p 0 0 1 TeXcolorrgb -246
1293 a
SDict begin H.S end
 -246 1293 a Fx(2)g(D)o(roites)15 b(et)h(suites)g(de)g(nombr)o
(es)871 1293 y
SDict begin 12 H.L end
 871 1293 a 871 1293 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 871 1293 a 0 TeXcolorgray
3232 w Fx(4)p 0 0 1 TeXcolorrgb -246 1466 a
SDict begin H.S end
 -246 1466
a Fx(3)67 b(\311)o(tudes)16 b(de)g(fonctions)563 1466
y
SDict begin 12 H.L end
 563 1466 a 563 1466 a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 563 1466 a 0 TeXcolorgray 3540
w Fx(9)p 0 0 1 TeXcolorrgb -246 1639 a
SDict begin H.S end
 -246 1639 a Fx(4)67
b(T)-7 b(ableaux)14 b(d)n('effectifs)j(et)e(probabilit\351s)g
(conditionnelles)1654 1639 y
SDict begin 12 H.L end
 1654 1639 a 1654 1639 a
SDict begin [/Subtype /Link/Dest (section.4) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end

1654 1639 a 0 TeXcolorgray 2406 w Fx(16)p 0 0 1 TeXcolorrgb
-246 1811 a
SDict begin H.S end
 -246 1811 a Fx(5)67 b(T)-7 b(aux)15 b(d)n('\351v)o
(olution,)g(suites)i(g\351om\351tr)q(iques)1209 1811
y
SDict begin 12 H.L end
 1209 1811 a 1209 1811 a
SDict begin [/Subtype /Link/Dest (section.5) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1209 1811 a 0 TeXcolorgray
2851 w Fx(18)p 0 TeXcolorgray 1930 5895 a Fw(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x Fy(1)105 b(P)o(r)o(opor)q(tionnalit\351)-246
-54 y
SDict begin H.S end
 -246 -54 a -246 -54 a
SDict begin 12 H.A end
 -246 -54 a -246 -54 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246
-54 a -246 -69 a
SDict begin H.S end
 -246 -69 a -246 -69 a
SDict begin 12 H.A end
 -246 -69 a -246
-69 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 -69 a 0 TeXcolorgray 90 x Fx(Ex)o(er)o(cice)14
b(1)p 0 TeXcolorgray 0 TeXcolorgray 147 w Fw(1.)p 0 TeXcolorgray
42 w(On)j(compl\350te)i(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)
p 0 TeXcolorgray 0 TeXcolorgray 1425 108 1258 4 v 1425
208 4 100 v 1478 178 a(\311l\350ves)p 2001 208 V 360
w(40)p 2340 208 V 268 w(?)p 2679 208 V 1425 211 1258
4 v 1425 311 4 100 v 1478 281 a(P)n(our)o(centage)p 2001
311 V 144 w(100)p 2340 311 V 219 w(70)p 2679 311 V 1425
314 1258 4 v -38 437 a(Il)e(y)f(a)i(40)10 b Fv(\243)g
Fw(70)g Fv(\245)g Fw(100)18 b Fv(\306)c Fw(28)k(gar)o(\347ons)f(dans)g
(la)h(classe)o(.)-246 471 y
SDict begin H.S end
 -246 471 a -246 471 a
SDict begin 12 H.A end
 -246
471 a -246 471 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 471 a 0 TeXcolorgray -141 566 a
Fw(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(un)f(tableau)g(de)f
(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1425 653 1258 4 v 1425 753 4 100 v 1478 723 a(M)o(ar)q(ins)p
2001 753 V 332 w(1)12 b(760)p 2340 753 V 167 w(1)g(046)p
2679 753 V 1425 756 1258 4 v 1425 856 4 100 v 1478 826
a(P)n(our)o(centage)p 2001 856 V 144 w(100)p 2340 856
V 228 w(?)p 2679 856 V 1425 859 1258 4 v -38 983 a(1)c(046)i
Fv(\243)g Fw(100)g Fv(\245)g Fw(1)e(760)20 b Fv(\274)15
b Fw(59,)8 b(43,)20 b(donc)d(environ)h(59,43)h(\045)e(des)h(mar)q(ins)f
(sont)h(tomb\351s)h(malades)o(.)-38 1147 y Fx(N.B.)f
Fw(On)e(fait)h(le)g(calcul)f(et,)h(seulement)i(apr\350s)o(,)f(on)e
(\351cr)q(it)g(la)h(r\351ponse)g(avec)g(le)f(symbole)h(\045.)g(R)o
(appelons)h(\340)e(cette)i(occasion)e(la)h(signi\002cation)-38
1246 y(de)g(59,43)j(\045)d(:)1604 1373 y(59,)8 b(43)19
b(\045)c Fv(\306)1969 1316 y Fw(59,)8 b(43)p 1969 1353
191 5 v 2003 1430 a(100)2183 1373 y Fv(\306)15 b Fw(0,)8
b(5943.)-38 1595 y(Donc)17 b(dir)o(e)f(que)i(59,43)i(\045)d(des)g(mar)q
(ins)h(sont)g(tomb\351s)g(malades)o(,)h(c)n('est)f(dir)o(e)f(que)g(la)h
(propor)q(tion)f(de)h(malades)g(est)3401 1539 y(59,)8
b(43)p 3401 1576 V 3435 1652 a(100)3601 1595 y(.)-246
1667 y
SDict begin H.S end
 -246 1667 a -246 1667 a
SDict begin 12 H.A end
 -246 1667 a -246 1667
a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 1667 a 0 TeXcolorgray -141 1747 a Fw(3.)p 0 TeXcolorgray
43 w(Le)22 b(fait)h(que)f(la)h(bouteille)g(soit)g(titr\351e)g(\340)e
(12)i(\045)f(vol.)h(signi\002e)f(qu)n('elle)h(contient)h(12)e(\045)g(d)
n('alcool)h(pur)-5 b(.)23 b(On)e(compl\350te)j(donc)e(un)g(tableau)h
(de)-38 1847 y(propor)q(tionnalit\351)c(:)p 0 TeXcolorgray
0 TeXcolorgray 1366 1934 1376 4 v 1366 2033 4 100 v 1419
2004 a(V)-5 b(olume)19 b(\(en)f(mL\))p 2060 2033 V 141
w(500)p 2399 2033 V 228 w(?)p 2738 2033 V 1366 2037 1376
4 v 1366 2136 4 100 v 1419 2106 a(P)n(our)o(centage)p
2060 2136 V 262 w(100)p 2399 2136 V 219 w(12)p 2738 2136
V 1366 2140 1376 4 v -38 2263 a(La)f(bouteille)i(contient)g(500)10
b Fv(\243)g Fw(12)g Fv(\245)g Fw(100)19 b Fv(\306)14
b Fw(60)k(mL)g(d)n('alcool)g(pur)-5 b(.)-246 2295 y
SDict begin H.S end
 -246
2295 a -246 2295 a
SDict begin 12 H.A end
 -246 2295 a -246 2295 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246 2295
a 0 TeXcolorgray -141 2392 a Fw(4.)p 0 TeXcolorgray 43
w(S)n(ur)18 b(100)g(personnes)h(de)e(l)o('entr)o(epr)q(ise)o(,)i(il)f
(y)f(a)g(56)h(hommes)o(.)-38 2506 y(25)g(\045)f(d)n('entr)o(e)h(eux)g
(fument,)h(ce)e(qui)h(r)o(epr\351sente)1566 2689 y(25)10
b Fv(\243)g Fw(56)g Fv(\245)g Fw(100)18 b Fv(\306)d Fw(14)j(personnes)
-38 2871 y(\(on)f(peut)i(bien)e(s\373r)h(fair)o(e)f(un)h(tableau)g(de)f
(propor)q(tionnalit\351)h(pour)g(obtenir)g(cette)g(r\351ponse\).)-38
2985 y(C)o(onclusion)h(:)f(les)g(hommes)h(fumeurs)g(r)o(epr\351sentent)
g(14)f(\045)f(du)g(personnel)i(de)e(l)o('entr)o(epr)q(ise)o(.)-246
3069 y
SDict begin H.S end
 -246 3069 a -246 3069 a
SDict begin 12 H.A end
 -246 3069 a -246 3069
a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3069 a -246 3087 a
SDict begin H.S end
 -246 3087 a -246 3087 a
SDict begin 12 H.A end
 -246
3087 a -246 3087 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246 3087 a 0 TeXcolorgray 97 x Fx(Ex)o(er)o(cice)d
(2)p 0 TeXcolorgray 0 TeXcolorgray 147 w Fw(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1435 3240 1239 4 v 1435
3340 4 100 v 1488 3310 a(N)n(ombr)o(e)i(de)h(personnes)p
2302 3340 V 145 w(4)p 2526 3340 V 144 w(6)p 2670 3340
V 1435 3343 1239 4 v 1435 3443 4 100 v 1653 3413 a(F)l(ar)q(ine)h(\(en)
f(g\))p 2302 3443 V 268 w(250)p 2526 3443 V 114 w(?)p
2670 3443 V 1435 3446 1239 4 v 1435 3546 4 100 v 1660
3516 a(Lait)h(\(en)f(mL\))p 2302 3546 V 276 w(500)p 2526
3546 V 114 w(?)p 2670 3546 V 1435 3549 1239 4 v 1435
3649 4 100 v 1779 3619 a(\214ufs)p 2302 3649 V 435 w(4)p
2526 3649 V 144 w(6)p 2670 3649 V 1435 3652 1239 4 v
-38 3761 a(P)n(our)g(6)g(personnes)o(,)j(il)e(faut)g(250)10
b Fv(\243)g Fw(6)g Fv(\245)g Fw(4)17 b Fv(\306)d Fw(375)19
b(g)e(de)g(far)q(ine)o(,)g(500)10 b Fv(\243)g Fw(6)g
Fv(\245)g Fw(4)17 b Fv(\306)e Fw(750)j(mL)g(de)g(lait)f(et,)h(bien)g
(s\373r)-5 b(,)18 b(6)g(\234ufs)o(.)-246 3794 y
SDict begin H.S end
 -246
3794 a -246 3794 a
SDict begin 12 H.A end
 -246 3794 a -246 3794 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 3794
a 0 TeXcolorgray -141 3890 a Fw(2.)p 0 TeXcolorgray 43
w(Les)g(6)g(yaour)q(ts)f(p\350sent)i(6)10 b Fv(\243)g
Fw(125)16 b Fv(\306)e Fw(750)19 b(g.)p 0 TeXcolorgray
0 TeXcolorgray 1541 3978 1027 4 v 1541 4078 4 100 v 1594
4048 a(masse)f(\(en)g(g\))p 2074 4078 V 102 w(1000)p
2339 4078 V 105 w(750)p 2563 4078 V 1541 4081 1027 4
v 1541 4181 4 100 v 1625 4151 a(pr)q(ix)f(\(en)h Fs(N)p
Fw(\))p 2074 4181 V 194 w(2)p 2339 4181 V 214 w(?)p 2563
4181 V 1541 4184 1027 4 v -38 4308 a(J)n(e)f(payer)o(ai)g(750)10
b Fv(\243)g Fw(2)g Fv(\245)g Fw(1)e(000)19 b Fv(\306)14
b Fw(1,)8 b(5)19 b Fs(N)o Fw(.)-246 4393 y
SDict begin H.S end
 -246 4393
a -246 4393 a
SDict begin 12 H.A end
 -246 4393 a -246 4393 a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246 4393 a 0 TeXcolorgray
114 x Fx(Ex)o(er)o(cice)14 b(3)p 0 TeXcolorgray 42 w
Fw(L)-10 b('\351nonc\351)18 b(donne)g(les)g(infor)q(mations)h(r)o
(ecens\351es)f(dans)g(le)f(tableau)h(ci-dessous)h(et)e(demande)h(de)f
(compl\351ter)i(la)e(case)3744 4504 y Fr(1)3721 4507
y Fq(\015)p Fw(.)p 0 TeXcolorgray 0 TeXcolorgray 1525
4619 850 4 v 1525 4718 4 100 v 1593 4688 a(F)o(lor)q(ins)p
1898 4718 V 118 w(7)p 2042 4718 V 113 w(?)p 2185 4718
V 2262 4685 a Fr(1)2238 4688 y Fq(\015)p 2371 4718 V
1525 4722 850 4 v 1525 4821 4 100 v 1581 4791 a Fw(Pistoles)p
1898 4821 V 107 w(6)p 2042 4821 V 1 0 0 TeXcolorrgb 103
w(4)p 0 TeXcolorgray 2185 4821 V 0 TeXcolorgray 2262
4788 a Fr(2)p 0 TeXcolorgray 2238 4791 a Fq(\015)p 2371
4821 V 1525 4825 850 4 v 1525 4924 4 100 v 1579 4894
a Fw(Deniers)p 1898 4924 V 112 w(?)p 2042 4924 V 1 0 0
TeXcolorrgb 104 w(5)p 0 TeXcolorgray 2185 4924 V 1 0 0
TeXcolorrgb 104 w(30)p 0 TeXcolorgray 2371 4924 V 1525
4927 850 4 v -246 5076 a(On)h(compl\350te)h(d)n('abor)o(d)d(la)h(case)
774 5073 y Fr(2)751 5076 y Fq(\015)g Fw(:)g(en)h(\351change)g(de)f(30)h
(deniers)o(,)g(on)g(a)f(4)10 b Fv(\243)g Fw(30)g Fv(\245)g
Fw(5)17 b Fv(\306)d Fw(24)k(pistoles)h(:)p 0 TeXcolorgray
0 TeXcolorgray 1525 5189 V 1525 5288 4 100 v 1593 5259
a(F)o(lor)q(ins)p 1898 5288 V 1 0 0 TeXcolorrgb 118 w(7)p
0 TeXcolorgray 2042 5288 V 113 w(?)p 2185 5288 V 0 TeXcolorgray
2262 5256 a Fr(1)p 0 TeXcolorgray 2238 5259 a Fq(\015)p
2371 5288 V 1525 5292 850 4 v 1525 5391 4 100 v 1581
5361 a Fw(Pistoles)p 1898 5391 V 1 0 0 TeXcolorrgb 107
w(6)p 0 TeXcolorgray 2042 5391 V 103 w(4)p 2185 5391
V 1 0 0 TeXcolorrgb 104 w(24)p 0 TeXcolorgray 2371 5391
V 1525 5395 850 4 v 1525 5494 4 100 v 1579 5464 a(Deniers)p
1898 5494 V 112 w(?)p 2042 5494 V 104 w(5)p 2185 5494
V 104 w(30)p 2371 5494 V 1525 5498 850 4 v -246 5646
a(On)f(peut)g(alors)g(compl\351ter)g(la)g(case)879 5643
y Fr(1)855 5646 y Fq(\015)g Fw(:)f(en)h(\351change)f(de)h(30)g(deniers)
o(,)g(on)g(a)f(7)10 b Fv(\243)g Fw(24)g Fv(\245)g Fw(6)17
b Fv(\306)d Fw(28)k(\003or)q(ins)o(.)-246 5731 y
SDict begin H.S end
 -246
5731 a -246 5731 a
SDict begin 12 H.A end
 -246 5731 a -246 5731 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 5731
a 0 TeXcolorgray 1930 5895 a Fw(2)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x Fx(Ex)o(er)o(cice)14
b(4)p 0 TeXcolorgray 0 TeXcolorgray 147 w Fw(1.)p 0 TeXcolorgray
42 w(G\351n\351r)o(alement,)20 b(dans)d(ce)h(type)f(de)h(question,)h
(il)f(vaut)f(mieux)i(conver)q(tir)e(en)h(minutes)p 0 0 1
TeXcolorrgb 2973 -163 a
SDict begin H.S end
 2973 -163 a -30 x Fp(1)3010 -163
y
SDict begin 12 H.L end
 3010 -163 a 3010 -163 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3010 -163 a 0 TeXcolorgray
Fw(.)p 0 TeXcolorgray 0 TeXcolorgray 1528 -86 1051 4
v 1528 13 4 100 v 1605 -17 a(temps)h(\(en)e(min\))p 2208
13 V 127 w(60)p 2392 13 V 134 w(?)p 2576 13 V 1528 17
1051 4 v 1528 116 4 100 v 1582 86 a(distance)g(\(en)h(km\))p
2208 116 V 103 w(20)p 2392 116 V 104 w(45)p 2576 116
V 1528 119 1051 4 v -38 230 a(On)f(mettr)o(a)h(60)10
b Fv(\243)g Fw(45)g Fv(\245)g Fw(20)18 b Fv(\306)c Fw(135)19
b(min,)g(soit)f(2)f(h)h(15)g(min)g(\(puisque)h(135)d
Fv(\306)e Fw(120)c Fv(\305)g Fw(15\).)-246 259 y
SDict begin H.S end
 -246
259 a -246 259 a
SDict begin 12 H.A end
 -246 259 a -246 259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246 259 a 0 TeXcolorgray
-141 353 a Fw(2.)p 0 TeXcolorgray 43 w(On)17 b(peut)i(se)e(passer)h(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351)i(:)e(1)h(h)d
Fv(\306)f Fw(60)k(min)q(,)f(donc)g(0,)8 b(6)19 b(h)c
Fv(\306)f Fw(0,)8 b(6)i Fv(\243)g Fw(60)20 b(min)15 b
Fv(\306)f Fw(36)k(min)q(.)-246 382 y
SDict begin H.S end
 -246 382 a -246
382 a
SDict begin 12 H.A end
 -246 382 a -246 382 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 382 a -246 382 a
SDict begin H.S end
 -246
382 a -246 382 a
SDict begin 12 H.A end
 -246 382 a -246 382 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 382 a 0 TeXcolorgray
-141 476 a Fw(3.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(On)f(compl\350te)i(deux)e(tableaux)h(de)g(propor)q
(tionnalit\351)g(\(on)g(tr)o(availle)g(en)g(min)g(et)g(en)f(km\))h(:)p
0 TeXcolorgray 0 TeXcolorgray 589 584 1072 4 v 589 684
4 100 v 665 654 a(temps)h(\(en)e(min\))p 1268 684 V 127
w(60)p 1452 684 V 144 w(?)p 1656 684 V 589 687 1072 4
v 589 787 4 100 v 642 757 a(distance)h(\(en)f(km\))p
1268 787 V 123 w(3)p 1452 787 V 124 w(0,5)p 1656 787
V 589 790 1072 4 v 0 TeXcolorgray 0 TeXcolorgray 2661
584 1011 4 v 2661 684 4 100 v 2737 654 a(temps)i(\(en)f(min\))p
3341 684 V 127 w(60)p 3525 684 V 113 w(?)p 3668 684 V
2661 687 1011 4 v 2661 787 4 100 v 2714 757 a(distance)g(\(en)f(km\))p
3341 787 V 104 w(15)p 3525 787 V 104 w(5)p 3668 787 V
2661 790 1011 4 v 145 949 a(S)n(t\351phane)i(nage)e(60)10
b Fv(\243)g Fw(0,)e(5)i Fv(\245)g Fw(3)18 b Fv(\306)c
Fw(10)k(min,)h(puis)f(il)g(cour)q(t)f(60)10 b Fv(\243)g
Fw(5)g Fv(\245)g Fw(15)17 b Fv(\306)d Fw(20)19 b(min.)-246
979 y
SDict begin H.S end
 -246 979 a -246 979 a
SDict begin 12 H.A end
 -246 979 a -246 979 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246
979 a 0 TeXcolorgray 4 1071 a Fw(\(b\))p 0 TeXcolorgray
41 w(S)n(t\351phane)g(a)e(par)o(cour)q(u)g(un)g(total)h(de)g(5)10
b Fv(\305)g Fw(0,)e(5)16 b Fv(\306)e Fw(5,)8 b(5)19 b(km,)f(en)f(10)10
b Fv(\305)g Fw(20)17 b Fv(\306)d Fw(30)k(min.)p 0 TeXcolorgray
0 TeXcolorgray 1610 1146 1072 4 v 1610 1245 4 100 v 1686
1215 a(temps)h(\(en)e(min\))p 2289 1245 V 137 w(30)p
2493 1245 V 114 w(60)p 2677 1245 V 1610 1249 1072 4 v
1610 1348 4 100 v 1663 1318 a(distance)h(\(en)f(km\))p
2289 1348 V 103 w(5,5)p 2493 1348 V 134 w(?)p 2677 1348
V 1610 1351 1072 4 v 145 1462 a(La)g(vitesse)i(mo)n(yenne)f(de)f(S)n
(t\351phane)j(sur)d(l)o('ensemble)j(de)d(son)h(par)o(cours)f(est)h
(donc)f(60)10 b Fv(\243)g Fw(5,)e(5)i Fv(\245)g Fw(30)18
b Fv(\306)c Fw(11)k(km/h.)-246 1542 y
SDict begin H.S end
 -246 1542 a -246
1542 a
SDict begin 12 H.A end
 -246 1542 a -246 1542 a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246 1542 a 0 TeXcolorgray
109 x Fx(Ex)o(er)o(cice)c(5)p 0 TeXcolorgray 42 w Fw(A)-5
b(vant)23 b(de)f(commencer)-5 b(,)25 b(il)e(est)h(utile)g(de)f(se)g(r)o
(appeler)h(que)g(10)g(cm=1)f(dm)9 b(;)23 b(et)g(que)g(1)h
Fu(`)19 b Fv(\306)h Fw(1)j(dm)3079 1618 y Fp(3)3114 1651
y Fw(.)g(A)n(utr)o(ement)h(dit,)f(un)g(litr)o(e)g(est)h(le)-246
1751 y(volume)d(d)n('un)f(cube)f(qui)h(mesur)o(e)f(1)h(dm)f(sur)h(1)f
(dm)g(sur)h(1)f(dm,)h(ou)f(encor)o(e)g(10)h(cm)g(sur)f(10)h(cm)f(sur)h
(10)g(cm)f(\(la)g(\002gur)o(e)f(ci-dessous)j(n)-6 b('est)20
b(bien)f(s\373r)-246 1850 y(pas)f(\340)f(l)o('\351chelle\).)p
0 TeXcolorgray 0 TeXcolorgray 1260 3032 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.1639 a add def
/d 0.0 a add neg def /h 131.45152 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 3032 a
1596 2767 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 56.90549 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 0.0 56.90549   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1596 2767 a
tx@Dict begin { 16.50264 -4.55254 } PutCoor PutBegin  end
 1596 2767 a 57 x Fw(1)g(dm)1596 2767 y
tx@Dict begin  PutEnd  end
 1596
2767 a 1596 2767 a
tx@Dict begin { -28.45274 32.4361 } PutCoor PutBegin  end
 1596 2767 a 57 x Fw(1)g(dm)1596 2767
y
tx@Dict begin  PutEnd  end
 1596 2767 a 1596 2767 a
tx@Dict begin { 76.82231 14.79555 } PutCoor PutBegin  end
 1596 2767 a 57 x Fw(1)g(dm)1596
2767 y
tx@Dict begin  PutEnd  end
 1596 2767 a 1596 2767 a
tx@Dict begin { 26.17647 35.28156 } PutCoor PutBegin  end
 1596 2767 a 57 x Fw(1)g
Fu(`)1596 2767 y
tx@Dict begin  PutEnd  end
 1596 2767 a 2640 3032 a
currentpoint initclip moveto
 2640 3032 a
-246 3239 a Fw(On)g(r)o(emplit)h(d)n('eau)g(un)f(aquar)q(ium)h(r)o
(ectangulair)o(e)e(dont)h(la)h(largeur)e(est)i(80)f(cm,)h(la)f
(profondeur)g(30)h(cm)f(et)h(la)f(hauteur)h(40)g(cm.)f(On)g(dispose)h
(d)n('un)-246 3339 y(robinet)f(dont)h(le)g(d\351bit)f(est)h(de)f(6)h
(litr)o(es)g(par)f(minute)o(.)-246 3379 y
SDict begin H.S end
 -246 3379 a
-246 3379 a
SDict begin 12 H.A end
 -246 3379 a -246 3379 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 3379 a 0 TeXcolorgray
-141 3473 a Fw(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
994 4699 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 255.20395 a add def
/d 0.0 a add neg def /h 141.11893 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 994 4699 a 910 4719 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 21.33955 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 106.69777 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 128.03732 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 213.39554 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 256.07465 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 85.35822 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 910 4719 a
tx@Dict begin { 122.08083 17.51845 } PutCoor PutBegin  end
 910 4719 a 57 x Fw(8)h(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 910 4719 a
tx@Dict begin { 19.8912 68.34283 } PutCoor PutBegin  end
 910 4719 a 57 x Fw(4)g(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 910 4719 a
tx@Dict begin { 236.70636 31.57625 } PutCoor PutBegin  end
 910 4719 a 57 x Fw(3)g(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 3113 4699 a
currentpoint initclip moveto
 3113 4699 a -246 4733 a
SDict begin H.S end

-246 4733 a -246 4733 a
SDict begin 12 H.A end
 -246 4733 a -246 4733 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246
4733 a 0 TeXcolorgray -141 4844 a Fw(2.)p 0 TeXcolorgray
43 w(Les)g(dimensions)h(de)e(l)o('aquar)q(ium)i(sont)f(:)1025
5009 y(largeur)c Fv(\306)g Fw(8)k(dm,)155 b(profondeur)14
b Fv(\306)g Fw(3)k(dm,)155 b(hauteur)15 b Fv(\306)f Fw(4)k(dm,)-38
5174 y(donc)f(son)h(volume)h(est)1795 5273 y(8)10 b Fv(\243)g
Fw(3)g Fv(\243)g Fw(4)16 b Fv(\306)e Fw(96)19 b Fu(`)p
Fw(.)-246 5313 y
SDict begin H.S end
 -246 5313 a -246 5313 a
SDict begin 12 H.A end
 -246 5313 a
-246 5313 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 5313 a 0 TeXcolorgray -141 5423 a Fw(3.)p
0 TeXcolorgray 43 w(On)h(peut)i(se)f(passer)g(d)n('un)g(tableau)g(de)f
(propor)q(tionnalit\351)i(:)e(le)h(d\351bit)g(du)f(robinet)g(est)h(de)f
(6)h Fu(`)p Fw(/min,)h(donc)e(il)h(faut)g(96)11 b Fv(\245)g
Fw(6)19 b Fv(\306)f Fw(16)j(min)g(pour)-38 5523 y(r)o(emplir)d(les)g
(96)g Fu(`)f Fw(de)g(l)o('aquar)q(ium.)p 0 TeXcolorgray
-246 5569 1757 4 v -154 5646 a Fo(1)q(.)p 0 TeXcolorgray
-76 5646 a
SDict begin H.S end
 -76 5646 a -76 5646 a
SDict begin H.R end
 -76 5646 a -76 5646
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -76 5646 a 0 TeXcolorgray Fo(Les)d(calculs)g(ne)g(sont)f(pas)h
(toujours)g(plus)f(faciles)i(en)f(minutes)f(qu)n('en)i(heur)o(es)o(,)f
(mais)g(c)n('est)g(g\351n\351r)o(alement)h(le)g(cas)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1930 5895 a Fw(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -246 -246 a 83 x Fy(2)105 b(D)o(r)o(oites)24 b(et)f(suites)f(de)
h(nombr)n(es)-246 -78 y
SDict begin H.S end
 -246 -78 a -246 -78 a
SDict begin 12 H.A end
 -246 -78
a -246 -78 a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 -78 a 0 TeXcolorgray 99 x Fx(Ex)o(er)o(cice)14
b(6)p 0 TeXcolorgray 42 w Fw(Le)21 b(tableau)h(suivant)g(donne)f(l)o
('\351volution)j(du)d(tir)o(age)g(jour)q(nalier)h(\(en)g(millions)h(d)n
('exemplair)o(es\))f(de)f(la)g(pr)o(esse)h(quotidienne)h(d)n('in-)-246
121 y(for)q(mation)18 b(g\351n\351r)o(ale)h(et)e(politique)j(en)e(F)o
(r)o(ance)o(.)p 0 TeXcolorgray 0 TeXcolorgray -246 217
4392 4 v -246 317 4 100 v -193 287 a(Ann\351e)p 330 317
V 604 w(2010)p 1092 317 V 602 w(2011)p 1855 317 V 603
w(2012)p 2617 317 V 602 w(2013)p 3380 317 V 603 w(2014)p
4142 317 V -246 320 4392 4 v -246 520 4 200 v -193 390
a(N)n(um\351ro)-193 490 y(ann\351e)h(:)e Ft(n)p 330 520
V 692 440 a Fw(0)p 1092 520 V 723 w(1)p 1855 520 V 722
w(2)p 2617 520 V 723 w(3)p 3380 520 V 722 w(4)p 4142
520 V -246 523 4392 4 v -246 622 4 100 v -193 593 a(T)m(ir)o(age)i(:)e
Ft(u)126 605 y Fm(n)p 330 622 V 642 593 a Fw(1,80)p 1092
622 V 622 w(1,73)p 1855 622 V 623 w(1,60)p 2617 622 V
622 w(1,47)p 3380 622 V 623 w(1,36)p 4142 622 V -246
626 4392 4 v 3593 696 a Ft(Sour)o(ce)f(:)i(INSEE)-246
857 y Fw(On)g(note)g Ft(u)100 869 y Fm(n)161 857 y Fw(le)f(tir)o(age)h
(jour)q(nalier)g(en)g(millions)h(d)n('exemplair)o(es)g(pour)f(l)o
('ann\351e)h(num\351ro)f Ft(n)t Fw(.)g(On)f(a)g(donc)g(:)p
0 TeXcolorgray -76 1000 a(\225)p 0 TeXcolorgray 42 w
Ft(u)46 1012 y Fp(0)96 1000 y Fv(\306)d Fw(tir)o(age)j(jour)q(nalier)h
(l)o('ann\351e)h(0)c Fv(\306)f Fw(1,)8 b(80)19 b(;)p
0 TeXcolorgray -76 1099 a(\225)p 0 TeXcolorgray 42 w
Ft(u)46 1111 y Fp(1)96 1099 y Fv(\306)14 b Fw(tir)o(age)j(jour)q
(nalier)h(l)o('ann\351e)h(1)c Fv(\306)f Fw(1,)8 b(73)19
b(;)p 0 TeXcolorgray -76 1199 a(\225)p 0 TeXcolorgray
42 w Ft(u)46 1211 y Fp(4)96 1199 y Fv(\306)14 b Fw(tir)o(age)j(jour)q
(nalier)h(l)o('ann\351e)h(4)c Fv(\306)f Fw(1,)8 b(36.)-246
1279 y
SDict begin H.S end
 -246 1279 a -246 1279 a
SDict begin 12 H.A end
 -246 1279 a -246 1279
a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 1279 a 0 TeXcolorgray 109 x Fx(Ex)o(er)o(cice)14
b(7)p 0 TeXcolorgray 42 w Ft(u)21 b Fw(est)d(la)g(suite)g(des)f
(multiples)k(de)c(4,)h(en)f(par)q(tant)h(de)f Ft(u)1788
1400 y Fp(0)1838 1388 y Fv(\306)d Fw(4)c Fv(\243)g Fw(0)16
b Fv(\306)e Fw(0.)-246 1429 y
SDict begin H.S end
 -246 1429 a -246 1429 a
SDict begin 12 H.A end

-246 1429 a -246 1429 a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 1429 a 0 TeXcolorgray -141
1523 a Fw(1.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p
0 TeXcolorgray 42 w Ft(u)129 1535 y Fp(1)179 1523 y Fv(\306)g
Fw(4)c Fv(\243)g Fw(1)15 b Fv(\306)f Fw(4)k(;)p 0 TeXcolorgray
7 1622 a(\225)p 0 TeXcolorgray 42 w Ft(u)129 1634 y Fp(2)179
1622 y Fv(\306)c Fw(4)c Fv(\243)g Fw(2)15 b Fv(\306)f
Fw(8)k(;)p 0 TeXcolorgray 7 1722 a(\225)p 0 TeXcolorgray
42 w Ft(u)129 1734 y Fp(3)179 1722 y Fv(\306)c Fw(4)c
Fv(\243)g Fw(3)15 b Fv(\306)f Fw(12.)-246 1747 y
SDict begin H.S end
 -246
1747 a -246 1747 a
SDict begin 12 H.A end
 -246 1747 a -246 1747 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246 1747
a 0 TeXcolorgray -141 1845 a Fw(2.)p 0 TeXcolorgray 43
w Ft(u)11 1857 y Fp(20)92 1845 y Fv(\306)g Fw(4)c Fv(\243)g
Fw(20)16 b Fv(\306)e Fw(80.)-246 1919 y
SDict begin H.S end
 -246 1919 a -246
1919 a
SDict begin 12 H.A end
 -246 1919 a -246 1919 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 1919 a 0 TeXcolorgray
115 x Fx(Ex)o(er)o(cice)g(8)p 0 TeXcolorgray 42 w Ft(u)21
b Fw(est)d(une)g(suite)h(telle)f(que)g(:)p 0 TeXcolorgray
-76 2134 a(\225)p 0 TeXcolorgray 42 w Ft(u)46 2146 y
Fp(0)96 2134 y Fv(\306)c Fw(2,)p 0 TeXcolorgray -76 2234
a(\225)p 0 TeXcolorgray 42 w(tout)k(ter)q(me)g(de)f(la)g(suite)i(se)e
(d\351duit)h(du)f(pr\351c\351dent)h(en)g(ajoutant)h(3.)-246
2276 y
SDict begin H.S end
 -246 2276 a -246 2276 a
SDict begin 12 H.A end
 -246 2276 a -246 2276
a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 2276 a 0 TeXcolorgray -141 2368 a Fw(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w Ft(u)129
2380 y Fp(1)179 2368 y Fv(\306)14 b Fw(3)c Fv(\305)g
Fw(2)15 b Fv(\306)f Fw(5)k(;)p 0 TeXcolorgray 7 2468
a(\225)p 0 TeXcolorgray 42 w Ft(u)129 2480 y Fp(2)179
2468 y Fv(\306)c Fw(5)c Fv(\305)g Fw(3)15 b Fv(\306)f
Fw(8)k(;)p 0 TeXcolorgray 7 2567 a(\225)p 0 TeXcolorgray
42 w Ft(u)129 2579 y Fp(3)179 2567 y Fv(\306)c Fw(8)c
Fv(\305)g Fw(3)15 b Fv(\306)f Fw(11)19 b(;)p 0 TeXcolorgray
7 2667 a(\225)p 0 TeXcolorgray 42 w Ft(u)129 2679 y Fp(4)179
2667 y Fv(\306)14 b Fw(11)c Fv(\305)g Fw(3)16 b Fv(\306)e
Fw(14.)-246 2691 y
SDict begin H.S end
 -246 2691 a -246 2691 a
SDict begin 12 H.A end
 -246 2691
a -246 2691 a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 2691 a 0 TeXcolorgray -141 2790 a
Fw(2.)p 0 TeXcolorgray 43 w(P)n(our)j(obtenir)g(le)h(tableau)g(avec)f
(un)h(tableur)-5 b(,)18 b(on)g(entr)o(e)f(la)h(for)q(mule)1945
2956 y(=B1+1)-38 3122 y(dans)f(la)h(cellule)h(C1,)f(et)f(la)h(for)q
(mule)1945 3221 y(=B2+3)-38 3361 y(dans)f(la)h(cellule)h(C2.)f(Ensuite)
h(on)e(\351tir)o(e)g(vers)h(la)g(droite)o(.)p 0 TeXcolorgray
0 TeXcolorgray -38 3464 4184 4 v -38 3563 4 100 v 105
3563 V 419 3534 a(A)p 778 3563 V 624 w(B)p 1451 3563
V 622 w(C)p 2124 3563 V 617 w(D)p 2797 3563 V 620 w(E)p
3470 3563 V 627 w(F)p 4142 3563 V -38 3567 4184 4 v -38
3666 4 100 v 15 3637 a(1)p 105 3666 V 363 w Ft(n)p 778
3666 V 631 w Fw(0)p 1451 3666 V 544 w(=B1+1)p 2124 3666
V 521 w Fv(\242)8 b(\242)g(\242)p 2797 3666 V 594 w(\242)g(\242)g(\242)
p 3470 3666 V 594 w(\242)g(\242)g(\242)p 4142 3666 V
-38 3670 4184 4 v -38 3769 4 100 v 15 3739 a Fw(2)p 105
3769 V 342 w Ft(u)446 3751 y Fm(n)p 778 3769 V 1096 3739
a Fw(2)p 1451 3769 V 544 w(=B2+3)p 2124 3769 V 521 w
Fv(\242)g(\242)g(\242)p 2797 3769 V 594 w(\242)g(\242)g(\242)p
3470 3769 V 594 w(\242)g(\242)g(\242)p 4142 3769 V -38
3773 4184 4 v -246 3834 a
SDict begin H.S end
 -246 3834 a -246 3834 a
SDict begin 12 H.A end
 -246
3834 a -246 3834 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 3834 a 0 TeXcolorgray 94 x Fx(Ex)o(er)o(cice)14
b(9)p 0 TeXcolorgray 42 w Fw(N)n(otr)o(e)i(objet)i(tombe)g(de)f(:)p
0 TeXcolorgray -76 4027 a(\225)p 0 TeXcolorgray 42 w(5)g(m)h(pendant)g
(la)g(1)570 4003 y Fk(r)o(e)631 4027 y Fw(seconde)9 b(;)p
0 TeXcolorgray -76 4127 a(\225)p 0 TeXcolorgray 42 w(15)18
b(m)g(pendant)g(la)f(2)610 4103 y Fk(e)653 4127 y Fw(seconde)9
b(;)p 0 TeXcolorgray -76 4226 a(\225)p 0 TeXcolorgray
42 w(25)18 b(m)g(pendant)g(la)f(3)610 4203 y Fk(e)653
4226 y Fw(seconde)9 b(;)p 0 TeXcolorgray -76 4326 a(\225)p
0 TeXcolorgray 42 w(35)18 b(m)g(pendant)g(la)f(4)610
4302 y Fk(e)653 4326 y Fw(seconde)9 b(;)p 0 TeXcolorgray
-76 4426 a(\225)p 0 TeXcolorgray 42 w(45)18 b(m)g(pendant)g(la)f(5)610
4402 y Fk(e)653 4426 y Fw(seconde)o(.)-246 4568 y(C)o(onclusion)j(:)d
(pendant)h(les)g(5)g(pr)o(emi\350r)o(es)g(secondes)o(,)g(l)o('objet)h
(est)f(tomb\351)g(de)1461 4734 y(5)10 b Fv(\305)g Fw(15)g
Fv(\305)g Fw(25)g Fv(\305)g Fw(35)g Fv(\305)g Fw(45)20
b Fv(\306)14 b Fw(125)19 b(m.)-246 4943 y Fx(R)o(emarque)e(:)j
Fw(Les)h(infor)q(mations)h(de)e(l)o('\351nonc\351)i(sont)f
(impr\351cises)h(:)e(si)h(l)o('on)g(n\351glige)g(la)f(r\351sistance)h
(de)f(l)o('air)h(\(frottements\),)h(un)e(objet)h(soumis)h(\340)-246
5043 y(son)c(propr)o(e)f(poids)h(tombe)g(de)f(4,9)h(m)g(pendant)g(la)f
(1)1334 5019 y Fk(r)o(e)1396 5043 y Fw(seconde)o(,)g(4,)8
b(9)i Fv(\243)g Fw(3)16 b Fv(\306)f Fw(14,)8 b(7)19 b(m)e(pendant)h(la)
g(2)2709 5019 y Fk(e)2735 5043 y Fw(,)f(4,)8 b(9)i Fv(\243)g
Fw(5)16 b Fv(\306)f Fw(24,)8 b(5)19 b(m)e(pendant)h(la)g(3)3763
5019 y Fk(e)3789 5043 y Fw(,)f(etc)o(.)h(Dans)-246 5143
y(l)o('exer)o(cice)o(,)g(nous)g(avons)g(r)o(emplac\351)g(4,9)h(par)e(5)
h(pour)f(simpli\002er)i(les)f(calculs)o(.)-246 5285 y(N)n(otons)c(par)g
(ailleurs)i(que)e(ces)h(r\351sultats)g(doivent)g(\352tr)o(e)f(for)q
(tement)h(corr)q(ig\351s)f(si)g(l)o('on)h(veut)g(tenir)f(compte)i(de)e
(la)g(r\351sistance)h(de)f(l)o('air)-5 b(.)15 b(P)m(ar)f(exemple)o(,)
-246 5385 y(un)24 b(adulte)g(en)f(chute)h(libr)o(e)f(qui)h(par)q(vient)
h(\340)e(se)h(mettr)o(e)f(\253)16 b(\340)23 b(plat)16
b(\273)46 b(devr)o(ait)24 b(arr\352ter)f(d)n('acc\351l\351r)o(er)g
(apr\350s)g(une)h(dizaine)g(de)f(secondes)h(de)f(chute)-246
5485 y(environ,)k(sans)g(d\351passer)f(60)h(m/s)9 b(;)26
b(tandis)h(qu)n('un)f(chat)g(ne)h(d\351passer)o(a)f(pas)h(les)f(20)h
(m/s)f(et)h(pourr)o(a)f(sur)q(vivr)o(e)h(\340)f(une)g(chute)h(d)n('une)
g(hauteur)-246 5584 y(impor)q(tante)o(.)19 b(La)e(vid\351o)p
0 1 0 0 TeXcolorcmyk 490 5586 a
SDict begin H.S end
 490 5586 a 0 1 0 0 TeXcolorcmyk
-2 x Fw(KEZ)q(AK)m(O)h(:)f(chute)h(libr)o(e)p 0 1 0 0
TeXcolorcmyk 1213 5527 a
SDict begin H.R end
 1213 5527 a 1213 5584 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.youtube.com/watch?v=RFbmabdbBC0)>>/Subtype
/Link H.B /ANN pdfmark end
 1213
5584 a 0 TeXcolorgray 17 w Fw(explique)i(ce)d(probl\350me)h(en)g
(d\351tail.)p 0 TeXcolorgray 1930 5895 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x Fx(Ex)o(er)o(cice)14
b(10)p 0 TeXcolorgray 41 w Fw(On)j(tr)o(ace)h(les)g(droites)f
Ft(D)938 -151 y Fp(1)988 -163 y Fw(:)h Ft(y)j Fv(\306)16
b Ft(x)f Fv(\241)10 b Fw(4,)19 b Ft(D)1415 -151 y Fp(2)1464
-163 y Fw(:)g Ft(y)i Fv(\306)14 b Fw(2)r Ft(x)5 b Fw(,)19
b Ft(D)1817 -151 y Fp(3)1866 -163 y Fw(:)f Ft(y)j Fv(\306)15
b(\241)p Fw(2)r Ft(x)g Fv(\305)10 b Fw(3)18 b(et)g Ft(D)2451
-151 y Fp(4)2501 -163 y Fw(:)g Ft(y)j Fv(\306)14 b(\241)p
Fw(2)k(\340)f(par)q(tir)g(de)g(quatr)o(e)h(tableaux)g(de)f(valeurs)h(:)
-246 37 y(T)-6 b(r)o(ac\351)18 b(de)f Ft(D)124 49 y Fp(1)159
37 y Fw(.)p -246 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
-3 119 551 4 v -3 218 4 100 v 52 188 a Ft(x)p 147 218
V 137 w Fw(0)p 345 218 V 158 w(2)p 544 218 V -3 222 551
4 v -3 321 4 100 v 54 291 a Ft(y)p 147 321 V 110 w Fv(\241)p
Fw(4)p 345 321 V 104 w Fv(\241)p Fw(2)p 544 321 V -3
325 551 4 v 105 521 a(0)10 b Fv(\241)g Fw(4)15 b Fv(\306)f(\241)p
Fw(4)105 646 y(2)c Fv(\241)g Fw(4)15 b Fv(\306)f(\241)p
Fw(2)p 0 TeXcolorgray 827 663 9 710 v 0 TeXcolorgray
873 37 a(T)-6 b(r)o(ac\351)17 b(de)g Ft(D)1242 49 y Fp(2)1278
37 y Fw(.)p 873 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
1171 119 441 4 v 1171 218 4 100 v 1226 188 a Ft(x)p 1321
218 V 109 w Fw(0)p 1464 218 V 103 w(2)p 1607 218 V 1171
222 441 4 v 1171 321 4 100 v 1228 291 a Ft(y)p 1321 321
V 110 w Fw(0)p 1464 321 V 103 w(4)p 1607 321 V 1171 325
441 4 v 1251 521 a(2)10 b Fv(\243)g Fw(0)15 b Fv(\306)f
Fw(2)1251 646 y(2)c Fv(\243)g Fw(2)15 b Fv(\306)f Fw(4)p
0 TeXcolorgray 1946 663 9 710 v 0 TeXcolorgray 1992 37
a(T)-6 b(r)o(ac\351)17 b(de)g Ft(D)2361 49 y Fp(3)2396
37 y Fw(.)p 1992 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
2262 119 496 4 v 2262 218 4 100 v 2317 189 a Ft(x)p 2412
218 V 109 w Fw(0)p 2555 218 V 131 w(2)p 2754 218 V 2262
222 496 4 v 2262 321 4 100 v 2319 292 a Ft(y)p 2412 321
V 110 w Fw(3)p 2555 321 V 103 w Fv(\241)p Fw(1)p 2754
321 V 2262 325 496 4 v 2256 521 a Fv(\241)10 b Fw(2)g
Fv(\243)g Fw(0)g Fv(\305)g Fw(3)17 b Fv(\306)d Fw(3)2256
646 y Fv(\241)c Fw(2)g Fv(\243)g Fw(2)g Fv(\305)g Fw(3)17
b Fv(\306)d(\241)p Fw(1)p 0 TeXcolorgray 3064 663 9 710
v 0 TeXcolorgray 3110 37 a(T)-6 b(r)o(ac\351)18 b(de)f
Ft(D)3480 49 y Fp(4)3515 37 y Fw(.)p 3110 67 425 5 v
0 TeXcolorgray 0 TeXcolorgray 3353 149 551 4 v 3353 249
4 100 v 3408 219 a Ft(x)p 3503 249 V 136 w Fw(0)p 3701
249 V 159 w(2)p 3900 249 V 3353 252 551 4 v 3353 352
4 100 v 3410 322 a Ft(y)p 3503 352 V 110 w Fv(\241)p
Fw(2)p 3701 352 V 103 w Fv(\241)p Fw(2)p 3900 352 V 3353
355 551 4 v -246 845 a(On)h(place)g(\340)f(chaque)h(fois)g(les)g(deux)f
(points)i(en)f(gr)q(is)o(,)f(puis)i(on)e(tr)o(ace)h(les)g(droites)f(en)
h(couleur)g(:)p 0 TeXcolorgray 0 TeXcolorgray 973 2633
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 235.4022 a add def
/d 0.0 a add neg def /h 202.12918 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 973 2633 a 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -91.04913 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 164.04189 0.0 -71.36032 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -68.28685 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 97.87788 0.0 -104.2513   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.04189  0 -71.36032  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -71.36032
 164.04189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-104.2513  def /maxTickline 97.87788  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.87788
0.0 -104.2513   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.04189
0.0 -71.36032 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 97.87788  0 -104.2513  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -104.2513
 97.87788  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-71.36032  def /maxTickline 164.04189  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.87788
0.0 -104.2513   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.04189
0.0 -71.36032 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1550 1865 a Fp(0)158
b(1)g(2)g(3)g(4)g(5)g(6)-1375 b Fj(\241)p Fp(1)-262 b
Fj(\241)p Fp(2)g Fj(\241)p Fp(3)1476 1787 y(0)1435 1976
y Fj(\241)p Fp(1)1435 2165 y Fj(\241)p Fp(2)1435 2354
y Fj(\241)p Fp(3)1435 2543 y Fj(\241)p Fp(4)1476 1598
y(1)1476 1409 y(2)1476 1220 y(3)1565 1768 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-4.--1.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768 a
tx@Dict begin { 101.38412 37.78546 } PutCoor PutBegin  end
 1565 1768 a 1 0.49803 0
TeXcolorrgb 53 x Ft(D)1628 1833 y Fp(1)p 0 TeXcolorgray
1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-0.--2.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1565 1768 a
tx@Dict begin { 31.32904 60.54774 } PutCoor PutBegin  end
 1565 1768 a 0.49803 0 1 TeXcolorrgb 53 x
Ft(D)1628 1833 y Fp(2)p 0 TeXcolorgray 1565 1768 a
tx@Dict begin  PutEnd  end
 1565
1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((--3.-2.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768
a
tx@Dict begin { 79.19249 -79.66798 } PutCoor PutBegin  end
 1565 1768 a 0 1 0 TeXcolorrgb 53 x Ft(D)1628 1833 y
Fp(3)p 0 TeXcolorgray 1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-2.-0.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768 a
tx@Dict begin { 91.04913 -34.14342 } PutCoor PutBegin  end
 1565 1768 a 0 0 1
TeXcolorrgb 53 x Ft(D)1628 1833 y Fp(4)p 0 TeXcolorgray
1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 0.0   false
NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 91.04913
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 68.28685  
false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 -22.76228
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 -91.04913 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 -45.52457
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 -45.52457 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2927 2633 a
currentpoint initclip moveto
 2927 2633 a -246 2816 a Fx(R)o(emarque)14
b(:)k Fw(La)f(droite)g Ft(D)567 2828 y Fp(4)619 2816
y Fw(est)h(hor)q(izontale)o(.)g(C'\351tait)g(pr\351visible)o(,)h
(puisque)g(la)f(valeur)g(de)j Ft(y)41 b Fw(\()p Fv(\241)p
Fw(2\))17 b(est)h(ind\351pendante)h(de)g Ft(x)5 b Fw(.)-246
2783 y
SDict begin H.S end
 -246 2783 a -246 2783 a
SDict begin 12 H.A end
 -246 2783 a -246 2783
a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246 2783 a 0 TeXcolorgray 180 x Fx(Ex)o(er)o(cice)14
b(11)p 0 TeXcolorgray 41 w Fw(On)j(lit)h(gr)o(aphiquement)i(les)e(or)o
(donn\351es)g(\340)f(l)o('or)q(igine)h(et)g(les)g(coef\002cients)g(dir)
o(ecteurs)g(des)f(droites)g(:)p 0 TeXcolorgray 0 TeXcolorgray
-246 5184 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.31767 a add def
/d 0.0 a add neg def /h 242.41748 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -246 5184 a 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 189.49536 0.0 -76.82231 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 169.57854 0.0 -72.83894   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 189.49536  0 -76.82231  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.82231
 189.49536  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-72.83894  def /maxTickline 169.57854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.57854  0 -72.83894  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -72.83894
 169.57854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.82231  def /maxTickline 189.49536  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 377 4676 a Fp(0)205
b(1)g(2)g(3)h(4)f(5)g(6)-1705 b Fj(\241)p Fp(1)-310 b
Fj(\241)p Fp(2)303 4598 y(0)261 4835 y Fj(\241)p Fp(1)261
5071 y Fj(\241)p Fp(2)303 4362 y(1)303 4126 y(2)303 3889
y(3)303 3653 y(4)303 3417 y(5)392 4579 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((-1.--2.*x)/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
-28.45274 0.0 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 28.45274 28.45274 -28.45274   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
28.45274 28.45274 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 85.35823 56.90549 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
85.35823 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 142.26372 85.35823 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 392 4579 a
tx@Dict begin { 71.13185 158.76636 } PutCoor PutBegin  end
 392 4579 a 0 1 0
TeXcolorrgb 53 x Ft(D)455 4644 y Fp(1)p 0 TeXcolorgray
392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a 392 4579 a
tx@Dict begin { 30.15984 -9.67383 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1
TeXcolorrgb 51 x Fv(\305)p Fw(2)p 0 TeXcolorgray 392
4579 a
tx@Dict begin  PutEnd  end
 392 4579 a 392 4579 a
tx@Dict begin { 58.61258 58.0434 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb
51 x Fv(\305)p Fw(2)p 0 TeXcolorgray 392 4579 a
tx@Dict begin  PutEnd  end
 392 4579
a 392 4579 a
tx@Dict begin { 87.06532 115.51807 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb 51 x
Fv(\305)p Fw(2)p 0 TeXcolorgray 392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a
392 4579 a
tx@Dict begin { -53.49129 -24.185 } PutCoor PutBegin  end
 392 4579 a 1 0.49803 0 TeXcolorrgb 420 4664
a Ft(b)18 b Fv(\306)d(\241)p Fw(1)p 392 4582 283 4 v
392 4691 4 111 v 671 4691 V 392 4693 283 4 v 0 TeXcolorgray
392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.25842
108.68968 134.29698 77.96066   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
392 4579 a
tx@Dict begin { 120.0706 76.82231 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb 422 4658
a Ft(a)j Fv(\306)d Fw(2)p 392 4582 230 4 v 392 4685 4
105 v 618 4685 V 392 4687 230 4 v 0 TeXcolorgray 392
4579 a
tx@Dict begin  PutEnd  end
 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1965 5184 a
currentpoint initclip moveto
 1965 5184 a 0 1 0 TeXcolorrgb 591 5521 a
Ft(D)654 5533 y Fp(1)704 5521 y Fw(:)j Ft(y)j Fv(\306)p
0.49803 0 1 TeXcolorrgb 15 w Fw(2)p 0 1 0 TeXcolorrgb
2 w Ft(x)p 1 0.49803 0 TeXcolorrgb 5 w Fv(\241)p Fw(1)p
0 1 0 TeXcolorrgb 0 TeXcolorgray 591 5646 a Ft(D)654
5658 y Fp(1)704 5646 y Fw(:)d Ft(y)j Fv(\306)15 b Fw(2)r
Ft(x)g Fv(\241)10 b Fw(1)p 0 TeXcolorgray 1946 5676 9
2596 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1992
5184 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.31767 a add def
/d 0.0 a add neg def /h 242.41748 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 5184 a 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 189.49536 0.0 -76.82231 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 169.57854 0.0 -72.83894   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 189.49536  0 -76.82231  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.82231
 189.49536  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-72.83894  def /maxTickline 169.57854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.57854  0 -72.83894  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -72.83894
 169.57854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.82231  def /maxTickline 189.49536  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2614 4676 a Fp(0)205
b(1)g(2)h(3)f(4)g(5)g(6)-1705 b Fj(\241)p Fp(1)-309 b
Fj(\241)p Fp(2)2540 4598 y(0)2499 4835 y Fj(\241)p Fp(1)2499
5071 y Fj(\241)p Fp(2)2540 4362 y(1)2540 4126 y(2)2540
3889 y(3)2540 3653 y(4)2540 3417 y(5)2629 4579 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((--4.-1.*x)/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2629 4579 a
tx@Dict begin { 113.81097 15.93346 } PutCoor PutBegin  end
 2629 4579 a 0 1 0
TeXcolorrgb 53 x Ft(D)2692 4644 y Fp(2)p 0 TeXcolorgray
2629 4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { 30.15984 101.29169 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x Fv(\241)p Fw(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { -50.64584 127.46815 } PutCoor PutBegin  end
 2629 4579 a 1 0.49803 0
TeXcolorrgb 2658 4664 a Ft(b)18 b Fv(\306)c Fw(4)p 2629
4582 228 4 v 2629 4691 4 111 v 2853 4691 V 2629 4693
228 4 v 0 TeXcolorgray 2629 4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579
a
tx@Dict begin { 102.99878 104.13713 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1 TeXcolorrgb 2660 4658 a Ft(a)k
Fv(\306)c(\241)p Fw(1)p 2629 4582 285 4 v 2629 4685 4
105 v 2910 4685 V 2629 4687 285 4 v 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
113.81097 0.0 113.81097   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 85.35823 28.45274 113.81097   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
85.35823 28.45274 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 56.90549 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
56.90549 56.90549 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 28.45274 85.35823 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2629 4579 a
tx@Dict begin { 58.61258 72.83894 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x Fv(\241)p Fw(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { 87.06532 44.3862 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x Fv(\241)p Fw(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 78.5294
70.56267 107.55133 87.06532   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4203 5184 a
currentpoint initclip moveto
 4203
5184 a 0 1 0 TeXcolorrgb 2811 5521 a Ft(D)2874 5533 y
Fp(2)2924 5521 y Fw(:)k Ft(y)j Fv(\306)p 0.49803 0 1
TeXcolorrgb 14 w(\241)p Fw(1)p 0 1 0 TeXcolorrgb 3 w
Ft(x)p 1 0.49803 0 TeXcolorrgb 5 w Fv(\305)p Fw(4)p 0 1 0
TeXcolorrgb 0 TeXcolorgray 2811 5646 a Ft(D)2874 5658
y Fp(2)2924 5646 y Fw(:)d Ft(y)j Fv(\306)14 b(\241)r
Ft(x)h Fv(\305)10 b Fw(4)p 0 TeXcolorgray 1930 5895 a(5)p
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -232 1213 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.11636 a add def
/d 0.0 a add neg def /h 175.66972 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -232 1213 a
172 215 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 7
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 207.4672 0.0 -48.64917 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 55.52097 0.0 -120.14876   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 207.4672  0 -48.64917  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -48.64917
 207.4672  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-120.14876  def /maxTickline 55.52097  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 55.52097
0.0 -120.14876   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 207.4672
0.0 -48.64917 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 55.52097  0 -120.14876  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -120.14876
 55.52097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-48.64917  def /maxTickline 207.4672  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 55.52097
0.0 -120.14876   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 207.4672
0.0 -48.64917 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 157 312 a Fp(0)205 b(1)g(2)g(3)h(4)f(5)g(6)
-1705 b Fj(\241)p Fp(1)83 235 y(0)41 471 y Fj(\241)p
Fp(1)41 707 y Fj(\241)p Fp(2)41 943 y Fj(\241)p Fp(3)41
1180 y Fj(\241)p Fp(4)83 -2 y(1)172 215 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((-2.--0.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 172 215 a
tx@Dict begin { 120.45352 25.96893 } PutCoor PutBegin  end
 172 215 a 0 1 0 TeXcolorrgb
54 x Ft(D)235 281 y Fp(3)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a 172 215 a
tx@Dict begin { -42.67911 -40.79662 } PutCoor PutBegin  end
 172 215 a 1 0.49803 0 TeXcolorrgb 200
301 a Ft(b)18 b Fv(\306)d(\241)p Fw(2)p 172 219 283 4
v 172 328 4 111 v 451 328 V 172 330 283 4 v 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a 172 215 a
tx@Dict begin { 110.05553 -65.44139 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb
202 295 a Ft(a)j Fv(\306)d Fw(0,)8 b(5)p 172 219 299
4 v 172 332 4 116 v 467 332 V 172 334 299 4 v 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
-56.90549 0.0 -56.90549   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 -42.67911 28.45274 -56.90549   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
-42.67911 28.45274 -42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 -28.45274 56.90549 -42.67911   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
-28.45274 56.90549 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 -14.22636 85.35823 -28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 172 215 a
tx@Dict begin { 31.86693 -48.36957 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1
TeXcolorrgb 51 x Fv(\305)p Fw(0,)g(5)p 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a 172 215 a
tx@Dict begin { 60.31967 -34.1432 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb
51 x Fv(\305)p Fw(0,)g(5)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a 172 215 a
tx@Dict begin { 88.77242 -19.91682 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb 51
x Fv(\305)p Fw(0,)g(5)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 102.43004
-30.15984 119.90607 -59.75093   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1895 1213 a
currentpoint initclip moveto
 1895 1213 a 0 1 0
TeXcolorrgb 557 2209 a Ft(D)620 2221 y Fp(3)669 2209
y Fw(:)19 b Ft(y)i Fv(\306)p 0.49803 0 1 TeXcolorrgb
14 w Fw(0,)8 b(5)p 0 1 0 TeXcolorrgb 4 w Ft(x)p 1 0.49803 0
TeXcolorrgb 5 w Fv(\241)p Fw(2)p 0 1 0 TeXcolorrgb 0
TeXcolorgray 557 2334 a Ft(D)620 2346 y Fp(3)669 2334
y Fw(:)19 b Ft(y)i Fv(\306)14 b Fw(0,)8 b(5)r Ft(x)15
b Fv(\241)10 b Fw(2)p 0 TeXcolorgray 1946 2363 9 2610
v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1992 1841
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.1333 a add def
/d 0.0 a add neg def /h 240.28926 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 1841 a 2545 878 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 195.47107 0.0 -66.66223 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 124.31186 0.0 -115.9774   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 195.47107  0 -66.66223  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -66.66223
 195.47107  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-115.9774  def /maxTickline 124.31186  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.31186
0.0 -115.9774   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.47107
0.0 -66.66223 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 124.31186  0 -115.9774  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -115.9774
 124.31186  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-66.66223  def /maxTickline 195.47107  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.31186
0.0 -115.9774   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.47107
0.0 -66.66223 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2530 975 a Fp(0)205
b(1)g(2)g(3)g(4)h(5)f(6)-1706 b Fj(\241)p Fp(1)-309 b
Fj(\241)p Fp(2)2456 897 y(0)2414 1133 y Fj(\241)p Fp(1)2414
1370 y Fj(\241)p Fp(2)2414 1606 y Fj(\241)p Fp(3)2414
1842 y Fj(\241)p Fp(4)2456 661 y(1)2456 425 y(2)2456
188 y(3)2545 878 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((--3.-1.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
2545 878 a
tx@Dict begin { 89.62596 -71.16832 } PutCoor PutBegin  end
 2545 878 a 0 1 0 TeXcolorrgb 53 x Ft(D)2608
943 y Fp(4)p 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545
878 a
tx@Dict begin { -54.90012 103.02744 } PutCoor PutBegin  end
 2545 878 a 1 0.49803 0 TeXcolorrgb 2573 963 a Ft(b)18
b Fv(\306)c Fw(3)p 2545 881 228 4 v 2545 990 4 111 v
2769 990 V 2545 992 228 4 v 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end

2545 878 a 2545 878 a
tx@Dict begin { 112.014 -55.48492 } PutCoor PutBegin  end
 2545 878 a 0.49803 0 1 TeXcolorrgb
2575 957 a Ft(a)k Fv(\306)c(\241)p Fw(1,)8 b(5)p 2545
881 354 4 v 2545 994 4 116 v 2895 994 V 2545 996 354
4 v 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 29.67749 66.86412 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x Fv(\241)p Fw(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 58.80316 24.185 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x Fv(\241)p Fw(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 87.36923 -18.4941 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x Fv(\241)p Fw(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.86653
-30.39862 119.90607 -53.93065   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
85.35823 0.0 85.35823   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 42.67911 28.45274 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
42.67911 28.45274 42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 0.0 56.90549 42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
0.0 56.90549 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 -42.67911 85.35823 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4168 1841 a
currentpoint initclip moveto
 4168
1841 a 0 1 0 TeXcolorrgb 2767 2209 a Ft(D)2830 2221 y
Fp(4)2879 2209 y Fw(:)19 b Ft(y)i Fv(\306)p 0.49803 0 1
TeXcolorrgb 14 w(\241)p Fw(1,)8 b(5)p 0 1 0 TeXcolorrgb
3 w Ft(x)p 1 0.49803 0 TeXcolorrgb 5 w Fv(\305)p Fw(3)p
0 1 0 TeXcolorrgb 0 TeXcolorgray 2767 2334 a Ft(D)2830
2346 y Fp(4)2879 2334 y Fw(:)19 b Ft(y)i Fv(\306)14 b(\241)p
Fw(1,)8 b(5)r Ft(x)15 b Fv(\305)10 b Fw(3)-246 2426 y
SDict begin H.S end

-246 2426 a -246 2426 a
SDict begin 12 H.A end
 -246 2426 a -246 2426 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246
2426 a 0 TeXcolorgray 100 x Fx(Ex)o(er)o(cice)k(12)p
0 TeXcolorgray 41 w Fw(Le)k(gr)o(aphique)h(suivant)f(donne)g(le)g(pr)q
(ix)f(pay\351)g(dans)h(une)g(pompe)h(\340)e(essence)h(en)g(fonction)h
(de)e(la)g(quantit\351)i(de)e(gazole)g(achet\351e)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1094 4290 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.11479 a add def
/d 0.0 a add neg def /h 200.7048 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1094 4290 a
1274 4141 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 184.50043 0.0 -21.61436 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 182.79463 0.0 -17.91017   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 184.50043  0 -21.61436  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -21.61436
 184.50043  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-17.91017  def /maxTickline 182.79463  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 182.79463
0.0 -17.91017   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.50043
0.0 -21.61436 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 182.79463  0 -17.91017  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -17.91017
 182.79463  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-21.61436  def /maxTickline 184.50043  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 182.79463
0.0 -17.91017   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.50043
0.0 -21.61436 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1259 4238 a Fp(0)205 b(1)g(2)g(3)g(4)h(5)f(6)
1185 3925 y(1)1185 3688 y(2)1185 3452 y(3)1185 3216 y(4)1185
2980 y(5)1185 2743 y(6)1274 4141 y
tx@Dict begin { 146.53145 22.76227 } PutCoor PutBegin  end
 1274 4141 a 57 x Fw(gazole)1274
4298 y(\(en)17 b Fu(`)p Fw(\))1274 4141 y
tx@Dict begin  PutEnd  end
 1274 4141 a
1274 4141 a
tx@Dict begin { 3.41418 150.87689 } PutCoor PutBegin  end
 1274 4141 a 54 x Fw(pr)q(ix)1274 4295 y(\(en)g
Fs(N)p Fw(\))1274 4141 y
tx@Dict begin  PutEnd  end
 1274 4141 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0. def /x1 6.484452736237389 def
/dx x1 x sub 49 div def /F@pstplot (1.5*x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 170.71646 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 170.71646 113.81097
170.71646   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 42.67911 28.45274 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1274 4141 a
tx@Dict begin { 30.15984 24.46938 } PutCoor PutBegin  end
 1274
4141 a 0.49803 0 1 TeXcolorrgb 52 x Fv(\305)p Fw(1,)8
b(5)p 0 TeXcolorgray 1274 4141 a
tx@Dict begin  PutEnd  end
 1274 4141 a 2806 4290
a
currentpoint initclip moveto
 2806 4290 a -246 4461 a Fw(Il)17 b(y)g(a)g(deux)h(m\351thodes)g
(possibles)h(pour)f(r\351pondr)o(e)f(\340)g(la)h(question)h(:)p
0 TeXcolorgray -76 4560 a(\225)p 0 TeXcolorgray 42 w
Fx(P)m(ointill\351s)14 b(rouges)h(:)i Fw(4)h(litr)o(es)g(de)f(gazole)g
(co\373tent)h(6)g Fs(N)p Fw(,)f(donc)g(le)h(litr)o(e)f(co\373te)h(6)10
b Fv(\245)g Fw(4)16 b Fv(\306)e Fw(1,)8 b(5)18 b Fs(N)p
Fw(.)p 0 TeXcolorgray -76 4660 a(\225)p 0 TeXcolorgray
42 w Fx(F)o(l\350ches)d(violettes)g(:)i Fw(chaque)h(litr)o(e)g
(co\373te)g(1,5)g Fs(N)p Fw(.)-246 4740 y
SDict begin H.S end
 -246 4740 a
-246 4740 a
SDict begin 12 H.A end
 -246 4740 a -246 4740 a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 4740 a 0 TeXcolorgray
112 x Fx(Ex)o(er)o(cice)c(13)p 0 TeXcolorgray 41 w Fw(Dans)j(chaque)h
(question,)h Ft(u)j Fw(est)c(une)g(suite)g(ar)q(ithm\351tique)i(de)d(r)
o(aison)h Ft(r)r Fw(.)-246 4894 y
SDict begin H.S end
 -246 4894 a -246 4894
a
SDict begin 12 H.A end
 -246 4894 a -246 4894 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 4894 a 0 TeXcolorgray
-141 4989 a Fw(1.)p 0 TeXcolorgray 43 w Ft(u)11 5001
y Fp(0)61 4989 y Fv(\306)c Fw(2)k(et)f Ft(r)25 b Fv(\306)14
b Fw(4.)1779 5272 y Ft(u)1828 5284 y Fp(1)1878 5272 y
Fv(\306)g Fw(2)c Fv(\305)g Fw(4)16 b Fv(\306)e Fw(6)1779
5397 y Ft(u)1828 5409 y Fp(2)1878 5397 y Fv(\306)g Fw(6)c
Fv(\305)g Fw(4)16 b Fv(\306)e Fw(10)1779 5521 y Ft(u)1828
5533 y Fp(3)1878 5521 y Fv(\306)g Fw(10)c Fv(\305)g Fw(4)16
b Fv(\306)e Fw(14.)p 0 TeXcolorgray 1930 5895 a(6)p 0
TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a Fw(2.)p
0 TeXcolorgray 43 w Ft(u)11 -151 y Fp(0)61 -163 y Fv(\306)14
b Fw(5)k(et)f Ft(r)25 b Fv(\306)14 b(\241)p Fw(2.)1792
134 y Ft(u)1841 146 y Fp(1)1891 134 y Fv(\306)g Fw(5)c
Fv(\241)g Fw(2)16 b Fv(\306)e Fw(3)1792 259 y Ft(u)1841
271 y Fp(2)1891 259 y Fv(\306)g Fw(3)c Fv(\241)g Fw(2)16
b Fv(\306)e Fw(1)1792 383 y Ft(u)1841 395 y Fp(3)1891
383 y Fv(\306)g Fw(1)c Fv(\241)g Fw(2)16 b Fv(\306)e(\241)p
Fw(1.)-246 621 y
SDict begin H.S end
 -246 621 a -246 621 a
SDict begin 12 H.A end
 -246 621 a -246
621 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 621 a 0 TeXcolorgray -141 705 a Fw(3.)p 0
TeXcolorgray 43 w Ft(u)11 717 y Fp(0)61 705 y Fv(\306)g
Fw(10)k(et)g Ft(r)25 b Fv(\306)14 b Fw(1,)8 b(5.)-38
819 y(P)n(our)17 b(obtenir)g Ft(u)463 831 y Fp(6)499
819 y Fw(,)g(on)h(par)q(t)f(de)g Ft(u)956 831 y Fp(0)1006
819 y Fv(\306)d Fw(10)k(et)g(on)g(r)o(ajoute)g(6)g(fois)g(1,)8
b(5.)19 b(Donc)1547 1002 y Ft(u)1596 1014 y Fp(6)1645
1002 y Fv(\306)c Fw(10)10 b Fv(\305)g Fw(6)g Fv(\243)g
Fw(1,)e(5)17 b Fv(\306)d Fw(10)c Fv(\305)g Fw(9)16 b
Fv(\306)f Fw(19.)-246 1098 y
SDict begin H.S end
 -246 1098 a -246 1098 a
SDict begin 12 H.A end

-246 1098 a -246 1098 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246 1098 a 0 TeXcolorgray -141
1199 a Fw(4.)p 0 TeXcolorgray 43 w Ft(u)11 1211 y Fp(0)61
1199 y Fv(\306)f Fw(4)k(et)f Ft(u)319 1211 y Fp(2)369
1199 y Fv(\306)d Fw(10.)p 0 TeXcolorgray 0 TeXcolorgray
1524 1364 2 2 v 1526 1365 88 4 v 1614 1364 2 2 v 1523
1464 4 100 v 1615 1464 V 1524 1467 2 2 v 1526 1468 88
4 v 1614 1467 2 2 v 1550 1439 a(4)p 1 0 0 TeXcolorrgb
1765 1312 a Fj(\305)p Fm(r)p 0 TeXcolorgray 1639 1354
4 4 v 1641 1353 V 1643 1352 V 1645 1350 V 1646 1349 V
1648 1348 V 1650 1347 V 1652 1346 V 1654 1344 V 1655
1343 V 1657 1342 V 1659 1341 V 1661 1340 V 1663 1339
V 1664 1338 V 1666 1337 V 1668 1335 V 1670 1334 V 1672
1333 V 1673 1332 V 1675 1331 V 1677 1330 V 1679 1329
V 1681 1328 V 1683 1328 V 1684 1327 V 1686 1326 V 1688
1325 V 1690 1324 V 1692 1323 V 1693 1322 V 1695 1321
V 1697 1321 V 1699 1320 V 1701 1319 V 1702 1318 V 1704
1317 V 1706 1317 V 1708 1316 V 1710 1315 V 1712 1314
V 1713 1314 V 1715 1313 V 1717 1312 V 1719 1312 V 1721
1311 V 1722 1310 V 1724 1310 V 1726 1309 V 1728 1309
V 1730 1308 V 1731 1307 V 1733 1307 V 1735 1306 V 1737
1306 V 1739 1305 V 1740 1305 V 1742 1304 V 1744 1304
V 1746 1304 V 1748 1303 V 1750 1303 V 1751 1302 V 1753
1302 V 1755 1302 V 1757 1301 V 1759 1301 V 1760 1301
V 1762 1300 V 1939 1337 a Fi(\045)p Fh(\045)p 1838 1300
V 1840 1301 V 1842 1301 V 1844 1301 V 1845 1302 V 1847
1302 V 1849 1302 V 1851 1303 V 1853 1303 V 1854 1304
V 1856 1304 V 1858 1304 V 1860 1305 V 1862 1305 V 1864
1306 V 1865 1306 V 1867 1307 V 1869 1307 V 1871 1308
V 1873 1309 V 1874 1309 V 1876 1310 V 1878 1310 V 1880
1311 V 1882 1312 V 1883 1312 V 1885 1313 V 1887 1314
V 1889 1314 V 1891 1315 V 1892 1316 V 1894 1317 V 1896
1317 V 1898 1318 V 1900 1319 V 1902 1320 V 1903 1321
V 1905 1321 V 1907 1322 V 1909 1323 V 1911 1324 V 1912
1325 V 1914 1326 V 1916 1327 V 1918 1328 V 1920 1328
V 1921 1329 V 1923 1330 V 1925 1331 V 1927 1332 V 1929
1333 V 1931 1334 V 1932 1335 V 1934 1337 V 1936 1338
V 1963 1362 2 2 v 1965 1363 136 4 v 2101 1362 2 2 v 1962
1466 4 103 v 2103 1466 V 1963 1469 2 2 v 1965 1470 136
4 v 2101 1469 2 2 v 1989 1440 a Fw(???)p 1 0 0 TeXcolorrgb
2239 1312 a Fj(\305)p Fm(r)p 0 TeXcolorgray 2126 1341
4 4 v 2128 1340 V 2130 1339 V 2132 1338 V 2134 1337 V
2136 1335 V 2138 1334 V 2140 1333 V 2141 1332 V 2143
1331 V 2145 1330 V 2147 1329 V 2149 1328 V 2151 1328
V 2153 1327 V 2155 1326 V 2157 1325 V 2158 1324 V 2160
1323 V 2162 1322 V 2164 1321 V 2166 1321 V 2168 1320
V 2170 1319 V 2172 1318 V 2174 1317 V 2175 1317 V 2177
1316 V 2179 1315 V 2181 1314 V 2183 1314 V 2185 1313
V 2187 1312 V 2189 1312 V 2191 1311 V 2192 1310 V 2194
1310 V 2196 1309 V 2198 1309 V 2200 1308 V 2202 1307
V 2204 1307 V 2206 1306 V 2208 1306 V 2209 1305 V 2211
1305 V 2213 1304 V 2215 1304 V 2217 1304 V 2219 1303
V 2221 1303 V 2223 1302 V 2225 1302 V 2226 1302 V 2228
1301 V 2230 1301 V 2232 1301 V 2234 1300 V 2236 1300
V 2427 1342 a Fi(\045)p Fh(\045)p 2311 1300 V 2313 1300
V 2315 1301 V 2317 1301 V 2319 1301 V 2321 1302 V 2323
1302 V 2325 1302 V 2327 1303 V 2328 1303 V 2330 1304
V 2332 1304 V 2334 1304 V 2336 1305 V 2338 1305 V 2340
1306 V 2342 1306 V 2344 1307 V 2345 1307 V 2347 1308
V 2349 1309 V 2351 1309 V 2353 1310 V 2355 1310 V 2357
1311 V 2359 1312 V 2361 1312 V 2362 1313 V 2364 1314
V 2366 1314 V 2368 1315 V 2370 1316 V 2372 1317 V 2374
1317 V 2376 1318 V 2378 1319 V 2379 1320 V 2381 1321
V 2383 1321 V 2385 1322 V 2387 1323 V 2389 1324 V 2391
1325 V 2393 1326 V 2395 1327 V 2396 1328 V 2398 1328
V 2400 1329 V 2402 1330 V 2404 1331 V 2406 1332 V 2408
1333 V 2410 1334 V 2412 1335 V 2413 1337 V 2415 1338
V 2417 1339 V 2419 1340 V 2421 1341 V 2423 1342 V 2425
1343 V 2451 1364 2 2 v 2453 1365 128 4 v 2581 1364 2
2 v 2450 1464 4 100 v 2583 1464 V 2451 1467 2 2 v 2453
1468 128 4 v 2581 1467 2 2 v 2477 1439 a Fw(10)p 0 0 1
TeXcolorrgb 1528 1625 a Ft(u)1577 1637 y Fp(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1991 1625 a Ft(u)2040 1637 y Fp(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2475 1625 a Ft(u)2524
1637 y Fp(2)p 0 TeXcolorgray -38 1786 a Fw(D)o('apr\350s)j(le)h
(sch\351ma)g(ci-dessus)h(:)1616 1886 y Ft(r)25 b Fv(\306)14
b Fw(\(10)c Fv(\241)g Fw(4\))g Fv(\245)g Fw(2)17 b Fv(\306)d
Fw(6)c Fv(\245)g Fw(2)15 b Fv(\306)f Fw(3.)-38 2035 y(On)j(obtient)h
(donc)f(le)h(sch\351ma)g(compl\351t\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1069 2207 V 1071 2208 88 4 v 1159 2207
2 2 v 1068 2307 4 100 v 1160 2307 V 1069 2310 2 2 v 1071
2311 88 4 v 1159 2310 2 2 v 1095 2282 a(4)p 1 0 0 TeXcolorrgb
1298 2158 a Fj(\305)p Fp(3)p 0 TeXcolorgray 1184 2195
4 4 v 1185 2193 V 1187 2192 V 1189 2191 V 1190 2190 V
1192 2189 V 1194 2187 V 1196 2186 V 1197 2185 V 1199
2184 V 1201 2183 V 1202 2182 V 1204 2181 V 1206 2180
V 1208 2179 V 1209 2178 V 1211 2177 V 1213 2176 V 1214
2175 V 1216 2174 V 1218 2173 V 1220 2172 V 1221 2171
V 1223 2170 V 1225 2169 V 1226 2168 V 1228 2167 V 1230
2166 V 1232 2165 V 1233 2164 V 1235 2164 V 1237 2163
V 1238 2162 V 1240 2161 V 1242 2160 V 1244 2160 V 1245
2159 V 1247 2158 V 1249 2157 V 1250 2157 V 1252 2156
V 1254 2155 V 1256 2155 V 1257 2154 V 1259 2154 V 1261
2153 V 1263 2152 V 1264 2152 V 1266 2151 V 1268 2151
V 1269 2150 V 1271 2150 V 1273 2149 V 1275 2149 V 1276
2148 V 1278 2148 V 1280 2147 V 1281 2147 V 1283 2146
V 1285 2146 V 1287 2145 V 1288 2145 V 1290 2145 V 1292
2144 V 1293 2144 V 1295 2144 V 1484 2193 a Fi(#)p Fh(#)p
1371 2144 V 1372 2144 V 1374 2144 V 1376 2145 V 1377
2145 V 1379 2145 V 1381 2146 V 1383 2146 V 1384 2147
V 1386 2147 V 1388 2148 V 1389 2148 V 1391 2149 V 1393
2149 V 1395 2150 V 1396 2150 V 1398 2151 V 1400 2151
V 1401 2152 V 1403 2152 V 1405 2153 V 1407 2154 V 1408
2154 V 1410 2155 V 1412 2155 V 1413 2156 V 1415 2157
V 1417 2157 V 1419 2158 V 1420 2159 V 1422 2160 V 1424
2160 V 1425 2161 V 1427 2162 V 1429 2163 V 1431 2164
V 1432 2164 V 1434 2165 V 1436 2166 V 1437 2167 V 1439
2168 V 1441 2169 V 1443 2170 V 1444 2171 V 1446 2172
V 1448 2173 V 1449 2174 V 1451 2175 V 1453 2176 V 1455
2177 V 1456 2178 V 1458 2179 V 1460 2180 V 1461 2181
V 1463 2182 V 1465 2183 V 1467 2184 V 1468 2185 V 1470
2186 V 1472 2187 V 1473 2189 V 1475 2190 V 1477 2191
V 1479 2192 V 1480 2193 V 1482 2195 V 1508 2207 2 2 v
1510 2208 88 4 v 1598 2207 2 2 v 1507 2307 4 100 v 1599
2307 V 1508 2310 2 2 v 1510 2311 88 4 v 1598 2310 2 2
v 1534 2282 a Fw(7)p 1 0 0 TeXcolorrgb 1747 2158 a Fj(\305)p
Fp(3)p 0 TeXcolorgray 1624 2196 4 4 v 1626 2195 V 1628
2193 V 1629 2192 V 1631 2191 V 1633 2190 V 1635 2189
V 1637 2187 V 1638 2186 V 1640 2185 V 1642 2184 V 1644
2183 V 1646 2182 V 1647 2181 V 1649 2180 V 1651 2179
V 1653 2178 V 1655 2177 V 1656 2176 V 1658 2175 V 1660
2174 V 1662 2173 V 1664 2172 V 1665 2171 V 1667 2170
V 1669 2169 V 1671 2168 V 1673 2167 V 1674 2166 V 1676
2165 V 1678 2164 V 1680 2164 V 1681 2163 V 1683 2162
V 1685 2161 V 1687 2160 V 1689 2160 V 1690 2159 V 1692
2158 V 1694 2157 V 1696 2157 V 1698 2156 V 1699 2155
V 1701 2155 V 1703 2154 V 1705 2154 V 1707 2153 V 1708
2152 V 1710 2152 V 1712 2151 V 1714 2151 V 1716 2150
V 1717 2150 V 1719 2149 V 1721 2149 V 1723 2148 V 1725
2148 V 1726 2147 V 1728 2147 V 1730 2146 V 1732 2146
V 1734 2145 V 1735 2145 V 1737 2145 V 1739 2144 V 1741
2144 V 1742 2144 V 1744 2143 V 1923 2182 a Fi(\045)p
Fh(\045)p 1820 2143 V 1821 2144 V 1823 2144 V 1825 2144
V 1827 2145 V 1829 2145 V 1830 2145 V 1832 2146 V 1834
2146 V 1836 2147 V 1838 2147 V 1839 2148 V 1841 2148
V 1843 2149 V 1845 2149 V 1847 2150 V 1848 2150 V 1850
2151 V 1852 2151 V 1854 2152 V 1856 2152 V 1857 2153
V 1859 2154 V 1861 2154 V 1863 2155 V 1864 2155 V 1866
2156 V 1868 2157 V 1870 2157 V 1872 2158 V 1873 2159
V 1875 2160 V 1877 2160 V 1879 2161 V 1881 2162 V 1882
2163 V 1884 2164 V 1886 2164 V 1888 2165 V 1890 2166
V 1891 2167 V 1893 2168 V 1895 2169 V 1897 2170 V 1899
2171 V 1900 2172 V 1902 2173 V 1904 2174 V 1906 2175
V 1908 2176 V 1909 2177 V 1911 2178 V 1913 2179 V 1915
2180 V 1917 2181 V 1918 2182 V 1920 2183 V 1947 2207
2 2 v 1949 2208 128 4 v 2077 2207 2 2 v 1946 2307 4 100
v 2079 2307 V 1947 2310 2 2 v 1949 2311 128 4 v 2077
2310 2 2 v 1973 2282 a Fw(10)p 1 0 0 TeXcolorrgb 2217
2158 a Fj(\305)p Fp(3)p 0 TeXcolorgray 2103 2185 4 4
v 2105 2184 V 2107 2183 V 2109 2182 V 2111 2181 V 2113
2180 V 2115 2179 V 2117 2178 V 2118 2177 V 2120 2176
V 2122 2175 V 2124 2174 V 2126 2173 V 2128 2172 V 2130
2171 V 2131 2170 V 2133 2169 V 2135 2168 V 2137 2167
V 2139 2166 V 2141 2165 V 2143 2164 V 2145 2164 V 2146
2163 V 2148 2162 V 2150 2161 V 2152 2160 V 2154 2160
V 2156 2159 V 2158 2158 V 2160 2157 V 2161 2157 V 2163
2156 V 2165 2155 V 2167 2155 V 2169 2154 V 2171 2154
V 2173 2153 V 2175 2152 V 2176 2152 V 2178 2151 V 2180
2151 V 2182 2150 V 2184 2150 V 2186 2149 V 2188 2149
V 2190 2148 V 2191 2148 V 2193 2147 V 2195 2147 V 2197
2146 V 2199 2146 V 2201 2145 V 2203 2145 V 2205 2145
V 2206 2144 V 2208 2144 V 2210 2144 V 2212 2143 V 2214
2143 V 2402 2184 a Fi(\045)p Fh(\045)p 2289 2143 V 2291
2143 V 2293 2144 V 2294 2144 V 2296 2144 V 2298 2145
V 2300 2145 V 2302 2145 V 2304 2146 V 2306 2146 V 2308
2147 V 2309 2147 V 2311 2148 V 2313 2148 V 2315 2149
V 2317 2149 V 2319 2150 V 2321 2150 V 2323 2151 V 2324
2151 V 2326 2152 V 2328 2152 V 2330 2153 V 2332 2154
V 2334 2154 V 2336 2155 V 2338 2155 V 2339 2156 V 2341
2157 V 2343 2157 V 2345 2158 V 2347 2159 V 2349 2160
V 2351 2160 V 2353 2161 V 2354 2162 V 2356 2163 V 2358
2164 V 2360 2164 V 2362 2165 V 2364 2166 V 2366 2167
V 2368 2168 V 2369 2169 V 2371 2170 V 2373 2171 V 2375
2172 V 2377 2173 V 2379 2174 V 2381 2175 V 2382 2176
V 2384 2177 V 2386 2178 V 2388 2179 V 2390 2180 V 2392
2181 V 2394 2182 V 2396 2183 V 2397 2184 V 2399 2185
V 2427 2207 2 2 v 2428 2208 128 4 v 2556 2207 2 2 v 2426
2307 4 100 v 2558 2307 V 2427 2310 2 2 v 2428 2311 128
4 v 2556 2310 2 2 v 2452 2282 a Fw(13)p 1 0 0 TeXcolorrgb
2696 2158 a Fj(\305)p Fp(3)p 0 TeXcolorgray 2583 2185
4 4 v 2585 2184 V 2587 2183 V 2589 2182 V 2590 2181 V
2592 2180 V 2594 2179 V 2596 2178 V 2598 2177 V 2600
2176 V 2602 2175 V 2604 2174 V 2605 2173 V 2607 2172
V 2609 2171 V 2611 2170 V 2613 2169 V 2615 2168 V 2617
2167 V 2619 2166 V 2620 2165 V 2622 2164 V 2624 2164
V 2626 2163 V 2628 2162 V 2630 2161 V 2632 2160 V 2633
2160 V 2635 2159 V 2637 2158 V 2639 2157 V 2641 2157
V 2643 2156 V 2645 2155 V 2647 2155 V 2648 2154 V 2650
2154 V 2652 2153 V 2654 2152 V 2656 2152 V 2658 2151
V 2660 2151 V 2662 2150 V 2663 2150 V 2665 2149 V 2667
2149 V 2669 2148 V 2671 2148 V 2673 2147 V 2675 2147
V 2677 2146 V 2678 2146 V 2680 2145 V 2682 2145 V 2684
2145 V 2686 2144 V 2688 2144 V 2690 2144 V 2692 2143
V 2693 2143 V 2882 2184 a Fi(\045)p Fh(\045)p 2768 2143
V 2770 2143 V 2772 2144 V 2774 2144 V 2776 2144 V 2778
2145 V 2780 2145 V 2781 2145 V 2783 2146 V 2785 2146
V 2787 2147 V 2789 2147 V 2791 2148 V 2793 2148 V 2795
2149 V 2796 2149 V 2798 2150 V 2800 2150 V 2802 2151
V 2804 2151 V 2806 2152 V 2808 2152 V 2810 2153 V 2811
2154 V 2813 2154 V 2815 2155 V 2817 2155 V 2819 2156
V 2821 2157 V 2823 2157 V 2825 2158 V 2826 2159 V 2828
2160 V 2830 2160 V 2832 2161 V 2834 2162 V 2836 2163
V 2838 2164 V 2840 2164 V 2841 2165 V 2843 2166 V 2845
2167 V 2847 2168 V 2849 2169 V 2851 2170 V 2853 2171
V 2855 2172 V 2856 2173 V 2858 2174 V 2860 2175 V 2862
2176 V 2864 2177 V 2866 2178 V 2868 2179 V 2870 2180
V 2871 2181 V 2873 2182 V 2875 2183 V 2877 2184 V 2879
2185 V 2906 2207 2 2 v 2908 2208 128 4 v 3036 2207 2
2 v 2905 2307 4 100 v 3038 2307 V 2906 2310 2 2 v 2908
2311 128 4 v 3036 2310 2 2 v 2932 2282 a Fw(16)p 0 0 1
TeXcolorrgb 1073 2466 a Ft(u)1122 2478 y Fp(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1512 2466 a Ft(u)1561 2478 y Fp(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1971 2466 a Ft(u)2020
2478 y Fp(2)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2450 2466
a Ft(u)2499 2478 y Fp(3)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
2930 2466 a Ft(u)2979 2478 y Fp(4)p 0 TeXcolorgray -38
2628 a Fw(\(On)d(peut)h(aussi)h(obtenir)e Ft(u)799 2640
y Fp(4)852 2628 y Fw(avec)g(le)h(calcul)g(:)f Ft(u)1410
2640 y Fp(4)1460 2628 y Fv(\306)e Fw(4)10 b Fv(\305)g
Fw(4)g Fv(\243)g Fw(3)16 b Fv(\306)e Fw(4)c Fv(\305)g
Fw(12)16 b Fv(\306)e Fw(16.\))-246 2659 y
SDict begin H.S end
 -246 2659 a
-246 2659 a
SDict begin 12 H.A end
 -246 2659 a -246 2659 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 2659 a 0 TeXcolorgray
-141 2756 a Fw(5.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1246 2894 2 2 v 1248 2895 88 4 v 1336 2894 2 2 v 1245
2995 4 100 v 1337 2995 V 1246 2998 2 2 v 1248 2999 88
4 v 1336 2998 2 2 v 1272 2969 a(5)p 1 0 0 TeXcolorrgb
1487 2842 a Fj(\305)p Fm(r)p 0 TeXcolorgray 1361 2884
4 4 v 1363 2883 V 1364 2882 V 1366 2881 V 1368 2879 V
1370 2878 V 1372 2877 V 1373 2876 V 1375 2875 V 1377
2873 V 1379 2872 V 1381 2871 V 1383 2870 V 1384 2869
V 1386 2868 V 1388 2867 V 1390 2866 V 1392 2865 V 1393
2864 V 1395 2863 V 1397 2862 V 1399 2861 V 1401 2860
V 1402 2859 V 1404 2858 V 1406 2857 V 1408 2856 V 1410
2855 V 1412 2854 V 1413 2853 V 1415 2852 V 1417 2852
V 1419 2851 V 1421 2850 V 1422 2849 V 1424 2848 V 1426
2848 V 1428 2847 V 1430 2846 V 1431 2845 V 1433 2845
V 1435 2844 V 1437 2843 V 1439 2843 V 1440 2842 V 1442
2841 V 1444 2841 V 1446 2840 V 1448 2839 V 1450 2839
V 1451 2838 V 1453 2838 V 1455 2837 V 1457 2837 V 1459
2836 V 1460 2836 V 1462 2835 V 1464 2835 V 1466 2834
V 1468 2834 V 1469 2833 V 1471 2833 V 1473 2833 V 1475
2832 V 1477 2832 V 1478 2831 V 1480 2831 V 1482 2831
V 1484 2830 V 1661 2867 a Fi(\045)p Fh(\045)p 1560 2830
V 1562 2831 V 1564 2831 V 1565 2831 V 1567 2832 V 1569
2832 V 1571 2833 V 1573 2833 V 1574 2833 V 1576 2834
V 1578 2834 V 1580 2835 V 1582 2835 V 1583 2836 V 1585
2836 V 1587 2837 V 1589 2837 V 1591 2838 V 1592 2838
V 1594 2839 V 1596 2839 V 1598 2840 V 1600 2841 V 1602
2841 V 1603 2842 V 1605 2843 V 1607 2843 V 1609 2844
V 1611 2845 V 1612 2845 V 1614 2846 V 1616 2847 V 1618
2848 V 1620 2848 V 1621 2849 V 1623 2850 V 1625 2851
V 1627 2852 V 1629 2852 V 1631 2853 V 1632 2854 V 1634
2855 V 1636 2856 V 1638 2857 V 1640 2858 V 1641 2859
V 1643 2860 V 1645 2861 V 1647 2862 V 1649 2863 V 1650
2864 V 1652 2865 V 1654 2866 V 1656 2867 V 1658 2868
V 1685 2893 2 2 v 1687 2894 136 4 v 1823 2893 2 2 v 1684
2996 4 103 v 1825 2996 V 1685 2999 2 2 v 1687 3000 136
4 v 1823 2999 2 2 v 1711 2970 a Fw(???)p 1 0 0 TeXcolorrgb
1962 2842 a Fj(\305)p Fm(r)p 0 TeXcolorgray 1849 2871
4 4 v 1851 2870 V 1853 2869 V 1855 2868 V 1856 2867 V
1858 2866 V 1860 2865 V 1862 2864 V 1864 2863 V 1866
2862 V 1868 2861 V 1870 2860 V 1872 2859 V 1874 2858
V 1875 2857 V 1877 2856 V 1879 2855 V 1881 2854 V 1883
2853 V 1885 2852 V 1887 2852 V 1889 2851 V 1891 2850
V 1893 2849 V 1895 2848 V 1896 2848 V 1898 2847 V 1900
2846 V 1902 2845 V 1904 2845 V 1906 2844 V 1908 2843
V 1910 2843 V 1912 2842 V 1914 2841 V 1916 2841 V 1917
2840 V 1919 2839 V 1921 2839 V 1923 2838 V 1925 2838
V 1927 2837 V 1929 2837 V 1931 2836 V 1933 2836 V 1935
2835 V 1936 2835 V 1938 2834 V 1940 2834 V 1942 2833
V 1944 2833 V 1946 2833 V 1948 2832 V 1950 2832 V 1952
2831 V 1954 2831 V 1956 2831 V 1957 2830 V 1959 2830
V 2148 2870 a Fi(\045)p Fh(\045)p 2036 2830 V 2037 2830
V 2039 2831 V 2041 2831 V 2043 2831 V 2045 2832 V 2047
2832 V 2049 2833 V 2051 2833 V 2053 2833 V 2055 2834
V 2056 2834 V 2058 2835 V 2060 2835 V 2062 2836 V 2064
2836 V 2066 2837 V 2068 2837 V 2070 2838 V 2072 2838
V 2074 2839 V 2076 2839 V 2077 2840 V 2079 2841 V 2081
2841 V 2083 2842 V 2085 2843 V 2087 2843 V 2089 2844
V 2091 2845 V 2093 2845 V 2095 2846 V 2096 2847 V 2098
2848 V 2100 2848 V 2102 2849 V 2104 2850 V 2106 2851
V 2108 2852 V 2110 2852 V 2112 2853 V 2114 2854 V 2116
2855 V 2117 2856 V 2119 2857 V 2121 2858 V 2123 2859
V 2125 2860 V 2127 2861 V 2129 2862 V 2131 2863 V 2133
2864 V 2135 2865 V 2136 2866 V 2138 2867 V 2140 2868
V 2142 2869 V 2144 2870 V 2146 2871 V 2173 2893 2 2 v
2174 2894 136 4 v 2310 2893 2 2 v 2172 2996 4 103 v 2312
2996 V 2173 2999 2 2 v 2174 3000 136 4 v 2310 2999 2
2 v 2198 2970 a Fw(???)p 1 0 0 TeXcolorrgb 2465 2842
a Fj(\305)p Fm(r)p 0 TeXcolorgray 2336 2875 4 4 v 2338
2873 V 2340 2872 V 2342 2871 V 2344 2870 V 2346 2869
V 2349 2868 V 2351 2867 V 2353 2866 V 2355 2865 V 2357
2864 V 2359 2863 V 2361 2862 V 2363 2861 V 2365 2860
V 2367 2859 V 2369 2858 V 2371 2857 V 2373 2856 V 2375
2855 V 2377 2854 V 2379 2853 V 2381 2852 V 2383 2852
V 2385 2851 V 2387 2850 V 2389 2849 V 2391 2848 V 2393
2848 V 2395 2847 V 2397 2846 V 2399 2845 V 2401 2845
V 2403 2844 V 2405 2843 V 2407 2843 V 2409 2842 V 2411
2841 V 2413 2841 V 2415 2840 V 2417 2839 V 2419 2839
V 2421 2838 V 2423 2838 V 2425 2837 V 2427 2837 V 2429
2836 V 2431 2836 V 2433 2835 V 2436 2835 V 2438 2834
V 2440 2834 V 2442 2833 V 2444 2833 V 2446 2833 V 2448
2832 V 2450 2832 V 2452 2831 V 2454 2831 V 2456 2831
V 2458 2830 V 2460 2830 V 2462 2830 V 2648 2863 a Fi(')p
Fh(')p 2539 2830 V 2541 2830 V 2543 2830 V 2545 2831
V 2547 2831 V 2549 2831 V 2551 2832 V 2553 2832 V 2555
2833 V 2557 2833 V 2559 2833 V 2561 2834 V 2563 2834
V 2565 2835 V 2567 2835 V 2569 2836 V 2571 2836 V 2573
2837 V 2575 2837 V 2577 2838 V 2579 2838 V 2581 2839
V 2583 2839 V 2585 2840 V 2587 2841 V 2589 2841 V 2591
2842 V 2593 2843 V 2595 2843 V 2597 2844 V 2599 2845
V 2601 2845 V 2603 2846 V 2606 2847 V 2608 2848 V 2610
2848 V 2612 2849 V 2614 2850 V 2616 2851 V 2618 2852
V 2620 2852 V 2622 2853 V 2624 2854 V 2626 2855 V 2628
2856 V 2630 2857 V 2632 2858 V 2634 2859 V 2636 2860
V 2638 2861 V 2640 2862 V 2642 2863 V 2644 2864 V 2660
2889 2 2 v 2662 2890 197 4 v 2859 2889 2 2 v 2659 3000
4 111 v 2861 3000 V 2660 3003 2 2 v 2662 3004 197 4 v
2859 3003 2 2 v 2686 2964 a Fw(12,)8 b(5)p 0 0 1 TeXcolorrgb
1250 3159 a Ft(u)1299 3171 y Fp(0)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 1713 3159 a Ft(u)1762 3171 y Fp(1)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2201 3159 a Ft(u)2250 3171 y Fp(2)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2719 3159 a Ft(u)2768
3171 y Fp(3)p 0 TeXcolorgray -38 3305 a Fw(D)o('apr\350s)17
b(le)h(sch\351ma)g(ci-dessus)h(:)1513 3405 y Ft(r)25
b Fv(\306)14 b Fw(\(12,)8 b(5)i Fv(\241)g Fw(5\))g Fv(\245)g
Fw(3)17 b Fv(\306)d Fw(7,)8 b(5)i Fv(\245)g Fw(3)17 b
Fv(\306)d Fw(2,)8 b(5.)-246 3482 y
SDict begin H.S end
 -246 3482 a -246 3482
a
SDict begin 12 H.A end
 -246 3482 a -246 3482 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 3482 a 0 TeXcolorgray
122 x Fx(Ex)o(er)o(cice)14 b(14)p 0 TeXcolorgray 41 w
Fw(Le)h(01/01/2019,)k(on)c(d\351pose)g(300)h Fs(N)28
b Fw(sur)14 b(un)h(compte)h(en)f(banque)o(.)f(T)-8 b(ous)16
b(les)f(mois)g(\340)g(par)q(tir)f(de)g(cette)h(date)o(,)f(on)h
(d\351poser)o(a)g(75)g Fs(N)28 b Fw(sur)-246 3704 y(ce)18
b(compte)o(.)-246 3803 y(On)g(note)g Ft(u)100 3815 y
Fm(n)161 3803 y Fw(la)f(somme)i(sur)e(le)h(compte)h(apr\350s)f
Ft(n)j Fw(mois)d(\226)g(on)f(a)g(donc)g(en)h(par)q(ticulier)g
Ft(u)2406 3815 y Fp(0)2456 3803 y Fv(\306)c Fw(300.)-246
3850 y
SDict begin H.S end
 -246 3850 a -246 3850 a
SDict begin 12 H.A end
 -246 3850 a -246 3850
a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246 3850 a 0 TeXcolorgray -141 3947 a Fw(1.)p 0 TeXcolorgray
43 w Ft(u)11 3959 y Fp(1)61 3947 y Fv(\306)g Fw(300)c
Fv(\305)g Fw(75)17 b Fv(\306)d Fw(375,)19 b Ft(u)699
3959 y Fp(2)749 3947 y Fv(\306)14 b Fw(375)c Fv(\305)g
Fw(75)17 b Fv(\306)d Fw(450.)-38 4061 y(On)j(aur)o(a)g(375)i
Fs(N)34 b Fw(le)18 b(1)605 4037 y Fk(er)668 4061 y Fw(f\351vr)q(ier)f
(et)h(450)h Fs(N)34 b Fw(le)18 b(1)1340 4037 y Fk(er)1402
4061 y Fw(mars)o(.)-246 4077 y
SDict begin H.S end
 -246 4077 a -246 4077
a
SDict begin 12 H.A end
 -246 4077 a -246 4077 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246 4077 a 0 TeXcolorgray
-141 4190 a Fw(2.)p 0 TeXcolorgray 43 w(La)f(suite)i
Ft(u)j Fw(est)c(ar)q(ithm\351tique)h(de)e(r)o(aison)h
Ft(r)25 b Fv(\306)14 b Fw(75.)-246 4222 y
SDict begin H.S end
 -246 4222 a
-246 4222 a
SDict begin 12 H.A end
 -246 4222 a -246 4222 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246 4222 a 0 TeXcolorgray
-141 4319 a Fw(3.)p 0 TeXcolorgray 43 w(La)j(for)q(mule)i(\340)e(entr)o
(er)g(dans)g(la)h(cellule)h(C2)f(est)1925 4418 y(=B2+75)-246
4469 y
SDict begin H.S end
 -246 4469 a -246 4469 a
SDict begin 12 H.A end
 -246 4469 a -246 4469
a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 4469 a 0 TeXcolorgray -141 4583 a Fw(4.)p 0 TeXcolorgray
0 TeXcolorgray 1930 5895 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 986 1542 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 257.2422 a add def
/d 0.0 a add neg def /h 215.30507 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 986 1542 a 1527
1291 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 192.05591 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.2395
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.11353 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22636
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 192.05591  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 192.05591  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 185.11353  def /dT 932339 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 14.22636  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.11353
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 192.05591
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.11353  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 185.11353  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 192.05591  def /dT 933200 abs 65536 div viceversa
{ neg } if def /DT 100. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.1424  mul cntTick add def x abs MaxValue abs le { false { x minTickline
exch moveto x maxTickline exch lineto } { x tickstart STsize mul exch
moveto x tickend STsize mul exch lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul exch
moveto cntsubTick maxTickline STsize mul exch lineto } { cntsubTick
tickstart STsize mul exch moveto cntsubTick tickend STsize mul exch
lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave false { cntTick minTickline exch moveto cntTick maxTickline
exch lineto } { cntTick tickstart exch moveto cntTick tickend exch
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.1424  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.11353
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 192.05591
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1512 1388 a Fp(0)87 b(1)g(2)g(3)g(4)g(5)g(6)h
(7)f(8)g(9)71 b(10)57 b(11)f(12)1438 1310 y(0)1377 1192
y(100)1377 1074 y(200)1377 956 y(300)1377 838 y(400)1377
719 y(500)1377 601 y(600)1377 483 y(700)1377 365 y(800)1377
246 y(900)1346 128 y(1000)1346 10 y(1100)1346 -108 y(1200)1527
1291 y
tx@Dict begin { 105.8431 -14.2395 } PutCoor PutBegin  end
 1527 1291 a 57 x Ft(n)22 b Fw(\(nombr)o(e)17 b(de)g(mois\))1527
1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291 a
tx@Dict begin { -64.01863 176.56982 } PutCoor PutBegin  end
 1527 1291 a 38 x Ft(u)1576
1341 y Fm(n)1527 1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291 a
tx@Dict begin { -64.01863 166.60217 } PutCoor PutBegin  end
 1527
1291 a 54 x Fw(\(somme)1527 1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291
a
tx@Dict begin { -64.01863 156.63452 } PutCoor PutBegin  end
 1527 1291 a 57 x Fw(en)h Fs(N)p Fw(\))1527 1291 y
tx@Dict begin  PutEnd  end
 1527
1291 a 1527 1291 a
tx@Dict begin { 18.49431 49.83826 } PutCoor PutBegin  end
 1527 1291 a 0.49803 0 1 TeXcolorrgb
51 x Fv(\305)p Fw(75)p 0 TeXcolorgray 1527 1291 a
tx@Dict begin  PutEnd  end
 1527
1291 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 14.22636
42.7185 0.0 42.7185   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
14.22636 53.39813 14.22636 42.7185   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 0.0
42.7185   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 170.71637
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 0.0
170.87402   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.7185   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 14.22636 53.39813   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45273 64.07776   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6791 74.75739   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
3122 1542 a
currentpoint initclip moveto
 3122 1542 a -246 1586 a
SDict begin H.S end
 -246 1586 a -246
1586 a
SDict begin 12 H.A end
 -246 1586 a -246 1586 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246 1586 a 0 TeXcolorgray
-141 1700 a Fw(5.)p 0 TeXcolorgray 43 w(L)-10 b('\351quation)19
b(de)e(la)h(droite)f(qui)h(passe)g(par)f(tous)h(les)h(points)f(est)1831
1883 y Ft(y)j Fv(\306)14 b Fw(75)r Ft(x)h Fv(\305)10
b Fw(300)-38 2065 y(\(75)18 b(corr)o(espond)f(\340)g
Ft(r)r Fw(,)h(et)f(300)i(\340)e Ft(u)955 2077 y Fp(0)991
2065 y Fw(\).)-246 2097 y
SDict begin H.S end
 -246 2097 a -246 2097 a
SDict begin 12 H.A end
 -246
2097 a -246 2097 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 2097 a 0 TeXcolorgray -141 2194
a Fw(6.)p 0 TeXcolorgray 43 w(Le)h(01/01/2020)j(\(donc)c(au)h(bout)f
(de)g(12)h(mois\),)h(on)e(aur)o(a)1662 2377 y(75)10 b
Fv(\243)g Fw(12)g Fv(\305)g Fw(300)19 b Fv(\306)14 b
Fw(1)8 b(200)19 b Fs(N)p Fw(.)-38 2574 y(La)e(r\351ponse)i(est)f
(con\002r)q(m\351e)f(par)g(la)h(constr)q(uction)g(en)g(pointill\351s)i
(rouges)d(du)g(gr)o(aphique)o(.)-246 2659 y
SDict begin H.S end
 -246 2659
a -246 2659 a
SDict begin 12 H.A end
 -246 2659 a -246 2659 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 2659 a -246
2678 a
SDict begin H.S end
 -246 2678 a -246 2678 a
SDict begin 12 H.A end
 -246 2678 a -246 2678
a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246 2678 a 0 TeXcolorgray 95 x Fx(Ex)o(er)o(cice)d(15)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w Ft(u)452 2785 y Fp(1)502 2773 y Fv(\306)g Fw(600)c
Fv(\241)g Fw(50)17 b Fv(\306)d Fw(550,)19 b Ft(u)1140
2785 y Fp(2)1190 2773 y Fv(\306)14 b Fw(550)c Fv(\241)g
Fw(50)17 b Fv(\306)d Fw(500.)-246 2800 y
SDict begin H.S end
 -246 2800 a
-246 2800 a
SDict begin 12 H.A end
 -246 2800 a -246 2800 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 2800 a 0 TeXcolorgray
-141 2902 a Fw(2.)p 0 TeXcolorgray 43 w(La)j(suite)i
Ft(u)j Fw(est)c(ar)q(ithm\351tique)h(de)e(r)o(aison)h
Ft(r)25 b Fv(\306)14 b(\241)p Fw(50.)-246 2934 y
SDict begin H.S end
 -246
2934 a -246 2934 a
SDict begin 12 H.A end
 -246 2934 a -246 2934 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 2934
a 0 TeXcolorgray -141 3031 a Fw(3.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 880 4498 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 282.77002 a add def
/d 0.0 a add neg def /h 168.67453 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 880 4498 a 1273
4306 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 235.3772 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.74933
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 145.46414 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 22.76228
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 235.3772  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 235.3772  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 145.46414  def /dT 1491749 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 22.76228  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.46414
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.3772
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 145.46414  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 145.46414  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 235.3772  def /dT 1490900 abs 65536 div viceversa
{ neg } if def /DT 100. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.2275  mul cntTick add def x abs MaxValue abs le { false { x minTickline
exch moveto x maxTickline exch lineto } { x tickstart STsize mul exch
moveto x tickend STsize mul exch lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul exch
moveto cntsubTick maxTickline STsize mul exch lineto } { cntsubTick
tickstart STsize mul exch moveto cntsubTick tickend STsize mul exch
lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave false { cntTick minTickline exch moveto cntTick maxTickline
exch lineto } { cntTick tickstart exch moveto cntTick tickend exch
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.2275  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.46414
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.3772
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1258 4403 a Fp(0)158 b(1)g(2)g(3)g(4)g(5)g(6)g
(7)g(8)g(9)1185 4325 y(0)1123 4136 y(100)1123 3947 y(200)1123
3758 y(300)1123 3570 y(400)1123 3381 y(500)1273 4306
y
tx@Dict begin { 146.58742 -15.92453 } PutCoor PutBegin  end
 1273 4306 a 57 x Ft(n)22 b Fw(\(nombr)o(e)17 b(d)n('ann\351es\))1273
4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306 a
tx@Dict begin { -45.07512 122.84637 } PutCoor PutBegin  end
 1273 4306 a 38 x Ft(u)1322
4356 y Fm(n)1273 4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306 a
tx@Dict begin { -45.07512 113.74664 } PutCoor PutBegin  end
 1273
4306 a 54 x Fw(\(quota)1273 4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306
a
tx@Dict begin { -45.07512 104.64691 } PutCoor PutBegin  end
 1273 4306 a 57 x Fw(de)h(p\352che\))1273 4306 y
tx@Dict begin  PutEnd  end
 1273
4306 a 1273 4306 a
tx@Dict begin { 29.59103 131.9461 } PutCoor PutBegin  end
 1273 4306 a 0.49803 0 1 TeXcolorrgb
51 x Fv(\241)p Fw(50)p 0 TeXcolorgray 1273 4306 a
tx@Dict begin  PutEnd  end
 1273
4306 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 22.76228
136.49597 0.0 136.49597   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 125.1213 22.76228 136.49597   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 0.0
136.49597   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 227.62283
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 0.0
22.74933   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 136.49597   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 22.76228 125.1213   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 45.52457 113.74664   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 68.28685 102.37198   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
3228 4498 a
currentpoint initclip moveto
 3228 4498 a -246 4542 a
SDict begin H.S end
 -246 4542 a -246
4542 a
SDict begin 12 H.A end
 -246 4542 a -246 4542 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 4542 a 0 TeXcolorgray
-141 4657 a Fw(4.)p 0 TeXcolorgray 43 w(L)-10 b('\351quation)19
b(de)e(la)h(droite)f(qui)h(passe)g(par)f(tous)h(les)h(points)f(est)1803
4839 y Ft(y)j Fv(\306)14 b(\241)p Fw(50)r Ft(x)h Fv(\305)10
b Fw(600)-38 5022 y(\()p Fv(\241)p Fw(50)18 b(corr)o(espond)f(\340)g
Ft(r)r Fw(,)h(et)f(600)i(\340)e Ft(u)1010 5034 y Fp(0)1046
5022 y Fw(\).)-246 5054 y
SDict begin H.S end
 -246 5054 a -246 5054 a
SDict begin 12 H.A end
 -246
5054 a -246 5054 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 5054 a 0 TeXcolorgray -141 5151
a Fw(5.)p 0 TeXcolorgray 43 w(Le)h(quota)g(de)f(p\352che)h(en)g(2025)h
(\(donc)e(au)g(bout)h(de)f(10)h(ans\))f(est)1563 5333
y Fv(\241)p Fw(50)10 b Fv(\243)g Fw(10)g Fv(\305)g Fw(600)18
b Fv(\306)c Fw(100)19 b(T)-8 b(onnes)r(.)-38 5531 y(La)17
b(r\351ponse)i(est)f(con\002r)q(m\351e)f(par)g(la)h(constr)q(uction)g
(en)g(pointill\351s)i(rouges)d(du)g(gr)o(aphique)o(.)-246
5616 y
SDict begin H.S end
 -246 5616 a -246 5616 a
SDict begin 12 H.A end
 -246 5616 a -246 5616
a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 5616 a 0 TeXcolorgray 1930 5895 a Fw(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a Fx(Ex)o(er)o(cice)14 b(16)p
0 TeXcolorgray 41 w Fw(On)j(note)h Ft(S)k Fw(la)c(somme)g(\340)g
(calculer)-5 b(,)18 b(que)g(l)o('on)g(\351cr)q(it)f(\340)h(l)o
('endroit,)g(puis)g(\340)f(l)o('envers)i(:)1336 6 y Ft(S)g
Fv(\306)p 1 0 0 TeXcolorrgb 14 w Fw(1)p 0 TeXcolorgray
92 w Fv(\305)p 0 0 1 TeXcolorrgb 10 w Fw(2)p 0 TeXcolorgray
51 w Fv(\305)p 0 1 0 TeXcolorrgb 10 w Fw(3)p 0 TeXcolorgray
51 w Fv(\305)10 b(\242)e(\242)g(\242)k(\305)p 1 0.5 0
TeXcolorrgb 10 w Fw(98)p 0 TeXcolorgray 11 w Fv(\305)p
0.5 0 0.5 TeXcolorrgb 10 w Fw(99)p 0 TeXcolorgray 11
w Fv(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w Fw(100)p 0
TeXcolorgray 1336 130 a Ft(S)19 b Fv(\306)p 1 0 0 TeXcolorrgb
14 w Fw(100)p 0 TeXcolorgray 12 w Fv(\305)p 0 0 1 TeXcolorrgb
10 w Fw(99)p 0 TeXcolorgray 11 w Fv(\305)p 0 1 0 TeXcolorrgb
10 w Fw(98)p 0 TeXcolorgray 11 w Fv(\305)10 b(\242)e(\242)g(\242)k
(\305)p 1 0.5 0 TeXcolorrgb 10 w Fw(3)p 0 TeXcolorgray
51 w Fv(\305)p 0.5 0 0.5 TeXcolorrgb 10 w Fw(2)p 0 TeXcolorgray
51 w Fv(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w Fw(1)p
0 TeXcolorgray -246 299 a(On)19 b(ajoute)g(membr)o(e)g(\340)f(membr)o
(e)h(les)g(deux)g(lignes)o(.)g(On)f(r)o(emarque)g(que)i(la)e(somme)i
(de)e(chaque)h(couple)h(d)n('une)f(m\352me)h(couleur)f(vaut)g(toujours)
-246 398 y(101)33 b(:)1181 597 y Ft(S)15 b Fv(\305)10
b Ft(S)18 b Fv(\306)p 1 0 0 TeXcolorrgb 14 w Fw(101)p
0 TeXcolorgray 12 w Fv(\305)p 0 0 1 TeXcolorrgb 10 w
Fw(101)p 0 TeXcolorgray 12 w Fv(\305)p 0 1 0 TeXcolorrgb
10 w Fw(101)p 0 TeXcolorgray 11 w Fv(\305)10 b(\242)e(\242)g(\242)k
(\305)p 1 0.5 0 TeXcolorrgb 10 w Fw(101)p 0 TeXcolorgray
11 w Fv(\305)p 0.5 0 0.5 TeXcolorrgb 10 w Fw(101)p 0
TeXcolorgray 12 w Fv(\305)p 0.75 0.5 0.25 TeXcolorrgb
10 w Fw(101)p 0 TeXcolorgray 1430 632 a Fg(|)p 1464 632
562 10 v 562 w({z)p 2094 632 V 562 w(})1915 709 y Fp(100)17
b(termes)2699 597 y Fw(.)-246 823 y(On)h(a)f(donc)1099
940 y(2)p Ft(S)j Fv(\306)14 b Fw(100)c Fv(\243)g Fw(101)476
b Ft(S)18 b Fv(\306)2198 884 y Fw(100)10 b Fv(\243)g
Fw(101)p 2198 921 319 5 v 2337 997 a(2)2541 940 y Fv(\306)k
Fw(5)8 b(050.)-246 1059 y
SDict begin H.S end
 -246 1059 a -246 1059 a
SDict begin 12 H.A end
 -246
1059 a -246 1059 a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 1059 a 0 TeXcolorgray 94 x Fx(Ex)o(er)o(cice)14
b(17)p 0 TeXcolorgray 41 w Fw(On)j(constr)q(uit)h(une)f(p)n(yr)o(amide)
h(en)f(superposant)i(des)e(carr\351s)f(:)h(tout)h(en)f(haut,)h(on)f(a)g
Ft(u)2767 1165 y Fp(0)2816 1153 y Fv(\306)e Fw(1)i(carr\351,)f(en)i
(dessous)f Ft(u)3600 1165 y Fp(1)3650 1153 y Fv(\306)e
Fw(3)i(carr\351s)o(,)g(etc)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1270 2260 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88763 a add def
/d 0.0 a add neg def /h 121.77771 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1270 2260 a 2059 2582 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 113.81097 0.0
113.81097 0.0 142.26372 -28.45274 142.26372  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.75 0.75  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -56.90549 85.35823 -28.45274
85.35823 -28.45274 113.81097 -56.90549 113.81097  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 85.35823 0.0
85.35823 0.0 113.81097 -28.45274 113.81097  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 0.0 85.35823 28.45274 85.35823
28.45274 113.81097 0.0 113.81097  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -85.35823 56.90549 -56.90549
56.90549 -56.90549 85.35823 -85.35823 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -56.90549 56.90549 -28.45274
56.90549 -28.45274 85.35823 -56.90549 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 56.90549 0.0
56.90549 0.0 85.35823 -28.45274 85.35823  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 0.0 56.90549 28.45274 56.90549
28.45274 85.35823 0.0 85.35823  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 28.45274 56.90549 56.90549
56.90549 56.90549 85.35823 28.45274 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2630 2260 a
currentpoint initclip moveto
 2630 2260 a -246
2317 a
SDict begin H.S end
 -246 2317 a -246 2317 a
SDict begin 12 H.A end
 -246 2317 a -246 2317
a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246 2317 a 0 TeXcolorgray -141 2429 a Fw(1.)p 0 TeXcolorgray
43 w(\300)g(chaque)h(\351tage)f(de)g(la)h(p)n(yr)o(amide)o(,)f(on)h
(ajoute)g(deux)g(carr\351s)o(,)f(donc)h Ft(u)j Fw(est)d(ar)q
(ithm\351tique)h(de)e(r)o(aison)h Ft(r)25 b Fv(\306)14
b Fw(2.)-246 2460 y
SDict begin H.S end
 -246 2460 a -246 2460 a
SDict begin 12 H.A end
 -246 2460
a -246 2460 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 2460 a 0 TeXcolorgray -141 2552 a
Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray
42 w(Le)k(nombr)o(e)f(de)g(carr\351s)g(de)g(la)g(1)1021
2529 y Fk(r)o(e)1083 2552 y Fw(r)o(ang\351e)h(est)g Ft(u)1500
2564 y Fp(0)1549 2552 y Fv(\306)d Fw(1.)p 0 TeXcolorgray
7 2652 a(\225)p 0 TeXcolorgray 42 w(Le)j(nombr)o(e)f(de)g(carr\351s)g
(de)g(la)g(2)1021 2628 y Fk(e)1065 2652 y Fw(r)o(ang\351e)g(est)h
Ft(u)1481 2664 y Fp(1)1531 2652 y Fv(\306)c Fw(3.)p 0
TeXcolorgray 7 2752 a(\225)p 0 TeXcolorgray 42 w(Le)k(nombr)o(e)f(de)g
(carr\351s)g(de)g(la)g(3)1021 2728 y Fk(e)1065 2752 y
Fw(r)o(ang\351e)g(est)h Ft(u)1481 2764 y Fp(2)1531 2752
y Fv(\306)c Fw(5.)p 0 TeXcolorgray 7 2851 a(\225)p 0
TeXcolorgray 42 w Fv(\242)8 b(\242)g(\242)p 0 TeXcolorgray
7 2951 a Fw(\225)p 0 TeXcolorgray 42 w(Le)18 b(nombr)o(e)f(de)g
(carr\351s)g(de)g(la)g(100)1101 2927 y Fk(e)1146 2951
y Fw(r)o(ang\351e)g(est)h Ft(u)1562 2963 y Fp(99)1643
2951 y Fv(\306)c Fw(1)c Fv(\305)g Fw(99)g Fv(\243)g Fw(2)17
b Fv(\306)d Fw(199.)-38 3107 y Fl(")p Fw(Il)j(y)g(a)g(un)h(d\351calage)
f(:)g(le)h(nombr)o(e)f(de)g(carr\351s)g(de)g(la)h(100)1698
3083 y Fk(e)1742 3107 y Fw(r)o(ang\351e)g(est)g Ft(u)2159
3119 y Fp(99)2225 3107 y Fw(.)-246 3138 y
SDict begin H.S end
 -246 3138 a
-246 3138 a
SDict begin 12 H.A end
 -246 3138 a -246 3138 a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 3138 a 0 TeXcolorgray
-141 3231 a Fw(3.)p 0 TeXcolorgray 43 w(Le)g(nombr)o(e)f(total)h(de)f
(carr\351s)g(de)g(la)h(1)1079 3207 y Fk(r)o(e)1140 3231
y Fw(\340)f(la)h(100)1396 3207 y Fk(e)1440 3231 y Fw(r)o(ang\351e)g
(est)1732 3399 y(1)10 b Fv(\305)g Fw(3)g Fv(\305)g Fw(5)g
Fv(\305)g(\242)e(\242)g(\242)13 b(\305)d Fw(199.)-38
3579 y(On)17 b(calcule)h(cette)g(somme)h(comme)f(dans)g(l)o('exer)o
(cice)g(pr\351c\351dent)g(:)f(on)h(note)1480 3748 y Ft(S)h
Fv(\306)14 b Fw(1)c Fv(\305)g Fw(3)g Fv(\305)g Fw(5)g
Fv(\305)g(\242)e(\242)g(\242)14 b(\305)c Fw(195)g Fv(\305)g
Fw(197)g Fv(\305)g Fw(199)-38 3916 y(et)18 b(on)f(\351cr)q(it)g
Ft(S)22 b Fw(\340)17 b(l)o('endroit)h(et)g(\340)f(l)o('envers)i(:)1359
4196 y Ft(S)g Fv(\306)p 1 0 0 TeXcolorrgb 14 w Fw(1)p
0 TeXcolorgray 92 w Fv(\305)p 0 0 1 TeXcolorrgb 10 w
Fw(3)p 0 TeXcolorgray 91 w Fv(\305)p 0 1 0 TeXcolorrgb
10 w Fw(5)p 0 TeXcolorgray 92 w Fv(\305)10 b(\242)e(\242)g(\242)j(\305)
p 1 0.5 0 TeXcolorrgb 10 w Fw(195)p 0 TeXcolorgray 12
w Fv(\305)p 0.5 0 0.5 TeXcolorrgb 10 w Fw(197)p 0 TeXcolorgray
12 w Fv(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w Fw(199)p
0 TeXcolorgray 1359 4321 a Ft(S)19 b Fv(\306)p 1 0 0
TeXcolorrgb 14 w Fw(199)p 0 TeXcolorgray 12 w Fv(\305)p
0 0 1 TeXcolorrgb 10 w Fw(197)p 0 TeXcolorgray 11 w Fv(\305)p
0 1 0 TeXcolorrgb 10 w Fw(195)p 0 TeXcolorgray 12 w Fv(\305)10
b(\242)e(\242)g(\242)j(\305)p 1 0.5 0 TeXcolorrgb 10
w Fw(5)p 0 TeXcolorgray 92 w Fv(\305)p 0.5 0 0.5 TeXcolorrgb
10 w Fw(3)p 0 TeXcolorgray 92 w Fv(\305)p 0.75 0.5 0.25
TeXcolorrgb 10 w Fw(1)p 0 TeXcolorgray -38 4501 a(La)18
b(somme)h(des)f(ter)q(mes)g(d)n('une)h(m\352me)g(couleur)g(est)f
(toujours)h(\351gale)f(\340)g(200)h(et)f(il)g(y)g(a)f(100)i(ter)q(mes)g
(\(autant)f(que)h(le)f(nombr)o(e)f(de)h(r)o(ang\351es\).)-38
4601 y(On)f(a)g(donc)g(:)1183 4828 y(2)p Ft(S)i Fv(\306)14
b Fw(100)c Fv(\243)g Fw(200)476 b Ft(S)19 b Fv(\306)2282
4772 y Fw(100)10 b Fv(\243)g Fw(200)p 2282 4809 319 5
v 2421 4885 a(2)2624 4828 y Fv(\306)15 b Fw(10)8 b(000.)-246
5010 y
SDict begin H.S end
 -246 5010 a -246 5010 a
SDict begin 12 H.A end
 -246 5010 a -246 5010
a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -246 5010 a 109 x Fy(3)105 b(\311)n(tudes)23 b(de)g(fonctions)-246
5203 y
SDict begin H.S end
 -246 5203 a -246 5203 a
SDict begin 12 H.A end
 -246 5203 a -246 5203
a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 5203 a 0 TeXcolorgray 100 x Fx(Ex)o(er)o(cice)14
b(18)p 0 TeXcolorgray 41 w Fw(U)m(n)27 b(vo)n(yageur)e(de)h(commer)o
(ce)g(\()p Fv(\306)g Fw(un)g(r)o(epr\351sentant\))h(fait)g(une)f(note)h
(de)f(fr)o(ais)g(pour)h(chaque)f(jour)h(de)e(tr)o(avail)i(o\371)f(il)h
(utilise)g(sa)-246 5402 y(voitur)o(e)o(.)18 b(Il)e(r)o(e\347oit)i(une)g
(par)q(t)f(\002xe)g(de)g(30)h Fs(N)p Fw(,)f(et)h(une)g(indemnit\351)h
(de)e(0,5)i Fs(N)p Fw(/km.)-246 5546 y Fx(R)o(emarque)f(:)j
Fw(On)h(peut)g(penser)g(que)g(l)o('indemnit\351)i(kilom\351tr)q(ique)f
(ser)q(t)f(\340)f(r)o(embourser)g(les)h(fr)o(ais)g(de)f(d\351placement)
i(\(par)e(exemple)i(si)f(le)g(r)o(epr\351-)-246 5646
y(sentant)d(utilise)g(sa)f(propr)o(e)e(voitur)o(e\))9
b(;)18 b(et)f(que)h(la)g(par)q(t)f(\002xe)g(ser)q(t)g(\340)g(payer)g
(les)h(r)o(epas)o(.)p 0 TeXcolorgray 1930 5895 a(9)p
0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a Fw(1.)p
0 TeXcolorgray 43 w(S)o('il)19 b(fait)e(120)i(km)f(dans)f(la)h(jour)q
(n\351e)o(,)f(le)h(montant)h(de)e(la)g(note)h(de)g(fr)o(ais)g(est)g(de)
1532 20 y(30)10 b Fv(\305)g Fw(120)g Fv(\243)g Fw(0,)e(5)19
b Fv(\306)14 b Fw(30)c Fv(\305)g Fw(60)17 b Fv(\306)d
Fw(90)k Fs(N)p Fw(.)-246 114 y
SDict begin H.S end
 -246 114 a -246 114 a
SDict begin 12 H.A end

-246 114 a -246 114 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 114 a 0 TeXcolorgray -141
217 a Fw(2.)p 0 TeXcolorgray 43 w(On)f(note)j Ft(x)j
Fw(le)17 b(nombr)o(e)h(de)f(km)g(par)o(cour)q(us)g(par)h(le)f(vo)n
(yageur)g(de)g(commer)o(ce)o(,)h(et)25 b Ft(f)19 b Fw(\()r
Ft(x)5 b Fw(\))17 b(le)h(montant)h(de)e(la)g(note)h(de)g(fr)o(ais)o(.)f
(On)h(a)f(alors)1543 400 y Ft(f)i Fw(\()r Ft(x)5 b Fw(\))14
b Fv(\306)g Fw(30)c Fv(\305)i Ft(x)j Fv(\243)10 b Fw(0,)e(5)18
b Fv(\306)c Fw(0,)8 b(5)r Ft(x)15 b Fv(\305)10 b Fw(30.)-246
502 y
SDict begin H.S end
 -246 502 a -246 502 a
SDict begin 12 H.A end
 -246 502 a -246 502 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246
502 a 0 TeXcolorgray -141 597 a Fw(3.)p 0 TeXcolorgray
43 w(La)k(fonction)22 b Ft(f)34 b Fw(est)14 b(af\002ne)o(,)g(puisque)22
b Ft(f)f Fw(\()r Ft(x)5 b Fw(\))14 b Fv(\306)g Fw(0,)8
b(5)r Ft(x)f Fv(\305)r Fw(30)14 b(\(c)n('est)g(bien)g(une)g(fonction)g
(de)g(la)g(for)q(me)22 b Ft(f)i Fw(\()r Ft(x)5 b Fw(\))14
b Fv(\306)i Ft(a)6 b(x)h Fv(\305)r Ft(b)q Fw(,)14 b(avec)i
Ft(a)i Fv(\306)c Fw(0,)8 b(5)14 b(et)g Ft(b)20 b Fv(\306)14
b Fw(30\).)g(S)o(a)-38 697 y(courbe)j(r)o(epr\351sentative)i(est)f
(donc)f(une)h(droite)o(,)f(que)h(l)o('on)g(tr)o(ace)f(\340)g(par)q(tir)
h(d)n('un)f(tableau)h(de)f(valeurs)h(avec)g(deux)f(valeurs)9
b(;)18 b(par)g(exemple)h(:)p 0 TeXcolorgray 0 TeXcolorgray
654 816 666 4 v 654 916 4 100 v 762 886 a Ft(x)p 908
916 V 180 w Fw(0)p 1092 916 V 124 w(120)p 1317 916 V
654 919 666 4 v 654 1019 4 100 v 715 989 a Ft(f)g Fw(\()r
Ft(x)5 b Fw(\))p 908 1019 V 103 w(30)p 1092 1019 V 124
w(90)p 1317 1019 V 654 1022 666 4 v 608 1217 a Ft(f)19
b Fw(\(0\))14 b Fv(\306)g Fw(0,)8 b(5)i Fv(\243)g Fw(0)g
Fv(\305)g Fw(30)18 b Fv(\306)c Fw(30)527 1341 y Ft(f)19
b Fw(\(120\))c Fv(\306)f Fw(0,)8 b(5)i Fv(\243)g Fw(120)g
Fv(\305)g Fw(30)19 b Fv(\306)14 b Fw(90)p 0 TeXcolorgray
2050 1388 9 576 v 0 TeXcolorgray 2095 896 a(On)21 b(place)h(les)g
(points)h(de)e(coor)o(donn\351es)g(\(0;)8 b(30\))23 b(et)f(\(120;)8
b(90\),)23 b(puis)2095 996 y(on)18 b(tr)o(ace)g(la)g(droite)g(\226)g
(en)g(r\351alit\351)h(un)f(segment,)i(puisqu)n('on)g(va)d(de)h(0)2095
1095 y(\340)f(200)i(en)f(abscisse)o(.)-38 1635 y Fx(R)o(emarque)e(:)j
Fw(On)h(a)f(choisi)h(les)g(valeurs)h(0)f(et)f(120,)i(mais)g(on)e(peut)i
(pr)o(endr)o(e)e(n)-6 b('impor)q(te)20 b(quelles)h(valeurs)g(\226)e(l)o
('avantage)i(de)e(0,)h(c)n('est)g(que)g(le)-38 1734 y(calcul)e(est)g
(facile)9 b(;)18 b(et)f(l)o('avantage)i(de)e(120,)i(c)n('est)f(qu)n
('on)g(a)f(d\351j\340)g(fait)h(le)g(calcul)g(dans)f(la)h(question)h(1.)
p 0 TeXcolorgray 0 TeXcolorgray 1331 3543 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.20155 a add def
/d 0.0 a add neg def /h 207.61046 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 3543
a 1482 3443 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 15 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 156.01645 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22714
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 195.5174 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22272
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 156.01645  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 156.01645  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 195.5174  def /dT 932100 abs 65536 div viceversa
{ neg } if def /DT 20. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.71114  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.71114  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 195.5174  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 195.5174  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.01645  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.42271  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1467 3540 a Fp(0)71
b(20)56 b(40)g(60)g(80)41 b(100)25 b(120)g(140)g(160)g(180)1393
3462 y(0)1362 3344 y(10)1362 3226 y(20)1362 3108 y(30)1362
2990 y(40)1362 2872 y(50)1362 2754 y(60)1362 2635 y(70)1362
2517 y(80)1362 2399 y(90)1331 2281 y(100)1331 2163 y(110)1331
2045 y(120)1482 3443 y
tx@Dict begin { 92.44766 11.51305 } PutCoor PutBegin  end
 1482 3443 a 57 x Fw(km)17 b(par)o(cour)q(us)1482
3443 y
tx@Dict begin  PutEnd  end
 1482 3443 a 1482 3443 a
tx@Dict begin { 4.1484 180.28 } PutCoor PutBegin  end
 1482 3443 a 57 x Fw(montant)h(de)f(la)
1482 3600 y(note)h(de)f(fr)o(ais)1482 3443 y
tx@Dict begin  PutEnd  end
 1482 3443
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.22717 184.95285
0.0 42.68143   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 106.70357 0.0
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 0.0 64.00223
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.68143   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.3363 128.04428   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2777 3543 a
currentpoint initclip moveto
 2777 3543 a -246
3587 a
SDict begin H.S end
 -246 3587 a -246 3587 a
SDict begin 12 H.A end
 -246 3587 a -246 3587
a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 3587 a 0 TeXcolorgray -141 3701 a Fw(4.)p 0 TeXcolorgray
43 w(Le)j(vo)n(yageur)e(de)h(commer)o(ce)g(a)g(une)h(note)g(de)f(fr)o
(ais)g(de)g(75)h Fs(N)p Fw(.)f(P)n(our)g(d\351ter)q(miner)g(le)h(nombr)
o(e)f(de)g(km)g(par)o(cour)q(us)g(dans)g(la)g(jour)q(n\351e)o(,)h(il)f
(y)g(a)-38 3801 y(deux)e(m\351thodes)i(:)p 0 TeXcolorgray
7 3915 a(\225)p 0 TeXcolorgray 42 w Fx(G)o(raphiquement)q(.)d
Fw(On)i(voit)f(qu)n('il)i(a)e(par)o(cour)q(u)f(90)j(km)e
(\(pointill\351s)j(rouges\))p 0 0 1 TeXcolorrgb 2390
3915 a
SDict begin H.S end
 2390 3915 a -30 x Fp(2)2425 3915 y
SDict begin 12 H.L end
 2425 3915 a
2425 3915 a
SDict begin [/Subtype /Link/Dest (Hfootnote.2) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2425 3915 a 0 TeXcolorgray Fw(.)p 0 TeXcolorgray
7 4015 a(\225)p 0 TeXcolorgray 42 w Fx(P)m(ar)d(le)h(calcul.)h
Fw(On)h(r)o(etir)o(e)f(les)i(fr)o(ais)g(\002xes)f(:)g(75)11
b Fv(\241)g Fw(30)20 b Fv(\306)d Fw(45)k Fs(N)e Fw(d)n('indemnit\351)j
(kilom\351tr)q(ique)o(.)g(P)o(uis)o(,)f(comme)g(chaque)g(km)g(compte)g
(pour)80 4115 y(0,)8 b(5)18 b Fs(N)p Fw(,)f(on)h(divise)g(:)g(45)10
b Fv(\245)g Fw(0,)e(5)17 b Fv(\306)d Fw(45)c Fv(\243)g
Fw(2)16 b Fv(\306)e Fw(90)k(km)q(.)p 0 0 1 TeXcolorrgb
1536 4115 a
SDict begin H.S end
 1536 4115 a -31 x Fp(3)1571 4115 y
SDict begin 12 H.L end
 1571 4115
a 1571 4115 a
SDict begin [/Subtype /Link/Dest (Hfootnote.3) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1571 4115 a 0 TeXcolorgray -246 4192 a
SDict begin H.S end

-246 4192 a -246 4192 a
SDict begin 12 H.A end
 -246 4192 a -246 4192 a
SDict begin [/View [/XYZ H.V]/Dest (exo.19) cvn /DEST pdfmark end
 -246
4192 a -246 4210 a
SDict begin H.S end
 -246 4210 a -246 4210 a
SDict begin 12 H.A end
 -246 4210
a -246 4210 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -246 4210 a 0 TeXcolorgray 104 x Fx(Ex)o(er)o(cice)c(19)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Lorsqu)n('on)k
(t\351l\351charge)g(50)g(M)n(o)m(,)f(on)h(paye)f(3)g
Fs(N)p Fw(.)p 0 TeXcolorgray 7 4413 a(\225)p 0 TeXcolorgray
42 w(Lorsqu)n('on)i(t\351l\351charge)f(150)h(M)n(o)m(,)e(les)i(100)g
(pr)o(emiers)f(co\373tent)h(3)f Fs(N)9 b Fw(;)17 b(et)h(les)h(50)f
(suivants)h(co\373tent)g(50)10 b Fv(\243)g Fw(0,)e(04)18
b Fv(\306)d Fw(2)j Fs(N)p Fw(.)f(On)h(paye)f(donc)g(au)80
4513 y(total)h(3)10 b Fv(\305)g Fw(2)15 b Fv(\306)f Fw(5)k
Fs(N)p Fw(.)-246 4528 y
SDict begin H.S end
 -246 4528 a -246 4528 a
SDict begin 12 H.A end
 -246
4528 a -246 4528 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -246 4528 a 0 TeXcolorgray -141 4642
a Fw(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(le)f(tableau)g(de)f
(valeurs)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1241 4754
1626 4 v 1241 4854 4 100 v 1294 4824 a(N)n(ombr)o(e)e(de)i(M)n(o)p
1862 4854 V 102 w(0)p 2006 4854 V 104 w(50)p 2190 4854
V 104 w(100)p 2414 4854 V 104 w(150)p 2639 4854 V 105
w(200)p 2863 4854 V 1241 4857 1626 4 v 1241 4957 4 100
v 1294 4927 a(P)o(r)q(ix)f(\340)g(payer)p 1862 4957 V
218 w(3)p 2006 4957 V 124 w(3)p 2190 4957 V 164 w(3)p
2414 4957 V 185 w(5)p 2639 4957 V 184 w(7)p 2863 4957
V 1241 4960 1626 4 v -38 5084 a Fx(R)o(emarque)d(:)j
Fw(jusqu)n('\340)i(100)g(M)n(o)m(,)e(on)g(paye)g(3)h
Fs(N)p Fw(.)f(Ensuite)o(,)i(chaque)f(nouvelle)h(tr)o(anche)f(de)f(50)h
(M)n(o)f(est)h(factur\351e)g(2)g Fs(N)p Fw(.)-246 5117
y
SDict begin H.S end
 -246 5117 a -246 5117 a
SDict begin 12 H.A end
 -246 5117 a -246 5117 a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -246
5117 a 0 TeXcolorgray -141 5213 a Fw(3.)p 0 TeXcolorgray
43 w(On)g(constr)q(uit)h(la)f(courbe)g(qui)h(donne)f(le)h(pr)q(ix)f
(pay\351)g(en)h(fonction)g(du)f(nombr)o(e)g(de)g(M)n(o)g
(t\351l\351charg\351s)o(.)h(Elle)g(est)g(constante)g(sur)g(l)o('inter)q
(valle)-38 5313 y([)-13 5312 y(0;)8 b(100)175 5313 y(])211
5312 y(,)17 b(puis)i(af\002ne)e(sur)h(l)o('inter)q(valle)1140
5313 y([)1165 5312 y(100;)8 b(200)1433 5313 y(])1470
5312 y(.)17 b(Il)g(faut)h(donc)f(utiliser)i(une)f(r\350gle)f(pour)h
(effectuer)h(le)f(tr)o(ac\351)p 0 0 1 TeXcolorrgb 3282
5312 a
SDict begin H.S end
 3282 5312 a -30 x Fp(4)3317 5312 y
SDict begin 12 H.L end
 3317 5312 a
3317 5312 a
SDict begin [/Subtype /Link/Dest (Hfootnote.4) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3317 5312 a 0 TeXcolorgray Fw(.)p 0 TeXcolorgray
-246 5384 1757 4 v -154 5461 a Fo(2)q(.)p 0 TeXcolorgray
-76 5461 a
SDict begin H.S end
 -76 5461 a -76 5461 a
SDict begin H.R end
 -76 5461 a -76 5461
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.2) cvn /DEST pdfmark
end
 -76 5461 a 0 TeXcolorgray Fo(La)c(m\351thode)h(gr)o(aphique)f(est)g
(simple)o(,)g(mais)f(la)h(r\351ponse)g(pourr)o(ait)g(\352tr)o(e)g
(impr\351cise)o(.)-154 5540 y(3)q(.)p 0 TeXcolorgray
-76 5540 a
SDict begin H.S end
 -76 5540 a -76 5540 a
SDict begin H.R end
 -76 5540 a -76 5540
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.3) cvn /DEST pdfmark
end
 -76 5540 a 0 TeXcolorgray Fo(On)f(peut)h(aussi)f(r\351soudr)o(e)h(l)o
('\351quation)g(0,)6 b(5)q Fe(x)12 b Fd(\305)c Fo(30)14
b Fd(\306)e Fo(75.)-154 5619 y(4)q(.)p 0 TeXcolorgray
-76 5619 a
SDict begin H.S end
 -76 5619 a -76 5619 a
SDict begin H.R end
 -76 5619 a -76 5619
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.4) cvn /DEST pdfmark
end
 -76 5619 a 0 TeXcolorgray Fo(On)h(parle)h(de)g(fonction)g(\253)d
(af\002ne)k(par)e(mor)o(ceaux)e(\273.)p 0 TeXcolorgray
0 TeXcolorgray 1909 5895 a Fw(10)p 0 TeXcolorgray eop
end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1212 1227
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 202.76924 a add def
/d 0.0 a add neg def /h 177.37851 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1212 1227 a 1381 1082 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 182.46393 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 10 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.95384 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33865
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 182.46393  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 182.46393  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.95384  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.42677  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.95384  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.95384  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 182.46393  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1366 1179 a Fp(0)130
b(50)100 b(100)84 b(150)g(200)g(250)g(300)h(350)1292
1102 y(0)1292 925 y(1)1292 747 y(2)1292 570 y(3)1292
393 y(4)1292 216 y(5)1292 39 y(6)1381 1082 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 42.6773 64.01866
0.0 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35461 149.37688
42.6773 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 98.16206 0.0
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 0.0 59.74823
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1381 1082 a
tx@Dict begin { 87.53294 11.3057 } PutCoor PutBegin  end
 1381 1082 a 57 x
Fw(N)n(ombr)o(e)16 b(de)h(M)n(o)1381 1082 y
tx@Dict begin  PutEnd  end
 1381 1082
a 1381 1082 a
tx@Dict begin { 1.34561 146.62965 } PutCoor PutBegin  end
 1381 1082 a 54 x Fw(P)o(r)q(ix)1381 1082
y
tx@Dict begin  PutEnd  end
 1381 1082 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33865 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6773 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01596 106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35461 149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2895 1227 a
currentpoint initclip moveto
 2895
1227 a -246 1268 a
SDict begin H.S end
 -246 1268 a -246 1268 a
SDict begin 12 H.A end
 -246 1268
a -246 1268 a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -246 1268 a 0 TeXcolorgray -141 1381 a
Fw(4.)p 0 TeXcolorgray 43 w(Il)g(y)f(a)i(deux)f(m\351thodes)i(:)p
0 TeXcolorgray 7 1494 a(\225)p 0 TeXcolorgray 42 w Fx(G)o(raphiquement)
q(.)d Fw(On)i(voit)f(qu)n('on)h(a)f(t\351l\351charg\351)h(140)h(M)n(o)e
(\(pointill\351s)i(rouges\).)p 0 TeXcolorgray 7 1594
a(\225)p 0 TeXcolorgray 42 w Fx(P)m(ar)c(le)h(calcul.)g
Fw(J'ai)h(pay\351)h(4,60)i Fs(N)p Fw(,)d(donc)g(3)10
b Fv(\305)g Fw(1,)e(60)21 b Fs(N)p Fw(.)c(J'ai)h(donc)f
(t\351l\351charg\351)h(1,)8 b(60)i Fv(\245)g Fw(0,)e(04)19
b Fv(\306)c Fw(40)j(M)n(o)g(au-del\340)g(du)f(100)3579
1570 y Fk(e)3606 1594 y Fw(.)h(A)n(utr)o(ement)g(dit,)80
1694 y(j)o('ai)f(t\351l\351charg\351)h(140)h(M)n(o)m(.)-246
1777 y
SDict begin H.S end
 -246 1777 a -246 1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777
a
SDict begin [/View [/XYZ H.V]/Dest (exo.20) cvn /DEST pdfmark end
 -246 1777 a 0 TeXcolorgray 112 x Fx(Ex)o(er)o(cice)14
b(20)p 0 TeXcolorgray 41 w Fw(P)n(our)j(louer)h(une)g(voitur)o(e)g(je)g
(dois)f(payer)g(:)p 0 TeXcolorgray -76 1989 a(\225)p
0 TeXcolorgray 42 w(une)h(par)q(t)f(\002xe)g(de)g(20)h
Fs(N)p Fw(.)p 0 TeXcolorgray -76 2089 a(\225)p 0 TeXcolorgray
42 w(0,6)g Fs(N)34 b Fw(par)18 b(km)f(par)o(cour)q(u.)-246
2181 y
SDict begin H.S end
 -246 2181 a -246 2181 a
SDict begin 12 H.A end
 -246 2181 a -246 2181
a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -246 2181 a 0 TeXcolorgray -141 2277 a Fw(1.)p 0 TeXcolorgray
43 w(P)n(our)g(100)h(km,)g(je)g(payer)o(ai)1527 2376
y Ft(P)8 b Fw(\(100\))16 b Fv(\306)e Fw(20)c Fv(\305)g
Fw(100)g Fv(\243)g Fw(0,)e(6)19 b Fv(\306)14 b Fw(80)k
Fs(N)f Fw(;)-38 2522 y(et)h(pour)f(50)i(km,)e(je)h(payer)o(ai)1577
2622 y Ft(P)8 b Fw(\(50\))14 b Fv(\306)h Fw(20)10 b Fv(\305)g
Fw(50)g Fv(\243)g Fw(0,)e(6)18 b Fv(\306)c Fw(50)k Fs(N)p
Fw(.)-246 2679 y
SDict begin H.S end
 -246 2679 a -246 2679 a
SDict begin 12 H.A end
 -246 2679 a
-246 2679 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -246 2679 a 0 TeXcolorgray -141 2782 a Fw(2.)p
0 TeXcolorgray 43 w(D)o('une)f(mani\350r)o(e)h(g\351n\351r)o(ale)o(,)g
(pour)i Ft(x)i Fw(km)c(par)o(cour)q(us)f(je)h(payer)o(ai)1813
2959 y(20)10 b Fv(\305)i Ft(x)j Fv(\243)10 b Fw(0,)e(6)20
b Fs(N)p Fw(.)-38 3136 y(A)-5 b(vec)17 b(les)h(notations)h(de)e(l)o
('\351nonc\351,)i(cela)f(donne)1768 3235 y Ft(P)8 b Fw(\()r
Ft(x)d Fw(\))15 b Fv(\306)f Fw(0,)8 b(6)r Ft(x)15 b Fv(\305)10
b Fw(20.)-246 3311 y
SDict begin H.S end
 -246 3311 a -246 3311 a
SDict begin 12 H.A end
 -246 3311
a -246 3311 a
SDict begin [/View [/XYZ H.V]/Dest (exo.21) cvn /DEST pdfmark end
 -246 3311 a -246 3329 a
SDict begin H.S end
 -246 3329 a -246
3329 a
SDict begin 12 H.A end
 -246 3329 a -246 3329 a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -246 3329 a 0 TeXcolorgray
102 x Fx(Ex)o(er)o(cice)k(21)p 0 TeXcolorgray 0 TeXcolorgray
146 w Fw(1.)p 0 TeXcolorgray 43 w(C)o(omme)19 b(120)c
Fv(\306)g Fw(60)10 b Fv(\305)g Fw(60)16 b Fv(\306)e Fw(60)c
Fv(\305)g Fw(6)g Fv(\243)g Fw(10,)21 b(le)d(co\373t)f(pour)h(120)h
(minutes)g(de)e(location)h(est)1768 3608 y(15)10 b Fv(\305)g
Fw(6)g Fv(\243)g Fw(5)17 b Fv(\306)d Fw(45)k Fs(N)p Fw(.)-246
3686 y
SDict begin H.S end
 -246 3686 a -246 3686 a
SDict begin 12 H.A end
 -246 3686 a -246 3686
a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -246 3686 a 0 TeXcolorgray -141 3799 a Fw(2.)p 0 TeXcolorgray
43 w(On)f(compl\350te)i(le)f(tableau)g(de)f(valeurs)h(:)p
0 TeXcolorgray 0 TeXcolorgray 1210 3906 1689 4 v 1210
4006 4 100 v 1263 3976 a(D)o(ur\351e)p 1526 4006 V 123
w(0)p 1710 4006 V 124 w(20)p 1894 4006 V 104 w(40)p 2078
4006 V 104 w(60)p 2262 4006 V 104 w(80)p 2446 4006 V
104 w(100)p 2670 4006 V 104 w(120)p 2895 4006 V 1210
4009 1689 4 v 1210 4108 4 100 v 1263 4079 a(P)o(r)q(ix)p
1526 4108 V 181 w(15)p 1710 4108 V 104 w(15)p 1894 4108
V 104 w(15)p 2078 4108 V 104 w(15)p 2262 4108 V 104 w(25)p
2446 4108 V 124 w(35)p 2670 4108 V 145 w(45)p 2895 4108
V 1210 4112 1689 4 v -246 4190 a
SDict begin H.S end
 -246 4190 a -246 4190
a
SDict begin 12 H.A end
 -246 4190 a -246 4190 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -246 4190 a 0 TeXcolorgray
-141 4269 a Fw(3.)p 0 TeXcolorgray 43 w(On)f(constr)q(uit)h(le)g(gr)o
(aphique)g(:)p 0 TeXcolorgray 0 TeXcolorgray 1210 5646
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 203.2079 a add def
/d 0.0 a add neg def /h 156.0013 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1210 5646 a 1387 5539 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 181.86719 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22722
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 143.19681 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22714
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 181.86719  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 181.86719  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 143.19681  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 1.42271  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 143.19681
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 181.86719
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 143.19681  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 143.19681  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 181.86719  def /dT 932395 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.84544  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 143.19681
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 181.86719
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1372 5636 a Fp(0)72
b(10)56 b(20)g(30)g(40)g(50)g(60)g(70)h(80)f(90)40 b(100)26
b(110)1299 5559 y(0)1299 5441 y(5)1268 5322 y(10)1268
5204 y(15)1268 5086 y(20)1268 4968 y(25)1268 4850 y(30)1268
4732 y(35)1268 4614 y(40)1268 4496 y(45)1387 5539 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.36285
42.68166 0.0 42.68166   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 170.72571
128.04497 85.36285 42.68166   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1387 5539 a
tx@Dict begin { 99.59 14.48624 } PutCoor PutBegin  end
 1387 5539 a 54 x Fw(temps)19 b(\(en)f(min\))1387
5539 y
tx@Dict begin  PutEnd  end
 1387 5539 a 1387 5539 a
tx@Dict begin { 5.69086 131.62585 } PutCoor PutBegin  end
 1387 5539 a 54 x Fw(pr)q(ix)g(\(en)f
(euros\))1387 5539 y
tx@Dict begin  PutEnd  end
 1387 5539 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 0.0 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 28.45428 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 56.90857 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 85.36285 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 113.81714 71.1361   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 142.27142 99.59053   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 170.72571 128.04497   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
2897 5646 a
currentpoint initclip moveto
 2897 5646 a -246 5710 a
SDict begin H.S end
 -246 5710 a -246
5710 a
SDict begin 12 H.A end
 -246 5710 a -246 5710 a
SDict begin [/View [/XYZ H.V]/Dest (exo.22) cvn /DEST pdfmark end
 -246 5710 a 0 TeXcolorgray
1909 5895 a Fw(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a Fx(Ex)o(er)o(cice)14
b(22)p 0 TeXcolorgray 41 w Fw(Les)22 b(gar)o(es)f(de)g(C)o(alais)h(et)g
(de)f(Boulogne-sur)o(-mer)h(sont)g(distantes)h(de)e(30)h(km.)g(U)m(n)f
(tr)o(ain)h(par)q(t)f(\340)g(12)h(h)g(de)f(Boulogne-sur)o(-mer)h(en)
-246 -63 y(dir)o(ection)f(de)g(C)o(alais)h(et)f(roule)g(\340)g(la)g
(vitesse)i(de)e(40)h(km/h.)g(U)m(n)f(tr)o(ain)h(par)q(t)e(de)h(C)o
(alais)h(\340)f(12)h(h)f(15)h(et)f(fait)h(route)f(en)g(sens)h(inverse)g
(\340)f(la)g(vitesse)i(de)-246 37 y(60)c(km/h.)-246 66
y
SDict begin H.S end
 -246 66 a -246 66 a
SDict begin 12 H.A end
 -246 66 a -246 66 a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -246 66 a 0
TeXcolorgray -141 178 a Fw(1.)p 0 TeXcolorgray 43 w(Le)h(tr)o(ain)g
(qui)h(par)q(t)e(\340)h(12)g(h)g(de)g(Boulogne-sur)o(-mer)g(roule)g
(\340)g(la)g(vitesse)h(de)f(40)g(km/h,)h(donc)f(il)g(par)o(cour)q(t)f
(40)h(km)h(en)f(60)g(min.)h(P)n(our)e(savoir)-38 278
y(quand)e(il)h(arr)q(ive)f(\340)g(C)o(alais)o(,)i(on)e(compl\350te)i
(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1528 363 1051 4 v 1528 462 4 100 v 1605
432 a(temps)g(\(en)e(min\))p 2208 462 V 127 w(60)p 2392
462 V 134 w(?)p 2576 462 V 1528 466 1051 4 v 1528 565
4 100 v 1582 535 a(distance)g(\(en)h(km\))p 2208 565
V 103 w(40)p 2392 565 V 104 w(30)p 2576 565 V 1528 569
1051 4 v -38 705 a(Le)g(tr)o(ain)g(mettr)o(a)502 672
y Fp(60)p Fj(\243)p Fp(30)p 502 685 165 5 v 554 733 a(40)691
705 y Fv(\306)770 672 y Fp(1)6 b(800)p 770 685 130 5
v 804 733 a(40)924 705 y Fv(\306)14 b Fw(45)k(min)g(pour)g(arr)q(iver)e
(\340)h(C)o(alais)o(,)i(donc)e(il)h(y)f(ser)o(a)h(\340)f(12)h(h)f(45.)
-38 867 y(P)n(our)h(le)i(tr)o(ain)f(qui)h(par)q(t)f(de)f(C)o(alais)o(,)
j(le)e(calcul)h(est)g(plus)g(facile)g(:)f(il)g(roule)g(\340)g(60)h
(km/h,)g(donc)f(par)o(cour)q(t)f(60)i(km)f(en)h(60)f(min)9
b(;)20 b(et)f(ainsi)h(30)g(km)-38 966 y(en)e(30)g(min.)g(C)o(omme)h(il)
f(par)q(t)f(\340)g(12)h(h)g(15,)g(il)g(arr)q(ive)f(\340)g(12)h(h)g(45)g
(lui)g(aussi.)-38 1128 y(On)f(peut)i(ainsi)f(r)o(epr\351senter)g(la)f
(mar)o(che)h(des)f(deux)g(tr)o(ains)i(:)p 0 TeXcolorgray
0 TeXcolorgray 769 2532 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 309.42352 a add def
/d 0.0 a add neg def /h 159.1932 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 769 2532 a 1389 2361 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 213.39554 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 128.03732 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 234.73509  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 234.73509  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 138.70709  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 138.70709  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 138.70709  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 234.73509  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1389 2361 a
tx@Dict begin { -8.53569 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h)1389 2361 y
tx@Dict begin  PutEnd  end
 1389
2361 a 1389 2361 a
tx@Dict begin { 29.87524 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h10)1389 2361
y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 72.55435 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h20)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 115.23346 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h30)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 157.91257 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h40)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 200.59167 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fc(12h50)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -6.40192 3.84096 } PutCoor PutBegin  end
 1389 2361 a 36 x Fc(0)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 45.23975 } PutCoor PutBegin  end
 1389 2361 a 36 x Fc(10)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 88.34573 } PutCoor PutBegin  end
 1389 2361 a 36 x Fc(20)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -44.81319 8.53569 } PutCoor PutBegin  end
 1389 2361 a 1418 2430
a Fc(Boulogne)p 1389 2365 289 4 v 1389 2469 4 107 v 1674
2469 V 1389 2471 289 4 v 1389 2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a 1389
2361 a
tx@Dict begin { -44.81319 136.57301 } PutCoor PutBegin  end
 1389 2361 a 1418 2430 a Fc(C)o(alais)p 1389 2365
203 4 v 1389 2457 4 95 v 1588 2457 V 1389 2459 203 4
v 1389 2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 131.87828 } PutCoor PutBegin  end
 1389 2361 a 36
x Fc(30)1389 2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 96.02798 -7.25536 } PutCoor PutBegin  end
 1389 2361
a 0 1 0 TeXcolorrgb 40 x Fc(12h27)p 0 TeXcolorgray 1389
2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 0.0
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 0.0 64.01866
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.23346 0.0 115.23346
76.82251   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
3338 2532 a
currentpoint initclip moveto
 3338 2532 a -246 2574 a
SDict begin H.S end
 -246 2574 a -246
2574 a
SDict begin 12 H.A end
 -246 2574 a -246 2574 a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -246 2574 a 0 TeXcolorgray
-140 2687 a Fw(2.)p 0 TeXcolorgray 42 w(N)n(ous)25 b(allons)i(d\351ter)
q(miner)f(l)o('heur)o(e)h(de)e(croisement)h(des)g(tr)o(ains)g(par)g(le)
g(calcul.)g(Gr)o(aphiquement,)i(cela)e(corr)o(espond)f(\340)h(l)o
('abscisse)h(du)-38 2787 y(point)18 b(d)n('intersection)i(des)d
(courbes)o(.)-38 2949 y(\300)24 b(12h15,)k(le)d(tr)o(ain)h(qui)g(par)q
(t)e(de)h(Boulogne-sur)o(-mer)h(a)f(par)o(cour)q(u)g(10)h(km)f
(\(facile)h(\340)f(v\351r)q(i\002er\),)f(il)i(est)g(donc)e(\340)h(20)h
(km)g(de)f(C)o(alais)o(.)g(C'est)-38 3049 y(l)o('heur)o(e)19
b(\340)e(laquelle)i(le)f(deuxi\350me)h(tr)o(ain)f(par)q(t.)g(C)o(omme)h
(l)o('un)f(roule)g(\340)f(40)i(km/h)f(et)g(l)o('autr)o(e)g(\340)f(60)i
(km/h,)f(tout)h(se)f(passe)g(comme)h(si)f(un)f(seul)-38
3148 y(tr)o(ain)h(devait)f(par)o(cour)q(ir)g(20)h(km)f(\340)h(la)f
(vitesse)i(de)e(40)10 b Fv(\305)g Fw(60)17 b Fv(\306)d
Fw(100)19 b(km/h.)f(On)f(compl\350te)j(un)d(tableau)h(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1508
3233 1092 4 v 1508 3333 4 100 v 1585 3303 a(temps)f(\(en)g(min\))p
2188 3333 V 147 w(60)p 2412 3333 V 154 w(?)p 2596 3333
V 1508 3336 1092 4 v 1508 3436 4 100 v 1561 3406 a(distance)g(\(en)g
(km\))p 2188 3436 V 103 w(100)p 2412 3436 V 104 w(20)p
2596 3436 V 1508 3439 1092 4 v -28 3542 a Fp(60)p Fj(\243)p
Fp(20)p -28 3555 165 5 v 8 3603 a(100)161 3575 y Fv(\306)240
3542 y Fp(1)6 b(200)p 240 3555 130 5 v 259 3603 a(100)394
3575 y Fv(\306)14 b Fw(12,)k(donc)f(il)h(faudr)o(ait)g(12)g(min)g(\340)
f(ce)h(tr)o(ain)f(pour)h(par)o(cour)q(ir)e(20)j(km.)f(Ainsi,)g(les)g
(deux)f(tr)o(ains)h(se)g(croiseront-ils)g(\340)1445 3754
y(12)h(h)e(15)h(min)11 b Fv(\305)f Fw(12)19 b(min)c Fv(\306)f
Fw(12)k(h)g(27)g(min)q(.)-246 3848 y
SDict begin H.S end
 -246 3848 a -246
3848 a
SDict begin 12 H.A end
 -246 3848 a -246 3848 a
SDict begin [/View [/XYZ H.V]/Dest (exo.23) cvn /DEST pdfmark end
 -246 3848 a 0 TeXcolorgray
103 x Fx(Ex)o(er)o(cice)c(23)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 887 5339 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.07468 a add def
/d 0.0 a add neg def /h 156.49008 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 887 5339 a 1444 4885 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 188.9262 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 101.86087 0.0 -54.62921   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 188.9262  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 188.9262  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.62921  def /maxTickline 101.86087  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 101.86087  0 -54.62921  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.62921
 101.86087  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 188.9262  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1429 4982 a Fp(0)205 b(1)h(2)f(3)g(4)g(5)g(6)-1705 b
Fj(\241)p Fp(1)-309 b Fj(\241)p Fp(2)1356 4904 y(0)1314
5141 y Fj(\241)p Fp(1)1356 4668 y(1)1356 4432 y(2)1356
4196 y(3)1444 4885 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -28.45274 -56.90549 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 0.0 -28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 113.81097 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 14.22636 0.0
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 -56.90549
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 170.71646
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 28.45274 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 28.45274 -56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1444 4885 a
tx@Dict begin { -18.4941 17.64055 } PutCoor PutBegin  end
 1444 4885 a 0 1 0 TeXcolorrgb 51 x Fw(0,)8
b(5)p 0 TeXcolorgray 1444 4885 a
tx@Dict begin  PutEnd  end
 1444 4885 a 1444 4885
a
tx@Dict begin { 133.7278 -8.5359 } PutCoor PutBegin  end
 1444 4885 a 1 0 0 TeXcolorrgb 51 x Fw(5)p 0 TeXcolorgray
1444 4885 a
tx@Dict begin  PutEnd  end
 1444 4885 a 1444 4885 a
tx@Dict begin { 162.18054 -8.5359 } PutCoor PutBegin  end
 1444 4885 a 1 0 0
TeXcolorrgb 51 x Fw(6)p 0 TeXcolorgray 1444 4885 a
tx@Dict begin  PutEnd  end
 1444
4885 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3013 5339 a
currentpoint initclip moveto
 3013 5339 a -246
5404 a
SDict begin H.S end
 -246 5404 a -246 5404 a
SDict begin 12 H.A end
 -246 5404 a -246 5404
a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -246 5404 a 0 TeXcolorgray -141 5518 a Fw(1.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g(3)f(par)25 b Ft(f)37 b
Fw(est)18 b(0,)8 b(5)18 b(\(pointill\351s)i(ver)q(ts\).)-246
5551 y
SDict begin H.S end
 -246 5551 a -246 5551 a
SDict begin 12 H.A end
 -246 5551 a -246 5551
a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -246 5551 a 0 TeXcolorgray -141 5646 a Fw(2.)p 0 TeXcolorgray
43 w(Les)e(solutions)h(de)e(l)o('\351quation)28 b Ft(f)19
b Fw(\()r Ft(x)5 b Fw(\))14 b Fv(\306)g Fw(1)k(sont)g
Fv(\241)p Fw(2)g(;)f(4)h(et)f(6)h(\(pointill\351s)i(rouges\).)p
0 TeXcolorgray 1909 5895 a(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a Fw(3.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)25
b Ft(f)51 b Fw(:)p 0 TeXcolorgray 0 TeXcolorgray 1073
-75 a

 1073 -75 a 1073 -75 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a 167
w Ft(x)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a 117 w Ft(f)1241
-74 y Fw(\()1270 -75 y Ft(x)1314 -74 y Fw(\))1073 -75
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a Fv(\241)p Fw(2)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 1073
-75 a
 0 setgray
 1073 -75 a Fv(\241)p Fw(1)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 -75 a
 0 setgray

1073 -75 a Fw(2)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a Fw(6)1073
-75 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a Fv(\305)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 -75
a
 0 setgray
 1073 -75 a Fw(0)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a Fv(\241)1073
-75 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a Fw(0)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073 -75
a
 0 setgray
 1073 -75 a Fv(\305)1073 -75 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 466 a
SDict begin H.S end
 -246 466 a
-246 466 a
SDict begin 12 H.A end
 -246 466 a -246 466 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -246 466 a 0 TeXcolorgray
-141 580 a Fw(4.)p 0 TeXcolorgray 43 w(Le)18 b(maximum)h(de)25
b Ft(f)36 b Fw(est)18 b(3,)g(son)g(minimum)i(est)e Fv(\241)p
Fw(1)f(\(points)i(bleus\).)-246 614 y
SDict begin H.S end
 -246 614 a -246
614 a
SDict begin 12 H.A end
 -246 614 a -246 614 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -246 614 a 0 TeXcolorgray
-141 709 a Fw(5.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b Ft(f)51 b Fw(:)p 0 TeXcolorgray
0 TeXcolorgray 636 796 a

 636 796 a 636 796 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 636 796
a
 0 setgray
 636 796 a 168 w Ft(x)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a
118 w Ft(f)805 797 y Fw(\()834 796 y Ft(x)878 797 y Fw(\))636
796 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 340.16171 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 340.16171 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 340.16171 -85.04042 lineto

 340.16171 0.0 lineto

 closepath

 340.16171 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a Fv(\241)p Fw(2)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 636
796 a
 0 setgray
 636 796 a Fw(0)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a Fw(5)636
796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 323.55753 -17.21701 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a Fw(6)636 796 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a Fw(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a Fw(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a Fv(\241)p Fw(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636
796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796 a Fv(\241)p Fw(1)636
796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09723 -41.12665 moveto

 142.20247 -69.77762 lineto

 pgfstr

 save

 [0.9105 -0.41336 0.41336 0.9105 142.20247 -69.77762 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796
a 636 796 a
 0 setgray
 636 796 a Fw(3)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796
a 636 796 a
 0 setgray
 636 796 a Fw(3)636 796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796 a
Fw(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796
a Fw(1)636 796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 249.17833 -41.15018 moveto

 315.58054 -71.2758 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 315.58054 -71.2758 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 1573
a
SDict begin H.S end
 -246 1573 a -246 1573 a
SDict begin 12 H.A end
 -246 1573 a -246 1573 a
SDict begin [/View [/XYZ H.V]/Dest (exo.24) cvn /DEST pdfmark end
 -246
1573 a 0 TeXcolorgray 133 x Fx(Ex)o(er)o(cice)14 b(24)p
0 TeXcolorgray 41 w Fw(La)k(fonction)26 b Ft(f)36 b Fw(est)18
b(d\351\002nie)g(sur)f(l)o('inter)q(valle)1559 1707 y([)1585
1706 y(1;)8 b(5)1693 1707 y(])1737 1706 y(par)25 b Ft(f)1929
1707 y Fw(\()1958 1706 y Ft(x)2002 1707 y Fw(\))2043
1706 y Fv(\306)14 b Fw(2)r Ft(x)h Fv(\305)2287 1673 y
Fp(8)p 2284 1686 36 5 v 2285 1735 a Fm(x)2340 1706 y
Fv(\241)10 b Fw(10.)-246 1764 y
SDict begin H.S end
 -246 1764 a -246 1764
a
SDict begin 12 H.A end
 -246 1764 a -246 1764 a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -246 1764 a 0 TeXcolorgray
-141 1849 a Fw(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
855 1920 2399 4 v 855 2020 4 100 v 962 1990 a Ft(x)p
1108 2020 V 160 w Fw(1)p 1252 2020 V 152 w(1,)e(5)p 1560
2020 V 179 w(2)p 1758 2020 V 159 w(2,)g(5)p 2025 2020
V 214 w(3)p 2333 2020 V 233 w(3,)g(5)p 2641 2020 V 152
w(4)p 2784 2020 V 124 w(4,)g(5)p 3037 2020 V 159 w(5)p
3250 2020 V 855 2023 2399 4 v 855 2122 4 100 v 916 2093
a Ft(f)19 b Fw(\()r Ft(x)5 b Fw(\))p 1108 2122 V 102
w(0)p 1252 2122 V 104 w Fv(\241)p Fw(1,)j(67)p 1560 2122
V 105 w Fv(\241)p Fw(2)p 1758 2122 V 103 w Fv(\241)p
Fw(1,)g(8)p 2025 2122 V 104 w Fv(\241)p Fw(1,)g(33)p
2333 2122 V 105 w Fv(\241)p Fw(0,)g(71)p 2641 2122 V
105 w(0)p 2784 2122 V 104 w(0,)g(78)p 3037 2122 V 104
w(1,)g(6)p 3250 2122 V 855 2126 2399 4 v -38 2299 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)1453 2498 y Ft(f)h Fw(\(1\))c
Fv(\306)f Fw(2)c Fv(\243)g Fw(1)g Fv(\305)1915 2442 y
Fw(8)p 1915 2479 41 5 v 1915 2555 a(1)1976 2498 y Fv(\241)g
Fw(10)15 b Fv(\306)f Fw(2)c Fv(\305)g Fw(8)g Fv(\241)g
Fw(10)17 b Fv(\306)d Fw(0)1453 2696 y Ft(f)19 b Fw(\(4\))c
Fv(\306)f Fw(2)c Fv(\243)g Fw(4)g Fv(\305)1915 2640 y
Fw(8)p 1915 2677 V 1915 2753 a(4)1976 2696 y Fv(\241)g
Fw(10)15 b Fv(\306)f Fw(8)c Fv(\305)g Fw(2)g Fv(\241)g
Fw(10)17 b Fv(\306)d Fw(0.)-246 2836 y
SDict begin H.S end
 -246 2836 a -246
2836 a
SDict begin 12 H.A end
 -246 2836 a -246 2836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -246 2836 a 0 TeXcolorgray
-141 2916 a Fw(2.)p 0 TeXcolorgray 43 w(C)o(ourbe)j(r)o
(epr\351sentative)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1279 4252 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 186.65034 a add def
/d 0.0 a add neg def /h 150.79962 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1279 4252 a 1473 3642 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.3189 0.0 -23.33145 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 77.3915 0.0 -73.40813   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.3189  0 -23.33145  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -23.33145
 163.3189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-73.40813  def /maxTickline 77.3915  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.3915
0.0 -73.40813   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -23.33145 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 77.3915  0 -73.40813  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -73.40813
 77.3915  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-23.33145  def /maxTickline 163.3189  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.3915
0.0 -73.40813   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -23.33145 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1458 3739 a Fp(0)205
b(1)g(2)g(3)g(4)g(5)1384 3661 y(0)1342 3898 y Fj(\241)p
Fp(1)1342 4134 y Fj(\241)p Fp(2)1384 3425 y(1)1384 3189
y(2)1473 3642 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 5 def /dx
x1 x sub 199 div def /F@pstplot ((x+4.0/x-5.0)*2.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 93.34709 -28.45274 0.0
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 34.69023 0.0 34.69023
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 93.34709 0.0 93.34709
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
2829 4252 a
currentpoint initclip moveto
 2829 4252 a -246 4295 a
SDict begin H.S end
 -246 4295 a -246
4295 a
SDict begin 12 H.A end
 -246 4295 a -246 4295 a
SDict begin [/View [/XYZ H.V]/Dest (Item.60) cvn /DEST pdfmark end
 -246 4295 a 0 TeXcolorgray
-141 4410 a Fw(3.)p 0 TeXcolorgray 43 w(Les)18 b(ant\351c\351dents)h
(de)e Fv(\241)p Fw(1)h(par)25 b Ft(f)36 b Fw(sont)18
b(1,)8 b(25)19 b(et)f(3,)8 b(25)19 b(environ)f(\(pointill\351s)h
(rouges\).)-246 4443 y
SDict begin H.S end
 -246 4443 a -246 4443 a
SDict begin 12 H.A end
 -246 4443
a -246 4443 a
SDict begin [/View [/XYZ H.V]/Dest (Item.61) cvn /DEST pdfmark end
 -246 4443 a 0 TeXcolorgray -141 4539 a
Fw(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(:)p
0 TeXcolorgray 0 TeXcolorgray 991 4593 a

 991 4593 a 991
4593 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a 168 w Ft(x)991 4593 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991
4593 a
 0 setgray
 991 4593 a 117 w Ft(f)1159 4594 y Fw(\()1188 4593
y Ft(x)1232 4594 y Fw(\))991 4593 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593
a Fw(1)991 4593 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a Fw(2)991 4593
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a Fw(5)991 4593 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 4593 a
 /pgfsc{}def/pgffc{}def
 991
4593 a 991 4593 a
 0 setgray
 991 4593 a Fw(0)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 4593
a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a Fw(0)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991
4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a Fv(\241)p Fw(2)991
4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991 4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a Fv(\241)p
Fw(2)991 4593 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09744 -41.14923 moveto

 142.20209 -69.78137 lineto

 pgfstr

 save

 [0.9106 -0.41315 0.41315 0.9106 142.20207 -69.78136 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 4593
a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a Fw(1.6)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs



991 4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a Fw(1.6)991
4593 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43564 -70.77017 moveto

 226.89362 -43.80154 lineto

 pgfstr

 save

 [0.91064 0.41304 -0.41304 0.91064 226.8936 -43.80156 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 5332 a
SDict begin H.S end
 -246
5332 a -246 5332 a
SDict begin 12 H.A end
 -246 5332 a -246 5332 a
SDict begin [/View [/XYZ H.V]/Dest (Item.62) cvn /DEST pdfmark end
 -246 5332
a 0 TeXcolorgray -141 5446 a Fw(5.)p 0 TeXcolorgray 43
w(T)-8 b(ableau)18 b(de)f(signe)h(:)p 0 TeXcolorgray
1909 5895 a(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 991 -244
a

 991 -244 a 991 -244 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a 168 w Ft(x)991
-244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -44.81912 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a 117 w Ft(f)1159 -243 y Fw(\()1188
-244 y Ft(x)1232 -243 y Fw(\))991 -244 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -56.69362 lineto

 255.12128 -56.69362 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -56.69362 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -56.69362 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs


 991 -244 a
 0 setgray
 991
-244 a Fw(1)991 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a Fw(4)991
-244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a Fw(5)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 70.867 -28.3468 moveto

 70.867 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43611 -45.56381 ] concat

 pgfs


 991 -244
a
 0 setgray
 991 -244 a Fw(0)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -43.94487 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a Fv(\241)991
-244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.47653 -45.56381 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a Fw(0)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.12997 -45.07565 ] concat

 pgfs


 991 -244
a
 0 setgray
 991 -244 a Fv(\305)991 -244 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 297 a
SDict begin H.S end
 -246 297 a
-246 297 a
SDict begin 12 H.A end
 -246 297 a -246 297 a
SDict begin [/View [/XYZ H.V]/Dest (exo.25) cvn /DEST pdfmark end
 -246 297 a 0 TeXcolorgray
132 x Fx(Ex)o(er)o(cice)14 b(25)p 0 TeXcolorgray 41 w
Fw(On)21 b(suppose)h(que)f(le)g(pour)o(centage)g(de)f(femmes)j(fumant)f
(du)e(tabac)g(quotidiennement)j(en)e(fonction)h(de)e(l)o('\342ge)j
Ft(x)j Fw(\(en)20 b(ann\351es\),)-246 529 y(depuis)f(15)f(ans)g(jusqu)n
('\340)g(40)g(ans)o(,)h(est)f(le)f(nombr)o(e)25 b Ft(f)19
b Fw(\()r Ft(x)5 b Fw(\))18 b(donn\351)f(par)g(la)h(for)q(mule)g
(suivante)h(:)1528 728 y Ft(f)g Fw(\()r Ft(x)5 b Fw(\))14
b Fv(\306)h(\241)p Fw(0,)8 b(05)r Ft(x)2004 694 y Fp(2)2051
728 y Fv(\305)i Fw(3)r Ft(x)15 b Fv(\241)10 b Fw(10.)-246
782 y
SDict begin H.S end
 -246 782 a -246 782 a
SDict begin 12 H.A end
 -246 782 a -246 782 a
SDict begin [/View [/XYZ H.V]/Dest (Item.63) cvn /DEST pdfmark end
 -246
782 a 0 TeXcolorgray -141 878 a Fw(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1209 948 1690 4 v 1209
1048 4 100 v 1317 1018 a Ft(x)p 1463 1048 V 215 w Fw(15)p
1756 1048 V 158 w(20)p 1940 1048 V 159 w(25)p 2234 1048
V 159 w(30)p 2418 1048 V 159 w(35)p 2711 1048 V 158 w(40)p
2895 1048 V 1209 1051 1690 4 v 1209 1151 4 100 v 1270
1121 a Ft(f)19 b Fw(\()r Ft(x)5 b Fw(\))p 1463 1151 V
103 w(23,)j(75)p 1756 1151 V 105 w(30)p 1940 1151 V 104
w(33,)g(75)p 2234 1151 V 106 w(35)p 2418 1151 V 104 w(33,)g(75)p
2711 1151 V 105 w(30)p 2895 1151 V 1209 1154 1690 4 v
-38 1328 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)1378
1510 y Ft(f)h Fw(\(15\))c Fv(\306)f(\241)p Fw(0,)8 b(05)i
Fv(\243)g Fw(15)1997 1476 y Fp(2)2045 1510 y Fv(\305)g
Fw(3)g Fv(\243)g Fw(15)g Fv(\241)g Fw(10)18 b Fv(\306)c
Fw(23,)8 b(75)1378 1646 y Ft(f)19 b Fw(\(40\))c Fv(\306)f(\241)p
Fw(0,)8 b(05)i Fv(\243)g Fw(40)1997 1612 y Fp(2)2045
1646 y Fv(\305)g Fw(3)g Fv(\243)g Fw(40)g Fv(\241)g Fw(10)18
b Fv(\306)c Fw(30.)-246 1759 y
SDict begin H.S end
 -246 1759 a -246 1759
a
SDict begin 12 H.A end
 -246 1759 a -246 1759 a
SDict begin [/View [/XYZ H.V]/Dest (Item.64) cvn /DEST pdfmark end
 -246 1759 a 0 TeXcolorgray
-141 1844 a Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
682 4015 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 330.51694 a add def
/d 0.0 a add neg def /h 253.41519 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 682 4015 a 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 250.05663 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4523
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 225.48006 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.4523
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 250.05663  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 250.05663  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 225.48006  def /dT 1864650 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 225.48006
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 250.05663
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 225.48006  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 225.48006  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 250.05663  def /dT 1864650 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 5.69046  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 225.48006
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 250.05663
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1335 3880 a Fp(0)205
b(5)189 b(10)175 b(15)f(20)g(25)g(30)g(35)h(40)1261 3802
y(0)1261 3566 y(5)1230 3330 y(10)1230 3093 y(15)1230
2857 y(20)1230 2621 y(25)1230 2385 y(30)1230 2149 y(35)1350
3783 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1350 3783 a 1350 3783 a
tx@Dict begin { 170.7138 199.1661 } PutCoor PutBegin  end
 1350 3783 a 1350 3783
a
tx@Dict begin ps@rot  RotBegin  end
 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -10. def /x1 15. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/10.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 5.69046 mul F@pstplot 5.69046 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 5.69046
mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 5.69046 mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto
} { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1350 3783 a
tx@Dict begin RotEnd  end
 1350 3783 a 1350 3783 a
tx@Dict begin  PutEnd  end
 1350 3783 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.7138 0.0 170.7138
199.1661   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.61841 170.7138 0.0
170.7138   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.8092 0.0 113.8092
170.7138   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1350 3783 a
tx@Dict begin { 209.23807 -18.36105 } PutCoor PutBegin  end
 1350
3783 a 54 x Fw(\342ge)1350 3783 y
tx@Dict begin  PutEnd  end
 1350 3783 a 1350 3783
a
tx@Dict begin { -71.3895 214.7085 } PutCoor PutBegin  end
 1350 3783 a 57 x Fw(\045)17 b(de)g(fumeuses)1350 3783
y
tx@Dict begin  PutEnd  end
 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 170.7138
199.1661   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3426 4015 a
currentpoint initclip moveto
 3426 4015 a -246 4059 a
SDict begin H.S end
 -246 4059 a -246
4059 a
SDict begin 12 H.A end
 -246 4059 a -246 4059 a
SDict begin [/View [/XYZ H.V]/Dest (Item.65) cvn /DEST pdfmark end
 -246 4059 a 0 TeXcolorgray
-141 4173 a Fw(3.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(:)p 0 TeXcolorgray 0 TeXcolorgray
991 4227 a

 991 4227 a 991 4227 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227
a 168 w Ft(x)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a 117 w Ft(f)1159
4228 y Fw(\()1188 4227 y Ft(x)1232 4228 y Fw(\))991 4227
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 66.0052 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a Fw(15)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 151.04568 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991
4227 a Fw(30)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a Fw(40)991
4227 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 57.93535 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 59.9279 -78.98308 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a Fw(23.75)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 57.93535 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 59.9279 -78.98308 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a Fw(23.75)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 149.05307 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 151.04562 -40.4615 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a Fw(35)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 149.05307 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 151.04562 -40.4615 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a Fw(35)991
4227 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 87.60588 -68.37538 moveto

 143.0683 -43.2325 lineto

 pgfstr

 save

 [0.91072 0.41286 -0.41286 0.91072 143.06828 -43.23251 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 234.09349 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 236.08604 -79.01295 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227
a 991 4227 a
 0 setgray
 991 4227 a Fw(30)991 4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 234.09349 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 236.08604 -79.01295 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991
4227 a 991 4227 a
 0 setgray
 991 4227 a Fw(30)991 4227 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 166.56897 -42.24744 moveto

 228.10886 -70.15268 lineto

 pgfstr

 save

 [0.91069 -0.41295 0.41295 0.91069 228.10886 -70.15268 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4967 a
SDict begin H.S end
 -246 4967 a -246 4967 a
SDict begin 12 H.A end
 -246
4967 a -246 4967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.66) cvn /DEST pdfmark end
 -246 4967 a 0 TeXcolorgray -141 5081
a Fw(4.)p 0 TeXcolorgray 43 w(Le)g(pour)o(centage)f(de)h(fumeuses)h
(est)f(maximal)h(\340)e(30)h(ans)g(\(pointill\351s)i(ver)q(ts\).)-246
5114 y
SDict begin H.S end
 -246 5114 a -246 5114 a
SDict begin 12 H.A end
 -246 5114 a -246 5114
a
SDict begin [/View [/XYZ H.V]/Dest (Item.67) cvn /DEST pdfmark end
 -246 5114 a 0 TeXcolorgray -141 5210 a Fw(5.)p 0 TeXcolorgray
43 w(C'est)e(\340)f(par)q(tir)g(de)h(20)g(ans)f(que)h(plus)h(de)e(30)h
(\045)g(des)f(femmes)i(fument)g(quotidiennement)i(\(pointill\351s)e
(rouges\).)-246 5295 y
SDict begin H.S end
 -246 5295 a -246 5295 a
SDict begin 12 H.A end
 -246 5295
a -246 5295 a
SDict begin [/View [/XYZ H.V]/Dest (exo.26) cvn /DEST pdfmark end
 -246 5295 a 0 TeXcolorgray 114 x Fx(Ex)o(er)o(cice)14
b(26)p 0 TeXcolorgray 41 w Fw(S)n(ur)j(route)g(s\350che)o(,)g(la)g
(distance)g(d)n('arr\352t)g(en)g(m\350tr)o(es)g(d)n('un)g(v\351hicule)i
(roulant)e(\340)h Ft(x)k Fw(km/h)c(est)f(mod\351lis\351e)i(par)d(la)h
(fonction)26 b Ft(f)35 b Fw(d\351\002nie)-246 5509 y(sur)-119
5510 y([)-94 5509 y(0;)8 b(120)94 5510 y(])139 5509 y(par)1584
5608 y Ft(f)19 b Fw(\()r Ft(x)5 b Fw(\))14 b Fv(\306)g
Fw(0,)8 b(005)r Ft(x)d Fw(\()r Ft(x)15 b Fv(\305)10 b
Fw(56\).)p 0 TeXcolorgray 1909 5895 a(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.68) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a Fw(1.)p 0 TeXcolorgray 51 w Ft(f)19 b Fw(\(100\))c
Fv(\306)f Fw(0,)8 b(005)i Fv(\243)g Fw(100\(100)g Fv(\305)g
Fw(56)q(\))20 b Fv(\306)14 b Fw(78.)19 b(C)o(ela)f(signi\002e)f(que)h
(la)g(distance)g(d)n('arr\352t)f(d)n('un)h(v\351hicule)h(roulant)f
(\340)f(100)h(km/h)h(est)f(78)g(m.)-246 -129 y
SDict begin H.S end
 -246 -129
a -246 -129 a
SDict begin 12 H.A end
 -246 -129 a -246 -129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.69) cvn /DEST pdfmark end
 -246 -129 a 0 TeXcolorgray
-141 -34 a Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1109 37 1890 4 v 1109 136 4 100 v 1216 106 a Ft(x)p 1363
136 V 161 w Fw(0)p 1506 136 V 118 w(20)p 1719 136 V 152
w(40)p 1972 136 V 173 w(60)p 2224 136 V 173 w(80)p 2477
136 V 138 w(100)p 2702 136 V 139 w(120)p 2995 136 V 1109
140 1890 4 v 1109 239 4 100 v 1170 209 a Ft(f)h Fw(\()r
Ft(x)5 b Fw(\))p 1363 239 V 103 w(0)p 1506 239 V 103
w(7,)j(6)p 1719 239 V 105 w(19,)g(2)p 1972 239 V 105
w(34,)g(8)p 2224 239 V 105 w(54,)g(4)p 2477 239 V 125
w(78)p 2702 239 V 124 w(105,)g(6)p 2995 239 V 1109 243
1890 4 v -246 286 a
SDict begin H.S end
 -246 286 a -246 286 a
SDict begin 12 H.A end
 -246 286 a
-246 286 a
SDict begin [/View [/XYZ H.V]/Dest (Item.70) cvn /DEST pdfmark end
 -246 286 a 0 TeXcolorgray -141 360 a Fw(3.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1074 2215
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 236.06143 a add def
/d 0.0 a add neg def /h 215.2845 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1074 2215 a 1232 2094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.01833 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 17.07092
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 200.65862 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 17.07092
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 217.01833  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 217.01833  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 200.65862  def /dT 1118760 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.70709  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 1.70709  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.65862
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.01833
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 200.65862  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 200.65862  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 217.01833  def /dT 1118760 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.70709  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.70709  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.65862
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.01833
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1217 2191 a Fp(0)95
b(10)80 b(20)f(30)h(40)g(50)g(60)f(70)h(80)g(90)64 b(100)49
b(110)1143 2113 y(0)1112 1971 y(10)1112 1829 y(20)1112
1688 y(30)1112 1546 y(40)1112 1404 y(50)1112 1262 y(60)1112
1121 y(70)1112 979 y(80)1112 837 y(90)1081 696 y(100)1232
2094 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1232 2094 a 1232 2094 a
tx@Dict begin { -47.79858 -6.69179 } PutCoor PutBegin  end
 1232 2094 a 1232 2094
a
tx@Dict begin ps@rot  RotBegin  end
 1232 2094 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x 28. def /x1
148. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/100.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 1.70709 mul F@pstplot 1.70709 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 1.70709 mul gt { moveto } { dup -1.e30 1.70709 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 1.70709 mul gt { moveto } { dup -1.e30
1.70709 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1232 2094 a
tx@Dict begin RotEnd  end
 1232 2094 a 1232 2094 a
tx@Dict begin  PutEnd  end
 1232 2094 a 1232
2094 a
tx@Dict begin { 172.81204 25.60638 } PutCoor PutBegin  end
 1232 2094 a 54 x Fw(vitesse)1232 2247 y(\(en)17
b(km/h\))1232 2094 y
tx@Dict begin  PutEnd  end
 1232 2094 a 1232 2094 a
tx@Dict begin { 4.82825 190.04909 } PutCoor PutBegin  end
 1232 2094
a 56 x Fw(distance)h(d)n('arr\352t)1232 2250 y(\(en)f(m\))1232
2094 y
tx@Dict begin  PutEnd  end
 1232 2094 a 3034 2215 a
currentpoint initclip moveto
 3034 2215 a -246 2259
a
SDict begin H.S end
 -246 2259 a -246 2259 a
SDict begin 12 H.A end
 -246 2259 a -246 2259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.71) cvn /DEST pdfmark end
 -246
2259 a 0 TeXcolorgray -141 2373 a Fw(4.)p 0 TeXcolorgray
51 w Ft(f)i Fw(\(90\))g Fv(\306)g Fw(65,)8 b(7)23 b(et)31
b Ft(f)19 b Fw(\(80\))g Fv(\306)g Fw(54,)8 b(4)23 b(donc)f(le)g(fait)h
(de)e(baisser)i(la)f(vitesse)i(sur)e(les)g(routes)h(de)e(90)i(km/h)g
(\340)e(80)i(km/h)g(per)q(met)g(de)e(diminuer)i(la)-38
2473 y(distance)18 b(d)n('arr\352t)f(de)1730 2572 y(65,)8
b(7)i Fv(\241)g Fw(54)17 b Fv(\306)e Fw(11,)8 b(7)19
b(m.)-38 2736 y(L)-10 b('infor)q(mation)19 b(de)e(la)h(s\351cur)q
(it\351)g(routi\350r)o(e)f(est)h(donc)f(impr\351cise)i(selon)f(les)g
(donn\351es)h(de)e(l)o('exer)o(cice)p 0 0 1 TeXcolorrgb
2946 2736 a
SDict begin H.S end
 2946 2736 a -30 x Fp(5)2982 2736 y
SDict begin 12 H.L end
 2982 2736
a 2982 2736 a
SDict begin [/Subtype /Link/Dest (Hfootnote.5) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2982 2736 a 0 TeXcolorgray 17 w Fw(.)-246
2820 y
SDict begin H.S end
 -246 2820 a -246 2820 a
SDict begin 12 H.A end
 -246 2820 a -246 2820
a
SDict begin [/View [/XYZ H.V]/Dest (exo.27) cvn /DEST pdfmark end
 -246 2820 a 0 TeXcolorgray 116 x Fx(Ex)o(er)o(cice)d(27)p
0 TeXcolorgray 41 w Fw(Le)i(taux)f(d)n('anticorps)h(\(en)f(g/l\))g
(pr\351sents)h(dans)f(le)h(sang)f(d)n('un)g(nourr)q(isson)h(en)f
(fonction)h(de)f(l)o('\342ge)g(\(en)g(mois\),)h(depuis)g(la)f
(naissance)-246 3035 y(jusqu)n('\340)k(l)o('\342ge)f(de)f(12)h(mois)o
(,)h(est)f(donn\351)g(par)f(la)g(for)q(mule)i(suivante)f(:)1542
3218 y Ft(f)h Fw(\()r Ft(x)5 b Fw(\))14 b Fv(\306)g Fw(0,)8
b(1)r Ft(x)1922 3184 y Fp(2)1969 3218 y Fv(\241)i Fw(1,)e(6)r
Ft(x)15 b Fv(\305)10 b Fw(12.)-246 3305 y
SDict begin H.S end
 -246 3305 a
-246 3305 a
SDict begin 12 H.A end
 -246 3305 a -246 3305 a
SDict begin [/View [/XYZ H.V]/Dest (Item.72) cvn /DEST pdfmark end
 -246 3305 a 0 TeXcolorgray
-141 3401 a Fw(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b Ft(f)36 b Fw(sur)1346 3402
y([)1372 3401 y(0;)8 b(12)1520 3402 y(])1564 3401 y(avec)17
b(un)h(pas)g(de)f(2)32 b(:)p -38 3470 4184 4 v -38 3570
4 100 v 69 3540 a Ft(x)p 216 3570 V 370 w Fw(0)p 777
3570 V 521 w(2)p 1338 3570 V 520 w(4)p 1899 3570 V 521
w(6)p 2459 3570 V 521 w(8)p 3020 3570 V 501 w(10)p 3581
3570 V 481 w(12)p 4142 3570 V -38 3573 4184 4 v -38 3673
4 100 v 23 3643 a Ft(f)19 b Fw(\()r Ft(x)5 b Fw(\))p
216 3673 V 291 w(12)p 777 3673 V 467 w(9,)j(2)p 1338
3673 V 453 w(7,)g(2)p 1899 3673 V 487 w(6)p 2459 3673
V 487 w(5,)g(6)p 3020 3673 V 487 w(6)p 3581 3673 V 487
w(7,)g(2)p 4142 3673 V -38 3676 4184 4 v -38 3781 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)p 0 TeXcolorgray 7 3881 a(\225)p
0 TeXcolorgray 50 w Ft(f)h Fw(\(0\))14 b Fv(\306)g Fw(0,)8
b(1)i Fv(\243)g Fw(0)531 3851 y Fp(2)578 3881 y Fv(\241)g
Fw(1,)e(6)i Fv(\243)g Fw(0)g Fv(\305)g Fw(12)18 b Fv(\306)c
Fw(12.)p 0 TeXcolorgray 7 3980 a(\225)p 0 TeXcolorgray
50 w Ft(f)19 b Fw(\(12\))14 b Fv(\306)h Fw(0,)8 b(1)i
Fv(\243)g Fw(12)612 3950 y Fp(2)659 3980 y Fv(\241)g
Fw(1,)e(6)i Fv(\243)g Fw(12)g Fv(\305)g Fw(12)19 b Fv(\306)14
b Fw(7,)8 b(2.)-246 4014 y
SDict begin H.S end
 -246 4014 a -246 4014 a
SDict begin 12 H.A end
 -246
4014 a -246 4014 a
SDict begin [/View [/XYZ H.V]/Dest (Item.73) cvn /DEST pdfmark end
 -246 4014 a 0 TeXcolorgray -141 4109
a Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray -246 4163 1757
4 v -154 4240 a Fo(5)q(.)p 0 TeXcolorgray -76 4240 a
SDict begin H.S end

-76 4240 a -76 4240 a
SDict begin H.R end
 -76 4240 a -76 4240 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.5) cvn /DEST pdfmark
end
 -76 4240
a 0 TeXcolorgray Fo(Il)14 b(est)h(illusoir)o(e)e(de)h(penser)h(que)f
(tous)g(les)h(conducteurs)f(ont)g(le)h(m\352me)g(temps)g(de)f
(r\351action)g(et)h(toutes)f(les)h(voitur)o(es)e(le)i(m\352me)g
(comportement)i(en)d(termes)i(de)e(fr)o(einage)o(.)g(Les)-246
4318 y(formules)i(concernant)f(les)f(distances)f(d)o('arr\352t)g(que)i
(l)o('on)f(doit)g(appr)o(endr)o(e)f(par)h(c\234ur)g(au)g(moment)i(de)e
(passer)f(le)i(code)f(de)g(la)g(route)g(ne)h(peuvent)f(donc)g(donner)f
(que)i(des)f(or)o(dr)o(es)f(de)-246 4397 y(gr)o(andeur)7
b(;)14 b(et)g(la)g(r\351ponse)g(attendue)g(\253)d(13)j(m\350tr)o(es)d
(\273)28 b(est)14 b(en)g(r\351alit\351)g(tr\350s)g(proche)g(de)g(la)f
(r\351ponse)i(\253)c(11,7)k(m\350tr)o(es)c(\273)28 b(obtenue)14
b(avec)g(notr)o(e)g(calcul.)p 0 TeXcolorgray 0 TeXcolorgray
1909 5895 a Fw(15)p 0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 816 2259
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 298.264 a add def
/d 0.0 a add neg def /h 301.74582 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 816 2259 a 990 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 260.34248 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 260.34248 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 277.26994  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 277.26994  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 273.3746  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 273.3746  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 273.3746  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 277.26994  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 975 2121 a Fp(0)146
b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)131 b(10)115 b(11)g(12)901
2043 y(0)901 1866 y(1)901 1689 y(2)901 1512 y(3)901 1335
y(4)901 1157 y(5)901 980 y(6)901 803 y(7)901 626 y(8)901
449 y(9)870 272 y(10)870 95 y(11)870 -83 y(12)990 2024
y
tx@Dict begin { 209.3771 16.31041 } PutCoor PutBegin  end
 990 2024 a 54 x Fw(\342ge)17 b(\(en)g(mois\))990 2024
y
tx@Dict begin  PutEnd  end
 990 2024 a 990 2024 a
tx@Dict begin { 22.52675 272.21411 } PutCoor PutBegin  end
 990 2024 a 57 x Fw(T)-8 b(aux)18
b(d)n('anticorps)h(\(en)e(g/)p Fu(`)p Fw(\))990 2024
y
tx@Dict begin  PutEnd  end
 990 2024 a 990 2024 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 990 2024 a 990 2024 a
tx@Dict begin { 170.71643 119.50162 } PutCoor PutBegin  end
 990 2024
a 990 2024 a
tx@Dict begin ps@rot  RotBegin  end
 990 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -8. def /x1
4. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/5.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0.30196
0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
990 2024 a
tx@Dict begin RotEnd  end
 990 2024 a 990 2024 a
tx@Dict begin  PutEnd  end
 990 2024 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
234.73509 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
990 2024 a
tx@Dict begin { 154.25069 152.09608 } PutCoor PutBegin  end
 990 2024 a 1 0 0 TeXcolorrgb 78 x Fb(6)25
b(mois)p 0 TeXcolorgray 990 2024 a
tx@Dict begin  PutEnd  end
 990 2024 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 138.70709 0.0
138.70709   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 990 2024 a
tx@Dict begin { -16.35176 142.81148 } PutCoor PutBegin  end
 990 2024 a 1 0 0
TeXcolorrgb 51 x Fw(6,5)p 0 TeXcolorgray 990 2024 a
tx@Dict begin  PutEnd  end
 990
2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 256.07465   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.67911 196.32382   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35822 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71643 119.50162   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 213.39554 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07465 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 234.73509 138.70709   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 3292 2259 a
currentpoint initclip moveto
 3292 2259 a -246
2296 a
SDict begin H.S end
 -246 2296 a -246 2296 a
SDict begin 12 H.A end
 -246 2296 a -246 2296
a
SDict begin [/View [/XYZ H.V]/Dest (Item.74) cvn /DEST pdfmark end
 -246 2296 a 0 TeXcolorgray -141 2407 a Fw(3.)p 0 TeXcolorgray
43 w(Le)18 b(taux)g(d)n('anticorps)g(\340)f(la)g(naissance)i(est)f(de)f
(12)h(g/)p Fu(`)p Fw(.)-246 2438 y
SDict begin H.S end
 -246 2438 a -246 2438
a
SDict begin 12 H.A end
 -246 2438 a -246 2438 a
SDict begin [/View [/XYZ H.V]/Dest (Item.75) cvn /DEST pdfmark end
 -246 2438 a 0 TeXcolorgray
-141 2531 a Fw(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(:)p 0 TeXcolorgray 0 TeXcolorgray
991 2589 a

 991 2589 a 991 2589 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589
a 168 w Ft(x)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a 117 w Ft(f)1159
2590 y Fw(\()1188 2589 y Ft(x)1232 2590 y Fw(\))991 2589
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a Fw(0)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 991 2589 a
 0 setgray
 991
2589 a Fw(8)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.24191 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a Fw(12)991
2589 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a Fw(12)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a Fw(12)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a Fw(5.6)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a Fw(5.6)991
2589 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 81.52844 -42.22433 moveto

 141.85318 -69.58568 lineto

 pgfstr

 save

 [0.91064 -0.41304 0.41304 0.91064 141.85316 -69.58566 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589
a 991 2589 a
 0 setgray
 991 2589 a Fw(7.2)991 2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def

991 2589 a 991 2589 a
 0 setgray
 991 2589 a Fw(7.2)991 2589 y


 pgfr

 restore

 restore

 save
 0
TeXcolorgray
 167.78467 -70.5778 moveto

 226.89287 -43.79526 lineto

 pgfstr

 save

 [0.91081 0.41269 -0.41269 0.91081 226.89287 -43.79527 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 3447 a Fw(Le)g(taux)g(d)n('anticorps)g
(est)g(minimal)h(\340)e(l)o('\342ge)h(de)f(8)h(mois)o(.)-246
3478 y
SDict begin H.S end
 -246 3478 a -246 3478 a
SDict begin 12 H.A end
 -246 3478 a -246 3478
a
SDict begin [/View [/XYZ H.V]/Dest (Item.76) cvn /DEST pdfmark end
 -246 3478 a 0 TeXcolorgray -141 3571 a Fw(5.)p 0 TeXcolorgray
43 w(D)o('apr\350s)f(le)h(gr)o(aphique)o(,)g(le)g(taux)g(d)n
('anticorps)g(est)g(inf\351r)q(ieur)g(\340)f(6,5)i(g/)p
Fu(`)d Fw(pendant)j(6)e(mois)i(\(du)e(5)2845 3547 y Fk(e)2888
3571 y Fw(au)g(11)3071 3547 y Fk(e)3115 3571 y Fw(mois\).)-246
3715 y
SDict begin H.S end
 -246 3715 a -246 3715 a
SDict begin 12 H.A end
 -246 3715 a -246 3715
a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -246 3715 a 131 x Fy(4)105 b(T)-10 b(ableaux)23 b(d)m('effectifs)e
(et)i(pr)o(obabilit\351s)f(conditionnelles)-246 3954
y
SDict begin H.S end
 -246 3954 a -246 3954 a
SDict begin 12 H.A end
 -246 3954 a -246 3954 a
SDict begin [/View [/XYZ H.V]/Dest (exo.28) cvn /DEST pdfmark end
 -246
3954 a -246 3942 a
SDict begin H.S end
 -246 3942 a -246 3942 a
SDict begin 12 H.A end
 -246 3942
a -246 3942 a
SDict begin [/View [/XYZ H.V]/Dest (Item.77) cvn /DEST pdfmark end
 -246 3942 a 0 TeXcolorgray 87 x Fx(Ex)o(er)o(cice)14
b(28)p 0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g(de)f(l)o
('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 901 4106 2305 4 v 901 4206
4 100 v 1477 4206 V 1530 4176 a(VT)q(T)p 2052 4206 V
2103 4159 149 4 v 432 w(VT)q(T)p 2628 4206 4 100 v 433
w(T)-8 b(otal)p 3203 4206 V 901 4209 2305 4 v 901 4309
4 100 v 954 4279 a(Escalade)p 1477 4309 V 273 w(3)p 2052
4309 V 535 w(7)p 2628 4309 V 536 w(10)p 3203 4309 V 901
4312 2305 4 v 901 4412 4 100 v 952 4365 84 4 v 954 4382
a(Es)p 1031 4365 82 4 v(ca)p 1109 4365 151 4 v(lade)p
1477 4412 4 100 v 273 w(13)p 2052 4412 V 495 w(9)p 2628
4412 V 536 w(22)p 3203 4412 V 901 4415 2305 4 v 901 4515
4 100 v 954 4485 a(T)g(otal)p 1477 4515 V 406 w(16)p
2052 4515 V 495 w(16)p 2628 4515 V 496 w(32)p 3203 4515
V 901 4518 2305 4 v -38 4675 a Fx(R)o(emarque)16 b(:)k
Fw(on)h(sait)f(qu)n('il)h(y)f(a)g(autant)g(d)n('\351l\350ves)i(qui)e
(pr)o(atiquent)i(le)f(VT)q(T)g(que)g(d)n('\351l\350ves)h(qui)e(ne)h(le)
f(pr)o(atiquent)i(pas)o(,)f(donc)f(16)h(\351l\350ves)g(le)-38
4775 y(pr)o(atiquent)e(et)f(16)g(ne)g(le)f(pr)o(atiquent)j(pas)o(.)-246
4804 y
SDict begin H.S end
 -246 4804 a -246 4804 a
SDict begin 12 H.A end
 -246 4804 a -246 4804
a
SDict begin [/View [/XYZ H.V]/Dest (Item.78) cvn /DEST pdfmark end
 -246 4804 a -246 4804 a
SDict begin H.S end
 -246 4804 a -246 4804 a
SDict begin 12 H.A end
 -246
4804 a -246 4804 a
SDict begin [/View [/XYZ H.V]/Dest (Item.79) cvn /DEST pdfmark end
 -246 4804 a 0 TeXcolorgray -141 4899
a Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(P)m(ar)c(lectur)o(e)i(du)f(tableau)h(:)g
Ft(P)8 b Fw(\()p Ft(E)g Fw(\))13 b Fv(\306)1208 4866
y Fp(10)p 1208 4879 62 5 v 1208 4927 a(32)1297 4899 y
Fw(et)k Ft(P)8 b Fw(\()n Ft(V)16 b Fw(\))e Fv(\306)1644
4866 y Fp(16)p 1644 4879 V 1644 4927 a(32)1715 4899 y
Fw(.)-246 4939 y
SDict begin H.S end
 -246 4939 a -246 4939 a
SDict begin 12 H.A end
 -246 4939 a
-246 4939 a
SDict begin [/View [/XYZ H.V]/Dest (Item.80) cvn /DEST pdfmark end
 -246 4939 a 0 TeXcolorgray 4 5035 a Fw(\(b\))p
0 TeXcolorgray 41 w(On)j(s)m('int\351r)o(esse)i(aux)e(trois)h
(\351v\351nements)p 1394 4969 63 5 v 18 w Ft(V)d Fw(,)h
Ft(V)25 b Fv(\\)10 b Ft(E)25 b Fw(et)16 b Ft(V)26 b Fv([)10
b Ft(E)39 b Fw(:)p 0 TeXcolorgray 190 5132 a(\225)p 0
TeXcolorgray 262 5066 V 39 w Ft(V)33 b Fw(:)18 b(\253)c(l)o
('\351l\350ve)k(ne)g(pr)o(atique)h(pas)f(le)f(VT)q(T)d(\273.)2007
5265 y Ft(P)2070 5178 y Fg(\263)p 2102 5198 V 2100 5265
a Ft(V)2165 5178 y Fg(\264)2210 5265 y Fv(\306)2289 5209
y Fw(16)p 2289 5246 82 5 v 2289 5322 a(32)2380 5265 y(.)p
0 TeXcolorgray 190 5429 a(\225)p 0 TeXcolorgray 39 w
Ft(V)26 b Fv(\\)10 b Ft(E)25 b Fw(:)17 b(\253)d(l)o('\351l\350ve)19
b(pr)o(atique)g(l)o('escalade)f Fx(et)f Fw(le)h(VT)q(T)c(\273.)1948
5630 y Ft(P)2011 5631 y Fw(\()2036 5630 y Ft(V)25 b Fv(\\)10
b Ft(E)2229 5631 y Fw(\))2270 5630 y Fv(\306)2369 5574
y Fw(3)p 2349 5611 V 2349 5687 a(32)2440 5630 y(.)p 0
TeXcolorgray 1909 5895 a(16)p 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 190 -163 a Fw(\225)p 0
TeXcolorgray 39 w Ft(V)26 b Fv([)10 b Ft(E)25 b Fw(:)17
b(\253)d(l)o('\351l\350ve)19 b(pr)o(atique)g(l)o('escalade)f
Fx(ou)f Fw(le)h(VT)q(T)c(\273.)262 -63 y(Le)k(calcul)g(de)f
Ft(P)749 -62 y Fw(\()774 -63 y Ft(V)26 b Fv([)10 b Ft(E)968
-62 y Fw(\))1011 -63 y(est)18 b(moins)h(\351vident)g(et)e(peut)i
(\352tr)o(e)e(men\351)h(de)f(plusieurs)j(fa\347ons)e(diff\351r)o(entes)
o(.)g(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray 274 37 a
Fa(I)p 0 TeXcolorgray 41 w Fw(ajouter)k(ceux)f(qui)g(font)g(du)g(VT)q
(T)h(\340)e(ceux)h(qui)g(font)h(de)e(l)o('escalade)o(,)i(puis)f(r)o
(etr)o(ancher)g(les)g(\351l\350ves)h(qui)f(pr)o(atiquent)i(les)e(deux)
380 136 y(spor)q(ts)c(\(sinon)g(ils)g(sont)g(compt\351s)h(deux)f
(fois\))f(:)h(16)10 b Fv(\305)g Fw(10)g Fv(\241)g Fw(3)17
b Fv(\306)d Fw(23.)p 0 TeXcolorgray 274 236 a Fa(I)p
0 TeXcolorgray 41 w Fw(ajouter)k(ceux)e(qui)h(ne)g(font)g(que)g(du)f
(VT)q(T)-8 b(,)18 b(ceux)f(qui)g(ne)g(font)g(que)g(de)f(l)o('escalade)o
(,)h(et)g(ceux)g(qui)g(pr)o(atiquent)h(les)f(deux)g(spor)q(ts)f(:)380
335 y(13)10 b Fv(\305)g Fw(7)g Fv(\305)g Fw(3)17 b Fv(\306)d
Fw(23.)p 0 TeXcolorgray 274 435 a Fa(I)p 0 TeXcolorgray
41 w Fw(r)o(emarquer)j(que)f Ft(C)26 b Fw(est)18 b(le)g(contr)o(air)o
(e)f(de)g Ft(B)25 b Fw(et)18 b(donc)f(fair)o(e)g(le)h(calcul)g(:)f(32)
10 b Fv(\241)g Fw(9)16 b Fv(\306)f Fw(23.)145 534 y(Dans)h(tous)i(les)g
(cas)g(on)f(obtient)h Ft(P)8 b Fw(\()n Ft(V)26 b Fv([)10
b Ft(E)e Fw(\))13 b Fv(\306)1518 501 y Fp(23)p 1518 514
62 5 v 1518 563 a(32)1589 534 y Fw(.)-246 577 y
SDict begin H.S end
 -246
577 a -246 577 a
SDict begin 12 H.A end
 -246 577 a -246 577 a
SDict begin [/View [/XYZ H.V]/Dest (Item.81) cvn /DEST pdfmark end
 -246 577 a 0 TeXcolorgray
12 661 a Fw(\(c\))p 0 TeXcolorgray 41 w(P)m(ar)q(mi)18
b(les)g(16)h(\351l\350ves)h(qui)f(pr)o(atiquent)h(le)e(VT)q(T)-8
b(,)20 b(3)e(pr)o(atiquent)i(\351galement)g(l)o('escalade)o(,)f(donc)f
(la)g(probabilit\351)g(qu)n('un)h(\351l\350ve)h(qui)e(pr)o(a-)145
761 y(tique)g(le)g(VT)q(T)h(pr)o(atique)f(\351galement)h(l)o('escalade)
g(est)1769 728 y Fp(3)p 1754 741 62 5 v 1754 790 a(16)1825
761 y Fw(.)f(A)-5 b(vec)17 b(la)h(notation)g(du)f(cours)h(:)1938
984 y Ft(P)1987 996 y Fm(V)2040 984 y Fw(\()p Ft(E)8
b Fw(\))13 b Fv(\306)2261 928 y Fw(3)p 2241 965 82 5
v 2241 1041 a(16)2332 984 y(.)-246 1120 y
SDict begin H.S end
 -246 1120 a
-246 1120 a
SDict begin 12 H.A end
 -246 1120 a -246 1120 a
SDict begin [/View [/XYZ H.V]/Dest (exo.29) cvn /DEST pdfmark end
 -246 1120 a -246
1125 a
SDict begin H.S end
 -246 1125 a -246 1125 a
SDict begin 12 H.A end
 -246 1125 a -246 1125
a
SDict begin [/View [/XYZ H.V]/Dest (Item.82) cvn /DEST pdfmark end
 -246 1125 a 0 TeXcolorgray 79 x Fx(Ex)o(er)o(cice)h(29)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w(On)j(r)o(epr\351sente)h(la)g(situation)h(par)e(un)h(tableau)g(d)n
('effectifs)o(.)p 0 TeXcolorgray 0 TeXcolorgray 1232
1288 1644 4 v 1232 1487 4 200 v 1642 1487 V 1695 1358
a(P)n(etit)24 b(for)o(-)1695 1457 y(mat)p 2052 1487 V
2105 1358 a(Gr)o(and)2105 1457 y(for)q(mat)p 2462 1487
V 2515 1407 a(T)-8 b(otal)p 2872 1487 V 1232 1490 1644
4 v 1232 1590 4 100 v 1285 1560 a(C)o(ouleur)p 1642 1590
V 133 w(7)p 2052 1590 V 370 w(18)p 2462 1590 V 330 w(25)p
2872 1590 V 1232 1593 1644 4 v 1232 1693 4 100 v 1285
1663 a(N&B)p 1642 1693 V 247 w(0)p 2052 1693 V 370 w(5)p
2462 1693 V 370 w(5)p 2872 1693 V 1232 1696 1644 4 v
1232 1796 4 100 v 1285 1766 a(T)g(otal)p 1642 1796 V
240 w(7)p 2052 1796 V 370 w(23)p 2462 1796 V 330 w(30)p
2872 1796 V 1232 1799 1644 4 v -246 1841 a
SDict begin H.S end
 -246 1841
a -246 1841 a
SDict begin 12 H.A end
 -246 1841 a -246 1841 a
SDict begin [/View [/XYZ H.V]/Dest (Item.83) cvn /DEST pdfmark end
 -246 1841 a 0 TeXcolorgray
10 1934 a Fw(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 86
w(\225)p 0 TeXcolorgray 41 w Ft(P)8 b Fw(\()n Ft(G)e
Fw(\))14 b Fv(\306)522 1902 y Fp(23)p 522 1915 62 5 v
522 1963 a(30)594 1934 y Fw(.)p 0 TeXcolorgray 190 2047
a(\225)p 0 TeXcolorgray 262 1981 57 5 v 39 w Ft(C)26
b Fw(:)18 b(\253)c(la)j(BD)g(est)h(en)g(N&B)c(\273.)1938
2164 y Ft(P)2001 2077 y Fg(\263)p 2033 2097 V 2031 2164
a Ft(C)2090 2077 y Fg(\264)2136 2164 y Fv(\306)2235 2108
y Fw(5)p 2215 2145 82 5 v 2215 2221 a(30)2320 2164 y
Fv(\306)2399 2108 y Fw(1)p 2399 2145 41 5 v 2399 2221
a(6)2450 2164 y(.)-246 2269 y
SDict begin H.S end
 -246 2269 a -246 2269 a
SDict begin 12 H.A end

-246 2269 a -246 2269 a
SDict begin [/View [/XYZ H.V]/Dest (Item.84) cvn /DEST pdfmark end
 -246 2269 a 0 TeXcolorgray 4
2348 a Fw(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p
0 TeXcolorgray 39 w Ft(C)19 b Fv(\\)8 b Ft(G)24 b Fw(:)17
b(\253)d(la)j(BD)g(est)h(en)g(couleur)g Fx(et)f Fw(en)h(gr)o(and)e(for)
q(mat)e(\273.)1952 2561 y Ft(P)8 b Fw(\()n Ft(C)19 b
Fv(\\)8 b Ft(G)e Fw(\))14 b Fv(\306)2344 2505 y Fw(18)p
2344 2542 82 5 v 2344 2618 a(30)2435 2561 y(.)p 0 TeXcolorgray
190 2762 a(\225)p 0 TeXcolorgray 39 w Ft(C)19 b Fv([)8
b Ft(G)24 b Fw(:)17 b(\253)d(la)j(BD)g(est)h(en)g(couleur)g
Fx(ou)f Fw(en)h(gr)o(and)e(for)q(mat)e(\273.)262 2862
y(C'est)19 b(le)f(cas)f(de)g(toutes)i(les)f(BD)f(\()9
b(!\),)17 b(car)g(il)g(n)-6 b('y)18 b(en)f(a)g(aucune)h(en)g(N&B)f(et)h
(en)g(petit)g(for)q(mat.)g(C)o(onclusion)h(:)1890 3075
y Ft(P)8 b Fw(\()n Ft(C)19 b Fv([)8 b Ft(G)e Fw(\))14
b Fv(\306)2282 3019 y Fw(30)p 2282 3056 V 2282 3132 a(30)2388
3075 y Fv(\306)g Fw(1.)-246 3211 y
SDict begin H.S end
 -246 3211 a -246 3211
a
SDict begin 12 H.A end
 -246 3211 a -246 3211 a
SDict begin [/View [/XYZ H.V]/Dest (Item.85) cvn /DEST pdfmark end
 -246 3211 a 0 TeXcolorgray
12 3290 a Fw(\(c\))p 0 TeXcolorgray 41 w(Pierr)o(e)i(a)h(choisi)i(une)f
(BD)f(en)g(couleur)-5 b(.)19 b(La)f(probabilit\351)f(qu)n('elle)i(soit)
f(en)g(gr)o(and)e(for)q(mat)i(est)1938 3503 y Ft(P)1986
3515 y Fm(C)2036 3503 y Fw(\()n Ft(G)6 b Fw(\))14 b Fv(\306)2241
3447 y Fw(18)p 2241 3484 82 5 v 2241 3560 a(25)2332 3503
y(.)-246 3639 y
SDict begin H.S end
 -246 3639 a -246 3639 a
SDict begin 12 H.A end
 -246 3639 a -246
3639 a
SDict begin [/View [/XYZ H.V]/Dest (Item.86) cvn /DEST pdfmark end
 -246 3639 a 0 TeXcolorgray 4 3718 a Fw(\(d\))p
0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p 0 TeXcolorgray
41 w(La)k(BD)f(est)h(en)g(gr)o(and)e(for)q(mat.)i(La)g(probabilit\351)f
(qu)n('elle)i(soit)f(en)g(couleur)g(est)1997 3931 y Ft(P)2045
3943 y Fm(G)2096 3931 y Fw(\()n Ft(C)9 b Fw(\))k Fv(\306)2299
3875 y Fw(18)p 2299 3912 82 5 v 2299 3988 a(23)2390 3931
y(.)p 0 TeXcolorgray 190 4132 a(\225)p 0 TeXcolorgray
41 w(La)18 b(BD)f(est)h(en)g(gr)o(and)e(for)q(mat.)i(La)g
(probabilit\351)f(qu)n('elle)i Fx(ne)e Fw(soit)h Fx(pas)e
Fw(en)i(couleur)g(est)1989 4346 y Ft(P)2037 4358 y Fm(G)2095
4258 y Fg(\263)p 2127 4279 57 5 v 2125 4346 a Ft(C)2183
4258 y Fg(\264)2229 4346 y Fv(\306)2329 4289 y Fw(5)p
2308 4326 82 5 v 2308 4403 a(23)2399 4346 y(.)-246 4482
y
SDict begin H.S end
 -246 4482 a -246 4482 a
SDict begin 12 H.A end
 -246 4482 a -246 4482 a
SDict begin [/View [/XYZ H.V]/Dest (exo.30) cvn /DEST pdfmark end
 -246
4482 a -246 4487 a
SDict begin H.S end
 -246 4487 a -246 4487 a
SDict begin 12 H.A end
 -246 4487
a -246 4487 a
SDict begin [/View [/XYZ H.V]/Dest (Item.87) cvn /DEST pdfmark end
 -246 4487 a 0 TeXcolorgray 78 x Fx(Ex)o(er)o(cice)c(30)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compl\351ter)h(le)g(tableau,)g(on)g(calcule)g(:)p
0 TeXcolorgray 7 4664 a(\225)p 0 TeXcolorgray 42 w(5\045)f(de)h(10)12
b(000)20 b(valent)e(500)9 b(;)p 0 TeXcolorgray 7 4764
a(\225)p 0 TeXcolorgray 42 w(10)f(000)i Fv(\241)g Fw(500)18
b Fv(\306)d Fw(9)8 b(500)h(;)p 0 TeXcolorgray 7 4863
a(\225)p 0 TeXcolorgray 42 w(4\045)17 b(de)h(9)12 b(500)19
b(valent)f(380)9 b(;)p 0 TeXcolorgray 7 4963 a(\225)p
0 TeXcolorgray 42 w(on)17 b(compl\350te)i(le)f(r)o(este)g(du)f(tableau)
h(avec)f(des)h(additions/soustr)o(actions)o(.)p 0 TeXcolorgray
0 TeXcolorgray 980 5047 2149 4 v 980 5147 4 100 v 1477
5147 V 1530 5117 a(Animaux)g(sains)p 2085 5147 V 104
w(Animaux)g(malades)p 2807 5147 V 126 w(T)-8 b(otal)p
3125 5147 V 980 5150 2149 4 v 980 5250 4 100 v 1043 5220
a(T)g(est)18 b(positif)p 1477 5250 V 307 w(380)p 2085
5250 V 545 w(500)p 2807 5250 V 400 w(880)p 3125 5250
V 980 5253 2149 4 v 980 5353 4 100 v 1033 5323 a(T)-8
b(est)18 b(n\351gatif)p 1477 5353 V 270 w(9)12 b(120)p
2085 5353 V 559 w(0)p 2807 5353 V 413 w(9)g(120)p 3125
5353 V 980 5356 2149 4 v 980 5455 4 100 v 1144 5426 a(T)-8
b(otal)p 1477 5455 V 382 w(9)12 b(500)p 2085 5455 V 519
w(500)p 2807 5455 V 353 w(10)g(000)p 3125 5455 V 980
5459 2149 4 v -246 5500 a
SDict begin H.S end
 -246 5500 a -246 5500 a
SDict begin 12 H.A end
 -246
5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.88) cvn /DEST pdfmark end
 -246 5500 a -246 5500 a
SDict begin H.S end
 -246 5500
a -246 5500 a
SDict begin 12 H.A end
 -246 5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.89) cvn /DEST pdfmark end
 -246 5500 a 0 TeXcolorgray
-141 5630 a Fw(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p 0
TeXcolorgray 41 w Ft(P)c Fw(\()r Ft(M)f Fw(\))15 b Fv(\306)589
5574 y Fw(500)p 544 5611 211 5 v 544 5687 a(10)8 b(000)779
5630 y Fv(\306)14 b Fw(0,)8 b(05)19 b(\(c)n('est)f(le)g(5)f(\045)h
(d\351j\340)f(donn\351)h(par)f(l)o('\351nonc\351\).)p
0 TeXcolorgray 1909 5895 a(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 190 -138 a Fw(\225)p 0
TeXcolorgray 41 w Ft(P)325 -226 y Fg(\263)p 357 -205
59 5 v 357 -138 a Ft(T)415 -226 y Fg(\264)461 -138 y
Fv(\306)565 -195 y Fw(9120)p 540 -158 211 5 v 540 -81
a(10)8 b(000)775 -138 y Fv(\306)14 b Fw(0,)8 b(912.)-246
-66 y
SDict begin H.S end
 -246 -66 a -246 -66 a
SDict begin 12 H.A end
 -246 -66 a -246 -66 a
SDict begin [/View [/XYZ H.V]/Dest (Item.90) cvn /DEST pdfmark end
 -246
-66 a 0 TeXcolorgray 4 32 a Fw(\(b\))p 0 TeXcolorgray
145 -35 80 5 v 43 w Ft(M)17 b Fv(\\)10 b Ft(T)30 b Fw(:)17
b(\253)d(l)o('animal)19 b(n)-6 b('est)19 b(pas)e(malade)h(et)g(son)g
(test)g(est)g(positif.)c(\273)1671 262 y Ft(P)1734 175
y Fg(\263)p 1766 195 V 1768 262 a Ft(M)k Fv(\\)10 b Ft(T)1979
175 y Fg(\264)2025 262 y Fv(\306)2149 206 y Fw(380)p
2104 243 211 5 v 2104 319 a(10)e(000)2339 262 y Fv(\306)14
b Fw(0,)8 b(038.)-246 369 y
SDict begin H.S end
 -246 369 a -246 369 a
SDict begin 12 H.A end
 -246
369 a -246 369 a
SDict begin [/View [/XYZ H.V]/Dest (Item.91) cvn /DEST pdfmark end
 -246 369 a 0 TeXcolorgray 12 449 a Fw(\(c\))p
0 TeXcolorgray 41 w(500)24 b(des)e(880)i(animaux)g(ayant)f(un)g(test)g
(positif)i(sont)e(malades)o(,)h(donc)e(la)h(probabilit\351)g(qu)n('un)h
(animal)f(ayant)g(un)g(test)g(positif)i(soit)145 549
y(malade)17 b(est)1792 665 y Ft(P)1842 677 y Fm(T)1891
665 y Fw(\()r Ft(M)7 b Fw(\))15 b Fv(\306)2118 609 y
Fw(500)p 2118 645 122 5 v 2118 722 a(880)2263 665 y Fv(\274)g
Fw(57\045.)-246 772 y
SDict begin H.S end
 -246 772 a -246 772 a
SDict begin 12 H.A end
 -246 772
a -246 772 a
SDict begin [/View [/XYZ H.V]/Dest (Item.92) cvn /DEST pdfmark end
 -246 772 a 0 TeXcolorgray 4 852 a Fw(\(d\))p
0 TeXcolorgray 41 w(T)-8 b(ous)18 b(les)g(animaux)h(malades)f(ont)g(un)
f(test)i(positif,)g(donc)e(la)g(probabilit\351)h(qu)n('un)g(animal)g
(malade)g(ait)g(un)g(test)g(positif)h(est)1960 1034 y
Ft(P)2011 1046 y Fm(M)2075 1034 y Fw(\()p Ft(T)12 b Fw(\))i
Fv(\306)g Fw(1.)-246 1130 y
SDict begin H.S end
 -246 1130 a -246 1130 a
SDict begin 12 H.A end
 -246
1130 a -246 1130 a
SDict begin [/View [/XYZ H.V]/Dest (exo.31) cvn /DEST pdfmark end
 -246 1130 a -246 1132 a
SDict begin H.S end
 -246 1132
a -246 1132 a
SDict begin 12 H.A end
 -246 1132 a -246 1132 a
SDict begin [/View [/XYZ H.V]/Dest (Item.93) cvn /DEST pdfmark end
 -246 1132 a 0 TeXcolorgray
102 x Fx(Ex)o(er)o(cice)g(31)p 0 TeXcolorgray 0 TeXcolorgray
146 w Fw(1.)p 0 TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g
(de)f(l)o('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 370 1321 3368 4 v 370 1421
4 100 v 1300 1421 V 1353 1391 a(A)o(bonn\351s)d(au)h(soir)p
2111 1421 V 257 w(P)m(as)g(abonn\351s)g(au)f(soir)p 2923
1421 V 132 w(T)-8 b(otal)p 3734 1421 V 370 1424 3368
4 v 370 1523 4 100 v 423 1494 a(A)o(bonn\351s)18 b(au)f(matin)p
1300 1523 V 300 w(50)p 2111 1523 V 731 w(20)p 2923 1523
V 732 w(70)p 3734 1523 V 370 1527 3368 4 v 370 1626 4
100 v 423 1597 a(P)m(as)g(abonn\351s)h(au)g(matin)p 1300
1626 V 174 w(50)p 2111 1626 V 731 w(160)p 2923 1626 V
692 w(210)p 3734 1626 V 370 1630 3368 4 v 370 1729 4
100 v 423 1699 a(T)-8 b(otal)p 1300 1729 V 760 w(100)p
2111 1729 V 691 w(180)p 2923 1729 V 692 w(280)p 3734
1729 V 370 1733 3368 4 v -246 1777 a
SDict begin H.S end
 -246 1777 a -246
1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777 a
SDict begin [/View [/XYZ H.V]/Dest (Item.94) cvn /DEST pdfmark end
 -246 1777 a -246 1777
a
SDict begin H.S end
 -246 1777 a -246 1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777 a
SDict begin [/View [/XYZ H.V]/Dest (Item.95) cvn /DEST pdfmark end
 -246
1777 a 0 TeXcolorgray -141 1890 a Fw(2.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w Ft(P)8
b Fw(\()p Ft(S)d Fw(\))13 b Fv(\306)392 1857 y Fp(100)p
392 1870 93 5 v 392 1918 a(280)511 1890 y Fw(et)18 b
Ft(P)657 1802 y Fg(\263)p 689 1823 80 5 v 691 1890 a
Ft(M)769 1802 y Fg(\264)814 1890 y Fv(\306)893 1857 y
Fp(210)p 893 1870 93 5 v 893 1918 a(280)996 1890 y Fw(.)-246
1952 y
SDict begin H.S end
 -246 1952 a -246 1952 a
SDict begin 12 H.A end
 -246 1952 a -246 1952
a
SDict begin [/View [/XYZ H.V]/Dest (Item.96) cvn /DEST pdfmark end
 -246 1952 a 0 TeXcolorgray 4 2031 a Fw(\(b\))p 0 TeXcolorgray
41 w Ft(S)d Fv(\\)d Ft(M)24 b Fw(:)18 b(\253)c(le)j(pensionnair)o(e)i
(est)f(abonn\351)g(aux)f(deux)h(jour)q(naux.)c(\273)1864
2261 y Ft(P)1927 2262 y Fw(\()1954 2261 y Ft(S)h Fv(\\)d
Ft(M)2154 2262 y Fw(\))2195 2261 y Fv(\306)2295 2205
y Fw(50)p 2275 2242 122 5 v 2275 2318 a(280)2406 2261
y(.)-246 2368 y
SDict begin H.S end
 -246 2368 a -246 2368 a
SDict begin 12 H.A end
 -246 2368 a -246
2368 a
SDict begin [/View [/XYZ H.V]/Dest (Item.97) cvn /DEST pdfmark end
 -246 2368 a 0 TeXcolorgray 12 2448 a Fw(\(c\))p
0 TeXcolorgray 41 w(On)17 b(choisit)h(au)g(hasar)o(d)e(un)i
(pensionnair)o(e)h(abonn\351)e(au)h Ft(Matin)p Fw(.)f(La)h
(probabilit\351)g(qu)n('il)g(soit)g(aussi)g(abonn\351)g(au)f
Ft(Soir)j Fw(est)1936 2664 y Ft(P)1987 2676 y Fm(M)2051
2664 y Fw(\()p Ft(S)5 b Fw(\))13 b Fv(\306)2243 2608
y Fw(50)p 2243 2645 82 5 v 2243 2721 a(70)2334 2664 y(.)-246
2849 y
SDict begin H.S end
 -246 2849 a -246 2849 a
SDict begin 12 H.A end
 -246 2849 a -246 2849
a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -246 2849 a 92 x Fy(5)105 b(T)-10 b(aux)23 b(d)m('\351v)n(olution,)h
(suites)f(g\351om\351tr)q(iques)-246 3052 y
SDict begin H.S end
 -246 3052
a -246 3052 a
SDict begin 12 H.A end
 -246 3052 a -246 3052 a
SDict begin [/View [/XYZ H.V]/Dest (exo.32) cvn /DEST pdfmark end
 -246 3052 a -246
3037 a
SDict begin H.S end
 -246 3037 a -246 3037 a
SDict begin 12 H.A end
 -246 3037 a -246 3037
a
SDict begin [/View [/XYZ H.V]/Dest (Item.98) cvn /DEST pdfmark end
 -246 3037 a 0 TeXcolorgray 131 x Fx(Ex)o(er)o(cice)14
b(32)p 0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0
TeXcolorgray 43 w(100)j(\045)6 b Fv(\305)g Fw(12,)i(5)18
b(\045)c Fv(\306)g Fw(112,)8 b(5)18 b(\045)c Fv(\306)1347
3112 y Fw(112,)8 b(5)p 1347 3149 191 5 v 1382 3225 a(100)1562
3168 y Fv(\306)14 b Fw(1,)q(125,)j(donc)f(pour)g(augmenter)g(un)h
(nombr)o(e)e(de)h(12,)8 b(5)17 b(\045,)f(il)g(faut)g(le)g(multiplier)j
(par)-38 3291 y(1,)q(125.)g(On)e(compl\350te)i(donc)e(le)h(sch\351ma)g
(:)p 0 TeXcolorgray 0 TeXcolorgray 1489 3466 2 2 v 1491
3467 169 4 v 1660 3466 2 2 v 1488 3567 4 100 v 1661 3567
V 1489 3570 2 2 v 1491 3571 169 4 v 1660 3570 2 2 v 1515
3542 a(120)p 1 0 0 TeXcolorrgb 1982 3413 a Fj(\243)f
Fp(1,125)p 0 TeXcolorgray 1684 3472 4 4 v 1686 3471 V
1688 3470 V 1690 3470 V 1692 3469 V 1694 3468 V 1696
3468 V 1698 3467 V 1700 3466 V 1702 3465 V 1704 3465
V 1706 3464 V 1708 3463 V 1710 3463 V 1712 3462 V 1714
3461 V 1716 3461 V 1718 3460 V 1720 3459 V 1722 3459
V 1724 3458 V 1726 3457 V 1728 3457 V 1730 3456 V 1732
3456 V 1734 3455 V 1736 3454 V 1738 3454 V 1740 3453
V 1742 3452 V 1744 3452 V 1745 3451 V 1747 3451 V 1749
3450 V 1751 3449 V 1753 3449 V 1755 3448 V 1757 3448
V 1759 3447 V 1761 3446 V 1763 3446 V 1765 3445 V 1767
3445 V 1769 3444 V 1771 3444 V 1773 3443 V 1775 3442
V 1777 3442 V 1779 3441 V 1781 3441 V 1783 3440 V 1785
3440 V 1787 3439 V 1789 3439 V 1791 3438 V 1793 3438
V 1795 3437 V 1797 3437 V 1799 3436 V 1801 3436 V 1803
3435 V 1805 3435 V 1807 3434 V 1809 3434 V 1811 3433
V 1813 3433 V 1815 3432 V 1817 3432 V 1818 3431 V 1820
3431 V 1822 3430 V 1824 3430 V 1826 3429 V 1828 3429
V 1830 3428 V 1832 3428 V 1834 3427 V 1836 3427 V 1838
3427 V 1840 3426 V 1842 3426 V 1844 3425 V 1846 3425
V 1848 3424 V 1850 3424 V 1852 3424 V 1854 3423 V 1856
3423 V 1858 3422 V 1860 3422 V 1862 3422 V 1864 3421
V 1866 3421 V 1868 3420 V 1870 3420 V 1872 3420 V 1874
3419 V 1876 3419 V 1878 3418 V 1880 3418 V 1882 3418
V 1884 3417 V 1886 3417 V 1888 3417 V 1890 3416 V 1892
3416 V 1893 3416 V 1895 3415 V 1897 3415 V 1899 3415
V 1901 3414 V 1903 3414 V 1905 3414 V 1907 3413 V 1909
3413 V 1911 3413 V 1913 3412 V 1915 3412 V 1917 3412
V 1919 3412 V 1921 3411 V 1923 3411 V 1925 3411 V 1927
3410 V 1929 3410 V 1931 3410 V 1933 3410 V 1935 3409
V 1937 3409 V 1939 3409 V 1941 3409 V 1943 3408 V 1945
3408 V 1947 3408 V 1949 3408 V 1951 3407 V 1953 3407
V 1955 3407 V 1957 3407 V 1959 3406 V 1961 3406 V 1963
3406 V 1965 3406 V 1966 3406 V 1968 3405 V 1970 3405
V 1972 3405 V 1974 3405 V 1976 3405 V 1978 3404 V 2478
3471 a Fi(\))p Fh(\))p 2180 3404 V 2182 3405 V 2184 3405
V 2186 3405 V 2187 3405 V 2189 3405 V 2191 3406 V 2193
3406 V 2195 3406 V 2197 3406 V 2199 3406 V 2201 3407
V 2203 3407 V 2205 3407 V 2207 3407 V 2209 3408 V 2211
3408 V 2213 3408 V 2215 3408 V 2217 3409 V 2219 3409
V 2221 3409 V 2223 3409 V 2225 3410 V 2227 3410 V 2229
3410 V 2231 3410 V 2233 3411 V 2235 3411 V 2237 3411
V 2239 3412 V 2241 3412 V 2243 3412 V 2245 3412 V 2247
3413 V 2249 3413 V 2251 3413 V 2253 3414 V 2255 3414
V 2257 3414 V 2259 3415 V 2260 3415 V 2262 3415 V 2264
3416 V 2266 3416 V 2268 3416 V 2270 3417 V 2272 3417
V 2274 3417 V 2276 3418 V 2278 3418 V 2280 3418 V 2282
3419 V 2284 3419 V 2286 3420 V 2288 3420 V 2290 3420
V 2292 3421 V 2294 3421 V 2296 3422 V 2298 3422 V 2300
3422 V 2302 3423 V 2304 3423 V 2306 3424 V 2308 3424
V 2310 3424 V 2312 3425 V 2314 3425 V 2316 3426 V 2318
3426 V 2320 3427 V 2322 3427 V 2324 3427 V 2326 3428
V 2328 3428 V 2330 3429 V 2332 3429 V 2333 3430 V 2335
3430 V 2337 3431 V 2339 3431 V 2341 3432 V 2343 3432
V 2345 3433 V 2347 3433 V 2349 3434 V 2351 3434 V 2353
3435 V 2355 3435 V 2357 3436 V 2359 3436 V 2361 3437
V 2363 3437 V 2365 3438 V 2367 3438 V 2369 3439 V 2371
3439 V 2373 3440 V 2375 3440 V 2377 3441 V 2379 3441
V 2381 3442 V 2383 3442 V 2385 3443 V 2387 3444 V 2389
3444 V 2391 3445 V 2393 3445 V 2395 3446 V 2397 3446
V 2399 3447 V 2401 3448 V 2403 3448 V 2405 3449 V 2406
3449 V 2408 3450 V 2410 3451 V 2412 3451 V 2414 3452
V 2416 3452 V 2418 3453 V 2420 3454 V 2422 3454 V 2424
3455 V 2426 3456 V 2428 3456 V 2430 3457 V 2432 3457
V 2434 3458 V 2436 3459 V 2438 3459 V 2440 3460 V 2442
3461 V 2444 3461 V 2446 3462 V 2448 3463 V 2450 3463
V 2452 3464 V 2454 3465 V 2456 3465 V 2458 3466 V 2460
3467 V 2462 3468 V 2464 3468 V 2466 3469 V 2468 3470
V 2470 3470 V 2472 3471 V 2474 3472 V 2476 3473 V 2503
3465 2 2 v 2504 3466 162 4 v 2666 3465 2 2 v 2502 3568
4 103 v 2668 3568 V 2503 3571 2 2 v 2504 3572 162 4 v
2666 3571 2 2 v 2537 3543 a Fw(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1268 3754 a(inscr)q(its)18 b(d\351cembr)o(e)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2332 3743 a(inscr)q(its)g(janvier)p
0 TeXcolorgray -38 3961 a(???)13 b Fv(\306)h Fw(120)c
Fv(\243)g Fw(1,)e(125)19 b Fv(\306)14 b Fw(135,)19 b(donc)e(il)h(y)f
(aur)o(a)g(135)i(inscr)q(its)f(en)f(janvier)-5 b(.)-246
3994 y
SDict begin H.S end
 -246 3994 a -246 3994 a
SDict begin 12 H.A end
 -246 3994 a -246 3994
a
SDict begin [/View [/XYZ H.V]/Dest (Item.99) cvn /DEST pdfmark end
 -246 3994 a 0 TeXcolorgray -141 4090 a Fw(2.)p 0 TeXcolorgray
43 w(P)n(our)17 b(conna\356tr)o(e)g(le)h(pour)o(centage)g(d)n
('augmentation,)h(on)f(compl\350te)h(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1447 4264 2 2 v 1448 4265
221 4 v 1669 4264 2 2 v 1446 4365 4 100 v 1672 4365 V
1447 4368 2 2 v 1448 4369 221 4 v 1669 4368 2 2 v 1472
4339 a(5)12 b(812)p 1 0 0 TeXcolorrgb 1973 4216 a Fj(\243)17
b Fp(?)g(?)g(?)p 0 TeXcolorgray 1695 4259 4 4 v 1697
4258 V 1699 4258 V 1701 4257 V 1703 4256 V 1705 4256
V 1707 4255 V 1708 4255 V 1710 4254 V 1712 4253 V 1714
4253 V 1716 4252 V 1718 4251 V 1720 4251 V 1722 4250
V 1724 4250 V 1726 4249 V 1728 4248 V 1730 4248 V 1732
4247 V 1734 4247 V 1736 4246 V 1737 4245 V 1739 4245
V 1741 4244 V 1743 4244 V 1745 4243 V 1747 4242 V 1749
4242 V 1751 4241 V 1753 4241 V 1755 4240 V 1757 4240
V 1759 4239 V 1761 4239 V 1763 4238 V 1764 4237 V 1766
4237 V 1768 4236 V 1770 4236 V 1772 4235 V 1774 4235
V 1776 4234 V 1778 4234 V 1780 4233 V 1782 4233 V 1784
4232 V 1786 4232 V 1788 4231 V 1790 4231 V 1791 4230
V 1793 4230 V 1795 4229 V 1797 4229 V 1799 4228 V 1801
4228 V 1803 4227 V 1805 4227 V 1807 4227 V 1809 4226
V 1811 4226 V 1813 4225 V 1815 4225 V 1817 4224 V 1819
4224 V 1820 4223 V 1822 4223 V 1824 4223 V 1826 4222
V 1828 4222 V 1830 4221 V 1832 4221 V 1834 4220 V 1836
4220 V 1838 4220 V 1840 4219 V 1842 4219 V 1844 4218
V 1846 4218 V 1847 4218 V 1849 4217 V 1851 4217 V 1853
4217 V 1855 4216 V 1857 4216 V 1859 4215 V 1861 4215
V 1863 4215 V 1865 4214 V 1867 4214 V 1869 4214 V 1871
4213 V 1873 4213 V 1875 4213 V 1876 4212 V 1878 4212
V 1880 4212 V 1882 4211 V 1884 4211 V 1886 4211 V 1888
4210 V 1890 4210 V 1892 4210 V 1894 4210 V 1896 4209
V 1898 4209 V 1900 4209 V 1902 4208 V 1903 4208 V 1905
4208 V 1907 4208 V 1909 4207 V 1911 4207 V 1913 4207
V 1915 4207 V 1917 4206 V 1919 4206 V 1921 4206 V 1923
4206 V 1925 4205 V 1927 4205 V 1929 4205 V 1930 4205
V 1932 4204 V 1934 4204 V 1936 4204 V 1938 4204 V 1940
4204 V 1942 4203 V 1944 4203 V 1946 4203 V 1948 4203
V 1950 4203 V 1952 4202 V 1954 4202 V 1956 4202 V 1958
4202 V 1959 4202 V 1961 4201 V 1963 4201 V 1965 4201
V 1967 4201 V 1969 4201 V 1971 4201 V 2411 4258 a Fi(*)p
Fh(*)p 2133 4201 V 2135 4201 V 2137 4201 V 2139 4201
V 2141 4201 V 2143 4201 V 2145 4202 V 2147 4202 V 2149
4202 V 2151 4202 V 2153 4202 V 2154 4203 V 2156 4203
V 2158 4203 V 2160 4203 V 2162 4203 V 2164 4204 V 2166
4204 V 2168 4204 V 2170 4204 V 2172 4204 V 2174 4205
V 2176 4205 V 2178 4205 V 2180 4205 V 2181 4206 V 2183
4206 V 2185 4206 V 2187 4206 V 2189 4207 V 2191 4207
V 2193 4207 V 2195 4207 V 2197 4208 V 2199 4208 V 2201
4208 V 2203 4208 V 2205 4209 V 2207 4209 V 2208 4209
V 2210 4210 V 2212 4210 V 2214 4210 V 2216 4210 V 2218
4211 V 2220 4211 V 2222 4211 V 2224 4212 V 2226 4212
V 2228 4212 V 2230 4213 V 2232 4213 V 2234 4213 V 2236
4214 V 2237 4214 V 2239 4214 V 2241 4215 V 2243 4215
V 2245 4215 V 2247 4216 V 2249 4216 V 2251 4217 V 2253
4217 V 2255 4217 V 2257 4218 V 2259 4218 V 2261 4218
V 2263 4219 V 2264 4219 V 2266 4220 V 2268 4220 V 2270
4220 V 2272 4221 V 2274 4221 V 2276 4222 V 2278 4222
V 2280 4223 V 2282 4223 V 2284 4223 V 2286 4224 V 2288
4224 V 2290 4225 V 2292 4225 V 2293 4226 V 2295 4226
V 2297 4227 V 2299 4227 V 2301 4227 V 2303 4228 V 2305
4228 V 2307 4229 V 2309 4229 V 2311 4230 V 2313 4230
V 2315 4231 V 2317 4231 V 2319 4232 V 2320 4232 V 2322
4233 V 2324 4233 V 2326 4234 V 2328 4234 V 2330 4235
V 2332 4235 V 2334 4236 V 2336 4236 V 2338 4237 V 2340
4237 V 2342 4238 V 2344 4239 V 2346 4239 V 2347 4240
V 2349 4240 V 2351 4241 V 2353 4241 V 2355 4242 V 2357
4242 V 2359 4243 V 2361 4244 V 2363 4244 V 2365 4245
V 2367 4245 V 2369 4246 V 2371 4247 V 2373 4247 V 2375
4248 V 2376 4248 V 2378 4249 V 2380 4250 V 2382 4250
V 2384 4251 V 2386 4251 V 2388 4252 V 2390 4253 V 2392
4253 V 2394 4254 V 2396 4255 V 2398 4255 V 2400 4256
V 2402 4256 V 2403 4257 V 2405 4258 V 2407 4258 V 2409
4259 V 2435 4264 2 2 v 2437 4265 221 4 v 2658 4264 2
2 v 2434 4365 4 100 v 2660 4365 V 2435 4368 2 2 v 2437
4369 221 4 v 2658 4368 2 2 v 2461 4339 a Fw(6)12 b(065)p
0 0 1 TeXcolorrgb 1289 4543 a(logements)20 b(2007)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 450 w(logements)f(2015)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -38 4757 a(???)p 0 TeXcolorgray
13 w Fv(\306)14 b Fw(6)8 b(065)i Fv(\245)g Fw(5)e(812)19
b Fv(\274)14 b Fw(1,)8 b(0435.)p 1 0 0 TeXcolorrgb 0
TeXcolorgray -38 4898 a(Or)17 b(1,)8 b(0435)18 b Fv(\306)392
4842 y Fw(104,)8 b(35)p 392 4879 231 5 v 447 4955 a(100)647
4898 y Fv(\306)15 b Fw(104,)8 b(35)20 b(\045)15 b Fv(\306)f
Fw(100)19 b(\045)10 b Fv(\305)g Fw(4,)e(35)20 b(\045,)e(donc)f(le)h
(nombr)o(e)f(de)h(logements)h(a)e(augment\351)i(de)f(4,35)h(\045)e
(environ.)i(A)n(utr)o(ement)-38 5021 y(dit,)e(le)h(taux)g(d)n
('\351volution)h(du)e(nombr)o(e)h(de)f(logements)i(est)f
Fv(\305)p Fw(4,)8 b(35)19 b(\045.)-38 5185 y Fx(N.B.)i
Fw(V)-5 b(ous)21 b(n)-6 b('\352tes)21 b(pas)f(oblig\351s)g(d)n('\351cr)
q(ir)o(e)f(le)i(calcul)f(\002nal)g(:)g(vous)h(pouvez)f(passer)g(dir)o
(ectement)h(de)f(\253)14 b(1,0435)k(\273)39 b(\340)19
b(la)h(r\351ponse)h(\253)15 b(augmen-)-38 5284 y(tation)22
b(de)f(4,35)i(\045)14 b(\273.)22 b(N)n(otez)e(\351galement)i(qu)n('il)g
(faut)g(pr)o(endr)o(e)f(4)g(chiffr)o(es)h(apr\350s)f(la)h(virgule)f
(pour)h(avoir)f(une)h(r\351ponse)g(\002nale)f(arrondie)g(\340)-38
5384 y(0,01)e(\045)e(pr\350s)o(.)p 0 TeXcolorgray 1909
5895 a(18)p 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.100) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a Fw(3.)p 0 TeXcolorgray 43 w(On)17 b(r)o(appelle)i(que)f(la)g(TV)-5
b(A)18 b(\(taxe)f(sur)h(la)f(valeur)h(ajout\351e\))h(est)f(une)g(taxe)f
(sur)h(les)g(produits)g(dont)f(le)h(montant)h(r)o(evient)f(\340)f(l)o
('\311)o(tat.)-38 -51 y(Dir)o(e)f(qu)n(')i(\253)c(il)j(y)g(a)g(20)h
(\045)f(de)h(TV)-5 b(A)14 b(\273)35 b(signi\002e)18 b(qu)n('un)g
(commer)o(\347ant)g(qui)g(veut)g(gagner)f(100)h Fs(N)34
b Fw(avec)18 b(la)f(vente)i(d)n('un)f(ar)q(ticle)f(doit)g(le)h(mettr)o
(e)g(en)-38 48 y(vente)g(\340)f(120)i Fs(N)34 b Fw(\(il)18
b(ajoute)g(20)g(\045)f(de)h(la)f(valeur)-5 b(,)18 b(donc)g(il)f
(multiplie)j(par)e(1,20\).)-38 159 y(S)n(ur)g(l)o('ar)q(ticle)g(vendu)g
(120)g Fs(N)34 b Fw(en)18 b(magasin,)g(le)g(commer)o(\347ant)g(gar)o
(der)o(a)e(100)j Fs(N)34 b Fw(et)17 b(devr)o(a)h(donner)f(20)h
Fs(N)35 b Fw(\340)17 b(L)-10 b('\311)o(tat.)-38 271 y(Le)18
b(pr)q(ix)f(T)q(T)o(C)h(\(toutes)g(taxes)g(compr)q(ises\))g(est)g(de)f
(120)i Fs(N)p Fw(,)e(le)h(pr)q(ix)f(HT)h(\(hors)f(taxe\))h(est)g(de)f
(100)h Fs(N)34 b Fw(et)18 b(le)g(montant)h(de)e(la)g(TV)-5
b(A)19 b(est)f(de)f(20)h Fs(N)p Fw(.)-38 425 y(P)n(our)f(avoir)g(le)h
(pr)q(ix)f(T)q(T)o(C)h(dans)f(notr)o(e)g(exemple)o(,)i(il)f(faut)g
(compl\351ter)h(le)f(sch\351ma)g(:)p 0 TeXcolorgray 0
TeXcolorgray 1613 589 2 2 v 1615 590 128 4 v 1743 589
2 2 v 1613 689 4 100 v 1745 689 V 1613 692 2 2 v 1615
693 128 4 v 1743 692 2 2 v 1639 664 a(80)p 1 0 0 TeXcolorrgb
1961 535 a Fj(\243)f Fp(1,20)p 0 TeXcolorgray 1769 588
4 4 v 1772 587 V 1775 585 V 1778 584 V 1781 583 V 1783
581 V 1786 580 V 1789 579 V 1792 578 V 1795 576 V 1798
575 V 1801 574 V 1803 573 V 1806 571 V 1809 570 V 1812
569 V 1815 568 V 1818 567 V 1820 566 V 1823 564 V 1826
563 V 1829 562 V 1832 561 V 1835 560 V 1838 559 V 1840
558 V 1843 557 V 1846 556 V 1849 555 V 1852 554 V 1855
553 V 1857 552 V 1860 551 V 1863 550 V 1866 549 V 1869
549 V 1872 548 V 1875 547 V 1877 546 V 1880 545 V 1883
544 V 1886 544 V 1889 543 V 1892 542 V 1894 541 V 1897
540 V 1900 540 V 1903 539 V 1906 538 V 1909 538 V 1912
537 V 1914 536 V 1917 536 V 1920 535 V 1923 534 V 1926
534 V 1929 533 V 1932 533 V 1934 532 V 1937 532 V 1940
531 V 1943 531 V 1946 530 V 1949 530 V 1951 529 V 1954
529 V 1957 528 V 2301 579 a Fi(\()p Fh(\()p 2128 528
V 2131 529 V 2134 529 V 2137 530 V 2139 530 V 2142 531
V 2145 531 V 2148 532 V 2151 532 V 2154 533 V 2156 533
V 2159 534 V 2162 534 V 2165 535 V 2168 536 V 2171 536
V 2174 537 V 2176 538 V 2179 538 V 2182 539 V 2185 540
V 2188 540 V 2191 541 V 2193 542 V 2196 543 V 2199 544
V 2202 544 V 2205 545 V 2208 546 V 2211 547 V 2213 548
V 2216 549 V 2219 549 V 2222 550 V 2225 551 V 2228 552
V 2231 553 V 2233 554 V 2236 555 V 2239 556 V 2242 557
V 2245 558 V 2248 559 V 2250 560 V 2253 561 V 2256 562
V 2259 563 V 2262 564 V 2265 566 V 2268 567 V 2270 568
V 2273 569 V 2276 570 V 2279 571 V 2282 573 V 2285 574
V 2287 575 V 2290 576 V 2293 578 V 2296 579 V 2299 580
V 2326 587 2 2 v 2327 588 162 4 v 2489 587 2 2 v 2325
690 4 103 v 2491 690 V 2326 693 2 2 v 2327 694 162 4
v 2489 693 2 2 v 2360 665 a Fw(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1549 866 a(pr)q(ix)17 b(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -38 1062 a(???)c
Fv(\306)h Fw(80)c Fv(\243)g Fw(1,)e(20)18 b Fv(\306)c
Fw(96,)k(donc)f(le)h(montant)h(T)q(T)o(C)f(est)g(de)f(96)h
Fs(N)p Fw(.)-38 1216 y Fx(R)o(emarque)c(:)j Fw(Le)h(montant)h(de)e(la)g
(TV)-5 b(A)19 b(est)f(96)10 b Fv(\241)g Fw(80)16 b Fv(\306)e
Fw(16)19 b Fs(N)p Fw(.)-38 1328 y(Il)e(ne)h(faut)g(pas)g(confondr)o(e)f
(ce)h(montant)h(\(16)f Fs(N)p Fw(\))f(et)h(le)g(taux)g(de)f(TV)-5
b(A)19 b(\(ici)e(20)i(\045\).)e(Il)g(y)g(a)h(une)g(ambigu\357t\351)h
(lorsqu)n('on)f(parle)g(de)g(\253)c(TV)-5 b(A)14 b(\273)35
b(sans)-38 1427 y(pr\351ciser)18 b(s)m('il)g(s)m('agit)g(d)n('un)g
(montant)g(ou)g(d)n('un)g(taux.)-246 1507 y
SDict begin H.S end
 -246 1507
a -246 1507 a
SDict begin 12 H.A end
 -246 1507 a -246 1507 a
SDict begin [/View [/XYZ H.V]/Dest (exo.33) cvn /DEST pdfmark end
 -246 1507 a -246
1524 a
SDict begin H.S end
 -246 1524 a -246 1524 a
SDict begin 12 H.A end
 -246 1524 a -246 1524
a
SDict begin [/View [/XYZ H.V]/Dest (Item.101) cvn /DEST pdfmark end
 -246 1524 a 0 TeXcolorgray 127 x Fx(Ex)o(er)o(cice)c(33)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w(100)21 b(\045)11 b Fv(\241)g Fw(15)21 b(\045)16
b Fv(\306)h Fw(85)k(\045)16 b Fv(\306)1221 1595 y Fw(85)p
1201 1632 122 5 v 1201 1708 a(100)1349 1651 y Fv(\306)g
Fw(0,)8 b(85,)22 b(donc)d(pour)i(diminuer)f(un)h(nombr)o(e)e(de)h(15)g
(\045,)g(il)g(faut)h(le)f(multiplier)i(par)e(0,)8 b(85.)22
b(On)-38 1774 y(compl\350te)d(donc)e(le)h(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1401 1937 2 2 v 1402 1938
262 4 v 1664 1937 2 2 v 1400 2038 4 100 v 1666 2038 V
1401 2041 2 2 v 1402 2042 262 4 v 1664 2041 2 2 v 1426
2013 a(12)12 b(000)p 1 0 0 TeXcolorrgb 1943 1884 a Fj(\243)17
b Fp(0,85)p 0 TeXcolorgray 1690 1925 4 4 v 1692 1924
V 1694 1924 V 1696 1923 V 1698 1923 V 1700 1922 V 1701
1921 V 1703 1921 V 1705 1920 V 1707 1920 V 1709 1919
V 1711 1918 V 1713 1918 V 1715 1917 V 1717 1917 V 1719
1916 V 1721 1916 V 1723 1915 V 1725 1914 V 1727 1914
V 1728 1913 V 1730 1913 V 1732 1912 V 1734 1912 V 1736
1911 V 1738 1911 V 1740 1910 V 1742 1909 V 1744 1909
V 1746 1908 V 1748 1908 V 1750 1907 V 1752 1907 V 1753
1906 V 1755 1906 V 1757 1905 V 1759 1905 V 1761 1904
V 1763 1904 V 1765 1903 V 1767 1903 V 1769 1902 V 1771
1902 V 1773 1901 V 1775 1901 V 1777 1901 V 1778 1900
V 1780 1900 V 1782 1899 V 1784 1899 V 1786 1898 V 1788
1898 V 1790 1897 V 1792 1897 V 1794 1897 V 1796 1896
V 1798 1896 V 1800 1895 V 1802 1895 V 1804 1894 V 1805
1894 V 1807 1894 V 1809 1893 V 1811 1893 V 1813 1892
V 1815 1892 V 1817 1892 V 1819 1891 V 1821 1891 V 1823
1890 V 1825 1890 V 1827 1890 V 1829 1889 V 1830 1889
V 1832 1889 V 1834 1888 V 1836 1888 V 1838 1888 V 1840
1887 V 1842 1887 V 1844 1886 V 1846 1886 V 1848 1886
V 1850 1885 V 1852 1885 V 1854 1885 V 1856 1885 V 1857
1884 V 1859 1884 V 1861 1884 V 1863 1883 V 1865 1883
V 1867 1883 V 1869 1882 V 1871 1882 V 1873 1882 V 1875
1882 V 1877 1881 V 1879 1881 V 1881 1881 V 1882 1880
V 1884 1880 V 1886 1880 V 1888 1880 V 1890 1879 V 1892
1879 V 1894 1879 V 1896 1879 V 1898 1878 V 1900 1878
V 1902 1878 V 1904 1878 V 1906 1877 V 1907 1877 V 1909
1877 V 1911 1877 V 1913 1877 V 1915 1876 V 1917 1876
V 1919 1876 V 1921 1876 V 1923 1876 V 1925 1875 V 1927
1875 V 1929 1875 V 1931 1875 V 1933 1875 V 1934 1875
V 1936 1874 V 1938 1874 V 1940 1874 V 2412 1941 a Fi(\))p
Fh(\))p 2110 1874 V 2112 1874 V 2114 1874 V 2115 1875
V 2117 1875 V 2119 1875 V 2121 1875 V 2123 1875 V 2125
1875 V 2127 1876 V 2129 1876 V 2131 1876 V 2133 1876
V 2135 1876 V 2137 1877 V 2139 1877 V 2140 1877 V 2142
1877 V 2144 1877 V 2146 1878 V 2148 1878 V 2150 1878
V 2152 1878 V 2154 1879 V 2156 1879 V 2158 1879 V 2160
1879 V 2162 1880 V 2164 1880 V 2166 1880 V 2167 1880
V 2169 1881 V 2171 1881 V 2173 1881 V 2175 1882 V 2177
1882 V 2179 1882 V 2181 1882 V 2183 1883 V 2185 1883
V 2187 1883 V 2189 1884 V 2191 1884 V 2192 1884 V 2194
1885 V 2196 1885 V 2198 1885 V 2200 1885 V 2202 1886
V 2204 1886 V 2206 1886 V 2208 1887 V 2210 1887 V 2212
1888 V 2214 1888 V 2216 1888 V 2217 1889 V 2219 1889
V 2221 1889 V 2223 1890 V 2225 1890 V 2227 1890 V 2229
1891 V 2231 1891 V 2233 1892 V 2235 1892 V 2237 1892
V 2239 1893 V 2241 1893 V 2243 1894 V 2244 1894 V 2246
1894 V 2248 1895 V 2250 1895 V 2252 1896 V 2254 1896
V 2256 1897 V 2258 1897 V 2260 1897 V 2262 1898 V 2264
1898 V 2266 1899 V 2268 1899 V 2269 1900 V 2271 1900
V 2273 1901 V 2275 1901 V 2277 1901 V 2279 1902 V 2281
1902 V 2283 1903 V 2285 1903 V 2287 1904 V 2289 1904
V 2291 1905 V 2293 1905 V 2295 1906 V 2296 1906 V 2298
1907 V 2300 1907 V 2302 1908 V 2304 1908 V 2306 1909
V 2308 1909 V 2310 1910 V 2312 1911 V 2314 1911 V 2316
1912 V 2318 1912 V 2320 1913 V 2321 1913 V 2323 1914
V 2325 1914 V 2327 1915 V 2329 1916 V 2331 1916 V 2333
1917 V 2335 1917 V 2337 1918 V 2339 1918 V 2341 1919
V 2343 1920 V 2345 1920 V 2347 1921 V 2348 1921 V 2350
1922 V 2352 1923 V 2354 1923 V 2356 1924 V 2358 1924
V 2360 1925 V 2362 1926 V 2364 1926 V 2366 1927 V 2368
1928 V 2370 1928 V 2372 1929 V 2373 1930 V 2375 1930
V 2377 1931 V 2379 1932 V 2381 1932 V 2383 1933 V 2385
1934 V 2387 1934 V 2389 1935 V 2391 1936 V 2393 1936
V 2395 1937 V 2397 1938 V 2398 1938 V 2400 1939 V 2402
1940 V 2404 1940 V 2406 1941 V 2408 1942 V 2410 1943
V 2436 1936 2 2 v 2438 1937 162 4 v 2600 1936 2 2 v 2435
2039 4 103 v 2602 2039 V 2436 2042 2 2 v 2438 2043 162
4 v 2600 2042 2 2 v 2471 2014 a Fw(?)9 b(?)g(?)p 0 0 1
TeXcolorrgb 1292 2217 a(pr)q(ix)17 b(de)g(d\351par)q(t)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2224 2216 a(pr)q(ix)g(apr\350s)h(r)o
(emise)p 0 TeXcolorgray -38 2414 a(???)13 b Fv(\306)h
Fw(12)8 b(000)i Fv(\243)g Fw(0,)e(85)19 b Fv(\306)c Fw(10)8
b(200,)20 b(donc)d(le)h(pr)q(ix)f(apr\350s)h(r)o(emise)g(est)g(de)f(10)
12 b(200)20 b Fs(N)p Fw(.)-246 2443 y
SDict begin H.S end
 -246 2443 a -246
2443 a
SDict begin 12 H.A end
 -246 2443 a -246 2443 a
SDict begin [/View [/XYZ H.V]/Dest (Item.102) cvn /DEST pdfmark end
 -246 2443 a 0 TeXcolorgray
-141 2537 a Fw(2.)p 0 TeXcolorgray 43 w(P)n(our)d(conna\356tr)o(e)g(le)
h(pour)o(centage)g(de)f(baisse)o(,)h(on)f(compl\350te)i(le)f(sch\351ma)
g(:)p 0 TeXcolorgray 0 TeXcolorgray 1426 2699 2 2 v 1428
2700 169 4 v 1597 2699 2 2 v 1426 2800 4 100 v 1599 2800
V 1426 2803 2 2 v 1428 2804 169 4 v 1597 2803 2 2 v 1452
2774 a(240)p 1 0 0 TeXcolorrgb 1973 2651 a Fj(\243)f
Fp(?)g(?)g(?)p 0 TeXcolorgray 1623 2707 4 4 v 1625 2706
V 1628 2705 V 1630 2705 V 1632 2704 V 1634 2703 V 1636
2702 V 1638 2702 V 1640 2701 V 1642 2700 V 1644 2700
V 1647 2699 V 1649 2698 V 1651 2698 V 1653 2697 V 1655
2696 V 1657 2696 V 1659 2695 V 1661 2694 V 1663 2694
V 1666 2693 V 1668 2692 V 1670 2692 V 1672 2691 V 1674
2690 V 1676 2690 V 1678 2689 V 1680 2688 V 1682 2688
V 1685 2687 V 1687 2686 V 1689 2686 V 1691 2685 V 1693
2685 V 1695 2684 V 1697 2683 V 1699 2683 V 1701 2682
V 1704 2682 V 1706 2681 V 1708 2680 V 1710 2680 V 1712
2679 V 1714 2679 V 1716 2678 V 1718 2678 V 1720 2677
V 1723 2676 V 1725 2676 V 1727 2675 V 1729 2675 V 1731
2674 V 1733 2674 V 1735 2673 V 1737 2673 V 1739 2672
V 1742 2671 V 1744 2671 V 1746 2670 V 1748 2670 V 1750
2669 V 1752 2669 V 1754 2668 V 1756 2668 V 1758 2667
V 1761 2667 V 1763 2666 V 1765 2666 V 1767 2665 V 1769
2665 V 1771 2664 V 1773 2664 V 1775 2663 V 1777 2663
V 1780 2663 V 1782 2662 V 1784 2662 V 1786 2661 V 1788
2661 V 1790 2660 V 1792 2660 V 1794 2659 V 1797 2659
V 1799 2658 V 1801 2658 V 1803 2658 V 1805 2657 V 1807
2657 V 1809 2656 V 1811 2656 V 1813 2656 V 1816 2655
V 1818 2655 V 1820 2654 V 1822 2654 V 1824 2654 V 1826
2653 V 1828 2653 V 1830 2652 V 1832 2652 V 1835 2652
V 1837 2651 V 1839 2651 V 1841 2651 V 1843 2650 V 1845
2650 V 1847 2649 V 1849 2649 V 1851 2649 V 1854 2648
V 1856 2648 V 1858 2648 V 1860 2647 V 1862 2647 V 1864
2647 V 1866 2646 V 1868 2646 V 1870 2646 V 1873 2646
V 1875 2645 V 1877 2645 V 1879 2645 V 1881 2644 V 1883
2644 V 1885 2644 V 1887 2644 V 1889 2643 V 1892 2643
V 1894 2643 V 1896 2642 V 1898 2642 V 1900 2642 V 1902
2642 V 1904 2641 V 1906 2641 V 1908 2641 V 1911 2641
V 1913 2640 V 1915 2640 V 1917 2640 V 1919 2640 V 1921
2639 V 1923 2639 V 1925 2639 V 1927 2639 V 1930 2639
V 1932 2638 V 1934 2638 V 1936 2638 V 1938 2638 V 1940
2638 V 1942 2637 V 1944 2637 V 1946 2637 V 1949 2637
V 1951 2637 V 1953 2637 V 1955 2636 V 1957 2636 V 1959
2636 V 1961 2636 V 1963 2636 V 1966 2636 V 1968 2635
V 1970 2635 V 2484 2706 a Fi(\))p Fh(\))p 2135 2635 V
2137 2635 V 2139 2636 V 2141 2636 V 2143 2636 V 2145
2636 V 2147 2636 V 2149 2636 V 2151 2637 V 2154 2637
V 2156 2637 V 2158 2637 V 2160 2637 V 2162 2637 V 2164
2638 V 2166 2638 V 2168 2638 V 2170 2638 V 2173 2638
V 2175 2639 V 2177 2639 V 2179 2639 V 2181 2639 V 2183
2639 V 2185 2640 V 2187 2640 V 2189 2640 V 2192 2640
V 2194 2641 V 2196 2641 V 2198 2641 V 2200 2641 V 2202
2642 V 2204 2642 V 2206 2642 V 2208 2642 V 2211 2643
V 2213 2643 V 2215 2643 V 2217 2644 V 2219 2644 V 2221
2644 V 2223 2644 V 2225 2645 V 2227 2645 V 2230 2645
V 2232 2646 V 2234 2646 V 2236 2646 V 2238 2646 V 2240
2647 V 2242 2647 V 2244 2647 V 2246 2648 V 2249 2648
V 2251 2648 V 2253 2649 V 2255 2649 V 2257 2649 V 2259
2650 V 2261 2650 V 2263 2651 V 2265 2651 V 2268 2651
V 2270 2652 V 2272 2652 V 2274 2652 V 2276 2653 V 2278
2653 V 2280 2654 V 2282 2654 V 2284 2654 V 2287 2655
V 2289 2655 V 2291 2656 V 2293 2656 V 2295 2656 V 2297
2657 V 2299 2657 V 2301 2658 V 2304 2658 V 2306 2658
V 2308 2659 V 2310 2659 V 2312 2660 V 2314 2660 V 2316
2661 V 2318 2661 V 2320 2662 V 2323 2662 V 2325 2663
V 2327 2663 V 2329 2663 V 2331 2664 V 2333 2664 V 2335
2665 V 2337 2665 V 2339 2666 V 2342 2666 V 2344 2667
V 2346 2667 V 2348 2668 V 2350 2668 V 2352 2669 V 2354
2669 V 2356 2670 V 2358 2670 V 2361 2671 V 2363 2671
V 2365 2672 V 2367 2673 V 2369 2673 V 2371 2674 V 2373
2674 V 2375 2675 V 2377 2675 V 2380 2676 V 2382 2676
V 2384 2677 V 2386 2678 V 2388 2678 V 2390 2679 V 2392
2679 V 2394 2680 V 2396 2680 V 2399 2681 V 2401 2682
V 2403 2682 V 2405 2683 V 2407 2683 V 2409 2684 V 2411
2685 V 2413 2685 V 2415 2686 V 2418 2686 V 2420 2687
V 2422 2688 V 2424 2688 V 2426 2689 V 2428 2690 V 2430
2690 V 2432 2691 V 2434 2692 V 2437 2692 V 2439 2693
V 2441 2694 V 2443 2694 V 2445 2695 V 2447 2696 V 2449
2696 V 2451 2697 V 2453 2698 V 2456 2698 V 2458 2699
V 2460 2700 V 2462 2700 V 2464 2701 V 2466 2702 V 2468
2702 V 2470 2703 V 2473 2704 V 2475 2705 V 2477 2705
V 2479 2706 V 2481 2707 V 2508 2699 2 2 v 2510 2700 169
4 v 2679 2699 2 2 v 2507 2800 4 100 v 2680 2800 V 2508
2803 2 2 v 2510 2804 169 4 v 2679 2803 2 2 v 2534 2774
a Fw(228)p 0 0 1 TeXcolorrgb 1196 2975 a(\351missions)j(ann\351e)e(0)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 449 w(\351missions)i(ann\351e)e(1)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -29 3152 a(?)9 b(?)g(?)p
0 TeXcolorgray 12 w Fv(\306)14 b Fw(228)c Fv(\245)g Fw(240)18
b Fv(\306)c Fw(0,)8 b(95.)-38 3263 y(Or)17 b(0,)8 b(95)16
b Fv(\306)326 3230 y Fp(95)p 310 3243 93 5 v 310 3292
a(100)427 3263 y Fv(\306)e Fw(95)k(\045,)g(donc)f(les)h(\351missions)h
(ont)f(baiss\351)g(de)f(5)h(\045.)f(A)n(utr)o(ement)h(dit,)g(le)g(taux)
f(d)n('\351volution)j(est)e Fv(\241)p Fw(5)f(\045.)-38
3417 y Fl(")p Fw(N)n(e)g(pas)h(oublier)g(le)f(\253)d
Fv(\241)g Fw(\273)34 b(dans)17 b Fv(\241)p Fw(5)h(\045.)-246
3447 y
SDict begin H.S end
 -246 3447 a -246 3447 a
SDict begin 12 H.A end
 -246 3447 a -246 3447
a
SDict begin [/View [/XYZ H.V]/Dest (Item.103) cvn /DEST pdfmark end
 -246 3447 a 0 TeXcolorgray -141 3540 a Fw(3.)p 0 TeXcolorgray
43 w(100)d(\045)r Fv(\241)r Fw(25)g(\045)f Fv(\306)g
Fw(75)h(\045)g Fv(\306)730 3507 y Fp(75)p 715 3520 93
5 v 715 3569 a(100)831 3540 y Fv(\306)f Fw(0,)8 b(75,)16
b(donc)e(la)g(baisse)h(de)f(25)g(\045)g(\351quivaut)i(\340)d(une)i
(multiplication)i(par)d(0,75)i(et)e(on)g(peut)h(utiliser)h(le)e
(sch\351ma)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1450 3714
2 2 v 1452 3715 162 4 v 1614 3714 2 2 v 1450 3818 4 103
v 1616 3818 V 1450 3821 2 2 v 1452 3822 162 4 v 1614
3821 2 2 v 1485 3792 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb
1920 3662 a Fj(\243)p Fp(0,75)p 0 TeXcolorgray 1640 3718
4 4 v 1642 3717 V 1644 3717 V 1645 3716 V 1647 3715 V
1649 3715 V 1651 3714 V 1653 3713 V 1654 3713 V 1656
3712 V 1658 3711 V 1660 3710 V 1662 3710 V 1663 3709
V 1665 3709 V 1667 3708 V 1669 3707 V 1671 3707 V 1672
3706 V 1674 3705 V 1676 3705 V 1678 3704 V 1680 3703
V 1681 3703 V 1683 3702 V 1685 3702 V 1687 3701 V 1689
3700 V 1690 3700 V 1692 3699 V 1694 3698 V 1696 3698
V 1698 3697 V 1699 3697 V 1701 3696 V 1703 3696 V 1705
3695 V 1707 3694 V 1708 3694 V 1710 3693 V 1712 3693
V 1714 3692 V 1716 3692 V 1717 3691 V 1719 3690 V 1721
3690 V 1723 3689 V 1725 3689 V 1726 3688 V 1728 3688
V 1730 3687 V 1732 3687 V 1734 3686 V 1735 3686 V 1737
3685 V 1739 3685 V 1741 3684 V 1743 3684 V 1744 3683
V 1746 3683 V 1748 3682 V 1750 3682 V 1752 3681 V 1753
3681 V 1755 3680 V 1757 3680 V 1759 3679 V 1761 3679
V 1762 3678 V 1764 3678 V 1766 3677 V 1768 3677 V 1770
3677 V 1771 3676 V 1773 3676 V 1775 3675 V 1777 3675
V 1779 3674 V 1780 3674 V 1782 3673 V 1784 3673 V 1786
3673 V 1788 3672 V 1789 3672 V 1791 3671 V 1793 3671
V 1795 3671 V 1797 3670 V 1798 3670 V 1800 3669 V 1802
3669 V 1804 3669 V 1806 3668 V 1807 3668 V 1809 3668
V 1811 3667 V 1813 3667 V 1815 3666 V 1816 3666 V 1818
3666 V 1820 3665 V 1822 3665 V 1824 3665 V 1825 3664
V 1827 3664 V 1829 3664 V 1831 3663 V 1833 3663 V 1834
3663 V 1836 3662 V 1838 3662 V 1840 3662 V 1842 3662
V 1843 3661 V 1845 3661 V 1847 3661 V 1849 3660 V 1851
3660 V 1852 3660 V 1854 3659 V 1856 3659 V 1858 3659
V 1860 3659 V 1861 3658 V 1863 3658 V 1865 3658 V 1867
3658 V 1869 3657 V 1870 3657 V 1872 3657 V 1874 3657
V 1876 3656 V 1878 3656 V 1879 3656 V 1881 3656 V 1883
3656 V 1885 3655 V 1887 3655 V 1888 3655 V 1890 3655
V 1892 3654 V 1894 3654 V 1896 3654 V 1897 3654 V 1899
3654 V 1901 3654 V 1903 3653 V 1905 3653 V 1906 3653
V 1908 3653 V 1910 3653 V 1912 3652 V 1914 3652 V 1915
3652 V 1917 3652 V 2365 3724 a Fi(\()p Fh(\()p 2068 3652
V 2070 3652 V 2072 3652 V 2074 3652 V 2076 3653 V 2077
3653 V 2079 3653 V 2081 3653 V 2083 3653 V 2085 3654
V 2086 3654 V 2088 3654 V 2090 3654 V 2092 3654 V 2094
3654 V 2095 3655 V 2097 3655 V 2099 3655 V 2101 3655
V 2103 3656 V 2104 3656 V 2106 3656 V 2108 3656 V 2110
3656 V 2112 3657 V 2113 3657 V 2115 3657 V 2117 3657
V 2119 3658 V 2121 3658 V 2122 3658 V 2124 3658 V 2126
3659 V 2128 3659 V 2130 3659 V 2131 3659 V 2133 3660
V 2135 3660 V 2137 3660 V 2139 3661 V 2140 3661 V 2142
3661 V 2144 3662 V 2146 3662 V 2148 3662 V 2149 3662
V 2151 3663 V 2153 3663 V 2155 3663 V 2157 3664 V 2158
3664 V 2160 3664 V 2162 3665 V 2164 3665 V 2166 3665
V 2167 3666 V 2169 3666 V 2171 3666 V 2173 3667 V 2175
3667 V 2176 3668 V 2178 3668 V 2180 3668 V 2182 3669
V 2184 3669 V 2185 3669 V 2187 3670 V 2189 3670 V 2191
3671 V 2193 3671 V 2194 3671 V 2196 3672 V 2198 3672
V 2200 3673 V 2202 3673 V 2203 3673 V 2205 3674 V 2207
3674 V 2209 3675 V 2211 3675 V 2212 3676 V 2214 3676
V 2216 3677 V 2218 3677 V 2220 3677 V 2221 3678 V 2223
3678 V 2225 3679 V 2227 3679 V 2229 3680 V 2230 3680
V 2232 3681 V 2234 3681 V 2236 3682 V 2238 3682 V 2239
3683 V 2241 3683 V 2243 3684 V 2245 3684 V 2247 3685
V 2248 3685 V 2250 3686 V 2252 3686 V 2254 3687 V 2256
3687 V 2257 3688 V 2259 3688 V 2261 3689 V 2263 3689
V 2265 3690 V 2266 3690 V 2268 3691 V 2270 3692 V 2272
3692 V 2274 3693 V 2275 3693 V 2277 3694 V 2279 3694
V 2281 3695 V 2283 3696 V 2284 3696 V 2286 3697 V 2288
3697 V 2290 3698 V 2292 3698 V 2293 3699 V 2295 3700
V 2297 3700 V 2299 3701 V 2301 3702 V 2302 3702 V 2304
3703 V 2306 3703 V 2308 3704 V 2310 3705 V 2311 3705
V 2313 3706 V 2315 3707 V 2317 3707 V 2319 3708 V 2320
3709 V 2322 3709 V 2324 3710 V 2326 3710 V 2328 3711
V 2329 3712 V 2331 3713 V 2333 3713 V 2335 3714 V 2337
3715 V 2338 3715 V 2340 3716 V 2342 3717 V 2344 3717
V 2346 3718 V 2347 3719 V 2349 3719 V 2351 3720 V 2353
3721 V 2355 3722 V 2356 3722 V 2358 3723 V 2360 3724
V 2362 3725 V 2389 3716 2 2 v 2391 3717 128 4 v 2519
3716 2 2 v 2388 3816 4 100 v 2521 3816 V 2389 3819 2
2 v 2391 3820 128 4 v 2519 3819 2 2 v 2415 3791 a Fw(63)p
0 0 1 TeXcolorrgb 1356 3995 a(pr)q(ix)18 b(initial)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2159 3994 a(pr)q(ix)g(apr\350s)f(r)o
(emise)p 0 TeXcolorgray -38 4192 a(???)c Fv(\306)h Fw(63)c
Fv(\245)g Fw(0,)e(75)18 b Fv(\306)c Fw(84,)k(donc)f(le)h(pr)q(ix)g
(initial)g(\351tait)g(de)f(84)i Fs(N)p Fw(.)-246 4271
y
SDict begin H.S end
 -246 4271 a -246 4271 a
SDict begin 12 H.A end
 -246 4271 a -246 4271 a
SDict begin [/View [/XYZ H.V]/Dest (exo.34) cvn /DEST pdfmark end
 -246
4271 a 0 TeXcolorgray 110 x Fx(Ex)o(er)o(cice)14 b(34)p
0 TeXcolorgray 41 w Fw(P)n(our)23 b(obtenir)h(le)g(pr)q(ix)f(T)q(T)o
(C,)i(on)e(augmente)i(le)f(pr)q(ix)f(HT)h(de)f(10)i(\045)9
b(;)23 b(autr)o(ement)h(dit,)g(on)g(le)g(multiplie)i(par)d(1,10.)j(On)d
(peut)i(ainsi)-246 4481 y(compl\351ter)19 b(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1493 4663 2 2 v 1494 4664
162 4 v 1656 4663 2 2 v 1492 4766 4 103 v 1658 4766 V
1493 4769 2 2 v 1494 4770 162 4 v 1656 4769 2 2 v 1527
4740 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb 1857 4611 a Fj(\243)17
b Fp(1,10)p 0 TeXcolorgray 1682 4656 4 4 v 1685 4654
V 1688 4653 V 1691 4652 V 1694 4651 V 1697 4649 V 1700
4648 V 1702 4647 V 1705 4646 V 1708 4644 V 1711 4643
V 1714 4642 V 1717 4641 V 1720 4640 V 1722 4639 V 1725
4638 V 1728 4637 V 1731 4636 V 1734 4635 V 1737 4634
V 1739 4633 V 1742 4632 V 1745 4631 V 1748 4630 V 1751
4629 V 1754 4628 V 1757 4627 V 1759 4626 V 1762 4625
V 1765 4624 V 1768 4623 V 1771 4622 V 1774 4621 V 1776
4621 V 1779 4620 V 1782 4619 V 1785 4618 V 1788 4617
V 1791 4617 V 1794 4616 V 1796 4615 V 1799 4615 V 1802
4614 V 1805 4613 V 1808 4612 V 1811 4612 V 1813 4611
V 1816 4611 V 1819 4610 V 1822 4609 V 1825 4609 V 1828
4608 V 1831 4608 V 1833 4607 V 1836 4607 V 1839 4606
V 1842 4606 V 1845 4605 V 1848 4605 V 1851 4604 V 1853
4604 V 2184 4648 a Fi(\()p Fh(\()p 2024 4604 V 2027 4604
V 2030 4605 V 2033 4605 V 2036 4606 V 2038 4606 V 2041
4607 V 2044 4607 V 2047 4608 V 2050 4608 V 2053 4609
V 2056 4609 V 2058 4610 V 2061 4611 V 2064 4611 V 2067
4612 V 2070 4612 V 2073 4613 V 2075 4614 V 2078 4615
V 2081 4615 V 2084 4616 V 2087 4617 V 2090 4617 V 2093
4618 V 2095 4619 V 2098 4620 V 2101 4621 V 2104 4621
V 2107 4622 V 2110 4623 V 2113 4624 V 2115 4625 V 2118
4626 V 2121 4627 V 2124 4628 V 2127 4629 V 2130 4630
V 2132 4631 V 2135 4632 V 2138 4633 V 2141 4634 V 2144
4635 V 2147 4636 V 2150 4637 V 2152 4638 V 2155 4639
V 2158 4640 V 2161 4641 V 2164 4642 V 2167 4643 V 2169
4644 V 2172 4646 V 2175 4647 V 2178 4648 V 2181 4649
V 2208 4659 2 2 v 2210 4660 189 4 v 2399 4659 2 2 v 2207
4770 4 111 v 2401 4770 V 2208 4773 2 2 v 2210 4774 189
4 v 2399 4773 2 2 v 2234 4734 a Fw(4,95)p 0 0 1 TeXcolorrgb
1445 4945 a(pr)q(ix)g(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -246 5172
a(C)o(onclusion)j(:)d(???)c Fv(\306)i Fw(4,)8 b(95)i
Fv(\245)g Fw(1,)e(10)18 b Fv(\306)c Fw(4,)8 b(50,)19
b(donc)e(le)h(pr)q(ix)f(HT)h(est)g(de)f(4,50)i Fs(N)9
b Fw(;)17 b(et)g(le)h(montant)h(de)e(la)g(TV)-5 b(A)19
b(\(la)e(somme)i(qui)f(r)o(evient)g(\340)f(l)o('\311)o(tat\))h(est)802
5338 y(montant)g(TV)-5 b(A)16 b Fv(\306)e Fw(montant)19
b(T)q(T)o(C)10 b Fv(\241)g Fw(montant)19 b(HT)c Fv(\306)f
Fw(4,)8 b(95)i Fv(\241)g Fw(4,)e(50)18 b Fv(\306)c Fw(0,)8
b(45)19 b Fs(N)p Fw(.)-246 5546 y Fx(N.B.)f Fw(Il)e(est)h(totalement)i
(faux)e(de)f(pr)o(endr)o(e)g(10)h(\045)g(de)f(4,)8 b(95)18
b(pour)f(obtenir)g(le)g(montant)h(de)e(la)h(TV)-5 b(A.)18
b(Il)d(faut)j(d)n('abor)o(d)d(se)h(r)o(amener)i(au)e(pr)q(ix)h(HT)-8
b(,)16 b(puis)-246 5646 y(pr)o(endr)o(e)h(10)h(\045)f(de)g(ce)h(pr)q
(ix)f(HT)-8 b(.)-246 5724 y
SDict begin H.S end
 -246 5724 a -246 5724 a
SDict begin 12 H.A end
 -246
5724 a -246 5724 a
SDict begin [/View [/XYZ H.V]/Dest (exo.35) cvn /DEST pdfmark end
 -246 5724 a 0 TeXcolorgray 1909 5895
a Fw(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.104) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x Fx(Ex)o(er)o(cice)14
b(35)p 0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0
TeXcolorgray 45 w Ft(v)448 -151 y Fp(0)497 -163 y Fv(\306)g
Fw(4)k(et)h Ft(q)h Fv(\306)14 b Fw(5.)1743 126 y Ft(v)1786
138 y Fp(1)1835 126 y Fv(\306)g Fw(4)c Fv(\243)g Fw(5)16
b Fv(\306)e Fw(20)1743 251 y Ft(v)1786 263 y Fp(2)1835
251 y Fv(\306)g Fw(20)c Fv(\243)g Fw(5)16 b Fv(\306)e
Fw(100)1743 375 y Ft(v)1786 387 y Fp(3)1835 375 y Fv(\306)g
Fw(100)c Fv(\243)g Fw(5)17 b Fv(\306)d Fw(500.)-246 482
y
SDict begin H.S end
 -246 482 a -246 482 a
SDict begin 12 H.A end
 -246 482 a -246 482 a
SDict begin [/View [/XYZ H.V]/Dest (Item.105) cvn /DEST pdfmark end
 -246 482
a 0 TeXcolorgray -141 565 a Fw(2.)p 0 TeXcolorgray 45
w Ft(v)7 577 y Fp(0)56 565 y Fv(\306)g Fw(12)k(et)i Ft(q)g
Fv(\306)14 b Fw(0,)8 b(5.)1755 854 y Ft(v)1798 866 y
Fp(1)1847 854 y Fv(\306)14 b Fw(12)c Fv(\243)g Fw(0,)e(5)17
b Fv(\306)d Fw(6)1755 979 y Ft(v)1798 991 y Fp(2)1847
979 y Fv(\306)g Fw(6)c Fv(\243)g Fw(0,)e(5)17 b Fv(\306)d
Fw(3)1755 1103 y Ft(v)1798 1115 y Fp(3)1847 1103 y Fv(\306)g
Fw(3)c Fv(\243)g Fw(0,)e(5)17 b Fv(\306)d Fw(1,)8 b(5.)-246
1209 y
SDict begin H.S end
 -246 1209 a -246 1209 a
SDict begin 12 H.A end
 -246 1209 a -246 1209
a
SDict begin [/View [/XYZ H.V]/Dest (Item.106) cvn /DEST pdfmark end
 -246 1209 a 0 TeXcolorgray -141 1293 a Fw(3.)p 0 TeXcolorgray
45 w Ft(v)7 1305 y Fp(1)56 1293 y Fv(\306)14 b Fw(5)k(et)h
Ft(v)310 1305 y Fp(2)359 1293 y Fv(\306)14 b Fw(20.)p
0 TeXcolorgray 0 TeXcolorgray 1280 1544 2 2 v 1282 1545
136 4 v 1418 1544 2 2 v 1280 1647 4 103 v 1420 1647 V
1280 1650 2 2 v 1282 1651 136 4 v 1418 1650 2 2 v 1306
1621 a(???)p 1 0 0 TeXcolorrgb 1542 1485 a Fj(\243)q
Fm(q)p 0 TeXcolorgray 1445 1519 4 4 v 1447 1518 V 1449
1517 V 1450 1516 V 1452 1515 V 1454 1514 V 1456 1513
V 1458 1512 V 1459 1511 V 1461 1510 V 1463 1509 V 1465
1508 V 1467 1507 V 1468 1506 V 1470 1505 V 1472 1504
V 1474 1503 V 1476 1502 V 1478 1502 V 1479 1501 V 1481
1500 V 1483 1499 V 1485 1498 V 1487 1498 V 1488 1497
V 1490 1496 V 1492 1496 V 1494 1495 V 1496 1494 V 1497
1493 V 1499 1493 V 1501 1492 V 1503 1492 V 1505 1491
V 1506 1490 V 1508 1490 V 1510 1489 V 1512 1489 V 1514
1488 V 1516 1488 V 1517 1487 V 1519 1487 V 1521 1486
V 1523 1486 V 1525 1485 V 1526 1485 V 1528 1484 V 1530
1484 V 1532 1483 V 1534 1483 V 1535 1483 V 1537 1482
V 1539 1482 V 1744 1534 a Fi($)p Fh($)p 1622 1482 V 1624
1482 V 1626 1483 V 1628 1483 V 1630 1483 V 1631 1484
V 1633 1484 V 1635 1485 V 1637 1485 V 1639 1486 V 1640
1486 V 1642 1487 V 1644 1487 V 1646 1488 V 1648 1488
V 1649 1489 V 1651 1489 V 1653 1490 V 1655 1490 V 1657
1491 V 1659 1492 V 1660 1492 V 1662 1493 V 1664 1493
V 1666 1494 V 1668 1495 V 1669 1496 V 1671 1496 V 1673
1497 V 1675 1498 V 1677 1498 V 1678 1499 V 1680 1500
V 1682 1501 V 1684 1502 V 1686 1502 V 1687 1503 V 1689
1504 V 1691 1505 V 1693 1506 V 1695 1507 V 1697 1508
V 1698 1509 V 1700 1510 V 1702 1511 V 1704 1512 V 1706
1513 V 1707 1514 V 1709 1515 V 1711 1516 V 1713 1517
V 1715 1518 V 1716 1519 V 1718 1520 V 1720 1521 V 1722
1522 V 1724 1523 V 1725 1524 V 1727 1526 V 1729 1527
V 1731 1528 V 1733 1529 V 1735 1530 V 1736 1532 V 1738
1533 V 1740 1534 V 1742 1535 V 1768 1545 2 2 v 1770 1546
88 4 v 1858 1545 2 2 v 1767 1646 4 100 v 1859 1646 V
1768 1649 2 2 v 1770 1650 88 4 v 1858 1649 2 2 v 1794
1620 a Fw(5)p 1 0 0 TeXcolorrgb 2003 1485 a Fj(\243)q
Fm(q)p 0 TeXcolorgray 1884 1534 4 4 v 1886 1533 V 1888
1532 V 1889 1530 V 1891 1529 V 1893 1528 V 1895 1527
V 1897 1526 V 1898 1524 V 1900 1523 V 1902 1522 V 1904
1521 V 1906 1520 V 1907 1519 V 1909 1518 V 1911 1517
V 1913 1516 V 1915 1515 V 1916 1514 V 1918 1513 V 1920
1512 V 1922 1511 V 1924 1510 V 1925 1509 V 1927 1508
V 1929 1507 V 1931 1506 V 1933 1505 V 1934 1504 V 1936
1503 V 1938 1502 V 1940 1502 V 1942 1501 V 1943 1500
V 1945 1499 V 1947 1498 V 1949 1498 V 1950 1497 V 1952
1496 V 1954 1496 V 1956 1495 V 1958 1494 V 1959 1493
V 1961 1493 V 1963 1492 V 1965 1492 V 1967 1491 V 1968
1490 V 1970 1490 V 1972 1489 V 1974 1489 V 1976 1488
V 1977 1488 V 1979 1487 V 1981 1487 V 1983 1486 V 1985
1486 V 1986 1485 V 1988 1485 V 1990 1484 V 1992 1484
V 1994 1483 V 1995 1483 V 1997 1483 V 1999 1482 V 2001
1482 V 2183 1520 a Fi(\045)p Fh(\045)p 2083 1482 V 2085
1482 V 2087 1483 V 2089 1483 V 2090 1483 V 2092 1484
V 2094 1484 V 2096 1485 V 2098 1485 V 2099 1486 V 2101
1486 V 2103 1487 V 2105 1487 V 2107 1488 V 2108 1488
V 2110 1489 V 2112 1489 V 2114 1490 V 2116 1490 V 2117
1491 V 2119 1492 V 2121 1492 V 2123 1493 V 2125 1493
V 2126 1494 V 2128 1495 V 2130 1496 V 2132 1496 V 2133
1497 V 2135 1498 V 2137 1498 V 2139 1499 V 2141 1500
V 2142 1501 V 2144 1502 V 2146 1502 V 2148 1503 V 2150
1504 V 2151 1505 V 2153 1506 V 2155 1507 V 2157 1508
V 2159 1509 V 2160 1510 V 2162 1511 V 2164 1512 V 2166
1513 V 2168 1514 V 2169 1515 V 2171 1516 V 2173 1517
V 2175 1518 V 2177 1519 V 2178 1520 V 2180 1521 V 2207
1545 2 2 v 2209 1546 128 4 v 2337 1545 2 2 v 2206 1646
4 100 v 2339 1646 V 2207 1649 2 2 v 2209 1650 128 4 v
2337 1649 2 2 v 2233 1620 a Fw(20)p 1 0 0 TeXcolorrgb
2475 1485 a Fj(\243)q Fm(q)p 0 TeXcolorgray 2362 1524
4 4 v 2364 1523 V 2366 1522 V 2368 1521 V 2370 1520 V
2372 1519 V 2374 1518 V 2376 1517 V 2377 1516 V 2379
1515 V 2381 1514 V 2383 1513 V 2385 1512 V 2387 1511
V 2389 1510 V 2391 1509 V 2393 1508 V 2394 1507 V 2396
1506 V 2398 1505 V 2400 1504 V 2402 1503 V 2404 1502
V 2406 1502 V 2408 1501 V 2410 1500 V 2411 1499 V 2413
1498 V 2415 1498 V 2417 1497 V 2419 1496 V 2421 1496
V 2423 1495 V 2425 1494 V 2427 1493 V 2428 1493 V 2430
1492 V 2432 1492 V 2434 1491 V 2436 1490 V 2438 1490
V 2440 1489 V 2442 1489 V 2444 1488 V 2445 1488 V 2447
1487 V 2449 1487 V 2451 1486 V 2453 1486 V 2455 1485
V 2457 1485 V 2459 1484 V 2461 1484 V 2462 1483 V 2464
1483 V 2466 1483 V 2468 1482 V 2470 1482 V 2472 1482
V 2662 1520 a Fi(&)p Fh(&)p 2555 1482 V 2557 1482 V 2559
1482 V 2561 1483 V 2563 1483 V 2564 1483 V 2566 1484
V 2568 1484 V 2570 1485 V 2572 1485 V 2574 1486 V 2576
1486 V 2578 1487 V 2580 1487 V 2581 1488 V 2583 1488
V 2585 1489 V 2587 1489 V 2589 1490 V 2591 1490 V 2593
1491 V 2595 1492 V 2597 1492 V 2598 1493 V 2600 1493
V 2602 1494 V 2604 1495 V 2606 1496 V 2608 1496 V 2610
1497 V 2612 1498 V 2614 1498 V 2615 1499 V 2617 1500
V 2619 1501 V 2621 1502 V 2623 1502 V 2625 1503 V 2627
1504 V 2629 1505 V 2631 1506 V 2632 1507 V 2634 1508
V 2636 1509 V 2638 1510 V 2640 1511 V 2642 1512 V 2644
1513 V 2646 1514 V 2648 1515 V 2649 1516 V 2651 1517
V 2653 1518 V 2655 1519 V 2657 1520 V 2659 1521 V 2661
1522 V 2687 1544 2 2 v 2688 1545 136 4 v 2824 1544 2
2 v 2686 1647 4 103 v 2826 1647 V 2687 1650 2 2 v 2688
1651 136 4 v 2824 1650 2 2 v 2712 1621 a Fw(???)p 0 0 1
TeXcolorrgb 1313 1806 a Ft(v)1356 1818 y Fp(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1776 1806 a Ft(v)1819 1818 y Fp(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2235 1806 a Ft(v)2278
1818 y Fp(2)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2719 1806
a Ft(v)2762 1818 y Fp(3)p 0 TeXcolorgray -38 1949 a Fw(D)o('apr\350s)j
(le)h(sch\351ma)g(ci-dessus)h(:)1818 2049 y Ft(q)h Fv(\306)14
b Fw(20)c Fv(\245)g Fw(5)16 b Fv(\306)f Fw(4.)-38 2207
y(On)i(en)h(d\351duit)f(:)1769 2497 y Ft(v)1812 2509
y Fp(3)1861 2497 y Fv(\306)d Fw(20)c Fv(\243)g Fw(4)16
b Fv(\306)f Fw(80)1769 2621 y Ft(v)1812 2633 y Fp(0)1861
2621 y Fv(\306)f Fw(5)c Fv(\245)g Fw(4)16 b Fv(\306)e
Fw(1,)8 b(25.)-246 2727 y
SDict begin H.S end
 -246 2727 a -246 2727 a
SDict begin 12 H.A end
 -246
2727 a -246 2727 a
SDict begin [/View [/XYZ H.V]/Dest (Item.107) cvn /DEST pdfmark end
 -246 2727 a 0 TeXcolorgray -141 2811
a Fw(4.)p 0 TeXcolorgray 45 w Ft(v)7 2823 y Fp(0)56 2811
y Fv(\306)14 b Fw(10)k(et)i Ft(v)351 2823 y Fp(1)400
2811 y Fv(\306)14 b Fw(6.)p 0 TeXcolorgray 0 TeXcolorgray
1524 3063 2 2 v 1526 3064 128 4 v 1654 3063 2 2 v 1523
3164 4 100 v 1656 3164 V 1524 3167 2 2 v 1526 3168 128
4 v 1654 3167 2 2 v 1550 3138 a(10)p 1 0 0 TeXcolorrgb
1780 3003 a Fj(\243)q Fm(q)p 0 TeXcolorgray 1680 3039
4 4 v 1682 3038 V 1684 3037 V 1686 3036 V 1687 3035 V
1689 3034 V 1691 3033 V 1693 3032 V 1695 3031 V 1696
3030 V 1698 3029 V 1700 3028 V 1702 3027 V 1704 3026
V 1705 3025 V 1707 3024 V 1709 3023 V 1711 3022 V 1713
3021 V 1714 3021 V 1716 3020 V 1718 3019 V 1720 3018
V 1722 3017 V 1723 3017 V 1725 3016 V 1727 3015 V 1729
3014 V 1731 3014 V 1732 3013 V 1734 3012 V 1736 3012
V 1738 3011 V 1739 3010 V 1741 3010 V 1743 3009 V 1745
3008 V 1747 3008 V 1748 3007 V 1750 3007 V 1752 3006
V 1754 3006 V 1756 3005 V 1757 3005 V 1759 3004 V 1761
3004 V 1763 3003 V 1765 3003 V 1766 3002 V 1768 3002
V 1770 3002 V 1772 3001 V 1774 3001 V 1775 3000 V 1777
3000 V 1980 3052 a Fi($)p Fh($)p 1860 3000 V 1861 3000
V 1863 3001 V 1865 3001 V 1867 3002 V 1869 3002 V 1870
3002 V 1872 3003 V 1874 3003 V 1876 3004 V 1878 3004
V 1879 3005 V 1881 3005 V 1883 3006 V 1885 3006 V 1887
3007 V 1888 3007 V 1890 3008 V 1892 3008 V 1894 3009
V 1896 3010 V 1897 3010 V 1899 3011 V 1901 3012 V 1903
3012 V 1905 3013 V 1906 3014 V 1908 3014 V 1910 3015
V 1912 3016 V 1913 3017 V 1915 3017 V 1917 3018 V 1919
3019 V 1921 3020 V 1922 3021 V 1924 3021 V 1926 3022
V 1928 3023 V 1930 3024 V 1931 3025 V 1933 3026 V 1935
3027 V 1937 3028 V 1939 3029 V 1940 3030 V 1942 3031
V 1944 3032 V 1946 3033 V 1948 3034 V 1949 3035 V 1951
3036 V 1953 3037 V 1955 3038 V 1957 3039 V 1958 3040
V 1960 3041 V 1962 3042 V 1964 3044 V 1966 3045 V 1967
3046 V 1969 3047 V 1971 3048 V 1973 3050 V 1974 3051
V 1976 3052 V 2004 3063 2 2 v 2005 3064 88 4 v 2093 3063
2 2 v 2003 3164 4 100 v 2095 3164 V 2004 3167 2 2 v 2005
3168 88 4 v 2093 3167 2 2 v 2029 3138 a Fw(6)p 1 0 0
TeXcolorrgb 2241 3003 a Fj(\243)q Fm(q)p 0 TeXcolorgray
2119 3053 4 4 v 2120 3052 V 2122 3051 V 2124 3050 V 2126
3048 V 2128 3047 V 2129 3046 V 2131 3045 V 2133 3044
V 2135 3042 V 2137 3041 V 2139 3040 V 2140 3039 V 2142
3038 V 2144 3037 V 2146 3036 V 2148 3035 V 2149 3034
V 2151 3033 V 2153 3032 V 2155 3031 V 2157 3030 V 2158
3029 V 2160 3028 V 2162 3027 V 2164 3026 V 2166 3025
V 2168 3024 V 2169 3023 V 2171 3022 V 2173 3021 V 2175
3021 V 2177 3020 V 2178 3019 V 2180 3018 V 2182 3017
V 2184 3017 V 2186 3016 V 2187 3015 V 2189 3014 V 2191
3014 V 2193 3013 V 2195 3012 V 2196 3012 V 2198 3011
V 2200 3010 V 2202 3010 V 2204 3009 V 2206 3008 V 2207
3008 V 2209 3007 V 2211 3007 V 2213 3006 V 2215 3006
V 2216 3005 V 2218 3005 V 2220 3004 V 2222 3004 V 2224
3003 V 2225 3003 V 2227 3002 V 2229 3002 V 2231 3002
V 2233 3001 V 2234 3001 V 2236 3000 V 2238 3000 V 2419
3036 a Fi(\045)p Fh(\045)p 2321 3000 V 2323 3000 V 2325
3001 V 2327 3001 V 2329 3002 V 2330 3002 V 2332 3002
V 2334 3003 V 2336 3003 V 2338 3004 V 2339 3004 V 2341
3005 V 2343 3005 V 2345 3006 V 2347 3006 V 2349 3007
V 2350 3007 V 2352 3008 V 2354 3008 V 2356 3009 V 2358
3010 V 2359 3010 V 2361 3011 V 2363 3012 V 2365 3012
V 2367 3013 V 2368 3014 V 2370 3014 V 2372 3015 V 2374
3016 V 2376 3017 V 2377 3017 V 2379 3018 V 2381 3019
V 2383 3020 V 2385 3021 V 2387 3021 V 2388 3022 V 2390
3023 V 2392 3024 V 2394 3025 V 2396 3026 V 2397 3027
V 2399 3028 V 2401 3029 V 2403 3030 V 2405 3031 V 2406
3032 V 2408 3033 V 2410 3034 V 2412 3035 V 2414 3036
V 2415 3037 V 2443 3062 2 2 v 2444 3063 136 4 v 2580
3062 2 2 v 2442 3165 4 103 v 2583 3165 V 2443 3168 2
2 v 2444 3169 136 4 v 2580 3168 2 2 v 2468 3139 a Fw(???)p
0 0 1 TeXcolorrgb 1553 3324 a Ft(v)1596 3336 y Fp(0)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2012 3324 a Ft(v)2055
3336 y Fp(1)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2475 3324
a Ft(v)2518 3336 y Fp(2)p 0 TeXcolorgray -38 3467 a Fw(D)o('apr\350s)j
(le)h(sch\351ma)g(ci-dessus)h(:)1784 3567 y Ft(q)h Fv(\306)14
b Fw(6)c Fv(\245)g Fw(10)16 b Fv(\306)e Fw(0,)8 b(6,)-38
3712 y(puis)1755 3812 y Ft(v)1798 3824 y Fp(2)1847 3812
y Fv(\306)14 b Fw(6)c Fv(\243)g Fw(0,)e(6)17 b Fv(\306)d
Fw(3,)8 b(6.)-246 3889 y
SDict begin H.S end
 -246 3889 a -246 3889 a
SDict begin 12 H.A end
 -246
3889 a -246 3889 a
SDict begin [/View [/XYZ H.V]/Dest (exo.36) cvn /DEST pdfmark end
 -246 3889 a 0 TeXcolorgray 118 x Fx(Ex)o(er)o(cice)
14 b(36)p 0 TeXcolorgray 41 w Fw(On)i(place)h(1)8 b(000)18
b Fs(N)31 b Fw(sur)16 b(un)g(compte)h(au)f(taux)h(d)n('int\351r\352t)g
(annuel)g(de)f(5)g(\045.)g(On)g(note)i Ft(v)2737 4019
y Fm(n)2796 4007 y Fw(la)e(somme)h(sur)f(le)h(compte)g(apr\350s)f
Ft(n)k Fw(ann\351es)-246 4107 y(\226)e(on)f(a)g(donc)g(en)h(par)q
(ticulier)i Ft(v)695 4119 y Fp(0)744 4107 y Fv(\306)14
b Fw(1)8 b(000.)-246 4137 y
SDict begin H.S end
 -246 4137 a -246 4137 a
SDict begin 12 H.A end
 -246
4137 a -246 4137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.108) cvn /DEST pdfmark end
 -246 4137 a 0 TeXcolorgray -141 4233
a Fw(1.)p 0 TeXcolorgray 43 w(A)n(ugmenter)18 b(un)g(nombr)o(e)f(de)g
(5)h(\045)f(r)o(evient)h(\340)f(le)h(multiplier)i(par)d(1,05.)i(On)e
(peut)i(donc)e(compl\351ter)i(le)f(sch\351ma)g(:)p 0
TeXcolorgray 0 TeXcolorgray 1118 4406 2 2 v 1120 4407
221 4 v 1341 4406 2 2 v 1117 4506 4 100 v 1343 4506 V
1118 4509 2 2 v 1120 4510 221 4 v 1341 4509 2 2 v 1144
4481 a(1)12 b(000)p 1 0 0 TeXcolorrgb 1616 4353 a Fj(\243)p
Fp(1,05)p 0 TeXcolorgray 1368 4397 4 4 v 1369 4396 V
1371 4396 V 1373 4395 V 1375 4394 V 1377 4394 V 1378
4393 V 1380 4392 V 1382 4392 V 1384 4391 V 1386 4391
V 1387 4390 V 1389 4389 V 1391 4389 V 1393 4388 V 1395
4388 V 1396 4387 V 1398 4386 V 1400 4386 V 1402 4385
V 1404 4385 V 1405 4384 V 1407 4384 V 1409 4383 V 1411
4382 V 1413 4382 V 1414 4381 V 1416 4381 V 1418 4380
V 1420 4380 V 1422 4379 V 1423 4379 V 1425 4378 V 1427
4378 V 1429 4377 V 1431 4377 V 1432 4376 V 1434 4376
V 1436 4375 V 1438 4375 V 1440 4374 V 1441 4373 V 1443
4373 V 1445 4373 V 1447 4372 V 1449 4372 V 1450 4371
V 1452 4371 V 1454 4370 V 1456 4370 V 1458 4369 V 1459
4369 V 1461 4368 V 1463 4368 V 1465 4367 V 1467 4367
V 1468 4366 V 1470 4366 V 1472 4366 V 1474 4365 V 1476
4365 V 1477 4364 V 1479 4364 V 1481 4363 V 1483 4363
V 1484 4363 V 1486 4362 V 1488 4362 V 1490 4361 V 1492
4361 V 1493 4361 V 1495 4360 V 1497 4360 V 1499 4359
V 1501 4359 V 1502 4359 V 1504 4358 V 1506 4358 V 1508
4358 V 1510 4357 V 1511 4357 V 1513 4356 V 1515 4356
V 1517 4356 V 1519 4355 V 1520 4355 V 1522 4355 V 1524
4354 V 1526 4354 V 1528 4354 V 1529 4353 V 1531 4353
V 1533 4353 V 1535 4353 V 1537 4352 V 1538 4352 V 1540
4352 V 1542 4351 V 1544 4351 V 1546 4351 V 1547 4350
V 1549 4350 V 1551 4350 V 1553 4350 V 1555 4349 V 1556
4349 V 1558 4349 V 1560 4349 V 1562 4348 V 1564 4348
V 1565 4348 V 1567 4348 V 1569 4347 V 1571 4347 V 1573
4347 V 1574 4347 V 1576 4346 V 1578 4346 V 1580 4346
V 1582 4346 V 1583 4345 V 1585 4345 V 1587 4345 V 1589
4345 V 1591 4345 V 1592 4344 V 1594 4344 V 1596 4344
V 1598 4344 V 1600 4344 V 1601 4344 V 1603 4343 V 1605
4343 V 1607 4343 V 1608 4343 V 1610 4343 V 1612 4343
V 1614 4342 V 2014 4396 a Fi(\))p Fh(\))p 1765 4342 V
1767 4343 V 1768 4343 V 1770 4343 V 1772 4343 V 1774
4343 V 1776 4343 V 1777 4344 V 1779 4344 V 1781 4344
V 1783 4344 V 1785 4344 V 1786 4344 V 1788 4345 V 1790
4345 V 1792 4345 V 1794 4345 V 1795 4345 V 1797 4346
V 1799 4346 V 1801 4346 V 1803 4346 V 1804 4347 V 1806
4347 V 1808 4347 V 1810 4347 V 1812 4348 V 1813 4348
V 1815 4348 V 1817 4348 V 1819 4349 V 1821 4349 V 1822
4349 V 1824 4349 V 1826 4350 V 1828 4350 V 1830 4350
V 1831 4350 V 1833 4351 V 1835 4351 V 1837 4351 V 1839
4352 V 1840 4352 V 1842 4352 V 1844 4353 V 1846 4353
V 1847 4353 V 1849 4353 V 1851 4354 V 1853 4354 V 1855
4354 V 1856 4355 V 1858 4355 V 1860 4355 V 1862 4356
V 1864 4356 V 1865 4356 V 1867 4357 V 1869 4357 V 1871
4358 V 1873 4358 V 1874 4358 V 1876 4359 V 1878 4359
V 1880 4359 V 1882 4360 V 1883 4360 V 1885 4361 V 1887
4361 V 1889 4361 V 1891 4362 V 1892 4362 V 1894 4363
V 1896 4363 V 1898 4363 V 1900 4364 V 1901 4364 V 1903
4365 V 1905 4365 V 1907 4366 V 1909 4366 V 1910 4366
V 1912 4367 V 1914 4367 V 1916 4368 V 1918 4368 V 1919
4369 V 1921 4369 V 1923 4370 V 1925 4370 V 1927 4371
V 1928 4371 V 1930 4372 V 1932 4372 V 1934 4373 V 1936
4373 V 1937 4373 V 1939 4374 V 1941 4375 V 1943 4375
V 1945 4376 V 1946 4376 V 1948 4377 V 1950 4377 V 1952
4378 V 1954 4378 V 1955 4379 V 1957 4379 V 1959 4380
V 1961 4380 V 1962 4381 V 1964 4381 V 1966 4382 V 1968
4382 V 1970 4383 V 1971 4384 V 1973 4384 V 1975 4385
V 1977 4385 V 1979 4386 V 1980 4386 V 1982 4387 V 1984
4388 V 1986 4388 V 1988 4389 V 1989 4389 V 1991 4390
V 1993 4391 V 1995 4391 V 1997 4392 V 1998 4392 V 2000
4393 V 2002 4394 V 2004 4394 V 2006 4395 V 2007 4396
V 2009 4396 V 2011 4397 V 2038 4406 2 2 v 2040 4407 221
4 v 2261 4406 2 2 v 2037 4506 4 100 v 2263 4506 V 2038
4509 2 2 v 2040 4510 221 4 v 2261 4509 2 2 v 2064 4481
a Fw(1)g(050)p 1 0 0 TeXcolorrgb 2488 4353 a Fj(\243)p
Fp(1,05)p 0 TeXcolorgray 2288 4391 4 4 v 2289 4391 V
2291 4390 V 2292 4389 V 2294 4389 V 2296 4388 V 2297
4388 V 2299 4387 V 2300 4386 V 2302 4386 V 2304 4385
V 2305 4385 V 2307 4384 V 2308 4384 V 2310 4383 V 2312
4382 V 2313 4382 V 2315 4381 V 2317 4381 V 2318 4380
V 2320 4380 V 2321 4379 V 2323 4379 V 2325 4378 V 2326
4378 V 2328 4377 V 2329 4377 V 2331 4376 V 2333 4376
V 2334 4375 V 2336 4375 V 2337 4374 V 2339 4373 V 2341
4373 V 2342 4373 V 2344 4372 V 2345 4372 V 2347 4371
V 2349 4371 V 2350 4370 V 2352 4370 V 2353 4369 V 2355
4369 V 2357 4368 V 2358 4368 V 2360 4367 V 2362 4367
V 2363 4366 V 2365 4366 V 2366 4366 V 2368 4365 V 2370
4365 V 2371 4364 V 2373 4364 V 2374 4363 V 2376 4363
V 2378 4363 V 2381 4362 V 2384 4361 V 2387 4360 V 2390
4359 V 2394 4359 V 2397 4358 V 2400 4357 V 2403 4356
V 2406 4356 V 2410 4355 V 2413 4354 V 2416 4354 V 2419
4353 V 2423 4353 V 2426 4352 V 2429 4351 V 2432 4351
V 2435 4350 V 2439 4350 V 2442 4349 V 2445 4349 V 2448
4348 V 2451 4348 V 2455 4347 V 2458 4347 V 2461 4346
V 2464 4346 V 2468 4345 V 2471 4345 V 2474 4344 V 2477
4344 V 2480 4344 V 2484 4343 V 2794 4375 a Fi(*)p Fh(*)p
2638 4343 V 2641 4344 V 2644 4344 V 2648 4344 V 2651
4345 V 2654 4345 V 2657 4346 V 2660 4346 V 2664 4347
V 2667 4347 V 2670 4348 V 2673 4348 V 2676 4349 V 2680
4349 V 2683 4350 V 2686 4350 V 2689 4351 V 2693 4351
V 2696 4352 V 2699 4353 V 2702 4353 V 2705 4354 V 2709
4354 V 2712 4355 V 2715 4356 V 2718 4356 V 2721 4357
V 2725 4358 V 2728 4359 V 2731 4359 V 2734 4360 V 2738
4361 V 2741 4362 V 2744 4363 V 2746 4363 V 2747 4363
V 2749 4364 V 2750 4364 V 2752 4365 V 2754 4365 V 2755
4366 V 2757 4366 V 2758 4366 V 2760 4367 V 2762 4367
V 2763 4368 V 2765 4368 V 2766 4369 V 2768 4369 V 2770
4370 V 2771 4370 V 2773 4371 V 2775 4371 V 2776 4372
V 2778 4372 V 2779 4373 V 2781 4373 V 2783 4373 V 2784
4374 V 2786 4375 V 2787 4375 V 2789 4376 V 2791 4376
V 2792 4377 V 2810 4401 2 2 v 2812 4402 323 4 v 3135
4401 2 2 v 2809 4512 4 111 v 3136 4512 V 2810 4515 2
2 v 2812 4516 323 4 v 3135 4515 2 2 v 2836 4476 a Fw(1)g(102,50)p
0 0 1 TeXcolorrgb 938 4696 a(Placement)18 b(initial)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1972 4687 a(A)o(pr\350s)f(1)h(an)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 448 w(A)o(pr\350s)f(2)h(ans)p
0 TeXcolorgray -38 4895 a(C)o(onclusion)h(:)p 0 TeXcolorgray
7 5008 a(\225)p 0 TeXcolorgray 42 w(apr\350s)f(1)f(an,)h(on)f(a)h(1)12
b(050)19 b Fs(N)34 b Fw(sur)18 b(le)f(compte)9 b(;)p
0 TeXcolorgray 7 5108 a(\225)p 0 TeXcolorgray 42 w(apr\350s)18
b(2)f(ans)o(,)h(on)g(a)f(1)12 b(102,50)21 b Fs(N)34 b
Fw(sur)17 b(le)h(compte)o(.)-38 5221 y(A)-5 b(vec)17
b(les)h(notations)h(de)e(l)o('\351nonc\351)i(:)1828 5397
y Ft(v)1871 5409 y Fp(0)1920 5397 y Fv(\306)14 b Fw(1)8
b(000)1828 5521 y Ft(v)1871 5533 y Fp(1)1920 5521 y Fv(\306)14
b Fw(1)8 b(050)1828 5646 y Ft(v)1871 5658 y Fp(2)1920
5646 y Fv(\306)14 b Fw(1)8 b(102,)s(50.)p 0 TeXcolorgray
1909 5895 a(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.109) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a Fw(2.)p 0 TeXcolorgray 43 w(La)17 b(suite)k Ft(v)j
Fw(est)18 b(une)g(suite)h(g\351om\351tr)q(ique)f(de)f(r)o(aison)j
Ft(q)g Fv(\306)14 b Fw(1,)8 b(05.)-38 -22 y Fx(R)o(emarque)15
b(:)k Fw(\300)e(la)i(question)h(\253)14 b(quelle)20 b(est)g(la)e(natur)
o(e)h(de)f(la)h(suite)9 b(?)15 b(\273,)j(il)h(faut)h(r\351pondr)o(e)e
(\253)c(ar)q(ithm\351tique)i(\273)37 b(ou)18 b(\253)c(g\351om\351tr)q
(ique)i(\273)36 b(selon)20 b(le)-38 77 y(cas)o(,)e(mais)g(aussi)g
(donner)f(sa)h(r)o(aison.)-246 95 y
SDict begin H.S end
 -246 95 a -246 95
a
SDict begin 12 H.A end
 -246 95 a -246 95 a
SDict begin [/View [/XYZ H.V]/Dest (Item.110) cvn /DEST pdfmark end
 -246 95 a 0 TeXcolorgray -141 192
a Fw(3.)p 0 TeXcolorgray 43 w(Dans)f(la)g(cellule)i(C2,)f(il)g(faut)g
(r)o(entr)o(er)e(la)i(for)q(mule)1900 291 y(=B2*1,05)-246
327 y
SDict begin H.S end
 -246 327 a -246 327 a
SDict begin 12 H.A end
 -246 327 a -246 327 a
SDict begin [/View [/XYZ H.V]/Dest (Item.111) cvn /DEST pdfmark end
 -246
327 a 0 TeXcolorgray -141 424 a Fw(4.)p 0 TeXcolorgray
43 w(On)f(d\351ter)q(mine)h(la)g(somme)h(sur)e(le)h(compte)g(apr\350s)g
(10)g(ans)g(de)f(deux)h(fa\347ons)g(diff\351r)o(entes)o(.)p
0 TeXcolorgray 7 531 a(\225)p 0 TeXcolorgray 42 w(A)-5
b(vec)23 b(le)i(tableur)f(:)g(on)f(\351tir)o(e)h(les)h(cellules)g(C1)g
(et)f(C2)g(vers)g(la)g(droite)f(jusqu)n('\340)i(L1)f(et)g(L2,)h(qui)f
(corr)o(espondent)h(\340)e(l)o('ann\351e)i Ft(n)g Fv(\306)c
Fw(10.)k(On)80 630 y(obtient)18 b(1)12 b(628,89)21 b
Fs(N)p Fw(.)p 0 TeXcolorgray 0 TeXcolorgray 80 686 4066
4 v 80 786 4 100 v 223 786 V 527 756 a(A)p 876 786 V
604 w(B)p 1530 786 V 603 w(C)p 2183 786 V 583 w Fv(\242)8
b(\242)g(\242)p 2836 786 V 593 w Fw(K)p 3489 786 V 607
w(L)p 4142 786 V 80 789 4066 4 v 80 888 4 100 v 133 859
a(1)p 223 888 V 353 w Ft(n)p 876 888 V 611 w Fw(0)p 1530
888 V 614 w(1)p 2183 888 V 589 w Fv(\242)g(\242)g(\242)p
2836 888 V 598 w Fw(9)p 3489 888 V 593 w(10)p 4142 888
V 80 892 4066 4 v 80 991 4 100 v 133 962 a(2)p 223 991
V 337 w Ft(v)553 974 y Fm(n)p 876 991 V 1124 962 a Fw(1000)p
1530 991 V 493 w(1050)p 2183 991 V 530 w Fv(\242)g(\242)g(\242)p
2836 991 V 487 w Fw(1551,33)p 3489 991 V 393 w(1628,89)p
4142 991 V 80 995 4066 4 v 0 TeXcolorgray 7 1093 a(\225)p
0 TeXcolorgray 42 w(P)m(ar)17 b(le)g(calcul)h(:)g(la)f(somme)i(sur)f
(le)f(compte)i(apr\350s)f(10)g(ans)g(est)1026 1235 y
Ft(v)1069 1247 y Fp(10)1149 1235 y Fv(\306)c Fw(1)8 b(000)g
Fv(\243)p Fw(1,)g(05)i Fv(\243)g Fw(1,)e(05)j Fv(\243)f(\242)e(\242)g
(\242)17 b(\243)10 b Fw(1,)e(05)1394 1280 y Fg(|)p 1428
1280 337 10 v 337 w({z)p 1833 1280 V 337 w(})1717 1361
y Fp(10)13 b(fois)2221 1235 y Fv(\306)h Fw(1)8 b(000)i
Fv(\243)g Fw(1,)e(05)2681 1201 y Fp(10)2766 1235 y Fv(\274)14
b Fw(1)8 b(628,)r(89)18 b Fs(N)p Fw(.)-246 1411 y
SDict begin H.S end
 -246
1411 a -246 1411 a
SDict begin 12 H.A end
 -246 1411 a -246 1411 a
SDict begin [/View [/XYZ H.V]/Dest (exo.37) cvn /DEST pdfmark end
 -246 1411
a -246 1436 a
SDict begin H.S end
 -246 1436 a -246 1436 a
SDict begin 12 H.A end
 -246 1436 a -246
1436 a
SDict begin [/View [/XYZ H.V]/Dest (Item.112) cvn /DEST pdfmark end
 -246 1436 a 0 TeXcolorgray 73 x Fx(Ex)o(er)o(cice)c(37)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w(100)19 b(\045)10 b Fv(\241)g Fw(12)18 b(\045)c Fv(\306)g
Fw(88)19 b(\045)14 b Fv(\306)g Fw(0,)8 b(88,)19 b(donc)e(pour)h
(diminuer)h(un)e(nombr)o(e)g(de)h(12)g(\045,)f(il)h(faut)g(le)g
(multiplier)i(par)d(0,88.)-38 1649 y(P)n(our)g(d\351ter)q(miner)h(le)f
(pr)q(ix)h(du)f(livr)o(e)h(en)f(2010)j(\(donc)c(apr\350s)i(5)g(ans\),)f
(on)h(peut)g(utiliser)h(un)f(diagr)o(amme)g(:)p 0 TeXcolorgray
0 TeXcolorgray 418 1798 2 2 v 419 1799 128 4 v 547 1798
2 2 v 417 1898 4 100 v 549 1898 V 418 1901 2 2 v 419
1902 128 4 v 547 1901 2 2 v 444 1873 a(50)p 1 0 0 TeXcolorrgb
723 1745 a Fj(\243)p Fp(0,88)p 0 TeXcolorgray 573 1791
4 4 v 576 1789 V 578 1788 V 580 1787 V 583 1786 V 585
1784 V 588 1783 V 590 1782 V 593 1781 V 595 1780 V 598
1778 V 600 1777 V 603 1776 V 605 1775 V 607 1774 V 610
1773 V 612 1772 V 615 1771 V 617 1770 V 620 1768 V 622
1767 V 625 1766 V 627 1765 V 630 1764 V 632 1763 V 634
1763 V 637 1762 V 639 1761 V 642 1760 V 644 1759 V 647
1758 V 649 1757 V 652 1756 V 654 1755 V 657 1755 V 659
1754 V 661 1753 V 664 1752 V 666 1751 V 669 1751 V 671
1750 V 674 1749 V 676 1748 V 679 1748 V 681 1747 V 684
1746 V 686 1746 V 688 1745 V 691 1744 V 693 1744 V 696
1743 V 698 1743 V 701 1742 V 703 1742 V 706 1741 V 708
1740 V 710 1740 V 713 1739 V 715 1739 V 718 1738 V 720
1738 V 1022 1789 a Fi(&)p Fh(&)p 872 1738 V 875 1738
V 877 1739 V 880 1739 V 882 1740 V 885 1740 V 887 1741
V 890 1742 V 892 1742 V 894 1743 V 897 1743 V 899 1744
V 902 1744 V 904 1745 V 907 1746 V 909 1746 V 912 1747
V 914 1748 V 917 1748 V 919 1749 V 921 1750 V 924 1751
V 926 1751 V 929 1752 V 931 1753 V 934 1754 V 936 1755
V 939 1755 V 941 1756 V 943 1757 V 946 1758 V 948 1759
V 951 1760 V 953 1761 V 956 1762 V 958 1763 V 961 1763
V 963 1764 V 966 1765 V 968 1766 V 970 1767 V 973 1768
V 975 1770 V 978 1771 V 980 1772 V 983 1773 V 985 1774
V 988 1775 V 990 1776 V 993 1777 V 995 1778 V 997 1780
V 1000 1781 V 1002 1782 V 1005 1783 V 1007 1784 V 1010
1786 V 1012 1787 V 1015 1788 V 1017 1789 V 1020 1791
V 1046 1798 2 2 v 1047 1799 128 4 v 1175 1798 2 2 v 1045
1898 4 100 v 1177 1898 V 1046 1901 2 2 v 1047 1902 128
4 v 1175 1901 2 2 v 1071 1873 a Fw(44)p 1 0 0 TeXcolorrgb
1351 1745 a Fj(\243)p Fp(0,88)p 0 TeXcolorgray 1201 1791
4 4 v 1203 1789 V 1206 1788 V 1208 1787 V 1211 1786 V
1213 1784 V 1216 1783 V 1218 1782 V 1221 1781 V 1223
1780 V 1226 1778 V 1228 1777 V 1230 1776 V 1233 1775
V 1235 1774 V 1238 1773 V 1240 1772 V 1243 1771 V 1245
1770 V 1248 1768 V 1250 1767 V 1253 1766 V 1255 1765
V 1257 1764 V 1260 1763 V 1262 1763 V 1265 1762 V 1267
1761 V 1270 1760 V 1272 1759 V 1275 1758 V 1277 1757
V 1280 1756 V 1282 1755 V 1284 1755 V 1287 1754 V 1289
1753 V 1292 1752 V 1294 1751 V 1297 1751 V 1299 1750
V 1302 1749 V 1304 1748 V 1306 1748 V 1309 1747 V 1311
1746 V 1314 1746 V 1316 1745 V 1319 1744 V 1321 1744
V 1324 1743 V 1326 1743 V 1329 1742 V 1331 1742 V 1333
1741 V 1336 1740 V 1338 1740 V 1341 1739 V 1343 1739
V 1346 1738 V 1348 1738 V 1602 1767 a Fi(\()p Fh(\()p
1500 1738 V 1503 1738 V 1505 1739 V 1508 1739 V 1510
1740 V 1513 1740 V 1515 1741 V 1517 1742 V 1520 1742
V 1522 1743 V 1525 1743 V 1527 1744 V 1530 1744 V 1532
1745 V 1535 1746 V 1537 1746 V 1540 1747 V 1542 1748
V 1544 1748 V 1547 1749 V 1549 1750 V 1552 1751 V 1554
1751 V 1557 1752 V 1559 1753 V 1562 1754 V 1564 1755
V 1566 1755 V 1569 1756 V 1571 1757 V 1574 1758 V 1576
1759 V 1579 1760 V 1581 1761 V 1584 1762 V 1586 1763
V 1589 1763 V 1591 1764 V 1593 1765 V 1596 1766 V 1598
1767 V 1601 1768 V 1623 1793 2 2 v 1625 1794 229 4 v
1854 1793 2 2 v 1622 1904 4 111 v 1856 1904 V 1623 1907
2 2 v 1625 1908 229 4 v 1854 1907 2 2 v 1649 1868 a Fw(38,72)p
1 0 0 TeXcolorrgb 1979 1745 a Fj(\243)p Fp(0,88)p 0 TeXcolorgray
1876 1768 4 4 v 1878 1767 V 1880 1766 V 1883 1765 V 1885
1764 V 1888 1763 V 1890 1763 V 1893 1762 V 1895 1761
V 1898 1760 V 1900 1759 V 1903 1758 V 1905 1757 V 1907
1756 V 1910 1755 V 1912 1755 V 1915 1754 V 1917 1753
V 1920 1752 V 1922 1751 V 1925 1751 V 1927 1750 V 1929
1749 V 1932 1748 V 1934 1748 V 1937 1747 V 1939 1746
V 1942 1746 V 1944 1745 V 1947 1744 V 1949 1744 V 1952
1743 V 1954 1743 V 1956 1742 V 1959 1742 V 1961 1741
V 1964 1740 V 1966 1740 V 1969 1739 V 1971 1739 V 1974
1738 V 1976 1738 V 2230 1767 a Fi(\()p Fh(\()p 2128 1738
V 2131 1738 V 2133 1739 V 2136 1739 V 2138 1740 V 2140
1740 V 2143 1741 V 2145 1742 V 2148 1742 V 2150 1743
V 2153 1743 V 2155 1744 V 2158 1744 V 2160 1745 V 2162
1746 V 2165 1746 V 2167 1747 V 2170 1748 V 2172 1748
V 2175 1749 V 2177 1750 V 2180 1751 V 2182 1751 V 2185
1752 V 2187 1753 V 2189 1754 V 2192 1755 V 2194 1755
V 2197 1756 V 2199 1757 V 2202 1758 V 2204 1759 V 2207
1760 V 2209 1761 V 2212 1762 V 2214 1763 V 2216 1763
V 2219 1764 V 2221 1765 V 2224 1766 V 2226 1767 V 2229
1768 V 2251 1793 2 2 v 2252 1794 229 4 v 2481 1793 2
2 v 2250 1904 4 111 v 2484 1904 V 2251 1907 2 2 v 2252
1908 229 4 v 2481 1907 2 2 v 2277 1868 a Fw(34,07)p 1 0 0
TeXcolorrgb 2607 1745 a Fj(\243)p Fp(0,88)p 0 TeXcolorgray
2503 1768 4 4 v 2506 1767 V 2508 1766 V 2511 1765 V 2513
1764 V 2516 1763 V 2518 1763 V 2521 1762 V 2523 1761
V 2525 1760 V 2528 1759 V 2530 1758 V 2533 1757 V 2535
1756 V 2538 1755 V 2540 1755 V 2543 1754 V 2545 1753
V 2548 1752 V 2550 1751 V 2552 1751 V 2555 1750 V 2557
1749 V 2560 1748 V 2562 1748 V 2565 1747 V 2567 1746
V 2570 1746 V 2572 1745 V 2575 1744 V 2577 1744 V 2579
1743 V 2582 1743 V 2584 1742 V 2587 1742 V 2589 1741
V 2592 1740 V 2594 1740 V 2597 1739 V 2599 1739 V 2602
1738 V 2604 1738 V 2858 1767 a Fi(\()p Fh(\()p 2756 1738
V 2758 1738 V 2761 1739 V 2763 1739 V 2766 1740 V 2768
1740 V 2771 1741 V 2773 1742 V 2776 1742 V 2778 1743
V 2781 1743 V 2783 1744 V 2785 1744 V 2788 1745 V 2790
1746 V 2793 1746 V 2795 1747 V 2798 1748 V 2800 1748
V 2803 1749 V 2805 1750 V 2808 1751 V 2810 1751 V 2812
1752 V 2815 1753 V 2817 1754 V 2820 1755 V 2822 1755
V 2825 1756 V 2827 1757 V 2830 1758 V 2832 1759 V 2835
1760 V 2837 1761 V 2839 1762 V 2842 1763 V 2844 1763
V 2847 1764 V 2849 1765 V 2852 1766 V 2854 1767 V 2857
1768 V 2879 1793 2 2 v 2880 1794 229 4 v 3109 1793 2
2 v 2878 1904 4 111 v 3112 1904 V 2879 1907 2 2 v 2880
1908 229 4 v 3109 1907 2 2 v 2904 1868 a Fw(29,98)p 1 0 0
TeXcolorrgb 3235 1745 a Fj(\243)p Fp(0,88)p 0 TeXcolorgray
3131 1768 4 4 v 3134 1767 V 3136 1766 V 3139 1765 V 3141
1764 V 3144 1763 V 3146 1763 V 3148 1762 V 3151 1761
V 3153 1760 V 3156 1759 V 3158 1758 V 3161 1757 V 3163
1756 V 3166 1755 V 3168 1755 V 3171 1754 V 3173 1753
V 3175 1752 V 3178 1751 V 3180 1751 V 3183 1750 V 3185
1749 V 3188 1748 V 3190 1748 V 3193 1747 V 3195 1746
V 3198 1746 V 3200 1745 V 3202 1744 V 3205 1744 V 3207
1743 V 3210 1743 V 3212 1742 V 3215 1742 V 3217 1741
V 3220 1740 V 3222 1740 V 3225 1739 V 3227 1739 V 3229
1738 V 3232 1738 V 3486 1767 a Fi(\()p Fh(\()p 3384 1738
V 3386 1738 V 3389 1739 V 3391 1739 V 3394 1740 V 3396
1740 V 3399 1741 V 3401 1742 V 3404 1742 V 3406 1743
V 3408 1743 V 3411 1744 V 3413 1744 V 3416 1745 V 3418
1746 V 3421 1746 V 3423 1747 V 3426 1748 V 3428 1748
V 3431 1749 V 3433 1750 V 3435 1751 V 3438 1751 V 3440
1752 V 3443 1753 V 3445 1754 V 3448 1755 V 3450 1755
V 3453 1756 V 3455 1757 V 3458 1758 V 3460 1759 V 3462
1760 V 3465 1761 V 3467 1762 V 3470 1763 V 3472 1763
V 3475 1764 V 3477 1765 V 3480 1766 V 3482 1767 V 3485
1768 V 3507 1793 2 2 v 3508 1794 229 4 v 3737 1793 2
2 v 3506 1904 4 111 v 3740 1904 V 3507 1907 2 2 v 3508
1908 229 4 v 3737 1907 2 2 v 3532 1868 a Fw(26,39)p 0 0 1
TeXcolorrgb 344 2079 a(Ann\351e)g(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(1)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(2)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(3)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(4)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(5)p 0 TeXcolorgray
-38 2232 a(Le)g(plus)g(r)o(apide)g(cependant,)h(c)n('est)e(de)h(fair)o
(e)f(dir)o(ectement)h(le)g(calcul)g(:)1207 2439 y(50)8
b Fv(\243)p Fw(0,)g(88)i Fv(\243)g Fw(0,)e(88)i Fv(\243)g(\242)e(\242)g
(\242)17 b(\243)10 b Fw(0,)e(88)1295 2484 y Fg(|)p 1329
2484 337 10 v 337 w({z)p 1734 2484 V 337 w(})1633 2564
y Fp(5)k(fois)2121 2439 y Fv(\306)i Fw(50)c Fv(\243)g
Fw(0,)e(88)2493 2404 y Fp(5)2546 2439 y Fv(\274)14 b
Fw(26,)8 b(39)19 b Fs(N)p Fw(.)-38 2670 y(C)o(onclusion)g(:)f(le)f(pr)q
(ix)h(du)f(livr)o(e)h(en)f(2010)i(est)f(26,39)i Fs(N)p
Fw(.)-246 2695 y
SDict begin H.S end
 -246 2695 a -246 2695 a
SDict begin 12 H.A end
 -246 2695 a
-246 2695 a
SDict begin [/View [/XYZ H.V]/Dest (Item.113) cvn /DEST pdfmark end
 -246 2695 a 0 TeXcolorgray -141 2785 a Fw(2.)p
0 TeXcolorgray 43 w(On)g(r)o(entr)o(e)f(les)i(valeurs)g(initiales)h
(2005)h(et)d(50)h(dans)f(la)h(colonne)g(B)o(,)f(puis)h(on)g(r)o(entr)o
(e)e(les)i(for)q(mules)g(ci-dessous)h(dans)e(la)g(colonne)h(C,)g(que)
-38 2884 y(l)o('on)d(\351tir)o(e)g(vers)f(la)h(droite)o(.)p
0 TeXcolorgray 0 TeXcolorgray -38 2959 4184 4 v -38 3059
4 100 v 105 3059 V 587 3029 a(A)p 1115 3059 V 960 w(B)p
2124 3059 V 959 w(C)p 3133 3059 V 939 w Fv(\242)8 b(\242)g(\242)p
4142 3059 V -38 3062 4184 4 v -38 3162 4 100 v 15 3132
a Fw(1)p 105 3162 V 446 w(Ann\351e)p 1115 3162 V 818
w(2005)p 2124 3162 V 821 w(=B1+1)p 3133 3162 V 857 w
Fv(\242)g(\242)g(\242)p 4142 3162 V -38 3165 4184 4 v
-38 3265 4 100 v 15 3235 a Fw(2)p 105 3265 V 489 w(P)o(r)q(ix)p
1115 3265 V 901 w(50)p 2124 3265 V 817 w(=B2*0,88)p 3133
3265 V 814 w Fv(\242)g(\242)g(\242)p 4142 3265 V -38
3268 4184 4 v -38 3396 a Fw(On)17 b(\351tir)o(e)h(jusqu)n('\340)g
(obtenir)g(un)g(pr)q(ix)f(inf\351r)q(ieur)h(\340)f(10)h
Fs(N)f Fw(:)p 0 TeXcolorgray 0 TeXcolorgray -38 3490
V -38 3589 4 100 v 105 3589 V 419 3559 a(A)p 778 3589
V 624 w(B)p 1451 3589 V 622 w(C)p 2124 3589 V 603 w Fv(\242)8
b(\242)g(\242)p 2797 3589 V 608 w Fw(N)p 3470 3589 V
613 w(O)p 4142 3589 V -38 3593 4184 4 v -38 3692 4 100
v 15 3662 a(1)p 105 3692 V 278 w(Ann\351e)p 778 3692
V 481 w(2005)p 1451 3692 V 513 w(2006)p 2124 3692 V 550
w Fv(\242)g(\242)g(\242)p 2797 3692 V 557 w Fw(2017)p
3470 3692 V 513 w(2018)p 4142 3692 V -38 3696 4184 4
v -38 3795 4 100 v 15 3765 a(2)p 105 3795 V 321 w(P)o(r)q(ix)p
778 3795 V 565 w(50)p 1451 3795 V 593 w(44)p 2124 3795
V 589 w Fv(\242)g(\242)g(\242)p 2797 3795 V 547 w Fw(10,78)p
3470 3795 V 513 w(9,49)p 4142 3795 V -38 3799 4184 4
v -38 3927 a(C)o(onclusion)19 b(:)f(c)n('est)f(en)h(2018)h(que)f(le)g
(pr)q(ix)f(du)h(livr)o(e)f(descendr)o(a)h(pour)f(la)h(pr)o(emi\350r)o
(e)f(fois)i(en-dessous)g(de)e(10)h Fs(N)p Fw(.)-246 3998
y
SDict begin H.S end
 -246 3998 a -246 3998 a
SDict begin 12 H.A end
 -246 3998 a -246 3998 a
SDict begin [/View [/XYZ H.V]/Dest (exo.38) cvn /DEST pdfmark end
 -246
3998 a -246 4012 a
SDict begin H.S end
 -246 4012 a -246 4012 a
SDict begin 12 H.A end
 -246 4012
a -246 4012 a
SDict begin [/View [/XYZ H.V]/Dest (Item.114) cvn /DEST pdfmark end
 -246 4012 a 0 TeXcolorgray 89 x Fx(Ex)o(er)o(cice)c(38)p
0 TeXcolorgray 0 TeXcolorgray 146 w Fw(1.)p 0 TeXcolorgray
43 w(100)19 b(\045)10 b Fv(\241)g Fw(15)18 b(\045)c Fv(\306)g
Fw(85)19 b(\045)14 b Fv(\306)g Fw(0,)8 b(85,)19 b(donc)e(pour)h
(diminuer)h(un)e(nombr)o(e)g(de)h(15)g(\045,)f(il)h(faut)g(le)g
(multiplier)i(par)d(0,85.)-38 4208 y(Ainsi,)h(dans)f(le)h(sch\351ma)g
(ci-dessous)o(,)h(l)o('intensit\351)i(lumineuse)f(est-elle)f
(multipli\351e)h(par)d(0,85)i(\340)e(chaque)i(nouvelle)g(plaque)f(:)p
0 TeXcolorgray 0 TeXcolorgray 618 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 345.90486 a add def
/d 0.0 a add neg def /h 166.50133 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 618 5646 a 832
5503 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
106.69777 149.37688 106.69777 106.69777 85.35822 0.0 85.35822  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.84
0.84 0.92  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave
2.0 SLW 0.2 0.2 0.6  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
64.01866 149.37688 64.01866 106.69777 42.67911 0.0 42.67911  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.84
0.84 0.92  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave
2.0 SLW 0.2 0.2 0.6  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
21.33955 149.37688 21.33955 106.69777 0.0 0.0 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.84 0.84 0.92  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.2 0.2 0.6  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.73248
76.91565 192.19046 76.91565   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
119.66118 191.83423 119.66118   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
33.81389 191.83423 34.1701   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
-8.57541 192.19046 -8.2192   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 832 5503 a
tx@Dict begin { -20.2725 109.89856 } PutCoor PutBegin  end
 832
5503 a 0.2 0.2 0.6 TeXcolorrgb 57 x Fw(1)872 5537 y Fk(r)o(e)934
5560 y Fw(plaque)p 0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503
a 832 5503 a
tx@Dict begin { -20.2725 67.21945 } PutCoor PutBegin  end
 832 5503 a 0.2 0.2 0.6 TeXcolorrgb 57 x
Fw(2)872 5537 y Fk(e)915 5560 y Fw(plaque)p 0 TeXcolorgray
832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { -20.2725 24.54034 } PutCoor PutBegin  end
 832 5503 a 0.2 0.2 0.6
TeXcolorrgb 57 x Fw(3)872 5537 y Fk(e)915 5560 y Fw(plaque)p
0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.53381 123.76947 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Ft(v)877 5572 y Fp(0)926 5560 y Fv(\306)c
Fw(12)k(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.39087 81.09036 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Ft(v)877 5572 y Fp(1)926 5560 y Fv(\306)c
Fw(12)c Fv(\243)g Fw(0,)e(85)18 b Fv(\306)c Fw(10,)8
b(2)19 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.39087 38.41125 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Ft(v)877 5572 y Fp(2)926 5560 y Fv(\306)14
b Fw(10,)8 b(2)i Fv(\243)g Fw(0,)e(85)19 b Fv(\306)14
b Fw(8,)8 b(67)19 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503
a
tx@Dict begin { 197.39087 -4.26784 } PutCoor PutBegin  end
 832 5503 a 834 5560 a Ft(v)877 5572 y Fp(3)926 5560
y Fv(\306)14 b Fw(8,)8 b(67)i Fv(\243)g Fw(0,)e(85)19
b Fv(\306)14 b Fw(7,)8 b(3695)20 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832
5503 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 96.02798 117.36754 96.02798
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 74.68843 117.36754 85.35822
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 117.36754 117.36754 106.69777
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
832 5503 a
tx@Dict begin { 32.00932 135.05759 } PutCoor PutBegin  end
 832 5503 a 0 0 1 0 TeXcolorcmyk 57 x Fw(lumi\350r)o(e)p
0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 3490 5646 a
currentpoint initclip moveto
 3490
5646 a 0 TeXcolorgray 1909 5895 a Fw(21)p 0 TeXcolorgray
eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a Fx(R)o(emarque)16 b(:)k Fw(Le)h(lumen)h(est)e
(une)h(unit\351)g(de)f(mesur)o(e)h(du)f(\003ux)g(lumineux,)i
(utilis\351e)g(notamment)g(pour)f(indiquer)g(la)f(capacit\351)g(d)n
('\351clair)o(e-)-38 -63 y(ment)e(des)g(ampoules)h(\351lectr)q(iques)o
(.)-246 -31 y
SDict begin H.S end
 -246 -31 a -246 -31 a
SDict begin 12 H.A end
 -246 -31 a -246 -31
a
SDict begin [/View [/XYZ H.V]/Dest (Item.115) cvn /DEST pdfmark end
 -246 -31 a 0 TeXcolorgray -141 66 a Fw(2.)p 0 TeXcolorgray
43 w(La)e(suite)k Ft(v)j Fw(est)18 b(une)g(suite)h(g\351om\351tr)q
(ique)f(de)f(r)o(aison)j Ft(q)g Fv(\306)14 b Fw(0,)8
b(85.)-246 99 y
SDict begin H.S end
 -246 99 a -246 99 a
SDict begin 12 H.A end
 -246 99 a -246 99
a
SDict begin [/View [/XYZ H.V]/Dest (Item.116) cvn /DEST pdfmark end
 -246 99 a 0 TeXcolorgray -141 195 a Fw(3.)p 0 TeXcolorgray
43 w(L)-10 b('intensit\351)21 b(lumineuse)g(est)f(divis\351e)f(par)g
(10)g(lorsqu)n('on)h(descend)f(en)f(dessous)i(de)e(12)11
b Fv(\245)g Fw(10)17 b Fv(\306)e Fw(1,)8 b(2)20 b(lm.)g(P)n(our)e
(savoir)g(le)h(nombr)o(e)g(minimal)-38 294 y(de)g(plaques)i(\340)e
(superposer)i(pour)f(qu)n('il)g(en)f(soit)i(ainsi,)f(on)f(r)o(entr)o(e)
g(les)h(valeurs)g(initiales)h(0)f(et)g(12)g(dans)f(la)h(colonne)g(B)o
(,)f(puis)i(on)e(r)o(entr)o(e)g(les)-38 394 y(for)q(mules)e(ci-dessous)
f(dans)g(la)g(colonne)g(C,)g(que)g(l)o('on)h(\351tir)o(e)e(vers)h(la)g
(droite)f(jusqu)n('\340)i(obtenir)f(une)g(intensit\351)h(lumineuse)i
(inf\351r)q(ieur)o(e)d(\340)f(1,2.)p 0 TeXcolorgray 0
TeXcolorgray -38 533 4184 4 v -38 632 4 100 v 105 632
V 419 602 a(A)p 778 632 V 624 w(B)p 1451 632 V 622 w(C)p
2124 632 V 603 w Fv(\242)8 b(\242)g(\242)p 2797 632 V
615 w Fw(P)p 3470 632 V 620 w(Q)p 4142 632 V -38 636
4184 4 v -38 735 4 100 v 15 705 a(1)p 105 735 V 140 w(Nb)17
b(de)g(plaques)p 778 735 V 406 w(0)p 1451 735 V 544 w(=B1+1)p
2124 735 V 521 w Fv(\242)8 b(\242)g(\242)p 2797 735 V
597 w Fw(14)p 3470 735 V 593 w(15)p 4142 735 V -38 739
4184 4 v -38 838 4 100 v 15 808 a(2)p 105 838 V 154 w(I)o(ntensit\351)
19 b(\(lm\))p 778 838 V 398 w(12)p 1451 838 V 480 w(=B2*0,85)p
2124 838 V 478 w Fv(\242)8 b(\242)g(\242)p 2797 838 V
563 w Fw(1,)g(23)p 3470 838 V 525 w(1,)g(05)p 4142 838
V -38 841 4184 4 v -38 1015 a(C)o(onclusion)19 b(:)f(il)f(faut)h
(superposer)h(au)f(moins)g(15)g(plaques)h(pour)f(que)g(l)o
('intensit\351)i(lumineuse)g(soit)e(divis\351e)h(par)e(10.)p
0 TeXcolorgray 1909 5895 a(22)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
