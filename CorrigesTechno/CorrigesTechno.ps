%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: CorrigesTechno.dvi
%%CreationDate: Thu Jan 16 18:03:12 2025
%%Pages: 32
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Regular Utopia-Bold Fourier-Math-Symbols
%%+ Fourier-Math-Letters-Italic wasy10 CMSY10 Utopia-Italic
%%+ XYATIP-Medium XYBTIP-Medium Fourier-Math-Extension fourier-orns
%%+ MSAM10 LINE10 EURM10 Fourier-Math-Letters Fourier-Math-BlackBoard
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o CorrigesTechno.ps
%+ CorrigesTechno.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.01.16:1903
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7CAA00F8
69C9D899C80FDAA551B57BDFD7BFDFE5BE081D0AE6FC30D89B49C43AB5C8F923
13C1E770F0905663DA9727679AA4339CC3AD369EC209709BD9705D1DB6B78F93
92474A4533F1AE35DC3FDD42A5B2E4A97B674B387DC33CB2CFAE8BBE22C5F394
1EB83232690FD175F119A31831D9C44DF9B2136E8FB7CEC0CAC7B07803081003
DEA9E43448F7655B6F04C6B4A2BE3460EA77488F913780D05CD85290B73762DD
A9878EB2DD0ED0476B0214FCA4E8D90CD1AE317C32C0B623D668629D93709571
90E927134FD0C778A050B8A2444144FDD19A04C5B31119
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:50:41 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
dup 50 /element put
dup 91 /union put
dup 92 /intersection put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 165 /divide put
dup 170 /circleminus put
dup 183 /lessequal put
dup 184 /greaterequal put
dup 188 /approxequal put
dup 197 /plus put
dup 198 /equal put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735FB6B8836B8B5A4D2AA84
96C5E265C58458246B1452B308A022655587FDF933817766BE8A1E6C29DC4365
DC1ED202CBD81E0339EC4C3C57B054EADA2C699385B3CD763CA06787E96684BF
86F7BBA7009447D8D50167498735295CFFA5358D068EA503BEBC2D3A7EEDE760
BBC03394A6B01B1AEC021C9F06834D1CDE5DED19A5A1F9097078C50CEAA55651
C41560C18BF7BDA3C4A396223ECB57023C07EAD2958C53F28417071549E26F3D
9A6CE02C76E57952F3E7BA3846E20DE250E64C15B8AB6EC5F48460AFD62C6FC8
984A2737E87867BF00643059BEABA7833E163778B26B2818878E287B609B128D
5497986A84680D41538B16EBFD94F23532EB9DC77FBF4A0BB2DBB8CD7848CB59
440E8C6280A9363AAD12C57160FD8EE3EB37862BE6B779A76FF74EE8746A2808
8A1DCCA5FC9E9F01542FF2B81925627BF714181D421F06C9C55281EE4293A65F
44E902EBDF79C75C6E73352B582235A5C563FADE5830FA13C8955014836234F0
13431557D6E205A53C15DEFFBB2360A0AE1959341417C5BE33C3858F37204DAA
64E3EC1AA9F220FC64DBD0E82BD954F00815177B98536AF7EA50F9566C73242B
CE01A5FD779DDD02A8F30C834B37DECC9BA089A32D41966315C8CA512B82B6EF
44AB708EAAC20610CD69777394561494D0511ED4423751D23B8565B9B25B8D71
00D44ED3A59A30C12AB13964DA72BFA1F13123DCE4E0618C4041F41946CA1CB8
E4D61090BB2185723A65A90FF7A34FD5113A4313C5BC4005ED3BB2C020D1CBA0
A23743073850A9D81289CB44D4CE6DC21F20AB812F391D734E5A449BD4834D03
9E32AD5020A4E67058BAF3D44C1BB54DC6480FBAD5FF8CE66DCB622723A1C137
98DF5F4A03F62B6DB0E17BF124AE1D2DF577AA0C94C4F920BCC24762E9F572A7
D77C3BA7FE7FBAD8D01B1C4EE7909F1EF2FB89ADD093C3869A114DCA46FF533C
F7D16F79ECF6A8DFE7EE54B8F8B0DF37D1C46145C9308A3C1AE5E8B28D674250
454A2BBB80C4D45A6E516AC3E9D66C0A47ABE61BCC1DB7EBFC2D2A9B5E86FAC5
27298100A2669A4483FD67E85182251FEC886E716B01EF283C51733B785E946B
D3511D606440A6A1943E1FEF99B21AC1E47B60F1163F20E3A7725C94C04A9749
3B27874789B937406A7984E8F81C4F8A6C5295FE0EF3B895AFC62C5C3F38C5DE
4D99B9B03E1D7627FD95C72C1A29F419CCA5A0E56988C99E06321FA4374B5D83
16302DD9627202B3823E88A1873D923781B7F21F195268174FE37A305B77753B
9085D7CF4CC883A0338AA291EE784D9CCA3B494267C6B02C31D45F28E8A475D6
4D560160EE19759DEE34AD27924C52DEC17F1B86F4D044F134F583C6C567DB96
87C50B6A63FA71A4AB7F19F46C1A943BC9A1AD8467389174EE87B7271054638A
7C72152050A8FF44E333CB659E5A75D5995611A0231DA631A14F2DA05061DEE8
476166CBC823304E1F457DD2EF397E24FADDCB98FFB43E6438E96A91C413FE74
DE83794B1DBF73F5712D175DADA477DB609F2C4EBCD7AE95EB42B266237AF8CB
C374DEBA3B6C710BEB0BB74D1EFA79B97E43A13C215BB7F595278AC90F4D94AF
D9625E60A27E6F67A108EF4566A513F252F207A7A6F80E62FE3FF5D673E2B2F9
8E30615D5162DA91E78C218F47CFB3756ECFD44E42C56437125EB20EADFC9D38
63B6AA5A504EB1D1A66BFD7EB46F709E360FF7ED1DD13CAB5D7227194C90121B
5AED83F1B313F94BA04E62A03C1BBDB60511BB8D97B34E58C6D2B5F041E53110
2C15F8D972ECF5DE8C0016F7EC99F131BA3484E92322BABF8D5EEE139786BAB1
7E823007717BD902A4F359F85295281D8D8490EEB04C7767CFB84FF1AADD0BEB
B4F636B2EBC63FE9620EA63E15C77368E1CA8A2CA72937CDD95A2BAD5CBCDD7E
A2C13B31890BA014966A9C649ED4FA43B53D5F8DCB216FC1C36C729B807718E9
71D7F3E1BB83BA906CBA6870DE2ADE2907B514089B9E6DD412DB298B6E12DBAD
F388536662DD73DE2FD74D0477FFD7911FC1511E02E27BEF9BBD7B0AC1C6D7FF
4A2EF9399BCF90390054A11FFF413A6486B468FB37245D5E79B6BF2D078DE949
883375C68F20BA7852CD418F7AD81585D75D9E85DF69FDEE2A177490F7A7E702
A4F394B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters
%!PS-AdobeFont-1.0: Fourier-Math-Letters 001.004
%%CreationDate: Sat Oct 30 17:27:29 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 162 /Delta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -247 972 755} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
72A7B8AEA5D41576411085046EB76258673C5CF40021E812997FA677D59CE155
7C55D36F8B6501F00808AEE2A8934EF6E7DF27A6D20490B6AD5EE97365B26935
6D798248ACD56BE774DE447B7979B08E595DB252D6EAC137A081AB9E002A195F
08D19ABEE28C95E9EB56094AACD6A73761A3E376674258165DCB3565F51AAE71
E9E3BEA4BB485DF2A75CD2A4335B926A3CFA77EC6765989F03A680DA1A20D708
470FD9A1DB35B2C937E5FD9AA6266283CD76E05138D55F0932678F1088EF5E7D
EFA66BBBECD836DE750970D76D32957258C0B88132232100F446B1885E4E29EA
B8959844D652017B77C98E7ED6D7FC65E1A01EB35DC733347DA3B63F9ACE67A6
975D81865DC92F610E531602C57AF9FCAB91E2EB7A5A39DD2EF594A1E2E5570B
896D14CC26EB1A42F74F76F2231DD03A6824AA2D1005943DDAF2910597A36559
E4BD2F9380A95F7FE63996A81EBBD94329601C7B1DC913319E879728A46CC916
CCC5A010A86E5C572AB48BC20494C889CCAA475A1782731922CAB36A7EE9AFD9
7CEA3215DD9F8FC10F8D4C3F94311A56C45FFD85FB0A91F315F33490242094D2
1996C1071EAEBA4792B29201666254BF49CB393ED233BC236B6BD7617A918696
D74A776613FB94DBD590A7893CA7FE1606C576DEB3E4D7DF25A7A5FE84A8DFD0
9BF199780DBAA1832D07BFBACCB7B8E9DDA897665613728537094E1E8933F961
EBB5ED1BFA4EE2856B8982377719ECF1D7B187015A90CA694AE0ECB4E32BB9E6
AB395207397C971034AD10D252B419D2C1D8841ED02492B3F2A9D73EFF9C12AE
9F92D8858A5ACAB071F8E0ADBE0794A62FB244F098A3940C82C391F0326B9F50
39B18EBFD2C105167F452AF2841C1AA728F941530ECE5D9C861EC8569D27AEC9
D0C19F35A3BDA17F09D2293012310B114FF0BD4D1B99A685BA61CD6E4D63D45B
C47199D41B4DE8F7C00C0F17D72EF41B22A92D559DF471E29954893E6FFE85B2
98AC23152C26ED5EDD43DAC6F23F9D3D0E28D770CA6093A1AEB5365720153023
8DBF05303D4B957B2DA2159F8EC25CB9E26D04C079FFEFD11379918708B95247
E9E48D274C2C4566841020BB7935F900E86709518E7A133B75F878084B0AA054
D2A472488B698A5701C5C909102CBA7CD5812333B254F9648A0F4C33016DAE9F
BC9D19EC7A14960514496FDE776F1A4C73BAC8A050A858127B9B71DCCAEE03E0
BB66A003687A85186CA83B34625B87D53E08A6417BFDDA19AAF3806BDC0272BD
188187ED61E72D8DEC992FA4596F4201DF5D1B5462A22CA111C970E138EF3F13
A7B70573C4356BBF79D344223C3C5FFCC2BFFEA3E1E78D794FD29324B3239D9C
6B11B2EF293012F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: EURM10
%!PS-AdobeFont-1.0: EURM10 003.003
%%Title: EURM10
%Version: 003.003
%%CreationDate: Mon Jun 13 12:00:00 2011
%%Creator: American Mathematical Society
%Copyright: Copyright (c) 1997, 2009, 2011 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name EURM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (003.003) readonly def
/Notice (Copyright \050c\051 1997, 2009, 2011 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name EURM10.) readonly def
/FullName (EURM10) readonly def
/FamilyName (Euler) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /EURM10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /phi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-32 -243 1060 720} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F41F8A25
49C1ADDE0F25E4C2E5C990C47FF040F896D567264EF5C3F584F56F343C2737E9
EBBB4521049C78FA1A7314E86D532BBC544FE600AB25D177ED8281150D633906
8BA0DAB861A70FA9DB57EF3CE0D91C6A618A0082E595C1EA7E42B3C16842A9CC
7B8D943FA5D2384E3A8E797C334EEA52719AF615796D2EC131ABFB18606909F5
6192412A0320AD88B47D26C2D51FF38411F77DA84D5176BFB243447977173EAA
EDFE34ADC06154B053A3D5620C5F9A35B6BB5FD64B5EBDD13DEE096EC7543A55
DD9D1438D1746D8BE4DCD1D4A173DF9943C66B5128C3FA98E15C0C94FE411BAD
E810EDB7B7273FDEE769E94B6C49F09E74A5D89D5F6D776BA691DA3C5D59F573
5F1BF23A503258D642835A52BEAD40E16329D85497362275CE42FE13DAA19CAB
2C81DCF4644C65D988C1A27AB4E0EEA3D97D1076913836CB837FE42F98D80DA8
6A792B3CBE7587CCA83AA8A0722A7460A6A20D8EC0A70789C0CF4689C4113AA3
D42EDE01909AAA83450597B2D62195C5FC6B85075B31722E4919C9255D450036
BC434E6C05F32F0AECECE4CCA9AB7372C14BA99F8EEF9A240F0A537E75ED2CD6
B884FFE9BA738EFF3883E754E8C9A4647EC368E7C9E6CE86D8CD5C94B0FFAD7C
8C3C95053EE6DC3BADE68D985D9AAEA241F2BEF8576A74B6E46C635C20A5FE3B
BE83FD7FEBA6A21114FE25CC22437163B3504F62A1A1E3B9D81CEBA885B23678
8C1EF18A1B7FF384B08E6C857BF0AC2DE0AB368C5C6658E743AB02998152F9D5
29C8A78A2D7A62395617F5D533F38A68C2F94CB35E68DDBE2B94487C26E16241
531924C936DEDCD9B5DBBE867BFA34243DFE8C08F1CF1DBC72C01399DFE33EE3
F5A26DBD9409CC8E4A077A6576B662AE7BE7BC9D7D1A4465FD0E819964F62EC5
B0ADC909F6DA228DE32F694FD027CE76F45C623709187300E6484980A062C05C
9B352F6AF5BD52FE1D7944260036DD3A631F076DC1B3D3933900D3F1D794EDE4
DB65719A00D03B33502E1F59F53F8A02D005A3124555C19DBC80FDE4CD173B0E
3FCE02D064A6435322199C983565E8D4445637ABE216E1F84089E6E0A57A6AD5
25B4FB46B776DB2F8385EDF530FE6CC403B268CE34B1BA0BFFD785EC748BA3EB
9721AF8DC3C5D5D26A75FE580A3DE8992CBDF430E117B0B7705A43DA4915B92B
9E369A913488C8AD37E731BAEDCACFA8006A049FD3B350741EED5151973D65DC
6DEFCE17AA397770D733037F72F599C09F35A16CED0DBB36DFE3578097AE3D23
990AD071833F236088CA0A33565C584726E4C1D5953CCA29EFDE324D10D9FC0F
D7AE521EEAF6E21F32513DBB6E269218F5D2E1CC0FDEFF9D05A29D5C3B6B8195
33D642BC08CE5DB97909ABF5B87C7C7F2A4091C819F03101571DE8126C7FB3A8
37CB9A9ED232C3A38321DF1410C805DF50C579E56F70A0DBE768CB20F2FA7C22
A586FD388439AD34872C17033DF2171B7DF7262EDBF5846D9B15FCE42A1BBE9F
6CB869604CA74FA846B4DD4C71DBB4A7CFFEE7BD3B1F81C3A34FEB6A4784E271
2B63A21EBD61164790F7D8DF24CAAD82C8D28E2254129701A145381FB0D6A5E0
745308C7E1935CE6A7EBE22A23A5BC68F3B97DDBB0952E11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /a1 put
dup 8 /a8 put
dup 24 /a24 put
dup 26 /a26 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26B5C08C469B019AD88D8FC0E
C3E2584A480C7F579170A24D06310587FE7AE6ABCA16D5E6DA13F7A08C3384B3
8FF03412EC1D161F1E96FAF3051005E39360ADF38D3A2FDF93DBECF9F84094DE
D616CE8763EBF06B42FFD3275EBB5661C21FE18F778C817118E121EBF27E4220
114E169961002403786A9D384D5460D978B414CEFEE3696AD1C14710626AAA3B
0D082D32F040526F144EC3D85AF6168282F3448370667C571928A6C6F8D5F85D
70C6CBB44146EE7E88B9C8373693C19B12FB2BC624B8FA5DA002A70A8946D900
53298C9B3F3FFDB2B7ADDC3020DAAB34F2A1CD8016117C4278A3695AA0FB0FFB
5F07D8F126B022F9FB954469ABE2922185A472EA3C8D27E67882C9C860DA3AE3
2592330347874C389DE0DBC1AB59105FF10AEF81DAAE427BCDAB8FB35407FBDD
9646E0161AFE4532DD02EF7E0ADEB27F99B947CEC61736B0713E79F001B1FB18
3A5BCF65550003659AE562F90F87876B976EC9F2F631BF7C30516CEB3697AD32
73351871BB9D58E7EBECEF41355EA02B1702513CA1EDFC247C077F0E051BAA43
0893C18E41E93A708CC742FB3C3B6A3724446DF5824F29A586CB1075696B310A
43C4F26DCF3D5348378A9135BB3B64A35998D641DB25B2A135A2CA38D627D574
7AD8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DFE4D3F80627CFCD3E8BE1D7656C518666BA45A27055C773B16ECB6
511E2A60E0B185CFB488D118D74E8BF9637F0AC7E1C1D9184DACA06F816B12B6
478FC7ED76D24953253E0B2337E08EF790CA36DC8904E2CA4560AC14AD4E54AF
2FF89B894540D6E0A9F764AF34F4177CD3A56B5A2FA274AA4CEBF07EE63D15C1
3C7ADB781EE1DC4172B238CECB15B80F50EC2065DA9EC95D30D39DB92D17AF71
76E6FA7F2E68B3BBB010086EBBB075A72D0624084021887EB5284FAF73E72CCB
C15C7AECF1CB17416CF2BBD8BA7F054894F66DE1613AEFDF6D2C77AC001102A0
94A99CE647DF4C4C6CE1A7277FC848B39681531D3F8FECD47FF1EDD5B3CF4321
2B32FE804A11F6D76801BD5F2DC59354F4AA227006F97D796A5982FFAB3B471F
1187318913D940B5B7DAD2172DF1816D46A9FFAF8C077A7B727E6E7B9E427C94
EA7EACB0E431EB4276D6883579A7ED352738AD7E57BD11B89D67C4A1BCCDF08D
F33908E6BED58BE4EF071A9F8F8639682E6E7F043BCF250FC5195E02D81FD4EF
1EC67464E6D2CE3F3F75742A06D66C9E72D7CFFC32061D63D174B1A293460051
DA59D0708FB5E6F400469FE2227D126AA8317DA3CC28FAE21C4D4A60AE55C853
71FC39C8BCA5DCCFA45FB2578337771A93B1617F5419CBF89D2FCCF53FF8496A
2F09540CD2E6BACA74151E5CB66BCC1F03B3C9BA42AF2F157AF42FDB1930D18C
3A4D3375828E4EF07D846331B46D1FB5BE1FB12BCB8D2A832FCFD5CCEC74EB45
6CA3DFA6FE50ED4ED9072B120A89C364951DB2F4A495B09D615356D057D21102
1FE53E0BC1264E300B94D15AAB28CD6564C86FA62D5D1AC3AE942B437B9BAA4C
3BC9383BDD3F17ECAB959CA7511ABA497FCF85FDAB0810508E2CF7E111562C54
8AEC191285237DB29786CDCEB455716AC9C1B17CA3D95BE3C72679EDF01431E9
5C6AC9D88E4551E7804083000BA7AEC42DE3E99CDE423533594372B123D9A18B
1CDA2903765B57AFF396BA667D8C4940925F1D813B81C19FEC33DD6A5226E1A3
BA4222F911A7587A365EF6632A6029B400404ED48FF12DD9A55DDADC33F7965F
14B371EF5FC8170EF5066A4D44FF63DEC64FEC13829547FBDB755E5D1DCF9BB1
048F360373284DFFA9E73EFE6E2A81A3E87A9AA9E5DDF4A7E0F40F74DC822B9A
901C647E340E41A64F36AC972359BAEAE056E68AF8C78A3BDC441484D8C2C9AA
1AA2DEB15522DF5E61031D8B6450B8574B73057D3C374F86282F0D9F0AB90E5B
B5895415797B685D9C3AC9DAA7F4EFEFF6C02E56F54A544AEACE0FF9AE589DA0
53C4DC6D95C2AF9BDFFC68780D42908C9E2D828915791F396FC8598E542F8212
2219BDBB02D9857A67E52057A7B5A5B6FA8C1A57F9B00E796065C3B3D9760B94
F04E7E9863935902385CD9A2ABA44EFB39B6E62B614B6CE8A7F140E0A0A26F96
7974966BF875A86518AD9694D92DBC4AC36FF1FA2A432D15D79BADFC75816C5B
4E0C9DD961FA8E5C45D2008BA393EAB13E23FDF912D3F5099993B56ADE2E1673
0BB9EFC6631175E77D59B677CEB6C24A8F6BEE433FF850FA8EB3ECF9BB2B18D7
27B4FB3F9A515931344474BE00475A311F76FAEA2AE5D45AF6AD06A0CC8411AE
60B28C3C1647F3881045717F75CFC278947B7ECC428AE0EA00879F029648D1EE
0BF7E7BA1921F9653944230D5A2EF242DF0F81E1EF239CCEFFFE0BE6DF0E8619
A6C80D45F55B429FA0877BB8F3EF4365478D26C2C8AD54CF896CDAFF532E2A55
28E64B033F583B62DE574D252C30EAC348FEC738F6E6463138F5B8BC14CA70AE
A97FC6C5FD910F7FFA98DF80D1600B17215C264F2A9E0C0684E5C69EF9F75AF1
36966E47FDB071F54300258AAB7AD3CE9EDBB422EDBB53F47C3B113F0CCBCA44
FA9F16043F87BDE2AC70FE50F819FD50943D689516BF365CBA3C536C611527AD
25288FC144345EC97AB5684F375FAD39D3C2D3C1461957D7BAA23C0ADA3AFE74
2704F684E0DA825FF99B1AEAAB5AF5AE654BD6E430935CE02DD66C42156C4198
BACEAB6254EDA38EDC899EE4C36ED5FAF7DF63DEBEBF522B744E48AFD33F60EA
44F4BE2151072A0CB0C23F7836067677140F20B5F231A9A264301431AC809D41
CE4DF4445DA1B2BA8ED30D6DAB29FA5348B9395136AC2F9BE0A2993E35D3600C
FE96CF3BD9D0B1736B8D74943BA431A401FA5EF3C41CF9CB58868FA5FDCCB81E
DB18676BA82A052239D484DB067BB1E6E1485C828AA24746D83859543B0AD5D0
BBF13F637E245B3759F2FFF4CEC8E6BA56331504DCF3DB1CB08E982D91093391
897DA533722F67CCE469E535E293744ACD3EF701141078B14E5478158FFB7BE7
1DF69B021575114BA484D9E09F95AF702D2EA1248AB201D9ABEC7D8E6744E694
A7714C4EE2C528A02E13A443983C10C6C44F637F0C81C31A759D686197C4732D
4F2ABC0D164A6F8B326088D167DFB3B74EBE0E6F461B278B597299888FF2782A
534BDC6E3E1516285924E18F072B702A18399BDA7D8C63D42D9FE063BDC633CF
48613F4A75100B5A3269E4E11B9A38333361680EBF2F3D60137268333E6567A7
76AC642CAB1B7965154D3B99092C8C02B69423A6C59FB2AEEB52D24244B9374A
F98B9D1A1F77A5053DEEA218C80AF1004280C08495EF3191C3A21B75A26F74CC
4633EC1CBFF7E96F09BC98B9F08B35139FA107EA9167BF582F22C24A59DB0738
4F98297A923D4195E416EAF8BC9DE3874E553BFB2197B45E3310F15270D1CF49
D7BFDF33C719AA434AA3F025C94F55752CF01951B42B4F719EB45F7E98D559FA
34329EC2BF57E32A4480189E398E566024514957DF1C4F1522D74FD88E8F4FBC
6CD60764E6321946F81E89CC8838F18731B6968EB588D34FFF80CD1A29EC8AFD
0D9C24EF34CE2B6B30FEE69727BF5E05D1A6D918CEB0BE8B3DBEB8A04434EC4C
CFC6FDA725C33E772D221680CA4B11F62A03F202C75D08BD609E69AED98BBF30
6A7827398C46EDC4C8F83DF32C8E8073BD246CC8CC072B11BB3B3A8EF9089DEA
A707969EBABD85AD81FA94AB96A43945C460A9B3288D5784E21F39C753227C6B
684447C70DDE5D4371587AD5E9E77B6982EAADDAB217A5046B7E37453877CFB4
E0DC711BE8539144D9E2A5CE79E59CA3373BD32479CB404366AA602032C37B86
DA81CBDBB7330AB3DD8637C1A7CBFE4A4BE1F93082D366FDA75C0305C968B514
5C6EB72235101D84F4CAD10626CE1B20E379D5D86AFEB8376F454C0767A0FFDE
D2F11263F252B16F94996D3C9D53FE0C1F7D1E448C74744C42B434EAE97D3357
5A7194A903E4F6F8A25A31DAE09E92D62158E0D65D69FB14B6ACD4A65A2D435D
8607D9E5AF149AE397D32ACA455BCC8A90417E80E3A4A43C54F3095FC59B3B81
86911F73F0C3AF78609DCF100DD9DE9BB71A5870AB4E43023C1B47EA135377CA
2DF9D7F1EAA51358CF610D35ACC354409D0DE2BA896BA4BBEDA04CB785DF38CF
1EB5E227926096F165C89C158A1BA9317AFCA94124D4510C5BCA6D17B9E52DA2
AEE2F85AA620769132C6892CF7C2A423A6835043F5C69BABCA7A393744E80FF8
2D23394318C22B860819B17F95F121B4DBCF4A706B3C6449A558A88D4259B317
9FBFA7AD015F2A0B4B860EDFE42B145626CDE02BB9ABB47FD962871CF417BEB0
E38E383B8A335CFB983121C2134D0F5BE6F80F57CBD7F6438FA7E4648D5EA5F9
5D79F4403C9EAC194AD7E50FAEAA8C7B92A3367E850F9D9D233D3CA5472E6D0C
54D9693F3DC8C1DAE294DA2DA8F923417D991D7AEF52D058ECBC2D059CD0A4EB
DAB166A6412B180F0A545B30E4232333E201BDF9463E19DA514C4BF01ACE435A
DB39C43EA6B4FDE90A2B3D42FDF45D708074543D00A6C82632AD7BF99B4D8391
09989E764CEF302A190D3242950D586E90014A804BCAB7DBCCBC663320D21EB4
79B55D644CAB2967A8A7ACCC98A13F2639AEC4B36F63CC275434AED1FFCE861D
48CFA435AC26D684677C773DC20480C8D689DE65EB838006EE6D24C768D0A374
3486E0A343D6B4E3A94522133D8B416A6DF05C8053A74B2A172A7A118DE0362D
76B5B485346040C482F5C5D0AA1EF1398C2E26CCD1364E0E8E9FC5797A7188A5
74FB12CDDD7D516E7307BD387907C965168009FD69660310783BDCC009AA0874
374F4A72F821E0EF124C119706E8F6357B11E1B0AAD10E1490DD818B17FA6997
C407BB85AA39E36B48F69F63EF5B428BF58A1860B734DC01660906AF548EAF42
0751F10C8A6338A707606734572FB278BB5FF7B27D78EE3517151FC81DCC5594
0A347AC2632092CF95DF3AC891959A234DEC41C9E6F20D2EB2784860E5049233
D85D3CEF6DE6039497621E584D2C1DB94742CFA8F03D732BAE23AC16C47C0CA0
11F861A810A30D5E96038DD865B2A15A17774935F6E811675EB2AAE536E59AFE
1137660C1B9C9716711F492F031EB25082796481CE7C664953C121628DE7E98B
50ED83A538251EE4B82D6F890CE088755B67622823E2A39D8B968FCFE74F294E
A3DBC126999AF47447E6CC9071F4F96C3CAD55BD636640155E095C6055909723
52FEFADB83DB6FF559948A22F78DA50A3F5E9A303CAB71E26972A0AC34F5DC5F
3229A323BC937C8849B533D9440DB8DC2926758E5C649188DB00F3AB9E60233F
708F967186E2111028ACE48F2840FD1F03C13F55EF2CD591EE8D110EDF216865
D4890293FF880CE109C189D8AAB0C1D6DFBC90CBA818881485C181C84F602CEA
8D6D8D1D377ACDB75AD3E8233AFDBEDDD95609ED9AE9AE5186E210312D6BBBFA
ADC0889416FEE0572674FBFFE6DDBD3E862F1FFD1ED14606C1180D4BB2157CA4
719B2B44B23C1D26A3B34E50315E48BCB10847ED474E4724308009DE710899BE
14C0D526356DCA3EA4C914D19B959976BCD8E17363864CC8A8C4508DBAF9DC8E
CA9018B12EA9B296DB3FB6450F50A0C3B0BC64E6F0CCA48FAB21423AC09E4442
D085FE260C71E990354A2BCC3285BCA243523BE782F9D4B8FD551B4570B9AF77
07EEC32DFCB26B3F8299146975AD31C88CE528A52BC5F9674D285DF6B5CD27B1
2E34B0A40681921659D4B2A379AE1375A60F63CB7979E71005A4B34CE31DC252
214E944FBA0E66BEFD41F59782E85A388B99CAE763E41AF380435752CFDE4507
966C0FCE728BDEF3CCA5C368CB4049D69B9ABC11CEE53112EFAF9273DD8C7F84
484031CD50439D42F683099025104AAA491F973F0DE96B45015E9DEEB9EB267E
5827DF6EBDAEB2A26C9B94BC55280755346351B8F1C80C0254BD4B512C3580CC
AD465610873C04482869C88245E46A4617AF42BB22A0CBF2D8DA4E014B8A5111
AFBC99B106C67DD1CF609CEC6E8D6BBE99009C8548FC38A85E667609EC3AC708
FF5AF6E5E4D192A766BD6E2BFF174F4549A2D4DAF2AB68D5CB662BE0B1D1C834
88CE2F1B25A7CA185A61D308D7B13FA066204885C770FD4A4B2E2811C33A3468
EBFB7EA2F8C7D4DDC88C23F850FF698A1E383942D0F4BF68483C3D2638D56DFD
1D18D83AFC1BA88831D9B9B12935EB59B609C0B58D6C652F245326322B9CC4A1
1F71342A976295071FBFD7A84805FAA7AF98AFDF4732B5003F5D1DFF1D09C895
7172543CD8FF8D541B8B7F78B569AB40C88E708DC47B1DDD73C4C95CF2905224
5B9BCB889333EB1E9FCDA06406EFAEA6313E62D5D141FCA21790EDDE1E360133
8E2B6C655084B4412B5FCB35CCF791DD235A5E99C9D7CD9C2EBA72B51F3F3C91
C1AC68C2CE2071A1514FDFA513EFB425B3A0CBAC7559D8CEC6C8E5E123C3814C
61BA0F88E99544D3058B297A459867E1A9FA65D8E117F0C8BB0CB3123EB7502D
AE7A29BB97B102B3C07408CC2DE33E2A2416E972393DC260B8F752EBB1DED840
EF719D1C27F72940A15D3876488E158D767C428CBBEC54165012767B97FDF225
685D1049F32F4C4D139AEE6636A10F7BF60351AC49A8E51F8E4CD8DE2FBE1C0D
B83FAC45FB20654D9E97727F2F24FC0F2E1AB5529BF3F2FFCE3373C9A04D6D53
5C30F53371E168799E8DD0EDE59C7486A30B1535E3F8C5B814D3A0BA9C0B0705
24C767499819371CF255F2CAA7F5304274B026E365EA2E5831D4A422F2E0E9E5
AB8BEE397F7DC29C5A65AF5D9F1D68C363CA1385BD2AA4F4A8AC4E54C52D9E45
1DC214623BC0B755824F7B809EE647406B5A0A6A48E094161AA1EC53E443C655
D5B3B3AD58A64A7EDE97DB40ADF9BF6A01FCEF26C1DECFB51332B780C395568C
8DE9B25C6E7C9E45C24AB1EBC8629B95AEEF5E7BAD6D747084B23A94F21F46B0
6D6276A55D031C7D4F8838157372BAC8B8450FFA6C6468BBE74C6691838E6001
46C44D49BA47846EA590C19E6686C25DE7B0DD369BF66CA400301BD2C52FDB19
1EFFBA2DB53C70BD06F066B39029FF9F79655BD29ED06D5A8EEDA22EC0FC539A
C69A0395059363E95983351D6FE24AEF92A3CFC7C92C4A5E96679ABA00A4F9F4
3534EF6A018F871EF6F8FD8FF44D2B0659DCD31463EF2788E40E16407433FCA8
B192D0F6BFDAEBB0031F7659E0D6D3A5DB1E28A487DD73C8F73192432066FEB2
9BCDC758071838AF50F66B95BBDE9D38AD363503BFF92CC852C8CBC40EF5A57B
CD0C6AACB9B5A6A87D3D343D6CDF7B8E946432BAD5821F1DFC9DCC45811F1109
A51AFFF7AACCB3BE6CE58A483766B92AA3A230BC5D1335448E633F319D6E2181
12CD8532E057A6860FEDE66AAFB6ABA0A3EB37415182F40F523968592CD36025
E0923D0D96041E233B74E35560D168C0C9DD7FB6BCC57CECE0AB1CC16494477F
DF68D291AA0E9442155D2EF1C3AFCB19D092BA631C1B78577282AF3D8ADDD534
B8A702E96ECDFD8508705EBF413CC2BEAE9A3CF3741FCC90E115F94B379DE46A
B431EF83CD0EC81A1FEBE8FE074902A0DE2BEF34F7BB1EA8289C446A878C782B
A6D48AEE80E17953AAC7FDD105F679C1EF18ABA3CB561652DBCBFDD4042E3253
2D4E806745E3B716993C790BADB0B3AA650D551C8DCACF275615F9F7A2D28FBC
624B9F2E4AF8420A7A563D4BFF0291CEBBDEAB4B2E628B55F99289BF6A18034E
11CE1241186F16BF84108E0F60838A5079D75DC874005138328D8D179D52CDE6
074D8C35853D604E9DD523C85B232EB6E95D52E88E5E3BE5509AA77ADD96EAF4
50A0051D10AE4BD28629B54372FF09B01E491F6C4F85DB38BF306F02165BBD1F
65FBE3EEC6493317A6D522D6623FE37B130BCE9091F292D8699630A13D446B45
06EF805E4A79AF7C0116943943919FC6081E263F2068AC4815EC4BD274EE69E0
0158B28F6B72F590F75A798F3B2663D56445643F1B5E7A5B6EA4F5875A0C9E05
378426566440E5B7311AEE85E2FBAD76C0DA1FE4D5BA550947B81FDB7A21E3CD
1F382854CB20E01CCDEDB61CE08A105479C6EAB854AF9EBF1090943B5D97802B
452F9D357595B6370F246AEB0B934D7A93259B8805A9444EEF83C89B878839BE
4FBFBBD4E1879128EFA924C2CF812C53A3E273D03B628C07257D10D1717F2578
0F7F95A9598C3A2233BEC5F523FA65A69B63D8C834C9E213D93C31369AECC27F
FF8BFBCDD7FCAB048E8FBE34698D9A78E5D64042DCAFA44C7E2412F29E368B92
089A2B52387D5A186E8D16B9E41490F238F09A9E6EF0C69CD677CBB80568B74B
B35B8B64F6AB5507A06D717249FAC529C2411E3BF312733830E21BA08D593CB9
1095E82568B785D143353537A9D6666C41FC53F1AB0BAFD6B900DDC00EEB54B8
E35E44A41A2E0A8226817F617DA8ED1557A25CC2623DB3A3215452F6D1A1689A
196C4E2C8E6EDBD17DFEB1AA904C2B75C9A5F9333C888ECCA47B6EC3EA6DD59D
6043E5DE21513D84394B8773851A08EB874604E754853CF78AEFCD0742E7A3C2
C68747915A3E903A47EBC66DD8580904A27FB07FC26FD89FEAC611AA48A29406
FEEFC1400C3EE6688FE701BFB6C1B68AA04D7DDA88AB66B839223A604781A387
19A0A5BCA929A5F9EAE9491F50802E2D587F09C54367319FEE28A198F6EA014F
3A2B5DE4A048F703109E6FBA852F889293D9289C2B64712632755D5AA2828562
BABB3C7876928BC6DE3B0FB0D00A0575DF8FAC3D6C661525AD622DA8EC47879B
8E2DAFD1B04F39758F5BA49EBE0E123F97C71163B54ECC4DE9569D9BBB129828
373D97DE9FD08C7EF506F893BBDA2157F9E8444EA344FBA6761D48BE17EC9AB2
8D6C2918A03456EAEE11A66834F54B25A13AD3B992B058057222FF6E63BE713A
DC54ED7D99495B6648E254CCE1056317148B712A5BE446EE0AF7754301A31EA3
E4952C009841EF1EA67D47E833BAEC4F12F9891EE7D6AE399D7476B55B25578D
C84A0CE9C0CF20716B559A93F9637D6155332854FB0E404AF722EA95A13CFA3C
1B0E512FCEDF9141E7A6CFB5FB2A306D2EAB1FC7B2E1E97167CB15A194A34050
8B9BA86317104BF9A2FFAD7436BCB1289F652B94EB97C0BD781F49B66B6BDC50
272D5D3E381E12841C288E8331F6F6898E7E9653749DA30BF662DE1F36EB4D57
FB3EC720D877E4E17260032FF71CD16FA03DC203CC147E13DFF10057B85EF442
3EB61EAF864C74C136089BD3333E83F91E0057C02F7621498EE69B8A0F5F1D7D
32D698E2D3DB82187D412F0672C53966B886D86658563ECAFDC153C63945322D
8309BCB1E72213FD33E5F6BD08D553F05A941C7339B0675AD3361BD5F8F1254C
92EB844CF2196B68D50906C7700043207D04B35193C2F1C6A8A57C0595D91B1E
06C9FAC20BCC8BA72A86CB01851D492BA5F1171CBA0C2689AC5EB050F3EF8A8A
A6746C26054F2C95A4D4C5CF187FD19AF1EF7E26160174E0AADAA5D88A6470DA
2284F26285CF1109D015BB9EBC9E1470994F75AA3D4FFC55B5B04BBF8CA1A940
6BEEBF874BDCA9E8643A4F02C796C09968190959B02B5DD2F0ACCC5815B7F853
0639B82D764C7AB5C056062131CE476C25E8ED8341D28930F95CEABC55927435
250329D5BAA32758B6ED119B8F2B6C9D724DD16AFB6C8E032605E44E2F87B7A5
293EB539A8D3786BAEFDE0B78AF363945AF4368C78C73BDF9E4AB7EC2DD6610C
9FE8243FE873044D64C0075EE9A858460F62A39ADBA611E900F25C500CA0C6DA
B29061ADE991E18F330B2FB3DBB8F65C35A8F93FC6E016C90774E034B104C224
9AD3B38DC1D40641890C92030143324CBBE3043893B978B3D6CAEEEB3FA7B5D8
E280DBE3789156D30497A0BB70A6786CD5B041624D0D2C99D92F318FF2A735DF
CA6EC27CBD74F8FE2E1E26F75192240130913D315F2E785F27D4D6E3F33C1F53
1B0D8E15A3A5E77C10F04FBA8797EBA38ADFB813D5A57A5908F2347220F8152B
89D3FACA034B108B1C28EDFC157CC75774C836DFD2569D3FDBFDEE3FF0572969
86480FFDDAF487E72839A98B961862B5BA7A94ADBA674281F45AC3F6D9E56167
549F665E4D31C88D8F355B2BDFB72E2CCBD78E695164E9D5C7A1A0BCD7C1CBED
AE20C7461E08A9B3D7A3873EB7CD4DEBAABBE5306C4B6FDD0D5648CBE820C291
967E23E347869452091EFA188BDBED24B33D2C39F8D5DD0DAD811011CDE551EC
B3C8EE17EA56B73B3BE8621BB4E9551CB7AF9FB17AE13A1B040858EB3F562DAB
8C90A4CA2FB41F60997B611C74341F4CF2448AE7A9639AFB30DDB4CD377112B6
A69778E436BF6BF28359C8BE14E36FCBE7ADD967260EE32F5A36A6DB80CD5F7E
2BA02CB0AC3B285925B1FA72DD826E531335994A0147249B51D8BA4A14A3668E
42D8CF55DEF9B662B7CBA5C6A163928B0D59990DB01B991AE910B7EE5C291BF7
DC9E7B3BF3C990C4647D523D4B4CE85FC51C598C4D7F534186ED113B473F5181
72118746DBAB84409C3F36C3709A7CE100D56E15CCAD798107995E84F2C1984D
9BFE1E6A0F0DA32D2D950DD08E52493F0D102D2B79C6958E0CD7929CAF7E79D9
015D88E4B7CE8F110BC23D56D96331BD6A334ACD0AF460135BD489B276580952
B2095CB9128280C0F7936E447E35404F552A1EED06E460A7D474BAE8A3DD3C5A
F202736E8164A25701C5D8C7FAD2EA4EA8460D5FD44C7C7891CA83032D300422
6F595821FFB9A6695AC66585599E625E8F2A6682F36AFCFC89796D3780F8AC65
FE25D9CEE8CC26330CCB234E117C63F2E7A6348505175088F3008F403A43C4C4
FB7FDCF7ACA54EF639AF9066B7A19F444AF0A03112880ACAA9B934C8596919F9
5BCC0AA999D0DD64D511D70E2C83610148C2972E3DA425D899B33FC49D088044
7FEC13BC7E4886DD1B5414D79A2CC3CE9469452F0D6465ACB907612F1577F3B7
9975EAD0E030C7ECC6275FBFF5074A8C01BA552A4E9644F4CD156778CC97551D
49D967BDCC996FB4B4671C5D38F941957D0095DB98A21A4A2337F75DBC102F77
53D59024CDAFDF75FFC53B7BC6E7E2B4B4E07F31B9246ECA5FDF3F59AB39F605
E677CB9B03459BCDC70B866F9255F1947F1DEE18F550EFAE52939147644D1F34
DCEE3ECC2D8B5688DAFACCEA087B02C3C492D6AA9AF412E1717009CC716ECD20
7EBB5ABD0BD7905594AC495EFB3A197FB791D2EA1844466C7AE6AC45C92349EE
8E7E22E1F86EE08CDB89177500BE2E195C0455C7855A1DE9633FEC6187DCBF7C
FA557D0D2B211C90C524A5ECCDD2775528255DF733711978E963505C672156FC
42B85256FD82BCACB8A7CFFA81FF7B651F0A5B1299611DD5FCF1C54B65FCD1B2
99030D8FC1F041E04E084BBACB2346850493610A4B743F9E5315E62FA6AE316B
24B06E038B408FFD530A77037C21C6F504504FFFC65495552C39D8D471597F2C
F991F19B396B9E3DB6E524FAE7672F132E065AEB9A90883B225CAFCBF8F5E805
8827BD9280E2EDBD668611C956EF98C834F1FC5D6E72EF3937A5CCA5C73B43D3
5320D8E83666FFA6D2F498082F938B1AD434B98BD1099644D1D2D813AB436D7A
0BD03365F978804C0DE6BFB7F0B1E08E951E3AB0F5D0D8B111B3F0D345E5C2D0
E8F226DBF35FF157421C900BEB332B6444A1AC1E57C2ED5B558E6D3876304C46
10FA7CCCC2E344BAFC620A07A3EDA57191E2B5E55EAFABDBEF3BF5F985261417
57B7594EF34F11BA620C8A5E7C3C0E8060F5B31E43205097C3279D3B2BE557D9
FEAE06318204935DCBFFE8F2DB95A73BABD1DF64B9128DBFEAB77B1A9BE9E3D9
5C697BC30FD05995DBB5E08A32934AFBECBCB7C2B6B0B8E51798D8796220A91E
59D95B6273500E84CA30ECC8B0144C6A690418AD2DBC26E224BC084CAFA94C1F
EA20619D10CC7918CA7ABCE5E8CDB2F1A7DA053814FB07F7C8B4778CD3C3B969
DD821156FA355A5BA3939A2F9DDD18A15283132F5CD08137507A04B3DAC79B0A
8611701B27F723C1DDCC0994130C07B9AB08AA2463CAA589B9FB46E9488531D6
96EE43B8490F850F31A6C7BA419C735089D24644C3747B2A9FE77EB05684B535
4DAF3705C5D2F2F8894FDEA91FB4F9A90CCB5343FE623AF4D1602AFAF3347B27
755F5F997C0B5E176DCB6414033D22B6B1211F59083D4B252C3FBAB187E8A611
C898A5CCE7A4393B0DE9BCF1AEA386AAEF316F90750CDB58B5D14B1BC1B9A5D0
D40021B4E46E8ACD2DA44C5C513233F794D650405693B45BC9582F444AACED9B
7DC86701CCB874F753AA672126966A5B36E7F88FFEACBEB887E340FEB259C020
7CDCD62D36994B2F6F93AB77DAF483C9F83F4965A007125288493AF06F1BFB04
A74EBADB9FFEFB98C0AAF5E8D9712CEA02906AC6D494C5B1112538B0FD6A1008
8FAD35E517CD9EF0C32D9FE9D44CD2351AF96D5E04B43FFEE8E6D975BD53607E
D9701123CB216D756394C47814F8F6267E6DA4E74B0F79F414635286AA356E39
EA88EEBBCBC65EF9914F71876A8DD9E65D6075D7BA5EA7BACDFD4933160B9474
63CE41432957D1ECE2D1CABDF31A150FC490F466FE50E9D42EBA4CA94B8A3AC3
650F540287D85D79E98AE8CD85972E45837B94A6E3E9AA4596BDC44BAB9D104D
0353F3849528966C3D25A825491AB9C2E831223FE409E9AE3B2BE6C7C5BDB286
4428F81E9CE619E1EB8A14C45F693295286B0C5DBF7DABF583B8480CB3C7DE52
5B087434F6F115CB48B5BA0627783E583C4694CC3C4E1EBB8A72C6F786CBC961
5A90C256A1244689848232074098EE20817046D9935B59449E3AC26B484E8658
7BC7174B72C9491D58342422955365829CEE27DEB406A43BD07EF279DA515AB0
8813ACC932CF05F9AC21FA65428B0FC127B397E69CC77BEB3066E6EFE093F5CA
831B092A8345CA6B906C40383C9D965A936243EB86D4BBA1DF501EF406B6531C
4EF4E053E988F2B435128C03F4B6048745E748B9AC331D064603265C59D7660A
E92923D511A581AA6DB4800455244AE2C64578974D7EAD03A9B5A9B75A77774B
AAAC757F11C6E3F6511F7BF2D1AE034C078C720993E07FCF066A201E10E2CC74
2E7FEC5BF91BE6B00AE8868517DEB23457D7466303FD9B927A994A3FD311FECE
6C9777557C8B968FB29CD9EC77948C4B25D81FF69B8ABC9E6FC08A755A782334
5B1409780A2703C43A67F795D871B9E0ECBA5ADDB3FAD4D03E78CBB916BC6597
24D8B90528E970217078C036C0579569243EA7DDADA73569DACB78A3A9AED9AB
3D097C784AF9029B7C7081E9EE042A941C0C4A0A0099D28B4AE25A3C4F50C074
602E6957DAA5DD05BC094546C05C0F64098F084ED2AA0E7BA82AB8FB6E8BE71B
08DCB440A8EDA0150C104D3F92E9334DA4FD78EF2A31D639413858E8A8755AA9
33B5F94AFBA71286FB50DDB71E2B01035BB8C664190A77B1AC66D2B37551FD5C
E39864DDD86B4FA4C5C346005B6C59455BB492524A5B591E12E4D969F4826BE6
09764C153F264048F345AA5422721E3C4D4633FFDBD19997E6664FA552C87847
A51B01AB2008211E6F19E6965D542DEBA732630023D8C784C25BFE1B4485E468
8587BD74A4BB3E7E190B5268DD7B41DF8BA4B66C8672D6D23382F1DE12E1EBB5
0D86CF716C6853EC6B685EA054297D2AFCE30A99B4EB8522684946B50E2A1749
7A78978C8BC300F9DD9C7CA86F5631D01331235306174FBF394EE8FB3C38EB51
1CA34A70D9765D86EECFCA7707321CE445810758B18317FC4F8870EF5282663C
467048B8E586C38F2CD1395E99C2DC9904F22D372375AD6D546AA11CFE2FB28B
19424724A967200B12B85C9FDE28C6B85F67EFB71403BBA10E96FDA1DBEC1D4C
C0F15BD929AB522591E005AE22C0652878D2D7E8F326919C91F6D4CDCB076A6A
7E853CBFC1C16428A20A44023312F436ABDF8E4AF75FC87A6DB0C15641C0562A
964FEB2FCF16DFD2933D5F0B267E46F92001D4A4BC7219C5C078D74BEB2531EC
4F05831AC486F4451295B2FE8226C32A46C4D6081622819B3E8166A0641332EB
BEFC9219F3BCB9430533036E24B751230B16DB8617C1D1E47D68410000191092
1765CD19CAB251F6780A7E51BAF8666AD9E08A59D58B7B9B2502BF0E2748AFF2
597D5CB5687BB220DFCA5BC5B0B0599D9176C147FEA68FB7C0BE9D5BA69087F7
4E2251E57BAFE38068C406E4A68D9C4A11C5BEEEABC39F8ABC8D919328DFADA6
0358B780F662EF329202AC8D6D6D6ED5DF258F5558BA7DFD11D2A91CB33A614D
4D372D68B5C88F041BFEFB8C544B95E665CE31237DAE08D033E9B5DC1FEA3DC5
1C2B491DB2565E849C5A24A2044B63F68C5C086BEC650CB51EC5A83FBA37C834
5E4B742FFA6CFB2671B72D1515D2FB653AA5BC43019ECF756A12B65D7701BE2C
4234D167F6AD72DCFF67EF6962EAACF69B8CF649F70561F812006CAF67661088
AA87DB7867143309B0B200C8024D14BBA67CDC439FE437CDF38DD2902F7AB4D7
3904B41E31185E041D746B0513B4677ED06EBFC5FBFA8B23ADF7C18F4378CDA9
6C83F91098F87DD26806FA7B3F7CDC9054ABCD7D055516325EE734E0A6F140CD
250D44FDF9ACFDA7827CF57B11ABD9882EE8EEB3450E512A59FEE08651C2CDA8
5B5016D1E682118653B98B8BE65C9FDEEFFFF48EB0B001971783FA2247CB823D
35BD85A9C8F08FB5D156DDABDCE24B3B18E39502E1A6B75B77DAD2345D2BDC9F
16B19EBE5EB5BEA85C53A3436EEBE7C0B835978BD68BC218E8BF59E66C759069
5A08C0F872F5899124300235ACA5A97137C7F04D31774DB3FEB609EF9DF0BA4A
14FAB2AA065AB84DF138CA337DC0CF927403C0BAC22A984BBFC009C04587A649
712E0E90902B1B46B4ABA00FEF17B7CF790860BAE7DCBE604BDC7C9B9FB1C892
2F6D0B4CBD262B9B8E075F8783A453D539413A96CA26692713571CECF87291C2
85AF2CCE1E49D0B42C05128D92665C8B288D4D144DEF456D872BFA20C4F99040
5B78A9BBAEBA20DEEDBD038F2CB314A6CAEF80BAB4272E1298DFC1613D1F80CC
73CD95297684489CB349134C4E4CF98E1480FC70BB55EAA0C710CC0C60284B38
CC8E770C28F62539EC4C8FB1F9F9A5A2B44B6CB23C208B7D6A8904A21E59A688
8CB4CB82B900F3268C51B01DF46F61E3560589B11221C755636F58F02A9179A0
7B8446B3F1FC2F0B27BD25E633E76DD46F228985D2F47E55FAD5AB3711AED32F
5A752576B4C03335EC0F2733AD40799488A5DE984BD74F75F7AA2E7C949ED046
B90A4B00E183C91DAFCEB9AFC8832A3EEAD1712C87117B95CFF9F74805E22552
524FA587052E0B3B283F5AAAE1B46CB3FDF4D58FD60C422E7106E7BF4C797C97
0C9098BF8774B163F4D8AF1C505177ABAE51893E6FA768E42302BB42681D3F44
010C6E110A08ABAF131F55A4E2F11A0E6E222048FC4173752DC8BD168DD9F283
F18FFCF2742DC7B11B2CA2053C34410D2CB8B2E25D53DE31BCFBD31A08430503
D36B22616D8884C1C9A986CF9FB7C19784CFD850E3B122C66A64973F9C941DB8
8D067FFC73AE45F6E2435B0F85F61AB803C55BEBA6C6061EF9B111D798AFB5F6
AB76A3FAD144E93EDD208C1AFC09A0E74C831E7E2F1A39C8199406DA77FF9250
6FDFD6922E55FE74465FB4E47A5F3FAF88B963524C1983F212BFE4C76EE3E6B3
9DD747F266E224EA4E0E1DE563E118B245392A5B7813FB9BBE1B4B0DEAE52C2D
C8398CE73696DD84D7CC54E38D256221662EFFB00A235829716DCB6F04BDCE55
04CFFF27A3E28AEA08608141E45FD390569BB5E9A94C2CD9A530B3242B759E12
992BEDDA633FAC1556C1766FDD1BB5AAA3C30507F5202E2D98A20A4BB5F602CD
E7C593347991B20167C60BC8280EBF948973C0C4BD4DFE4704C09E8A81536AC6
6937BC5DEEC7D38EC5E1FBA8805700F60687F608BFA3CE0910681FD28B2477D5
8596036CC97284BDF3018D32EB7C8323A7EE1990820F590713D1CF061DD4809B
91D4824A275DDB796B8D8D992048C6614B71F9CBFC7FEF2ECFC647BAAA551F4A
DBCB8BF151D1ED983700AEA2B473248A231ECDB11EB151F71B46FC39F30D895C
1CC4C0DF7C070839855251257CC3E283B9BE04D55CA4D1C6EB6C9DE9F3F124B3
E715962805370D37B504A57A0981895B3C3C12B499D4273B2A514CE654AD5C1A
83CFF7F50B027BCB1E824869F9E6D93E33D7E413D53A64294ECD90CCB2903369
1805BFDAE3E312988465FE4EFC7C71ACAF4569E5CBDA746960532CBB0FE1DA79
073B1E7D61C81BE6EF09311FAE1D7D0E4A242ADDFB1E112B1AB514E62EAC91AA
8A3B135EA01C6B11C78D852C224DAF131E2B759CED337E99CB7ECD7AE1B99440
FA60EAA4D41549B845ADDD21AF2D1D0165F4265B8FA41FDB6DA2F7F703F72D36
6D98D023701F07497F1C9A0211C9A3FDB60FB327FEF753E880DFBA5E20BA386D
8F4E8EBA4CDBD9F6E280DE3026977D02B89947937604DEB2AA1CD43AAC3F85AA
79851BF8D00975A9993EE887F931A5B3BE6F72632495282BA14318A0B9E8ACCD
557429F009660934B9EE25F3D269FD561F187A26529EDF4F46F859FEA176B15C
F59D8844CA474BC3EADAB52302D9A4D8EDD79EEFA76B1BAF1EB15B2CF2D8356C
FEC697B6A8133493D425DCDD2254D733C5BCF2DB4BFB24493327A87A7BCC1A14
AE2D9BC3E1028304375F9CBE8F0B81CD0F92F9F04F929372CC3B9FA7DE7C3617
97427F66D9EDCE4FD9104828FD7D15E9C29E803ECFF304790ED245516265368C
5202143A1FD3042712D3953FBA6686138521B6E91E329E0C6B8720B45B347EEF
B9AD200AE72178E3015A0E16A8E08A79CCEE332E5E1BB553AF076DE91A0E2E33
930BB70A0766C590D3CC26663734ED2A2E65D279E2A5A912F2CD547E64DAC34F
A414CB71333626590DFB556FCD30A15081ACCA9DB661143718D7E6FC5D94CC59
031481182358116386DAEE176CFB96E9C182361D881E1FD9B01ADDCCCCBCFE57
1354C9C8521B80316167A4E33C60627894A1144EFA0745FAABDE1A470B126DE8
D66AF3564DA6F81404F7F1E4E289E9F504335DD3FB0D46D78CA9187CF691F4D0
BE6D21708320DBEEB0279E0574232F824FDA0C8B2C0E9A37D3520DF2BEDC3186
7AFAFC70E04D24123DF8A63D1F7FDF2AE0AF5576BABBE3D0406DA81D071515BC
E522E581F2E6E9D438EBCB539D1C4DC8527B5ECEB1D7FAFB1C1127F766BD71FD
5A3C7502804C585D73DF7B9EAEA5FE9BE3646896F072E16CE0447EB552E19DB8
F3F197366F8092FDB2BB464D8B89A143FEE82C8A087D207CAE993DEE1F6FB9DA
48D911D39F7A65D8350A66ADDA205ECA03021506BE079EFB8005277A41226E6E
2F98DB75C031E49B63CB323F1DCFCF7FE70190A7782098041A8FB446881ED3DE
9C45CD7FCDB887472C6F3065E0487A256B63DD93122A555366D9E11A82394CB1
1CD92979AE59959DB2D4137F23ECA07E8D523928A3111BB839908CB2587E198A
47266BBF003B94AF4E1B32973E6B6A9CF324722E174D4CAAD889FF0925211CC9
F1FE1ACE8E6E362B0FD20598DC1945132E4D2F58EC2709F092D94AE0BEE06E5C
A93196DCF6137892892F5026975BB5E9278228B54F35728C1F3478629719C9A8
F25B1C10926739E56B486133EE88FE9F7BE3230CC50566B5358527952A26594C
73F1D21B063D1734FC007F6F5A805058CE45399D4C8CB3E462CB9913E1AADEE0
64A5583114AB03A9B5A92C2D0CDCEEC1F63751D8F29D73A8264FF63B93C23843
A49D04122647DA67607E76EB8B7F892D92EA116CA0A18F3DFB67C643EA2B06CD
8411CC80E68A64717FBAB635AC8A953CB42E7046FBC9D7BCD0370006DBBDE5A5
49FF1F7EA277E4541EE14A03ABF71E5D0672B98B2AECCB8FD59E5ADEE86F4720
B6FBE7BA942607DA580C398AE736702F2B5E843AA44D6DA2107E790B3537C98B
854E78A8C8E96F0F14FC046AD0959A406310B4DF8C5FB4C8510921C0EAE4055B
BF0632902C2525D78D3D8642077137F38F62D1D4251036FBDF2A8C78D12B0BF5
062203129A705D198A72DA4D6270D7A5E55AAF68ED3B1B27E28571E70D26232D
C74ADCF8E334AFB96FF3E4AB1158377CC57C2D98386CA60C7F106724030ED540
40FAE1E5DBBA2B7727AB6E17F782D1F75467931F712879B5B18CB0E79176BA12
57F5E6755FBE8B6A9CE08C2B7ABAD4B4D3653637F40AD56F24DEEFE6E4BF7DE2
453F6E8730D89D06C5D545B107139214ECCF87DF532250ADAD94EECC94D46195
491B01D9519ACEEAE4C3853186A5BF333E9CE295DACFF010D723071AA0AA8525
D04AA1FA6E6A9919AE3BDBD94CE5E19D023F1380BFB2C9BFA7D4975D0EF1341F
743DD2924FAE3AEB8B3E88CDBFED04A181D15B90D24C8D87ED8E905C1FCDB180
204DFFBFAD9CF565453048598C870B26D40E95DEC099E1AF336C849F79838BA2
0270BF8251F3658B8480D36255A08AE61A2C36D635B39985023D360EE384FB78
A6B83B525A55771C6975C25F2F3ACD17302ECF5554DC5CED136C7656041B3A09
366368DEB6506281BDAF9DDA5171BEB01846936FBFE8FA5B9FA0E59D58A6CF84
9A127C5D3D6E1BD4E32C64ADE1B0623BF2D5028E31277BB731943E8BE85631A7
718CDA5D37D1AD2380E4AD1E0B2B4CE91B6B5A70C6A55B72EDCEC6041327B7C0
66EF9FAF9352EDC4FD6015DF9423485D6616C7545BE11302901B46C7998AE094
577AAA0B7C9119E2C87075987C287DC61B02D45371077BD4FE3A0CAFD3916F5B
F9DEF9A6E4659944DDD26C654A00BAA765174CD543A0CB8B7F7A2C02821740F7
1E1D1EAF3AF6BC00A344AFB4ADC033E07359576F4F9A9BAA0FFDFB35EAA366B2
5E1047B243885CC65D017F58CF9C7068E5FAC88F3BD30A4ECC97A7DA64D41737
7F5D8F65822F5B1A352F70ABB28ADBA5629B7E59E41C0ECF273931B9746B2255
CCEBFC64338102AF91B44605DA79D3D3BCE1724FA6E837032EF602E30062D056
BA52BD8EB6BF96F49B6BA6F38B2273FD0ABB6746949C746FC8B2DCC87BE5DF68
5C5070C7697C098DD604DEA4CE703263D32415A583484C744E13F84B9D6E780E
0DD571AB49818C01F75EF1B4C552381B848C0DEE92575DDFDC5E1DDDD08573DB
427987727ED33DCD63D325D9C7CC18283C05DC382BC9F04A7E2E44DB8CA32ABF
7AFE939ADB754AE8FBBA35CD73B6A90D48A0761C6DF7EBDE72D88C7B35DD87AE
C2450D8AF27700D93588EF4C63B17740AE7093D6AC5A979B9DB93627C730A247
6E2DF44497026AB4FB6E5AD6AB6B653558A00CBCFF6BE167A355C2DE8A7EAAFE
575030F6DC7B9E86D7CD1E040F16C841D32CE83EFA35CAE7C7AF99624F0F504E
A70F62D3BD833FA15EDF46B913CC4CD61043EC6BEEF78807CB9F27FB4F6C33C6
8C2F0F90B7CE69E6F4430F50AE26BB418B241F7D13133EF1474031DC674F9A10
B76E2AB41ADFBEE5F9D69420C836419F748CF82D24295827198890C2DD15E981
46FC9B7F3A2400EC11DAB8014F07AFC07F733C26D2D5BF1FC9D3C46B25FBF82E
0FCBEEEB7C85034C9EFA77AFCB2F921C5F16A4DE8FEA3D5B1D0ACF11C4AB7502
2BD5A332E5C974E8ECEA7DD51ECD9E70440CEFA6FCDBDAFCF41211BB23DC7D3E
28BEB5A39B786A772F315484039EC0283109CDED7A38246F90BDDCBF9A906CD9
4C3C82CA321717E9D0E1C23CBE369CBCD9EB5F28D74607148B13DC253F13B842
592A07634F32CF9904F0B335C5DD1442EBB47636A3E90F210FF929AB6FF19DA6
5A2DE0BA21269D548C1891829829C7A3FCA839CCBE1A3D1675FE2408C1993E02
F63D2AAAA53D8380EE0B3C7DE57905DED8FC568845FBFFEFD52810AC7ED11D4A
00661EACD2EA97350AC44B157AE28930E61198664B3F4397A7935739A9C0ACDE
9D6E219EAC83F693CFCE4C5F7E5F707497AE826A9FF20E277A19E0377736842B
8BDF8613D47C0631BB20600720717640F28E37EBF31B66501588F04D13738C8A
F1811742D51848BDD479F1020558B3122B674F2E776FFED0A669ED114FE77501
A15F3A513CC8B66D38F3D1F0688157BBC49D55388484FBAC98CDD9A07E5BBA1A
0A1BA177E69C9CE99C73D78D88394EB91ECF1BF57A4EDAEAAB23F6CD82E5D273
41A415FA8315F6F327721466305FBA02387A32269A4A08D8231D840463925E53
BDD503065FA9FA3B1E066F1BEE47881B49B649E2CEB3E31B4E6C7BA7E19E1E7B
54EBFB8A8CADFB5DB470E46679B3E630716942634E5446E48361EBFFAE890926
8D7C41C99341C831916CD15E0FF8F5841B6ED0F2FF0D22B47D44A9DB63A7EE28
F056A54543D704DCE8DD5361363335D58C34DFC4034EDE39A2BCB1A62C76E4C8
F47709EC225A662785817A1F0A31CA7B4AFCCCF26A10DFE738B5A6B3D0EF0C2F
2ACAB2F91A5808B4AC3EE843FBD8BF24B333C6509295949B64CCC40932286FF2
47A60F2B3054255D11362EC7F42B00D675A06463C821DA3DF833B3A449E0DAD7
622680C672366290B8DB84EE9326BA97929F2B7353A8661F6F5E366CDAEBCDFC
39645D5E2F9ED528AACFF0CDF18B8EF48ADB665576E1115364DCA843DDA68D58
BD2338E47B1D3E3621BD6BAA7B20144704BF8596B08C5E570F01DDF3901E0239
86111BD95B1FA0409B96B1C798026FEE28F66FF5E4D4149D451807C5630F529B
DFF932FE4EE2EAC1C8D4FA8F9D85BCA6316C2A94B3230A58664C98C0460D8723
5DA0D6116C5F16DE4DEC64803E6AD19A3F4EF825C6C23D9638224B6F8567A01F
4338944E8546BCF9FA6B894A30F67CA0785C02C04E1CD524EB7A9193AA381C28
4B7298D98BE844A1D74DBB34942A9F663B698B75A7C6026D411588A9B9BAFE9D
915CFFCCA75F56455AB45B2CDF5960F39BBC0C80E1D0F788B5D4B534E5F4EE39
70B61E0AE9C72AC34357C9F2ACE847C1D28FECAC8C5765B9E2A228097C13D067
72F66352FD2B0BC8EBA8567C08704DB5E40D795585B38CD97D08D4F24BAA4113
2F8E78E65B0477910D632BC58A610363AA33FF15EB3F246C34944FE519B7B3D2
C18234551CD6ACE30E0F57DC264EC20C8E803D50E2EAEAD471B095E85E29D3B6
158799098F3F18BD100350581AC8B66996A88E6C8D8FD718121D8CA45AB585A6
BE41AA5F702274D57EE44370D58B06B5247C6A85CADCABC97828400C7220EBE9
9E9FCFF71D7EA9E547A70A2E130469A6AAD7E0A752FCF97734D946882FE0EEDB
81EB5BC24A53E8CCB75109110F68B5E8766923BF94F705698257BBE074AC817D
D81CB55309D02A9EA7972B737A3DFAE57231457E9E33945C96B122819887125C
6E6F6A5A4DE2554ADE8ED68F59B42E53A45D42E20B5845B9AB8EA59DA775D5DB
9897E6CA75D52BD20D27973F6CD5484DD84F9537B4B7BE2275F084CE1C9EC5CE
54E592B52BEAF3C90B1943BBF47E453E17CC4E1ED9ED14850CE5D19C8F8966D7
30F94907524674C159E849B2099F8249DAF0D29F4EB81FCF3ADCF3153B88447D
9936AE02EAB2E8E3A793A7D6CD89D2C9E4F8C079CCDD2C326EFCBAEA3F6A4A4A
706D82A7C17E16E128338B21AA1C5845A6C145243C41C860DEA18CF13FEF05B5
4F86EAC18EAC8DA9066105FFB56B261E9F153112D69D8DB50D581608EFCEB01C
C7BE171E769E15BF577AFAC03F6AFBE461226F44CFB06F0E8BB9EBB26158529D
BC149265E07CDAD9E458540A606342BF27F7F36FC0EC9792637FAA693FBC50C9
07040B39F501D87FD836E4FDE5A95EC85DA58AB5D382A7D8413E7ED290487DD9
B3515E82683E0A58F3E45AFF64B7773754E7C4B22C127FFC8CB0D894962A7005
1FD97578B722BF31A62D55897DD09CB54A77BDA0B0103E27846ABF5B3C461DA4
C846093FD20F69B029295838F3E6C620A12F4737B611293D09B4B3FD077F931E
FDF82134A21E316EC7453B64B4C1535187BC5D04952B13C2496E4FECFF99A662
12F7C4E81CDB44C06BCC36CB8BDA771077F3817BCEB92E99152EEAB554FF7210
A17786673C9DC8680A0B737E84D413BE2E13E28F5E7481D22E93677AC08C325F
69992AB5F04D594B6000FBBDA180B8CA7DA36866876AEC7FB665A737FE892944
7643B84D751896F04546BBB2541F0ECB30843DCD0B94FBF9034A5AC96B879B75
A31D4832128351C6671B33A74E348B4CE8E290A16600E33F0FE0E7D7F7281D79
E75AE3832119EB2B2E42D92729AB9AC3C695947CBC5A1F99AF2046A83B0D9DD1
2517CD9C30A8EF7769DAD127D3AB024A79509442E8835A42DFEAC73DFA3D5DB8
DB2A0A8BB4B2D16BB4477EF6D0CF04E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /trianglerightsld put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE0B8C242F6EA75
5CA2D45C688BEE3FE55AE3ACF0B696E444C8FF31EB68E7868ECB1E8069FE1F61
74267389141060BB9E7F70CC4ACE145589916E01771975AB24DFF6BC7A2AEE55
DAD15F08252EDFD92DBF9D82CD081ACF2464284F5D54A83BF518CDD4370AFF9D
077D74D8C7DCD2F7ADE2465D8DFA46EAE6ABE863D7AFBDB909A0B9A944A74D14
89DFD974588112D4CB630389A4F601F2870E6C6A01AF6C1A517F86D2C6190AFE
9B31BC892F0355E991C525AE6E8CCDE226F4902BF46D68C5DAFA90C418428EEA
7FE8502D8A61B50F46B5B91224C722E7211327F13F8133ADCE7C195BF3B07AA2
B353A44EA785E273ED52156C072485C5377874A00CE95E8CA6BF14A5D39DE3A7
ABDE2A6F2F91C5C4EAFABA29E96C569BACF9290478CFDD203BA47E66E3B89327
F2C88A313272183BFDF418D3C46EE0B1269CC8781E2CADC336A4AFAC6A910A6B
158DC42E97769D57AB2B2D70122634D5A247EE4D8672339B1D90113137D4F9B8
7901F18B38FBFF69D3FCB65A973610C405074CE3DE045C9E582DF0DC455AD6DD
65F47D33F454316DDAC452AE79C0C7596E61997B1C1F3C19B4A0FD935426EBB7
BC46BEFAE400803D67E797DBBFD885DC2D0892F936D6DF2322FBF59875757C36
37C45159BF0E1C332C69FDADB27871E711B7F00F668A0240AC9A7D179E386226
60DBAB749090871FD2316356C3CF06A91C46716827503C93150922D97E5DA774
EBD006978CBDECF5B347CCE0D73E5DEF603D68C3984D89641875C81B274C8608
360CB80F0E85619073C13E213CE2CD9638D809084927E0DA3DB454B1BED8CD3E
C75326188E2EE4CF408214A4AA87D2D24B95D35C381AA7D2DDD0EC02B2B7658D
F687C9A775D9EA3C72674A561939FD25EDEF04A2B4D3084E86BE8B45B2158D28
4F2D0E9F020D3FC6A0A62B66FF1976403B8C17B6DB619D0DF87CFC1DD1D68FAF
F1AF62A48B92A023EC0FDA8B73C48F068DC7B6146A0FF73318128ABBF13F33FF
7DCD3EBB6BD8CD9B34D5EE86C314F6EECF2F28EB74D60E31F7C6E25794CEB48A
306E9448AD569D93E0D16ACAA34C7B5AC9D031D95FA94F8161EBF018376B3906
F9886DC5470C9098E46006A8E968E2782FED1DFAA90D199868A39608735374B9
4A52913F25E79B7CE6E908496D6A7432C7F861BF53AF14B0B9CB5C10D56BC9F8
FC755012CF3167FBDC29D062680850691795079BDB9FBFF9BB3BF66D7D3031E3
1CC2B067F7F7DB21753AF1E53B757FA94068730FECEDE5088075E62D584B0DE3
E508B5599C789E817C016B307FC0DF2F4C8424F29E00856DBF740717B386EAC9
0E340AA4F24116CEB01623A4C092FCB1E6BBFFAC38DAEBDD05100D732CDB2772
E18723
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B3552F3E5FB02EC27C94DEC59320A85D8638
839E0B4A706FEE1C919E60BD887421EBA20B332314919A7DCE09D6BC9AFE8A87
AABC30C4C8E71760B8D8BFF54A92D01D56633B98C875EAE44A8E1A57FA8C4B4A
78D6DAEF11DA248A1939C377F5801511B68EC34FE531B3D50F27D872796BC5B1
A6EE6CC8E4E57B32B8C2F4F1BA4FFBBF8252F09AECDAC3A7B0BF0FB64D740B7B
50FF95786E4E2F3D63943BD9F084F1B2648E88B4B9D847024797DC8F8377930E
B0B645734348FF709A3777D21C0CC75DEF2CAA2F135AE7D0622B4A37A8442609
E5549935182284C73E5D8B037CD15B4F200BDCE328E922DFF65B3BBD5EA5D5C9
45E91A7EA9602A98D668B4CC098C8A1B48EB84088D6D105A449978AF68129DB8
FC82C4FEAF417F70F9612E9BCF0CB8912007BB7FE129E4490D4ABDE908FA203E
80D4CED4A9F446BEBD55BC05625808D316D8C6B88BCA1474166B68522597BF1C
C26EF2B5A772F241E93F83D22E0381B50FA89510078C8BC5DFD9C4796FA7438A
3546F055C70A70F9AA1E54B4AEA99E028A18F036FE6D2229D884B8D528BEC858
25505E9784F7B00BA4248BEEF3BE171BCB56C11FE175B04CB19D55ECE1206263
3A852FDB440DB2B3DE1E5987FD160563C890C123FD26625448C8BCE2D50CC8BE
53A55ACBE4C407C9AFB5722FBDC9D8724AB76515C00BAB56C7CD5A036611019A
BC3A8D7B194D57ED18B46C0401F2C0271ACF806D9EC45F0DF90C88316FCB48AF
4855E6C6A8B4F4A467C6325B8C959840CBA497F2ED5429AE3612094F48348C6A
AEFD523313A4A6CE23AA0B10EF946198A57AC0CEA9F4E532E7D09BB99B35D788
713FD948D2C386A57414BFE2C4B396D944701CB64FE3AE0F463BC0B531C04E30
66D63D9DC838585209BA92E6B7E141D48C89B347E0E5AE6E4E4185EB0CEBD749
40DD8CE71DCF6FEC89674E0685EA0AFF47C8FA4E67D56C072B661741C175B7E9
13DFE1E26D2326450221094902AE184027AD2C8D0D728A0F1102E217DCC45A85
BD249CEF2A2E58B698E6125884996A4F98DF10A379009014AF83486A34CEE46E
1FACA78CD544CAD889A95D91BED4A57FD950428EE23296F33C16CD56BB1BC8ED
72650F3A29B593BFCE9A09E2D823B3CBB368A4EE87E2A0F4B825B6775B4C626C
81862C5EB68AA7BF6988CBC4C26849ABEC190E9200584982ABB26EE6C5A0A6BA
5D72238FBA0F27765983310A3FD897A0EECED01073F0678CCD6B4990D718912B
C8E174BE6CBBE623F0524D9781A6058D0A7997CF3EA85B62067A1B787A8C1BFA
0FE99727FD5EB139A144D2BB487629A7A03902CB3A9C34234DE31E455E453418
A2CE1E130C5FC4B624A13D7DA02F61D82949491D5C9B1739D4F847FFCB0F1D6F
79DABEF5B317DABB613E8759D241C6709E48702BB9EB165921F2A9CF8CC1958D
12016161C1CCC9C3F35DB98E8D905484B4295F324F6903A9678E848283871921
7B917E9C22F58E599ED7180EFB0546A88D33651D791F5D8483ADAF674D869DF6
ED4976562546FC7811868FCB3D3D4009CDF5B022349B7B42BA4523B3F92BAC1F
56B89E2DDAE1A763A29FA1721BC7ED828C886FF7088CB8AECF44C06992639530
AADBA02AFBCA7392BD38AF74D0F58CB0F7EC02D7FE1DE620C06C95DB63F32AC2
6D3669D220535E95709D41CB0DADC64CDCDE73E69085B97D74A2910A1469478F
3B73CD51CF95D1148F3B76E75EA9A3FEBA69AC58A122216BAB65A1452E92625E
32FDAAE4E01889E245B444E6179C7DC60FDC37C7290801C9804EA23006322118
0D51A5F3948C0FE4561A01DBDE31F125CA9A8E1A500DF96D8874D0C96A1AB6BB
9FF21907BC265A0B6C7E6DD0E2252D701B1758A3230D24E02700315EA3C1F38F
F0A9D79FE440B263D9A537EE469EFC46FCBC316B6081CBD6A0D3B3F8B82FB4F3
A926EF4F9CDE56B92C5C6124A08505562835AF0135C18A59E1E7292DF4A2E45E
BF04F830B91AEFD201DD58A2809F9A06AA88B5517BEB6E62E6BEA486C924239F
E29DC595FA5949011D11B02A5EBCC56321A3F4EA849BDA7BA6985010EA9A9B3B
8E3ABF532E4D424C9ED5B009417D88BEEB9D853AFFFC7069A31D428F4288FA70
780EAB85BE54318B4D35041CBA46A6E9AD5116C6F6EFC39BB97F9196B7C5CA83
BABE929C82551596CDF2D121CCB79D8A84BFAB50FEB869CF59ADFB52B6402492
7ED395164D16CDCFF7998C68B9A8D684827B3A38F1DBC1A7F6A92296CB0504F9
11A13CAB2768A8A54DD7B9F4F827BDAF4F82FC50FE4B63175B48D7CE22ABE468
ECD5ADDBAB21243726B2ECBECB6D32A4568B8ACFDE2ED410DEC7CABD82BD7D0B
25F3FFEB3D89021D601510FE87012D7BDF64D8DA7A2EC7ED8BE1E8CD42E2C534
74539DF9CCBAA6F264F62B5267D45950A83A513556D0536B7C6632BEFE3CC967
D7B189F7AB2AB23D244FDBDF6CF368FE636659418465126559BFF85288F1BED9
0F03DC4316C0D7B9FAE60A8D0E73945F0F2F23098ECF6E9584EBB807B727D52F
A641D37EDCD4D1F25069CE700CBA1B57B63C9B02DC10AE349DA233671F2CD808
1E7131C6315FAD7DD3DE69F9C329991D504F1C61ABF724A11B269B71E48E06FC
00C270A960ABAC89732C3D19BE203991E75999EFF2EDB8E93FE88134ACD929A4
23C602F3939F06D55BE39D81669852E0F1665FF865B085F75849AF4F75E79FC0
4D38BC3053FB2909D78D3EED44A41A2D1BCC4A171D1A99784E25FEDD5E4523F7
BEC6CC47537DCE50EF7AA734A9EE0B57457FBA3A994ADDC897019D5415B6221A
6EC67BCA371876A233E98C5F586AD7BC3D5E11A9699B57C52F9F0A99E6FC240E
EC32B04D6671DD3509150953C5F3853F7EBF4267C4E7C455D1A693739F8B1F1B
791362950FB5EC3B545AAD90A5489FF44AE136B91AC27CA2733DC0D7D2F57C8A
C18EFA4B42EE17348D9AB21538A80D041C8ADED0D1EFE4CE900685C6F00E5F2D
DD6ADBB49055C0255C80F2EFB57E5179223D5752053E15EEE2D7BD23AB67AB25
F5DF6E39CB826F40A532E5234E062CA72EBBBFFD0D8BE7A87E4B49DC4C660FC9
64A7A336C2C81C876EDAD0E4F28DB4F244C18283FEB7D5BF235B7341C1EEE2C5
A561AE18E3C94FE80AA3C3312EEBC42737266478E3AADE66D6004F644D58E1FD
1CF3F754033E02EAAFB0BD14D7847752983EB41C9042B177DD206CB016349028
FE09982D60873FD564A0A6C249802208755C304D8CFE80CE7653EB67F170545B
B044AA374DB22324DDFA5557050A0EA3D15589CE492D884AAC484FD9D233A32A
AF4E2E2BF185991831EE2746602C2B3F414A410C4681720D2B4C8B69A24AF6DF
DD09331CF8D251C17B5A35D800B1D82AE8F1593DCE3948596DBC96D8A864149D
0393409CDCDAD46657AC42158501CD700D2BD75E58BAAC0D7009159F11619797
179606D13A310C9C3AABBA520C97CC78FE966DD98834FDDBC86211234ECC210A
C5B93602FC07B3C64FBF1B8D884EC24C764688584AF52626B63211563599F227
2335118072A699C02C39AA224F70B1DD6FADF64F59EA6AB810A0895DF7537FA4
1579653258127642A4A75CF7971F40C58A07C4DA1D893A388E151F4775243A89
B586869DBFF498440A2549551CE7104C0ED79504A4735F6A76ECA4E0C25FE204
3211BA3C4CFF36C3B46D66103F30697B71E52E4ACA345BB4019557A4A5B85148
5A00E72B55B02ABEE02433DF7CCBF8D73B130877EC56945CFB5CF07520CFA413
E0CAFDEFE5BF321C1E257E69F6A4973D52B28D6CA91F4E34AF89701BFFFD0D71
802D66FACD7C4467BA2CDC74A243E66CBA82B13145280DD16453A9B0E9932908
C980605ABCF65FCD5CD7BBD327DE26A72C3682E51225906CEA91962D403F4144
B09F4BD94453B206FFA44A79CEC1AF2D877DA42DF456FBE16F9012B5EEA9ADF4
EBAB73776E71327F94C3A4833F213D6E9CEF9D7BE123506B5AF8EE4F74FACB29
10AE98FA9E1A7EE6F543B018D90809BA7F5754200442952A70D55A1C4482A670
D2E74462663FC3CBCD6EA694886B0FF69D2C2263C6E280BF9DD8C88D0CB25617
D32763A7E3CF33F042DCB7834CB170C0817CD43B15060C5535369D64F21405F9
84C1F84CE7B9399E47B2230986A5E1664AEB24C9628059BB8FC702653F17CE3D
3363BEA22381ABB9547F93081B54206E1DFFF295901F3548B3D449E967041D85
407069C894D53C87D1C2E1D40383668B87A9E3B70FD32F6B8CC03D63132E38B8
5D1D7CCAB29842DE3EF594A937C28F18CFBF2656E27318E8C26D59598F772567
CA981BA7890B3A112325AD6DC1446B38B5397E039896578D55E54E29F366B347
AE51B972A71EB1A3F2F20A1793E247E29CD985120D97E46E70E7AE9B78B7A7FF
4A5480EAB33FDF27FEB9FB28B1B957CC2682412C5D479623ACC0C022966CF2DF
010981198FE4EA6F0ECF699EE828AEFE91DC8988E43EA7817D97D64BD7641EF2
CDC4E3CFC6D20C301CA08BC250CFF2159D067F9895AF0BF7CCD4D9AB62FE26D2
A5AFF34D43D74DBB07156ABEAABD8BC8401F932B370F5812896EE2F7D2B38AB0
0EF2B90F91C15752CC7F956EC0595DEAD924A5FD9E51825F6674677D36B9D5A8
64844E01E822BF2B59FC8B724D77D84042B5D6F84330EE9F92F76660471ECBE9
E1B82208B3A4017AB79CD0F399569FDA071ADF2BEF868FB889F522336F6836A6
88B67A19036F9C9A57A54C9BF7828C307A48C88FF651A5008A5CA90923D36B31
583A21AE8FC30F9DBD2DBA14C80E8024882B7A0C7218B75C8D5CA7FC59CA887C
B644B4E1CA765DCFB91E4FDCA39F0C0717AFF70802A79249F6745F624347E745
919D82911616976B6DB6CB4A316825AD46595DA14C0C962E155BA730CEA0DAFC
5178F2888EB594692572B00ECABDF9F07EE63D152716480C098488F845ED5A37
13C8E093F6BBB109A37DBFF50EC66AE56D632523256F5C7862F878AB208A1309
F39157CEDA3CAC91E253D6C18C83F96AE24D32E9C76E6B5908778F0097DEE9BD
48F60AC3D531258FCCD90B2BDC8C064B62BAF5C7D613ADE3B82F35648BA4DFA1
E72BBFC8B7D57D8AEB1910DE1A7FF97781A567928C0D8F060D0753B55039C8E5
E0480D7C3C6141561360B0D964DE6EFE447E2C60D18DB323A364EE6073588091
58C95878C7F3460278A31B167D76541FC9A7D1549170A49CD85CAAC7B0171DDD
DE3694101DD6173595FB81004CB4D8D9034DC195A3BD2590F30E2EE698AEB294
668C32DDDFC1FCFABAEB1168B09FCB964C88A29A856CF07BF6629B4F9126783B
A7CDA975537100C4D818428F9B251E1060624550752335F26D57DAF14A4FAE61
72B02F088194A4AB5BCD2B9C40A7F862A4DED7EEF9E4C7FD903BACAC6D840F41
774DF2FB9302F24E554BFA7E7096DA3DB81904C21E37A33EF65C051B9957527A
61B3E01707BDDA373225B97D1E00D5A30B240DE3246DFCBBD6E4423BCCD627A6
BB214FB5B3628AF81B378425150043256B0D48BF9AD8987588EF1671A0AF8C1B
BAABA6422E6D5588B87953B6C0E4DB2807334C33C21DA249C5A3DC7F104FEF09
2A1E444FCCE7159DBFF15CBEC46ED49E6754600AAC5AFBEAD09C442C32110AF4
1CA7734E9083DBE7DA9B89EAA128BC1F16839BC978A24F05F37DE042AA827FE2
65454909CB0B54435A71881175775B62B14F9C5631B8C4A7544CED7369AB75E3
EEDACE25083D46A59ACBF3DA9DF4C6462590A1BE6742EB71BC3BFA8E8118AA5A
EEFB859C250FCF197EEF370E0045337EA05779AC00EA3140E7580643C2E431EE
3F6186CAFA0D8EB2C0769424462BC81C9874C4C4441015E934A6BD6E4674AA5D
5B6200676062192D587A2826DDF7B854C4BF36A38395CB9256BFC60CDE1A2258
F05C884A71235FF03FFAFC904785C5E7E9901520D089C7A0A0FD447F078A7CCB
2666D2C34D36A48FC7ADE554AADF025BD411AA86B3B021BB9DA20296DF018D29
1A3F8D450960AE552CDD5117413879906CA2A565C3668E52D1DDF745444061F1
2E523CAF67B7E659E90C6F40D24030DB447C926E20390C019FB40BF0DBD30AB2
7F4EF4B993863C95186206F777B710E508ABD346B9B053358A1A0979A18FAA96
F366CF4A67747953E10394C99AAC53A59807A4E5B3CC3227774CC20D0D17A9CF
82675F53FCE45F11C6189F2E1FF5FC228787DE2FD909F8CEB3598648D332020D
2A20505014FF9321EF9D28855CE770EF99B1C95A2953060686ECEAAAA295F163
8D8B6A3D19CCC27B49CED9C7936E4B0BBDAA40AF95255828E0959D3CADDF1CF7
67595670D82A53785D4F2D166E74F7345DE39A3F2BE334137EED89E4B74433BD
A643254305E3C2A2B244C1DDA9A97931DDA99054EBD75A24F253AE76ED68CE89
54EAA105F828A5195148905B4367C7088C98977DF8A8B4A09FC6E8C5B6B6548A
AB204E6AD3AADA6F16F6FA29859AB44414033F41C08474CF2C7FBF0C76C8A9A4
4C9B04567A2906CA1B906F6787EF5896E874493AF6DEBC59D45D5E8B4C94449A
6A343214089692FA3C3BA89475C167B1967BDD24E75FD7E3659796100DB0081D
CEE0653FBE3B7844D5AD6858642FECD50ABAE2D7D4A37BE7CB399F861B8B30AD
158AE3AC06368D48704CC13132E385576C4317246BAD6E8C7A2D804E63DBFD96
35B169F61B6590665633A3AA245AC6A59F2EFC35C2085570D6DB57BCB8D34DBC
F69EE93965E62AA6ECF5F9296A1CAC0DE332309802A732F2AFC0053FB78EE140
9794F60154B68FB8FC3563D88AEDC991EC24B2BCA0BE5B901641AC2DBD01A2E9
324D5E6F3D503F3C9D96583CC6339083ED6A04DA8496B59464C4D558F15D8B8F
6594FDBD70889798B2DACF65736BB1CF73C5380BD9A9183809B0D085EA1DD7A7
48FBDF0AB5250B8DC675A1D6F6DCA47D0C744818D2364CC6A1CD14814E47DEF8
89FFF8808BBE8637B8595F81CF96C312C78344FC510983786176932130618976
C4623BA102424E78F1D79A5E859413A562E1B4B5336865934B33D15E0AED5407
4004E0F18C9EE05968E23C6402606AD1695BE2B2B189664518E03D79C4F84415
99E62D4FCAB033DCA43DFE85DF9703B8F209F5629EB50B630301A731AE21CA6F
5EB2089536053E54D81663E3BEC0954E2101093E0F11D886E4DF213A95359B77
73B134A46A2C69557053F667AFACD1DF64B9128DBFEAB77B1A9BE9E3D95C697B
C0F214366FD9D4FC3F4CEB73912C9B4471CC7FF4A8DD48D7D3B982B10C3EF611
49DC3BF5644A1F42A8444CF7D48C3A8E77E0CF7849612AEA757EE64FE2DAD4D8
3B5257766F0CBB777F9CB34FFC91315F66AA868C2BF7F87691AF9C835FF8B74E
E25981F03F482C8C373F01D74EB630AABD888E3F74362E40BE6AF19C0DF7016E
826417B49CD3063F4E4C2205AE77AEBD18239DAA331B46FD656524D52E27B685
371CB52B5A523877A7A0EA30791A41444635DD3DBB37F94ED0F4C5034AAF5160
AFDF021C299FDDB6C7098134EBE94D13D9E8F3AF8BE54DCF2CD2F27C46F87AC8
6B76148D99CF927F095DB78CEA7EEC4713F3C1D3A2C97599F261955E4524C8D7
34A2F86A5C4110F79E03C8B7EAB6BB88A9B654A90940408DFC7D57754E55CE65
BAE5E374EE8BBBC0A89E5BCDFD62307812B4B98D2601E9462DF4721EB13B6708
4E617871FAC531D1CBC6799069D50B1982C6B30B9345A5B750162676F6D777F1
32FC395555ACDE4EAA40A27C8DDF0BACD8C9385A2AFE661A4BD09D39152A17F6
8988D26D527A7665DBE729BE8BCB7087E9C66C829A352FD31A9343E483711871
D83495B190A7C2D435727B9C9F428AD81EE68C0280FC67A306D160F9A2268C0D
C6434C00771CF4752F6B56546D498C085372435B8B7ADBA85B9D06F421FB620C
2C1C39205D5FD637A8EA274E4088D6466B65475EBFA9FFD2997AA336B6BB0292
4BF2B5FCA3448D04006F2F8F49342AF89BEA09CC1C47B49C723F43F39A6D790A
65432FE41308D390F553D5067975F53842A1D97D0F102D8148A6382452DA6986
16EF400BE7BE826F48C78801B3C0E0B5EC9DD21F8496D16D7415A144565EC39A
9BE1795740D86035F8F6DCBAC4E3EE7D338FD6516D5C86348CBE62643D415163
70B6B8D6B7B4247EAE26980AB90AA4D732F00FE9787ECF76DAA7048C0028AFD5
EF9A2FE3B903F49286D22C4F2C3743365E12A850D542511B82FE927A8D0667DF
0F0743C24AE0397529248D418CCCB3D3E9E8CFBC35745AA93BC17A0F57ECFDAC
6C60A70EFDCFBC5A0DE8EB4A231126F40E9F31CF8A00C4C66A067FED61E834A5
0A9380CA02BB8EB0B3F5AE8F77FFCEDC51F115247793B9274BCF35A8E7730FCE
803C9105D5502402B9F45D80195DF9B2F25B14C34401D4AF947B5A2D2B1BB819
027F631EEA0DD69300CD3DAE99AB9EDEF385B97D9F23B24D46AA1DCA3A248AD0
B097FEDADFC8DE2DD0DDCDF1171EA000A88B65060149643F2111724B165B2CF7
725B64995908740A03D28CE9E040BB1FE6C952599D8AF21527121DC6A61A94EB
8FC95D4EB827767F2B77BA7DB1A9AEB4C68AAE9683584BE9216BF3C4AA7DF6FA
5590361E5347E4AA8F487600CB5DCB5155A27786AE6CD103761EC047D12E8ECD
C14A858698A497F48EAECCB47007A162E9CB7B751AC4B148425ABDBA70972871
DE4BB22CF77A9926923BF6035458B740E2ABF6CAC0B8D2202082FACDF9B12A50
7DB06785F3F426AB849B44360A3FA8B11B3054F3C9BFCA9D81E095B4DD34F6BD
C92B40CCA42A125352F317E5B8E2EEFF9698D5DDEE5FCDD9BED547005615DD21
FC232FA8992A84B7530D4F181F245D06C2B7D134B0136C9D752B71612114A6B5
6ED400D5AA614A38C1EA93C28038F5DC5836EE6D08B70C9387A51BCE072BC400
92116DD2B129953FE4AC1BD9E2DFBFA633139DDBDC6D1F4A6715656CAC025A2A
E4E830020EDAC0263ACBBA8EB1E549AE4A20E98CE10DEED3AF706CA72B8EC37D
7A30F7328225B7D65F193541BA3D5A256A8B6E381742BD6CA4C612FC43F906B0
6AE4CED0C7DE9CD1A2C85737B84396550BB32B9C00D6934877ACDDC1E644F596
9F03A2004F91677D549D9492A5AF7740C933DBA3ABD975AC4C477B48C91C1B99
8EC6AFA939154AE59261BA5CF67FAC6CADE8BA0C2D43A9DDADF932C0965BBFF9
ADFBA7001DA6675B53AC696EE29A951A033245071CF2D0CABF55335FD2379BA9
044DD214031FE8017EB2E0DE91E58DE7A3EE898FD0CCC68533E00A353D32513C
0964334A59CEBB5C303954D9640A61EFE49C86DA33658CD258039F230345D4D0
841E7B390501733037337C8C992EFA22FD22E09DDCE138FEDAFA17F28FF84A1B
13F0508893193016D09BB6430112BE3D373D92B7A01F539F84C2544273779199
6F818B78C64571774B0585F6CD31C2DB9750C3CB2FD8979A44C749A8A0691E03
B5D366B6F7680EDC6D1606A45F57557C23BD67B89CDEAD076CA03EA462DBC29D
FB9A1EC328513413CF272B06563AD9106F5F94BDCD5EF1E095D43077D52D6AF3
F249A8DCBC7C0F4382DC1EBB247A7E7C5A5CCEDCC0C6D0B1D49905882B205FB7
D965B9CF4CD74A43F4176468330F7D9D1D5AF5BF308384CBA442D12B83C832DA
C758AA47A5FD669AE5443C944D86557AEEE94B9A59B457E1AC5D6681A363B921
FF61CC5AFDC82F982C4E3BB7A980C6F187B9B4981A0285155AF74B62071F1570
0394B0A498926BD855AFC34A3E871FC27D3B385327320E7FA9B2D2762E153223
38B0ECA606E71419558B7A21BEF8EB2A2FCF4794DC8540CD7B503854FE184DA0
3A68791436380B74C667995B49806B487532D752908B1A9E5419DBEC2B6D2ACB
F78B38A8811F0B1C929A9403081A45933425C0F59B3AD547A0EB7D21F49CAA9B
96FCFB06D985EBEDE19246CB1562B707BC1F40DAA8A69B45F9B02991AA6E5857
D77E7BFCA5C5C5B545978CB39E3768A12EF4F93126DB5C19C5BA80951BA3FB3F
8122B13D06A8039913DCD43706DE44DDCE720F121992FAA15CED8F94873DC5C8
137997ACBCB8C4B158FEA1C447A40084861ABFDEAB6EB4974F7763B91BA82328
C3A23E3F33211B416AE0B5017C7276D5DE8A8398987F9AEF54B86BAA23A7418C
FE543E1CD79CB349303E5BDDF50B556436ACF1A5338EF24836BB6907872E1174
719585443A366733C0F47D7A79D6CA340D6553DBDD8AB943038D7D090595FB5B
988D4B24A0473CB86C44AE2C341D54F1F36A843FD64BB7222BC959B198D47E73
B0DBEFEEB3383CB7106D70EB4B3B25BAB270C0C77B0A61FEE879D04522142A31
D874A1412BDDD57353577E27D5B5C169406A8B0306926BEC0FDA0ADC91D3BFF2
08E10F3C3797B33605E8A33A340D0CF5963DD6208A7657DF902AC1837311EB13
76CD836430C14012BE1809C50E7B2E2197F04B9790E91B6728BDA4D389AC56B5
D5F33DADC3DC84F95141406A7ACDE300F7B6413684B83F9275EEDDE683E6ED27
344019D643CC8F1342F97622263C10375F62BF5CC1EEE1835E9B94507796A22E
9FDBC0C4B4F4DCE6515241938FC73316BB352568D8121DBBAC18A6BC49E76D43
FB49226BC323B160A29C64118199CA4DECA894CD8E14744B57257A035F2CC57F
CE637DDC0AC97C7310D9E74AFA9F43F48008B362B45B8B7D0387400DFFF3D8B8
3E26495287AC3E4B9F624B0023D36BF9B7B94E0D7BC9A00DC471A4791274B190
A5B0BCE286267F42FDC4D42005E647C2FB52DB3CA6C5681F333830C7E8C95749
B809D8D3AAAEC15BB011314A73B4EDCC79DEC61DEA41E6D3AF64ADF6088EB938
928F7E308918287410C206595D3F5C45E72403E1C174A2472434A140691C4D08
EB6A249A32D2AFA8D97F7F0EC199AE3DD255FCB9EC85BDFC7BE364D4D6932B10
2C75685DAAF86C9F7086A34E1CE355D5CADEDF18F001E43D71E07C87C7C94E93
4E743719690E3329FD839D326F8B3171E349F9A5D079CA7C1B209938DA2463A7
B0BD866EA2CBD30EE4D10AC145B7256D407963E5CA7A60D772F4F8729966B3C4
B585A40B4B587B2AA2F541FB56AD59783A91D93B6B6511AB4FC3D6B57700B115
EB1C3CCD7586DC0BEBC61195F50CD65AEBAB97DB1A81FCE5FA314D5E2EE38907
A915774F0F13F8CDD7E8B1C9487F5B83E33C67B5C73AA5A99726F72F4042972B
A266A8814D8429F4EDAB64004E478609FEF287D7C7C71CE8ACCED62D592B443B
82F12E31AE57CE58D1195C7F7AFF78B4D4D44D4FFCA46ECCCBC5163D73181E92
6AA5B1AEC8C0C1B30CCC00E4F232F1527790409178AE628094B518C2775F9D59
EF6E78C021AB2D29A62C40C322F77DF998D74B5BE4B5FFFD3CD8871F227D1CC6
0988E7A7DCE6022D949E034D159506038D88E2ACFFC2AA614E36D70AFD7AB494
033667E1EB1BA5D2DBA479564BBF4C12F6FF094944AD86650BA46B9553F4199A
147337BD9A375CDF0D40EB517665E8AD0BC7EF475923B9F1C57444753F21C1F6
1627E1E7977438C598D8626BFEE5EF826C2CABEE2BF04337E99C7F1BEDBA65B2
00D621A0E6CF5A1370DF217D0EA0772E39935A7ABF744D1A2EDC65FA58717D86
18D2CD8A1138A12C0D9E9955638DE8B42AD155D602AEF9293AABF2A044DC104D
71240B5168FF077BC2074EB09CFA30B136A4C9E63A9D1C25F719348C2EF82510
C654BC620F876880782F4D3A1BB1AAC0B24E7B21F2BFAE7395F52E2343BE1E3B
F67879063C21B9D2BD016D8D23647937F2CF2D70A6662E83D4737A0A6535E64D
2848A7F569EC5F8CA8AE58AE29CD7E3560497BE6DC6C29378682EE536C7E53DD
0622DF576A589E968CB439B5C8F2B1DD3097A02430E45CA4F936B35C01884B04
DD44CB50669B647EC9D38E40B3035A7BDF41E52A5EBB2D1C0CE8897E66E3B893
24611E5FCDAD561B6723FF8CC8AA3FB060BFA32D280A61E003EC2476E92EC59D
123B3F999062EE115124BE7BB177B3DBC59E29EEF973875330FB719448C9E566
58A6A588070B160DC3D29CC3F918BDC4147B61085C32C306B67E744E831D56D7
89E4460E4E655891504D2FD7C31DFA0ECACB92F171E14CCB5E7B7E49602ED247
1E3D6C8DB3A46FFB3E4654ABA93D8FE0BDD2F96971DB95CB76E4A1BDF0C77868
19BD1A36345BD609F21541C98273B3752284771EFA2DD196A3AA37D4C5BA15A4
48229BA4A27E20FA0A7BF3D6E4CD3F4ED0A7A12E208E54451BE9DAC11D6DEACA
5F44370F306A584F2A48B0D4872DE9E1DC18270DA0532084BFA9CBA027AC4C9D
4C67C8D10A9571885043E4F830DFD6753798CF87DED256507C3D9DB10B94E445
EFDE8E05802B56542DAD0B2147C7E17F4E7D28BD9F35A475A7A543973B8B6811
683780548EB0BA3EBCDE6F114F6DAC5C9F66A555704B99CF9D40D2E6D21F67FB
6D16AC0DD80203FFA6FFF895A73A95CDB1C90F6E634679201B4D458B7A9ED525
40A7628C8CFB665E157AB462111A7A7A7F5085976453AD466CB2F1C816829067
7FE2B14CC2FDF8D2AB886083E531573C8B6C475264897D4002F62A31118149B9
AA1892A17E7C4D058AECC87213DA47824B0741607304D825BC329019DE29A7B2
0FEF030410FD1FF43A77C6FFACCCD2D10BB5E6CB052BFF9D02D001135E044DFF
009718877DA7599DD2BF15C0A15C07648C2DC7E8350C7573887E739A88C7506A
9D4C8B81E2733F75906D11BC7CED2A290AD631D2E0DA6339B53AE2977F63CA48
67DA6CED502DF27C8D69746BF31ADC87980A0915B8358FF6DB11320AEF857175
BDC9110E5F920AF0DE61D9B7FA178593420BCA00B61AB86F9EFCCB1509854994
473A654E720288065E86D7F59A12180E4E1C757DF26B0B6C058DBE39429FFC6D
F01F318891D851CB4C40C3302CFB46BD4A60ED01FD49CB711E4B4E31D9BEFF51
830139803CA6370B18E8A4E229E4507F3F26676975E42E46325A5614012E3C8F
4166A659778F0A818F0F0C6DC3ED9E8BBF8FCCCC81A7F60049B6972663EFD868
B00721C32A7B3D86C803D5F9DAEE8B0097A1298A46C3764EE2E94A9769C28018
6427466FD2F914EAC4FC442E54E6765AE857556697EB64B98D9DDEEDECE3877D
B4233578644C4E79085AB7A9E48C3ADCE34C82D7860D08E28822E7347C04D12E
41FA0BE520FF35ABD92E139F54C22FAF54286EC77A4589DF52B923E492CF6104
DEA4F3432E34EF35B4978360A8A106AB768EBAB227DD1ED133280150A87C92B6
0B9E4423C3D990DC9038B311CE51CEB569DCC1D2A4CE0706235FA42422B13DB5
200C19FF70E8B627536C037EBA04DFE067EE6B3F7DCC038CB06F0D3822C954E4
EA8422B6E2806206612BC77E20E79BB89E4349141D9A2D6419C80DC11E226B07
F183C478751A5B7847981FA08A40882E1D98CF50A09349DF96140E8F4963C739
E4F675D2EB7E2DC1160AD156065E6113E65F4BD28DB8BEF3EAE4CDC5BD54F2EA
5710AB6B8A378BA449481B4479C7387C99F8813F351A04B02EF7F95FD7E6A2ED
C428F9C1741AD0A8365DF2BB1E882AE82292FD4982442897B5B381828D8F7A9E
272AFB955956FE75F41652D851DE093788648BF5BEBC50103FDDAAE919F94D2E
1D509358B7965C9648DD176F84BDEA1301D1A5964FC03E020F671AD456188CAB
3128E68CEDBB3F8724E3C1B352595ED14A10B765027D3349DEDFA9B15A962C3A
FC9EC243CF4D4AF4A194285FBE993F62A6CDE8B0A887BACEAC572EF452739C91
7F3133BFEDC3729B2C7CE28075645C77C3F45C5A65626D93EE7169D5E3E4472B
653050EF4289750B61C2213773ECB87218812B1FFAB822793CE772FD7B6F9EB8
EB488B0A6DCA0844CDB36F4B80258C6BB95FDD61DFB46B2DF82A823765B717CC
58773CD56397811FCF8B44B27B5F2B0F9A3231666828A6E73B21EF693740C01F
5D9B37ABE9ABC0A479D09F9223BB763B823E24A85D0024416B5C3D5B4847FB18
65A46154198B8228595FC7DF3EE2B614B73D7FF064783DCD1E54E8018BE006C6
A73580FDE81DCDF0EB03E3EE18CB185CAC0590C073902913F8E6BE31A5B3DD0C
CC3C928A60FEB5FAD58C121FAB09C5D5661BAEF1B93347955B5C9411288ED3F6
E1DBB85B4E43CDA03EFC20D1EB08DBA019A317FBC54FBE3F1A51EF7C80370B05
A388C0D4E0FC52C46F0CF632ABE73C09612525AAB91EDDC65A2B5E7066C97778
8CCCBF460DF916E308CF089AD9D387E567B9657412E44D25BF42719158482912
07007952C5322E029E7CE5147A843536D98EF867646E38760571E67A52C449F3
8700D5A47E086D6D75D23FF2C8A7AF9C48BCB78955F7DF52C1720BFB6A589E96
8CB439B400D7CC4D8EC19E81DA35A22BB1D53EF5AF0031B3DF0DEA36FFD6D13D
80E9086E071824F67A88392735168EFD2861DAE169C4F9080EE983ADD40D8052
661C9E56591BA554EF5D739B8994192B7D5BFD437C9D80CDE009BB0EC5456C47
05BEFA77BF6B4ED7BEBD9784B9BAEC94F156A6C5C47AE925315D34D807C314FC
3DD1ABF157129888A793C6AF35DA2EB8C603FD2A9AF73166860EFE73CF65D6B0
EFCD800BDEB5994C163FD8079588DD02B7D6B098BC8D55341DE0CDE72037E58A
924D5FD86A6DB5F3068A62999CDCFDAD5278820C64001FB9AE18936D49923828
045D17B3992B2B1ACDEB79E08637B7C3DC6623F15CC55157CF251C05A37D0D50
8230C17E595D3C5B8E6211C3F6A6C09EBEE3221E5FB58E594E2AD50E89BA3344
FBA12207286E8FA222D6BC7934B6D973458BF5B1D00C89B2A2835C6C346D10F1
78D971145FD761896A1190E7A68002B4DA75AE0B953A235F9CB99F3B410C5930
FD8CB4F1B20E889DBB39A74F37AAE9AD3FDB2243343F494462375B3B86AC7FD7
78A034B653AC22704E34B2C59381A57BD25787218EE85C3E8A64AB90E837FE15
5CDF01667D2D042712E60AE0047086DEC291D1BAD7F6BD01C1E67F34DBC239CF
6FA4CC6C9FF745D344961E5F60C043502DF7171231249256E80132A72324B793
7A7A70ADDC3BECA3F0240AD628A4BCA8ACC06EE74B866EAF9225544B5D65EF83
2629083FB382621C010236D9012A3E59EC3D16FA790A94AF25F5B976E148A596
3A2EBDC5331FD4D5EE841AA98560C8190484C04147E597D7AC00D70C1FC69D78
8CC4A55C66801A26DBF07A9552B062BEF99985F94E24862C3D95B9309133A50C
77390DEB8F3FBAD37B7945CFC64CF73FE219BA7F7B68A693ADD46E7F0718585D
A876AE2285AE604FCE21F31C8436801C6484F525E6C3F1CE6F7E12BD5045FDFA
57ABE586BF27CA4779462476668B5C35803A75C96BE1ECD0708C3C34EE98CCC0
AC60048631D9FD3CE63C7F6350F57072B74EDE923DF325BE1662BBB0B5D3F27D
47EDB081D92F3F107989D82ACF30AC5090331E3E422570BB3BD07DE68DA82C6D
E08BB717096AD7E24DBE49E96DB2F934BCECFC409894533CD3180E6E342C94F7
8366BE4714DC4CA06F311A7A72413CD77DC4955E8416BDE8148E530978151E71
AD605F73F8A808AD5605095D0B7C604ED368B94BD9468B6D056A406780FF359A
4E10C1E17BF86E726869F114C6128C006E8A0BE4DFB03163F4409770767B8965
1C26994FDF3BB32BDAAACAAB039305286E320BE4C001CEF1FFB8DB67B62AD3C3
AEC3129BFE51F547AE25448C15247FD21133C1D0DAC1035A688FA0086CE1D252
3D435E050D4E79557FB0FF5FAAB763DF46054228F53E94A6567A2BAC8A56474A
D29764DFB96D2FA4494449C69B415BB872A22295C9BD2C858D2E196D168073E8
5DA1EF9E8B4676A1A7079C7347A74D14F6FC3A95299545F27E9B02E894290BA2
91AEEE6A09DCB92F3B1ACCAECA70D07DD2315D7EABECF3315E0C989960A0CD3C
3F084E53218FB837E7B794B399A959942000E31EC7BF8D7BA45DBBB40AB42E0A
1E7DA118E99AA332EB70923D47B69554794D3EC0C4EB45AFA6433FA918834AE5
42882B314CDAF9FABA4325077AD194511D6467EEE384735DF9E90643F26DA73F
96A9B7786E9EB7F22E972A755E582439FA4687A277F6D8E41CD82D553D9FE901
7483A85EC6D2FF07276C0295B0914E317214BD1C4A58FEB6E7CECE2EF9EFF0BE
47C62D89D4771F4CF6994859FFA6AEA8911D81693C4952DFBAD6FCE857A96737
B5121CAF2D28BB0E1556A222C04FC83437C1E7411BC785FCD3B0A05B5CBBDE7A
8C18753E8F4072AB669E8D4489BDF88971B638441EC0E7D671ABFC710024327F
1C350C1D93877169A8E84955202F71668380D287B113F4E5C6905113E40BFF06
D79FB185E0B0751147FED49F13823DC1522577E4B9C8848675EE4C828CB661B0
879B01579D58DDDA0A69D25C614969C506F9E51D96BAD8BE01AE401990795387
2F1F05F486EDAF3CD5380B94ABFEC7816998FFB6A83B33574E3AAA3175D22886
411C47465A3825F6128E5EE9D5630A45604478C88A833D698923A4723C30F553
EC221E958FED2763F8FEC633554640F5ED561C1BBE6EC1FF16B9444820E22FA3
9F633C39FEBC0B88236E14A160FC878F5B71771A7F9A0C187ACEB7BDFA14C6FF
18C2E4A9E33C5638CDBF65CD7B94779A28CC9B628CA31925B2F3AC4A5B9048ED
586D2CC7562F35289B111FB4552FE82B2921D16958780696FEA481CDA9EA312A
63AAFFD5AB89A868EB779D60150B98563AEF4D8AE2DAD616FFE7B40B4C10A7E0
0B0FDC2754DF32AB78B52FDE1CC629A2EE0BA1E5D133644E3565B71B6FF6E678
8274C0C62E4F942743E43CC167D02B5B762798422590A3F248289274DDF80390
1B6D567A34BEF61A735CB6B99CE148AAB33F33CA0E83B270E16B9C5D04FF6252
33423EFAFF9785B4B8CF6EF481E9E380D2844D1C98B5206A78A6FD16AD7BD4B2
47AF4ABF1F2E3671659A66DDAC11A8975C89DEBB2DC4BFB1BF3D3A8CF1F6E447
07EB38580004722E1D5F95D989F6E45117029F7F5F3190D39C9BAD0ACB663DA8
A3F1B8A6CBDD652C08D1337B5761254DAFF83EF8375FA94F66D4D6217A21DD17
D37D71ADE34F724C8973B420657DDF8DE5B7EB7AD53A1A715ACDF808C98B689B
8D628A15E20BFAEA5143B3AE39FFE7298AF4B56BC5DCB36ABCACB6594AD11D5D
7464969916CC85104DF710825927DB05930EB708BB21208B0E39573092757F13
0BAD5E03C38C3EBD9D7037CC86807D83C4FF0C069B67B138E97E8DE9396AFE14
84318285949B9BB05A7A33C256132246F93FE720DFB562AA16A5F1C03F3C4BAA
D839186C4B5C533506E9B8BC667264F38B32BBCE16DDEAA70169BD5853B9BEC3
F901EB72B4191E1F94FC049A996263737D22DB1AEC485A9C6E55DD9E2AEB7767
B4D3CEE4E99332A5B32E9EC2E640EFAB4FDE6BCE2E07056593AEA51063428636
869014D796F8E120D97B7945B3E499B24D5FCCC6BDAA4FE06B5DB001EE4857AB
250D8DD581D8BF8D2C3F99B883AC07CAD45A32DE08EEADEE8954B87B377C220E
107A6DB4A2284BF44EFA23B4951FF1F2BDC8A7DB514CF60495FD660F7B2B3BDB
E74FA33316E1FB7A7D0A3E41C00FD58CDCADBA8C51483708790600A2865D6080
8BB877720A7898BEA145330029AED5B20455F5FBF92139A75AE91E3988C942EA
A5AC7D6C94FE8FD492722157C0A547518210B843961B6C25E802CDE8525B7332
2DC18D7292CE1A8A27ACAC2AFBDEBDC2380BD3EB5C607D9EEA87B5465790553A
6E1380390B485E58B9B7F3DDAF2E8691A5D27D76E9EA966DE97742183E7C7191
A16D395FA06DCFA8ACFC7AF92B40F480509A129F3EF687431F98778A6EAF0656
00E894430322FCCA4D912D967327F1F2B52EDD1A277F1E42F972A3D1BBD6AD45
DC6E5B99C916F1D98BE0730DCBDF26CD35FAFC4AF1E66FB633146F93B4FFF735
D27E6B52CF5B6D028B65ED328668813800BF5DB98E9CEF8A9915EED6DD64DB99
A1DC168C5A770305851FFA12D0FF475BEF383CCE767E82E8E7186C5CA370F847
3D8D79781A39400C8AA3070FF942C26645BE7461E3CCC1050549CA509996110D
D7D1ABF717C699F169AC2B75AD6C925023AE22E0F6C518887A86275014ADA7D8
9AF55F888F3C6233AD7FB8E5AD5ED3A1AA6DE81F6EC6B4AFDA763F2AFC1E5655
8AAB83ACBA1F6C86FD38D0EF61BF299C3942AC4EFA144DF2229B180A2F3523E8
A8FFBD6134A04D4E5340C7422D4E964CA4663CA3283932A8A613520E54F01810
F832FBFFFCD74D2111E844A54E35FC2BDC208E2E8F29D8A5759D39A0A5E8506C
23246BA3D9FE063B5265E6FE0415905F8F454AD036D1C9A2E3BD67E0A858CF2C
4C733D5B03655A1086ABDEF87BE1EFF17370263A32D5C6F77C836B80755311AB
65CA01B33E0108DAB96C61621FC4EDD1A0843D72AE1AD7FF669B09EED2FD5D4C
5390D33F2FDFC7B0F7AB7A52B4FC7BA3C576F3F4A730ABDFE2E12B6A94B92731
A9E634E66EA6B1A096084A056E3A886A5EDE378F39CB81E940DCC388A2632526
83E3C90D580F4A6934CAFA614F374F9306E42043DD311FE6CFF1B3C85C94674C
6B74399D1F7BE2BB94E162E2EB1FCE36E66CE98A0A76CA83CD6D4CC7F59040EC
124B4B3310E85FEAF9E40A7B2DA0F5F59A32610C16F47B9465730A0CF9B9CEBC
BF82BE7C8CC16B2FD3C75CEF5A2B7062294E1A02690A12AA277D35BCD1675DF9
C24D6CB5DD14B31DEED61ADEB0DA9CB5B17A44CB1C80FEB7755DAE04DA97152D
C4B26786911CF7861E50AB4B3827A2AC62E32940A237825A4BFCA77B52002CC8
9F83BD6AC21C715DAA9916B99FB4F84F5EAC97A4AC5D056684E88B4CC5B5729E
E0114C642D873786A4E4293773750ED4ED48DA9615BBA63A57C1986A88FB77B5
E89550C89F9C53938EB25014EC7FE5808E9D85EB23F77B66408FFBF4C11BB0A8
419AB70E76C4C8C94B5EEFE22E3D1A1A5FEA53AB3A7B655E3D2C4E9C725C0ABA
E8A35C1330921D308B393714E1D2EA673150BD56CB16361BA6CCBF7F45CA57D6
D5F286B5D01CE580303D78A4A08FF853A6DFD48E5CE1545B0BAA9625045E4FF6
D95A80C51751D817F43C617B75A6A6099AD948F6C0A063AE708806AFF21D714C
7B1F045B98B8F8F9A1C6CEB24FE0BD927EB6D0D31D862316392D871111B1E069
8C60B178569F2EFB50EF3A9BBFDDA9D0DC49B484DF4B9136D0AC85413ED68174
FE78346FA4FCAE5929CA0A22426071061A6D9C12B5C922D3E10A6DB46DE2D4DC
8238057D2F86F1B71CAE7DCF3699286299E9AD5E913A1469FD9DE87B008AA980
123D401B7111DD5B49E109A3744CBF3AC9C0926BCEB4E755454458728AC377F0
E98A6116E609400C58E9FDB8CF5369763D6F70A5A2D3196F45ED7E29B7B8CF2D
A50E1AA6022D0D35B3BF10133E1F07FB0F0375D3D370A0808A9E064F73DBEEEA
09AD89DF619FB4268B4E589E59B7CF22412C9FBCA7CA703ADD45B35FCC688E41
5EB96B18B9DA1C77233BF40F6482949E8E7886FFB09C879D1D22E48ED6C1033A
1294C3D4C995D98D0DF41F9E8B20B6F75E254614F8E42A7120C29320CC6AB332
C06E0CCE13BA44E69678222D0227CF59B5A41DE23EDC5DF56A76328EEFEC3F34
01A74A5304CD4EA700A908279F9430C5E9C85E4AF31D824A88E8A846734A29A6
E9C7792E8149A1ECEA02FAECA47CBEA9ECB601C70D0BFE9878180E507238C92F
08DCE06E64A6CE988E11B75B524D02DFF9BDB6F75C318193C10A3AA0DED63450
ED01F6ED7AC60D1C9FD4224A923EC43AF3FE745E6A18A21411D4FAFE1DE92927
79BF9563FA920CC1DDEA035ACA29F19AA0AA2D9C867BA3F3AFA7749C56C89583
EB323344B667AB750EBD62440F5C268B545752AAC4D999BAF079EDC517625FCB
E8F811F62DC66FCA4200511E9C7DF87EAB1237B64F001E5CB5D7312D3F3A43FF
1A793EB3DDAE5AC045FC13E0FE4239CAC2F77B9B083ADBA755A012B37072D55B
F120E47714D868E3455BF30EB2769EE03B8A7D2B532E807B23448A1F671D1DA8
0CF1574DB02E53FB64E13200D45D99FD4F5AFE33A5CE038A27BFFCDC71E2C398
183059080DCDA7760ADBE90D1500590DEACE47B3A8EDB044EB2C433EBDA75FF3
5F061550DDAB07007B36BB0DE3D6683A2DA01276817295CC98030104801E37AC
787FF7C59E3A892C75F1C71035D3E89307C9F1CA6797FA3E4AF6B5E291C081D2
CDD904C5D00FEC5B3A26266EE3C95C4DBC40471E6F4B4A869E0A704F13EEFE25
A6AB1D3C2DC935BC0394512B5742621FA477EAF61BDFE015AFDF8E961D39480C
46471FEDAFF24D294408AF0FE7C425BB6FFCF69DD685FB1F9D525E18C122F2BE
408277B43B45DF6BAEAB2BB015B9B54E476A9CC7931F65BF38632FE068821AFA
207E2C3073B1925778226192241280AD36EB4834C381B8AF84B77C0EFBD0B312
8C505EB39E169F92B211A96F3F45897EA50A1D9DC807E6115871C4528CAF328F
29BABC507DEF933300E958C273BBFC73A0598230B5420ADD48953D81A92B8B7E
6520B41707C1AA5F32F3C4244DA0FE49343548443A9437F8107E4A4D3499FDF4
DA8B5B8B0BEB76807C6120EF63010537F2406BEB2AC37720B704D6C1734A7C48
FD220815EEF88EFC115B771FD9CF9920827DE41CDFC393F6A824079A3F78CE58
2D61B60255D6A513098F34ADCC27AC42E6799741462FD83B8CF2E13896716721
D5FDB7D8A56692E635514A517B0591F4D7742DD0DF79FC7B1737435D0ED029A8
00066E988A00231EA38FE433560D5C92A796581AE94DCFA2F6F7427791D3F45F
A6FD926F930E302FB6A4F0240667CC463CB4FA3836518AC60166E67DD0280B59
99CB62B8A4E89AF42ACF077AC41557AEF85EF400C104FDE6AEA8FF7BE4C905A8
53EF8F62FABA7C7EF6B9418908BC894914E714DD345DAFC60901C5C7F06F31EB
156905F26B5BCEDBCD4885CA3FCE9398D023B2D342BF2B43694628FCB761C71C
EC5813CC688C448175C7B6A92887E2450EFD5620FBC970724B9E07C735C76A80
D4D1FA28A365EF3F0A4E809C0E163DFD8E2CCB5169EACBF41E889404B430A583
C46D0AD21BE9C839D55AA3939A2F86CB420439AFAF536C4CE953FE08E9682BD6
2B49FBCE4A8249372FEAFBC37404F051AA815AEADFCD085F36055EBB9DBD0B06
F2C9FF6CBF47E81673BC7874397ABAC01270C896239C7334EC937E1E0D31713D
F51AC09442FCAD1C5499139FA01828CF1835CF24AB00D8EBF1391AAE076F9632
E9A17FFBDC41B017F273731F1143BD075BB41A909E69D9D8959DD6A8EDACDC15
040004655E9B6E74D12D588DCDDB3AB6FDE8FD542277994799F3EEFC006AD13F
B6AC7D64EC6FDFE35B1690E490142E48C085A4A85B573BB45B3681E194036215
12FAAD98BD8806F0E501464D9824D6A2443D24012DC1F426E75DFD621570854F
15A207CD25FCACA1D23960F4B24BBEF29A5B3DDA79FD8E9EFA5453DB43A0D971
42A1D3E3B87824865C1807953989A5F594B86A00F2740D3963E77B4DFC0BB120
6D6631AF22BD38F7CB56C1551E151E2CC8F5A87719A9C767EBB376C4169B3CFB
3DAF78429AEFF49D6BDB7F4EDB55A1BB7938BABA89940E16C7266E0977352C39
4E1DE05C9B87E74479AFB6AF3884EC1B5031A6146BA309387E8EB03825F8E6A1
9C4A346B109F2F340AAD6055E1EA82F0E8EBA6F39CEC4536E63D24F30A33A54F
FF2A6B0522BA5185801981649D7F823952B17445D35740AEC50E659FF437150C
C4608BD19E2924191B35AD4C74D270AC46D58F3C991C72E1344FA80755CAB763
02992F436BB6011E55859E8835B113EB1EED88C9EC821DC9CF1AFFBC1D9F2B98
124BB7D4A8EBAC546991D417A70A9F47FAFC0D1AB3F6A4C433FEE0E490482933
9BDD4A8173FCEC8DDD5CC33FEEA380D999AA0B58FC9C6AE88527D789CE8E6426
E698CA0C153469B745B6E8041505A89873F10AF1F920F7B210A6C7CD187EE268
5C72F7186ACFC80B3148B675E6A9A8E8FF1ED97D64F34B6C6256ACB1EE72F4A5
865A407CB7611F65019E34CD4D28016744A670287819BA7B99BF61D4BE2B2F2D
B34CC5F7EF30E33CE30C84CE4F5EB50F44C3D2E632BE02BADCC25B4FF3DA75C1
1257429101E349BCFB37A661B9D8E9768057708AEB2823852C3DCB720959E80D
F4541E2DD3662A21C1233A868C2AF112ACB343DDCCB4BE8422F7E60663C47926
0D3C6C99213AB5C3CA7FED00E7829B576447EC4CB78671B191002350A7CF0813
4AEBFE91B30C9959B6D5B48BCCE6AC49C211A046F755074C44024D97764CD385
4AAA992E997F5A06B49B934A901CA04016C1AB4A778967A2D67E209516406256
3132E8CDDA61C5D6ADD6BC9993C7262376936F80585894D5BEEDF988DED4E513
4477BE58C53148ECFF5154D0EE5381CA205611D1D52455544190859F543CD902
D540CF3722C8E200104DABBDA701D3252052C9434357348E24484EE395603799
1D7572649F24BC8A84387A53128885F1457950AD71ED15EE733B4D78EF49DD0A
BD47299BEA31A5635C59D1679EC973B26F551D268D20EC7FA35DD0A397C0D0CA
3435C7328C79B51360610E8F6D5EC77AAAE99C04F31CAC5665DB652521CE5D04
0CCFE036AB6293FBAA3E95C72A4969BDF6294D4E10721DE44CEB2C1E327DEBF3
52B6B2B87B114E12FD61F3306A626B07E5118CC13DAAD28A5F715BCA0B7B8940
18DC232E7772ABE1AB6B9BAC171398DA29EF086F66709FA8703C1112B0EA165F
BBB8577141D319E79F33E75242985BD6980B7B2649D1BAB62AC51F1B612ED1AA
552817EBA1490877C52A2ABF0640A929CD80721B11103139F586093079BD46BF
7E5BA58C70C77F88C3B76EC37639606CA810AD186FE9E210E39D213BD7DE9CCA
7521A9022CD6A7EF37AAA2A3E622B79580B951DE1C55E5DD11A33D9D351EBCB1
830BB46CD7A6FEE29F49AC0C5BBD8840E737DA1D282C8BD3D9E964F0D42083DC
5F9B136B08079EB055DE534915D6FD100B79159F34B397019FC4BFE3DCA4EC4A
322991C4D88B750240397B724CAD1559D786A0639AB21ACD519340CAB1FC6AE9
41A0343FE3E093D01DBAB7D5242BD874083EAC71A8B1C896466DDA342766D301
FD2FAB1FC7EFCB31B99AECF41930B839D1622055781A995FF8C9F54E5FF34B1E
1200F29DCC8F9B02C0DA516826977EABCBD63A0E966088DCB82EC8A2F7D23456
3CADC50592120EE9697EA186D6C3A9EC652FC0AD1195E1413E5D1DCD6FF6D02A
ADFC0FA5EDD0024A3357297EF16C0012B44CA97182DE7B9F7B4657C5FF0B351A
B05A2217F76FC9AC8FAA5E4319C53E581C6128DE6A1471B453E6E57F92120C04
CE47E6DCBD22C0D228140AFB19B13549012A3975352DB24A17938C84E223E44A
E5235C6D53FE04AD0E20801934322FC60C105893175148CE3A088BA5A5D43613
8C50E3410EE5801556270338093B36669A1274DCB978E3819BD50B0348AEC058
2F938333DEF36524EAAA440E16A19075BE952DFC2D2764663181CF4B045978AD
5B858FED3B7CE4DE980D98FE186180A560FA88FB18403EADA8E47E0F6385E1B1
E238E9F280ECB8F0E997E0A6BD8B7D0B4D74AEF7DCCD7F5506C87EA5FF1C9C78
DBD303A9D9F3A05A68B7DB3493521B1A4887323055C5F550ECAF90DEE535671D
B37A8A03026FB0A2D69D3065F2409DACEC0D0CD668F266A666D7C73303875AB7
EE374FE25EB84A5CE5C3F4F48B661DB9848FCBBAEB326D08C6459B22029677D6
5119F66D40896045EEAACAFBB42C8441D2ABB89D2E6A0E0AD2D1DCD7991CEC4B
BBD2CC395F9F52934EBFD3CCB7AE71B6CB13EFD291089A0109E3C86EE1A43231
E656CC93CBA07C850AD460DA83C7EF6810C8E585C9D8D3A15730EBE02416BEC9
AAB145384A80E6C30095C1CDB86245209F9E703D5C88F50FFCE4E2FB8D769F44
D76DAFD04E1F91CE4CBFFE34E081307DE53253A1E26AADD86D564737C595694F
92A75D549CF87D531A78107F56EB02E5F80A7AF7FFAF3DC555D80D6526BB91BA
698822475CE189D144CF589CB3694E965179D88A0D9312879DEF3D4883666220
D03267FBE9FB0590A4B82538BD324E68F5B0AF1201BD7A21223C8DA96999D6A7
12380AA5AFD9DDDF36561ACD65164C7D0A779071DF4E00F5FF5F6D8A10248C8B
9BC2807846F70D54711F55DDFABD0AD673B81D938D7AD964C022F991A54F3BDD
A2064E25094FA8874B3636B6FE3F87BE9C80727519D3CC201C325CCA346A7500
F5A62BBE225414EA005E804CF3DB87C918B647D2AFEEE9C0D47DB63A66352235
F48C235D7D3F18FA0A9D77788A4B42A13F17F4896C7FD49E937397F5C6D0B986
3D2257BD48B51253ECA804CFB5BA5CC515C7D8D22B07DFD06F67046641CDFD0E
AFCC8100439059B577BB4F2BE0F953FCFC56DA7A2962D8BFC2FC8073FFA31B02
6AB1D293F53D0A26B455BC1DFF6E410FECD241730A9943B55B9AE96D44247A59
1A92E2B78DB3220304481B4998FD5DED7B4282AD12A3D2E8CFCB391A7767E9A9
C81671F2427F2C609E5CA4C5A9D6B516006FC751C6FB33A8ECDB2996A2A56FE4
3A85442119087B79D4E55C74631F17550369F8779F4E7B48FD6B4DD609B2B0A3
70BE7799D69272AA12EA3807E7A8F26934D78295704A7508E70128D16507C7C8
FB20383FB35C5B8FBE359B7459966BEF7F6455C7A402A524B17BC57984AF46D6
9906C09ED317381E22FC021FED9AD359B8CF52EE4985C553082840746C76C530
689C0E2A78B66BFEAEFE9865FFBBA2698C7DB909B35CED5E52C0F9C07B36BF87
C6556E685732C41CB0E268531D6D7D21A571E05ACA0861A2E82E6FE8E3EC0D88
EAD45536914659433087C01C31C65381A5F0A51641D4F9AC3F8133AB5433C263
EEB3D725D0F6E0BC0A045905500D62C27CA56E8E5A7BBE03C614B0F0AC867C29
85F460F2CAF666E94905A05DF438AD71ADEE1ABD6BED58CE28DD56FE38C26805
6194C855EC05FDBC133D6F6ACA02B3EEEFF4F558830FF0CD3A79B228E47435AF
B83C74919D8038568F0DABFB4C39195C45D4CC1CE86823D6B9F9F62994F5FABC
3680B15438327C66F8CAEA328C43B73BA7352E01F2039945A865BDE4FA46CCFC
36628B0E820946DFBDE3296FA1192B3527C57E34EB701EB087099295460453D5
7A38054EA859859EA46EAC049FF0082533B7E80369AB08FC8742ED8494B4D0E9
4F8637AA6D714F692EEE2EAB34FA52133AC4103E27C1C4F8551B01BE8AFEE2CE
C666B49F7CCDE3AF95B3D510B00E826F9AE0D745731791E08F9DA01DA52DE4DB
5A1F52B4D5D83CB97DF484531A91EAAA6C0E9BADA1E97D15DA4467B8AC32269F
B021C69363A61849043EF1E290C73A060A60BFF4DAFF2168EC3CB683F72193B6
90465FB331EFACC4ECD14AA62D39BA1E8C223EC854D738013BBBADA95B0521FA
DA3E45E25B92B519E9B4ADF7F3070BACB67A48515551A655014240A1C590C9AD
0B69FC2ACA9C187BA56A809B67DDCB882798DAAD024D4015794D98CE34E0FFBF
4C605E9DC91721DC8F5FF7426662E35A5C0883BFC167FB1F0AC90D29F4987B2D
2982DA29FFF3D497AC7A66C11F5421D5D423D2421660D53DDC1E29813E495FC7
57A30F0C68F2E013810C0A9559DD90805777A0066A9AEF898294470971CA2A41
0A87021769BEEAA2F6DECF72209CFEDE96CA33398B9227F20B577D923C32BDF8
4226BA938CAB431B1465A2E15FA19680969FEA80F4807F8C948A446EC2C50FEA
337DF537EA990835B20F25661867098C7EA818C4273788EA9022A4BB24A31C6A
6E3576B93D1F142D195B4BF219DB56CC3CE97B0F2E9558873F92450A007CB5E1
61CBBDF311889D371A86FE52AA72EFC836ADB5C9E79EF2FB49D5B16CA90FFA88
ED906EE54D885CB4424450366BD6D1DC7580E568E85CF9DA6AC3F3547F896891
75B45D50B343704F53169F99A486847D31D4854EA39D16F32AFFAFC410755DAC
A402AEB5CBC196F5F7AF81739CBDC01E83A86CF3F58DAD17F64E99970F16F901
2B86A747426FACB58F416CC26657E4D9859F511AE1B7B53DC3D3D7AED954EAAA
8AB9886CB9C56354479DD00616B5CE96D6DB1004C025BA029E11CEE984AC0231
61975BF140EDBBB0F8E0A3A58B139C7F28BAE2637A363A2990B16A3FBCBF6D93
B013332F113D7DA94EB68D2CB52F2E3FB026A66299D9348B656F4FA6869D0C65
5BC28F4876545AD7B774E7DCC5E1E52C73B0BD8B9AB822BAC66030AA7921F837
53EFC84A857657F80B4DAACF9E39DAB857810C1FE771EDEB718357390AD19DD6
F6FB41516FA512C35CC42263D112DA028C67386F2A71B5E0454FC00548D8F425
C03DF8A0635F2DE5A2844F21282D35B59BF86FF9361E0B3AA5E1C29D5B9CEB1C
AA6C620F1D9E0C554D7AB8E2294B1910F641F40DAB7BEDCA952BBBACA8BCD6BE
9BA6BE7233E7D93AD22714045C2C5E51A85B0F6C3D979EB1043D7B9EF3128819
604AB515D9AEEA0BCC3998699E0ED5E2146F96B885883A3192173B8D4DED5875
F952C77F27F7FE9DB13ECC62F3D894D77E12AF68ABC895B8EF7BB33F8EE62467
8F866BA756F5007F6E3986687F68C04A4D56A5FB119CB038EE563F4F809F164E
7CDC0FBFA280D212F58A54C1EA313ADC3EFD3EF929E30AB4BA0B02AAE9FB72F3
64A8AE3CE28F508418ECFE461881DCB868563423BBD164C70753E929DF3B1019
4C9706B191E39ADB18C166415C16BD1142DFE01AD43E0C81FF294647060B20FA
58D3927511F4E34BFFB812277831659EC675E3EA886FD1E6FCC07EB9228620EA
DC54CE5609A2873329A947A914DE6E6D0E0260EB352EE4098F8D24F7269261EB
29E11CF37F7BD62D75F972EA835D26E9399D0FBE8D556EB6DFD37A1AF88DA649
61A26A9BDF808909130D766CA8F4E9B9EC95CCD6DBBEB7E961EC3D5E6F0EDF5F
07A130E5069898556D0D980E3A168ABE4D2D91560B47DB1BC289E27256C63A0C
6889427226058EF2BC8A709FA69780F5F4081DC96AFDB4F7021F2E91E26F664F
4BFA1249F253412B0F32B64ACAECC5AC77AFF5D18ECBD1985F2D7C12D270F042
6241058CAADCB7828254C22198099EB8A374FCAC0C48304B5D5F21A4ABD26146
5E2BCD021CBDA4D47FAAB1579686A9D3A9CBE2BD4BB9B6FB64A1DD11D4206592
591DE58D3EC0D162546CAFC5758B24D4117688FE35FA87FC7A60A96EA0849E49
E9EBE739F3FF15881045834E5E1CBAA56C24C908848EEDB052855DCF0E40F6A0
AE49046875111AC10B5441984EB91FDB12D90FF4C5C7E48CF2336222F2A474ED
0E633F0B91F0911ACC22A25A24C03D0D72C68CBDEFDA09D280DB7DF841CA8F1A
2355265AF8127A56955521AAC597F39061B817D00083646E2A1A0B5511A03595
F8F87204BECBACFF4F67B46F0DF2AE92B17DE398F0045857C69B8682BA7EDAD2
7DE29E4ACB3A36A49E2B3D26A19C9CABCD346816BC1B04C05A009B543DDCAB10
A9FE652276378204AC446F5E00CF2305FFBF9FE69C34A6973A2A1817F039886C
AC6D0D1E112641B3D9D37701A102099ED6A502F49A343E682CDF44A291ED92BC
081B5769801618DE366C13A061206C54DBD0F60A5DD4178CF59ED1EDD6395D7A
44AFF56185D51FD7A161BF6ABF16155C295CC7B38C09F4FCB35F973E1ABC6D5D
9DE25DA271BA5747712E33FE737BCE4973B31E4791EF0828DA2FE9ADFC925A66
2F5D6AF7D8EC96AC167BED9C57540675B81260E1AC64266824AFD9B59621C9AF
D3B6C831743D010A3C6B8BDB17761DE24B73C4968B327279064889F6E28EDDB2
37BC09B7D5267FF446CAD61AF04737FAFC79D5342C4CE9C57EAF521EBDFE41A2
298A204EFF0140FFA24500ADA544FBE46239D510FCF7137A7DE5CFAEE16F54BE
F0C2A3A58BCE872325F7C93ED2FE5596D61815FCF1BA2E35BF8C71ADED9041EF
3FD454352AC49F13C30A7CCE3136A9B7FD2620CFDDD943C37F5BB0D11CEF1C40
34C139023FB095159C914B07DAF6761AADBA1013A96CA5B321D2AC40984DD05E
850A07A75DD4725A2DC2DCCC31CBAFEBE528304ACD144F472948422D9DDEC6EA
61B9AEE73B85B565F09757E27276133206E075555EFBF7C9160D9C64C2F316DA
45CE13DE56B61D281EF1620D31F787F9AF97632E52E07948A538D78F54C9FE42
9E81DCD516D7E150C16A34E1705BBB94A0D312AB276BD360313C446A2A4527FD
33D88F46B6A0B8A6DBD5C31D739C3B77BD59399A020C3F9A473B24B9CD79CB9D
768CE10B98F57EAD2B3CF869CBFF20B7664DC32C70C2C2ED1010213B892FAEA4
5BB667189998F6B211135A801608083B42FCBD27A21C2BBA14597E68421C4623
78EDCA119B37A8D5ACA1F832CC8718C94D643122CD72B32C496031FA14F3C6B4
5AC14D74B507E4B47217055162BE8DA3FCA31FFFE86AD498161EF51E27776519
78D0BD72233E26F2D7029F331128210AE0CF6A0372968ADC3FCF44A586AF23CF
D8EBC9263E2C2CDB23C585948D1732DA2440A5D9429979D1AA78437B8B27A550
6D448B7CE2C955A49D1FA27F45254A01993EFAC81755DA1F39037C4E457E78F9
D612E61B7DE4A81EB83A343C03563894B6F70A8D4E3E29C0C401B4FA52FE4A89
31245FC62A88E36AE0FE0F5EE0AF07B58329BA1838139C27914369DFDAB0BE2C
3E2BB931FA4E7AFFF8335950CD60184A98E395C47AF297C759938EF0F4A8E544
CDFF68DC3A6D2E3743F3634A4EDCC4C45A99F3D44B21E079BF5E0D50FD822B04
AFE06B061CC4FA58BF3F4573AE494E5F8DC23F0F1BA1F532E08379
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21BD247CB559F781ED48E700C7C6818380E335F5
C15409940D60BDEE0EFA73595159BF5FA6EF014B844C996C73F53F63A48C7F4E
CEE23E1680B0037EAE119E8C5E67E32C964A18B5D20E9DA6FA4E53156DD528AF
830015D7D80E0A7974FC52EE48924BA4AD2AEBA3156D5F5916537207EB369B2A
6B80A8A4B044164ECE1C1FD5A30B240DE3246DFCBBD6E7EF71B3F46D35AF2EC6
76BF005985FEEB5D4A9ADD84C49132594E273D0A94C8C2DE65B5AA436EFD8768
EC53F2288DC8C1B20D1AD0FD1CBCEE7CB7349F8A7410C5BC584A6FD6CECBF3A0
6263414BCE81888528B6D00FD524B3E8A9F72055812C6B34B53A27A4DDF49EE7
703DAF38098846BCB32AA54EA696669DC99DE3BF32B96E7D0A4107DD5E132FC2
4DEA28F304E91752899FA8BCDCC3D498B5E50B2FC370906607CC7EE79F2B8401
2920F318C7C15BB0A7ADFDD2E1779F1307346D19833FB655D41CA42BB4848ECE
46F740769FF65FC3860D88FA7440A3E6197359BD222D0AD59143180A4CECFA73
BC65F0AF65086878591C85D37B4521D9ECD654E53B72647D9CD0F6A9D09C62F0
0720E1966B4081CA48332B5A5548C8E22E9F467B553F5FB957681C7400A03D95
765C079FA72EE85F0B8D0058ECC4E243CB3A58D039174202E3214745BA472D39
0D3A037DB040BCE1683EBC8F2B43219E7542AA1E1DD13BA42349375524621539
25BAEFE15AAFC017BC085A39BC7B106A1F859A7BD0B76050F96B980A1D82E91C
8499E6428AD036B3CD6B79686A7C4E73978974D32CAE118F50E58B83585E838B
F4E9863C2CAD6DCD24A4624B7CD1FEC6C3959F468CD1B4255C64F9D2EB45F8EF
9429592FAA85AC8597EA11744E51978E70B904A3951125732EDCEA48DDD97C53
A8F04B578459BE837850D6934AE573BA98F74DDB67D8A51D8B1F32AF6343E120
7E4025C3ED3C1DE9279A84666007EEF346ABBBB595895EEC0D2CD5FC22CA7367
9C7D728D563FD9373F9A73FD65C7DCCE49F33AF47100F186E2167F47AE4AF8D5
5507BD4F5248E2F3D4844F347C437A96608C16A5A0FEBD520F4825BD43276AB7
121DC785530054E8042C8C1A11B851C8A05112A3BEA36D14119F2253E207E571
A4A3B44F4554F2C5C9155A97FC1234168B7834FCD3A034E320755960CC7195E9
17B28623E3E97377B8873ECC0B367B1EE6338ED8B6BAF3B6940060B2898E52F2
294D910B6CB854B2612BAFE4093B34CC37479D45096C7A4F257057104EBB60B6
2D8A13BE477BDAE8844A00CA88F8969D8D3C67AD87A413C43DEF3F7438ECBBBA
21DAD4032A872B82D007FBBB30C4539A8F3A9C29E91C5FFFCBB362ED6571E78C
1AFC9DDFC00F3D4719A443A92A4B5E8C15D3C62B20570898CE513090B464E992
6E9E546A5975FB3680EC051E875A51AE1F040F16C8596CBCD588352ED300D2FA
7A665E283DF5AC4A8CC5B35F801620C8267213204FF4CF26630B2229F8E6C325
46B238FB77043B10159B75285D9F688B1F4955528BA4B401F6D790EE7B593FCE
9D718350B3F55B21626241291FDB61E926709F0F37E15456CB22991B12A2D81A
56DDD5B5E8671205A5651412307AF69D6CF4FB864F680FAD8B5978D54A4F2461
0B306159EF617DA6770C05C584D5F63C4253C69F131115B3E19DEDD5E9C073C1
1E78B75B8B02FDBF02B83958B357DC349736AD280119D3021EA6912CF6DE5935
F6DB0050916BB8D6FEF6B88204F80A9FDC4BD338124D42F81C28BCC034DBC34E
085E785342EFED266D3DD8C927C79180EA09A50253D1F221A89D8AAE3EAE13B9
BC77DDB41426E77592B362E6BDC00ADD8059A5FAF22F14376990C2B3D23DED0A
8ACAC6EF43BD3CA50E77F65D8ADDDC0995833AE0B8065550C4435809AB0E7BAD
8EA60AEA53FC92BB22C1CDCBF71AA8693AD1B5645F4D2BA309CD8D1D138A169E
A9F2BF2D84CAC150172BF6CD594D6E6284921C8C72F6E3B2E5004AA42ED974B5
725153A83809446DD6995451D8FE9BCA90B4F17B2355AD4F895436AD8E3499BD
1FC5191C9F98E5465B85B62BDB2362EC179C20B200846737218E31559CF4B3ED
EDA81A4DF29EE5E868EBEEAA1C38EF752DE7D1D72900EE63B66FB7F5422C7025
D260EBABB757FBC0C63CFC3B7ADA0B72980E67CA30672DE0611B26F2B8E056CD
AE49074AF8FA0D43D959E7DC096D73F65B0FA7D0BFE3B4D0A48CC309488A61EE
0B180432BC9F7A3066DA73086B397BFFC63A4D20E587F7F3E1A9D310E8FC51C8
76EF324F692F497BC245C84BEC65F8751FD1E0EFF07B9CFC3B3519BD102D2A44
48406F86212CD368D5314CA5524656A9A0AE1D14576CA906FD6056B8CFBAF4B2
7E9290B03CDA6868BB44CF821605ABD36227A57D8FC53F0B755A375F5CAFA913
5CC196950D6823990D6B91B81544B07F92F33A612C3ACC7633E44F553B5A2A32
23F8E8556F4227DC9682816BE8CDAFB0A00B5A389833B335992A26AA2E844B9F
25CB92B9A22C28C373D344841CBB863FD8E4E1F6D83D4FB94B5D930783237100
99529F4AF2F9DB87946CC030C17657A7980354F77BF6CCC5C99A368D5E2A2F0C
C9B4E7ED81F15B64DF6A6F866967CEE82FCDA6CB721687189A89F65F8DD1F58F
DAC5EA6C8BC56C899507618A87B42CBDC9D872F73E2576284B22A453636A24A9
EEC6338C2273A47AFF161CC3354C09EF5F389A0B733A08472355A1D3A3829DFE
73AB72D9D04A7D6DE3BBC580D7404015B7ACA39D8B4ABCFE4EBB6C7C2585518D
EE49509A8ED679056515C1AF220B82B2D3D57D7722A1B2A4A0F7F6D8B8B9A030
68BFF43C8B73FB0383751B74C0E759920395185EB48F685D2FF11E85525B2F69
D82323FDC64046C65E3C526BD44F96756D2BBA3404BC6A25BB8F6BDC19015426
F68EA7F9E71A6A73B255EEC6D09DE8B5D3C45A918BCCD35ECE1337DC4B4FBB2B
5CEEC78A182D35F5B5DA0A81F209442280F016734CC7AD5BB562CE1D2A1150FF
7951BF611CEA1F4B254C8F93022630E402232851DF4D7C82732C395BBB1D5280
985DBF13B4780DDEA3A5A8E7811CC142FC81D1F4C0CC87714650CD80D23EA5A3
4B8D5EF6252B8E4A9E1C5A5169F04AC8697689931EE3472E96283B252096F7AA
0714AD167EE9875AAA0034A78ABBCCCE92270D87211F55AF3B18EAEFA240251E
2864B11841BD97A3F7F934E8D4E1A4F7E280B79C935EB660805FE28D07A397C6
F4F10BCFF6C3C9FEBAB6EC73D25DF7D30BCB727C32DDD9037C79880EBC4D12C8
98E32DC28AE23AD332357F5E92AC7B57137873AE88D40D27E8BD720772437AF2
D1DFE738C9B186B723B299A936ABF73C6BC318EF55B54FCF84E8420C2C634649
B5A2CC272837B09EDB535281548C36A5C9EF6B0BC1B1E120B5B8FA36670B1438
E76F97F0101BE2730147F4F37A06717082BE36A205237FC9D6CBE2D7CE08EB08
5D299EEABFDBDFF58EC18CAB78C27C68016897C740546BFD0B214773D46FF63C
F06FFD5CDB09C58AF1F3FFF381BA06F53A7009FCDEADD01CFF622F5C6763A92A
F6F2717BB73FB3C7CEF1E769D4FEFED1F4A994FD05DD3FC02D26B276678CD05E
FD6EF6FB23F8920A6BC38111E577BF1807010EE4AB66E8D0C45718733EEEF10A
1C8B44C75D9E7FD50EF66BF4F1DD580A9B0D04F36C733EFF49721731B2649248
8BAB5E1F3E2FAA54D8110A17B1C3DA8BD683AD7D7A27CBD0B493367C1BAB3BF2
EE7AB6BE273CE686D7DC1AB576C8C93B7A9900A08CFF2F4F59F75FD0350E2A88
EF36A2FEF9AF8A05EA70B1D2189C21E3FC2387CEEB0AC002C174E1A50B7009B2
081C4DE68DA37A62E7E081078AAAEB5790D9DB0ECDC694C0A0B8127AE3FE4D9E
FECE5579B4A0FB0E105D60D7228F1C91EE2D6FB9B94E9DF23C1D07FB9A53498F
A3DA42D7FE8DAEAB090A53E3AF3FCBDE28D0EEC148FF48843F8941E7AD3AA34E
E1290D0B0309D7D97069E9178CA915B8B6308896AC5013469C3DFDAE7AF9F3D5
3D8788DE651443E4DB4C7BEBA99F7A8167CBE26E49BE5FE61D45B5D6F84330EE
9F92F76660471ECBE9E1B82208B01A2B0E807C8A43090FB70F146C76DAFA8F74
70FE412854B227DF2E0496E102C4FA87DC44FDCB15FC3375BF4FF8992BDDFB45
31330E02C99A7B6294F4F8CCEB7E4550DBF17A2940A8C36962BC2FC3A6A0FE09
FD6ABA8999EC57E95D84CF9F0FA89B1D1719E11D1FC80E1FB210CD9A8C22FADB
A84E0ACCF7AF7FAEC6E45391608EF15EEC53D10F9906C199005B8F794216517E
AAE3427F1D202DE337E74DD4026E97FF2A12FDAEBD8F8B5E268FEC8EC688F714
7DBCF8F39FB84B824231ABBF3E95A888D6447A160AE2CF6568C9A57E7B274A16
8CBBDB3664B9A391152151055D19F2562444FD3C47859A5D50C8BFBF47E9A19B
639DCEF46669AEBD163A849B058A8C6BA92B95B480BCF317E49DBC2B87525AB6
BA44C229B18A904CBE907A0CBD89E87FBBEFB5CA211395B28C72FD4ADB5445A8
82A3EB22E3422EB89236E1E241F08EBE8B3EF7FE3444635406CF60DC02A7716C
FB9DECE02DFF58B3F2848D7751D3135CABFBC28534666F514DB921697F9D9FF0
B2BD415687124C8AC11C4F8026D143EFC02ED8BD1AC2B96AB6B0BC37A23A768E
B5D698B3374650DBA9709A9A1F8A67E103632B1F0420327418DB0F5E3923467C
05D2F57FCF00CA7B5C6AFF8BA53293DBF97C4E7FF72800B470F69086D1D22ACA
98C78FEDE01A7AAD5D5495FED4BB91EC4B2B4A1B995B88B209B0900097189688
B0CFA983FE0C9C4D9AE6140EA2B09FF81FCFFF3EA00F107E3B151BAFD2327228
B7B902DEB084FA41428D15D6EF75E26BE4B0E8B0F5405BF8E7F0C64555B29ADB
992C57D2D204879AF12FD3CD9AB2E58CB9634041BD8CCC4FBFBF8B4E119B2CE3
3A2C7866C97767BE5253ADC946CC68B5DFA8CD1DBB2012E0EA444924C94C7734
2B00464418DC024244637BB003D7FE7A447A9A1B32D93164AE965E6EB5F59002
20FE72248FE3A6380D12E5CBCFDE55FC9AB1CC015C609B315ACC4F7B5D560002
65B54C3BBADBE96B174AE01822A9E0A8ACA4CE242F1743765A558E6D3876304C
4610FA7CCCC2E344BAFC620946F2641AF34C70CC839F5DB46CEB74CACB293FE2
3D0D2C74A78BF3BF8368BF418BFC6663AC4B028833926E274644F4C5D18E9577
DE92D32FD513BF1821A668B301120CED361E8986B789FF758D1B4AF59FF5CD16
E759E1C3043EE98CE88289207B581F3DA3732ADA2592C44BD5E024A3201B4DA7
CE2B71A6BCD0F27FBE6565DAB3B3AD58A64A7EDE97DB40ADF9BF6A01FCEF26CE
5A7606AE3543A98F5A41853CD3FB01AB1F6655C4B9B02C4E2E8E13054A731210
DF3591F144A9DB591E2D7351AE7A83E803C61EF73480A4F9020E18A496250C81
0853650B14414FAC37B3A34E2C1CA5A4367C5F8F0A99E05CC812548DE99D8304
BBDB8172FF911C10C39E198A05429F3AB62FF7470ED9AB199138664F32CE637E
78A1FCB3F11769DABF2A0A2EEE072875ADAC6ACF13A31E6D1B539698E5C6EF96
B19E4B6B06AAF63117AB597849D734B710BB4B0E89BB20D5A39B23385CA876DA
0B5E89DC692F852BB697DB4EDD20738838C019EDF114DC86A809DC1D7D0AFB60
3DC89D789256E7B2DC692295F1876366076CA0FDC3A2F26A639CF3B71AEEEF9B
CA1C35E8E5567D483E2E8C05C0592171DD91AF3491B37F4FB917184A4030341F
8034395A1BAA86077DDBFB86A11B7521FAD2EA614F2B3F382C3E339B29EBE15E
A4C7BD30C73E7F152E9A2D96030C85020496E05E3151C0737C423361DB972445
723D5892408AB34190D3C969BAE1A8FF2CD437A4B0BA057820E174A6C8F9BCA9
9FB6A34D45A3CBF28F5F1DDDA31A86C22B18B08C6C811B3EA3F5D23BA0B05F5C
32363E8FFF7C7331183FAAA8D9E2C8B4841A7D57E124AA239A466D9339E25CF5
2DC679F76F34E0D95377E0D3F73371FEE7BF9EEE2FD8134707E2BECDD416F7AD
733B010C6CE73F0E46A3EC5D297AB11071FC571BF0808BCFE49F93B6213A73CA
0395EB601C7B9F3127D1D8C96C34306A3110AF1695F0EF665B906D6FE6BF97BC
5A0C3EBFF5AC3A8091FEE78CE10B12B100AB1F14DCC96AB7AB7403EE8F20742A
415DAA0CD39461ADD96444990101EA6920D25EA803DEF478A1EF1065CC453680
79B8000D625E828938D226A76B012F5925C5DC14AD537AFEB100F78AC9F9FF6A
9DE9A3E5787A8C558FFC5907D502476C356175D567B8BE8693B835B72F954CD3
542F80E72EFDC7267BEFE151C518A6BAB96EE0F79E193D563D0D446EB7D20FB5
673352964BBED075B78EEE0CB6856FC00801C400F37D9FA3ED9BEF89C3950435
FCA4590547BC2006AE86B96784C28130E1591A1AC9A211339A2A90E91C463895
BD2008108FD2BEB48931FDCEAB94EE2B1B218C8B371871AEBC24CFF24B7A084B
CD78C5F8E086E03D6A47ED8C069127404EDCB3FC4331396C4ED83C4E4EA79B2A
A3B8CC62857041C8C673F5544E638C6E1FB46E5C4083619F5CF7C0BBCF2F6C58
4AC2A078F20FF7D0A1154385D0A04140B19AAB8C9229F2CFEE7076395E67C3FD
E97BAADFC61C80CDD60142945364ED2E391F08E5F4AA217A5B8C1B6496B871B6
C70A94A95BC93A855041CD8497A7A3E9281BA84F9808A3997001F562D577F2AB
7461609D1E612EE716CA4B6A91B8480A2BDD0EA888AE47A9F07827C4BBC94561
D803F3B3FBBF28860925A7658E1482CBF6EE88F2E5C4952FF8D47D723DF8C414
D7511069F5C651E1B63297C35A80F855645E216C18318591C0ED5445FFEBE4F5
9AA7E2465DF8BB2BCFF9F57758087B6BEAB724786E2E96B8EF8C66BF8DC253D1
562655486EEDB55DA42E27F49E83271B74AA1592B2C3EB3FE03DB61E70AC1C64
1F740EC5307A727E3C1682E8E9049D52B173657EAF333242F316A038400F81FE
0DBA9F090680F19F5F9D290A356AE84363A61124EFAF30F72ED4809F13B9F879
B79440CDBF5E4D2DBC00F2837333C9717DFA9B5FCF18891D5C095F3C5A0ABB6A
2FFC4C4820493C068F8192F4605E1B347C77274565279573AFBB26A96D24C7EB
2FB795565EEE35A7F1FC887554141A58B3394A9BEEBA388195AF6B6FA5901C10
705FDA479E47362D3916FE46C254F028076CF4C4A6CB2F81815B39E22A8BF0D9
878CB84EB17E62CF33D67E4A606F7B87EB3322D57784BFA931A98BFBB545BF70
FD674F6CA0F5DDD6A456D0CD4B82F6AB7B413FA685C17A4408D49C6CBC2C0E86
E4DBBD2E87DDE05F2E405D75F3605CB43381BF4903A73585D9CD9D7AC97094E2
797BF8C2D534E669A162E422811A9046778ECB408575EA3871CB6E61B0E55481
C20455E68DDA82C880AB705813419F3DECD5A9EB992FF9AF035534D1E3A6A7C2
71AABB215B8632F02339D32BAB3525FF5BA14C13C2C867437D075A1BBA4BED76
6BE1C7C467C2C6C38A0C059AB65F9A9D03D00761909C201F12ABA8F356111E4B
E3D76283E08980AC957C14378481725CCDAE7EB2C9DB626D644130108E443D62
43872669E58880BB9B339070A1E8AEC27A8E8B2E0894F2E7ADA154D3C9A5BDE2
AAE1431C5152331871B82BD7282AE6D469B1819D699FBF569214525E6A5173A5
07B9CAB55B2E2E72862B7C96ABE807EC5E2E4F2855E24A024EA8DE8EB3C646AF
463AB93563080FFFCA9677224C62B269C210E7B090DB52FBEB4525101C45B5F2
A8360DE7B6691BB5CC32489C96C5B73B1CAD641481301ACEF76F85FEF626FC9B
C53A430F7D3C695EB2F001AB406FF368ABDC4301154B92B726F792854BC1E7EB
F5151F320283494B6430FCDFF92FF6602CB189827BFA57C50E0F234F7EC3AA1F
D6627FAA68EBE49BD9BB2ECCF61821A9C926BA383EE521AB1BC10685430C9AAF
38FEDC4016FC113D992C5846C165BCBDFDD86D8313CBC50AA9270BF7C049F577
1DE08DFA689B938EC8C5CD386F9FE23F833DDD0A093A7DA33C37DBC7DF8DFAE9
AE6F1BEB1533A83316CE2F4458DBB3A8CDB958A34EC6C7F56F5A09C1257CFBA2
AA75B2333DD00115E690627B88CB7A89998D7D9D660C6D0D3450BE35B01EDA33
B371BB7FF70F4AE8F381C77BBE069391DFB80BD422AB9AF931B273A4463154AD
EA67A9785B2BF20C795AE2A3D3E67B44A51C52379C753FAD0D978D17F6692737
8FAD9250C3F43F937E7747FC83BF9DAEF674685D86EC137DF2BCEC59DC771817
17C7A97663DEB12FE89E3132B897867506BE99EF40064E58637ADB003F307DC1
DBB21608B9A2A3152D2B93986A1333560CF4C21C18D3ABEAD45DFB172B3B29C6
F2F0F5FF007E902BC69F741F1C40D357CC304F6783EA2F1D01665919371F7B8F
5D1711CCC0A8B699F3E1DFB5A981EB730B1CE842EECCAEDCCB42C6B03B12F623
0BE1E0FA5332E61B8B7B45FBB5A5BBEC222D4A35D3BB0AB14C9FC66858D3738E
A8253B72688AA16055899A4F43A8D83984BFEE7C64ED558EC081607CFAE96245
170E5B3F73D04691034812DDC6162F34CBAC649262791E67236C67F7BAAEF3AF
E8FC45B9CBDAD8A157AE876DBC2F6D838CEB488F144CEF59C755A25890276C02
0D0983A519918AFF8716FB942DAEA7A0856CA4827C23FFE28EEF3FF5EC6E4B41
9A78E176F9D632A93F2BCBF65DAA8A93776E4E5C83522F663F74B86CAE4FF958
277A4C0A871276B9BC814B56D27F516444DF2672DF6276A837EA9D6A443A5CD4
086E67213B705697767D1A3276BCB9E2413B7A20FDB984B8D89AD1328B2BC61C
2D6DF55B079CE785F1F692C24D94E5C173C9FFEC1D8034C5C18A7C5A00A83F9D
C93F86B12B626EC2A5E464D8D61EC2804443C9CD917C6DDCBC9C99350BD2601C
47206361F7DF0B239302D40CAD1D8BCEC1F66E04B143FE7ECD3F6D501219D5A0
85CB8658C2D6337D4B9E47362DED911D5C5933DDA8C57F419DD10E188B0AF52A
CD17FF11CD94CFFDB784C25E602883B114950DD2A1F8C25746902EE7317C7AA1
66919B08CB67E01179F69EF01784E37645991AF331CCCD4B8DA3C689BA1CCA96
6805B149B93DAEA94257788497BD87258B15814D6B843C18E1BC78CE9E136F00
D4F9C286A965956E80C6E14048F7BA905C1CE1033DB7CAAA73837A3AD2B8A605
46C480AD9E0075495B7CF1BCDE44E7D892FFE38E05927D07955EF537098C10C9
5CBA9173D9D5A1CE119C061C9ED87E1D57D18DF49F0EAA316AE079F374F067F3
DBB26F49C51D8C867C599C6002B4CC6D64B71B78701F1BD1D19F7CB3B18D1830
63EDDC26B45819D276C357546996C6520012FCFB839D955834C319BEB9D850B6
46D5FEFDD4D17762612236B834C39A4D7D13E6B4E1CF09D04179C07AF6C92D40
C39C23EFDCA7FD6E76CED1ED99DB81D94F45C30E32084E84C68E08931731ACDB
8B2E4A855F4A3D43D368DAD2D919A01BA376794B17CE391AD6DD9EE2EE3A7DE3
317F6A77BC41FCEDEA86CE3ACACBFBBBE6FF9370315091FC4830826222305004
7DA40C36296561669C3B1CC3B6810B30F91237E72436B7BDC9E30DE6CE793715
D75AAF59B2247C6A85D2565D7434FF0E0752D104FA14EDD42A8B180FC1159ECE
D35A0FC5472F0B28F22978DC289313C96DADD7A536DB18E0158A73259BCBF52E
8CD84CDD725F9AA3C06DD389010A5F0B840D9B9E22A9FCBA2908DF3A4C1397FD
CE6B6EA555BA97B9F935E0107780F6FBE8A71B6CE0F5E876DB08619481D583B1
6A50501CF499D8E51EEF49A9FFD04246B4BBD5EFBCAD940FB136242BD6B5935A
1B268C3546C1F1B1467407E2FF56014215FA9968038E2133DF9DB93C54669628
26C313F48E1088DCDAAC88170FBD487F7AD6D829766FB0C0D5F520786149F9AB
8B1DE517C60BC4488922EEA4D008B69E4C7F598BE6B8B85F3A3191BCE2421FEA
66621A561647B487422C4320829BE2523F89F3B19308C7344ECB308395A7EDA2
E5F0CD885A65F27A055524876CCE41E148E490AD57A71507A6001113B12DECCA
2D785E1EA19313E737818EAEBC41CCFCACF36F5ADE6E0E23BB84A646AF0F95DD
E447B6F81571AF85F7ED7D399CE2CD241B22ADDA935A78768495F4A0872C8F68
D03B65860E7D1B7C48A7FD88F15A1BAE76F4DFF8B5821ACAA7680D2FC108F38C
59A9F4763F255479D8E1AA7A5AAC96CCF361A04973AA6D44D2600A94EFC5103B
AC4EFB8F017EEC84FA30A0F1C725E4FB6E07D5C7EB1EAF02793D343D6C0B8DE9
209A630C59237DF476949F27CE73E9160817A4D42A8AD61DECEA3816DC24E16E
E3B0EB60569DF037F012F62927A0D74E8274593E264BA1EB8855BBFEF86B9163
FEB5A8D23664AA38EFDD205AF22A17016F3A534089C953D105E3375437DF852F
ED978F55FDAEC8DD1B49DA90CA72E0A65DD7CB952610A02171190ADF6357A455
41370030697DC27FEAF7E37C8B985D783FD6C1111F18BF0A27FFE546617BDA40
A5FC47B9F74D7AC01EABF961111A871F54B0B774CB2D07E5999E8DBAEB9867F3
CFBF3BF5A424524753B9126398CAEB5FC3A24EEB9EA3BC0539533A4D4B36C7A4
6CC9365CA8D431076754A4D2928F16077969A6BC5CA81B8883DE9B2293AEAD56
7164091EB0158B76396A081F659545612CC46E0787589152F1D2FDD8032C0C32
49870E1FB046CB95FEF4DF4BDE466870BC33F58CE30E46FEA8BF26163E0BE25C
529E2127BFB4ACB7E2F2CC6CEE15EAD8573454DFB4BCFF43AF84E854B65861CE
7FAA9EFA5C0F75419E6D7BAB9C8526CD1FFF2D00EB7A5BB7798093232AD38957
DFC7C533821F54536167D59D18C52525DD3ED30691EF8602CBC980797BF6023D
CC01E54E0F85287323C37C821FCCBA1DEA20C4BE1B5AA055FF8EDB02CCCE4407
C72774F0E9838216CBC34C73A413C723CEB82ACB5B0046C203E414E556FCDF4C
FABEAFD5D328317743656BE5A96EC48ABB70CE11E0F4BBE985CCC006D696F01C
97EBCAE19AB1A2BAE69535D5F165BD9D8B9821F298D645F19FBA00895D86248A
F2F2C77FB558DBD6987FAA54E9C4AE3CC9C464B1FAD913E403AFAD9CD132894A
B7AE4A3BFF8B9F6BC5F6ED941F2547C6A25976EC69FFCBC3866DAF29AC18BEF6
44E5A010E3F75EF5E68E587971F085B6224BF1CD23E761BC78E60049489A95AB
871795227CB930267F0EEA9BDA2C427E5BDC0B07A976A2D70E39FBE20F5F8F20
072CA552C6767DB947022AAC2A784E35AB90126937F491E8EE22BFB5C70BF0ED
4D4E6E75596A006CAC1FEE60F1E843D59A68AD7AAE86F4A609F27D826C6A9760
E5ECEA9F1D1094E29D5FBD7823BCFC94D1B145B35BFF836B8B4B7F8AED68BB8A
F6B26B2855A33AE39B95E7218F5DAC085920AB9C30434DB33D7A56E47C2404AB
CAED0F9E98AC23152C27ABFD80E6900C4AAA1D431330C9AC9FD853767FE8A0FF
991178DEF3DBF7721E57632BD438AC0C045740BCA2820E6AFFF1E13214906BB3
059DCD1728AE6724360CA5E2DB14A9C2E6861B1674F74A4F88A6F7A8795A4BDE
BB804C8EB6D7037AEE4AD68FB3E2DF3F09323576CA3CD5AF09DD48288CF569AB
93C478A95AC63A0C68B72D294112D0992F82DC801CEF553E491844E36894416E
3DF1D2F132E33994B1B68C16EACC723052F7710963CAD0BB3D4D070A5F9505D6
1CA6E7892AB8ED669D8696DD0B1EFD5D3886D0999634BBDFC9F37CC41CAE2F2C
0EFB48E7A9DC280B3C3EFAA889644E2F90CE914C8D718658762B0EDF82A60946
F135C80384B80760E01B4D171B959605EF7A898922EC2A24A2EA9346A656ACAF
5FBE87DB9A19759F2A0D773696A45B7DAA70ADDEBB9DEDAD36FFC5109B2B38EF
8C02CA13E28E0AB1E713E965671AC1539493DED9E6F5BAA9E6A48197171B4E03
47D5C86A4963049552E96E4ABE89961873918949FC8F7F811C9593005C792019
C5B1D5CCDA0505615F6F7996A36D9019002C631642633C75C28C0888F964140A
AB4C96DE1A54D65076D02FDFB74799A272B572A62E14808791090BEBF73762ED
F346CFC1DBF1337DF90C826E99D4405145C2302A4FFEB5F63CA11F8504E60512
4AC5D6D196F876DF6DBCCC06661EB4A9BB38C2929D616548A24CF7BC73C175D1
C4195495D279862850A81E2B28006BD5A0131E100EF52E092CC70BE970C2F49C
E2AB8C14838830CBDB596178F69D95B3F97FD19B1EB4FA5C0BBFD5753F54BA78
AF68905D06EE06D77D4A4B183E78CA2917AAC2A2BDC68BA5B7DDFC824C81C37F
A49DE29E7802EE06E7932FFE2B33255B5CBC1A6F8E0720BF53361CF3B0578627
063359BA7276098766D9F2CD607FA05F3380C8D04199528A4D7701A04DDD891F
F8F2B1A1A79E4339790B3780CD4482D199472B21FDF6D7948DF19DD714FF0CCA
0B4C825527F41C456AC90BF9CEBC34D15E5DF036714555A82CFEF7BDA59E1F7A
9C3280ECD17AAFBCFE12CA9F9795DE0149F04D9C2C324DA93F4E8DCA0682A683
C6C6AE763CA422D73DEE52D46147696E93EB7A1F5A2AD2DFDD447D77F8B06B4E
19EA8769C7B72F3707101FDA9BCF8E0CB47DB615DCD2F75EC6106C4A1498098A
CDD42CC2C43A80DB88BA988AB284B4985F18DB1369C1211E04A085145B4FABED
6BD5BF9DB37F1E47E18A4539A6438E26C04AEA6C223A9536538BFF11ABAE218F
B60AEEE655E9E94155ED4B380C7BE793A424D9CE1E849D52D5B75958E2843ADE
D5163BDB11717FE7446CFC6A298A648BF17B2EE77A251043985FB09548A5AF19
3027783C835ACC5F8C6127C87C381D85EA15593F5CD90CF098B9BF4E22D149F3
8856CE194DDE7F29365A59C8D74928A387A95D031164D5A0B9CD57F9AAF5C051
03E813BA6177375CC674C188A72CD5E9DE30894F75F8105D6EF5C9DC29D79EA3
FD6AD25BFD716DD88283B361579EA6DD504A9B6B82CF664228855FDD7B012220
DD66074E5957FB0A3B20932D389770ACB7024A2AA279CF550881E6FB959DCB91
9DFDADFD2B6F06E17C9009E93D1072E0B0852524BE30F2BDC877D7783A6172A1
F73B7C0B8032FCF85772DFA6A800AE574E5596995266460A78F345EB4A80CF4D
DBB549C809D727F7C19D85213E9DA6EBC5DE64A9853F0BE3B99A9668D290E475
12D1488FBDE91342B78BD3BE61E4CF76FE86220DC011DE9CF67C8A86432A7828
78AABAE13EBD573C7A473787A3D4E157EBE13B29BD1FC89E11F2BAAF6F0F9605
9F24646BB6027B55C54D9A6BC6E451D0E5DB1F3FCCCC27A1F71872078E60E6FE
C8F6BBB1A70ECA64DCB89D36D086C2A11C2149FCE3D76080B65830332F67D4A3
59289108845349A3F3DEB264DF7B405E91CC3B76111EF5B65C43DE0D67CBAACC
A1249A15BCE586450DD7D257F78ADF8EB968563B53231655C22FEF1AD7BB91A3
C80DAEFD894A0AFD6801B1994321BD2B267CDD32121BDB8DE72223907B4E4F5A
F8F17E298DAD0C73A0A410A60AFA2C09BA5BFB69A967B2B9D76AC255285B95A6
9507DC864AA6BC35BBA1CED5292DB6BC341B5937F9B31BC419422D577C6979C9
817D36D35631083F32769F2CD70A2658568BCD56CF610D35ACC354409D0DE2BA
896BA4BBEDA04E1127ACE9F08AA9E2F6BBE859AD5494E3537716D39554780821
F1409D8C210A77FE9D26038B2DAAE2BADB3C2D59BD2888B00F446D2EB1B8D625
30805B1BAF7B8884FCEA3C0725846007094BC15E6CBA114A244E3AC7442021AA
9589F6AE11CABBE388FB03B42FE1137DF12095F1FBA425AF5CC7E0EE8414D0A6
AD51A118DB4E6B866FE262640A57C60446AE6AFE07A1C7E4A424C61E779E5DE6
2B2A587F2BC70B52B694D6CE65FB34AF4C91CA20145A51588168B5B4B45A92D4
6387EF659108460A5E0C98AE10F280D6BA0F7E501B48D0E9741B08DF798524DA
4A9A860C3B979C3EB8853C62382292EF82F31447D05E49D05E5EF9DDB7F73F1D
E408C2B7E0EA0BEF915A5D1CB487F455A073D66D3020332EFCDA66298925FC02
52B42C8875EEC570B0A4E61F04E09FB9CFC9CFE84A6667A0EBB4A94697E224E5
810A5CD1F3E4F22C225FFFA33769856FC38EDB83921D45AB99A4FC158FF0D89A
21D7B6E83B620D023337894DC963AFF863733382D021A2EDC0830CB63CCE3485
95D971BC95C8F9F31C35574DAED7903833727305AC9831C0E0C4EC457FF61557
E7B2D6AD8FDD5D928897DA55E4818125947CA6CDF8223F6DEAFEDE2D28D2F090
44AF1EDE8C0E0BD54750F62293EDB9886BC7FCC3E3B7BC9483921462FD61DD89
1BEB64DB6A5A41007FDD2AD9B6698FC7E1044720287F1D754A6C74000DBB50B8
E55D8B16AE05F623528A7FC46F8E30FD9D49BC6CF45D52B48729C0340D9E0FA8
F30695773ED5D6840F75729DFB6AAFB485BC5B4A51213A23C1FB422AF8B6CF41
A63B39CAB5DD023E49AB745243A6D72093898B566487C63321EBDAD3B1B4F0FC
5B10819CBA3403DBAC51296D4F38BC790229F064C005AE8902B641DAC1ABE4F6
F4B54EDEBA2EE70FF9F9F0FC896CC01DC4594FD298BED73993CA1FAEFF388002
7053B3C0220AA6CE2B3AECE386B95EC6D46F5BE0582A22B194AFDAC37731695F
09873ED786E1DC94B68F433CAFD77524164BCFD7FECAC42D9228E419AD394264
C1D006567E822436D054DDD03D9292BE8C65E5C8ACDCF7E37A89F9E76C54EC0E
DFAA0A8E2898A9BF05B73D79CDBE59656938618F381EF4FF8AA3F3FC2156DBA5
65792AA52B99F4CF460833E6F3766A4F5338A4AA1DB5F7AA39093EB26FA1C7B9
CE7BF93F2115616EE7EDBE2F36CAC199608BA62D56BC74CF6EE5E8B43E60CEDA
E694FD9D12B3BEBA1CF1DF70C3D2CC10C1BC4A96872DBDE9245C3A62EEEB8BBF
C9C90CF4DA8343276008BEAB1EDCF896EF30977F5500D92A590ABB00AC3AC5AF
B1964C6DB97CC675DB841A04756EAFA12274C7964C805909598CEBDEDAF6AC09
F754741A595568E88EEAA9508FCE28EF238BC55685664490C508CACEC3EABD1F
7A85BDA6EA98A4E36BB175547DDED2D5CA8B9B294A417F47F883DD81F60CC45C
611CA7D7FBF8567C53C1A84E4ADA8CEADF9620B8C1DAC7AF332AC03B7096C58A
DBAA729FB4E129B8127319991709A6076EF86A0D4D0E0BB2E2447408CAD503A5
28A21677C669F8994EA90A79CB5D047DEE04727673D0BEF3FB3F6C508208F729
B533146D41A88213A975090510BC6A5DEDAFE7C8822E93013D855CF66659495F
381A1FB682173405FCA365EC8B346DABFE3CABF6D18808EEDF87054E092EABCE
BE8FA4FC7B92D4748FA1EF3931BE2B3AE14E0B0170FBC6800B7E4C8B341F6E6A
B211458B4F77E345A0C26FA505F59402C58DFE57FD4D78C3582060EEFEAADC82
3A2E0EBEA9C0C917A3316E9154EE24D36B705BCAE999E790FB5AC5FCE6392849
4938A68156E8C1B1EB32EAD942E01C4D6DDCB0D7DE6198E47A289B293D3A0AEE
7F2800403ECB8E3B89B5C528BD1106B63D94B8CB4144DE51513FD0ABAC83554B
99B516B02F5DF64DECD73FB0BB4209CC69E4A1C2149F00E04A72DE8525FE9260
0690E088C3CCC27FC525597DF2CD7F66C94C33163DE48E72179988BFE7F18397
557B24002448486C3157138F8376E6EC34ED0DA62E87688D36DF4B64BCA5F63C
1120E85716CBCECCBA270322F48DF3A6489878D391225BFFD8D9FC293F895FAC
19E9836683257D9792A75C45E5861F924C76F385ECBAFA55B53FB8AD32133C54
F7FB9C4748AE79BA51F8D751DC1D038E233D553DE4E818DFBA76DF1A55834A4A
7389F7D5F19090F74BA563CA0B01E4191B9068414E6A0BDAEECF0BE2893E1788
A24553B263F13696F6F69C7D7EFF5329FD96CB9CF5C45E7951A5F93A2090EB24
AF6FD3AB8DDAE75E74D2C3C3660FFB813D50E0AD349D208DB925E4D36FECCF7C
6641068756A08F25A7E513BB8463E2958C428FF0D063DC7716F492CA2061516F
8BBF6ED596406F0A7206B1F1CD420CD4822DCD1A74FA05F03F65FD301457FF5F
7A9869E98AB838B4090C977ED035039E10D4D8D615545BD1DD114559E90F5C49
E06BC66CF50FECFD55F1243A08A61D12707169A321AFD0337C9F4654196DA5CA
2E59165766678A0F41263A1ECE66249588C7D8EB84DA8E39F7865F937B88CF7F
858003F79F1A4C991053FCFC5D99E903B6112307F59D21E016F947F75E72569E
3E5790B424E7CF0F2E54D7911CB5A0EFB12682AF8BA48706D3BE223E0288E32D
A507ECD94C77183FF6F60DC3156F1D34587809528468FDA7149A40A703D6B19E
4A249054D56473A3E2E37ECB71F1C4FF38E6EFA672C6EB760DD7A7BB6732A250
C60FB78889180D23093A4CBC48C78629B5EE4C4AF35C7D414572A25539552D33
47296E4D68DA875CAA31C91AA4AEAD7B9F33CDF81F9F11E5AAAE748F0DC7F22A
E9AC15A356F7DD586E75650D34C961577F8597620AE0806E1E414FEFE2F739A3
003F59E8FEDE163C763EC7E1FDCD0AEE77277990B75EC58DB3F20EDCD2835D0C
33D4A10EB155890139542C5D0BC65A880827D1FB854B24FAADB3B50DFC0324FD
DCFBC51AEB339C916C78E29197D7AB784CC2AA53925C41179BEA0E191B903694
F5AB25B44DE0AB349FFE959150BDF09D8F9C164DDCA990DEF359A71107960EF5
039E706B6B29A4E8CAF9B910F57173C9E4E4B68EC56CD6EC691D8C739DB2354B
127FDC0C3C3C0C6834185DCA5F9068A900CFCA30AD9B67D364C76B5CD833C2A0
CCFFE12A6E0540244A47ADDA75DABEB8FDB16B11294303381370F9FB7419A550
1ADF2D760BC02D0B014F7DF5B0A54FAE5524847892F02C0D066CCC8BCA8F4BD3
835E7A653F9427E4B07FB80C4F9B6C0A13A3F4FB5E2C979AA8793CC130ECE71E
B525D219DB6A2B2DC8457498864117BE7829A3505A9E9354A7A14123297C740F
8C6007C8146E58E361F57A96B811CE9071EDEBA58B641D44DB34307770DB1A91
F6521A917EF4F7E9DAE553A04747C2E51E775E41AE9EB996B7EC7F8A72E44E4A
C512C68872B1DEEA61AE6FB32AE7AD7CA730F7A6FE1BB4100B3B2A3B93DFA181
ECF912F677917E2040F9272F0F900E5600324DA51898673FEA679F6799FFDFF5
E049030B5245F12FC21B78965B5E6D2D76ADD9C1C82C455A04C06F77E0DA4408
21B3FD8E979C452922203BD7C0AF04E174F245008A269C2B19DD6DCD64C5CA63
5E4A93F7A9A962B560F07F292FAF4ECBC21CABB3A201BEB877322D79C0601596
246B2A7A6AFAB165A66F992A3E5A926AE52914A4CF4D958EF68B71F57420EBE1
38B22D4F5E8FDE8BA8DCF4FFEC679E571336E8615B281001504F5EA288951F8B
673674FC5E0EBCAE6591745AF94CA3C282E36483428DA08A48B1AAD488E1F796
8FF02802DBC233B9E0A6A65A31A1F061CFCCCB29A791F011D6F1289C6534BC02
32A9BBB557829B225D38E7717786C921CB1761D85A6222208CECB77D68988DFB
F3A046E9F60431C40697C9318C216AC223EB894B90712C85E6CAC2CCED73BEFA
B5169081C60FC39D767583C14857A9ADF7AA08FF4455AC017602EB6EC0CC9F19
C9C9A91E8C945AD25DFB5A302CE4A8843F5E5A5796802E6D395EC1B93225DDC7
06DA9A1E3D93764FB9D71FA90EAEFD62F2DD47B6CB273BA454D9FAF9B281E9E0
3FA48E8EF854C091AC035CBD330B42545119B7AD09B1C7189C9C27415993C389
F2DAF3AF62A3637656F17A7E2EAD47DD47C5B8A7474B72DDF33A8C7EA481C359
1F547A6B587DC228B469F568D7E9D8B8E638FBE498C1144BA8E2043CA06D33DA
2227516383F389AA3370F6860D35941B91E554331BBAF4ABCF7A93B6FFA9EADA
47723036B2F0B9637EEF0E26CDB2D4B3C14A35C0480914183AB4785F2AE88B1F
5DB26953954E21624F3E0715672C2CBAB1C48717F9860C848F8BA18C74C3D0BF
FA1794BF902DAD13AE255F873677AE1B51A5898D3D9A56407584BE4C9162CF9B
441FE7A05B2F9B6D148E4D2466A793F8FD52710172E1D348C064078C86320628
E1086FE524CEE50E977BA142F3BD7D44BFBF50959186D20201A5DC545D80C9AF
6A83B0C75CB780DA5605A178765CA172C3C4E028451AA3EE13A724E37C202FBD
B2B57F43A4011636B605D18491F62D2B65E4A39B8B92FC03C3DD803B54F3039C
4B30449A8D4C4B2586F406F36B22538375E88E09F174FAC1E09678040BF1193B
BD1378EE739506F39A10B93A814056CB2894CC604434317908BA958BF757947E
AF0F4D88092A530E75D8C189CAD18002E69263710A711E129517C1145DDA3D8B
03D0F450634FCF751C45899DB2F5FC7C488BFB5E607BF2B045D0FB94673F6300
41DEF08D9B13111F7DFE1E84321CDD24FDC9F25CD98DA122FAF25A83C0A80022
E03279DC612ADA60CC4AC2720E0EDF6C819E2398CC38161F8A5A0784E1B4EA0D
FAE8F98257AC8DFA869A7780DF4C11A284673589E8F8CC6CA734A4BED268AD6A
56AEE2C52EBF4975C83C83E859B4C55CAD02301B43612B14104FABB34041D021
5B807F67522438D04B67CAFA70D0F91D1644BDE07D7C70A7A733393C8D4DDF1E
3A50BCDCFB3080B162B3D776E8AA5D5ED0233A1077D673CBDC9CD665C721CDB0
0876B1D707EA73A507E585AB7DF4E590F77030A9B84C25B5CF6F839CF189C9D2
E19EC5A818F4D1E4B07604E432DD45FDA71450293C0BEAF34D463FB0875E2375
B52CBC0CDD543F69543A787C35906735ABEB534E042201F9B15B65762A061C52
C3C32030FCA19AC156D0823EC11298C939F6E9AEFD1CCE2788E917334FE463E9
BEF172BE9D45C1EBF78708E4E25B051DF25114BDF0BB744C10950B4D86264AF8
8223B9C22958ECE2B781EF22F5E66B901228DE365756C01847C360131E507AF2
A0A9783073143B8E173222ECD21A2DF77173518E1F9C7D47F5EBBCB275F48D94
7150E6C0B938642D9239297483C85A2C81AA0E936F638CC60579EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 96 /lscript put
dup 181 /theta put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC466A669A15614813CCF13D5DACCEFC0044612E8DA68D16BD1CD44FAC85B
77D4EC8E51FAB737E69A5BF653B8E6BFDCFE4783C4DF6C06F669EED412848DB1
C2BFD00F84455918F6F7B0125E9AD62A8D51C0DB9E7286A8A2312B11DE4D3837
1E5D5E2FBDDB3EE8368C068CA768739C7B57E06AA6F782FD61F4CD0197B54D1F
72CC1A4B453A0920138EDB762E346BC8E2A8F6553E36CAB0C885EDD3446A888E
ACEAD92836AD20ED17EE01B6180C5FE760FDC928AA300156E2C82610408AD290
927926B7C1F5B3CF5B135D344D66AF2CBC131073B41753C69DE96DE4C863AE07
9C38871B404BCB6BB26534791BD711AEC81819AAD04CBB7B6F13920C16063924
FC58BA14D188FF0B9EFE8127DDCC64891B2B133DBF2A1366F718FA25A36D45F3
3BC3B75A047683063FD0D03E2F43D208ACEDEF915D256101DF9C7B498118815F
049F719C0B686DCE486C10AAB683362932DA6667E1F12E3BC37420B845E98C99
05A9CDA0B9D1FC2BA07F936E6A2C74C3B9BE47E05399A910B13F2C9CA82CD465
E4E0282A0907EAAEF125CDAB6AA5DF856FE9080BCC2DD8E0F33923EAE87AE312
FD22F459C0FA4F83052DFF110C2FE517B9687070C7C50EA66C7D59C3460C0270
6330EE5DFC4C7F4DDEB165159B500CB6A772BC0B9CB5391FF6052C5BE495A387
4506A67A99DD40D0A7839B4A18867A8A2A572962CEEC6D441BD223E4B0C91E91
BED25EE372C292FF16A0D8D07081DEFA84048C0BF4E606A95C086A6D8D0BA9F2
1C72AD8B71B5B44C4EE92D9E0C62B74E04E7E3FA52B04BBE82C51C3B6F3D9E73
A1CC01266A8A301011F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Fri Dec 30 13:47:17 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /braceleftBigg put
dup 76 /circleplustext put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
dup 179 /parenleftBig put
dup 180 /parenrightBig put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 848} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCF1300A8B140DF1FB601966E239B5
C97A004A4205CCDACFFC747D59C0AB62F98C58566E92367FF923A747FDE768F2
BC84EA22988D2856786B73BD956D58D8E1DE05E3B73798BA7BAE21AED1D65A51
3E8B275C326E384F909CDD630CC3B3D3A664C6BB0A43AF3EF5B681E8178A68F4
18925BF7234218D39BD091D0B241B2FB96B24A302B7A2C3648C0BEBA299B1422
B2A246F4DFA5A9BA475E9963604E772769D365D898BAE237E423E657C64198D6
C50DC4E23676D32A80D9FCC26CB7EE5882A7CD7515BB142652043EFE62BF1296
C02D6A59757DAE8B7ABECD31FB3886ECFE4C018918AA771BEE2AD4BE22C921A4
50F44C875C97D243655B17F1C1C4E4C34EF324C3BBBBE230EC9D5EC568CA45C1
F0B2F8760CDD8F8CC7A19377F15ECE29BAC75C965984E9E5C246419CAF94119D
CD396DA99EBBDCD62D4493A16F9D040A24BA632716AA2CF3E8527A11E08CD983
08E109D5F610523FC1A976251F5BDB7C51EC9559890B4E838A6B7AD783AB3E61
36A0752C1C9586BED6F91B6B2C31BB5EF83E54C2E1A67785891B6161DDC05BAF
0C11DF8939F72ED4C1CFD293B9BBE5D7BEB0835695972221F1D1BD1D197E1A3E
BF18CEA3EE0C05151741C87469C417F1331BA729FF30D6CA8AD4B25572C230F9
2E250FF7F828D5FDC41884B337483286EC37AA4563EA5AD6F28E5227E8EC3AF1
6038BEA4475B0CD36D674A344E85B43BA3F22462B28688662720E2394B4C335A
08E4F943490553D091A144FB0A2A9E9813917D96E4FA19F3622F64390C25DE13
AC5F029884617CC9B45E0D87E9C5B70D20FD04E90C4A82F810D4E226D6096E1F
56E9C6E4A001A803FCB15526FD5AFF81D04BFF414BBCC9C581F4D218E304DB07
5D21522955F0564B6E8CFA6DEF9BF4DD8D67932BDF447F07C41906FF5346D85A
E9C70AA1474F7F4FE29CD557C0B9DDE60231E05874D722E36714F6D391954589
92A35A297F3E0DC1BCE608696CB53ADB4AEAA4678EDCC11EC964D2458F81EBAF
9C09E8B2E3EDE655684BD7110CB72BC26EF0ECDD28D909BE5842E94D8FDC3219
B7026172C78CE20750B077CD4A4A392F1BB4DD638A7F3E5156C9C207F4DC968E
66AC18D5E9F286CBEB7B0C16A036145093E5A76A0CDA7F6BB97B4C5748E9B518
273806F5A20B590F593D75B098C21B5777B5720BE61C49A1B2A582DB362CB41A
1EB9919AD6B8A3216667F654A7D07D810365E55612CDE1EA43DF0DAE0445D4C1
A01C097B297146A6E8F62A432C9175A9D9BD967F2CCCDEB1466930A62C51B213
13B9A9FFC926A0022489733404EF43B16E264F3D4673798DE2B2D4A87ABD40DB
FDDE6BBE47DCC6123A99DFF7C70753588DA615C3DD8DB8A2009D8ACEE94BCBA1
36A7A5B2F66249B72637CCF66F921D6EF881494255CEC6288737BDA6C4B3BD04
9D9312B0BD4652592690D22EDADF00E0F51104AA5C0B545AEA8754BB15A68F54
EA7909BF5FDA29A919654C8F11E76165D921FE0206C1FC18E7D1CCD78D5E3A55
2859E2B2641E94A2648FCDB68DFE0CE2640AD3869195AECCCF2B057082428180
D60811CBCEEC3CACDCB09346AA79D59A8C29EF32E5416B5060015784DDD675FF
04481A000122E12CC3A49F30AB6ABA8CC00CD9BB7E215DA59E2D63AD4056FDF7
E6FEF2C79865E1FDCB1E7D70AFDD7C30FA9A0E1EE4A8472854C4B291FA9EEA38
BF6DD5EA3691FD9B46394660238431496D2A87FE8BCA7ECB24CCEC57175A8910
4715EF0A7DBDE25FC6E47C9AB35E89EE9B09FC8ACCD6B4133DCA4DC0974E1E2E
9AC671EEACF6084670A60735316E9186FA7E04DEFA165CF26D22505EF622C0AD
33D499EE3D3CC47CB2C1E0F0B4426954A72E3A2B8C2B3200C7325D0881F83A51
8EF50E2E1F2BF325D61CD894FE615E70E6C184110C4FDB1754F399A5D257D12F
7599D745B0AA3D1B498BD7CE4B349D196C96597A5809EDD09AD1A43FD812811E
C418733AD8CFEBBAE69B41D276A5333877CB1B2F01067C2BC829FB02BF7C8A33
4A64CAC01F2581D7362532C54401052EFB9D4A8E89552A5CC2B2E8ADD3EC7201
7BC146AA78A1AF21D4DEEAFF7FAB44E8768771AA4181E88E7E093A01A5529440
2F1AE3974E05DC4CCAD2C5822BD4BF96EE4225A309B0053BDF67F7501C77C2C3
E238FF8C1009443EB2CC0A03D81C3ED2455C6C69B2747C911FB2BB9FB985DF31
2943EC7F669DF43D62C7F74D9B06FB077F623D2484EB7EFCEBA531A11B0E7FFF
6FD22AD31BC49F0E0904EF21F9139C554A55BE67E1694AA1BBA18F7C11414CCE
C2E591CD42B316CB44DA6C26AF6F0718666496D37306F36029C83774319E4C2B
7E13382ED604AC2EA00D7A5448FD4D1DA21D64F72274D86046D7029176B0E911
76EE9B628043ECEC87E509CAB4E723B24514B26B55B77AEFA4EA34A19FFE7514
16EC00541A91BE9DE79B22A450B5601E66E41F2B3878B86FF9818DD8005BF876
C1C8F10137FF29C535AD47F2BC4D97FD750F7C09A131162C3CAA5100DDB2FB8C
8D76DE61BC65C1544821A3935FF00FD505A134234D816FC19ADEAC9A4601F13F
DE11B273C18AA8C21528BF57DDFAF00E78B1865192A4BE7963577E97E05674E8
50F60F2C04EB99448E1115C58320A642
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYBTIP-Medium
%!PS-AdobeFont-1.0: XYBTIP-Medium 001.389
%%Title: XYBTIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:32 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYBTIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYBTIP) readonly def
/FamilyName (XYBTIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /d35 put
dup 36 /d36 put
dup 37 /d37 put
dup 38 /d38 put
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C68B75B8C6A2
18BEDF073A57F5212819DB38E30D9BA47521ABEBEAF35446353D5BFBD13F0FF3
5104C7E7B27F68240654E12DB59447C153C755A51AC2D8A60523ACBB0BBACF9A
605174A4E65D6320DB4B0B413999F0F132D46F188C11F9F61722C49616A2AA90
84ED72650D8EE114E75CDF80D98B0F86081110D9220DCEECAAD9E18B33AFB8C0
C81E5B7BEFD8BD70FB1666E4B0E60D68C76ABB487E9DF06F8C0854B04230C3A1
871520619EF605B65CD8EBCD33ED99BFD9AE77A5EF384F862E7F74302C0CD0B5
3D0CD2785C3898A10E23575E442E7F4E27F18C2C3EF3335AFBDCECFC630C93D2
42DB0D82F5E710E8B72F7A2C7A334BC02F848C8C796EB9B19E98407FFEC9DB8E
546FF05F254C41D701ACCD0EF56387CED4F569385655BBDC7794C5C087B2B26A
FDB1B5E75BACF169128194A648C42049D69A59FEF5447DE9D8D4DBE27460F06E
683DBC80CE204B1AB46B9CABA4D166D9721ADCC309AA5997B95BB0BC623F91A3
15024E6F218991959D281E104E7C93298D654D337CCEE6F26760A0DE5B7481B7
0C1E686727C7EF358E139EF8E33EFD761BD63CE9A7EFC7947291853C3AD8B9DB
42F1E81C42B108CF2879B9C5A99C82169FCEC9797911D43EE78A66B7BBDED558
FF3381F35658D25C3FCB9C4FF8D41AA291064E9EFDD63F79701AD21387D8F889
AA4D4BE9A7B77CCEFC6B5B563D78A08C52BA94D852C2993D9235708FAFE02144
E77CDB6F08D2E3773FD8B7D529F4B45382F3E6E6B701E1BA31FBF29C71674E10
94242E4486024D3F85ED159ABD20D9DF06296084EEFD45273DC14FF5F14377D7
5506A96D881AD3F6D51DD868484A5DE3B0D8C18390B2A2FC7F7449D981043EB8
B55EE334C43027A8AC3EAA5DFC660F68AFFC18CB10256BEC8230A00D3993A2B2
011F23203AF092A9101B44D4411C3D031EDDCC575FDD3597D959E95672485A1F
48AB44F5A97E70FD1031DA7DC6D0B3EBF92847B380B21B5A6B1E4ED580C62ED3
99D694B98D1619E2745A3DEDADD8BE44289054E9D84866163B8473F4607ABA9F
8E2CDAB8AD7AAF0C5ABAE4B64D27A318777CC73452A5014F30094C2B992137BB
B0E83229F52B51BB5D76684908CF438F16AA2F855084DF044CBEDD925E48C47A
7905ED8E678B0AD1E8B7B272E5AD8FE66E9F81183127A934AF55A5EFCBB67293
5E049CB377621610778155F2595C2139E0996A862C3C13370506E3E37C77F485
F8A2BE78B039602058AA50400404A954F4966218AB7C71C9442533EBA97282A9
0EF862B5EB63D02430B51D8C2854B565543DC0C680C6E876EEF707884F101696
241FAFC674F5CF11F536B72E36AB61513F33EC3CEE4867547911521C015B8A46
43302D52F2AED2853AEDD55E793DC3F1B4BA9DE3CB004F3B0358FF0D9B1FAE0C
FE93ED3F9D8C4F58344AD245E4C20E83C29A9D7421758D8C5E60623C4E57DF18
691503FC146F8EEC131449403854FA400D377D9465380D324C874F4AE58E524B
6F9EE2AFD7FCBD10259FA789C0530ECFD910510F745A72F8A7B334CAF8DEE750
C18D074F1885636A51BCB1244FAD8450171DDE6F56E46694DFC2BC2C525441FD
EA47193E94BD2BB790BB62EC80B5B0A28B1AB0D2D77108F2A23D98D9EA63486E
B7F66EFB961EF379059E21B55644320C002DF667D44510C0C6F721484273EEA4
61FC5328274D9CF525702C5C3EB3780CFAE85215E6C47CE6FACFD618109CE016
75AE68FA3A326AF8037935649F456E00AFC0A03CB7319145EA43F10D2D31670F
3FBE6D22402CDA46AD7E210082D64A8B3E9F0D6C972FDC37F1B9E0E99ECFCB81
B9FBC620CB68D2C2EA715CB116207672073DA9288E3DFA6C155553883A5AB945
CB5F28A7D21A01E906CC3042787749637457743E6E4605D712F1B93D81584595
101D40942A962F76C98D91355B19CCCA6BC89A05278B4BE77DA8EAFD7CEB5007
36B5DAF8737103D7286AD3673C642236A824C364F7C59279BD264EDE91F3A6AE
FC44C66418CB0E6D7C27195EC479AE21ADEE733FCD8309A8D54BE5F9B63AF812
BA15BF66877F06815695BF796EFAD388FC422FCB762AA0C250306315A6044BBB
61F8B3ACB72D201C432EA85893C5A53599E346F0B1CAB830FAD12A7A35B468B1
C2E85696D4F9439F433A2EE8C22F90D815D3AF75BC853B597AB43634846F66F7
70F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: XYATIP-Medium
%!PS-AdobeFont-1.0: XYATIP-Medium 001.389
%%Title: XYATIP-Medium
%Version: 001.389
%%CreationDate: Sat Oct 5 21:14:27 2013
%%Creator: Kristoffer Rose,,,
%Copyright: Font converted to Type 1 by mf2pt1, written by Scott Pakin.
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /XYATIP-Medium def
/FontBBox {-543 -543 543 543 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (001.389) readonly def
/Notice (Font converted to Type 1 by mf2pt1, written by Scott Pakin.) readonly def
/FullName (XYATIP) readonly def
/FamilyName (XYATIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /d35 put
dup 36 /d36 put
dup 37 /d37 put
dup 38 /d38 put
dup 39 /d39 put
dup 40 /d40 put
dup 41 /d41 put
dup 42 /d42 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090C077A7C79DDAEA9DFB06FB
D5FCEB8E0AD1BE960FAF302828BD4FCBDF6D83C15C670BA0C633C1848C9E83EB
8BC4A503624130F2632568342D516987E84088FEC7D823F0719B19EAC26EF619
6C4DEA4F593450E106FD3234BE1307FB0D93D305C419CAED51F295549FDBA441
5EA8D965CFF4CC48C0567333129B1781CDD7473FE9F231006E32433B94B6E4EE
7A6B010DE67402C3861DB9FFC57EFC00625BB337DCA4D54887DDC159E071059C
795D614DC19F65DAB6AA9F3C1649BD0AA3F1A941820229AED5887D23EFC80D9F
7CE6C0A60CB4E3B5DCFF3671C7722C2E115303C0B37028E584F11A091773C86F
DC03F457EC33A987A275963D9316AF4302101DC71ABC50904C23B5540F5EB3E4
4659FEBFDA7118DEA4F5653BBE4E09A43F8D6BB9AAB31D72EF202E1990E00763
63E5FC804136E6500EA8E454C1B45ABE01C39F83B614F3665FD18A53F2A8D88C
5DC2703EF4A5E6BD6CD87BA32F6ABCB96A75D769B74E0E0361FE54966AA0FA78
456937DFFFDA2ED807FF3CEEBA4D8635BC8BB3C9826C42D5A61AFB527E2346FB
9A0DEB66787284C96B6BD54110ABEDC6F5CB25496F2D7D7FF103602DBC2134A6
AD96357B2ED001DD02FB7DB2E80CDEC6F52F15548C2AB8430AC8907D7B3A9C9F
0B13907073BA09B096642F3E4CCC309B07D8EFE86A2949F304B999960E621450
C64D3DFBCFDE020F7511AD9145E0762B75EAE1ECC42E60CA8E05E9B0B9A98473
8B4877E4A4499426BED9C6B86120F28ABC64A2C0F0B9F8348946364AD469E75C
3923B20AA27F071081416DB3F0F9C09137FFB6617F2FC2BB60E3AB70FBF4B6FB
BD728B866307DCA478EC288F33E6EED97FF91EA2A00DA14002E454BEFE44D396
C0F4CACD46D0025426B350AAA724D57D88736C8B93AFA3239BF83BB80BF96BE9
0E6D63C3C8560FED54B116E1E492C9BEEC6C62782A7F5EBF0F0D8EDE89A1C9FF
8B0DADC372644F49185F616BDEB8CFBADF5B6EEA5B244FC48EF9FE9352E31241
51FFFB4AAE5FCBD9DA5E4DB8966CFA6BA8BD253BDCDAD9CF5C21AA93BA661EF2
C4E57ECAD9FA71B96C67E501D74CB29BBCFD1BF954EBA730A34DA0D0B21619B1
048053F1283A10F2DBD3D90B64C68B3B60B5FCD85907DF4AAD868CE0EB80ED71
B761ED6CEBC13CA9316538BC1D1F22532696A6676AAE0F233E4E2266D5EF964A
7AD7FCB1671EBB5213A5EC24EB61FBA1DBCCA4AC216ED7FBF579621482727B71
EC51A478D3206B6772DA229A8D4F4C9D9CCA78390E1E3289727E1F2E3A8E583C
DC35DD2B29AC825E799B7282F78B1C1156CA9C52257D5E06FBD32F1F0F10360B
CF9B325716F1C618EDF1808D87868D4488F300D071B198101B4EF339B304E3B8
820D282556AA2C5DB3BE6076E79F1AD2D5CC1247654836F18AE88B6F381C9861
2E2D60656B8D5EC679B8B80936068EAB2532404109F3B981B74D25F822024466
F28E9A3ACD5D126FD5A6DB767E65B630AAF27DDDA1560B6E7765BF028B30E727
44EB03DDC31A44618D2310E4782AE8006CED49ACC69DECF58A7793FD6B11E1E4
0A3A15AED59CC492C6664BD90F68CFAC6B39BA4E9DCA6F02019D8618447E4F9C
BA6762E83F470B11142846DD4EF8124DB8168227FCF78B82DC96036A44FEC450
A4900006F9863789002BD27B4A8D69F476831F1F9219D9CD7BDD208DD4549A8A
E888A7B2A6AB8F3730C49BAFF8ACD318E241A481252B3AA3470B58EA31974511
15CEF90A04D689E0DB6A71C7B1F40014F4E8960D1292B996BFC4736C3FCBC17B
66807338C501859BAD74CF943AAAC6A83C1880620C4168C8817033E4ECE5D706
12F4B21504DE43A3717B577BCF4D6B2CFDD62418E0E17E962DF54191D0067535
3252B0A008ECE1FA08B3CD80CB08A844AF7419EF3256E528F0D97692830A3E4D
519B7A630AF9B41461FCD5C37F466662F68F6443A97FDCD8EE1F929292D1A6D0
8212553A4082281F51C15B44D2D94F53619FB6AE77EEF98DC05F504F7C451670
330BE3B6329EB6BE4DE967E3D82F4F2B1D6D840BF1B33A7E54FDF66C22876847
E07F75D429462DF2F91ED177135275C90238B06A195653A34241E941A18B3C24
D34ACD27C6AC9ABE8D531559B47B9A0353E3A579EB5C36DC53DF44B1AB9DA64F
9C41E053D000572501207696826B690B40DC96FF496434EF9AF362F5CD95D7E7
6B5BA95A19FC829A2A7C3A53493548DF83
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: fourier-orns
%!PS-AdobeFont-1.0: fourier-orns %%CreationDate: Sun Nov 17 13:24:04 2019
%%VMusage: 120000 150000
11 dict begin
/FontInfo 15 dict dup begin
/version (000.001) readonly def
/Notice (\(C\) 2004,GUTENBERG) readonly def
/FamilyName (fourier-orns) readonly def
/FullName (fourier-orns) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /fourier-orns def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /beware put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000000 0 0 0.0010000000 0 0 ] readonly def
/FontBBox {0 -249 6428 977} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C9F386
12495A6338DDAA084A46BB317BFBE8CCE3013A703B40F8CC6F564E77222A2AA6
45E14C9708A301F6768C4E0636CDB9EEDF721814B5DA591A498F6CC5A2F8A555
991C0B6FAA133EAB2A3F8E014E03FFEEBC26618666C174C7A6C21071D9D8665F
643EB8C344FC6EBBD91238A12DD034C4B73F6564BDDDC24B51C57159ABB39740
2F004B35223E7F65463B9772233CA3618739B0259A4F6D9AE2BC7CC63F115F31
D7598D70EF03F4467E20F76C0809A88B61251B5716B7BC1165846525F370689F
AC516E0BCFD3403D153B408820898B91CB0872F1A5187C1F8A3AB51611F9E27E
96734A11F628956FFA7F8D3DCB5D5FA35281704ADFED55A95730D1E9D32A8784
6356592CF741B08CFF32EEE67729B55D5AD35FE34E27507152F8F87C7FC28CBF
6DD5294E7A8D98A41C15E8E0330B5069D63A0056D66C6D83C49CC2143FDBDDBA
C4F831C15183EC9DD40CE983F95B4608162DC57A4492469AABE2560529390A7C
7A51F993E6EDA94B24BBBBABE04E46945CD48B276A6943BB18AD0AC663665BD9
C36C16684AE251D8105F14A4452343C63949EA3BB7EC87AEA3372B79BC118851
ABA0FB8A63E7E27D2B8E7C3C4C8E101C8B393FAE7F75103FD74A6F3C857AEAC6
5ADAD72C47102879DD9AD554BEDAB8A6254C71305B3949595FE17AAA5F551614
5AEDA129F32921747D9348F4DAB0E83A38884F18FF6E07A55C169FFED3C89A03
D84BBAB9C1D0E839ED727F763E1220B1C12BD2CFB2CEB4EFBD46E459E75D8904
B08C259999D20A92D972DAC0F158BB42FF02CB82C9FDC3EF6E26067973309758
18ED225F3DCA3C045DE3569B1FD9AE12E70A40343C7AE637D2A0671AA06881D0
B13A22CF3FD9B880B366CF377DFF4CFD62CC85031F225389F65283321D211FCD
A0D8C3F3148295B173244EAAE3CD80B0B133A1A4614732C69D5B1C36B43C4E8B
622289EF6405417DBB2D756DAFCDDF71ED7EE361B21198D525B58738AED0A4B1
8DB21BAE1C2C959D24E35ACF19AA0428411CF32B1A8DF7684A58D5A61F29D108
BDAA369902FBE694CBFAA9A6A43A61D651048AC7681A496EA0C3DEF778C37080
42ABAE0FE59269570A833E3D0B7FFA27824FE2897013DF23B383E39712D02151
B8F7F6B0E45E7A048E8F86584A0FEA4FFA4E230AE401CBEB5E485C555A41FA7B
703E0E0D7424120B9664FF6F578B37A63264BA6D308EF6130A2799E79A7AA23C
B6B7175CE49F0688B3F79EA3DBC898217EEBB2C883E3DA1AEDE8301A537ED683
7CE7A6C3DDB7746B3EF08067D301F57250F93AA633E6A97C631773A42B0D57EF
0E62F599D76936247EE945007524BA4F8C50956ADCEBDFD16C0A2F3F019C13AD
674A18523248F9C6C8E76C14177410534E2F51794D81E5439B5D3A76DCA8CEFA
CC74D8008B7852E13013B74ECC828D47B9A8B2EC17DF57003B19B66B8DE3EB86
39D40F2BF606F04FF1F612FB14AC2CFAF8546FCFDF7958F4C598536320992DE0
D4A01590C5A162CC9AD07C4801AF4AE64B8C18F257C1C2F1D1E26E2CD82BB68F
FB96E1121AE159353CF776031126FA1BD9FE8ABAE22FF36016F53C0F276BBFB6
40564F7CE21A19E94C54544E901241CBD2564F0238FA8D2A4574B9A291FD87A6
9D8556E472DD963F7CC64F4B638F7B24CBEBE49D59CF267AE8EDD60C66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D47BE08ED6CE96278050BA67680A3B973613647
A93FAEC756FC253B3693FA2D6491B276EF45751EFB306961788E7C15297A5822
AFC5A2DABD0DBBFF0BE135267EA6B9D1B4E4760ED14895FFE1F8C3F564830001
EFA901B8442BD2D98561BAB9A0FD939E0F856E4D2EB04A9A4496704109B8A84C
EA06AB0999427B3B1BE776004AE906D0F22159C051D88CF573A0255D99B56781
CF326CD11919AA40B096769CD6D0ADF3ACEC7957621084ACF21AF1F265416628
86B67FCBDE9370D4F5C6F5CC67EBB0A2727E074090DBCA459AFA1A4778AED4C9
AE5400775223E684BFCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.001
%%Title: wasy10
%Version: 001.001
%%CreationDate: Wed Jan 15 15:09:25 2020
%%Creator: Michael Sharpe
%Copyright: Glyph unchanged from version 2.0 were copied from the
%Copyright: wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
%Copyright: Glyphs that are new or changed are copyright (c) 2019--2020
%Copyright: by Michael Sharpe using mftrace as the starting point.
% Generated by FontForge 20190801 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /wasy10 def
/FontBBox {-23 -1667 1720 752 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright \050c\051 1998 by Taco Hoekwater. \012Glyphs that are new or changed are copyright \050c\051 2019--2020 by Michael Sharpe using mftrace as the starting point. ) readonly def
% Glyph unchanged from version 2.0 were copied from the wasy-ps fonts, copyright (c) 1998 by Taco Hoekwater.
% Glyphs that are new or changed are copyright (c) 2019--2020 by Michael Sharpe using mftrace as the starting point.
/FullName (wasy10) readonly def
/FamilyName (wasy) readonly def
/Weight (Regular) readonly def
/FSType 0 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /Euro put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE30585F628C5960F4BA7A0E78D80B
EA23A0384400281199F7528220D2F21D031A35321A044226094B6ED6DB52413E
0BC02D4EAA6BB6C3D02F5D5E4983DFAE1209911A8DDC998656E07B4EEAEF13DE
50FAB8A7D9346FDBBBF1EAF791BE7E3B4BBA8D381C5C32DCB4436D5834A17B60
26188D4C558BC1ED012EA8DED9DF22A29EAE8673C46D0CFF7F5EB4080882EF91
2FF746A93A7B15CFC25341DED2CC7041F5D2FFCE348F17C86124EDBD259F3D7A
A299B032DF19B1C8C6EF386EE2B3655A09E37996670E1878051E7B77C73B0250
EFA23B7014FD87F1D8F38F07EC2ACAF188606F724E436A3D5B001AF774C0BBB2
3B48D49C1D59D3FB5768719967A1086B0C955D8E90D69C2C18593A7EF0CE7A9B
A82AFC9604DDF32B61B5220CEA41E570BF9F9BF018876411E06807D45AEBD705
125665794E0C88DFCBBC57A43A8F7747B4A09C3941DCC35D91F9E238DEE5F56F
4D6E6032FC16C459482F4E32286E48F60DA55F2B5B1B86F3C934052B798067D0
254ECF5D61EDF99B3A6D86DB44265F4545D81B7A002D62C32A22D311876DC636
1CDE6DEFB5164BC751EAFF248E4D6CAB3FCA084FF2565070A0129CAA66035751
8A94EC45A9827D8398C0CAA83B3D4B032C75896D666161D5FB3F6C8F13B692A8
ED5B89F4654956A01FCF6295D4EFF3C7269DD46C0D06362CF44C087C14B0F984
A6CC760D2E439EFC1EFCE34DAAE9C0B017F709E18F64E7762F92A2723CD0728E
11ADE47D1A7AD0B9B75624B220C906D34D1FDB479E312B51DA3721CEF9576B50
F00CE281CC5AC9CA854C150636E2A4BBF26C0CB72843B7E8978C6923B20DF073
7D15F9069ED5C3CE92F4C2AB437BCEAC02473A6E023091F026B8AF8FDE54045D
BA32607DAB9EBE64BB05DDA506E90BDC38D7A94015DBF365B3F727D14E612395
6675298F00239CAB003959FE119E726D4B10B063CE62B1E648DDE9E995ADE22B
AED269BC6481FAC38C9D66CBFB5FA8CC6840F18F49FCA60F6E8D93CD2FE35A98
CB61C80B2F424A61789815DA278578DE6755411E3159852E8A76A43932A489B5
A8C48972C22CBE66C9DAA6EC7F3C70760DC4384C7D5E552E41C9969113FE9B41
4C792F58801331862721CC920D6060DB63D12BBDDDE58C2B1CFC0D1CFCB7EADF
9D0AB31059712DFECD2A616D70DD0EE5E53514B474FFAA0B184BB85B618303E7
DA826C2B7D1CBAFD1645C06F9A00BC1FF1222F94937A87EE04C4684B0A121DA3
E26BD7272D71E93BF96376F11C750E53E6AE7E9915809A21512969ED830C6395
1395B0E6790CE19FF4896550A040821442A2EA1CD3AC4DC9A0B90419882F45C0
598E040B77E600BEC9FF9AC627A92638BDC359317492BA4BAB8B1F2CC6A5AFBF
E81F9CE51A6BA62D5CE57EFC9607693B47AFE3EA791B97EF8B73C7C234FCDFC9
70357D3E9B4D8D8F475BC7448C1B25929B019FDED75169DE66513CCC23D034A2
7EBF6E2D44E394667EF8D57924D4D1F874B89EDA39976CAB94B3D58EA6551D10
3F4DF6E795D36E5C468ACD33C7B78CDCAD0B29ED5145EF4D2CCC59706188D10C
712973EABECD7A3FF3EAA14767ACB0551E39C831ED5452E0088D4F1A826548B9
726B84209947D4BB01DCA1E29FD478879E7F845E833C3AD2E29A83260A53F64C
BD36FC42E14A07FAFEC1B14C54A53A5E2D852263D358E675B62F9E30FDDD384A
56440941B4C437D4418A7898667D111FD994ED002E2E9C6DD47FE9D3C7F1D6A8
E5040A87A39A0509FFE4884E63CA3C0434F07185D8026E5B93B8A50AF015C796
033F05AEC49175ADDD337E2C1E9CFE41838999960D874AE74B8EA0FA61DA9497
58AFFB7A98DBB36FF2693F4EA3B83C6331BE4677D1F5D8150F9A66002C4E37E8
4DD52CEDD41ED9B724D09B3E562CD93B50414D87AD378B7D0523536041FE0EC3
3A5C2343D7DD645BF1A70B6AF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (CorrigesTechno.dvi)
@start /Fa 177[58 78[{}1 76.3801 /Fourier-Math-BlackBoard
rf /Fb 85[79 170[{}1 109.987 /Fourier-Math-Symbols rf
/Fc 93[33 162[{}1 45.8281 /Fourier-Math-Letters rf /Fd
225[60 30[{}1 83.022 /EURM10 rf /Fe 229[83 1[83 15[83
6[42 1[{}4 83.022 /LINE10 rf /Ff 145[46 9[43 100[{
 TeXBase1Encoding ReEncodeFont }2 71.4911 /Utopia-Bold
rf /Fg 182[65 73[{}1 83.022 /MSAM10 rf /Fh 140[48 3[63
1[102 3[32 50[58 54[{ TeXBase1Encoding ReEncodeFont }5
109.987 /Utopia-Regular rf /Fi 138[32 1[23 3[31 33 1[15
2[16 32 28 1[27 3[28 29[37 35 10[28 1[28 28 28 28 28
28 48[{ TeXBase1Encoding ReEncodeFont }19 53.4661 /Utopia-Regular
rf /Fj 57[44 44 104[44 92[{}3 61.1042 /Fourier-Math-Symbols
rf /Fk 135[32 39[38 2[56 8[47 68[{ TeXBase1Encoding ReEncodeFont }4
61.1042 /Utopia-Italic rf /Fm 75[31 31 53[34 34 34 34
45[76 35[55 40[{}8 76.3801 /Fourier-Math-Extension rf
/Fn 213[0 0 0 0 0 0 0 0 35[{}8 83.022 /XYBTIP-Medium
rf /Fo 213[0 0 0 0 0 0 0 0 35[{}8 83.022 /XYATIP-Medium
rf /Fp 58[42 33[42 1[42 112[17 48[{}4 58.049 /Fourier-Math-Symbols
rf /Fq 141[19 3[31 8[26 30 100[{ TeXBase1Encoding ReEncodeFont }4
49.6466 /Utopia-Regular rf /Fr 221[90 34[{}1 76.3802
/fourier-orns rf /Fs 135[30 5[23 32 2[36 23[37 1[35 6[53
5[41 2[44 38 1[36 65[{ TeXBase1Encoding ReEncodeFont }11
58.049 /Utopia-Italic rf /Fu 21[31 31 31 7[32 36[27 15[27
14[54 35[30 1[31 37 21 27 24 36 37 35 38 56 17 1[17 18
37 32 19 31 37 30 37 32 17[47 2[35 2[21 4[48 8[16 3[32
32 32 32 32 32 32 32 1[16 1[16 2[21 21 17 36[37 2[{
 TeXBase1Encoding ReEncodeFont }48 61.1042 /Utopia-Regular
rf /Fv 139[20 25 23 2[33 1[54 3[17 2[19 30 37[23 5[31
31 31 31 31 31 31 31 31 31 3[15 44[{ TeXBase1Encoding ReEncodeFont }20
58.049 /Utopia-Regular rf /Fw 242[83 13[{}1 83.022 /CMSY10
rf /Fx 205[36 36 49[{ TeXBase1Encoding ReEncodeFont }2
68.7422 /Utopia-Regular rf /Fy 177[58 78[{}1 83.022 /wasy10
rf /Fz 133[36 36 39 60 39 47 26 1[31 43 1[41 47 4[24
1[38 24 35 1[34 43 43 10[49 1[46 41 49 1[47 1[58 70 43
2[26 1[54 44 46 58 50 48 48 6[20 58[{ TeXBase1Encoding ReEncodeFont }35
76.3802 /Utopia-Italic rf /FA 74[42 84[44 96[{}2 76.3802
/Fourier-Math-Letters-Italic rf /FB 57[55 55 8[55 3[55
55 17[55 1[55 21 55 68[55 55 40[45 50[{}12 76.3802 /Fourier-Math-Symbols
rf /FC 4[46 1[46 4[44 4[22 22 3[39 39 39 38 4[40 1[40
22[46 8[49 4[34 15[34 14[67 4[76 38 31 8[78 17[37 39
37 1[38 46 26 33 30 45 46 44 47 70 21 40 21 22 46 40
24 39 46 38 46 40 3[25 1[25 47 45 48 1[48 60 47 41 49
58 46 58 60 72 43 50 27 27 61 56 44 46 60 52 49 49 1[30
1[44 1[20 20 40 40 40 40 40 40 40 40 40 40 35 20 30 20
44 31 27 27 21 54 64 3[18 29[47 47 2[{ TeXBase1Encoding ReEncodeFont }
100 76.3802 /Utopia-Regular rf /FD 145[32 9[30 100[{
 TeXBase1Encoding ReEncodeFont }2 49.6466 /Utopia-Bold
rf /FE 22[40 40 30[48 80[40 1[40 48 28 34 34 46 47 45
49 72 24 2[24 48 41 26 40 46 38 46 42 9[71 1[60 48 43
52 1[50 59 56 70 1[54 1[29 1[55 45 48 59 53 52 49 6[21
43 43 43 43 43 43 43 43 43 43 1[21 1[21 4[19 36[49 2[{
 TeXBase1Encoding ReEncodeFont }57 76.3802 /Utopia-Bold
rf /FF 22[57 57 30[69 80[57 1[57 69 41 49 48 66 68 64
70 104 34 2[35 1[59 38 57 67 54 67 60 12[69 62 2[71 11[85
2[71 8[62 62 62 62 62 62 62 62 4[31 4[28 36[70 2[{
 TeXBase1Encoding ReEncodeFont }39 109.987 /Utopia-Bold
rf /FG 22[47 112[45 4[40 36 2[53 5[27 1[48 1[47 55 45
31[63 67[{ TeXBase1Encoding ReEncodeFont }11 91.6562
/Utopia-Regular rf /FH 22[68 68 81[66 32[80 45 58 51
78 1[76 82 122 37 2[38 80 69 1[68 1[65 1[69 16[79 2[125
77[{ TeXBase1Encoding ReEncodeFont }20 131.985 /Utopia-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -254 -561 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-246 -246 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246
-246 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -246 -246 a -246 -246 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -246 -246 a -246 -246
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Proportionnalit\351)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Droites et suites de nombres)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (\311tudes de fonctions)
/OUT pdfmark end
 -246
-246 a -246 -246 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Tableaux d'effectifs et probabilit\351s conditionnelles)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Taux d'\351volution, suites g\351om\351triques)
/OUT pdfmark end
 -246 -246
a -246 -246 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (D\351rivation et variations des fonctions du 2nd degr\351)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (Arbres de probabilit\351s)
/OUT pdfmark end
 -246 -246 a -246
-246 a
SDict begin [/Count -0/Dest (section.8) cvn/Title (Suites d\351finies par r\351currence)
/OUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -246 -246 a -246 -246
a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -246 -246 a -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 0 TeXcolorgray
700 166 a FH(M)n(ath\351matiques)30 b(\226)g(P)n(r)m(emi\350r)m(e)h
(technologique)1496 577 y FG(C)o(orr)q(ig\351s)18 b(des)j(exer)n(cices)
-246 937 y
SDict begin H.S end
 -246 937 a -246 937 a
SDict begin 18 H.A end
 -246 937 a -246 937
a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -246 937 a FF(T)-10 b(able)22 b(des)h(mati\350r)n(es)p
0 0 1 TeXcolorrgb -246 1120 a
SDict begin H.S end
 -246 1120 a FE(1)67 b(P)o(ropor)q
(tionnalit\351)472 1120 y
SDict begin 12 H.L end
 472 1120 a 472 1120 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 472 1120
a 0 TeXcolorgray 3631 w FE(2)p 0 0 1 TeXcolorrgb -246
1293 a
SDict begin H.S end
 -246 1293 a FE(2)g(D)o(roites)15 b(et)h(suites)g(de)g(nombr)o
(es)871 1293 y
SDict begin 12 H.L end
 871 1293 a 871 1293 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 871 1293 a 0 TeXcolorgray
3232 w FE(4)p 0 0 1 TeXcolorrgb -246 1466 a
SDict begin H.S end
 -246 1466
a FE(3)67 b(\311)o(tudes)16 b(de)g(fonctions)563 1466
y
SDict begin 12 H.L end
 563 1466 a 563 1466 a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 563 1466 a 0 TeXcolorgray 3540
w FE(9)p 0 0 1 TeXcolorrgb -246 1639 a
SDict begin H.S end
 -246 1639 a FE(4)67
b(T)-7 b(ableaux)14 b(d)n('effectifs)j(et)e(probabilit\351s)g
(conditionnelles)1654 1639 y
SDict begin 12 H.L end
 1654 1639 a 1654 1639 a
SDict begin [/Subtype /Link/Dest (section.4) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end

1654 1639 a 0 TeXcolorgray 2406 w FE(16)p 0 0 1 TeXcolorrgb
-246 1811 a
SDict begin H.S end
 -246 1811 a FE(5)67 b(T)-7 b(aux)15 b(d)n('\351v)o
(olution,)g(suites)i(g\351om\351tr)q(iques)1209 1811
y
SDict begin 12 H.L end
 1209 1811 a 1209 1811 a
SDict begin [/Subtype /Link/Dest (section.5) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1209 1811 a 0 TeXcolorgray
2851 w FE(18)p 0 0 1 TeXcolorrgb -246 1984 a
SDict begin H.S end
 -246 1984
a FE(6)67 b(D\351r)q(iv)o(ation)14 b(et)i(v)o(ar)q(iations)e(des)i
(fonctions)f(du)h(2)1365 1962 y FD(nd)1443 1984 y FE(degr\351)1644
1984 y
SDict begin 12 H.L end
 1644 1984 a 1644 1984 a
SDict begin [/Subtype /Link/Dest (section.6) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1644 1984 a 0 TeXcolorgray
2416 w FE(22)p 0 0 1 TeXcolorrgb -246 2157 a
SDict begin H.S end
 -246 2157
a FE(7)67 b(Arbr)o(es)15 b(de)h(probabilit\351s)651 2157
y
SDict begin 12 H.L end
 651 2157 a 651 2157 a
SDict begin [/Subtype /Link/Dest (section.7) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 651 2157 a 0 TeXcolorgray 3409
w FE(27)p 0 0 1 TeXcolorrgb -246 2329 a
SDict begin H.S end
 -246 2329 a FE(8)67
b(S)n(uites)16 b(d\351\002nies)f(par)g(r\351curr)o(ence)924
2329 y
SDict begin 12 H.L end
 924 2329 a 924 2329 a
SDict begin [/Subtype /Link/Dest (section.8) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 924 2329 a 0 TeXcolorgray
3136 w FE(31)p 0 TeXcolorgray 1930 5895 a FC(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -246 -246 a 83 x FF(1)105 b(P)o(r)o(opor)q(tionnalit\351)-246
-54 y
SDict begin H.S end
 -246 -54 a -246 -54 a
SDict begin 12 H.A end
 -246 -54 a -246 -54 a
SDict begin [/View [/XYZ H.V]/Dest (exo.1) cvn /DEST pdfmark end
 -246
-54 a -246 -69 a
SDict begin H.S end
 -246 -69 a -246 -69 a
SDict begin 12 H.A end
 -246 -69 a -246
-69 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -246 -69 a 0 TeXcolorgray 90 x FE(Ex)o(er)o(cice)14
b(1)p 0 TeXcolorgray 0 TeXcolorgray 147 w FC(1.)p 0 TeXcolorgray
42 w(On)j(compl\350te)i(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)
p 0 TeXcolorgray 0 TeXcolorgray 1425 108 1258 4 v 1425
208 4 100 v 1478 178 a(\311l\350ves)p 2001 208 V 360
w(40)p 2340 208 V 268 w(?)p 2679 208 V 1425 211 1258
4 v 1425 311 4 100 v 1478 281 a(P)n(our)o(centage)p 2001
311 V 144 w(100)p 2340 311 V 219 w(70)p 2679 311 V 1425
314 1258 4 v -38 437 a(Il)e(y)f(a)i(40)10 b FB(\243)g
FC(70)g FB(\245)g FC(100)18 b FB(\306)c FC(28)k(gar)o(\347ons)f(dans)g
(la)h(classe)o(.)-246 471 y
SDict begin H.S end
 -246 471 a -246 471 a
SDict begin 12 H.A end
 -246
471 a -246 471 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -246 471 a 0 TeXcolorgray -141 566 a
FC(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(un)f(tableau)g(de)f
(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1425 653 1258 4 v 1425 753 4 100 v 1478 723 a(M)o(ar)q(ins)p
2001 753 V 332 w(1)12 b(760)p 2340 753 V 167 w(1)g(046)p
2679 753 V 1425 756 1258 4 v 1425 856 4 100 v 1478 826
a(P)n(our)o(centage)p 2001 856 V 144 w(100)p 2340 856
V 228 w(?)p 2679 856 V 1425 859 1258 4 v -38 983 a(1)c(046)i
FB(\243)g FC(100)g FB(\245)g FC(1)e(760)20 b FB(\274)15
b FC(59,)8 b(43,)20 b(donc)d(environ)h(59,43)h(\045)e(des)h(mar)q(ins)f
(sont)h(tomb\351s)h(malades)o(.)-38 1147 y FE(N.B.)f
FC(On)e(fait)h(le)g(calcul)f(et,)h(seulement)i(apr\350s)o(,)f(on)e
(\351cr)q(it)g(la)h(r\351ponse)g(avec)g(le)f(symbole)h(\045.)g(R)o
(appelons)h(\340)e(cette)i(occasion)e(la)h(signi\002cation)-38
1246 y(de)g(59,43)j(\045)d(:)1604 1373 y(59,)8 b(43)19
b(\045)c FB(\306)1969 1316 y FC(59,)8 b(43)p 1969 1353
191 5 v 2003 1430 a(100)2183 1373 y FB(\306)15 b FC(0,)8
b(5943.)-38 1595 y(Donc)17 b(dir)o(e)f(que)i(59,43)i(\045)d(des)g(mar)q
(ins)h(sont)g(tomb\351s)g(malades)o(,)h(c)n('est)f(dir)o(e)f(que)g(la)h
(propor)q(tion)f(de)h(malades)g(est)3401 1539 y(59,)8
b(43)p 3401 1576 V 3435 1652 a(100)3601 1595 y(.)-246
1667 y
SDict begin H.S end
 -246 1667 a -246 1667 a
SDict begin 12 H.A end
 -246 1667 a -246 1667
a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -246 1667 a 0 TeXcolorgray -141 1747 a FC(3.)p 0 TeXcolorgray
43 w(Le)22 b(fait)h(que)f(la)h(bouteille)g(soit)g(titr\351e)g(\340)e
(12)i(\045)f(vol.)h(signi\002e)f(qu)n('elle)h(contient)h(12)e(\045)g(d)
n('alcool)h(pur)-5 b(.)23 b(On)e(compl\350te)j(donc)e(un)g(tableau)h
(de)-38 1847 y(propor)q(tionnalit\351)c(:)p 0 TeXcolorgray
0 TeXcolorgray 1366 1934 1376 4 v 1366 2033 4 100 v 1419
2004 a(V)-5 b(olume)19 b(\(en)f(mL\))p 2060 2033 V 141
w(500)p 2399 2033 V 228 w(?)p 2738 2033 V 1366 2037 1376
4 v 1366 2136 4 100 v 1419 2106 a(P)n(our)o(centage)p
2060 2136 V 262 w(100)p 2399 2136 V 219 w(12)p 2738 2136
V 1366 2140 1376 4 v -38 2263 a(La)f(bouteille)i(contient)g(500)10
b FB(\243)g FC(12)g FB(\245)g FC(100)19 b FB(\306)14
b FC(60)k(mL)g(d)n('alcool)g(pur)-5 b(.)-246 2295 y
SDict begin H.S end
 -246
2295 a -246 2295 a
SDict begin 12 H.A end
 -246 2295 a -246 2295 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -246 2295
a 0 TeXcolorgray -141 2392 a FC(4.)p 0 TeXcolorgray 43
w(S)n(ur)18 b(100)g(personnes)h(de)e(l)o('entr)o(epr)q(ise)o(,)i(il)f
(y)f(a)g(56)h(hommes)o(.)-38 2506 y(25)g(\045)f(d)n('entr)o(e)h(eux)g
(fument,)h(ce)e(qui)h(r)o(epr\351sente)1566 2689 y(25)10
b FB(\243)g FC(56)g FB(\245)g FC(100)18 b FB(\306)d FC(14)j(personnes)
-38 2871 y(\(on)f(peut)i(bien)e(s\373r)h(fair)o(e)f(un)h(tableau)g(de)f
(propor)q(tionnalit\351)h(pour)g(obtenir)g(cette)g(r\351ponse\).)-38
2985 y(C)o(onclusion)h(:)f(les)g(hommes)h(fumeurs)g(r)o(epr\351sentent)
g(14)f(\045)f(du)g(personnel)i(de)e(l)o('entr)o(epr)q(ise)o(.)-246
3069 y
SDict begin H.S end
 -246 3069 a -246 3069 a
SDict begin 12 H.A end
 -246 3069 a -246 3069
a
SDict begin [/View [/XYZ H.V]/Dest (exo.2) cvn /DEST pdfmark end
 -246 3069 a -246 3087 a
SDict begin H.S end
 -246 3087 a -246 3087 a
SDict begin 12 H.A end
 -246
3087 a -246 3087 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -246 3087 a 0 TeXcolorgray 97 x FE(Ex)o(er)o(cice)d
(2)p 0 TeXcolorgray 0 TeXcolorgray 147 w FC(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1435 3240 1239 4 v 1435
3340 4 100 v 1488 3310 a(N)n(ombr)o(e)i(de)h(personnes)p
2302 3340 V 145 w(4)p 2526 3340 V 144 w(6)p 2670 3340
V 1435 3343 1239 4 v 1435 3443 4 100 v 1653 3413 a(F)l(ar)q(ine)h(\(en)
f(g\))p 2302 3443 V 268 w(250)p 2526 3443 V 114 w(?)p
2670 3443 V 1435 3446 1239 4 v 1435 3546 4 100 v 1660
3516 a(Lait)h(\(en)f(mL\))p 2302 3546 V 276 w(500)p 2526
3546 V 114 w(?)p 2670 3546 V 1435 3549 1239 4 v 1435
3649 4 100 v 1779 3619 a(\214ufs)p 2302 3649 V 435 w(4)p
2526 3649 V 144 w(6)p 2670 3649 V 1435 3652 1239 4 v
-38 3761 a(P)n(our)g(6)g(personnes)o(,)j(il)e(faut)g(250)10
b FB(\243)g FC(6)g FB(\245)g FC(4)17 b FB(\306)d FC(375)19
b(g)e(de)g(far)q(ine)o(,)g(500)10 b FB(\243)g FC(6)g
FB(\245)g FC(4)17 b FB(\306)e FC(750)j(mL)g(de)g(lait)f(et,)h(bien)g
(s\373r)-5 b(,)18 b(6)g(\234ufs)o(.)-246 3794 y
SDict begin H.S end
 -246
3794 a -246 3794 a
SDict begin 12 H.A end
 -246 3794 a -246 3794 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -246 3794
a 0 TeXcolorgray -141 3890 a FC(2.)p 0 TeXcolorgray 43
w(Les)g(6)g(yaour)q(ts)f(p\350sent)i(6)10 b FB(\243)g
FC(125)16 b FB(\306)e FC(750)19 b(g.)p 0 TeXcolorgray
0 TeXcolorgray 1541 3978 1027 4 v 1541 4078 4 100 v 1594
4048 a(masse)f(\(en)g(g\))p 2074 4078 V 102 w(1000)p
2339 4078 V 105 w(750)p 2563 4078 V 1541 4081 1027 4
v 1541 4181 4 100 v 1625 4151 a(pr)q(ix)f(\(en)h Fy(N)p
FC(\))p 2074 4181 V 194 w(2)p 2339 4181 V 214 w(?)p 2563
4181 V 1541 4184 1027 4 v -38 4308 a(J)n(e)f(payer)o(ai)g(750)10
b FB(\243)g FC(2)g FB(\245)g FC(1)e(000)19 b FB(\306)14
b FC(1,)8 b(5)19 b Fy(N)o FC(.)-246 4393 y
SDict begin H.S end
 -246 4393
a -246 4393 a
SDict begin 12 H.A end
 -246 4393 a -246 4393 a
SDict begin [/View [/XYZ H.V]/Dest (exo.3) cvn /DEST pdfmark end
 -246 4393 a 0 TeXcolorgray
114 x FE(Ex)o(er)o(cice)14 b(3)p 0 TeXcolorgray 42 w
FC(L)-10 b('\351nonc\351)18 b(donne)g(les)g(infor)q(mations)h(r)o
(ecens\351es)f(dans)g(le)f(tableau)h(ci-dessous)h(et)e(demande)h(de)f
(compl\351ter)i(la)e(case)3744 4504 y Fx(1)3721 4507
y Fw(\015)p FC(.)p 0 TeXcolorgray 0 TeXcolorgray 1525
4619 850 4 v 1525 4718 4 100 v 1593 4688 a(F)o(lor)q(ins)p
1898 4718 V 118 w(7)p 2042 4718 V 113 w(?)p 2185 4718
V 2262 4685 a Fx(1)2238 4688 y Fw(\015)p 2371 4718 V
1525 4722 850 4 v 1525 4821 4 100 v 1581 4791 a FC(Pistoles)p
1898 4821 V 107 w(6)p 2042 4821 V 1 0 0 TeXcolorrgb 103
w(4)p 0 TeXcolorgray 2185 4821 V 0 TeXcolorgray 2262
4788 a Fx(2)p 0 TeXcolorgray 2238 4791 a Fw(\015)p 2371
4821 V 1525 4825 850 4 v 1525 4924 4 100 v 1579 4894
a FC(Deniers)p 1898 4924 V 112 w(?)p 2042 4924 V 1 0 0
TeXcolorrgb 104 w(5)p 0 TeXcolorgray 2185 4924 V 1 0 0
TeXcolorrgb 104 w(30)p 0 TeXcolorgray 2371 4924 V 1525
4927 850 4 v -246 5076 a(On)h(compl\350te)h(d)n('abor)o(d)d(la)h(case)
774 5073 y Fx(2)751 5076 y Fw(\015)g FC(:)g(en)h(\351change)g(de)f(30)h
(deniers)o(,)g(on)g(a)f(4)10 b FB(\243)g FC(30)g FB(\245)g
FC(5)17 b FB(\306)d FC(24)k(pistoles)h(:)p 0 TeXcolorgray
0 TeXcolorgray 1525 5189 V 1525 5288 4 100 v 1593 5259
a(F)o(lor)q(ins)p 1898 5288 V 1 0 0 TeXcolorrgb 118 w(7)p
0 TeXcolorgray 2042 5288 V 113 w(?)p 2185 5288 V 0 TeXcolorgray
2262 5256 a Fx(1)p 0 TeXcolorgray 2238 5259 a Fw(\015)p
2371 5288 V 1525 5292 850 4 v 1525 5391 4 100 v 1581
5361 a FC(Pistoles)p 1898 5391 V 1 0 0 TeXcolorrgb 107
w(6)p 0 TeXcolorgray 2042 5391 V 103 w(4)p 2185 5391
V 1 0 0 TeXcolorrgb 104 w(24)p 0 TeXcolorgray 2371 5391
V 1525 5395 850 4 v 1525 5494 4 100 v 1579 5464 a(Deniers)p
1898 5494 V 112 w(?)p 2042 5494 V 104 w(5)p 2185 5494
V 104 w(30)p 2371 5494 V 1525 5498 850 4 v -246 5646
a(On)f(peut)g(alors)g(compl\351ter)g(la)g(case)879 5643
y Fx(1)855 5646 y Fw(\015)g FC(:)f(en)h(\351change)f(de)h(30)g(deniers)
o(,)g(on)g(a)f(7)10 b FB(\243)g FC(24)g FB(\245)g FC(6)17
b FB(\306)d FC(28)k(\003or)q(ins)o(.)-246 5731 y
SDict begin H.S end
 -246
5731 a -246 5731 a
SDict begin 12 H.A end
 -246 5731 a -246 5731 a
SDict begin [/View [/XYZ H.V]/Dest (exo.4) cvn /DEST pdfmark end
 -246 5731
a 0 TeXcolorgray 1930 5895 a FC(2)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FE(Ex)o(er)o(cice)14
b(4)p 0 TeXcolorgray 0 TeXcolorgray 147 w FC(1.)p 0 TeXcolorgray
42 w(G\351n\351r)o(alement,)20 b(dans)d(ce)h(type)f(de)h(question,)h
(il)f(vaut)f(mieux)i(conver)q(tir)e(en)h(minutes)p 0 0 1
TeXcolorrgb 2973 -163 a
SDict begin H.S end
 2973 -163 a -30 x Fv(1)3010 -163
y
SDict begin 12 H.L end
 3010 -163 a 3010 -163 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3010 -163 a 0 TeXcolorgray
FC(.)p 0 TeXcolorgray 0 TeXcolorgray 1528 -86 1051 4
v 1528 13 4 100 v 1605 -17 a(temps)h(\(en)e(min\))p 2208
13 V 127 w(60)p 2392 13 V 134 w(?)p 2576 13 V 1528 17
1051 4 v 1528 116 4 100 v 1582 86 a(distance)g(\(en)h(km\))p
2208 116 V 103 w(20)p 2392 116 V 104 w(45)p 2576 116
V 1528 119 1051 4 v -38 230 a(On)f(mettr)o(a)h(60)10
b FB(\243)g FC(45)g FB(\245)g FC(20)18 b FB(\306)c FC(135)19
b(min,)g(soit)f(2)f(h)h(15)g(min)g(\(puisque)h(135)d
FB(\306)e FC(120)c FB(\305)g FC(15\).)-246 259 y
SDict begin H.S end
 -246
259 a -246 259 a
SDict begin 12 H.A end
 -246 259 a -246 259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -246 259 a 0 TeXcolorgray
-141 353 a FC(2.)p 0 TeXcolorgray 43 w(On)17 b(peut)i(se)e(passer)h(d)n
('un)g(tableau)g(de)f(propor)q(tionnalit\351)i(:)e(1)h(h)d
FB(\306)f FC(60)k(min)q(,)f(donc)g(0,)8 b(6)19 b(h)c
FB(\306)f FC(0,)8 b(6)i FB(\243)g FC(60)20 b(min)15 b
FB(\306)f FC(36)k(min)q(.)-246 382 y
SDict begin H.S end
 -246 382 a -246
382 a
SDict begin 12 H.A end
 -246 382 a -246 382 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -246 382 a -246 382 a
SDict begin H.S end
 -246
382 a -246 382 a
SDict begin 12 H.A end
 -246 382 a -246 382 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -246 382 a 0 TeXcolorgray
-141 476 a FC(3.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(On)f(compl\350te)i(deux)e(tableaux)h(de)g(propor)q
(tionnalit\351)g(\(on)g(tr)o(availle)g(en)g(min)g(et)g(en)f(km\))h(:)p
0 TeXcolorgray 0 TeXcolorgray 589 584 1072 4 v 589 684
4 100 v 665 654 a(temps)h(\(en)e(min\))p 1268 684 V 127
w(60)p 1452 684 V 144 w(?)p 1656 684 V 589 687 1072 4
v 589 787 4 100 v 642 757 a(distance)h(\(en)f(km\))p
1268 787 V 123 w(3)p 1452 787 V 124 w(0,5)p 1656 787
V 589 790 1072 4 v 0 TeXcolorgray 0 TeXcolorgray 2661
584 1011 4 v 2661 684 4 100 v 2737 654 a(temps)i(\(en)f(min\))p
3341 684 V 127 w(60)p 3525 684 V 113 w(?)p 3668 684 V
2661 687 1011 4 v 2661 787 4 100 v 2714 757 a(distance)g(\(en)f(km\))p
3341 787 V 104 w(15)p 3525 787 V 104 w(5)p 3668 787 V
2661 790 1011 4 v 145 949 a(S)n(t\351phane)i(nage)e(60)10
b FB(\243)g FC(0,)e(5)i FB(\245)g FC(3)18 b FB(\306)c
FC(10)k(min,)h(puis)f(il)g(cour)q(t)f(60)10 b FB(\243)g
FC(5)g FB(\245)g FC(15)17 b FB(\306)d FC(20)19 b(min.)-246
979 y
SDict begin H.S end
 -246 979 a -246 979 a
SDict begin 12 H.A end
 -246 979 a -246 979 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -246
979 a 0 TeXcolorgray 4 1071 a FC(\(b\))p 0 TeXcolorgray
41 w(S)n(t\351phane)g(a)e(par)o(cour)q(u)g(un)g(total)h(de)g(5)10
b FB(\305)g FC(0,)e(5)16 b FB(\306)e FC(5,)8 b(5)19 b(km,)f(en)f(10)10
b FB(\305)g FC(20)17 b FB(\306)d FC(30)k(min.)p 0 TeXcolorgray
0 TeXcolorgray 1610 1146 1072 4 v 1610 1245 4 100 v 1686
1215 a(temps)h(\(en)e(min\))p 2289 1245 V 137 w(30)p
2493 1245 V 114 w(60)p 2677 1245 V 1610 1249 1072 4 v
1610 1348 4 100 v 1663 1318 a(distance)h(\(en)f(km\))p
2289 1348 V 103 w(5,5)p 2493 1348 V 134 w(?)p 2677 1348
V 1610 1351 1072 4 v 145 1462 a(La)g(vitesse)i(mo)n(yenne)f(de)f(S)n
(t\351phane)j(sur)d(l)o('ensemble)j(de)d(son)h(par)o(cours)f(est)h
(donc)f(60)10 b FB(\243)g FC(5,)e(5)i FB(\245)g FC(30)18
b FB(\306)c FC(11)k(km/h.)-246 1542 y
SDict begin H.S end
 -246 1542 a -246
1542 a
SDict begin 12 H.A end
 -246 1542 a -246 1542 a
SDict begin [/View [/XYZ H.V]/Dest (exo.5) cvn /DEST pdfmark end
 -246 1542 a 0 TeXcolorgray
109 x FE(Ex)o(er)o(cice)c(5)p 0 TeXcolorgray 42 w FC(A)-5
b(vant)23 b(de)f(commencer)-5 b(,)25 b(il)e(est)h(utile)g(de)f(se)g(r)o
(appeler)h(que)g(10)g(cm=1)f(dm)9 b(;)23 b(et)g(que)g(1)h
FA(`)19 b FB(\306)h FC(1)j(dm)3079 1618 y Fv(3)3114 1651
y FC(.)g(A)n(utr)o(ement)h(dit,)f(un)g(litr)o(e)g(est)h(le)-246
1751 y(volume)d(d)n('un)f(cube)f(qui)h(mesur)o(e)f(1)h(dm)f(sur)h(1)f
(dm)g(sur)h(1)f(dm,)h(ou)f(encor)o(e)g(10)h(cm)g(sur)f(10)h(cm)f(sur)h
(10)g(cm)f(\(la)g(\002gur)o(e)f(ci-dessous)j(n)-6 b('est)20
b(bien)f(s\373r)-246 1850 y(pas)f(\340)f(l)o('\351chelle\).)p
0 TeXcolorgray 0 TeXcolorgray 1260 3032 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 166.1639 a add def
/d 0.0 a add neg def /h 131.45152 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1260 3032 a
1596 2767 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 56.90549 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 56.90549 56.90549 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 0.0 56.90549   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 0.0 56.90549   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 85.35823 56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 28.45274 85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1596 2767 a
tx@Dict begin { 16.50264 -4.55254 } PutCoor PutBegin  end
 1596 2767 a 57 x FC(1)g(dm)1596 2767 y
tx@Dict begin  PutEnd  end
 1596
2767 a 1596 2767 a
tx@Dict begin { -28.45274 32.4361 } PutCoor PutBegin  end
 1596 2767 a 57 x FC(1)g(dm)1596 2767
y
tx@Dict begin  PutEnd  end
 1596 2767 a 1596 2767 a
tx@Dict begin { 76.82231 14.79555 } PutCoor PutBegin  end
 1596 2767 a 57 x FC(1)g(dm)1596
2767 y
tx@Dict begin  PutEnd  end
 1596 2767 a 1596 2767 a
tx@Dict begin { 26.17647 35.28156 } PutCoor PutBegin  end
 1596 2767 a 57 x FC(1)g
FA(`)1596 2767 y
tx@Dict begin  PutEnd  end
 1596 2767 a 2640 3032 a
currentpoint initclip moveto
 2640 3032 a
-246 3239 a FC(On)g(r)o(emplit)h(d)n('eau)g(un)f(aquar)q(ium)h(r)o
(ectangulair)o(e)e(dont)h(la)h(largeur)e(est)i(80)f(cm,)h(la)f
(profondeur)g(30)h(cm)f(et)h(la)f(hauteur)h(40)g(cm.)f(On)g(dispose)h
(d)n('un)-246 3339 y(robinet)f(dont)h(le)g(d\351bit)f(est)h(de)f(6)h
(litr)o(es)g(par)f(minute)o(.)-246 3379 y
SDict begin H.S end
 -246 3379 a
-246 3379 a
SDict begin 12 H.A end
 -246 3379 a -246 3379 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -246 3379 a 0 TeXcolorgray
-141 3473 a FC(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
994 4699 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 255.20395 a add def
/d 0.0 a add neg def /h 141.11893 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 994 4699 a 910 4719 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 21.33955 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.67911 106.69777 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.39554 106.69777 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 128.03732 42.67911 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 213.39554 106.69777
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 213.39554 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 128.03732 256.07465 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 85.35822 128.03732
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35822 42.67911 42.67911 21.33955
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07465 42.67911 85.35822 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 910 4719 a
tx@Dict begin { 122.08083 17.51845 } PutCoor PutBegin  end
 910 4719 a 57 x FC(8)h(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 910 4719 a
tx@Dict begin { 19.8912 68.34283 } PutCoor PutBegin  end
 910 4719 a 57 x FC(4)g(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 910 4719 a
tx@Dict begin { 236.70636 31.57625 } PutCoor PutBegin  end
 910 4719 a 57 x FC(3)g(dm)910
4719 y
tx@Dict begin  PutEnd  end
 910 4719 a 3113 4699 a
currentpoint initclip moveto
 3113 4699 a -246 4733 a
SDict begin H.S end

-246 4733 a -246 4733 a
SDict begin 12 H.A end
 -246 4733 a -246 4733 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -246
4733 a 0 TeXcolorgray -141 4844 a FC(2.)p 0 TeXcolorgray
43 w(Les)g(dimensions)h(de)e(l)o('aquar)q(ium)i(sont)f(:)1025
5009 y(largeur)c FB(\306)g FC(8)k(dm,)155 b(profondeur)14
b FB(\306)g FC(3)k(dm,)155 b(hauteur)15 b FB(\306)f FC(4)k(dm,)-38
5174 y(donc)f(son)h(volume)h(est)1795 5273 y(8)10 b FB(\243)g
FC(3)g FB(\243)g FC(4)16 b FB(\306)e FC(96)19 b FA(`)p
FC(.)-246 5313 y
SDict begin H.S end
 -246 5313 a -246 5313 a
SDict begin 12 H.A end
 -246 5313 a
-246 5313 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -246 5313 a 0 TeXcolorgray -141 5423 a FC(3.)p
0 TeXcolorgray 43 w(On)h(peut)i(se)f(passer)g(d)n('un)g(tableau)g(de)f
(propor)q(tionnalit\351)i(:)e(le)h(d\351bit)g(du)f(robinet)g(est)h(de)f
(6)h FA(`)p FC(/min,)h(donc)e(il)h(faut)g(96)11 b FB(\245)g
FC(6)19 b FB(\306)f FC(16)j(min)g(pour)-38 5523 y(r)o(emplir)d(les)g
(96)g FA(`)f FC(de)g(l)o('aquar)q(ium.)p 0 TeXcolorgray
-246 5569 1757 4 v -154 5646 a Fu(1)q(.)p 0 TeXcolorgray
-76 5646 a
SDict begin H.S end
 -76 5646 a -76 5646 a
SDict begin H.R end
 -76 5646 a -76 5646
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -76 5646 a 0 TeXcolorgray Fu(Les)d(calculs)g(ne)g(sont)f(pas)h
(toujours)g(plus)f(faciles)i(en)f(minutes)f(qu)n('en)i(heur)o(es)o(,)f
(mais)g(c)n('est)g(g\351n\351r)o(alement)h(le)g(cas)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1930 5895 a FC(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -246 -246 a 83 x FF(2)105 b(D)o(r)o(oites)24 b(et)f(suites)f(de)
h(nombr)n(es)-246 -78 y
SDict begin H.S end
 -246 -78 a -246 -78 a
SDict begin 12 H.A end
 -246 -78
a -246 -78 a
SDict begin [/View [/XYZ H.V]/Dest (exo.6) cvn /DEST pdfmark end
 -246 -78 a 0 TeXcolorgray 99 x FE(Ex)o(er)o(cice)14
b(6)p 0 TeXcolorgray 42 w FC(Le)21 b(tableau)h(suivant)g(donne)f(l)o
('\351volution)j(du)d(tir)o(age)g(jour)q(nalier)h(\(en)g(millions)h(d)n
('exemplair)o(es\))f(de)f(la)g(pr)o(esse)h(quotidienne)h(d)n('in-)-246
121 y(for)q(mation)18 b(g\351n\351r)o(ale)h(et)e(politique)j(en)e(F)o
(r)o(ance)o(.)p 0 TeXcolorgray 0 TeXcolorgray -246 217
4392 4 v -246 317 4 100 v -193 287 a(Ann\351e)p 330 317
V 604 w(2010)p 1092 317 V 602 w(2011)p 1855 317 V 603
w(2012)p 2617 317 V 602 w(2013)p 3380 317 V 603 w(2014)p
4142 317 V -246 320 4392 4 v -246 520 4 200 v -193 390
a(N)n(um\351ro)-193 490 y(ann\351e)h(:)e Fz(n)p 330 520
V 692 440 a FC(0)p 1092 520 V 723 w(1)p 1855 520 V 722
w(2)p 2617 520 V 723 w(3)p 3380 520 V 722 w(4)p 4142
520 V -246 523 4392 4 v -246 622 4 100 v -193 593 a(T)m(ir)o(age)i(:)e
Fz(u)126 605 y Fs(n)p 330 622 V 642 593 a FC(1,80)p 1092
622 V 622 w(1,73)p 1855 622 V 623 w(1,60)p 2617 622 V
622 w(1,47)p 3380 622 V 623 w(1,36)p 4142 622 V -246
626 4392 4 v 3593 696 a Fz(Sour)o(ce)f(:)i(INSEE)-246
857 y FC(On)g(note)g Fz(u)100 869 y Fs(n)161 857 y FC(le)f(tir)o(age)h
(jour)q(nalier)g(en)g(millions)h(d)n('exemplair)o(es)g(pour)f(l)o
('ann\351e)h(num\351ro)f Fz(n)t FC(.)g(On)f(a)g(donc)g(:)p
0 TeXcolorgray -76 1000 a(\225)p 0 TeXcolorgray 42 w
Fz(u)46 1012 y Fv(0)96 1000 y FB(\306)d FC(tir)o(age)j(jour)q(nalier)h
(l)o('ann\351e)h(0)c FB(\306)f FC(1,)8 b(80)19 b(;)p
0 TeXcolorgray -76 1099 a(\225)p 0 TeXcolorgray 42 w
Fz(u)46 1111 y Fv(1)96 1099 y FB(\306)14 b FC(tir)o(age)j(jour)q
(nalier)h(l)o('ann\351e)h(1)c FB(\306)f FC(1,)8 b(73)19
b(;)p 0 TeXcolorgray -76 1199 a(\225)p 0 TeXcolorgray
42 w Fz(u)46 1211 y Fv(4)96 1199 y FB(\306)14 b FC(tir)o(age)j(jour)q
(nalier)h(l)o('ann\351e)h(4)c FB(\306)f FC(1,)8 b(36.)-246
1279 y
SDict begin H.S end
 -246 1279 a -246 1279 a
SDict begin 12 H.A end
 -246 1279 a -246 1279
a
SDict begin [/View [/XYZ H.V]/Dest (exo.7) cvn /DEST pdfmark end
 -246 1279 a 0 TeXcolorgray 109 x FE(Ex)o(er)o(cice)14
b(7)p 0 TeXcolorgray 42 w Fz(u)21 b FC(est)d(la)g(suite)g(des)f
(multiples)k(de)c(4,)h(en)f(par)q(tant)h(de)f Fz(u)1788
1400 y Fv(0)1838 1388 y FB(\306)d FC(4)c FB(\243)g FC(0)16
b FB(\306)e FC(0.)-246 1429 y
SDict begin H.S end
 -246 1429 a -246 1429 a
SDict begin 12 H.A end

-246 1429 a -246 1429 a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -246 1429 a 0 TeXcolorgray -141
1523 a FC(1.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p
0 TeXcolorgray 42 w Fz(u)129 1535 y Fv(1)179 1523 y FB(\306)g
FC(4)c FB(\243)g FC(1)15 b FB(\306)f FC(4)k(;)p 0 TeXcolorgray
7 1622 a(\225)p 0 TeXcolorgray 42 w Fz(u)129 1634 y Fv(2)179
1622 y FB(\306)c FC(4)c FB(\243)g FC(2)15 b FB(\306)f
FC(8)k(;)p 0 TeXcolorgray 7 1722 a(\225)p 0 TeXcolorgray
42 w Fz(u)129 1734 y Fv(3)179 1722 y FB(\306)c FC(4)c
FB(\243)g FC(3)15 b FB(\306)f FC(12.)-246 1747 y
SDict begin H.S end
 -246
1747 a -246 1747 a
SDict begin 12 H.A end
 -246 1747 a -246 1747 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -246 1747
a 0 TeXcolorgray -141 1845 a FC(2.)p 0 TeXcolorgray 43
w Fz(u)11 1857 y Fv(20)92 1845 y FB(\306)g FC(4)c FB(\243)g
FC(20)16 b FB(\306)e FC(80.)-246 1919 y
SDict begin H.S end
 -246 1919 a -246
1919 a
SDict begin 12 H.A end
 -246 1919 a -246 1919 a
SDict begin [/View [/XYZ H.V]/Dest (exo.8) cvn /DEST pdfmark end
 -246 1919 a 0 TeXcolorgray
115 x FE(Ex)o(er)o(cice)g(8)p 0 TeXcolorgray 42 w Fz(u)21
b FC(est)d(une)g(suite)h(telle)f(que)g(:)p 0 TeXcolorgray
-76 2134 a(\225)p 0 TeXcolorgray 42 w Fz(u)46 2146 y
Fv(0)96 2134 y FB(\306)c FC(2,)p 0 TeXcolorgray -76 2234
a(\225)p 0 TeXcolorgray 42 w(tout)k(ter)q(me)g(de)f(la)g(suite)i(se)e
(d\351duit)h(du)f(pr\351c\351dent)h(en)g(ajoutant)h(3.)-246
2276 y
SDict begin H.S end
 -246 2276 a -246 2276 a
SDict begin 12 H.A end
 -246 2276 a -246 2276
a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -246 2276 a 0 TeXcolorgray -141 2368 a FC(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w Fz(u)129
2380 y Fv(1)179 2368 y FB(\306)14 b FC(3)c FB(\305)g
FC(2)15 b FB(\306)f FC(5)k(;)p 0 TeXcolorgray 7 2468
a(\225)p 0 TeXcolorgray 42 w Fz(u)129 2480 y Fv(2)179
2468 y FB(\306)c FC(5)c FB(\305)g FC(3)15 b FB(\306)f
FC(8)k(;)p 0 TeXcolorgray 7 2567 a(\225)p 0 TeXcolorgray
42 w Fz(u)129 2579 y Fv(3)179 2567 y FB(\306)c FC(8)c
FB(\305)g FC(3)15 b FB(\306)f FC(11)19 b(;)p 0 TeXcolorgray
7 2667 a(\225)p 0 TeXcolorgray 42 w Fz(u)129 2679 y Fv(4)179
2667 y FB(\306)14 b FC(11)c FB(\305)g FC(3)16 b FB(\306)e
FC(14.)-246 2691 y
SDict begin H.S end
 -246 2691 a -246 2691 a
SDict begin 12 H.A end
 -246 2691
a -246 2691 a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -246 2691 a 0 TeXcolorgray -141 2790 a
FC(2.)p 0 TeXcolorgray 43 w(P)n(our)j(obtenir)g(le)h(tableau)g(avec)f
(un)h(tableur)-5 b(,)18 b(on)g(entr)o(e)f(la)h(for)q(mule)1945
2956 y(=B1+1)-38 3122 y(dans)f(la)h(cellule)h(C1,)f(et)f(la)h(for)q
(mule)1945 3221 y(=B2+3)-38 3361 y(dans)f(la)h(cellule)h(C2.)f(Ensuite)
h(on)e(\351tir)o(e)g(vers)h(la)g(droite)o(.)p 0 TeXcolorgray
0 TeXcolorgray -38 3464 4184 4 v -38 3563 4 100 v 105
3563 V 419 3534 a(A)p 778 3563 V 624 w(B)p 1451 3563
V 622 w(C)p 2124 3563 V 617 w(D)p 2797 3563 V 620 w(E)p
3470 3563 V 627 w(F)p 4142 3563 V -38 3567 4184 4 v -38
3666 4 100 v 15 3637 a(1)p 105 3666 V 363 w Fz(n)p 778
3666 V 631 w FC(0)p 1451 3666 V 544 w(=B1+1)p 2124 3666
V 521 w FB(\242)8 b(\242)g(\242)p 2797 3666 V 594 w(\242)g(\242)g(\242)
p 3470 3666 V 594 w(\242)g(\242)g(\242)p 4142 3666 V
-38 3670 4184 4 v -38 3769 4 100 v 15 3739 a FC(2)p 105
3769 V 342 w Fz(u)446 3751 y Fs(n)p 778 3769 V 1096 3739
a FC(2)p 1451 3769 V 544 w(=B2+3)p 2124 3769 V 521 w
FB(\242)g(\242)g(\242)p 2797 3769 V 594 w(\242)g(\242)g(\242)p
3470 3769 V 594 w(\242)g(\242)g(\242)p 4142 3769 V -38
3773 4184 4 v -246 3834 a
SDict begin H.S end
 -246 3834 a -246 3834 a
SDict begin 12 H.A end
 -246
3834 a -246 3834 a
SDict begin [/View [/XYZ H.V]/Dest (exo.9) cvn /DEST pdfmark end
 -246 3834 a 0 TeXcolorgray 94 x FE(Ex)o(er)o(cice)14
b(9)p 0 TeXcolorgray 42 w FC(N)n(otr)o(e)i(objet)i(tombe)g(de)f(:)p
0 TeXcolorgray -76 4027 a(\225)p 0 TeXcolorgray 42 w(5)g(m)h(pendant)g
(la)g(1)570 4003 y Fq(r)o(e)631 4027 y FC(seconde)9 b(;)p
0 TeXcolorgray -76 4127 a(\225)p 0 TeXcolorgray 42 w(15)18
b(m)g(pendant)g(la)f(2)610 4103 y Fq(e)653 4127 y FC(seconde)9
b(;)p 0 TeXcolorgray -76 4226 a(\225)p 0 TeXcolorgray
42 w(25)18 b(m)g(pendant)g(la)f(3)610 4203 y Fq(e)653
4226 y FC(seconde)9 b(;)p 0 TeXcolorgray -76 4326 a(\225)p
0 TeXcolorgray 42 w(35)18 b(m)g(pendant)g(la)f(4)610
4302 y Fq(e)653 4326 y FC(seconde)9 b(;)p 0 TeXcolorgray
-76 4426 a(\225)p 0 TeXcolorgray 42 w(45)18 b(m)g(pendant)g(la)f(5)610
4402 y Fq(e)653 4426 y FC(seconde)o(.)-246 4568 y(C)o(onclusion)j(:)d
(pendant)h(les)g(5)g(pr)o(emi\350r)o(es)g(secondes)o(,)g(l)o('objet)h
(est)f(tomb\351)g(de)1461 4734 y(5)10 b FB(\305)g FC(15)g
FB(\305)g FC(25)g FB(\305)g FC(35)g FB(\305)g FC(45)20
b FB(\306)14 b FC(125)19 b(m.)-246 4943 y FE(R)o(emarque)e(:)j
FC(Les)h(infor)q(mations)h(de)e(l)o('\351nonc\351)i(sont)f
(impr\351cises)h(:)e(si)h(l)o('on)g(n\351glige)g(la)f(r\351sistance)h
(de)f(l)o('air)h(\(frottements\),)h(un)e(objet)h(soumis)h(\340)-246
5043 y(son)c(propr)o(e)f(poids)h(tombe)g(de)f(4,9)h(m)g(pendant)g(la)f
(1)1334 5019 y Fq(r)o(e)1396 5043 y FC(seconde)o(,)g(4,)8
b(9)i FB(\243)g FC(3)16 b FB(\306)f FC(14,)8 b(7)19 b(m)e(pendant)h(la)
g(2)2709 5019 y Fq(e)2735 5043 y FC(,)f(4,)8 b(9)i FB(\243)g
FC(5)16 b FB(\306)f FC(24,)8 b(5)19 b(m)e(pendant)h(la)g(3)3763
5019 y Fq(e)3789 5043 y FC(,)f(etc)o(.)h(Dans)-246 5143
y(l)o('exer)o(cice)o(,)g(nous)g(avons)g(r)o(emplac\351)g(4,9)h(par)e(5)
h(pour)f(simpli\002er)i(les)f(calculs)o(.)-246 5285 y(N)n(otons)c(par)g
(ailleurs)i(que)e(ces)h(r\351sultats)g(doivent)g(\352tr)o(e)f(for)q
(tement)h(corr)q(ig\351s)f(si)g(l)o('on)h(veut)g(tenir)f(compte)i(de)e
(la)g(r\351sistance)h(de)f(l)o('air)-5 b(.)15 b(P)m(ar)f(exemple)o(,)
-246 5385 y(un)24 b(adulte)g(en)f(chute)h(libr)o(e)f(qui)h(par)q(vient)
h(\340)e(se)h(mettr)o(e)f(\253)16 b(\340)23 b(plat)16
b(\273)46 b(devr)o(ait)24 b(arr\352ter)f(d)n('acc\351l\351r)o(er)g
(apr\350s)g(une)h(dizaine)g(de)f(secondes)h(de)f(chute)-246
5485 y(environ,)k(sans)g(d\351passer)f(60)h(m/s)9 b(;)26
b(tandis)h(qu)n('un)f(chat)g(ne)h(d\351passer)o(a)f(pas)h(les)f(20)h
(m/s)f(et)h(pourr)o(a)f(sur)q(vivr)o(e)h(\340)f(une)g(chute)h(d)n('une)
g(hauteur)-246 5584 y(impor)q(tante)o(.)19 b(La)e(vid\351o)p
0 1 0 0 TeXcolorcmyk 490 5586 a
SDict begin H.S end
 490 5586 a 0 1 0 0 TeXcolorcmyk
-2 x FC(KEZ)q(AK)m(O)h(:)f(chute)h(libr)o(e)p 0 1 0 0
TeXcolorcmyk 1213 5527 a
SDict begin H.R end
 1213 5527 a 1213 5584 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.youtube.com/watch?v=RFbmabdbBC0)>>/Subtype
/Link H.B /ANN pdfmark end
 1213
5584 a 0 TeXcolorgray 17 w FC(explique)i(ce)d(probl\350me)h(en)g
(d\351tail.)p 0 TeXcolorgray 1930 5895 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (exo.10) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FE(Ex)o(er)o(cice)14
b(10)p 0 TeXcolorgray 41 w FC(On)j(tr)o(ace)h(les)g(droites)f
Fz(D)938 -151 y Fv(1)988 -163 y FC(:)h Fz(y)j FB(\306)16
b Fz(x)f FB(\241)10 b FC(4,)19 b Fz(D)1415 -151 y Fv(2)1464
-163 y FC(:)g Fz(y)i FB(\306)14 b FC(2)r Fz(x)5 b FC(,)19
b Fz(D)1817 -151 y Fv(3)1866 -163 y FC(:)f Fz(y)j FB(\306)15
b(\241)p FC(2)r Fz(x)g FB(\305)10 b FC(3)18 b(et)g Fz(D)2451
-151 y Fv(4)2501 -163 y FC(:)g Fz(y)j FB(\306)14 b(\241)p
FC(2)k(\340)f(par)q(tir)g(de)g(quatr)o(e)h(tableaux)g(de)f(valeurs)h(:)
-246 37 y(T)-6 b(r)o(ac\351)18 b(de)f Fz(D)124 49 y Fv(1)159
37 y FC(.)p -246 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
-3 119 551 4 v -3 218 4 100 v 52 188 a Fz(x)p 147 218
V 137 w FC(0)p 345 218 V 158 w(2)p 544 218 V -3 222 551
4 v -3 321 4 100 v 54 291 a Fz(y)p 147 321 V 110 w FB(\241)p
FC(4)p 345 321 V 104 w FB(\241)p FC(2)p 544 321 V -3
325 551 4 v 105 521 a(0)10 b FB(\241)g FC(4)15 b FB(\306)f(\241)p
FC(4)105 646 y(2)c FB(\241)g FC(4)15 b FB(\306)f(\241)p
FC(2)p 0 TeXcolorgray 827 663 9 710 v 0 TeXcolorgray
873 37 a(T)-6 b(r)o(ac\351)17 b(de)g Fz(D)1242 49 y Fv(2)1278
37 y FC(.)p 873 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
1171 119 441 4 v 1171 218 4 100 v 1226 188 a Fz(x)p 1321
218 V 109 w FC(0)p 1464 218 V 103 w(2)p 1607 218 V 1171
222 441 4 v 1171 321 4 100 v 1228 291 a Fz(y)p 1321 321
V 110 w FC(0)p 1464 321 V 103 w(4)p 1607 321 V 1171 325
441 4 v 1251 521 a(2)10 b FB(\243)g FC(0)15 b FB(\306)f
FC(2)1251 646 y(2)c FB(\243)g FC(2)15 b FB(\306)f FC(4)p
0 TeXcolorgray 1946 663 9 710 v 0 TeXcolorgray 1992 37
a(T)-6 b(r)o(ac\351)17 b(de)g Fz(D)2361 49 y Fv(3)2396
37 y FC(.)p 1992 67 425 5 v 0 TeXcolorgray 0 TeXcolorgray
2262 119 496 4 v 2262 218 4 100 v 2317 189 a Fz(x)p 2412
218 V 109 w FC(0)p 2555 218 V 131 w(2)p 2754 218 V 2262
222 496 4 v 2262 321 4 100 v 2319 292 a Fz(y)p 2412 321
V 110 w FC(3)p 2555 321 V 103 w FB(\241)p FC(1)p 2754
321 V 2262 325 496 4 v 2256 521 a FB(\241)10 b FC(2)g
FB(\243)g FC(0)g FB(\305)g FC(3)17 b FB(\306)d FC(3)2256
646 y FB(\241)c FC(2)g FB(\243)g FC(2)g FB(\305)g FC(3)17
b FB(\306)d(\241)p FC(1)p 0 TeXcolorgray 3064 663 9 710
v 0 TeXcolorgray 3110 37 a(T)-6 b(r)o(ac\351)18 b(de)f
Fz(D)3480 49 y Fv(4)3515 37 y FC(.)p 3110 67 425 5 v
0 TeXcolorgray 0 TeXcolorgray 3353 149 551 4 v 3353 249
4 100 v 3408 219 a Fz(x)p 3503 249 V 136 w FC(0)p 3701
249 V 159 w(2)p 3900 249 V 3353 252 551 4 v 3353 352
4 100 v 3410 322 a Fz(y)p 3503 352 V 110 w FB(\241)p
FC(2)p 3701 352 V 103 w FB(\241)p FC(2)p 3900 352 V 3353
355 551 4 v -246 845 a(On)h(place)g(\340)f(chaque)h(fois)g(les)g(deux)f
(points)i(en)f(gr)q(is)o(,)f(puis)i(on)e(tr)o(ace)h(les)g(droites)f(en)
h(couleur)g(:)p 0 TeXcolorgray 0 TeXcolorgray 973 2633
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 235.4022 a add def
/d 0.0 a add neg def /h 202.12918 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 973 2633 a 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -91.04913 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 164.04189 0.0 -71.36032 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.76228 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -68.28685 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 97.87788 0.0 -104.2513   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76228 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 164.04189  0 -71.36032  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -71.36032
 164.04189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-104.2513  def /maxTickline 97.87788  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 22.76228
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.87788
0.0 -104.2513   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.04189
0.0 -71.36032 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 97.87788  0 -104.2513  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -104.2513
 97.87788  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-71.36032  def /maxTickline 164.04189  def /dT 1491749 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 22.76228  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.87788
0.0 -104.2513   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 164.04189
0.0 -71.36032 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1550 1865 a Fv(0)158
b(1)g(2)g(3)g(4)g(5)g(6)-1375 b Fp(\241)p Fv(1)-262 b
Fp(\241)p Fv(2)g Fp(\241)p Fv(3)1476 1787 y(0)1435 1976
y Fp(\241)p Fv(1)1435 2165 y Fp(\241)p Fv(2)1435 2354
y Fp(\241)p Fv(3)1435 2543 y Fp(\241)p Fv(4)1476 1598
y(1)1476 1409 y(2)1476 1220 y(3)1565 1768 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0.49803 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-4.--1.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0.49803 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768 a
tx@Dict begin { 101.38412 37.78546 } PutCoor PutBegin  end
 1565 1768 a 1 0.49803 0
TeXcolorrgb 53 x Fz(D)1628 1833 y Fv(1)p 0 TeXcolorgray
1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-0.--2.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1565 1768 a
tx@Dict begin { 31.32904 60.54774 } PutCoor PutBegin  end
 1565 1768 a 0.49803 0 1 TeXcolorrgb 53 x
Fz(D)1628 1833 y Fv(2)p 0 TeXcolorgray 1565 1768 a
tx@Dict begin  PutEnd  end
 1565
1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((--3.-2.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768
a
tx@Dict begin { 79.19249 -79.66798 } PutCoor PutBegin  end
 1565 1768 a 0 1 0 TeXcolorrgb 53 x Fz(D)1628 1833 y
Fv(3)p 0 TeXcolorgray 1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.135027624309382
def /x1 7.206740331491703 def /dx x1 x sub 49 div def /F@pstplot ((-2.-0.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 22.76228 mul F@pstplot
22.76228 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 22.76228 mul gt { moveto } { dup -1.e30 22.76228
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 22.76228 mul gt { moveto } {
dup -1.e30 22.76228 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1565 1768 a
tx@Dict begin { 91.04913 -34.14342 } PutCoor PutBegin  end
 1565 1768 a 0 0 1
TeXcolorrgb 53 x Fz(D)1628 1833 y Fv(4)p 0 TeXcolorgray
1565 1768 a
tx@Dict begin  PutEnd  end
 1565 1768 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 0.0   false
NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 91.04913
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 68.28685  
false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 -22.76228
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 -91.04913 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 45.52457 -45.52457
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.5  setgray  [ 0.0 -45.52457 
 false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
2927 2633 a
currentpoint initclip moveto
 2927 2633 a -246 2816 a FE(R)o(emarque)14
b(:)k FC(La)f(droite)g Fz(D)567 2828 y Fv(4)619 2816
y FC(est)h(hor)q(izontale)o(.)g(C'\351tait)g(pr\351visible)o(,)h
(puisque)g(la)f(valeur)g(de)j Fz(y)41 b FC(\()p FB(\241)p
FC(2\))17 b(est)h(ind\351pendante)h(de)g Fz(x)5 b FC(.)-246
2783 y
SDict begin H.S end
 -246 2783 a -246 2783 a
SDict begin 12 H.A end
 -246 2783 a -246 2783
a
SDict begin [/View [/XYZ H.V]/Dest (exo.11) cvn /DEST pdfmark end
 -246 2783 a 0 TeXcolorgray 180 x FE(Ex)o(er)o(cice)14
b(11)p 0 TeXcolorgray 41 w FC(On)j(lit)h(gr)o(aphiquement)i(les)e(or)o
(donn\351es)g(\340)f(l)o('or)q(igine)h(et)g(les)g(coef\002cients)g(dir)
o(ecteurs)g(des)f(droites)g(:)p 0 TeXcolorgray 0 TeXcolorgray
-246 5184 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.31767 a add def
/d 0.0 a add neg def /h 242.41748 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -246 5184 a 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 189.49536 0.0 -76.82231 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 169.57854 0.0 -72.83894   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 189.49536  0 -76.82231  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.82231
 189.49536  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-72.83894  def /maxTickline 169.57854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.57854  0 -72.83894  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -72.83894
 169.57854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.82231  def /maxTickline 189.49536  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 377 4676 a Fv(0)205
b(1)g(2)g(3)h(4)f(5)g(6)-1705 b Fp(\241)p Fv(1)-310 b
Fp(\241)p Fv(2)303 4598 y(0)261 4835 y Fp(\241)p Fv(1)261
5071 y Fp(\241)p Fv(2)303 4362 y(1)303 4126 y(2)303 3889
y(3)303 3653 y(4)303 3417 y(5)392 4579 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((-1.--2.*x)/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
-28.45274 0.0 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 28.45274 28.45274 -28.45274   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
28.45274 28.45274 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 85.35823 56.90549 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
85.35823 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 142.26372 85.35823 85.35823   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 392 4579 a
tx@Dict begin { 71.13185 158.76636 } PutCoor PutBegin  end
 392 4579 a 0 1 0
TeXcolorrgb 53 x Fz(D)455 4644 y Fv(1)p 0 TeXcolorgray
392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a 392 4579 a
tx@Dict begin { 30.15984 -9.67383 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1
TeXcolorrgb 51 x FB(\305)p FC(2)p 0 TeXcolorgray 392
4579 a
tx@Dict begin  PutEnd  end
 392 4579 a 392 4579 a
tx@Dict begin { 58.61258 58.0434 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb
51 x FB(\305)p FC(2)p 0 TeXcolorgray 392 4579 a
tx@Dict begin  PutEnd  end
 392 4579
a 392 4579 a
tx@Dict begin { 87.06532 115.51807 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb 51 x
FB(\305)p FC(2)p 0 TeXcolorgray 392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a
392 4579 a
tx@Dict begin { -53.49129 -24.185 } PutCoor PutBegin  end
 392 4579 a 1 0.49803 0 TeXcolorrgb 420 4664
a Fz(b)18 b FB(\306)d(\241)p FC(1)p 392 4582 283 4 v
392 4691 4 111 v 671 4691 V 392 4693 283 4 v 0 TeXcolorgray
392 4579 a
tx@Dict begin  PutEnd  end
 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 109.25842
108.68968 134.29698 77.96066   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
392 4579 a
tx@Dict begin { 120.0706 76.82231 } PutCoor PutBegin  end
 392 4579 a 0.49803 0 1 TeXcolorrgb 422 4658
a Fz(a)j FB(\306)d FC(2)p 392 4582 230 4 v 392 4685 4
105 v 618 4685 V 392 4687 230 4 v 0 TeXcolorgray 392
4579 a
tx@Dict begin  PutEnd  end
 392 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
-28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
1965 5184 a
currentpoint initclip moveto
 1965 5184 a 0 1 0 TeXcolorrgb 591 5521 a
Fz(D)654 5533 y Fv(1)704 5521 y FC(:)j Fz(y)j FB(\306)p
0.49803 0 1 TeXcolorrgb 15 w FC(2)p 0 1 0 TeXcolorrgb
2 w Fz(x)p 1 0.49803 0 TeXcolorrgb 5 w FB(\241)p FC(1)p
0 1 0 TeXcolorrgb 0 TeXcolorgray 591 5646 a Fz(D)654
5658 y Fv(1)704 5646 y FC(:)d Fz(y)j FB(\306)15 b FC(2)r
Fz(x)g FB(\241)10 b FC(1)p 0 TeXcolorgray 1946 5676 9
2596 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1992
5184 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 266.31767 a add def
/d 0.0 a add neg def /h 242.41748 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 5184 a 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 189.49536 0.0 -76.82231 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 169.57854 0.0 -72.83894   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 189.49536  0 -76.82231  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.82231
 189.49536  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-72.83894  def /maxTickline 169.57854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.57854  0 -72.83894  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -72.83894
 169.57854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.82231  def /maxTickline 189.49536  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.57854
0.0 -72.83894   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 189.49536
0.0 -76.82231 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2614 4676 a Fv(0)205
b(1)g(2)h(3)f(4)g(5)g(6)-1705 b Fp(\241)p Fv(1)-309 b
Fp(\241)p Fv(2)2540 4598 y(0)2499 4835 y Fp(\241)p Fv(1)2499
5071 y Fp(\241)p Fv(2)2540 4362 y(1)2540 4126 y(2)2540
3889 y(3)2540 3653 y(4)2540 3417 y(5)2629 4579 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((--4.-1.*x)/1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2629 4579 a
tx@Dict begin { 113.81097 15.93346 } PutCoor PutBegin  end
 2629 4579 a 0 1 0
TeXcolorrgb 53 x Fz(D)2692 4644 y Fv(2)p 0 TeXcolorgray
2629 4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { 30.15984 101.29169 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x FB(\241)p FC(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { -50.64584 127.46815 } PutCoor PutBegin  end
 2629 4579 a 1 0.49803 0
TeXcolorrgb 2658 4664 a Fz(b)18 b FB(\306)c FC(4)p 2629
4582 228 4 v 2629 4691 4 111 v 2853 4691 V 2629 4693
228 4 v 0 TeXcolorgray 2629 4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579
a
tx@Dict begin { 102.99878 104.13713 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1 TeXcolorrgb 2660 4658 a Fz(a)k
FB(\306)c(\241)p FC(1)p 2629 4582 285 4 v 2629 4685 4
105 v 2910 4685 V 2629 4687 285 4 v 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
113.81097 0.0 113.81097   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 85.35823 28.45274 113.81097   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
85.35823 28.45274 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 56.90549 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
56.90549 56.90549 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 28.45274 85.35823 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2629 4579 a
tx@Dict begin { 58.61258 72.83894 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x FB(\241)p FC(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a 2629 4579 a
tx@Dict begin { 87.06532 44.3862 } PutCoor PutBegin  end
 2629 4579 a 0.49803 0 1
TeXcolorrgb 51 x FB(\241)p FC(1)p 0 TeXcolorgray 2629
4579 a
tx@Dict begin  PutEnd  end
 2629 4579 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 78.5294
70.56267 107.55133 87.06532   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4203 5184 a
currentpoint initclip moveto
 4203
5184 a 0 1 0 TeXcolorrgb 2811 5521 a Fz(D)2874 5533 y
Fv(2)2924 5521 y FC(:)k Fz(y)j FB(\306)p 0.49803 0 1
TeXcolorrgb 14 w(\241)p FC(1)p 0 1 0 TeXcolorrgb 3 w
Fz(x)p 1 0.49803 0 TeXcolorrgb 5 w FB(\305)p FC(4)p 0 1 0
TeXcolorrgb 0 TeXcolorgray 2811 5646 a Fz(D)2874 5658
y Fv(2)2924 5646 y FC(:)d Fz(y)j FB(\306)14 b(\241)r
Fz(x)h FB(\305)10 b FC(4)p 0 TeXcolorgray 1930 5895 a(5)p
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -232 1213 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.11636 a add def
/d 0.0 a add neg def /h 175.66972 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -232 1213 a
172 215 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 7
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 207.4672 0.0 -48.64917 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 55.52097 0.0 -120.14876   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 207.4672  0 -48.64917  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -48.64917
 207.4672  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-120.14876  def /maxTickline 55.52097  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 55.52097
0.0 -120.14876   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 207.4672
0.0 -48.64917 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 55.52097  0 -120.14876  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -120.14876
 55.52097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-48.64917  def /maxTickline 207.4672  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 55.52097
0.0 -120.14876   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 207.4672
0.0 -48.64917 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 157 312 a Fv(0)205 b(1)g(2)g(3)h(4)f(5)g(6)
-1705 b Fp(\241)p Fv(1)83 235 y(0)41 471 y Fp(\241)p
Fv(1)41 707 y Fp(\241)p Fv(2)41 943 y Fp(\241)p Fv(3)41
1180 y Fp(\241)p Fv(4)83 -2 y(1)172 215 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((-2.--0.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 172 215 a
tx@Dict begin { 120.45352 25.96893 } PutCoor PutBegin  end
 172 215 a 0 1 0 TeXcolorrgb
54 x Fz(D)235 281 y Fv(3)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a 172 215 a
tx@Dict begin { -42.67911 -40.79662 } PutCoor PutBegin  end
 172 215 a 1 0.49803 0 TeXcolorrgb 200
301 a Fz(b)18 b FB(\306)d(\241)p FC(2)p 172 219 283 4
v 172 328 4 111 v 451 328 V 172 330 283 4 v 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a 172 215 a
tx@Dict begin { 110.05553 -65.44139 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb
202 295 a Fz(a)j FB(\306)d FC(0,)8 b(5)p 172 219 299
4 v 172 332 4 116 v 467 332 V 172 334 299 4 v 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
-56.90549 0.0 -56.90549   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 -42.67911 28.45274 -56.90549   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
-42.67911 28.45274 -42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 -28.45274 56.90549 -42.67911   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
-28.45274 56.90549 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 -14.22636 85.35823 -28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 172 215 a
tx@Dict begin { 31.86693 -48.36957 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1
TeXcolorrgb 51 x FB(\305)p FC(0,)g(5)p 0 TeXcolorgray
172 215 a
tx@Dict begin  PutEnd  end
 172 215 a 172 215 a
tx@Dict begin { 60.31967 -34.1432 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb
51 x FB(\305)p FC(0,)g(5)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a 172 215 a
tx@Dict begin { 88.77242 -19.91682 } PutCoor PutBegin  end
 172 215 a 0.49803 0 1 TeXcolorrgb 51
x FB(\305)p FC(0,)g(5)p 0 TeXcolorgray 172 215 a
tx@Dict begin  PutEnd  end
 172
215 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 102.43004
-30.15984 119.90607 -59.75093   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
-56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 1895 1213 a
currentpoint initclip moveto
 1895 1213 a 0 1 0
TeXcolorrgb 557 2209 a Fz(D)620 2221 y Fv(3)669 2209
y FC(:)19 b Fz(y)i FB(\306)p 0.49803 0 1 TeXcolorrgb
14 w FC(0,)8 b(5)p 0 1 0 TeXcolorrgb 4 w Fz(x)p 1 0.49803 0
TeXcolorrgb 5 w FB(\241)p FC(2)p 0 1 0 TeXcolorrgb 0
TeXcolorgray 557 2334 a Fz(D)620 2346 y Fv(3)669 2334
y FC(:)19 b Fz(y)i FB(\306)14 b FC(0,)8 b(5)r Fz(x)15
b FB(\241)10 b FC(2)p 0 TeXcolorgray 1946 2363 9 2610
v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1992 1841
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 262.1333 a add def
/d 0.0 a add neg def /h 240.28926 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1992 1841 a 2545 878 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -113.81097 T 9
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 195.47107 0.0 -66.66223 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 124.31186 0.0 -115.9774   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 195.47107  0 -66.66223  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -66.66223
 195.47107  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-115.9774  def /maxTickline 124.31186  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.31186
0.0 -115.9774   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.47107
0.0 -66.66223 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 124.31186  0 -115.9774  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -115.9774
 124.31186  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-66.66223  def /maxTickline 195.47107  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 124.31186
0.0 -115.9774   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.47107
0.0 -66.66223 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2530 975 a Fv(0)205
b(1)g(2)g(3)g(4)h(5)f(6)-1706 b Fp(\241)p Fv(1)-309 b
Fp(\241)p Fv(2)2456 897 y(0)2414 1133 y Fp(\241)p Fv(1)2414
1370 y Fp(\241)p Fv(2)2414 1606 y Fp(\241)p Fv(3)2414
1842 y Fp(\241)p Fv(4)2456 661 y(1)2456 425 y(2)2456
188 y(3)2545 878 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -1 def /x1 5 def /dx
x1 x sub 49 div def /F@pstplot ((--3.-1.5*x)/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
2545 878 a
tx@Dict begin { 89.62596 -71.16832 } PutCoor PutBegin  end
 2545 878 a 0 1 0 TeXcolorrgb 53 x Fz(D)2608
943 y Fv(4)p 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545
878 a
tx@Dict begin { -54.90012 103.02744 } PutCoor PutBegin  end
 2545 878 a 1 0.49803 0 TeXcolorrgb 2573 963 a Fz(b)18
b FB(\306)c FC(3)p 2545 881 228 4 v 2545 990 4 111 v
2769 990 V 2545 992 228 4 v 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end

2545 878 a 2545 878 a
tx@Dict begin { 112.014 -55.48492 } PutCoor PutBegin  end
 2545 878 a 0.49803 0 1 TeXcolorrgb
2575 957 a Fz(a)k FB(\306)c(\241)p FC(1,)8 b(5)p 2545
881 354 4 v 2545 994 4 116 v 2895 994 V 2545 996 354
4 v 0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 29.67749 66.86412 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x FB(\241)p FC(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 58.80316 24.185 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x FB(\241)p FC(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a 2545 878 a
tx@Dict begin { 87.36923 -18.4941 } PutCoor PutBegin  end
 2545
878 a 0.49803 0 1 TeXcolorrgb 51 x FB(\241)p FC(1,)g(5)p
0 TeXcolorgray 2545 878 a
tx@Dict begin  PutEnd  end
 2545 878 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.86653
-30.39862 119.90607 -53.93065   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
85.35823 0.0 85.35823   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 42.67911 28.45274 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
42.67911 28.45274 42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.90549 0.0 56.90549 42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
0.0 56.90549 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 -42.67911 85.35823 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0.49803 0  setrgbcolor  [ 0.0
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 4168 1841 a
currentpoint initclip moveto
 4168
1841 a 0 1 0 TeXcolorrgb 2767 2209 a Fz(D)2830 2221 y
Fv(4)2879 2209 y FC(:)19 b Fz(y)i FB(\306)p 0.49803 0 1
TeXcolorrgb 14 w(\241)p FC(1,)8 b(5)p 0 1 0 TeXcolorrgb
3 w Fz(x)p 1 0.49803 0 TeXcolorrgb 5 w FB(\305)p FC(3)p
0 1 0 TeXcolorrgb 0 TeXcolorgray 2767 2334 a Fz(D)2830
2346 y Fv(4)2879 2334 y FC(:)19 b Fz(y)i FB(\306)14 b(\241)p
FC(1,)8 b(5)r Fz(x)15 b FB(\305)10 b FC(3)-246 2426 y
SDict begin H.S end

-246 2426 a -246 2426 a
SDict begin 12 H.A end
 -246 2426 a -246 2426 a
SDict begin [/View [/XYZ H.V]/Dest (exo.12) cvn /DEST pdfmark end
 -246
2426 a 0 TeXcolorgray 100 x FE(Ex)o(er)o(cice)k(12)p
0 TeXcolorgray 41 w FC(Le)k(gr)o(aphique)h(suivant)f(donne)g(le)g(pr)q
(ix)f(pay\351)g(dans)h(une)g(pompe)h(\340)e(essence)h(en)g(fonction)h
(de)e(la)g(quantit\351)i(de)e(gazole)g(achet\351e)o(.)p
0 TeXcolorgray 0 TeXcolorgray 1094 4290 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.11479 a add def
/d 0.0 a add neg def /h 200.7048 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1094 4290 a
1274 4141 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 184.50043 0.0 -21.61436 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 182.79463 0.0 -17.91017   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 184.50043  0 -21.61436  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -21.61436
 184.50043  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-17.91017  def /maxTickline 182.79463  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 182.79463
0.0 -17.91017   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.50043
0.0 -21.61436 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 182.79463  0 -17.91017  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -17.91017
 182.79463  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-21.61436  def /maxTickline 184.50043  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 182.79463
0.0 -17.91017   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.50043
0.0 -21.61436 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1259 4238 a Fv(0)205 b(1)g(2)g(3)g(4)h(5)f(6)
1185 3925 y(1)1185 3688 y(2)1185 3452 y(3)1185 3216 y(4)1185
2980 y(5)1185 2743 y(6)1274 4141 y
tx@Dict begin { 146.53145 22.76227 } PutCoor PutBegin  end
 1274 4141 a 57 x FC(gazole)1274
4298 y(\(en)17 b FA(`)p FC(\))1274 4141 y
tx@Dict begin  PutEnd  end
 1274 4141 a
1274 4141 a
tx@Dict begin { 3.41418 150.87689 } PutCoor PutBegin  end
 1274 4141 a 54 x FC(pr)q(ix)1274 4295 y(\(en)g
Fy(N)p FC(\))1274 4141 y
tx@Dict begin  PutEnd  end
 1274 4141 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0. def /x1 6.484452736237389 def
/dx x1 x sub 49 div def /F@pstplot (1.5*x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 170.71646 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 170.71646 113.81097
170.71646   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
28.45274 42.67911 28.45274 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1274 4141 a
tx@Dict begin { 30.15984 24.46938 } PutCoor PutBegin  end
 1274
4141 a 0.49803 0 1 TeXcolorrgb 52 x FB(\305)p FC(1,)8
b(5)p 0 TeXcolorgray 1274 4141 a
tx@Dict begin  PutEnd  end
 1274 4141 a 2806 4290
a
currentpoint initclip moveto
 2806 4290 a -246 4461 a FC(Il)17 b(y)g(a)g(deux)h(m\351thodes)g
(possibles)h(pour)f(r\351pondr)o(e)f(\340)g(la)h(question)h(:)p
0 TeXcolorgray -76 4560 a(\225)p 0 TeXcolorgray 42 w
FE(P)m(ointill\351s)14 b(rouges)h(:)i FC(4)h(litr)o(es)g(de)f(gazole)g
(co\373tent)h(6)g Fy(N)p FC(,)f(donc)g(le)h(litr)o(e)f(co\373te)h(6)10
b FB(\245)g FC(4)16 b FB(\306)e FC(1,)8 b(5)18 b Fy(N)p
FC(.)p 0 TeXcolorgray -76 4660 a(\225)p 0 TeXcolorgray
42 w FE(F)o(l\350ches)d(violettes)g(:)i FC(chaque)h(litr)o(e)g
(co\373te)g(1,5)g Fy(N)p FC(.)-246 4740 y
SDict begin H.S end
 -246 4740 a
-246 4740 a
SDict begin 12 H.A end
 -246 4740 a -246 4740 a
SDict begin [/View [/XYZ H.V]/Dest (exo.13) cvn /DEST pdfmark end
 -246 4740 a 0 TeXcolorgray
112 x FE(Ex)o(er)o(cice)c(13)p 0 TeXcolorgray 41 w FC(Dans)j(chaque)h
(question,)h Fz(u)j FC(est)c(une)g(suite)g(ar)q(ithm\351tique)i(de)d(r)
o(aison)h Fz(r)r FC(.)-246 4894 y
SDict begin H.S end
 -246 4894 a -246 4894
a
SDict begin 12 H.A end
 -246 4894 a -246 4894 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -246 4894 a 0 TeXcolorgray
-141 4989 a FC(1.)p 0 TeXcolorgray 43 w Fz(u)11 5001
y Fv(0)61 4989 y FB(\306)c FC(2)k(et)f Fz(r)25 b FB(\306)14
b FC(4.)1779 5272 y Fz(u)1828 5284 y Fv(1)1878 5272 y
FB(\306)g FC(2)c FB(\305)g FC(4)16 b FB(\306)e FC(6)1779
5397 y Fz(u)1828 5409 y Fv(2)1878 5397 y FB(\306)g FC(6)c
FB(\305)g FC(4)16 b FB(\306)e FC(10)1779 5521 y Fz(u)1828
5533 y Fv(3)1878 5521 y FB(\306)g FC(10)c FB(\305)g FC(4)16
b FB(\306)e FC(14.)p 0 TeXcolorgray 1930 5895 a(6)p 0
TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FC(2.)p
0 TeXcolorgray 43 w Fz(u)11 -151 y Fv(0)61 -163 y FB(\306)14
b FC(5)k(et)f Fz(r)25 b FB(\306)14 b(\241)p FC(2.)1792
134 y Fz(u)1841 146 y Fv(1)1891 134 y FB(\306)g FC(5)c
FB(\241)g FC(2)16 b FB(\306)e FC(3)1792 259 y Fz(u)1841
271 y Fv(2)1891 259 y FB(\306)g FC(3)c FB(\241)g FC(2)16
b FB(\306)e FC(1)1792 383 y Fz(u)1841 395 y Fv(3)1891
383 y FB(\306)g FC(1)c FB(\241)g FC(2)16 b FB(\306)e(\241)p
FC(1.)-246 621 y
SDict begin H.S end
 -246 621 a -246 621 a
SDict begin 12 H.A end
 -246 621 a -246
621 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -246 621 a 0 TeXcolorgray -141 705 a FC(3.)p 0
TeXcolorgray 43 w Fz(u)11 717 y Fv(0)61 705 y FB(\306)g
FC(10)k(et)g Fz(r)25 b FB(\306)14 b FC(1,)8 b(5.)-38
819 y(P)n(our)17 b(obtenir)g Fz(u)463 831 y Fv(6)499
819 y FC(,)g(on)h(par)q(t)f(de)g Fz(u)956 831 y Fv(0)1006
819 y FB(\306)d FC(10)k(et)g(on)g(r)o(ajoute)g(6)g(fois)g(1,)8
b(5.)19 b(Donc)1547 1002 y Fz(u)1596 1014 y Fv(6)1645
1002 y FB(\306)c FC(10)10 b FB(\305)g FC(6)g FB(\243)g
FC(1,)e(5)17 b FB(\306)d FC(10)c FB(\305)g FC(9)16 b
FB(\306)f FC(19.)-246 1098 y
SDict begin H.S end
 -246 1098 a -246 1098 a
SDict begin 12 H.A end

-246 1098 a -246 1098 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -246 1098 a 0 TeXcolorgray -141
1199 a FC(4.)p 0 TeXcolorgray 43 w Fz(u)11 1211 y Fv(0)61
1199 y FB(\306)f FC(4)k(et)f Fz(u)319 1211 y Fv(2)369
1199 y FB(\306)d FC(10.)p 0 TeXcolorgray 0 TeXcolorgray
1524 1364 2 2 v 1526 1365 88 4 v 1614 1364 2 2 v 1523
1464 4 100 v 1615 1464 V 1524 1467 2 2 v 1526 1468 88
4 v 1614 1467 2 2 v 1550 1439 a(4)p 1 0 0 TeXcolorrgb
1765 1312 a Fp(\305)p Fs(r)p 0 TeXcolorgray 1639 1354
4 4 v 1641 1353 V 1643 1352 V 1645 1350 V 1646 1349 V
1648 1348 V 1650 1347 V 1652 1346 V 1654 1344 V 1655
1343 V 1657 1342 V 1659 1341 V 1661 1340 V 1663 1339
V 1664 1338 V 1666 1337 V 1668 1335 V 1670 1334 V 1672
1333 V 1673 1332 V 1675 1331 V 1677 1330 V 1679 1329
V 1681 1328 V 1683 1328 V 1684 1327 V 1686 1326 V 1688
1325 V 1690 1324 V 1692 1323 V 1693 1322 V 1695 1321
V 1697 1321 V 1699 1320 V 1701 1319 V 1702 1318 V 1704
1317 V 1706 1317 V 1708 1316 V 1710 1315 V 1712 1314
V 1713 1314 V 1715 1313 V 1717 1312 V 1719 1312 V 1721
1311 V 1722 1310 V 1724 1310 V 1726 1309 V 1728 1309
V 1730 1308 V 1731 1307 V 1733 1307 V 1735 1306 V 1737
1306 V 1739 1305 V 1740 1305 V 1742 1304 V 1744 1304
V 1746 1304 V 1748 1303 V 1750 1303 V 1751 1302 V 1753
1302 V 1755 1302 V 1757 1301 V 1759 1301 V 1760 1301
V 1762 1300 V 1939 1337 a Fo(\045)p Fn(\045)p 1838 1300
V 1840 1301 V 1842 1301 V 1844 1301 V 1845 1302 V 1847
1302 V 1849 1302 V 1851 1303 V 1853 1303 V 1854 1304
V 1856 1304 V 1858 1304 V 1860 1305 V 1862 1305 V 1864
1306 V 1865 1306 V 1867 1307 V 1869 1307 V 1871 1308
V 1873 1309 V 1874 1309 V 1876 1310 V 1878 1310 V 1880
1311 V 1882 1312 V 1883 1312 V 1885 1313 V 1887 1314
V 1889 1314 V 1891 1315 V 1892 1316 V 1894 1317 V 1896
1317 V 1898 1318 V 1900 1319 V 1902 1320 V 1903 1321
V 1905 1321 V 1907 1322 V 1909 1323 V 1911 1324 V 1912
1325 V 1914 1326 V 1916 1327 V 1918 1328 V 1920 1328
V 1921 1329 V 1923 1330 V 1925 1331 V 1927 1332 V 1929
1333 V 1931 1334 V 1932 1335 V 1934 1337 V 1936 1338
V 1963 1362 2 2 v 1965 1363 136 4 v 2101 1362 2 2 v 1962
1466 4 103 v 2103 1466 V 1963 1469 2 2 v 1965 1470 136
4 v 2101 1469 2 2 v 1989 1440 a FC(???)p 1 0 0 TeXcolorrgb
2239 1312 a Fp(\305)p Fs(r)p 0 TeXcolorgray 2126 1341
4 4 v 2128 1340 V 2130 1339 V 2132 1338 V 2134 1337 V
2136 1335 V 2138 1334 V 2140 1333 V 2141 1332 V 2143
1331 V 2145 1330 V 2147 1329 V 2149 1328 V 2151 1328
V 2153 1327 V 2155 1326 V 2157 1325 V 2158 1324 V 2160
1323 V 2162 1322 V 2164 1321 V 2166 1321 V 2168 1320
V 2170 1319 V 2172 1318 V 2174 1317 V 2175 1317 V 2177
1316 V 2179 1315 V 2181 1314 V 2183 1314 V 2185 1313
V 2187 1312 V 2189 1312 V 2191 1311 V 2192 1310 V 2194
1310 V 2196 1309 V 2198 1309 V 2200 1308 V 2202 1307
V 2204 1307 V 2206 1306 V 2208 1306 V 2209 1305 V 2211
1305 V 2213 1304 V 2215 1304 V 2217 1304 V 2219 1303
V 2221 1303 V 2223 1302 V 2225 1302 V 2226 1302 V 2228
1301 V 2230 1301 V 2232 1301 V 2234 1300 V 2236 1300
V 2427 1342 a Fo(\045)p Fn(\045)p 2311 1300 V 2313 1300
V 2315 1301 V 2317 1301 V 2319 1301 V 2321 1302 V 2323
1302 V 2325 1302 V 2327 1303 V 2328 1303 V 2330 1304
V 2332 1304 V 2334 1304 V 2336 1305 V 2338 1305 V 2340
1306 V 2342 1306 V 2344 1307 V 2345 1307 V 2347 1308
V 2349 1309 V 2351 1309 V 2353 1310 V 2355 1310 V 2357
1311 V 2359 1312 V 2361 1312 V 2362 1313 V 2364 1314
V 2366 1314 V 2368 1315 V 2370 1316 V 2372 1317 V 2374
1317 V 2376 1318 V 2378 1319 V 2379 1320 V 2381 1321
V 2383 1321 V 2385 1322 V 2387 1323 V 2389 1324 V 2391
1325 V 2393 1326 V 2395 1327 V 2396 1328 V 2398 1328
V 2400 1329 V 2402 1330 V 2404 1331 V 2406 1332 V 2408
1333 V 2410 1334 V 2412 1335 V 2413 1337 V 2415 1338
V 2417 1339 V 2419 1340 V 2421 1341 V 2423 1342 V 2425
1343 V 2451 1364 2 2 v 2453 1365 128 4 v 2581 1364 2
2 v 2450 1464 4 100 v 2583 1464 V 2451 1467 2 2 v 2453
1468 128 4 v 2581 1467 2 2 v 2477 1439 a FC(10)p 0 0 1
TeXcolorrgb 1528 1625 a Fz(u)1577 1637 y Fv(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1991 1625 a Fz(u)2040 1637 y Fv(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2475 1625 a Fz(u)2524
1637 y Fv(2)p 0 TeXcolorgray -38 1786 a FC(D)o('apr\350s)j(le)h
(sch\351ma)g(ci-dessus)h(:)1616 1886 y Fz(r)25 b FB(\306)14
b FC(\(10)c FB(\241)g FC(4\))g FB(\245)g FC(2)17 b FB(\306)d
FC(6)c FB(\245)g FC(2)15 b FB(\306)f FC(3.)-38 2035 y(On)j(obtient)h
(donc)f(le)h(sch\351ma)g(compl\351t\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1069 2207 V 1071 2208 88 4 v 1159 2207
2 2 v 1068 2307 4 100 v 1160 2307 V 1069 2310 2 2 v 1071
2311 88 4 v 1159 2310 2 2 v 1095 2282 a(4)p 1 0 0 TeXcolorrgb
1298 2158 a Fp(\305)p Fv(3)p 0 TeXcolorgray 1184 2195
4 4 v 1185 2193 V 1187 2192 V 1189 2191 V 1190 2190 V
1192 2189 V 1194 2187 V 1196 2186 V 1197 2185 V 1199
2184 V 1201 2183 V 1202 2182 V 1204 2181 V 1206 2180
V 1208 2179 V 1209 2178 V 1211 2177 V 1213 2176 V 1214
2175 V 1216 2174 V 1218 2173 V 1220 2172 V 1221 2171
V 1223 2170 V 1225 2169 V 1226 2168 V 1228 2167 V 1230
2166 V 1232 2165 V 1233 2164 V 1235 2164 V 1237 2163
V 1238 2162 V 1240 2161 V 1242 2160 V 1244 2160 V 1245
2159 V 1247 2158 V 1249 2157 V 1250 2157 V 1252 2156
V 1254 2155 V 1256 2155 V 1257 2154 V 1259 2154 V 1261
2153 V 1263 2152 V 1264 2152 V 1266 2151 V 1268 2151
V 1269 2150 V 1271 2150 V 1273 2149 V 1275 2149 V 1276
2148 V 1278 2148 V 1280 2147 V 1281 2147 V 1283 2146
V 1285 2146 V 1287 2145 V 1288 2145 V 1290 2145 V 1292
2144 V 1293 2144 V 1295 2144 V 1484 2193 a Fo(#)p Fn(#)p
1371 2144 V 1372 2144 V 1374 2144 V 1376 2145 V 1377
2145 V 1379 2145 V 1381 2146 V 1383 2146 V 1384 2147
V 1386 2147 V 1388 2148 V 1389 2148 V 1391 2149 V 1393
2149 V 1395 2150 V 1396 2150 V 1398 2151 V 1400 2151
V 1401 2152 V 1403 2152 V 1405 2153 V 1407 2154 V 1408
2154 V 1410 2155 V 1412 2155 V 1413 2156 V 1415 2157
V 1417 2157 V 1419 2158 V 1420 2159 V 1422 2160 V 1424
2160 V 1425 2161 V 1427 2162 V 1429 2163 V 1431 2164
V 1432 2164 V 1434 2165 V 1436 2166 V 1437 2167 V 1439
2168 V 1441 2169 V 1443 2170 V 1444 2171 V 1446 2172
V 1448 2173 V 1449 2174 V 1451 2175 V 1453 2176 V 1455
2177 V 1456 2178 V 1458 2179 V 1460 2180 V 1461 2181
V 1463 2182 V 1465 2183 V 1467 2184 V 1468 2185 V 1470
2186 V 1472 2187 V 1473 2189 V 1475 2190 V 1477 2191
V 1479 2192 V 1480 2193 V 1482 2195 V 1508 2207 2 2 v
1510 2208 88 4 v 1598 2207 2 2 v 1507 2307 4 100 v 1599
2307 V 1508 2310 2 2 v 1510 2311 88 4 v 1598 2310 2 2
v 1534 2282 a FC(7)p 1 0 0 TeXcolorrgb 1747 2158 a Fp(\305)p
Fv(3)p 0 TeXcolorgray 1624 2196 4 4 v 1626 2195 V 1628
2193 V 1629 2192 V 1631 2191 V 1633 2190 V 1635 2189
V 1637 2187 V 1638 2186 V 1640 2185 V 1642 2184 V 1644
2183 V 1646 2182 V 1647 2181 V 1649 2180 V 1651 2179
V 1653 2178 V 1655 2177 V 1656 2176 V 1658 2175 V 1660
2174 V 1662 2173 V 1664 2172 V 1665 2171 V 1667 2170
V 1669 2169 V 1671 2168 V 1673 2167 V 1674 2166 V 1676
2165 V 1678 2164 V 1680 2164 V 1681 2163 V 1683 2162
V 1685 2161 V 1687 2160 V 1689 2160 V 1690 2159 V 1692
2158 V 1694 2157 V 1696 2157 V 1698 2156 V 1699 2155
V 1701 2155 V 1703 2154 V 1705 2154 V 1707 2153 V 1708
2152 V 1710 2152 V 1712 2151 V 1714 2151 V 1716 2150
V 1717 2150 V 1719 2149 V 1721 2149 V 1723 2148 V 1725
2148 V 1726 2147 V 1728 2147 V 1730 2146 V 1732 2146
V 1734 2145 V 1735 2145 V 1737 2145 V 1739 2144 V 1741
2144 V 1742 2144 V 1744 2143 V 1923 2182 a Fo(\045)p
Fn(\045)p 1820 2143 V 1821 2144 V 1823 2144 V 1825 2144
V 1827 2145 V 1829 2145 V 1830 2145 V 1832 2146 V 1834
2146 V 1836 2147 V 1838 2147 V 1839 2148 V 1841 2148
V 1843 2149 V 1845 2149 V 1847 2150 V 1848 2150 V 1850
2151 V 1852 2151 V 1854 2152 V 1856 2152 V 1857 2153
V 1859 2154 V 1861 2154 V 1863 2155 V 1864 2155 V 1866
2156 V 1868 2157 V 1870 2157 V 1872 2158 V 1873 2159
V 1875 2160 V 1877 2160 V 1879 2161 V 1881 2162 V 1882
2163 V 1884 2164 V 1886 2164 V 1888 2165 V 1890 2166
V 1891 2167 V 1893 2168 V 1895 2169 V 1897 2170 V 1899
2171 V 1900 2172 V 1902 2173 V 1904 2174 V 1906 2175
V 1908 2176 V 1909 2177 V 1911 2178 V 1913 2179 V 1915
2180 V 1917 2181 V 1918 2182 V 1920 2183 V 1947 2207
2 2 v 1949 2208 128 4 v 2077 2207 2 2 v 1946 2307 4 100
v 2079 2307 V 1947 2310 2 2 v 1949 2311 128 4 v 2077
2310 2 2 v 1973 2282 a FC(10)p 1 0 0 TeXcolorrgb 2217
2158 a Fp(\305)p Fv(3)p 0 TeXcolorgray 2103 2185 4 4
v 2105 2184 V 2107 2183 V 2109 2182 V 2111 2181 V 2113
2180 V 2115 2179 V 2117 2178 V 2118 2177 V 2120 2176
V 2122 2175 V 2124 2174 V 2126 2173 V 2128 2172 V 2130
2171 V 2131 2170 V 2133 2169 V 2135 2168 V 2137 2167
V 2139 2166 V 2141 2165 V 2143 2164 V 2145 2164 V 2146
2163 V 2148 2162 V 2150 2161 V 2152 2160 V 2154 2160
V 2156 2159 V 2158 2158 V 2160 2157 V 2161 2157 V 2163
2156 V 2165 2155 V 2167 2155 V 2169 2154 V 2171 2154
V 2173 2153 V 2175 2152 V 2176 2152 V 2178 2151 V 2180
2151 V 2182 2150 V 2184 2150 V 2186 2149 V 2188 2149
V 2190 2148 V 2191 2148 V 2193 2147 V 2195 2147 V 2197
2146 V 2199 2146 V 2201 2145 V 2203 2145 V 2205 2145
V 2206 2144 V 2208 2144 V 2210 2144 V 2212 2143 V 2214
2143 V 2402 2184 a Fo(\045)p Fn(\045)p 2289 2143 V 2291
2143 V 2293 2144 V 2294 2144 V 2296 2144 V 2298 2145
V 2300 2145 V 2302 2145 V 2304 2146 V 2306 2146 V 2308
2147 V 2309 2147 V 2311 2148 V 2313 2148 V 2315 2149
V 2317 2149 V 2319 2150 V 2321 2150 V 2323 2151 V 2324
2151 V 2326 2152 V 2328 2152 V 2330 2153 V 2332 2154
V 2334 2154 V 2336 2155 V 2338 2155 V 2339 2156 V 2341
2157 V 2343 2157 V 2345 2158 V 2347 2159 V 2349 2160
V 2351 2160 V 2353 2161 V 2354 2162 V 2356 2163 V 2358
2164 V 2360 2164 V 2362 2165 V 2364 2166 V 2366 2167
V 2368 2168 V 2369 2169 V 2371 2170 V 2373 2171 V 2375
2172 V 2377 2173 V 2379 2174 V 2381 2175 V 2382 2176
V 2384 2177 V 2386 2178 V 2388 2179 V 2390 2180 V 2392
2181 V 2394 2182 V 2396 2183 V 2397 2184 V 2399 2185
V 2427 2207 2 2 v 2428 2208 128 4 v 2556 2207 2 2 v 2426
2307 4 100 v 2558 2307 V 2427 2310 2 2 v 2428 2311 128
4 v 2556 2310 2 2 v 2452 2282 a FC(13)p 1 0 0 TeXcolorrgb
2696 2158 a Fp(\305)p Fv(3)p 0 TeXcolorgray 2583 2185
4 4 v 2585 2184 V 2587 2183 V 2589 2182 V 2590 2181 V
2592 2180 V 2594 2179 V 2596 2178 V 2598 2177 V 2600
2176 V 2602 2175 V 2604 2174 V 2605 2173 V 2607 2172
V 2609 2171 V 2611 2170 V 2613 2169 V 2615 2168 V 2617
2167 V 2619 2166 V 2620 2165 V 2622 2164 V 2624 2164
V 2626 2163 V 2628 2162 V 2630 2161 V 2632 2160 V 2633
2160 V 2635 2159 V 2637 2158 V 2639 2157 V 2641 2157
V 2643 2156 V 2645 2155 V 2647 2155 V 2648 2154 V 2650
2154 V 2652 2153 V 2654 2152 V 2656 2152 V 2658 2151
V 2660 2151 V 2662 2150 V 2663 2150 V 2665 2149 V 2667
2149 V 2669 2148 V 2671 2148 V 2673 2147 V 2675 2147
V 2677 2146 V 2678 2146 V 2680 2145 V 2682 2145 V 2684
2145 V 2686 2144 V 2688 2144 V 2690 2144 V 2692 2143
V 2693 2143 V 2882 2184 a Fo(\045)p Fn(\045)p 2768 2143
V 2770 2143 V 2772 2144 V 2774 2144 V 2776 2144 V 2778
2145 V 2780 2145 V 2781 2145 V 2783 2146 V 2785 2146
V 2787 2147 V 2789 2147 V 2791 2148 V 2793 2148 V 2795
2149 V 2796 2149 V 2798 2150 V 2800 2150 V 2802 2151
V 2804 2151 V 2806 2152 V 2808 2152 V 2810 2153 V 2811
2154 V 2813 2154 V 2815 2155 V 2817 2155 V 2819 2156
V 2821 2157 V 2823 2157 V 2825 2158 V 2826 2159 V 2828
2160 V 2830 2160 V 2832 2161 V 2834 2162 V 2836 2163
V 2838 2164 V 2840 2164 V 2841 2165 V 2843 2166 V 2845
2167 V 2847 2168 V 2849 2169 V 2851 2170 V 2853 2171
V 2855 2172 V 2856 2173 V 2858 2174 V 2860 2175 V 2862
2176 V 2864 2177 V 2866 2178 V 2868 2179 V 2870 2180
V 2871 2181 V 2873 2182 V 2875 2183 V 2877 2184 V 2879
2185 V 2906 2207 2 2 v 2908 2208 128 4 v 3036 2207 2
2 v 2905 2307 4 100 v 3038 2307 V 2906 2310 2 2 v 2908
2311 128 4 v 3036 2310 2 2 v 2932 2282 a FC(16)p 0 0 1
TeXcolorrgb 1073 2466 a Fz(u)1122 2478 y Fv(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1512 2466 a Fz(u)1561 2478 y Fv(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1971 2466 a Fz(u)2020
2478 y Fv(2)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2450 2466
a Fz(u)2499 2478 y Fv(3)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
2930 2466 a Fz(u)2979 2478 y Fv(4)p 0 TeXcolorgray -38
2628 a FC(\(On)d(peut)h(aussi)h(obtenir)e Fz(u)799 2640
y Fv(4)852 2628 y FC(avec)g(le)h(calcul)g(:)f Fz(u)1410
2640 y Fv(4)1460 2628 y FB(\306)e FC(4)10 b FB(\305)g
FC(4)g FB(\243)g FC(3)16 b FB(\306)e FC(4)c FB(\305)g
FC(12)16 b FB(\306)e FC(16.\))-246 2659 y
SDict begin H.S end
 -246 2659 a
-246 2659 a
SDict begin 12 H.A end
 -246 2659 a -246 2659 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -246 2659 a 0 TeXcolorgray
-141 2756 a FC(5.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1246 2894 2 2 v 1248 2895 88 4 v 1336 2894 2 2 v 1245
2995 4 100 v 1337 2995 V 1246 2998 2 2 v 1248 2999 88
4 v 1336 2998 2 2 v 1272 2969 a(5)p 1 0 0 TeXcolorrgb
1487 2842 a Fp(\305)p Fs(r)p 0 TeXcolorgray 1361 2884
4 4 v 1363 2883 V 1364 2882 V 1366 2881 V 1368 2879 V
1370 2878 V 1372 2877 V 1373 2876 V 1375 2875 V 1377
2873 V 1379 2872 V 1381 2871 V 1383 2870 V 1384 2869
V 1386 2868 V 1388 2867 V 1390 2866 V 1392 2865 V 1393
2864 V 1395 2863 V 1397 2862 V 1399 2861 V 1401 2860
V 1402 2859 V 1404 2858 V 1406 2857 V 1408 2856 V 1410
2855 V 1412 2854 V 1413 2853 V 1415 2852 V 1417 2852
V 1419 2851 V 1421 2850 V 1422 2849 V 1424 2848 V 1426
2848 V 1428 2847 V 1430 2846 V 1431 2845 V 1433 2845
V 1435 2844 V 1437 2843 V 1439 2843 V 1440 2842 V 1442
2841 V 1444 2841 V 1446 2840 V 1448 2839 V 1450 2839
V 1451 2838 V 1453 2838 V 1455 2837 V 1457 2837 V 1459
2836 V 1460 2836 V 1462 2835 V 1464 2835 V 1466 2834
V 1468 2834 V 1469 2833 V 1471 2833 V 1473 2833 V 1475
2832 V 1477 2832 V 1478 2831 V 1480 2831 V 1482 2831
V 1484 2830 V 1661 2867 a Fo(\045)p Fn(\045)p 1560 2830
V 1562 2831 V 1564 2831 V 1565 2831 V 1567 2832 V 1569
2832 V 1571 2833 V 1573 2833 V 1574 2833 V 1576 2834
V 1578 2834 V 1580 2835 V 1582 2835 V 1583 2836 V 1585
2836 V 1587 2837 V 1589 2837 V 1591 2838 V 1592 2838
V 1594 2839 V 1596 2839 V 1598 2840 V 1600 2841 V 1602
2841 V 1603 2842 V 1605 2843 V 1607 2843 V 1609 2844
V 1611 2845 V 1612 2845 V 1614 2846 V 1616 2847 V 1618
2848 V 1620 2848 V 1621 2849 V 1623 2850 V 1625 2851
V 1627 2852 V 1629 2852 V 1631 2853 V 1632 2854 V 1634
2855 V 1636 2856 V 1638 2857 V 1640 2858 V 1641 2859
V 1643 2860 V 1645 2861 V 1647 2862 V 1649 2863 V 1650
2864 V 1652 2865 V 1654 2866 V 1656 2867 V 1658 2868
V 1685 2893 2 2 v 1687 2894 136 4 v 1823 2893 2 2 v 1684
2996 4 103 v 1825 2996 V 1685 2999 2 2 v 1687 3000 136
4 v 1823 2999 2 2 v 1711 2970 a FC(???)p 1 0 0 TeXcolorrgb
1962 2842 a Fp(\305)p Fs(r)p 0 TeXcolorgray 1849 2871
4 4 v 1851 2870 V 1853 2869 V 1855 2868 V 1856 2867 V
1858 2866 V 1860 2865 V 1862 2864 V 1864 2863 V 1866
2862 V 1868 2861 V 1870 2860 V 1872 2859 V 1874 2858
V 1875 2857 V 1877 2856 V 1879 2855 V 1881 2854 V 1883
2853 V 1885 2852 V 1887 2852 V 1889 2851 V 1891 2850
V 1893 2849 V 1895 2848 V 1896 2848 V 1898 2847 V 1900
2846 V 1902 2845 V 1904 2845 V 1906 2844 V 1908 2843
V 1910 2843 V 1912 2842 V 1914 2841 V 1916 2841 V 1917
2840 V 1919 2839 V 1921 2839 V 1923 2838 V 1925 2838
V 1927 2837 V 1929 2837 V 1931 2836 V 1933 2836 V 1935
2835 V 1936 2835 V 1938 2834 V 1940 2834 V 1942 2833
V 1944 2833 V 1946 2833 V 1948 2832 V 1950 2832 V 1952
2831 V 1954 2831 V 1956 2831 V 1957 2830 V 1959 2830
V 2148 2870 a Fo(\045)p Fn(\045)p 2036 2830 V 2037 2830
V 2039 2831 V 2041 2831 V 2043 2831 V 2045 2832 V 2047
2832 V 2049 2833 V 2051 2833 V 2053 2833 V 2055 2834
V 2056 2834 V 2058 2835 V 2060 2835 V 2062 2836 V 2064
2836 V 2066 2837 V 2068 2837 V 2070 2838 V 2072 2838
V 2074 2839 V 2076 2839 V 2077 2840 V 2079 2841 V 2081
2841 V 2083 2842 V 2085 2843 V 2087 2843 V 2089 2844
V 2091 2845 V 2093 2845 V 2095 2846 V 2096 2847 V 2098
2848 V 2100 2848 V 2102 2849 V 2104 2850 V 2106 2851
V 2108 2852 V 2110 2852 V 2112 2853 V 2114 2854 V 2116
2855 V 2117 2856 V 2119 2857 V 2121 2858 V 2123 2859
V 2125 2860 V 2127 2861 V 2129 2862 V 2131 2863 V 2133
2864 V 2135 2865 V 2136 2866 V 2138 2867 V 2140 2868
V 2142 2869 V 2144 2870 V 2146 2871 V 2173 2893 2 2 v
2174 2894 136 4 v 2310 2893 2 2 v 2172 2996 4 103 v 2312
2996 V 2173 2999 2 2 v 2174 3000 136 4 v 2310 2999 2
2 v 2198 2970 a FC(???)p 1 0 0 TeXcolorrgb 2465 2842
a Fp(\305)p Fs(r)p 0 TeXcolorgray 2336 2875 4 4 v 2338
2873 V 2340 2872 V 2342 2871 V 2344 2870 V 2346 2869
V 2349 2868 V 2351 2867 V 2353 2866 V 2355 2865 V 2357
2864 V 2359 2863 V 2361 2862 V 2363 2861 V 2365 2860
V 2367 2859 V 2369 2858 V 2371 2857 V 2373 2856 V 2375
2855 V 2377 2854 V 2379 2853 V 2381 2852 V 2383 2852
V 2385 2851 V 2387 2850 V 2389 2849 V 2391 2848 V 2393
2848 V 2395 2847 V 2397 2846 V 2399 2845 V 2401 2845
V 2403 2844 V 2405 2843 V 2407 2843 V 2409 2842 V 2411
2841 V 2413 2841 V 2415 2840 V 2417 2839 V 2419 2839
V 2421 2838 V 2423 2838 V 2425 2837 V 2427 2837 V 2429
2836 V 2431 2836 V 2433 2835 V 2436 2835 V 2438 2834
V 2440 2834 V 2442 2833 V 2444 2833 V 2446 2833 V 2448
2832 V 2450 2832 V 2452 2831 V 2454 2831 V 2456 2831
V 2458 2830 V 2460 2830 V 2462 2830 V 2648 2863 a Fo(')p
Fn(')p 2539 2830 V 2541 2830 V 2543 2830 V 2545 2831
V 2547 2831 V 2549 2831 V 2551 2832 V 2553 2832 V 2555
2833 V 2557 2833 V 2559 2833 V 2561 2834 V 2563 2834
V 2565 2835 V 2567 2835 V 2569 2836 V 2571 2836 V 2573
2837 V 2575 2837 V 2577 2838 V 2579 2838 V 2581 2839
V 2583 2839 V 2585 2840 V 2587 2841 V 2589 2841 V 2591
2842 V 2593 2843 V 2595 2843 V 2597 2844 V 2599 2845
V 2601 2845 V 2603 2846 V 2606 2847 V 2608 2848 V 2610
2848 V 2612 2849 V 2614 2850 V 2616 2851 V 2618 2852
V 2620 2852 V 2622 2853 V 2624 2854 V 2626 2855 V 2628
2856 V 2630 2857 V 2632 2858 V 2634 2859 V 2636 2860
V 2638 2861 V 2640 2862 V 2642 2863 V 2644 2864 V 2660
2889 2 2 v 2662 2890 197 4 v 2859 2889 2 2 v 2659 3000
4 111 v 2861 3000 V 2660 3003 2 2 v 2662 3004 197 4 v
2859 3003 2 2 v 2686 2964 a FC(12,)8 b(5)p 0 0 1 TeXcolorrgb
1250 3159 a Fz(u)1299 3171 y Fv(0)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 1713 3159 a Fz(u)1762 3171 y Fv(1)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2201 3159 a Fz(u)2250 3171 y Fv(2)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2719 3159 a Fz(u)2768
3171 y Fv(3)p 0 TeXcolorgray -38 3305 a FC(D)o('apr\350s)17
b(le)h(sch\351ma)g(ci-dessus)h(:)1513 3405 y Fz(r)25
b FB(\306)14 b FC(\(12,)8 b(5)i FB(\241)g FC(5\))g FB(\245)g
FC(3)17 b FB(\306)d FC(7,)8 b(5)i FB(\245)g FC(3)17 b
FB(\306)d FC(2,)8 b(5.)-246 3482 y
SDict begin H.S end
 -246 3482 a -246 3482
a
SDict begin 12 H.A end
 -246 3482 a -246 3482 a
SDict begin [/View [/XYZ H.V]/Dest (exo.14) cvn /DEST pdfmark end
 -246 3482 a 0 TeXcolorgray
122 x FE(Ex)o(er)o(cice)14 b(14)p 0 TeXcolorgray 41 w
FC(Le)h(01/01/2019,)k(on)c(d\351pose)g(300)h Fy(N)28
b FC(sur)14 b(un)h(compte)h(en)f(banque)o(.)f(T)-8 b(ous)16
b(les)f(mois)g(\340)g(par)q(tir)f(de)g(cette)h(date)o(,)f(on)h
(d\351poser)o(a)g(75)g Fy(N)28 b FC(sur)-246 3704 y(ce)18
b(compte)o(.)-246 3803 y(On)g(note)g Fz(u)100 3815 y
Fs(n)161 3803 y FC(la)f(somme)i(sur)e(le)h(compte)h(apr\350s)f
Fz(n)j FC(mois)d(\226)g(on)f(a)g(donc)g(en)h(par)q(ticulier)g
Fz(u)2406 3815 y Fv(0)2456 3803 y FB(\306)c FC(300.)-246
3850 y
SDict begin H.S end
 -246 3850 a -246 3850 a
SDict begin 12 H.A end
 -246 3850 a -246 3850
a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -246 3850 a 0 TeXcolorgray -141 3947 a FC(1.)p 0 TeXcolorgray
43 w Fz(u)11 3959 y Fv(1)61 3947 y FB(\306)g FC(300)c
FB(\305)g FC(75)17 b FB(\306)d FC(375,)19 b Fz(u)699
3959 y Fv(2)749 3947 y FB(\306)14 b FC(375)c FB(\305)g
FC(75)17 b FB(\306)d FC(450.)-38 4061 y(On)j(aur)o(a)g(375)i
Fy(N)34 b FC(le)18 b(1)605 4037 y Fq(er)668 4061 y FC(f\351vr)q(ier)f
(et)h(450)h Fy(N)34 b FC(le)18 b(1)1340 4037 y Fq(er)1402
4061 y FC(mars)o(.)-246 4077 y
SDict begin H.S end
 -246 4077 a -246 4077
a
SDict begin 12 H.A end
 -246 4077 a -246 4077 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -246 4077 a 0 TeXcolorgray
-141 4190 a FC(2.)p 0 TeXcolorgray 43 w(La)f(suite)i
Fz(u)j FC(est)c(ar)q(ithm\351tique)h(de)e(r)o(aison)h
Fz(r)25 b FB(\306)14 b FC(75.)-246 4222 y
SDict begin H.S end
 -246 4222 a
-246 4222 a
SDict begin 12 H.A end
 -246 4222 a -246 4222 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -246 4222 a 0 TeXcolorgray
-141 4319 a FC(3.)p 0 TeXcolorgray 43 w(La)j(for)q(mule)i(\340)e(entr)o
(er)g(dans)g(la)h(cellule)h(C2)f(est)1925 4418 y(=B2+75)-246
4469 y
SDict begin H.S end
 -246 4469 a -246 4469 a
SDict begin 12 H.A end
 -246 4469 a -246 4469
a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -246 4469 a 0 TeXcolorgray -141 4583 a FC(4.)p 0 TeXcolorgray
0 TeXcolorgray 1930 5895 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 986 1542 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 257.2422 a add def
/d 0.0 a add neg def /h 215.30507 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 986 1542 a 1527
1291 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 192.05591 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.2395
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.11353 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22636
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 192.05591  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 192.05591  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 185.11353  def /dT 932339 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 14.22636  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.11353
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 192.05591
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.11353  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 185.11353  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 192.05591  def /dT 933200 abs 65536 div viceversa
{ neg } if def /DT 100. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.1424  mul cntTick add def x abs MaxValue abs le { false { x minTickline
exch moveto x maxTickline exch lineto } { x tickstart STsize mul exch
moveto x tickend STsize mul exch lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul exch
moveto cntsubTick maxTickline STsize mul exch lineto } { cntsubTick
tickstart STsize mul exch moveto cntsubTick tickend STsize mul exch
lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave false { cntTick minTickline exch moveto cntTick maxTickline
exch lineto } { cntTick tickstart exch moveto cntTick tickend exch
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.1424  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.11353
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 192.05591
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1512 1388 a Fv(0)87 b(1)g(2)g(3)g(4)g(5)g(6)h
(7)f(8)g(9)71 b(10)57 b(11)f(12)1438 1310 y(0)1377 1192
y(100)1377 1074 y(200)1377 956 y(300)1377 838 y(400)1377
719 y(500)1377 601 y(600)1377 483 y(700)1377 365 y(800)1377
246 y(900)1346 128 y(1000)1346 10 y(1100)1346 -108 y(1200)1527
1291 y
tx@Dict begin { 105.8431 -14.2395 } PutCoor PutBegin  end
 1527 1291 a 57 x Fz(n)22 b FC(\(nombr)o(e)17 b(de)g(mois\))1527
1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291 a
tx@Dict begin { -64.01863 176.56982 } PutCoor PutBegin  end
 1527 1291 a 38 x Fz(u)1576
1341 y Fs(n)1527 1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291 a
tx@Dict begin { -64.01863 166.60217 } PutCoor PutBegin  end
 1527
1291 a 54 x FC(\(somme)1527 1291 y
tx@Dict begin  PutEnd  end
 1527 1291 a 1527 1291
a
tx@Dict begin { -64.01863 156.63452 } PutCoor PutBegin  end
 1527 1291 a 57 x FC(en)h Fy(N)p FC(\))1527 1291 y
tx@Dict begin  PutEnd  end
 1527
1291 a 1527 1291 a
tx@Dict begin { 18.49431 49.83826 } PutCoor PutBegin  end
 1527 1291 a 0.49803 0 1 TeXcolorrgb
51 x FB(\305)p FC(75)p 0 TeXcolorgray 1527 1291 a
tx@Dict begin  PutEnd  end
 1527
1291 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 14.22636
42.7185 0.0 42.7185   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
14.22636 53.39813 14.22636 42.7185   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0.49803 0 1  setrgbcolor  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 0.0
42.7185   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 170.71637
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71637 170.87402 0.0
170.87402   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.7185   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 14.22636 53.39813   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45273 64.07776   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6791 74.75739   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
3122 1542 a
currentpoint initclip moveto
 3122 1542 a -246 1586 a
SDict begin H.S end
 -246 1586 a -246
1586 a
SDict begin 12 H.A end
 -246 1586 a -246 1586 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -246 1586 a 0 TeXcolorgray
-141 1700 a FC(5.)p 0 TeXcolorgray 43 w(L)-10 b('\351quation)19
b(de)e(la)h(droite)f(qui)h(passe)g(par)f(tous)h(les)h(points)f(est)1831
1883 y Fz(y)j FB(\306)14 b FC(75)r Fz(x)h FB(\305)10
b FC(300)-38 2065 y(\(75)18 b(corr)o(espond)f(\340)g
Fz(r)r FC(,)h(et)f(300)i(\340)e Fz(u)955 2077 y Fv(0)991
2065 y FC(\).)-246 2097 y
SDict begin H.S end
 -246 2097 a -246 2097 a
SDict begin 12 H.A end
 -246
2097 a -246 2097 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -246 2097 a 0 TeXcolorgray -141 2194
a FC(6.)p 0 TeXcolorgray 43 w(Le)h(01/01/2020)j(\(donc)c(au)h(bout)f
(de)g(12)h(mois\),)h(on)e(aur)o(a)1662 2377 y(75)10 b
FB(\243)g FC(12)g FB(\305)g FC(300)19 b FB(\306)14 b
FC(1)8 b(200)19 b Fy(N)p FC(.)-38 2574 y(La)e(r\351ponse)i(est)f
(con\002r)q(m\351e)f(par)g(la)h(constr)q(uction)g(en)g(pointill\351s)i
(rouges)d(du)g(gr)o(aphique)o(.)-246 2659 y
SDict begin H.S end
 -246 2659
a -246 2659 a
SDict begin 12 H.A end
 -246 2659 a -246 2659 a
SDict begin [/View [/XYZ H.V]/Dest (exo.15) cvn /DEST pdfmark end
 -246 2659 a -246
2678 a
SDict begin H.S end
 -246 2678 a -246 2678 a
SDict begin 12 H.A end
 -246 2678 a -246 2678
a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -246 2678 a 0 TeXcolorgray 95 x FE(Ex)o(er)o(cice)d(15)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w Fz(u)452 2785 y Fv(1)502 2773 y FB(\306)g FC(600)c
FB(\241)g FC(50)17 b FB(\306)d FC(550,)19 b Fz(u)1140
2785 y Fv(2)1190 2773 y FB(\306)14 b FC(550)c FB(\241)g
FC(50)17 b FB(\306)d FC(500.)-246 2800 y
SDict begin H.S end
 -246 2800 a
-246 2800 a
SDict begin 12 H.A end
 -246 2800 a -246 2800 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -246 2800 a 0 TeXcolorgray
-141 2902 a FC(2.)p 0 TeXcolorgray 43 w(La)j(suite)i
Fz(u)j FC(est)c(ar)q(ithm\351tique)h(de)e(r)o(aison)h
Fz(r)25 b FB(\306)14 b(\241)p FC(50.)-246 2934 y
SDict begin H.S end
 -246
2934 a -246 2934 a
SDict begin 12 H.A end
 -246 2934 a -246 2934 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -246 2934
a 0 TeXcolorgray -141 3031 a FC(3.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 880 4498 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 282.77002 a add def
/d 0.0 a add neg def /h 168.67453 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 880 4498 a 1273
4306 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 235.3772 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 22.74933
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 145.46414 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 22.76228
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 235.3772  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 235.3772  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 145.46414  def /dT 1491749 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 22.76228  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 22.76228  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.46414
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.3772
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 145.46414  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 145.46414  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 235.3772  def /dT 1490900 abs 65536 div viceversa
{ neg } if def /DT 100. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.2275  mul cntTick add def x abs MaxValue abs le { false { x minTickline
exch moveto x maxTickline exch lineto } { x tickstart STsize mul exch
moveto x tickend STsize mul exch lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul exch
moveto cntsubTick maxTickline STsize mul exch lineto } { cntsubTick
tickstart STsize mul exch moveto cntsubTick tickend STsize mul exch
lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave false { cntTick minTickline exch moveto cntTick maxTickline
exch lineto } { cntTick tickstart exch moveto cntTick tickend exch
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.2275  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 145.46414
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.3772
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1258 4403 a Fv(0)158 b(1)g(2)g(3)g(4)g(5)g(6)g
(7)g(8)g(9)1185 4325 y(0)1123 4136 y(100)1123 3947 y(200)1123
3758 y(300)1123 3570 y(400)1123 3381 y(500)1273 4306
y
tx@Dict begin { 146.58742 -15.92453 } PutCoor PutBegin  end
 1273 4306 a 57 x Fz(n)22 b FC(\(nombr)o(e)17 b(d)n('ann\351es\))1273
4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306 a
tx@Dict begin { -45.07512 122.84637 } PutCoor PutBegin  end
 1273 4306 a 38 x Fz(u)1322
4356 y Fs(n)1273 4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306 a
tx@Dict begin { -45.07512 113.74664 } PutCoor PutBegin  end
 1273
4306 a 54 x FC(\(quota)1273 4306 y
tx@Dict begin  PutEnd  end
 1273 4306 a 1273 4306
a
tx@Dict begin { -45.07512 104.64691 } PutCoor PutBegin  end
 1273 4306 a 57 x FC(de)h(p\352che\))1273 4306 y
tx@Dict begin  PutEnd  end
 1273
4306 a 1273 4306 a
tx@Dict begin { 29.59103 131.9461 } PutCoor PutBegin  end
 1273 4306 a 0.49803 0 1 TeXcolorrgb
51 x FB(\241)p FC(50)p 0 TeXcolorgray 1273 4306 a
tx@Dict begin  PutEnd  end
 1273
4306 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 22.76228
136.49597 0.0 136.49597   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.2
SLW 0.49803 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
22.76228 125.1213 22.76228 136.49597   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0.49803 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 0.0
136.49597   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 227.62283
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.62283 22.74933 0.0
22.74933   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   3.0 0
0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 136.49597   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 22.76228 125.1213   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 45.52457 113.74664   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.30196 0.30196 1  setrgbcolor
 [ 68.28685 102.37198   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
3228 4498 a
currentpoint initclip moveto
 3228 4498 a -246 4542 a
SDict begin H.S end
 -246 4542 a -246
4542 a
SDict begin 12 H.A end
 -246 4542 a -246 4542 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -246 4542 a 0 TeXcolorgray
-141 4657 a FC(4.)p 0 TeXcolorgray 43 w(L)-10 b('\351quation)19
b(de)e(la)h(droite)f(qui)h(passe)g(par)f(tous)h(les)h(points)f(est)1803
4839 y Fz(y)j FB(\306)14 b(\241)p FC(50)r Fz(x)h FB(\305)10
b FC(600)-38 5022 y(\()p FB(\241)p FC(50)18 b(corr)o(espond)f(\340)g
Fz(r)r FC(,)h(et)f(600)i(\340)e Fz(u)1010 5034 y Fv(0)1046
5022 y FC(\).)-246 5054 y
SDict begin H.S end
 -246 5054 a -246 5054 a
SDict begin 12 H.A end
 -246
5054 a -246 5054 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -246 5054 a 0 TeXcolorgray -141 5151
a FC(5.)p 0 TeXcolorgray 43 w(Le)h(quota)g(de)f(p\352che)h(en)g(2025)h
(\(donc)e(au)g(bout)h(de)f(10)h(ans\))f(est)1563 5333
y FB(\241)p FC(50)10 b FB(\243)g FC(10)g FB(\305)g FC(600)18
b FB(\306)c FC(100)19 b(T)-8 b(onnes)r(.)-38 5531 y(La)17
b(r\351ponse)i(est)f(con\002r)q(m\351e)f(par)g(la)h(constr)q(uction)g
(en)g(pointill\351s)i(rouges)d(du)g(gr)o(aphique)o(.)-246
5616 y
SDict begin H.S end
 -246 5616 a -246 5616 a
SDict begin 12 H.A end
 -246 5616 a -246 5616
a
SDict begin [/View [/XYZ H.V]/Dest (exo.16) cvn /DEST pdfmark end
 -246 5616 a 0 TeXcolorgray 1930 5895 a FC(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -163 a FE(Ex)o(er)o(cice)14 b(16)p
0 TeXcolorgray 41 w FC(On)j(note)h Fz(S)k FC(la)c(somme)g(\340)g
(calculer)-5 b(,)18 b(que)g(l)o('on)g(\351cr)q(it)f(\340)h(l)o
('endroit,)g(puis)g(\340)f(l)o('envers)i(:)1336 6 y Fz(S)g
FB(\306)p 1 0 0 TeXcolorrgb 14 w FC(1)p 0 TeXcolorgray
92 w FB(\305)p 0 0 1 TeXcolorrgb 10 w FC(2)p 0 TeXcolorgray
51 w FB(\305)p 0 1 0 TeXcolorrgb 10 w FC(3)p 0 TeXcolorgray
51 w FB(\305)10 b(\242)e(\242)g(\242)k(\305)p 1 0.5 0
TeXcolorrgb 10 w FC(98)p 0 TeXcolorgray 11 w FB(\305)p
0.5 0 0.5 TeXcolorrgb 10 w FC(99)p 0 TeXcolorgray 11
w FB(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w FC(100)p 0
TeXcolorgray 1336 130 a Fz(S)19 b FB(\306)p 1 0 0 TeXcolorrgb
14 w FC(100)p 0 TeXcolorgray 12 w FB(\305)p 0 0 1 TeXcolorrgb
10 w FC(99)p 0 TeXcolorgray 11 w FB(\305)p 0 1 0 TeXcolorrgb
10 w FC(98)p 0 TeXcolorgray 11 w FB(\305)10 b(\242)e(\242)g(\242)k
(\305)p 1 0.5 0 TeXcolorrgb 10 w FC(3)p 0 TeXcolorgray
51 w FB(\305)p 0.5 0 0.5 TeXcolorrgb 10 w FC(2)p 0 TeXcolorgray
51 w FB(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w FC(1)p
0 TeXcolorgray -246 299 a(On)19 b(ajoute)g(membr)o(e)g(\340)f(membr)o
(e)h(les)g(deux)g(lignes)o(.)g(On)f(r)o(emarque)g(que)i(la)e(somme)i
(de)e(chaque)h(couple)h(d)n('une)f(m\352me)h(couleur)f(vaut)g(toujours)
-246 398 y(101)33 b(:)1181 597 y Fz(S)15 b FB(\305)10
b Fz(S)18 b FB(\306)p 1 0 0 TeXcolorrgb 14 w FC(101)p
0 TeXcolorgray 12 w FB(\305)p 0 0 1 TeXcolorrgb 10 w
FC(101)p 0 TeXcolorgray 12 w FB(\305)p 0 1 0 TeXcolorrgb
10 w FC(101)p 0 TeXcolorgray 11 w FB(\305)10 b(\242)e(\242)g(\242)k
(\305)p 1 0.5 0 TeXcolorrgb 10 w FC(101)p 0 TeXcolorgray
11 w FB(\305)p 0.5 0 0.5 TeXcolorrgb 10 w FC(101)p 0
TeXcolorgray 12 w FB(\305)p 0.75 0.5 0.25 TeXcolorrgb
10 w FC(101)p 0 TeXcolorgray 1430 632 a Fm(|)p 1464 632
562 10 v 562 w({z)p 2094 632 V 562 w(})1915 709 y Fv(100)17
b(termes)2699 597 y FC(.)-246 823 y(On)h(a)f(donc)1099
940 y(2)p Fz(S)j FB(\306)14 b FC(100)c FB(\243)g FC(101)476
b Fz(S)18 b FB(\306)2198 884 y FC(100)10 b FB(\243)g
FC(101)p 2198 921 319 5 v 2337 997 a(2)2541 940 y FB(\306)k
FC(5)8 b(050.)-246 1059 y
SDict begin H.S end
 -246 1059 a -246 1059 a
SDict begin 12 H.A end
 -246
1059 a -246 1059 a
SDict begin [/View [/XYZ H.V]/Dest (exo.17) cvn /DEST pdfmark end
 -246 1059 a 0 TeXcolorgray 94 x FE(Ex)o(er)o(cice)14
b(17)p 0 TeXcolorgray 41 w FC(On)j(constr)q(uit)h(une)f(p)n(yr)o(amide)
h(en)f(superposant)i(des)e(carr\351s)f(:)h(tout)h(en)f(haut,)h(on)f(a)g
Fz(u)2767 1165 y Fv(0)2816 1153 y FB(\306)e FC(1)i(carr\351,)f(en)i
(dessous)f Fz(u)3600 1165 y Fv(1)3650 1153 y FB(\306)e
FC(3)i(carr\351s)o(,)g(etc)o(.)p 0 TeXcolorgray 0 TeXcolorgray
1270 2260 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 163.88763 a add def
/d 0.0 a add neg def /h 121.77771 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1270 2260 a 2059 2582 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 113.81097 0.0
113.81097 0.0 142.26372 -28.45274 142.26372  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.75 0.75  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -56.90549 85.35823 -28.45274
85.35823 -28.45274 113.81097 -56.90549 113.81097  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 85.35823 0.0
85.35823 0.0 113.81097 -28.45274 113.81097  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 0.0 85.35823 28.45274 85.35823
28.45274 113.81097 0.0 113.81097  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -85.35823 56.90549 -56.90549
56.90549 -56.90549 85.35823 -85.35823 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -56.90549 56.90549 -28.45274
56.90549 -28.45274 85.35823 -56.90549 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ -28.45274 56.90549 0.0
56.90549 0.0 85.35823 -28.45274 85.35823  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 0.0 56.90549 28.45274 56.90549
28.45274 85.35823 0.0 85.35823  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 28.45274 56.90549 56.90549
56.90549 56.90549 85.35823 28.45274 85.35823  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 1 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2630 2260 a
currentpoint initclip moveto
 2630 2260 a -246
2317 a
SDict begin H.S end
 -246 2317 a -246 2317 a
SDict begin 12 H.A end
 -246 2317 a -246 2317
a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -246 2317 a 0 TeXcolorgray -141 2429 a FC(1.)p 0 TeXcolorgray
43 w(\300)g(chaque)h(\351tage)f(de)g(la)h(p)n(yr)o(amide)o(,)f(on)h
(ajoute)g(deux)g(carr\351s)o(,)f(donc)h Fz(u)j FC(est)d(ar)q
(ithm\351tique)h(de)e(r)o(aison)h Fz(r)25 b FB(\306)14
b FC(2.)-246 2460 y
SDict begin H.S end
 -246 2460 a -246 2460 a
SDict begin 12 H.A end
 -246 2460
a -246 2460 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -246 2460 a 0 TeXcolorgray -141 2552 a
FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray
42 w(Le)k(nombr)o(e)f(de)g(carr\351s)g(de)g(la)g(1)1021
2529 y Fq(r)o(e)1083 2552 y FC(r)o(ang\351e)h(est)g Fz(u)1500
2564 y Fv(0)1549 2552 y FB(\306)d FC(1.)p 0 TeXcolorgray
7 2652 a(\225)p 0 TeXcolorgray 42 w(Le)j(nombr)o(e)f(de)g(carr\351s)g
(de)g(la)g(2)1021 2628 y Fq(e)1065 2652 y FC(r)o(ang\351e)g(est)h
Fz(u)1481 2664 y Fv(1)1531 2652 y FB(\306)c FC(3.)p 0
TeXcolorgray 7 2752 a(\225)p 0 TeXcolorgray 42 w(Le)k(nombr)o(e)f(de)g
(carr\351s)g(de)g(la)g(3)1021 2728 y Fq(e)1065 2752 y
FC(r)o(ang\351e)g(est)h Fz(u)1481 2764 y Fv(2)1531 2752
y FB(\306)c FC(5.)p 0 TeXcolorgray 7 2851 a(\225)p 0
TeXcolorgray 42 w FB(\242)8 b(\242)g(\242)p 0 TeXcolorgray
7 2951 a FC(\225)p 0 TeXcolorgray 42 w(Le)18 b(nombr)o(e)f(de)g
(carr\351s)g(de)g(la)g(100)1101 2927 y Fq(e)1146 2951
y FC(r)o(ang\351e)g(est)h Fz(u)1562 2963 y Fv(99)1643
2951 y FB(\306)c FC(1)c FB(\305)g FC(99)g FB(\243)g FC(2)17
b FB(\306)d FC(199.)-38 3107 y Fr(")p FC(Il)j(y)g(a)g(un)h(d\351calage)
f(:)g(le)h(nombr)o(e)f(de)g(carr\351s)g(de)g(la)h(100)1698
3083 y Fq(e)1742 3107 y FC(r)o(ang\351e)g(est)g Fz(u)2159
3119 y Fv(99)2225 3107 y FC(.)-246 3138 y
SDict begin H.S end
 -246 3138 a
-246 3138 a
SDict begin 12 H.A end
 -246 3138 a -246 3138 a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -246 3138 a 0 TeXcolorgray
-141 3231 a FC(3.)p 0 TeXcolorgray 43 w(Le)g(nombr)o(e)f(total)h(de)f
(carr\351s)g(de)g(la)h(1)1079 3207 y Fq(r)o(e)1140 3231
y FC(\340)f(la)h(100)1396 3207 y Fq(e)1440 3231 y FC(r)o(ang\351e)g
(est)1732 3399 y(1)10 b FB(\305)g FC(3)g FB(\305)g FC(5)g
FB(\305)g(\242)e(\242)g(\242)13 b(\305)d FC(199.)-38
3579 y(On)17 b(calcule)h(cette)g(somme)h(comme)f(dans)g(l)o('exer)o
(cice)g(pr\351c\351dent)g(:)f(on)h(note)1480 3748 y Fz(S)h
FB(\306)14 b FC(1)c FB(\305)g FC(3)g FB(\305)g FC(5)g
FB(\305)g(\242)e(\242)g(\242)14 b(\305)c FC(195)g FB(\305)g
FC(197)g FB(\305)g FC(199)-38 3916 y(et)18 b(on)f(\351cr)q(it)g
Fz(S)22 b FC(\340)17 b(l)o('endroit)h(et)g(\340)f(l)o('envers)i(:)1359
4196 y Fz(S)g FB(\306)p 1 0 0 TeXcolorrgb 14 w FC(1)p
0 TeXcolorgray 92 w FB(\305)p 0 0 1 TeXcolorrgb 10 w
FC(3)p 0 TeXcolorgray 91 w FB(\305)p 0 1 0 TeXcolorrgb
10 w FC(5)p 0 TeXcolorgray 92 w FB(\305)10 b(\242)e(\242)g(\242)j(\305)
p 1 0.5 0 TeXcolorrgb 10 w FC(195)p 0 TeXcolorgray 12
w FB(\305)p 0.5 0 0.5 TeXcolorrgb 10 w FC(197)p 0 TeXcolorgray
12 w FB(\305)p 0.75 0.5 0.25 TeXcolorrgb 10 w FC(199)p
0 TeXcolorgray 1359 4321 a Fz(S)19 b FB(\306)p 1 0 0
TeXcolorrgb 14 w FC(199)p 0 TeXcolorgray 12 w FB(\305)p
0 0 1 TeXcolorrgb 10 w FC(197)p 0 TeXcolorgray 11 w FB(\305)p
0 1 0 TeXcolorrgb 10 w FC(195)p 0 TeXcolorgray 12 w FB(\305)10
b(\242)e(\242)g(\242)j(\305)p 1 0.5 0 TeXcolorrgb 10
w FC(5)p 0 TeXcolorgray 92 w FB(\305)p 0.5 0 0.5 TeXcolorrgb
10 w FC(3)p 0 TeXcolorgray 92 w FB(\305)p 0.75 0.5 0.25
TeXcolorrgb 10 w FC(1)p 0 TeXcolorgray -38 4501 a(La)18
b(somme)h(des)f(ter)q(mes)g(d)n('une)h(m\352me)g(couleur)g(est)f
(toujours)h(\351gale)f(\340)g(200)h(et)f(il)g(y)g(a)f(100)i(ter)q(mes)g
(\(autant)f(que)h(le)f(nombr)o(e)f(de)h(r)o(ang\351es\).)-38
4601 y(On)f(a)g(donc)g(:)1183 4828 y(2)p Fz(S)i FB(\306)14
b FC(100)c FB(\243)g FC(200)476 b Fz(S)19 b FB(\306)2282
4772 y FC(100)10 b FB(\243)g FC(200)p 2282 4809 319 5
v 2421 4885 a(2)2624 4828 y FB(\306)15 b FC(10)8 b(000.)-246
5010 y
SDict begin H.S end
 -246 5010 a -246 5010 a
SDict begin 12 H.A end
 -246 5010 a -246 5010
a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -246 5010 a 109 x FF(3)105 b(\311)n(tudes)23 b(de)g(fonctions)-246
5203 y
SDict begin H.S end
 -246 5203 a -246 5203 a
SDict begin 12 H.A end
 -246 5203 a -246 5203
a
SDict begin [/View [/XYZ H.V]/Dest (exo.18) cvn /DEST pdfmark end
 -246 5203 a 0 TeXcolorgray 100 x FE(Ex)o(er)o(cice)14
b(18)p 0 TeXcolorgray 41 w FC(U)m(n)27 b(vo)n(yageur)e(de)h(commer)o
(ce)g(\()p FB(\306)g FC(un)g(r)o(epr\351sentant\))h(fait)g(une)f(note)h
(de)f(fr)o(ais)g(pour)h(chaque)f(jour)h(de)e(tr)o(avail)i(o\371)f(il)h
(utilise)g(sa)-246 5402 y(voitur)o(e)o(.)18 b(Il)e(r)o(e\347oit)i(une)g
(par)q(t)f(\002xe)g(de)g(30)h Fy(N)p FC(,)f(et)h(une)g(indemnit\351)h
(de)e(0,5)i Fy(N)p FC(/km.)-246 5546 y FE(R)o(emarque)f(:)j
FC(On)h(peut)g(penser)g(que)g(l)o('indemnit\351)i(kilom\351tr)q(ique)f
(ser)q(t)f(\340)f(r)o(embourser)g(les)h(fr)o(ais)g(de)f(d\351placement)
i(\(par)e(exemple)i(si)f(le)g(r)o(epr\351-)-246 5646
y(sentant)d(utilise)g(sa)f(propr)o(e)e(voitur)o(e\))9
b(;)18 b(et)f(que)h(la)g(par)q(t)f(\002xe)g(ser)q(t)g(\340)g(payer)g
(les)h(r)o(epas)o(.)p 0 TeXcolorgray 1930 5895 a(9)p
0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254 -561 a -254
-561 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246 -246 a -246
-246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163 a FC(1.)p
0 TeXcolorgray 43 w(S)o('il)19 b(fait)e(120)i(km)f(dans)f(la)h(jour)q
(n\351e)o(,)f(le)h(montant)h(de)e(la)g(note)h(de)g(fr)o(ais)g(est)g(de)
1532 20 y(30)10 b FB(\305)g FC(120)g FB(\243)g FC(0,)e(5)19
b FB(\306)14 b FC(30)c FB(\305)g FC(60)17 b FB(\306)d
FC(90)k Fy(N)p FC(.)-246 114 y
SDict begin H.S end
 -246 114 a -246 114 a
SDict begin 12 H.A end

-246 114 a -246 114 a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -246 114 a 0 TeXcolorgray -141
217 a FC(2.)p 0 TeXcolorgray 43 w(On)f(note)j Fz(x)j
FC(le)17 b(nombr)o(e)h(de)f(km)g(par)o(cour)q(us)g(par)h(le)f(vo)n
(yageur)g(de)g(commer)o(ce)o(,)h(et)25 b Fz(f)19 b FC(\()r
Fz(x)5 b FC(\))17 b(le)h(montant)h(de)e(la)g(note)h(de)g(fr)o(ais)o(.)f
(On)h(a)f(alors)1543 400 y Fz(f)i FC(\()r Fz(x)5 b FC(\))14
b FB(\306)g FC(30)c FB(\305)i Fz(x)j FB(\243)10 b FC(0,)e(5)18
b FB(\306)c FC(0,)8 b(5)r Fz(x)15 b FB(\305)10 b FC(30.)-246
502 y
SDict begin H.S end
 -246 502 a -246 502 a
SDict begin 12 H.A end
 -246 502 a -246 502 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -246
502 a 0 TeXcolorgray -141 597 a FC(3.)p 0 TeXcolorgray
43 w(La)k(fonction)22 b Fz(f)34 b FC(est)14 b(af\002ne)o(,)g(puisque)22
b Fz(f)f FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g FC(0,)8
b(5)r Fz(x)f FB(\305)r FC(30)14 b(\(c)n('est)g(bien)g(une)g(fonction)g
(de)g(la)g(for)q(me)22 b Fz(f)i FC(\()r Fz(x)5 b FC(\))14
b FB(\306)i Fz(a)6 b(x)h FB(\305)r Fz(b)q FC(,)14 b(avec)i
Fz(a)i FB(\306)c FC(0,)8 b(5)14 b(et)g Fz(b)20 b FB(\306)14
b FC(30\).)g(S)o(a)-38 697 y(courbe)j(r)o(epr\351sentative)i(est)f
(donc)f(une)h(droite)o(,)f(que)h(l)o('on)g(tr)o(ace)f(\340)g(par)q(tir)
h(d)n('un)f(tableau)h(de)f(valeurs)h(avec)g(deux)f(valeurs)9
b(;)18 b(par)g(exemple)h(:)p 0 TeXcolorgray 0 TeXcolorgray
654 816 666 4 v 654 916 4 100 v 762 886 a Fz(x)p 908
916 V 180 w FC(0)p 1092 916 V 124 w(120)p 1317 916 V
654 919 666 4 v 654 1019 4 100 v 715 989 a Fz(f)g FC(\()r
Fz(x)5 b FC(\))p 908 1019 V 103 w(30)p 1092 1019 V 124
w(90)p 1317 1019 V 654 1022 666 4 v 608 1217 a Fz(f)19
b FC(\(0\))14 b FB(\306)g FC(0,)8 b(5)i FB(\243)g FC(0)g
FB(\305)g FC(30)18 b FB(\306)c FC(30)527 1341 y Fz(f)19
b FC(\(120\))c FB(\306)f FC(0,)8 b(5)i FB(\243)g FC(120)g
FB(\305)g FC(30)19 b FB(\306)14 b FC(90)p 0 TeXcolorgray
2050 1388 9 576 v 0 TeXcolorgray 2095 896 a(On)21 b(place)h(les)g
(points)h(de)e(coor)o(donn\351es)g(\(0;)8 b(30\))23 b(et)f(\(120;)8
b(90\),)23 b(puis)2095 996 y(on)18 b(tr)o(ace)g(la)g(droite)g(\226)g
(en)g(r\351alit\351)h(un)f(segment,)i(puisqu)n('on)g(va)d(de)h(0)2095
1095 y(\340)f(200)i(en)f(abscisse)o(.)-38 1635 y FE(R)o(emarque)e(:)j
FC(On)h(a)f(choisi)h(les)g(valeurs)h(0)f(et)f(120,)i(mais)g(on)e(peut)i
(pr)o(endr)o(e)e(n)-6 b('impor)q(te)20 b(quelles)h(valeurs)g(\226)e(l)o
('avantage)i(de)e(0,)h(c)n('est)g(que)g(le)-38 1734 y(calcul)e(est)g
(facile)9 b(;)18 b(et)f(l)o('avantage)i(de)e(120,)i(c)n('est)f(qu)n
('on)g(a)f(d\351j\340)g(fait)h(le)g(calcul)g(dans)f(la)h(question)h(1.)
p 0 TeXcolorgray 0 TeXcolorgray 1331 3543 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.20155 a add def
/d 0.0 a add neg def /h 207.61046 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1331 3543
a 1482 3443 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 15 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 156.01645 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22714
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 195.5174 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22272
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 156.01645  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 156.01645  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 195.5174  def /dT 932100 abs 65536 div viceversa
{ neg } if def /DT 20. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.71114  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.71114  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 195.5174  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 195.5174  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.01645  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.42271  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 195.5174
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 156.01645
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1467 3540 a Fv(0)71
b(20)56 b(40)g(60)g(80)41 b(100)25 b(120)g(140)g(160)g(180)1393
3462 y(0)1362 3344 y(10)1362 3226 y(20)1362 3108 y(30)1362
2990 y(40)1362 2872 y(50)1362 2754 y(60)1362 2635 y(70)1362
2517 y(80)1362 2399 y(90)1331 2281 y(100)1331 2163 y(110)1331
2045 y(120)1482 3443 y
tx@Dict begin { 92.44766 11.51305 } PutCoor PutBegin  end
 1482 3443 a 57 x FC(km)17 b(par)o(cour)q(us)1482
3443 y
tx@Dict begin  PutEnd  end
 1482 3443 a 1482 3443 a
tx@Dict begin { 4.1484 180.28 } PutCoor PutBegin  end
 1482 3443 a 57 x FC(montant)h(de)f(la)
1482 3600 y(note)h(de)f(fr)o(ais)1482 3443 y
tx@Dict begin  PutEnd  end
 1482 3443
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.22717 184.95285
0.0 42.68143   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 106.70357 0.0
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.00223 0.0 64.00223
106.70357   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 42.68143   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.3363 128.04428   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2777 3543 a
currentpoint initclip moveto
 2777 3543 a -246
3587 a
SDict begin H.S end
 -246 3587 a -246 3587 a
SDict begin 12 H.A end
 -246 3587 a -246 3587
a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -246 3587 a 0 TeXcolorgray -141 3701 a FC(4.)p 0 TeXcolorgray
43 w(Le)j(vo)n(yageur)e(de)h(commer)o(ce)g(a)g(une)h(note)g(de)f(fr)o
(ais)g(de)g(75)h Fy(N)p FC(.)f(P)n(our)g(d\351ter)q(miner)g(le)h(nombr)
o(e)f(de)g(km)g(par)o(cour)q(us)g(dans)g(la)g(jour)q(n\351e)o(,)h(il)f
(y)g(a)-38 3801 y(deux)e(m\351thodes)i(:)p 0 TeXcolorgray
7 3915 a(\225)p 0 TeXcolorgray 42 w FE(G)o(raphiquement)q(.)d
FC(On)i(voit)f(qu)n('il)i(a)e(par)o(cour)q(u)f(90)j(km)e
(\(pointill\351s)j(rouges\))p 0 0 1 TeXcolorrgb 2390
3915 a
SDict begin H.S end
 2390 3915 a -30 x Fv(2)2425 3915 y
SDict begin 12 H.L end
 2425 3915 a
2425 3915 a
SDict begin [/Subtype /Link/Dest (Hfootnote.2) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2425 3915 a 0 TeXcolorgray FC(.)p 0 TeXcolorgray
7 4015 a(\225)p 0 TeXcolorgray 42 w FE(P)m(ar)d(le)h(calcul.)h
FC(On)h(r)o(etir)o(e)f(les)i(fr)o(ais)g(\002xes)f(:)g(75)11
b FB(\241)g FC(30)20 b FB(\306)d FC(45)k Fy(N)e FC(d)n('indemnit\351)j
(kilom\351tr)q(ique)o(.)g(P)o(uis)o(,)f(comme)g(chaque)g(km)g(compte)g
(pour)80 4115 y(0,)8 b(5)18 b Fy(N)p FC(,)f(on)h(divise)g(:)g(45)10
b FB(\245)g FC(0,)e(5)17 b FB(\306)d FC(45)c FB(\243)g
FC(2)16 b FB(\306)e FC(90)k(km)q(.)p 0 0 1 TeXcolorrgb
1536 4115 a
SDict begin H.S end
 1536 4115 a -31 x Fv(3)1571 4115 y
SDict begin 12 H.L end
 1571 4115
a 1571 4115 a
SDict begin [/Subtype /Link/Dest (Hfootnote.3) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1571 4115 a 0 TeXcolorgray -246 4192 a
SDict begin H.S end

-246 4192 a -246 4192 a
SDict begin 12 H.A end
 -246 4192 a -246 4192 a
SDict begin [/View [/XYZ H.V]/Dest (exo.19) cvn /DEST pdfmark end
 -246
4192 a -246 4210 a
SDict begin H.S end
 -246 4210 a -246 4210 a
SDict begin 12 H.A end
 -246 4210
a -246 4210 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -246 4210 a 0 TeXcolorgray 104 x FE(Ex)o(er)o(cice)c(19)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
0 TeXcolorgray 88 w(\225)p 0 TeXcolorgray 42 w(Lorsqu)n('on)k
(t\351l\351charge)g(50)g(M)n(o)m(,)f(on)h(paye)f(3)g
Fy(N)p FC(.)p 0 TeXcolorgray 7 4413 a(\225)p 0 TeXcolorgray
42 w(Lorsqu)n('on)i(t\351l\351charge)f(150)h(M)n(o)m(,)e(les)i(100)g
(pr)o(emiers)f(co\373tent)h(3)f Fy(N)9 b FC(;)17 b(et)h(les)h(50)f
(suivants)h(co\373tent)g(50)10 b FB(\243)g FC(0,)e(04)18
b FB(\306)d FC(2)j Fy(N)p FC(.)f(On)h(paye)f(donc)g(au)80
4513 y(total)h(3)10 b FB(\305)g FC(2)15 b FB(\306)f FC(5)k
Fy(N)p FC(.)-246 4528 y
SDict begin H.S end
 -246 4528 a -246 4528 a
SDict begin 12 H.A end
 -246
4528 a -246 4528 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -246 4528 a 0 TeXcolorgray -141 4642
a FC(2.)p 0 TeXcolorgray 43 w(On)f(compl\350te)i(le)f(tableau)g(de)f
(valeurs)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1241 4754
1626 4 v 1241 4854 4 100 v 1294 4824 a(N)n(ombr)o(e)e(de)i(M)n(o)p
1862 4854 V 102 w(0)p 2006 4854 V 104 w(50)p 2190 4854
V 104 w(100)p 2414 4854 V 104 w(150)p 2639 4854 V 105
w(200)p 2863 4854 V 1241 4857 1626 4 v 1241 4957 4 100
v 1294 4927 a(P)o(r)q(ix)f(\340)g(payer)p 1862 4957 V
218 w(3)p 2006 4957 V 124 w(3)p 2190 4957 V 164 w(3)p
2414 4957 V 185 w(5)p 2639 4957 V 184 w(7)p 2863 4957
V 1241 4960 1626 4 v -38 5084 a FE(R)o(emarque)d(:)j
FC(jusqu)n('\340)i(100)g(M)n(o)m(,)e(on)g(paye)g(3)h
Fy(N)p FC(.)f(Ensuite)o(,)i(chaque)f(nouvelle)h(tr)o(anche)f(de)f(50)h
(M)n(o)f(est)h(factur\351e)g(2)g Fy(N)p FC(.)-246 5117
y
SDict begin H.S end
 -246 5117 a -246 5117 a
SDict begin 12 H.A end
 -246 5117 a -246 5117 a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -246
5117 a 0 TeXcolorgray -141 5213 a FC(3.)p 0 TeXcolorgray
43 w(On)g(constr)q(uit)h(la)f(courbe)g(qui)h(donne)f(le)h(pr)q(ix)f
(pay\351)g(en)h(fonction)g(du)f(nombr)o(e)g(de)g(M)n(o)g
(t\351l\351charg\351s)o(.)h(Elle)g(est)g(constante)g(sur)g(l)o('inter)q
(valle)-38 5313 y([)-13 5312 y(0;)8 b(100)175 5313 y(])211
5312 y(,)17 b(puis)i(af\002ne)e(sur)h(l)o('inter)q(valle)1140
5313 y([)1165 5312 y(100;)8 b(200)1433 5313 y(])1470
5312 y(.)17 b(Il)g(faut)h(donc)f(utiliser)i(une)f(r\350gle)f(pour)h
(effectuer)h(le)f(tr)o(ac\351)p 0 0 1 TeXcolorrgb 3282
5312 a
SDict begin H.S end
 3282 5312 a -30 x Fv(4)3317 5312 y
SDict begin 12 H.L end
 3317 5312 a
3317 5312 a
SDict begin [/Subtype /Link/Dest (Hfootnote.4) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3317 5312 a 0 TeXcolorgray FC(.)p 0 TeXcolorgray
-246 5384 1757 4 v -154 5461 a Fu(2)q(.)p 0 TeXcolorgray
-76 5461 a
SDict begin H.S end
 -76 5461 a -76 5461 a
SDict begin H.R end
 -76 5461 a -76 5461
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.2) cvn /DEST pdfmark
end
 -76 5461 a 0 TeXcolorgray Fu(La)c(m\351thode)h(gr)o(aphique)f(est)g
(simple)o(,)g(mais)f(la)h(r\351ponse)g(pourr)o(ait)g(\352tr)o(e)g
(impr\351cise)o(.)-154 5540 y(3)q(.)p 0 TeXcolorgray
-76 5540 a
SDict begin H.S end
 -76 5540 a -76 5540 a
SDict begin H.R end
 -76 5540 a -76 5540
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.3) cvn /DEST pdfmark
end
 -76 5540 a 0 TeXcolorgray Fu(On)f(peut)h(aussi)f(r\351soudr)o(e)h(l)o
('\351quation)g(0,)6 b(5)q Fk(x)12 b Fj(\305)c Fu(30)14
b Fj(\306)e Fu(75.)-154 5619 y(4)q(.)p 0 TeXcolorgray
-76 5619 a
SDict begin H.S end
 -76 5619 a -76 5619 a
SDict begin H.R end
 -76 5619 a -76 5619
a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.4) cvn /DEST pdfmark
end
 -76 5619 a 0 TeXcolorgray Fu(On)h(parle)h(de)g(fonction)g(\253)d
(af\002ne)k(par)e(mor)o(ceaux)e(\273.)p 0 TeXcolorgray
0 TeXcolorgray 1909 5895 a FC(10)p 0 TeXcolorgray eop
end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1212 1227
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 202.76924 a add def
/d 0.0 a add neg def /h 177.37851 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1212 1227 a 1381 1082 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 182.46393 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 10 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 159.95384 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33865
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 182.46393  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 182.46393  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.95384  def /dT 1398450 abs 65536 div viceversa
{ neg } if def /DT 50. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.42677  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.42677  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.95384  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.95384  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 182.46393  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.95384
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 182.46393
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1366 1179 a Fv(0)130
b(50)100 b(100)84 b(150)g(200)g(250)g(300)h(350)1292
1102 y(0)1292 925 y(1)1292 747 y(2)1292 570 y(3)1292
393 y(4)1292 216 y(5)1292 39 y(6)1381 1082 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 42.6773 64.01866
0.0 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35461 149.37688
42.6773 64.01866   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 98.16206 0.0
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 59.74823 0.0 59.74823
98.16206   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1381 1082 a
tx@Dict begin { 87.53294 11.3057 } PutCoor PutBegin  end
 1381 1082 a 57 x
FC(N)n(ombr)o(e)16 b(de)h(M)n(o)1381 1082 y
tx@Dict begin  PutEnd  end
 1381 1082
a 1381 1082 a
tx@Dict begin { 1.34561 146.62965 } PutCoor PutBegin  end
 1381 1082 a 54 x FC(P)o(r)q(ix)1381 1082
y
tx@Dict begin  PutEnd  end
 1381 1082 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 21.33865 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.6773 64.01866   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 64.01596 106.69777   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35461 149.37688   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2895 1227 a
currentpoint initclip moveto
 2895
1227 a -246 1268 a
SDict begin H.S end
 -246 1268 a -246 1268 a
SDict begin 12 H.A end
 -246 1268
a -246 1268 a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -246 1268 a 0 TeXcolorgray -141 1381 a
FC(4.)p 0 TeXcolorgray 43 w(Il)g(y)f(a)i(deux)f(m\351thodes)i(:)p
0 TeXcolorgray 7 1494 a(\225)p 0 TeXcolorgray 42 w FE(G)o(raphiquement)
q(.)d FC(On)i(voit)f(qu)n('on)h(a)f(t\351l\351charg\351)h(140)h(M)n(o)e
(\(pointill\351s)i(rouges\).)p 0 TeXcolorgray 7 1594
a(\225)p 0 TeXcolorgray 42 w FE(P)m(ar)c(le)h(calcul.)g
FC(J'ai)h(pay\351)h(4,60)i Fy(N)p FC(,)d(donc)g(3)10
b FB(\305)g FC(1,)e(60)21 b Fy(N)p FC(.)c(J'ai)h(donc)f
(t\351l\351charg\351)h(1,)8 b(60)i FB(\245)g FC(0,)e(04)19
b FB(\306)c FC(40)j(M)n(o)g(au-del\340)g(du)f(100)3579
1570 y Fq(e)3606 1594 y FC(.)h(A)n(utr)o(ement)g(dit,)80
1694 y(j)o('ai)f(t\351l\351charg\351)h(140)h(M)n(o)m(.)-246
1777 y
SDict begin H.S end
 -246 1777 a -246 1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777
a
SDict begin [/View [/XYZ H.V]/Dest (exo.20) cvn /DEST pdfmark end
 -246 1777 a 0 TeXcolorgray 112 x FE(Ex)o(er)o(cice)14
b(20)p 0 TeXcolorgray 41 w FC(P)n(our)j(louer)h(une)g(voitur)o(e)g(je)g
(dois)f(payer)g(:)p 0 TeXcolorgray -76 1989 a(\225)p
0 TeXcolorgray 42 w(une)h(par)q(t)f(\002xe)g(de)g(20)h
Fy(N)p FC(.)p 0 TeXcolorgray -76 2089 a(\225)p 0 TeXcolorgray
42 w(0,6)g Fy(N)34 b FC(par)18 b(km)f(par)o(cour)q(u.)-246
2181 y
SDict begin H.S end
 -246 2181 a -246 2181 a
SDict begin 12 H.A end
 -246 2181 a -246 2181
a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -246 2181 a 0 TeXcolorgray -141 2277 a FC(1.)p 0 TeXcolorgray
43 w(P)n(our)g(100)h(km,)g(je)g(payer)o(ai)1527 2376
y Fz(P)8 b FC(\(100\))16 b FB(\306)e FC(20)c FB(\305)g
FC(100)g FB(\243)g FC(0,)e(6)19 b FB(\306)14 b FC(80)k
Fy(N)f FC(;)-38 2522 y(et)h(pour)f(50)i(km,)e(je)h(payer)o(ai)1577
2622 y Fz(P)8 b FC(\(50\))14 b FB(\306)h FC(20)10 b FB(\305)g
FC(50)g FB(\243)g FC(0,)e(6)18 b FB(\306)c FC(50)k Fy(N)p
FC(.)-246 2679 y
SDict begin H.S end
 -246 2679 a -246 2679 a
SDict begin 12 H.A end
 -246 2679 a
-246 2679 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -246 2679 a 0 TeXcolorgray -141 2782 a FC(2.)p
0 TeXcolorgray 43 w(D)o('une)f(mani\350r)o(e)h(g\351n\351r)o(ale)o(,)g
(pour)i Fz(x)i FC(km)c(par)o(cour)q(us)f(je)h(payer)o(ai)1813
2959 y(20)10 b FB(\305)i Fz(x)j FB(\243)10 b FC(0,)e(6)20
b Fy(N)p FC(.)-38 3136 y(A)-5 b(vec)17 b(les)h(notations)h(de)e(l)o
('\351nonc\351,)i(cela)f(donne)1768 3235 y Fz(P)8 b FC(\()r
Fz(x)d FC(\))15 b FB(\306)f FC(0,)8 b(6)r Fz(x)15 b FB(\305)10
b FC(20.)-246 3311 y
SDict begin H.S end
 -246 3311 a -246 3311 a
SDict begin 12 H.A end
 -246 3311
a -246 3311 a
SDict begin [/View [/XYZ H.V]/Dest (exo.21) cvn /DEST pdfmark end
 -246 3311 a -246 3329 a
SDict begin H.S end
 -246 3329 a -246
3329 a
SDict begin 12 H.A end
 -246 3329 a -246 3329 a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -246 3329 a 0 TeXcolorgray
102 x FE(Ex)o(er)o(cice)k(21)p 0 TeXcolorgray 0 TeXcolorgray
146 w FC(1.)p 0 TeXcolorgray 43 w(C)o(omme)19 b(120)c
FB(\306)g FC(60)10 b FB(\305)g FC(60)16 b FB(\306)e FC(60)c
FB(\305)g FC(6)g FB(\243)g FC(10,)21 b(le)d(co\373t)f(pour)h(120)h
(minutes)g(de)e(location)h(est)1768 3608 y(15)10 b FB(\305)g
FC(6)g FB(\243)g FC(5)17 b FB(\306)d FC(45)k Fy(N)p FC(.)-246
3686 y
SDict begin H.S end
 -246 3686 a -246 3686 a
SDict begin 12 H.A end
 -246 3686 a -246 3686
a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -246 3686 a 0 TeXcolorgray -141 3799 a FC(2.)p 0 TeXcolorgray
43 w(On)f(compl\350te)i(le)f(tableau)g(de)f(valeurs)h(:)p
0 TeXcolorgray 0 TeXcolorgray 1210 3906 1689 4 v 1210
4006 4 100 v 1263 3976 a(D)o(ur\351e)p 1526 4006 V 123
w(0)p 1710 4006 V 124 w(20)p 1894 4006 V 104 w(40)p 2078
4006 V 104 w(60)p 2262 4006 V 104 w(80)p 2446 4006 V
104 w(100)p 2670 4006 V 104 w(120)p 2895 4006 V 1210
4009 1689 4 v 1210 4108 4 100 v 1263 4079 a(P)o(r)q(ix)p
1526 4108 V 181 w(15)p 1710 4108 V 104 w(15)p 1894 4108
V 104 w(15)p 2078 4108 V 104 w(15)p 2262 4108 V 104 w(25)p
2446 4108 V 124 w(35)p 2670 4108 V 145 w(45)p 2895 4108
V 1210 4112 1689 4 v -246 4190 a
SDict begin H.S end
 -246 4190 a -246 4190
a
SDict begin 12 H.A end
 -246 4190 a -246 4190 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -246 4190 a 0 TeXcolorgray
-141 4269 a FC(3.)p 0 TeXcolorgray 43 w(On)f(constr)q(uit)h(le)g(gr)o
(aphique)g(:)p 0 TeXcolorgray 0 TeXcolorgray 1210 5646
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 203.2079 a add def
/d 0.0 a add neg def /h 156.0013 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1210 5646 a 1387 5539 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 181.86719 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22722
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 143.19681 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22714
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 181.86719  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 181.86719  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 143.19681  def /dT 932390 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.42271  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 1.42271  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 143.19681
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 181.86719
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 143.19681  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 143.19681  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 181.86719  def /dT 932395 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.84544  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 143.19681
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 181.86719
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1372 5636 a Fv(0)72
b(10)56 b(20)g(30)g(40)g(50)g(60)g(70)h(80)f(90)40 b(100)26
b(110)1299 5559 y(0)1299 5441 y(5)1268 5322 y(10)1268
5204 y(15)1268 5086 y(20)1268 4968 y(25)1268 4850 y(30)1268
4732 y(35)1268 4614 y(40)1268 4496 y(45)1387 5539 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.36285
42.68166 0.0 42.68166   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 170.72571
128.04497 85.36285 42.68166   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0.08235 0.39607 0.75294  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1387 5539 a
tx@Dict begin { 99.59 14.48624 } PutCoor PutBegin  end
 1387 5539 a 54 x FC(temps)19 b(\(en)f(min\))1387
5539 y
tx@Dict begin  PutEnd  end
 1387 5539 a 1387 5539 a
tx@Dict begin { 5.69086 131.62585 } PutCoor PutBegin  end
 1387 5539 a 54 x FC(pr)q(ix)g(\(en)f
(euros\))1387 5539 y
tx@Dict begin  PutEnd  end
 1387 5539 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 0.0 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 28.45428 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 56.90857 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 85.36285 42.68166   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 113.81714 71.1361   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 142.27142 99.59053   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0.08235 0.39607 0.75294  setrgbcolor
 [ 170.72571 128.04497   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
2897 5646 a
currentpoint initclip moveto
 2897 5646 a -246 5710 a
SDict begin H.S end
 -246 5710 a -246
5710 a
SDict begin 12 H.A end
 -246 5710 a -246 5710 a
SDict begin [/View [/XYZ H.V]/Dest (exo.22) cvn /DEST pdfmark end
 -246 5710 a 0 TeXcolorgray
1909 5895 a FC(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -246 -163 a FE(Ex)o(er)o(cice)14
b(22)p 0 TeXcolorgray 41 w FC(Les)22 b(gar)o(es)f(de)g(C)o(alais)h(et)g
(de)f(Boulogne-sur)o(-mer)h(sont)g(distantes)h(de)e(30)h(km.)g(U)m(n)f
(tr)o(ain)h(par)q(t)f(\340)g(12)h(h)g(de)f(Boulogne-sur)o(-mer)h(en)
-246 -63 y(dir)o(ection)f(de)g(C)o(alais)h(et)f(roule)g(\340)g(la)g
(vitesse)i(de)e(40)h(km/h.)g(U)m(n)f(tr)o(ain)h(par)q(t)e(de)h(C)o
(alais)h(\340)f(12)h(h)f(15)h(et)f(fait)h(route)f(en)g(sens)h(inverse)g
(\340)f(la)g(vitesse)i(de)-246 37 y(60)c(km/h.)-246 66
y
SDict begin H.S end
 -246 66 a -246 66 a
SDict begin 12 H.A end
 -246 66 a -246 66 a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -246 66 a 0
TeXcolorgray -141 178 a FC(1.)p 0 TeXcolorgray 43 w(Le)h(tr)o(ain)g
(qui)h(par)q(t)e(\340)h(12)g(h)g(de)g(Boulogne-sur)o(-mer)g(roule)g
(\340)g(la)g(vitesse)h(de)f(40)g(km/h,)h(donc)f(il)g(par)o(cour)q(t)f
(40)h(km)h(en)f(60)g(min.)h(P)n(our)e(savoir)-38 278
y(quand)e(il)h(arr)q(ive)f(\340)g(C)o(alais)o(,)i(on)e(compl\350te)i
(un)f(tableau)g(de)f(propor)q(tionnalit\351)i(:)p 0 TeXcolorgray
0 TeXcolorgray 1528 363 1051 4 v 1528 462 4 100 v 1605
432 a(temps)g(\(en)e(min\))p 2208 462 V 127 w(60)p 2392
462 V 134 w(?)p 2576 462 V 1528 466 1051 4 v 1528 565
4 100 v 1582 535 a(distance)g(\(en)h(km\))p 2208 565
V 103 w(40)p 2392 565 V 104 w(30)p 2576 565 V 1528 569
1051 4 v -38 705 a(Le)g(tr)o(ain)g(mettr)o(a)502 672
y Fv(60)p Fp(\243)p Fv(30)p 502 685 165 5 v 554 733 a(40)691
705 y FB(\306)770 672 y Fv(1)6 b(800)p 770 685 130 5
v 804 733 a(40)924 705 y FB(\306)14 b FC(45)k(min)g(pour)g(arr)q(iver)e
(\340)h(C)o(alais)o(,)i(donc)e(il)h(y)f(ser)o(a)h(\340)f(12)h(h)f(45.)
-38 867 y(P)n(our)h(le)i(tr)o(ain)f(qui)h(par)q(t)f(de)f(C)o(alais)o(,)
j(le)e(calcul)h(est)g(plus)g(facile)g(:)f(il)g(roule)g(\340)g(60)h
(km/h,)g(donc)f(par)o(cour)q(t)f(60)i(km)f(en)h(60)f(min)9
b(;)20 b(et)f(ainsi)h(30)g(km)-38 966 y(en)e(30)g(min.)g(C)o(omme)h(il)
f(par)q(t)f(\340)g(12)h(h)g(15,)g(il)g(arr)q(ive)f(\340)g(12)h(h)g(45)g
(lui)g(aussi.)-38 1128 y(On)f(peut)i(ainsi)f(r)o(epr\351senter)g(la)f
(mar)o(che)h(des)f(deux)g(tr)o(ains)i(:)p 0 TeXcolorgray
0 TeXcolorgray 769 2532 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 309.42352 a add def
/d 0.0 a add neg def /h 159.1932 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 769 2532 a 1389 2361 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 213.39554 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 128.03732 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 234.73509  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 234.73509  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 138.70709  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 138.70709  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 138.70709  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 234.73509  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 138.70709
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 234.73509
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1389 2361 a
tx@Dict begin { -8.53569 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h)1389 2361 y
tx@Dict begin  PutEnd  end
 1389
2361 a 1389 2361 a
tx@Dict begin { 29.87524 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h10)1389 2361
y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 72.55435 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h20)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 115.23346 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h30)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 157.91257 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h40)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 200.59167 -7.25536 } PutCoor PutBegin  end
 1389 2361 a 40 x Fi(12h50)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -6.40192 3.84096 } PutCoor PutBegin  end
 1389 2361 a 36 x Fi(0)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 45.23975 } PutCoor PutBegin  end
 1389 2361 a 36 x Fi(10)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 88.34573 } PutCoor PutBegin  end
 1389 2361 a 36 x Fi(20)1389
2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -44.81319 8.53569 } PutCoor PutBegin  end
 1389 2361 a 1418 2430
a Fi(Boulogne)p 1389 2365 289 4 v 1389 2469 4 107 v 1674
2469 V 1389 2471 289 4 v 1389 2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a 1389
2361 a
tx@Dict begin { -44.81319 136.57301 } PutCoor PutBegin  end
 1389 2361 a 1418 2430 a Fi(C)o(alais)p 1389 2365
203 4 v 1389 2457 4 95 v 1588 2457 V 1389 2459 203 4
v 1389 2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { -12.80385 131.87828 } PutCoor PutBegin  end
 1389 2361 a 36
x Fi(30)1389 2361 y
tx@Dict begin  PutEnd  end
 1389 2361 a 1389 2361 a
tx@Dict begin { 96.02798 -7.25536 } PutCoor PutBegin  end
 1389 2361
a 0 1 0 TeXcolorrgb 40 x Fi(12h27)p 0 TeXcolorgray 1389
2361 a
tx@Dict begin  PutEnd  end
 1389 2361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 128.03732 0.0
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 64.01866 128.03732 0.0
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 192.05598 0.0 64.01866
128.03732   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 115.23346 0.0 115.23346
76.82251   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
3338 2532 a
currentpoint initclip moveto
 3338 2532 a -246 2574 a
SDict begin H.S end
 -246 2574 a -246
2574 a
SDict begin 12 H.A end
 -246 2574 a -246 2574 a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -246 2574 a 0 TeXcolorgray
-140 2687 a FC(2.)p 0 TeXcolorgray 42 w(N)n(ous)25 b(allons)i(d\351ter)
q(miner)f(l)o('heur)o(e)h(de)e(croisement)h(des)g(tr)o(ains)g(par)g(le)
g(calcul.)g(Gr)o(aphiquement,)i(cela)e(corr)o(espond)f(\340)h(l)o
('abscisse)h(du)-38 2787 y(point)18 b(d)n('intersection)i(des)d
(courbes)o(.)-38 2949 y(\300)24 b(12h15,)k(le)d(tr)o(ain)h(qui)g(par)q
(t)e(de)h(Boulogne-sur)o(-mer)h(a)f(par)o(cour)q(u)g(10)h(km)f
(\(facile)h(\340)f(v\351r)q(i\002er\),)f(il)i(est)g(donc)e(\340)h(20)h
(km)g(de)f(C)o(alais)o(.)g(C'est)-38 3049 y(l)o('heur)o(e)19
b(\340)e(laquelle)i(le)f(deuxi\350me)h(tr)o(ain)f(par)q(t.)g(C)o(omme)h
(l)o('un)f(roule)g(\340)f(40)i(km/h)f(et)g(l)o('autr)o(e)g(\340)f(60)i
(km/h,)f(tout)h(se)f(passe)g(comme)h(si)f(un)f(seul)-38
3148 y(tr)o(ain)h(devait)f(par)o(cour)q(ir)g(20)h(km)f(\340)h(la)f
(vitesse)i(de)e(40)10 b FB(\305)g FC(60)17 b FB(\306)d
FC(100)19 b(km/h.)f(On)f(compl\350te)j(un)d(tableau)h(de)f(propor)q
(tionnalit\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1508
3233 1092 4 v 1508 3333 4 100 v 1585 3303 a(temps)f(\(en)g(min\))p
2188 3333 V 147 w(60)p 2412 3333 V 154 w(?)p 2596 3333
V 1508 3336 1092 4 v 1508 3436 4 100 v 1561 3406 a(distance)g(\(en)g
(km\))p 2188 3436 V 103 w(100)p 2412 3436 V 104 w(20)p
2596 3436 V 1508 3439 1092 4 v -28 3542 a Fv(60)p Fp(\243)p
Fv(20)p -28 3555 165 5 v 8 3603 a(100)161 3575 y FB(\306)240
3542 y Fv(1)6 b(200)p 240 3555 130 5 v 259 3603 a(100)394
3575 y FB(\306)14 b FC(12,)k(donc)f(il)h(faudr)o(ait)g(12)g(min)g(\340)
f(ce)h(tr)o(ain)f(pour)h(par)o(cour)q(ir)e(20)j(km.)f(Ainsi,)g(les)g
(deux)f(tr)o(ains)h(se)g(croiseront-ils)g(\340)1445 3754
y(12)h(h)e(15)h(min)11 b FB(\305)f FC(12)19 b(min)c FB(\306)f
FC(12)k(h)g(27)g(min)q(.)-246 3848 y
SDict begin H.S end
 -246 3848 a -246
3848 a
SDict begin 12 H.A end
 -246 3848 a -246 3848 a
SDict begin [/View [/XYZ H.V]/Dest (exo.23) cvn /DEST pdfmark end
 -246 3848 a 0 TeXcolorgray
103 x FE(Ex)o(er)o(cice)c(23)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 887 5339 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 256.07468 a add def
/d 0.0 a add neg def /h 156.49008 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 887 5339 a 1444 4885 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 188.9262 0.0 -67.14848 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 101.86087 0.0 -54.62921   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 188.9262  0 -67.14848  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.14848
 188.9262  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-54.62921  def /maxTickline 101.86087  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 101.86087  0 -54.62921  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -54.62921
 101.86087  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.14848  def /maxTickline 188.9262  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -54.62921   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 188.9262
0.0 -67.14848 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1429 4982 a Fv(0)205 b(1)h(2)f(3)g(4)g(5)g(6)-1705 b
Fp(\241)p Fv(1)-309 b Fp(\241)p Fv(2)1356 4904 y(0)1314
5141 y Fp(\241)p Fv(1)1356 4668 y(1)1356 4432 y(2)1356
4196 y(3)1444 4885 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -28.45274 -56.90549 28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 0.0 -28.45274  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 113.81097 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 28.45274 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 14.22636 0.0
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 -56.90549
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 28.45274 170.71646
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 28.45274 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -56.90549 28.45274 -56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1444 4885 a
tx@Dict begin { -18.4941 17.64055 } PutCoor PutBegin  end
 1444 4885 a 0 1 0 TeXcolorrgb 51 x FC(0,)8
b(5)p 0 TeXcolorgray 1444 4885 a
tx@Dict begin  PutEnd  end
 1444 4885 a 1444 4885
a
tx@Dict begin { 133.7278 -8.5359 } PutCoor PutBegin  end
 1444 4885 a 1 0 0 TeXcolorrgb 51 x FC(5)p 0 TeXcolorgray
1444 4885 a
tx@Dict begin  PutEnd  end
 1444 4885 a 1444 4885 a
tx@Dict begin { 162.18054 -8.5359 } PutCoor PutBegin  end
 1444 4885 a 1 0 0
TeXcolorrgb 51 x FC(6)p 0 TeXcolorgray 1444 4885 a
tx@Dict begin  PutEnd  end
 1444
4885 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 113.81097
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ -56.90549
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 1 0 0  setrgbcolor  [ 170.71646
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 0.0 -28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 0 1  setrgbcolor  [ 142.26372
85.35823   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 3013 5339 a
currentpoint initclip moveto
 3013 5339 a -246
5404 a
SDict begin H.S end
 -246 5404 a -246 5404 a
SDict begin 12 H.A end
 -246 5404 a -246 5404
a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -246 5404 a 0 TeXcolorgray -141 5518 a FC(1.)p 0 TeXcolorgray
43 w(L)-10 b('image)18 b(de)g(3)f(par)25 b Fz(f)37 b
FC(est)18 b(0,)8 b(5)18 b(\(pointill\351s)i(ver)q(ts\).)-246
5551 y
SDict begin H.S end
 -246 5551 a -246 5551 a
SDict begin 12 H.A end
 -246 5551 a -246 5551
a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -246 5551 a 0 TeXcolorgray -141 5646 a FC(2.)p 0 TeXcolorgray
43 w(Les)e(solutions)h(de)e(l)o('\351quation)28 b Fz(f)19
b FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g FC(1)k(sont)g
FB(\241)p FC(2)g(;)f(4)h(et)f(6)h(\(pointill\351s)i(rouges\).)p
0 TeXcolorgray 1909 5895 a(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(3.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(signe)h(de)25
b Fz(f)51 b FC(:)p 0 TeXcolorgray 0 TeXcolorgray 1073
-75 a

 1073 -75 a 1073 -75 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -12.14816 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a 167
w Fz(x)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.8345 -41.98499 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a 117 w Fz(f)1241
-74 y FC(\()1270 -75 y Fz(x)1314 -74 y FC(\))1073 -75
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -19.84302 moveto

 238.11656 -19.84302 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -59.52911 moveto

 238.11656 -59.52911 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -59.52911 lineto

 238.11656 -59.52911 lineto

 238.11656 0.0 lineto

 closepath

 238.11656 -59.52911 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 39.68607 0.0 moveto

 39.68607 -59.52911 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.87846 -12.99 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a FB(\241)p FC(2)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.40654 -12.99 ] concat

 pgfs


 1073
-75 a
 0 setgray
 1073 -75 a FB(\241)p FC(1)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.23227 -12.99 ] concat

 pgfs


 1073 -75 a
 0 setgray

1073 -75 a FC(2)1073 -75 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 225.76035 -12.9651 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a FC(6)1073
-75 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.0774 -42.24297 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a FB(\305)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 109.13673 -19.84302 moveto

 109.13673 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 106.70782 -42.7304 ] concat

 pgfs


 1073 -75
a
 0 setgray
 1073 -75 a FC(0)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 135.60873 -41.11218 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a FB(\241)1073
-75 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 168.66588 -19.84302 moveto

 168.66588 -59.52911 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 166.2381 -42.7304 ] concat

 pgfs


 1073 -75 a
 0 setgray
 1073 -75 a FC(0)1073 -75 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.14009 -42.24297 ] concat

 pgfs


 1073 -75
a
 0 setgray
 1073 -75 a FB(\305)1073 -75 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 466 a
SDict begin H.S end
 -246 466 a
-246 466 a
SDict begin 12 H.A end
 -246 466 a -246 466 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -246 466 a 0 TeXcolorgray
-141 580 a FC(4.)p 0 TeXcolorgray 43 w(Le)18 b(maximum)h(de)25
b Fz(f)36 b FC(est)18 b(3,)g(son)g(minimum)i(est)e FB(\241)p
FC(1)f(\(points)i(bleus\).)-246 614 y
SDict begin H.S end
 -246 614 a -246
614 a
SDict begin 12 H.A end
 -246 614 a -246 614 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -246 614 a 0 TeXcolorgray
-141 709 a FC(5.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(de)25 b Fz(f)51 b FC(:)p 0 TeXcolorgray
0 TeXcolorgray 636 796 a

 636 796 a 636 796 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 636 796
a
 0 setgray
 636 796 a 168 w Fz(x)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a
118 w Fz(f)805 797 y FC(\()834 796 y Fz(x)878 797 y FC(\))636
796 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 340.16171 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 340.16171 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 340.16171 -85.04042 lineto

 340.16171 0.0 lineto

 closepath

 340.16171 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.13844 -17.24191 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a FB(\241)p FC(2)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 636
796 a
 0 setgray
 636 796 a FC(0)636 796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a FC(5)636
796 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 323.55753 -17.21701 ] concat

 pgfs


 636 796 a
 0 setgray
 636 796 a FC(6)636 796 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a FC(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 66.44356 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a FC(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636
796 a 636 796 a
 0 setgray
 636 796 a FB(\241)p FC(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 636
796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796 a FB(\241)p FC(1)636
796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09723 -41.12665 moveto

 142.20247 -69.77762 lineto

 pgfstr

 save

 [0.9105 -0.41336 0.41336 0.9105 142.20247 -69.77762 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796
a 636 796 a
 0 setgray
 636 796 a FC(3)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 236.52441 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 238.51697 -40.4615 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796
a 636 796 a
 0 setgray
 636 796 a FC(3)636 796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43555 -70.76674 moveto

 230.5401 -42.13632 lineto

 pgfstr

 save

 [0.91061 0.41313 -0.41313 0.91061 230.5401 -42.13632 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0
TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796 a
FC(1)636 796 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 321.56483 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 323.55739 -79.06276 ] concat

 pgfs


 636 796 a
 /pgfsc{}def/pgffc{}def
 636 796 a 636 796 a
 0 setgray
 636 796
a FC(1)636 796 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 249.17833 -41.15018 moveto

 315.58054 -71.2758 lineto

 pgfstr

 save

 [0.91061 -0.41313 0.41313 0.91061 315.58054 -71.2758 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 1573
a
SDict begin H.S end
 -246 1573 a -246 1573 a
SDict begin 12 H.A end
 -246 1573 a -246 1573 a
SDict begin [/View [/XYZ H.V]/Dest (exo.24) cvn /DEST pdfmark end
 -246
1573 a 0 TeXcolorgray 133 x FE(Ex)o(er)o(cice)14 b(24)p
0 TeXcolorgray 41 w FC(La)k(fonction)26 b Fz(f)36 b FC(est)18
b(d\351\002nie)g(sur)f(l)o('inter)q(valle)1559 1707 y([)1585
1706 y(1;)8 b(5)1693 1707 y(])1737 1706 y(par)25 b Fz(f)1929
1707 y FC(\()1958 1706 y Fz(x)2002 1707 y FC(\))2043
1706 y FB(\306)14 b FC(2)r Fz(x)h FB(\305)2287 1673 y
Fv(8)p 2284 1686 36 5 v 2285 1735 a Fs(x)2340 1706 y
FB(\241)10 b FC(10.)-246 1764 y
SDict begin H.S end
 -246 1764 a -246 1764
a
SDict begin 12 H.A end
 -246 1764 a -246 1764 a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -246 1764 a 0 TeXcolorgray
-141 1849 a FC(1.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
855 1920 2399 4 v 855 2020 4 100 v 962 1990 a Fz(x)p
1108 2020 V 160 w FC(1)p 1252 2020 V 152 w(1,)e(5)p 1560
2020 V 179 w(2)p 1758 2020 V 159 w(2,)g(5)p 2025 2020
V 214 w(3)p 2333 2020 V 233 w(3,)g(5)p 2641 2020 V 152
w(4)p 2784 2020 V 124 w(4,)g(5)p 3037 2020 V 159 w(5)p
3250 2020 V 855 2023 2399 4 v 855 2122 4 100 v 916 2093
a Fz(f)19 b FC(\()r Fz(x)5 b FC(\))p 1108 2122 V 102
w(0)p 1252 2122 V 104 w FB(\241)p FC(1,)j(67)p 1560 2122
V 105 w FB(\241)p FC(2)p 1758 2122 V 103 w FB(\241)p
FC(1,)g(8)p 2025 2122 V 104 w FB(\241)p FC(1,)g(33)p
2333 2122 V 105 w FB(\241)p FC(0,)g(71)p 2641 2122 V
105 w(0)p 2784 2122 V 104 w(0,)g(78)p 3037 2122 V 104
w(1,)g(6)p 3250 2122 V 855 2126 2399 4 v -38 2299 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)1453 2498 y Fz(f)h FC(\(1\))c
FB(\306)f FC(2)c FB(\243)g FC(1)g FB(\305)1915 2442 y
FC(8)p 1915 2479 41 5 v 1915 2555 a(1)1976 2498 y FB(\241)g
FC(10)15 b FB(\306)f FC(2)c FB(\305)g FC(8)g FB(\241)g
FC(10)17 b FB(\306)d FC(0)1453 2696 y Fz(f)19 b FC(\(4\))c
FB(\306)f FC(2)c FB(\243)g FC(4)g FB(\305)1915 2640 y
FC(8)p 1915 2677 V 1915 2753 a(4)1976 2696 y FB(\241)g
FC(10)15 b FB(\306)f FC(8)c FB(\305)g FC(2)g FB(\241)g
FC(10)17 b FB(\306)d FC(0.)-246 2836 y
SDict begin H.S end
 -246 2836 a -246
2836 a
SDict begin 12 H.A end
 -246 2836 a -246 2836 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -246 2836 a 0 TeXcolorgray
-141 2916 a FC(2.)p 0 TeXcolorgray 43 w(C)o(ourbe)j(r)o
(epr\351sentative)i(:)p 0 TeXcolorgray 0 TeXcolorgray
1279 4252 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 186.65034 a add def
/d 0.0 a add neg def /h 150.79962 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1279 4252 a 1473 3642 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 6 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 163.3189 0.0 -23.33145 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 77.3915 0.0 -73.40813   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 163.3189  0 -23.33145  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -23.33145
 163.3189  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-73.40813  def /maxTickline 77.3915  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.3915
0.0 -73.40813   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -23.33145 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 77.3915  0 -73.40813  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -73.40813
 77.3915  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-23.33145  def /maxTickline 163.3189  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 77.3915
0.0 -73.40813   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 163.3189
0.0 -23.33145 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1458 3739 a Fv(0)205
b(1)g(2)g(3)g(4)g(5)1384 3661 y(0)1342 3898 y Fp(\241)p
Fv(1)1342 4134 y Fp(\241)p Fv(2)1384 3425 y(1)1384 3189
y(2)1473 3642 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 1 def /x1 5 def /dx
x1 x sub 199 div def /F@pstplot ((x+4.0/x-5.0)*2.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 93.34709 -28.45274 0.0
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 34.69023 0.0 34.69023
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 93.34709 0.0 93.34709
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
2829 4252 a
currentpoint initclip moveto
 2829 4252 a -246 4295 a
SDict begin H.S end
 -246 4295 a -246
4295 a
SDict begin 12 H.A end
 -246 4295 a -246 4295 a
SDict begin [/View [/XYZ H.V]/Dest (Item.60) cvn /DEST pdfmark end
 -246 4295 a 0 TeXcolorgray
-141 4410 a FC(3.)p 0 TeXcolorgray 43 w(Les)18 b(ant\351c\351dents)h
(de)e FB(\241)p FC(1)h(par)25 b Fz(f)36 b FC(sont)18
b(1,)8 b(25)19 b(et)f(3,)8 b(25)19 b(environ)f(\(pointill\351s)h
(rouges\).)-246 4443 y
SDict begin H.S end
 -246 4443 a -246 4443 a
SDict begin 12 H.A end
 -246 4443
a -246 4443 a
SDict begin [/View [/XYZ H.V]/Dest (Item.61) cvn /DEST pdfmark end
 -246 4443 a 0 TeXcolorgray -141 4539 a
FC(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18 b(de)f(var)q(iations)h(:)p
0 TeXcolorgray 0 TeXcolorgray 991 4593 a

 991 4593 a 991
4593 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a 168 w Fz(x)991 4593 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991
4593 a
 0 setgray
 991 4593 a 117 w Fz(f)1159 4594 y FC(\()1188 4593
y Fz(x)1232 4594 y FC(\))991 4593 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593
a FC(1)991 4593 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a FC(2)991 4593
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 991 4593 a
 0 setgray
 991 4593 a FC(5)991 4593 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 4593 a
 /pgfsc{}def/pgffc{}def
 991
4593 a 991 4593 a
 0 setgray
 991 4593 a FC(0)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 66.44356 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 68.43611 -40.4615 ] concat

 pgfs


 991 4593
a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a FC(0)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991
4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a FB(\241)p FC(2)991
4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 148.18631 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 150.17886 -79.06276 ] concat

 pgfs


 991 4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a FB(\241)p
FC(2)991 4593 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 79.09744 -41.14923 moveto

 142.20209 -69.78137 lineto

 pgfstr

 save

 [0.9106 -0.41315 0.41315 0.9106 142.20207 -69.78136 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 4593
a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a FC(1.6)991 4593 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs



991 4593 a
 /pgfsc{}def/pgffc{}def
 991 4593 a 991 4593 a
 0 setgray
 991 4593 a FC(1.6)991
4593 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 167.43564 -70.77017 moveto

 226.89362 -43.80154 lineto

 pgfstr

 save

 [0.91064 0.41304 -0.41304 0.91064 226.8936 -43.80156 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 5332 a
SDict begin H.S end
 -246
5332 a -246 5332 a
SDict begin 12 H.A end
 -246 5332 a -246 5332 a
SDict begin [/View [/XYZ H.V]/Dest (Item.62) cvn /DEST pdfmark end
 -246 5332
a 0 TeXcolorgray -141 5446 a FC(5.)p 0 TeXcolorgray 43
w(T)-8 b(ableau)18 b(de)f(signe)h(:)p 0 TeXcolorgray
1909 5895 a(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 991 -244
a

 991 -244 a 991 -244 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a 168 w Fz(x)991
-244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -44.81912 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a 117 w Fz(f)1159 -243 y FC(\()1188
-244 y Fz(x)1232 -243 y FC(\))991 -244 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -56.69362 moveto

 255.12128 -56.69362 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -56.69362 lineto

 255.12128 -56.69362 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -56.69362 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -56.69362 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.24191 ] concat

 pgfs


 991 -244 a
 0 setgray
 991
-244 a FC(1)991 -244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.24191 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a FC(4)991
-244 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 238.51706 -17.21701 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a FC(5)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 70.867 -28.3468 moveto

 70.867 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43611 -45.56381 ] concat

 pgfs


 991 -244
a
 0 setgray
 991 -244 a FC(0)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.08954 -43.94487 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a FB(\241)991
-244 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 155.90744 -28.3468 moveto

 155.90744 -56.69362 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.47653 -45.56381 ] concat

 pgfs


 991 -244 a
 0 setgray
 991 -244 a FC(0)991 -244 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 195.12997 -45.07565 ] concat

 pgfs


 991 -244
a
 0 setgray
 991 -244 a FB(\305)991 -244 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 297 a
SDict begin H.S end
 -246 297 a
-246 297 a
SDict begin 12 H.A end
 -246 297 a -246 297 a
SDict begin [/View [/XYZ H.V]/Dest (exo.25) cvn /DEST pdfmark end
 -246 297 a 0 TeXcolorgray
132 x FE(Ex)o(er)o(cice)14 b(25)p 0 TeXcolorgray 41 w
FC(On)21 b(suppose)h(que)f(le)g(pour)o(centage)g(de)f(femmes)j(fumant)f
(du)e(tabac)g(quotidiennement)j(en)e(fonction)h(de)e(l)o('\342ge)j
Fz(x)j FC(\(en)20 b(ann\351es\),)-246 529 y(depuis)f(15)f(ans)g(jusqu)n
('\340)g(40)g(ans)o(,)h(est)f(le)f(nombr)o(e)25 b Fz(f)19
b FC(\()r Fz(x)5 b FC(\))18 b(donn\351)f(par)g(la)h(for)q(mule)g
(suivante)h(:)1528 728 y Fz(f)g FC(\()r Fz(x)5 b FC(\))14
b FB(\306)h(\241)p FC(0,)8 b(05)r Fz(x)2004 694 y Fv(2)2051
728 y FB(\305)i FC(3)r Fz(x)15 b FB(\241)10 b FC(10.)-246
782 y
SDict begin H.S end
 -246 782 a -246 782 a
SDict begin 12 H.A end
 -246 782 a -246 782 a
SDict begin [/View [/XYZ H.V]/Dest (Item.63) cvn /DEST pdfmark end
 -246
782 a 0 TeXcolorgray -141 878 a FC(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1209 948 1690 4 v 1209
1048 4 100 v 1317 1018 a Fz(x)p 1463 1048 V 215 w FC(15)p
1756 1048 V 158 w(20)p 1940 1048 V 159 w(25)p 2234 1048
V 159 w(30)p 2418 1048 V 159 w(35)p 2711 1048 V 158 w(40)p
2895 1048 V 1209 1051 1690 4 v 1209 1151 4 100 v 1270
1121 a Fz(f)19 b FC(\()r Fz(x)5 b FC(\))p 1463 1151 V
103 w(23,)j(75)p 1756 1151 V 105 w(30)p 1940 1151 V 104
w(33,)g(75)p 2234 1151 V 106 w(35)p 2418 1151 V 104 w(33,)g(75)p
2711 1151 V 105 w(30)p 2895 1151 V 1209 1154 1690 4 v
-38 1328 a(D\351tail)18 b(de)f(deux)g(calculs)h(:)1378
1510 y Fz(f)h FC(\(15\))c FB(\306)f(\241)p FC(0,)8 b(05)i
FB(\243)g FC(15)1997 1476 y Fv(2)2045 1510 y FB(\305)g
FC(3)g FB(\243)g FC(15)g FB(\241)g FC(10)18 b FB(\306)c
FC(23,)8 b(75)1378 1646 y Fz(f)19 b FC(\(40\))c FB(\306)f(\241)p
FC(0,)8 b(05)i FB(\243)g FC(40)1997 1612 y Fv(2)2045
1646 y FB(\305)g FC(3)g FB(\243)g FC(40)g FB(\241)g FC(10)18
b FB(\306)c FC(30.)-246 1759 y
SDict begin H.S end
 -246 1759 a -246 1759
a
SDict begin 12 H.A end
 -246 1759 a -246 1759 a
SDict begin [/View [/XYZ H.V]/Dest (Item.64) cvn /DEST pdfmark end
 -246 1759 a 0 TeXcolorgray
-141 1844 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
682 4015 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 330.51694 a add def
/d 0.0 a add neg def /h 253.41519 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 682 4015 a 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 250.05663 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4523
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 225.48006 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.4523
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 250.05663  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 250.05663  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 225.48006  def /dT 1864650 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 225.48006
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 250.05663
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 225.48006  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 225.48006  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 250.05663  def /dT 1864650 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 5.69046  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 225.48006
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 250.05663
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1335 3880 a Fv(0)205
b(5)189 b(10)175 b(15)f(20)g(25)g(30)g(35)h(40)1261 3802
y(0)1261 3566 y(5)1230 3330 y(10)1230 3093 y(15)1230
2857 y(20)1230 2621 y(25)1230 2385 y(30)1230 2149 y(35)1350
3783 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1350 3783 a 1350 3783 a
tx@Dict begin { 170.7138 199.1661 } PutCoor PutBegin  end
 1350 3783 a 1350 3783
a
tx@Dict begin ps@rot  RotBegin  end
 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -10. def /x1 15. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/10.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 5.69046 mul F@pstplot 5.69046 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 5.69046
mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 5.69046 mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto
} { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1350 3783 a
tx@Dict begin RotEnd  end
 1350 3783 a 1350 3783 a
tx@Dict begin  PutEnd  end
 1350 3783 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.7138 0.0 170.7138
199.1661   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.61841 170.7138 0.0
170.7138   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.8092 0.0 113.8092
170.7138   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  12.0  12.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1350 3783 a
tx@Dict begin { 209.23807 -18.36105 } PutCoor PutBegin  end
 1350
3783 a 54 x FC(\342ge)1350 3783 y
tx@Dict begin  PutEnd  end
 1350 3783 a 1350 3783
a
tx@Dict begin { -71.3895 214.7085 } PutCoor PutBegin  end
 1350 3783 a 57 x FC(\045)17 b(de)g(fumeuses)1350 3783
y
tx@Dict begin  PutEnd  end
 1350 3783 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0 1 0  setrgbcolor  [ 170.7138
199.1661   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
3426 4015 a
currentpoint initclip moveto
 3426 4015 a -246 4059 a
SDict begin H.S end
 -246 4059 a -246
4059 a
SDict begin 12 H.A end
 -246 4059 a -246 4059 a
SDict begin [/View [/XYZ H.V]/Dest (Item.65) cvn /DEST pdfmark end
 -246 4059 a 0 TeXcolorgray
-141 4173 a FC(3.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(:)p 0 TeXcolorgray 0 TeXcolorgray
991 4227 a

 991 4227 a 991 4227 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227
a 168 w Fz(x)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a 117 w Fz(f)1159
4228 y FC(\()1188 4227 y Fz(x)1232 4228 y FC(\))991 4227
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 66.0052 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a FC(15)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 151.04568 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991
4227 a FC(30)991 4227 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.21701 ] concat

 pgfs


 991 4227 a
 0 setgray
 991 4227 a FC(40)991
4227 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 57.93535 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 59.9279 -78.98308 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a FC(23.75)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 57.93535 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 59.9279 -78.98308 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a FC(23.75)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 149.05307 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 151.04562 -40.4615 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a FC(35)991
4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 149.05307 -42.50386 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 151.04562 -40.4615 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227 a 991 4227 a
 0 setgray
 991 4227 a FC(35)991
4227 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 87.60588 -68.37538 moveto

 143.0683 -43.2325 lineto

 pgfstr

 save

 [0.91072 0.41286 -0.41286 0.91072 143.06828 -43.23251 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 234.09349 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 236.08604 -79.01295 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991 4227
a 991 4227 a
 0 setgray
 991 4227 a FC(30)991 4227 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 234.09349 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 236.08604 -79.01295 ] concat

 pgfs


 991 4227 a
 /pgfsc{}def/pgffc{}def
 991
4227 a 991 4227 a
 0 setgray
 991 4227 a FC(30)991 4227 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 166.56897 -42.24744 moveto

 228.10886 -70.15268 lineto

 pgfstr

 save

 [0.91069 -0.41295 0.41295 0.91069 228.10886 -70.15268 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -246 4967 a
SDict begin H.S end
 -246 4967 a -246 4967 a
SDict begin 12 H.A end
 -246
4967 a -246 4967 a
SDict begin [/View [/XYZ H.V]/Dest (Item.66) cvn /DEST pdfmark end
 -246 4967 a 0 TeXcolorgray -141 5081
a FC(4.)p 0 TeXcolorgray 43 w(Le)g(pour)o(centage)f(de)h(fumeuses)h
(est)f(maximal)h(\340)e(30)h(ans)g(\(pointill\351s)i(ver)q(ts\).)-246
5114 y
SDict begin H.S end
 -246 5114 a -246 5114 a
SDict begin 12 H.A end
 -246 5114 a -246 5114
a
SDict begin [/View [/XYZ H.V]/Dest (Item.67) cvn /DEST pdfmark end
 -246 5114 a 0 TeXcolorgray -141 5210 a FC(5.)p 0 TeXcolorgray
43 w(C'est)e(\340)f(par)q(tir)g(de)h(20)g(ans)f(que)h(plus)h(de)e(30)h
(\045)g(des)f(femmes)i(fument)g(quotidiennement)i(\(pointill\351s)e
(rouges\).)-246 5295 y
SDict begin H.S end
 -246 5295 a -246 5295 a
SDict begin 12 H.A end
 -246 5295
a -246 5295 a
SDict begin [/View [/XYZ H.V]/Dest (exo.26) cvn /DEST pdfmark end
 -246 5295 a 0 TeXcolorgray 114 x FE(Ex)o(er)o(cice)14
b(26)p 0 TeXcolorgray 41 w FC(S)n(ur)j(route)g(s\350che)o(,)g(la)g
(distance)g(d)n('arr\352t)g(en)g(m\350tr)o(es)g(d)n('un)g(v\351hicule)i
(roulant)e(\340)h Fz(x)k FC(km/h)c(est)f(mod\351lis\351e)i(par)d(la)h
(fonction)26 b Fz(f)35 b FC(d\351\002nie)-246 5509 y(sur)-119
5510 y([)-94 5509 y(0;)8 b(120)94 5510 y(])139 5509 y(par)1584
5608 y Fz(f)19 b FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g
FC(0,)8 b(005)r Fz(x)d FC(\()r Fz(x)15 b FB(\305)10 b
FC(56\).)p 0 TeXcolorgray 1909 5895 a(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.68) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(1.)p 0 TeXcolorgray 51 w Fz(f)19 b FC(\(100\))c
FB(\306)f FC(0,)8 b(005)i FB(\243)g FC(100\(100)g FB(\305)g
FC(56)q(\))20 b FB(\306)14 b FC(78.)19 b(C)o(ela)f(signi\002e)f(que)h
(la)g(distance)g(d)n('arr\352t)f(d)n('un)h(v\351hicule)h(roulant)f
(\340)f(100)h(km/h)h(est)f(78)g(m.)-246 -129 y
SDict begin H.S end
 -246 -129
a -246 -129 a
SDict begin 12 H.A end
 -246 -129 a -246 -129 a
SDict begin [/View [/XYZ H.V]/Dest (Item.69) cvn /DEST pdfmark end
 -246 -129 a 0 TeXcolorgray
-141 -34 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1109 37 1890 4 v 1109 136 4 100 v 1216 106 a Fz(x)p 1363
136 V 161 w FC(0)p 1506 136 V 118 w(20)p 1719 136 V 152
w(40)p 1972 136 V 173 w(60)p 2224 136 V 173 w(80)p 2477
136 V 138 w(100)p 2702 136 V 139 w(120)p 2995 136 V 1109
140 1890 4 v 1109 239 4 100 v 1170 209 a Fz(f)h FC(\()r
Fz(x)5 b FC(\))p 1363 239 V 103 w(0)p 1506 239 V 103
w(7,)j(6)p 1719 239 V 105 w(19,)g(2)p 1972 239 V 105
w(34,)g(8)p 2224 239 V 105 w(54,)g(4)p 2477 239 V 125
w(78)p 2702 239 V 124 w(105,)g(6)p 2995 239 V 1109 243
1890 4 v -246 286 a
SDict begin H.S end
 -246 286 a -246 286 a
SDict begin 12 H.A end
 -246 286 a
-246 286 a
SDict begin [/View [/XYZ H.V]/Dest (Item.70) cvn /DEST pdfmark end
 -246 286 a 0 TeXcolorgray -141 360 a FC(3.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1074 2215
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 236.06143 a add def
/d 0.0 a add neg def /h 215.2845 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1074 2215 a 1232 2094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 217.01833 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 17.07092
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 200.65862 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 17.07092
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 217.01833  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 217.01833  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 200.65862  def /dT 1118760 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.70709  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 1.70709  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.65862
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.01833
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 200.65862  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 200.65862  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 217.01833  def /dT 1118760 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 1.70709  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1.70709  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.65862
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 217.01833
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1217 2191 a Fv(0)95
b(10)80 b(20)f(30)h(40)g(50)g(60)f(70)h(80)g(90)64 b(100)49
b(110)1143 2113 y(0)1112 1971 y(10)1112 1829 y(20)1112
1688 y(30)1112 1546 y(40)1112 1404 y(50)1112 1262 y(60)1112
1121 y(70)1112 979 y(80)1112 837 y(90)1081 696 y(100)1232
2094 y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1232 2094 a 1232 2094 a
tx@Dict begin { -47.79858 -6.69179 } PutCoor PutBegin  end
 1232 2094 a 1232 2094
a
tx@Dict begin ps@rot  RotBegin  end
 1232 2094 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x 28. def /x1
148. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/100.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 1.70709 mul F@pstplot 1.70709 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 1.70709 mul gt { moveto } { dup -1.e30 1.70709 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 1.70709 mul gt { moveto } { dup -1.e30
1.70709 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1232 2094 a
tx@Dict begin RotEnd  end
 1232 2094 a 1232 2094 a
tx@Dict begin  PutEnd  end
 1232 2094 a 1232
2094 a
tx@Dict begin { 172.81204 25.60638 } PutCoor PutBegin  end
 1232 2094 a 54 x FC(vitesse)1232 2247 y(\(en)17
b(km/h\))1232 2094 y
tx@Dict begin  PutEnd  end
 1232 2094 a 1232 2094 a
tx@Dict begin { 4.82825 190.04909 } PutCoor PutBegin  end
 1232 2094
a 56 x FC(distance)h(d)n('arr\352t)1232 2250 y(\(en)f(m\))1232
2094 y
tx@Dict begin  PutEnd  end
 1232 2094 a 3034 2215 a
currentpoint initclip moveto
 3034 2215 a -246 2259
a
SDict begin H.S end
 -246 2259 a -246 2259 a
SDict begin 12 H.A end
 -246 2259 a -246 2259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.71) cvn /DEST pdfmark end
 -246
2259 a 0 TeXcolorgray -141 2373 a FC(4.)p 0 TeXcolorgray
51 w Fz(f)i FC(\(90\))g FB(\306)g FC(65,)8 b(7)23 b(et)31
b Fz(f)19 b FC(\(80\))g FB(\306)g FC(54,)8 b(4)23 b(donc)f(le)g(fait)h
(de)e(baisser)i(la)f(vitesse)i(sur)e(les)g(routes)h(de)e(90)i(km/h)g
(\340)e(80)i(km/h)g(per)q(met)g(de)e(diminuer)i(la)-38
2473 y(distance)18 b(d)n('arr\352t)f(de)1730 2572 y(65,)8
b(7)i FB(\241)g FC(54)17 b FB(\306)e FC(11,)8 b(7)19
b(m.)-38 2736 y(L)-10 b('infor)q(mation)19 b(de)e(la)h(s\351cur)q
(it\351)g(routi\350r)o(e)f(est)h(donc)f(impr\351cise)i(selon)f(les)g
(donn\351es)h(de)e(l)o('exer)o(cice)p 0 0 1 TeXcolorrgb
2946 2736 a
SDict begin H.S end
 2946 2736 a -30 x Fv(5)2982 2736 y
SDict begin 12 H.L end
 2982 2736
a 2982 2736 a
SDict begin [/Subtype /Link/Dest (Hfootnote.5) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2982 2736 a 0 TeXcolorgray 17 w FC(.)-246
2820 y
SDict begin H.S end
 -246 2820 a -246 2820 a
SDict begin 12 H.A end
 -246 2820 a -246 2820
a
SDict begin [/View [/XYZ H.V]/Dest (exo.27) cvn /DEST pdfmark end
 -246 2820 a 0 TeXcolorgray 116 x FE(Ex)o(er)o(cice)d(27)p
0 TeXcolorgray 41 w FC(Le)i(taux)f(d)n('anticorps)h(\(en)f(g/l\))g
(pr\351sents)h(dans)f(le)h(sang)f(d)n('un)g(nourr)q(isson)h(en)f
(fonction)h(de)f(l)o('\342ge)g(\(en)g(mois\),)h(depuis)g(la)f
(naissance)-246 3035 y(jusqu)n('\340)k(l)o('\342ge)f(de)f(12)h(mois)o
(,)h(est)f(donn\351)g(par)f(la)g(for)q(mule)i(suivante)f(:)1542
3218 y Fz(f)h FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g FC(0,)8
b(1)r Fz(x)1922 3184 y Fv(2)1969 3218 y FB(\241)i FC(1,)e(6)r
Fz(x)15 b FB(\305)10 b FC(12.)-246 3305 y
SDict begin H.S end
 -246 3305 a
-246 3305 a
SDict begin 12 H.A end
 -246 3305 a -246 3305 a
SDict begin [/View [/XYZ H.V]/Dest (Item.72) cvn /DEST pdfmark end
 -246 3305 a 0 TeXcolorgray
-141 3401 a FC(1.)p 0 TeXcolorgray 43 w(On)17 b(fait)h(un)g(tableau)g
(de)f(valeurs)h(pour)26 b Fz(f)36 b FC(sur)1346 3402
y([)1372 3401 y(0;)8 b(12)1520 3402 y(])1564 3401 y(avec)17
b(un)h(pas)g(de)f(2)32 b(:)p -38 3470 4184 4 v -38 3570
4 100 v 69 3540 a Fz(x)p 216 3570 V 370 w FC(0)p 777
3570 V 521 w(2)p 1338 3570 V 520 w(4)p 1899 3570 V 521
w(6)p 2459 3570 V 521 w(8)p 3020 3570 V 501 w(10)p 3581
3570 V 481 w(12)p 4142 3570 V -38 3573 4184 4 v -38 3673
4 100 v 23 3643 a Fz(f)19 b FC(\()r Fz(x)5 b FC(\))p
216 3673 V 291 w(12)p 777 3673 V 467 w(9,)j(2)p 1338
3673 V 453 w(7,)g(2)p 1899 3673 V 487 w(6)p 2459 3673
V 487 w(5,)g(6)p 3020 3673 V 487 w(6)p 3581 3673 V 487
w(7,)g(2)p 4142 3673 V -38 3676 4184 4 v -38 3781 a(D\351tail)18
b(de)f(deux)g(calculs)h(:)p 0 TeXcolorgray 7 3881 a(\225)p
0 TeXcolorgray 50 w Fz(f)h FC(\(0\))14 b FB(\306)g FC(0,)8
b(1)i FB(\243)g FC(0)531 3851 y Fv(2)578 3881 y FB(\241)g
FC(1,)e(6)i FB(\243)g FC(0)g FB(\305)g FC(12)18 b FB(\306)c
FC(12.)p 0 TeXcolorgray 7 3980 a(\225)p 0 TeXcolorgray
50 w Fz(f)19 b FC(\(12\))14 b FB(\306)h FC(0,)8 b(1)i
FB(\243)g FC(12)612 3950 y Fv(2)659 3980 y FB(\241)g
FC(1,)e(6)i FB(\243)g FC(12)g FB(\305)g FC(12)19 b FB(\306)14
b FC(7,)8 b(2.)-246 4014 y
SDict begin H.S end
 -246 4014 a -246 4014 a
SDict begin 12 H.A end
 -246
4014 a -246 4014 a
SDict begin [/View [/XYZ H.V]/Dest (Item.73) cvn /DEST pdfmark end
 -246 4014 a 0 TeXcolorgray -141 4109
a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray -246 4163 1757
4 v -154 4240 a Fu(5)q(.)p 0 TeXcolorgray -76 4240 a
SDict begin H.S end

-76 4240 a -76 4240 a
SDict begin H.R end
 -76 4240 a -76 4240 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.5) cvn /DEST pdfmark
end
 -76 4240
a 0 TeXcolorgray Fu(Il)14 b(est)h(illusoir)o(e)e(de)h(penser)h(que)f
(tous)g(les)h(conducteurs)f(ont)g(le)h(m\352me)g(temps)g(de)f
(r\351action)g(et)h(toutes)f(les)h(voitur)o(es)e(le)i(m\352me)g
(comportement)i(en)d(termes)i(de)e(fr)o(einage)o(.)g(Les)-246
4318 y(formules)i(concernant)f(les)f(distances)f(d)o('arr\352t)g(que)i
(l)o('on)f(doit)g(appr)o(endr)o(e)f(par)h(c\234ur)g(au)g(moment)i(de)e
(passer)f(le)i(code)f(de)g(la)g(route)g(ne)h(peuvent)f(donc)g(donner)f
(que)i(des)f(or)o(dr)o(es)f(de)-246 4397 y(gr)o(andeur)7
b(;)14 b(et)g(la)g(r\351ponse)g(attendue)g(\253)d(13)j(m\350tr)o(es)d
(\273)28 b(est)14 b(en)g(r\351alit\351)g(tr\350s)g(proche)g(de)g(la)f
(r\351ponse)i(\253)c(11,7)k(m\350tr)o(es)c(\273)28 b(obtenue)14
b(avec)g(notr)o(e)g(calcul.)p 0 TeXcolorgray 0 TeXcolorgray
1909 5895 a FC(15)p 0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 816 2259
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 298.264 a add def
/d 0.0 a add neg def /h 301.74582 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 816 2259 a 990 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 260.34248 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 21.33955
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 260.34248 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 21.33955
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 277.26994  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 277.26994  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 273.3746  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 21.33955  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 273.3746  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 273.3746  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 277.26994  def /dT 1398509 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 21.33955  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 21.33955  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 273.3746
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 277.26994
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 975 2121 a Fv(0)146
b(1)g(2)g(3)g(4)g(5)h(6)f(7)g(8)g(9)131 b(10)115 b(11)g(12)901
2043 y(0)901 1866 y(1)901 1689 y(2)901 1512 y(3)901 1335
y(4)901 1157 y(5)901 980 y(6)901 803 y(7)901 626 y(8)901
449 y(9)870 272 y(10)870 95 y(11)870 -83 y(12)990 2024
y
tx@Dict begin { 209.3771 16.31041 } PutCoor PutBegin  end
 990 2024 a 54 x FC(\342ge)17 b(\(en)g(mois\))990 2024
y
tx@Dict begin  PutEnd  end
 990 2024 a 990 2024 a
tx@Dict begin { 22.52675 272.21411 } PutCoor PutBegin  end
 990 2024 a 57 x FC(T)-8 b(aux)18
b(d)n('anticorps)h(\(en)e(g/)p FA(`)p FC(\))990 2024
y
tx@Dict begin  PutEnd  end
 990 2024 a 990 2024 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 990 2024 a 990 2024 a
tx@Dict begin { 170.71643 119.50162 } PutCoor PutBegin  end
 990 2024
a 990 2024 a
tx@Dict begin ps@rot  RotBegin  end
 990 2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -8. def /x1
4. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/5.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 21.33955 mul F@pstplot 21.33955 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
21.33955 mul gt { moveto } { dup -1.e30 21.33955 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 21.33955 mul gt { moveto } { dup -1.e30 21.33955
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0.30196
0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
990 2024 a
tx@Dict begin RotEnd  end
 990 2024 a 990 2024 a
tx@Dict begin  PutEnd  end
 990 2024 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
106.69777 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
234.73509 138.70709 170.71643 138.70709   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
990 2024 a
tx@Dict begin { 154.25069 152.09608 } PutCoor PutBegin  end
 990 2024 a 1 0 0 TeXcolorrgb 78 x Fh(6)25
b(mois)p 0 TeXcolorgray 990 2024 a
tx@Dict begin  PutEnd  end
 990 2024 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 106.69777 138.70709 0.0
138.70709   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  3.0  3.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 990 2024 a
tx@Dict begin { -16.35176 142.81148 } PutCoor PutBegin  end
 990 2024 a 1 0 0
TeXcolorrgb 51 x FC(6,5)p 0 TeXcolorgray 990 2024 a
tx@Dict begin  PutEnd  end
 990
2024 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 256.07465   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 42.67911 196.32382   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35822 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 128.03732 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 170.71643 119.50162   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 213.39554 128.03732   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 256.07465 153.64471   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 234.73509 138.70709   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 3292 2259 a
currentpoint initclip moveto
 3292 2259 a -246
2296 a
SDict begin H.S end
 -246 2296 a -246 2296 a
SDict begin 12 H.A end
 -246 2296 a -246 2296
a
SDict begin [/View [/XYZ H.V]/Dest (Item.74) cvn /DEST pdfmark end
 -246 2296 a 0 TeXcolorgray -141 2407 a FC(3.)p 0 TeXcolorgray
43 w(Le)18 b(taux)g(d)n('anticorps)g(\340)f(la)g(naissance)i(est)f(de)f
(12)h(g/)p FA(`)p FC(.)-246 2438 y
SDict begin H.S end
 -246 2438 a -246 2438
a
SDict begin 12 H.A end
 -246 2438 a -246 2438 a
SDict begin [/View [/XYZ H.V]/Dest (Item.75) cvn /DEST pdfmark end
 -246 2438 a 0 TeXcolorgray
-141 2531 a FC(4.)p 0 TeXcolorgray 43 w(T)-8 b(ableau)18
b(de)f(var)q(iations)h(:)p 0 TeXcolorgray 0 TeXcolorgray
991 2589 a

 991 2589 a 991 2589 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -16.40007 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589
a 168 w Fz(x)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 5.66927 -58.99254 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a 117 w Fz(f)1159
2590 y FC(\()1188 2589 y Fz(x)1232 2590 y FC(\))991 2589
y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -28.3468 moveto

 255.12128 -28.3468 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -85.04042 moveto

 255.12128 -85.04042 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -85.04042 lineto

 255.12128 -85.04042 lineto

 255.12128 0.0 lineto

 closepath

 255.12128 -85.04042 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 56.69362 0.0 moveto

 56.69362 -85.04042 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 68.43613 -17.21701 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a FC(0)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.4766 -17.21701 ] concat

 pgfs


 991 2589 a
 0 setgray
 991
2589 a FC(8)991 2589 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 236.08614 -17.24191 ] concat

 pgfs


 991 2589 a
 0 setgray
 991 2589 a FC(12)991
2589 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a FC(12)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 64.01263 -42.45406 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 66.00519 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a FC(12)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a FC(5.6)991
2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 147.8376 -81.05531 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 149.83015 -78.98308 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589 a 991 2589 a
 0 setgray
 991 2589 a FC(5.6)991
2589 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 81.52844 -42.22433 moveto

 141.85318 -69.58568 lineto

 pgfstr

 save

 [0.91064 -0.41304 0.41304 0.91064 141.85316 -69.58566 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def
 991 2589
a 991 2589 a
 0 setgray
 991 2589 a FC(7.2)991 2589 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 232.87804 -42.53374 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 234.87059 -40.4615 ] concat

 pgfs


 991 2589 a
 /pgfsc{}def/pgffc{}def

991 2589 a 991 2589 a
 0 setgray
 991 2589 a FC(7.2)991 2589 y


 pgfr

 restore

 restore

 save
 0
TeXcolorgray
 167.78467 -70.5778 moveto

 226.89287 -43.79526 lineto

 pgfstr

 save

 [0.91081 0.41269 -0.41269 0.91081 226.89287 -43.79527 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 3447 a FC(Le)g(taux)g(d)n('anticorps)g
(est)g(minimal)h(\340)e(l)o('\342ge)h(de)f(8)h(mois)o(.)-246
3478 y
SDict begin H.S end
 -246 3478 a -246 3478 a
SDict begin 12 H.A end
 -246 3478 a -246 3478
a
SDict begin [/View [/XYZ H.V]/Dest (Item.76) cvn /DEST pdfmark end
 -246 3478 a 0 TeXcolorgray -141 3571 a FC(5.)p 0 TeXcolorgray
43 w(D)o('apr\350s)f(le)h(gr)o(aphique)o(,)g(le)g(taux)g(d)n
('anticorps)g(est)g(inf\351r)q(ieur)g(\340)f(6,5)i(g/)p
FA(`)d FC(pendant)j(6)e(mois)i(\(du)e(5)2845 3547 y Fq(e)2888
3571 y FC(au)g(11)3071 3547 y Fq(e)3115 3571 y FC(mois\).)-246
3715 y
SDict begin H.S end
 -246 3715 a -246 3715 a
SDict begin 12 H.A end
 -246 3715 a -246 3715
a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -246 3715 a 131 x FF(4)105 b(T)-10 b(ableaux)23 b(d)m('effectifs)e
(et)i(pr)o(obabilit\351s)f(conditionnelles)-246 3954
y
SDict begin H.S end
 -246 3954 a -246 3954 a
SDict begin 12 H.A end
 -246 3954 a -246 3954 a
SDict begin [/View [/XYZ H.V]/Dest (exo.28) cvn /DEST pdfmark end
 -246
3954 a -246 3942 a
SDict begin H.S end
 -246 3942 a -246 3942 a
SDict begin 12 H.A end
 -246 3942
a -246 3942 a
SDict begin [/View [/XYZ H.V]/Dest (Item.77) cvn /DEST pdfmark end
 -246 3942 a 0 TeXcolorgray 87 x FE(Ex)o(er)o(cice)14
b(28)p 0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0
TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g(de)f(l)o
('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 901 4106 2305 4 v 901 4206
4 100 v 1477 4206 V 1530 4176 a(VT)q(T)p 2052 4206 V
2103 4159 149 4 v 432 w(VT)q(T)p 2628 4206 4 100 v 433
w(T)-8 b(otal)p 3203 4206 V 901 4209 2305 4 v 901 4309
4 100 v 954 4279 a(Escalade)p 1477 4309 V 273 w(3)p 2052
4309 V 535 w(7)p 2628 4309 V 536 w(10)p 3203 4309 V 901
4312 2305 4 v 901 4412 4 100 v 952 4365 84 4 v 954 4382
a(Es)p 1031 4365 82 4 v(ca)p 1109 4365 151 4 v(lade)p
1477 4412 4 100 v 273 w(13)p 2052 4412 V 495 w(9)p 2628
4412 V 536 w(22)p 3203 4412 V 901 4415 2305 4 v 901 4515
4 100 v 954 4485 a(T)g(otal)p 1477 4515 V 406 w(16)p
2052 4515 V 495 w(16)p 2628 4515 V 496 w(32)p 3203 4515
V 901 4518 2305 4 v -38 4675 a FE(R)o(emarque)16 b(:)k
FC(on)h(sait)f(qu)n('il)h(y)f(a)g(autant)g(d)n('\351l\350ves)i(qui)e
(pr)o(atiquent)i(le)f(VT)q(T)g(que)g(d)n('\351l\350ves)h(qui)e(ne)h(le)
f(pr)o(atiquent)i(pas)o(,)f(donc)f(16)h(\351l\350ves)g(le)-38
4775 y(pr)o(atiquent)e(et)f(16)g(ne)g(le)f(pr)o(atiquent)j(pas)o(.)-246
4804 y
SDict begin H.S end
 -246 4804 a -246 4804 a
SDict begin 12 H.A end
 -246 4804 a -246 4804
a
SDict begin [/View [/XYZ H.V]/Dest (Item.78) cvn /DEST pdfmark end
 -246 4804 a -246 4804 a
SDict begin H.S end
 -246 4804 a -246 4804 a
SDict begin 12 H.A end
 -246
4804 a -246 4804 a
SDict begin [/View [/XYZ H.V]/Dest (Item.79) cvn /DEST pdfmark end
 -246 4804 a 0 TeXcolorgray -141 4899
a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 91 w(\(a\))p
0 TeXcolorgray 41 w(P)m(ar)c(lectur)o(e)i(du)f(tableau)h(:)g
Fz(P)8 b FC(\()p Fz(E)g FC(\))13 b FB(\306)1208 4866
y Fv(10)p 1208 4879 62 5 v 1208 4927 a(32)1297 4899 y
FC(et)k Fz(P)8 b FC(\()n Fz(V)16 b FC(\))e FB(\306)1644
4866 y Fv(16)p 1644 4879 V 1644 4927 a(32)1715 4899 y
FC(.)-246 4939 y
SDict begin H.S end
 -246 4939 a -246 4939 a
SDict begin 12 H.A end
 -246 4939 a
-246 4939 a
SDict begin [/View [/XYZ H.V]/Dest (Item.80) cvn /DEST pdfmark end
 -246 4939 a 0 TeXcolorgray 4 5035 a FC(\(b\))p
0 TeXcolorgray 41 w(On)j(s)m('int\351r)o(esse)i(aux)e(trois)h
(\351v\351nements)p 1394 4969 63 5 v 18 w Fz(V)d FC(,)h
Fz(V)25 b FB(\\)10 b Fz(E)25 b FC(et)16 b Fz(V)26 b FB([)10
b Fz(E)39 b FC(:)p 0 TeXcolorgray 190 5132 a(\225)p 0
TeXcolorgray 262 5066 V 39 w Fz(V)33 b FC(:)18 b(\253)c(l)o
('\351l\350ve)k(ne)g(pr)o(atique)h(pas)f(le)f(VT)q(T)d(\273.)2007
5265 y Fz(P)2070 5178 y Fm(\263)p 2102 5198 V 2100 5265
a Fz(V)2165 5178 y Fm(\264)2210 5265 y FB(\306)2289 5209
y FC(16)p 2289 5246 82 5 v 2289 5322 a(32)2380 5265 y(.)p
0 TeXcolorgray 190 5429 a(\225)p 0 TeXcolorgray 39 w
Fz(V)26 b FB(\\)10 b Fz(E)25 b FC(:)17 b(\253)d(l)o('\351l\350ve)19
b(pr)o(atique)g(l)o('escalade)f FE(et)f FC(le)h(VT)q(T)c(\273.)1948
5630 y Fz(P)2011 5631 y FC(\()2036 5630 y Fz(V)25 b FB(\\)10
b Fz(E)2229 5631 y FC(\))2270 5630 y FB(\306)2369 5574
y FC(3)p 2349 5611 V 2349 5687 a(32)2440 5630 y(.)p 0
TeXcolorgray 1909 5895 a(16)p 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 190 -163 a FC(\225)p 0
TeXcolorgray 39 w Fz(V)26 b FB([)10 b Fz(E)25 b FC(:)17
b(\253)d(l)o('\351l\350ve)19 b(pr)o(atique)g(l)o('escalade)f
FE(ou)f FC(le)h(VT)q(T)c(\273.)262 -63 y(Le)k(calcul)g(de)f
Fz(P)749 -62 y FC(\()774 -63 y Fz(V)26 b FB([)10 b Fz(E)968
-62 y FC(\))1011 -63 y(est)18 b(moins)h(\351vident)g(et)e(peut)i
(\352tr)o(e)e(men\351)h(de)f(plusieurs)j(fa\347ons)e(diff\351r)o(entes)
o(.)g(P)m(ar)f(exemple)i(:)p 0 TeXcolorgray 274 37 a
Fg(I)p 0 TeXcolorgray 41 w FC(ajouter)k(ceux)f(qui)g(font)g(du)g(VT)q
(T)h(\340)e(ceux)h(qui)g(font)h(de)e(l)o('escalade)o(,)i(puis)f(r)o
(etr)o(ancher)g(les)g(\351l\350ves)h(qui)f(pr)o(atiquent)i(les)e(deux)
380 136 y(spor)q(ts)c(\(sinon)g(ils)g(sont)g(compt\351s)h(deux)f
(fois\))f(:)h(16)10 b FB(\305)g FC(10)g FB(\241)g FC(3)17
b FB(\306)d FC(23.)p 0 TeXcolorgray 274 236 a Fg(I)p
0 TeXcolorgray 41 w FC(ajouter)k(ceux)e(qui)h(ne)g(font)g(que)g(du)f
(VT)q(T)-8 b(,)18 b(ceux)f(qui)g(ne)g(font)g(que)g(de)f(l)o('escalade)o
(,)h(et)g(ceux)g(qui)g(pr)o(atiquent)h(les)f(deux)g(spor)q(ts)f(:)380
335 y(13)10 b FB(\305)g FC(7)g FB(\305)g FC(3)17 b FB(\306)d
FC(23.)p 0 TeXcolorgray 274 435 a Fg(I)p 0 TeXcolorgray
41 w FC(r)o(emarquer)j(que)f Fz(C)26 b FC(est)18 b(le)g(contr)o(air)o
(e)f(de)g Fz(B)25 b FC(et)18 b(donc)f(fair)o(e)g(le)h(calcul)g(:)f(32)
10 b FB(\241)g FC(9)16 b FB(\306)f FC(23.)145 534 y(Dans)h(tous)i(les)g
(cas)g(on)f(obtient)h Fz(P)8 b FC(\()n Fz(V)26 b FB([)10
b Fz(E)e FC(\))13 b FB(\306)1518 501 y Fv(23)p 1518 514
62 5 v 1518 563 a(32)1589 534 y FC(.)-246 577 y
SDict begin H.S end
 -246
577 a -246 577 a
SDict begin 12 H.A end
 -246 577 a -246 577 a
SDict begin [/View [/XYZ H.V]/Dest (Item.81) cvn /DEST pdfmark end
 -246 577 a 0 TeXcolorgray
12 661 a FC(\(c\))p 0 TeXcolorgray 41 w(P)m(ar)q(mi)18
b(les)g(16)h(\351l\350ves)h(qui)f(pr)o(atiquent)h(le)e(VT)q(T)-8
b(,)20 b(3)e(pr)o(atiquent)i(\351galement)g(l)o('escalade)o(,)f(donc)f
(la)g(probabilit\351)g(qu)n('un)h(\351l\350ve)h(qui)e(pr)o(a-)145
761 y(tique)g(le)g(VT)q(T)h(pr)o(atique)f(\351galement)h(l)o('escalade)
g(est)1769 728 y Fv(3)p 1754 741 62 5 v 1754 790 a(16)1825
761 y FC(.)f(A)-5 b(vec)17 b(la)h(notation)g(du)f(cours)h(:)1938
984 y Fz(P)1987 996 y Fs(V)2040 984 y FC(\()p Fz(E)8
b FC(\))13 b FB(\306)2261 928 y FC(3)p 2241 965 82 5
v 2241 1041 a(16)2332 984 y(.)-246 1120 y
SDict begin H.S end
 -246 1120 a
-246 1120 a
SDict begin 12 H.A end
 -246 1120 a -246 1120 a
SDict begin [/View [/XYZ H.V]/Dest (exo.29) cvn /DEST pdfmark end
 -246 1120 a -246
1125 a
SDict begin H.S end
 -246 1125 a -246 1125 a
SDict begin 12 H.A end
 -246 1125 a -246 1125
a
SDict begin [/View [/XYZ H.V]/Dest (Item.82) cvn /DEST pdfmark end
 -246 1125 a 0 TeXcolorgray 79 x FE(Ex)o(er)o(cice)h(29)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(On)j(r)o(epr\351sente)h(la)g(situation)h(par)e(un)h(tableau)g(d)n
('effectifs)o(.)p 0 TeXcolorgray 0 TeXcolorgray 1232
1288 1644 4 v 1232 1487 4 200 v 1642 1487 V 1695 1358
a(P)n(etit)24 b(for)o(-)1695 1457 y(mat)p 2052 1487 V
2105 1358 a(Gr)o(and)2105 1457 y(for)q(mat)p 2462 1487
V 2515 1407 a(T)-8 b(otal)p 2872 1487 V 1232 1490 1644
4 v 1232 1590 4 100 v 1285 1560 a(C)o(ouleur)p 1642 1590
V 133 w(7)p 2052 1590 V 370 w(18)p 2462 1590 V 330 w(25)p
2872 1590 V 1232 1593 1644 4 v 1232 1693 4 100 v 1285
1663 a(N&B)p 1642 1693 V 247 w(0)p 2052 1693 V 370 w(5)p
2462 1693 V 370 w(5)p 2872 1693 V 1232 1696 1644 4 v
1232 1796 4 100 v 1285 1766 a(T)g(otal)p 1642 1796 V
240 w(7)p 2052 1796 V 370 w(23)p 2462 1796 V 330 w(30)p
2872 1796 V 1232 1799 1644 4 v -246 1841 a
SDict begin H.S end
 -246 1841
a -246 1841 a
SDict begin 12 H.A end
 -246 1841 a -246 1841 a
SDict begin [/View [/XYZ H.V]/Dest (Item.83) cvn /DEST pdfmark end
 -246 1841 a 0 TeXcolorgray
10 1934 a FC(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 86
w(\225)p 0 TeXcolorgray 41 w Fz(P)8 b FC(\()n Fz(G)e
FC(\))14 b FB(\306)522 1902 y Fv(23)p 522 1915 62 5 v
522 1963 a(30)594 1934 y FC(.)p 0 TeXcolorgray 190 2047
a(\225)p 0 TeXcolorgray 262 1981 57 5 v 39 w Fz(C)26
b FC(:)18 b(\253)c(la)j(BD)g(est)h(en)g(N&B)c(\273.)1938
2164 y Fz(P)2001 2077 y Fm(\263)p 2033 2097 V 2031 2164
a Fz(C)2090 2077 y Fm(\264)2136 2164 y FB(\306)2235 2108
y FC(5)p 2215 2145 82 5 v 2215 2221 a(30)2320 2164 y
FB(\306)2399 2108 y FC(1)p 2399 2145 41 5 v 2399 2221
a(6)2450 2164 y(.)-246 2269 y
SDict begin H.S end
 -246 2269 a -246 2269 a
SDict begin 12 H.A end

-246 2269 a -246 2269 a
SDict begin [/View [/XYZ H.V]/Dest (Item.84) cvn /DEST pdfmark end
 -246 2269 a 0 TeXcolorgray 4
2348 a FC(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p
0 TeXcolorgray 39 w Fz(C)19 b FB(\\)8 b Fz(G)24 b FC(:)17
b(\253)d(la)j(BD)g(est)h(en)g(couleur)g FE(et)f FC(en)h(gr)o(and)e(for)
q(mat)e(\273.)1952 2561 y Fz(P)8 b FC(\()n Fz(C)19 b
FB(\\)8 b Fz(G)e FC(\))14 b FB(\306)2344 2505 y FC(18)p
2344 2542 82 5 v 2344 2618 a(30)2435 2561 y(.)p 0 TeXcolorgray
190 2762 a(\225)p 0 TeXcolorgray 39 w Fz(C)19 b FB([)8
b Fz(G)24 b FC(:)17 b(\253)d(la)j(BD)g(est)h(en)g(couleur)g
FE(ou)f FC(en)h(gr)o(and)e(for)q(mat)e(\273.)262 2862
y(C'est)19 b(le)f(cas)f(de)g(toutes)i(les)f(BD)f(\()9
b(!\),)17 b(car)g(il)g(n)-6 b('y)18 b(en)f(a)g(aucune)h(en)g(N&B)f(et)h
(en)g(petit)g(for)q(mat.)g(C)o(onclusion)h(:)1890 3075
y Fz(P)8 b FC(\()n Fz(C)19 b FB([)8 b Fz(G)e FC(\))14
b FB(\306)2282 3019 y FC(30)p 2282 3056 V 2282 3132 a(30)2388
3075 y FB(\306)g FC(1.)-246 3211 y
SDict begin H.S end
 -246 3211 a -246 3211
a
SDict begin 12 H.A end
 -246 3211 a -246 3211 a
SDict begin [/View [/XYZ H.V]/Dest (Item.85) cvn /DEST pdfmark end
 -246 3211 a 0 TeXcolorgray
12 3290 a FC(\(c\))p 0 TeXcolorgray 41 w(Pierr)o(e)i(a)h(choisi)i(une)f
(BD)f(en)g(couleur)-5 b(.)19 b(La)f(probabilit\351)f(qu)n('elle)i(soit)
f(en)g(gr)o(and)e(for)q(mat)i(est)1938 3503 y Fz(P)1986
3515 y Fs(C)2036 3503 y FC(\()n Fz(G)6 b FC(\))14 b FB(\306)2241
3447 y FC(18)p 2241 3484 82 5 v 2241 3560 a(25)2332 3503
y(.)-246 3639 y
SDict begin H.S end
 -246 3639 a -246 3639 a
SDict begin 12 H.A end
 -246 3639 a -246
3639 a
SDict begin [/View [/XYZ H.V]/Dest (Item.86) cvn /DEST pdfmark end
 -246 3639 a 0 TeXcolorgray 4 3718 a FC(\(d\))p
0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p 0 TeXcolorgray
41 w(La)k(BD)f(est)h(en)g(gr)o(and)e(for)q(mat.)i(La)g(probabilit\351)f
(qu)n('elle)i(soit)f(en)g(couleur)g(est)1997 3931 y Fz(P)2045
3943 y Fs(G)2096 3931 y FC(\()n Fz(C)9 b FC(\))k FB(\306)2299
3875 y FC(18)p 2299 3912 82 5 v 2299 3988 a(23)2390 3931
y(.)p 0 TeXcolorgray 190 4132 a(\225)p 0 TeXcolorgray
41 w(La)18 b(BD)f(est)h(en)g(gr)o(and)e(for)q(mat.)i(La)g
(probabilit\351)f(qu)n('elle)i FE(ne)e FC(soit)h FE(pas)e
FC(en)i(couleur)g(est)1989 4346 y Fz(P)2037 4358 y Fs(G)2095
4258 y Fm(\263)p 2127 4279 57 5 v 2125 4346 a Fz(C)2183
4258 y Fm(\264)2229 4346 y FB(\306)2329 4289 y FC(5)p
2308 4326 82 5 v 2308 4403 a(23)2399 4346 y(.)-246 4482
y
SDict begin H.S end
 -246 4482 a -246 4482 a
SDict begin 12 H.A end
 -246 4482 a -246 4482 a
SDict begin [/View [/XYZ H.V]/Dest (exo.30) cvn /DEST pdfmark end
 -246
4482 a -246 4487 a
SDict begin H.S end
 -246 4487 a -246 4487 a
SDict begin 12 H.A end
 -246 4487
a -246 4487 a
SDict begin [/View [/XYZ H.V]/Dest (Item.87) cvn /DEST pdfmark end
 -246 4487 a 0 TeXcolorgray 78 x FE(Ex)o(er)o(cice)c(30)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(P)n(our)j(compl\351ter)h(le)g(tableau,)g(on)g(calcule)g(:)p
0 TeXcolorgray 7 4664 a(\225)p 0 TeXcolorgray 42 w(5\045)f(de)h(10)12
b(000)20 b(valent)e(500)9 b(;)p 0 TeXcolorgray 7 4764
a(\225)p 0 TeXcolorgray 42 w(10)f(000)i FB(\241)g FC(500)18
b FB(\306)d FC(9)8 b(500)h(;)p 0 TeXcolorgray 7 4863
a(\225)p 0 TeXcolorgray 42 w(4\045)17 b(de)h(9)12 b(500)19
b(valent)f(380)9 b(;)p 0 TeXcolorgray 7 4963 a(\225)p
0 TeXcolorgray 42 w(on)17 b(compl\350te)i(le)f(r)o(este)g(du)f(tableau)
h(avec)f(des)h(additions/soustr)o(actions)o(.)p 0 TeXcolorgray
0 TeXcolorgray 980 5047 2149 4 v 980 5147 4 100 v 1477
5147 V 1530 5117 a(Animaux)g(sains)p 2085 5147 V 104
w(Animaux)g(malades)p 2807 5147 V 126 w(T)-8 b(otal)p
3125 5147 V 980 5150 2149 4 v 980 5250 4 100 v 1043 5220
a(T)g(est)18 b(positif)p 1477 5250 V 307 w(380)p 2085
5250 V 545 w(500)p 2807 5250 V 400 w(880)p 3125 5250
V 980 5253 2149 4 v 980 5353 4 100 v 1033 5323 a(T)-8
b(est)18 b(n\351gatif)p 1477 5353 V 270 w(9)12 b(120)p
2085 5353 V 559 w(0)p 2807 5353 V 413 w(9)g(120)p 3125
5353 V 980 5356 2149 4 v 980 5455 4 100 v 1144 5426 a(T)-8
b(otal)p 1477 5455 V 382 w(9)12 b(500)p 2085 5455 V 519
w(500)p 2807 5455 V 353 w(10)g(000)p 3125 5455 V 980
5459 2149 4 v -246 5500 a
SDict begin H.S end
 -246 5500 a -246 5500 a
SDict begin 12 H.A end
 -246
5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.88) cvn /DEST pdfmark end
 -246 5500 a -246 5500 a
SDict begin H.S end
 -246 5500
a -246 5500 a
SDict begin 12 H.A end
 -246 5500 a -246 5500 a
SDict begin [/View [/XYZ H.V]/Dest (Item.89) cvn /DEST pdfmark end
 -246 5500 a 0 TeXcolorgray
-141 5630 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 91
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 86 w(\225)p 0
TeXcolorgray 41 w Fz(P)c FC(\()r Fz(M)f FC(\))15 b FB(\306)589
5574 y FC(500)p 544 5611 211 5 v 544 5687 a(10)8 b(000)779
5630 y FB(\306)14 b FC(0,)8 b(05)19 b(\(c)n('est)f(le)g(5)f(\045)h
(d\351j\340)f(donn\351)h(par)f(l)o('\351nonc\351\).)p
0 TeXcolorgray 1909 5895 a(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 190 -138 a FC(\225)p 0
TeXcolorgray 41 w Fz(P)325 -226 y Fm(\263)p 357 -205
59 5 v 357 -138 a Fz(T)415 -226 y Fm(\264)461 -138 y
FB(\306)565 -195 y FC(9120)p 540 -158 211 5 v 540 -81
a(10)8 b(000)775 -138 y FB(\306)14 b FC(0,)8 b(912.)-246
-66 y
SDict begin H.S end
 -246 -66 a -246 -66 a
SDict begin 12 H.A end
 -246 -66 a -246 -66 a
SDict begin [/View [/XYZ H.V]/Dest (Item.90) cvn /DEST pdfmark end
 -246
-66 a 0 TeXcolorgray 4 32 a FC(\(b\))p 0 TeXcolorgray
145 -35 80 5 v 43 w Fz(M)17 b FB(\\)10 b Fz(T)30 b FC(:)17
b(\253)d(l)o('animal)19 b(n)-6 b('est)19 b(pas)e(malade)h(et)g(son)g
(test)g(est)g(positif.)c(\273)1671 262 y Fz(P)1734 175
y Fm(\263)p 1766 195 V 1768 262 a Fz(M)k FB(\\)10 b Fz(T)1979
175 y Fm(\264)2025 262 y FB(\306)2149 206 y FC(380)p
2104 243 211 5 v 2104 319 a(10)e(000)2339 262 y FB(\306)14
b FC(0,)8 b(038.)-246 369 y
SDict begin H.S end
 -246 369 a -246 369 a
SDict begin 12 H.A end
 -246
369 a -246 369 a
SDict begin [/View [/XYZ H.V]/Dest (Item.91) cvn /DEST pdfmark end
 -246 369 a 0 TeXcolorgray 12 449 a FC(\(c\))p
0 TeXcolorgray 41 w(500)24 b(des)e(880)i(animaux)g(ayant)f(un)g(test)g
(positif)i(sont)e(malades)o(,)h(donc)e(la)h(probabilit\351)g(qu)n('un)h
(animal)f(ayant)g(un)g(test)g(positif)i(soit)145 549
y(malade)17 b(est)1792 665 y Fz(P)1842 677 y Fs(T)1891
665 y FC(\()r Fz(M)7 b FC(\))15 b FB(\306)2118 609 y
FC(500)p 2118 645 122 5 v 2118 722 a(880)2263 665 y FB(\274)g
FC(57\045.)-246 772 y
SDict begin H.S end
 -246 772 a -246 772 a
SDict begin 12 H.A end
 -246 772
a -246 772 a
SDict begin [/View [/XYZ H.V]/Dest (Item.92) cvn /DEST pdfmark end
 -246 772 a 0 TeXcolorgray 4 852 a FC(\(d\))p
0 TeXcolorgray 41 w(T)-8 b(ous)18 b(les)g(animaux)h(malades)f(ont)g(un)
f(test)i(positif,)g(donc)e(la)g(probabilit\351)h(qu)n('un)g(animal)g
(malade)g(ait)g(un)g(test)g(positif)h(est)1960 1034 y
Fz(P)2011 1046 y Fs(M)2075 1034 y FC(\()p Fz(T)12 b FC(\))i
FB(\306)g FC(1.)-246 1130 y
SDict begin H.S end
 -246 1130 a -246 1130 a
SDict begin 12 H.A end
 -246
1130 a -246 1130 a
SDict begin [/View [/XYZ H.V]/Dest (exo.31) cvn /DEST pdfmark end
 -246 1130 a -246 1132 a
SDict begin H.S end
 -246 1132
a -246 1132 a
SDict begin 12 H.A end
 -246 1132 a -246 1132 a
SDict begin [/View [/XYZ H.V]/Dest (Item.93) cvn /DEST pdfmark end
 -246 1132 a 0 TeXcolorgray
102 x FE(Ex)o(er)o(cice)g(31)p 0 TeXcolorgray 0 TeXcolorgray
146 w FC(1.)p 0 TeXcolorgray 43 w(On)j(tr)o(aduit)h(les)g(donn\351es)g
(de)f(l)o('\351nonc\351)i(par)f(un)f(tableau)h(d)n('effectifs)i(:)p
0 TeXcolorgray 0 TeXcolorgray 370 1321 3368 4 v 370 1421
4 100 v 1300 1421 V 1353 1391 a(A)o(bonn\351s)d(au)h(soir)p
2111 1421 V 257 w(P)m(as)g(abonn\351s)g(au)f(soir)p 2923
1421 V 132 w(T)-8 b(otal)p 3734 1421 V 370 1424 3368
4 v 370 1523 4 100 v 423 1494 a(A)o(bonn\351s)18 b(au)f(matin)p
1300 1523 V 300 w(50)p 2111 1523 V 731 w(20)p 2923 1523
V 732 w(70)p 3734 1523 V 370 1527 3368 4 v 370 1626 4
100 v 423 1597 a(P)m(as)g(abonn\351s)h(au)g(matin)p 1300
1626 V 174 w(50)p 2111 1626 V 731 w(160)p 2923 1626 V
692 w(210)p 3734 1626 V 370 1630 3368 4 v 370 1729 4
100 v 423 1699 a(T)-8 b(otal)p 1300 1729 V 760 w(100)p
2111 1729 V 691 w(180)p 2923 1729 V 692 w(280)p 3734
1729 V 370 1733 3368 4 v -246 1777 a
SDict begin H.S end
 -246 1777 a -246
1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777 a
SDict begin [/View [/XYZ H.V]/Dest (Item.94) cvn /DEST pdfmark end
 -246 1777 a -246 1777
a
SDict begin H.S end
 -246 1777 a -246 1777 a
SDict begin 12 H.A end
 -246 1777 a -246 1777 a
SDict begin [/View [/XYZ H.V]/Dest (Item.95) cvn /DEST pdfmark end
 -246
1777 a 0 TeXcolorgray -141 1890 a FC(2.)p 0 TeXcolorgray
0 TeXcolorgray 91 w(\(a\))p 0 TeXcolorgray 41 w Fz(P)8
b FC(\()p Fz(S)d FC(\))13 b FB(\306)392 1857 y Fv(100)p
392 1870 93 5 v 392 1918 a(280)511 1890 y FC(et)18 b
Fz(P)657 1802 y Fm(\263)p 689 1823 80 5 v 691 1890 a
Fz(M)769 1802 y Fm(\264)814 1890 y FB(\306)893 1857 y
Fv(210)p 893 1870 93 5 v 893 1918 a(280)996 1890 y FC(.)-246
1952 y
SDict begin H.S end
 -246 1952 a -246 1952 a
SDict begin 12 H.A end
 -246 1952 a -246 1952
a
SDict begin [/View [/XYZ H.V]/Dest (Item.96) cvn /DEST pdfmark end
 -246 1952 a 0 TeXcolorgray 4 2031 a FC(\(b\))p 0 TeXcolorgray
41 w Fz(S)d FB(\\)d Fz(M)24 b FC(:)18 b(\253)c(le)j(pensionnair)o(e)i
(est)f(abonn\351)g(aux)f(deux)h(jour)q(naux.)c(\273)1864
2261 y Fz(P)1927 2262 y FC(\()1954 2261 y Fz(S)h FB(\\)d
Fz(M)2154 2262 y FC(\))2195 2261 y FB(\306)2295 2205
y FC(50)p 2275 2242 122 5 v 2275 2318 a(280)2406 2261
y(.)-246 2368 y
SDict begin H.S end
 -246 2368 a -246 2368 a
SDict begin 12 H.A end
 -246 2368 a -246
2368 a
SDict begin [/View [/XYZ H.V]/Dest (Item.97) cvn /DEST pdfmark end
 -246 2368 a 0 TeXcolorgray 12 2448 a FC(\(c\))p
0 TeXcolorgray 41 w(On)17 b(choisit)h(au)g(hasar)o(d)e(un)i
(pensionnair)o(e)h(abonn\351)e(au)h Fz(Matin)p FC(.)f(La)h
(probabilit\351)g(qu)n('il)g(soit)g(aussi)g(abonn\351)g(au)f
Fz(Soir)j FC(est)1936 2664 y Fz(P)1987 2676 y Fs(M)2051
2664 y FC(\()p Fz(S)5 b FC(\))13 b FB(\306)2243 2608
y FC(50)p 2243 2645 82 5 v 2243 2721 a(70)2334 2664 y(.)-246
2849 y
SDict begin H.S end
 -246 2849 a -246 2849 a
SDict begin 12 H.A end
 -246 2849 a -246 2849
a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -246 2849 a 92 x FF(5)105 b(T)-10 b(aux)23 b(d)m('\351v)n(olution,)h
(suites)f(g\351om\351tr)q(iques)-246 3052 y
SDict begin H.S end
 -246 3052
a -246 3052 a
SDict begin 12 H.A end
 -246 3052 a -246 3052 a
SDict begin [/View [/XYZ H.V]/Dest (exo.32) cvn /DEST pdfmark end
 -246 3052 a -246
3037 a
SDict begin H.S end
 -246 3037 a -246 3037 a
SDict begin 12 H.A end
 -246 3037 a -246 3037
a
SDict begin [/View [/XYZ H.V]/Dest (Item.98) cvn /DEST pdfmark end
 -246 3037 a 0 TeXcolorgray 131 x FE(Ex)o(er)o(cice)14
b(32)p 0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0
TeXcolorgray 43 w(100)j(\045)6 b FB(\305)g FC(12,)i(5)18
b(\045)c FB(\306)g FC(112,)8 b(5)18 b(\045)c FB(\306)1347
3112 y FC(112,)8 b(5)p 1347 3149 191 5 v 1382 3225 a(100)1562
3168 y FB(\306)14 b FC(1,)q(125,)j(donc)f(pour)g(augmenter)g(un)h
(nombr)o(e)e(de)h(12,)8 b(5)17 b(\045,)f(il)g(faut)g(le)g(multiplier)j
(par)-38 3291 y(1,)q(125.)g(On)e(compl\350te)i(donc)e(le)h(sch\351ma)g
(:)p 0 TeXcolorgray 0 TeXcolorgray 1489 3466 2 2 v 1491
3467 169 4 v 1660 3466 2 2 v 1488 3567 4 100 v 1661 3567
V 1489 3570 2 2 v 1491 3571 169 4 v 1660 3570 2 2 v 1515
3542 a(120)p 1 0 0 TeXcolorrgb 1982 3413 a Fp(\243)f
Fv(1,125)p 0 TeXcolorgray 1684 3472 4 4 v 1686 3471 V
1688 3470 V 1690 3470 V 1692 3469 V 1694 3468 V 1696
3468 V 1698 3467 V 1700 3466 V 1702 3465 V 1704 3465
V 1706 3464 V 1708 3463 V 1710 3463 V 1712 3462 V 1714
3461 V 1716 3461 V 1718 3460 V 1720 3459 V 1722 3459
V 1724 3458 V 1726 3457 V 1728 3457 V 1730 3456 V 1732
3456 V 1734 3455 V 1736 3454 V 1738 3454 V 1740 3453
V 1742 3452 V 1744 3452 V 1745 3451 V 1747 3451 V 1749
3450 V 1751 3449 V 1753 3449 V 1755 3448 V 1757 3448
V 1759 3447 V 1761 3446 V 1763 3446 V 1765 3445 V 1767
3445 V 1769 3444 V 1771 3444 V 1773 3443 V 1775 3442
V 1777 3442 V 1779 3441 V 1781 3441 V 1783 3440 V 1785
3440 V 1787 3439 V 1789 3439 V 1791 3438 V 1793 3438
V 1795 3437 V 1797 3437 V 1799 3436 V 1801 3436 V 1803
3435 V 1805 3435 V 1807 3434 V 1809 3434 V 1811 3433
V 1813 3433 V 1815 3432 V 1817 3432 V 1818 3431 V 1820
3431 V 1822 3430 V 1824 3430 V 1826 3429 V 1828 3429
V 1830 3428 V 1832 3428 V 1834 3427 V 1836 3427 V 1838
3427 V 1840 3426 V 1842 3426 V 1844 3425 V 1846 3425
V 1848 3424 V 1850 3424 V 1852 3424 V 1854 3423 V 1856
3423 V 1858 3422 V 1860 3422 V 1862 3422 V 1864 3421
V 1866 3421 V 1868 3420 V 1870 3420 V 1872 3420 V 1874
3419 V 1876 3419 V 1878 3418 V 1880 3418 V 1882 3418
V 1884 3417 V 1886 3417 V 1888 3417 V 1890 3416 V 1892
3416 V 1893 3416 V 1895 3415 V 1897 3415 V 1899 3415
V 1901 3414 V 1903 3414 V 1905 3414 V 1907 3413 V 1909
3413 V 1911 3413 V 1913 3412 V 1915 3412 V 1917 3412
V 1919 3412 V 1921 3411 V 1923 3411 V 1925 3411 V 1927
3410 V 1929 3410 V 1931 3410 V 1933 3410 V 1935 3409
V 1937 3409 V 1939 3409 V 1941 3409 V 1943 3408 V 1945
3408 V 1947 3408 V 1949 3408 V 1951 3407 V 1953 3407
V 1955 3407 V 1957 3407 V 1959 3406 V 1961 3406 V 1963
3406 V 1965 3406 V 1966 3406 V 1968 3405 V 1970 3405
V 1972 3405 V 1974 3405 V 1976 3405 V 1978 3404 V 2478
3471 a Fo(\))p Fn(\))p 2180 3404 V 2182 3405 V 2184 3405
V 2186 3405 V 2187 3405 V 2189 3405 V 2191 3406 V 2193
3406 V 2195 3406 V 2197 3406 V 2199 3406 V 2201 3407
V 2203 3407 V 2205 3407 V 2207 3407 V 2209 3408 V 2211
3408 V 2213 3408 V 2215 3408 V 2217 3409 V 2219 3409
V 2221 3409 V 2223 3409 V 2225 3410 V 2227 3410 V 2229
3410 V 2231 3410 V 2233 3411 V 2235 3411 V 2237 3411
V 2239 3412 V 2241 3412 V 2243 3412 V 2245 3412 V 2247
3413 V 2249 3413 V 2251 3413 V 2253 3414 V 2255 3414
V 2257 3414 V 2259 3415 V 2260 3415 V 2262 3415 V 2264
3416 V 2266 3416 V 2268 3416 V 2270 3417 V 2272 3417
V 2274 3417 V 2276 3418 V 2278 3418 V 2280 3418 V 2282
3419 V 2284 3419 V 2286 3420 V 2288 3420 V 2290 3420
V 2292 3421 V 2294 3421 V 2296 3422 V 2298 3422 V 2300
3422 V 2302 3423 V 2304 3423 V 2306 3424 V 2308 3424
V 2310 3424 V 2312 3425 V 2314 3425 V 2316 3426 V 2318
3426 V 2320 3427 V 2322 3427 V 2324 3427 V 2326 3428
V 2328 3428 V 2330 3429 V 2332 3429 V 2333 3430 V 2335
3430 V 2337 3431 V 2339 3431 V 2341 3432 V 2343 3432
V 2345 3433 V 2347 3433 V 2349 3434 V 2351 3434 V 2353
3435 V 2355 3435 V 2357 3436 V 2359 3436 V 2361 3437
V 2363 3437 V 2365 3438 V 2367 3438 V 2369 3439 V 2371
3439 V 2373 3440 V 2375 3440 V 2377 3441 V 2379 3441
V 2381 3442 V 2383 3442 V 2385 3443 V 2387 3444 V 2389
3444 V 2391 3445 V 2393 3445 V 2395 3446 V 2397 3446
V 2399 3447 V 2401 3448 V 2403 3448 V 2405 3449 V 2406
3449 V 2408 3450 V 2410 3451 V 2412 3451 V 2414 3452
V 2416 3452 V 2418 3453 V 2420 3454 V 2422 3454 V 2424
3455 V 2426 3456 V 2428 3456 V 2430 3457 V 2432 3457
V 2434 3458 V 2436 3459 V 2438 3459 V 2440 3460 V 2442
3461 V 2444 3461 V 2446 3462 V 2448 3463 V 2450 3463
V 2452 3464 V 2454 3465 V 2456 3465 V 2458 3466 V 2460
3467 V 2462 3468 V 2464 3468 V 2466 3469 V 2468 3470
V 2470 3470 V 2472 3471 V 2474 3472 V 2476 3473 V 2503
3465 2 2 v 2504 3466 162 4 v 2666 3465 2 2 v 2502 3568
4 103 v 2668 3568 V 2503 3571 2 2 v 2504 3572 162 4 v
2666 3571 2 2 v 2537 3543 a FC(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1268 3754 a(inscr)q(its)18 b(d\351cembr)o(e)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2332 3743 a(inscr)q(its)g(janvier)p
0 TeXcolorgray -38 3961 a(???)13 b FB(\306)h FC(120)c
FB(\243)g FC(1,)e(125)19 b FB(\306)14 b FC(135,)19 b(donc)e(il)h(y)f
(aur)o(a)g(135)i(inscr)q(its)f(en)f(janvier)-5 b(.)-246
3994 y
SDict begin H.S end
 -246 3994 a -246 3994 a
SDict begin 12 H.A end
 -246 3994 a -246 3994
a
SDict begin [/View [/XYZ H.V]/Dest (Item.99) cvn /DEST pdfmark end
 -246 3994 a 0 TeXcolorgray -141 4090 a FC(2.)p 0 TeXcolorgray
43 w(P)n(our)17 b(conna\356tr)o(e)g(le)h(pour)o(centage)g(d)n
('augmentation,)h(on)f(compl\350te)h(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1447 4264 2 2 v 1448 4265
221 4 v 1669 4264 2 2 v 1446 4365 4 100 v 1672 4365 V
1447 4368 2 2 v 1448 4369 221 4 v 1669 4368 2 2 v 1472
4339 a(5)12 b(812)p 1 0 0 TeXcolorrgb 1973 4216 a Fp(\243)17
b Fv(?)g(?)g(?)p 0 TeXcolorgray 1695 4259 4 4 v 1697
4258 V 1699 4258 V 1701 4257 V 1703 4256 V 1705 4256
V 1707 4255 V 1708 4255 V 1710 4254 V 1712 4253 V 1714
4253 V 1716 4252 V 1718 4251 V 1720 4251 V 1722 4250
V 1724 4250 V 1726 4249 V 1728 4248 V 1730 4248 V 1732
4247 V 1734 4247 V 1736 4246 V 1737 4245 V 1739 4245
V 1741 4244 V 1743 4244 V 1745 4243 V 1747 4242 V 1749
4242 V 1751 4241 V 1753 4241 V 1755 4240 V 1757 4240
V 1759 4239 V 1761 4239 V 1763 4238 V 1764 4237 V 1766
4237 V 1768 4236 V 1770 4236 V 1772 4235 V 1774 4235
V 1776 4234 V 1778 4234 V 1780 4233 V 1782 4233 V 1784
4232 V 1786 4232 V 1788 4231 V 1790 4231 V 1791 4230
V 1793 4230 V 1795 4229 V 1797 4229 V 1799 4228 V 1801
4228 V 1803 4227 V 1805 4227 V 1807 4227 V 1809 4226
V 1811 4226 V 1813 4225 V 1815 4225 V 1817 4224 V 1819
4224 V 1820 4223 V 1822 4223 V 1824 4223 V 1826 4222
V 1828 4222 V 1830 4221 V 1832 4221 V 1834 4220 V 1836
4220 V 1838 4220 V 1840 4219 V 1842 4219 V 1844 4218
V 1846 4218 V 1847 4218 V 1849 4217 V 1851 4217 V 1853
4217 V 1855 4216 V 1857 4216 V 1859 4215 V 1861 4215
V 1863 4215 V 1865 4214 V 1867 4214 V 1869 4214 V 1871
4213 V 1873 4213 V 1875 4213 V 1876 4212 V 1878 4212
V 1880 4212 V 1882 4211 V 1884 4211 V 1886 4211 V 1888
4210 V 1890 4210 V 1892 4210 V 1894 4210 V 1896 4209
V 1898 4209 V 1900 4209 V 1902 4208 V 1903 4208 V 1905
4208 V 1907 4208 V 1909 4207 V 1911 4207 V 1913 4207
V 1915 4207 V 1917 4206 V 1919 4206 V 1921 4206 V 1923
4206 V 1925 4205 V 1927 4205 V 1929 4205 V 1930 4205
V 1932 4204 V 1934 4204 V 1936 4204 V 1938 4204 V 1940
4204 V 1942 4203 V 1944 4203 V 1946 4203 V 1948 4203
V 1950 4203 V 1952 4202 V 1954 4202 V 1956 4202 V 1958
4202 V 1959 4202 V 1961 4201 V 1963 4201 V 1965 4201
V 1967 4201 V 1969 4201 V 1971 4201 V 2411 4258 a Fo(*)p
Fn(*)p 2133 4201 V 2135 4201 V 2137 4201 V 2139 4201
V 2141 4201 V 2143 4201 V 2145 4202 V 2147 4202 V 2149
4202 V 2151 4202 V 2153 4202 V 2154 4203 V 2156 4203
V 2158 4203 V 2160 4203 V 2162 4203 V 2164 4204 V 2166
4204 V 2168 4204 V 2170 4204 V 2172 4204 V 2174 4205
V 2176 4205 V 2178 4205 V 2180 4205 V 2181 4206 V 2183
4206 V 2185 4206 V 2187 4206 V 2189 4207 V 2191 4207
V 2193 4207 V 2195 4207 V 2197 4208 V 2199 4208 V 2201
4208 V 2203 4208 V 2205 4209 V 2207 4209 V 2208 4209
V 2210 4210 V 2212 4210 V 2214 4210 V 2216 4210 V 2218
4211 V 2220 4211 V 2222 4211 V 2224 4212 V 2226 4212
V 2228 4212 V 2230 4213 V 2232 4213 V 2234 4213 V 2236
4214 V 2237 4214 V 2239 4214 V 2241 4215 V 2243 4215
V 2245 4215 V 2247 4216 V 2249 4216 V 2251 4217 V 2253
4217 V 2255 4217 V 2257 4218 V 2259 4218 V 2261 4218
V 2263 4219 V 2264 4219 V 2266 4220 V 2268 4220 V 2270
4220 V 2272 4221 V 2274 4221 V 2276 4222 V 2278 4222
V 2280 4223 V 2282 4223 V 2284 4223 V 2286 4224 V 2288
4224 V 2290 4225 V 2292 4225 V 2293 4226 V 2295 4226
V 2297 4227 V 2299 4227 V 2301 4227 V 2303 4228 V 2305
4228 V 2307 4229 V 2309 4229 V 2311 4230 V 2313 4230
V 2315 4231 V 2317 4231 V 2319 4232 V 2320 4232 V 2322
4233 V 2324 4233 V 2326 4234 V 2328 4234 V 2330 4235
V 2332 4235 V 2334 4236 V 2336 4236 V 2338 4237 V 2340
4237 V 2342 4238 V 2344 4239 V 2346 4239 V 2347 4240
V 2349 4240 V 2351 4241 V 2353 4241 V 2355 4242 V 2357
4242 V 2359 4243 V 2361 4244 V 2363 4244 V 2365 4245
V 2367 4245 V 2369 4246 V 2371 4247 V 2373 4247 V 2375
4248 V 2376 4248 V 2378 4249 V 2380 4250 V 2382 4250
V 2384 4251 V 2386 4251 V 2388 4252 V 2390 4253 V 2392
4253 V 2394 4254 V 2396 4255 V 2398 4255 V 2400 4256
V 2402 4256 V 2403 4257 V 2405 4258 V 2407 4258 V 2409
4259 V 2435 4264 2 2 v 2437 4265 221 4 v 2658 4264 2
2 v 2434 4365 4 100 v 2660 4365 V 2435 4368 2 2 v 2437
4369 221 4 v 2658 4368 2 2 v 2461 4339 a FC(6)12 b(065)p
0 0 1 TeXcolorrgb 1289 4543 a(logements)20 b(2007)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 450 w(logements)f(2015)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -38 4757 a(???)p 0 TeXcolorgray
13 w FB(\306)14 b FC(6)8 b(065)i FB(\245)g FC(5)e(812)19
b FB(\274)14 b FC(1,)8 b(0435.)p 1 0 0 TeXcolorrgb 0
TeXcolorgray -38 4898 a(Or)17 b(1,)8 b(0435)18 b FB(\306)392
4842 y FC(104,)8 b(35)p 392 4879 231 5 v 447 4955 a(100)647
4898 y FB(\306)15 b FC(104,)8 b(35)20 b(\045)15 b FB(\306)f
FC(100)19 b(\045)10 b FB(\305)g FC(4,)e(35)20 b(\045,)e(donc)f(le)h
(nombr)o(e)f(de)h(logements)h(a)e(augment\351)i(de)f(4,35)h(\045)e
(environ.)i(A)n(utr)o(ement)-38 5021 y(dit,)e(le)h(taux)g(d)n
('\351volution)h(du)e(nombr)o(e)h(de)f(logements)i(est)f
FB(\305)p FC(4,)8 b(35)19 b(\045.)-38 5185 y FE(N.B.)i
FC(V)-5 b(ous)21 b(n)-6 b('\352tes)21 b(pas)f(oblig\351s)g(d)n('\351cr)
q(ir)o(e)f(le)i(calcul)f(\002nal)g(:)g(vous)h(pouvez)f(passer)g(dir)o
(ectement)h(de)f(\253)14 b(1,0435)k(\273)39 b(\340)19
b(la)h(r\351ponse)h(\253)15 b(augmen-)-38 5284 y(tation)22
b(de)f(4,35)i(\045)14 b(\273.)22 b(N)n(otez)e(\351galement)i(qu)n('il)g
(faut)g(pr)o(endr)o(e)f(4)g(chiffr)o(es)h(apr\350s)f(la)h(virgule)f
(pour)h(avoir)f(une)h(r\351ponse)g(\002nale)f(arrondie)g(\340)-38
5384 y(0,01)e(\045)e(pr\350s)o(.)p 0 TeXcolorgray 1909
5895 a(18)p 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.100) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(3.)p 0 TeXcolorgray 43 w(On)17 b(r)o(appelle)i(que)f(la)g(TV)-5
b(A)18 b(\(taxe)f(sur)h(la)f(valeur)h(ajout\351e\))h(est)f(une)g(taxe)f
(sur)h(les)g(produits)g(dont)f(le)h(montant)h(r)o(evient)f(\340)f(l)o
('\311)o(tat.)-38 -51 y(Dir)o(e)f(qu)n(')i(\253)c(il)j(y)g(a)g(20)h
(\045)f(de)h(TV)-5 b(A)14 b(\273)35 b(signi\002e)18 b(qu)n('un)g
(commer)o(\347ant)g(qui)g(veut)g(gagner)f(100)h Fy(N)34
b FC(avec)18 b(la)f(vente)i(d)n('un)f(ar)q(ticle)f(doit)g(le)h(mettr)o
(e)g(en)-38 48 y(vente)g(\340)f(120)i Fy(N)34 b FC(\(il)18
b(ajoute)g(20)g(\045)f(de)h(la)f(valeur)-5 b(,)18 b(donc)g(il)f
(multiplie)j(par)e(1,20\).)-38 159 y(S)n(ur)g(l)o('ar)q(ticle)g(vendu)g
(120)g Fy(N)34 b FC(en)18 b(magasin,)g(le)g(commer)o(\347ant)g(gar)o
(der)o(a)e(100)j Fy(N)34 b FC(et)17 b(devr)o(a)h(donner)f(20)h
Fy(N)35 b FC(\340)17 b(L)-10 b('\311)o(tat.)-38 271 y(Le)18
b(pr)q(ix)f(T)q(T)o(C)h(\(toutes)g(taxes)g(compr)q(ises\))g(est)g(de)f
(120)i Fy(N)p FC(,)e(le)h(pr)q(ix)f(HT)h(\(hors)f(taxe\))h(est)g(de)f
(100)h Fy(N)34 b FC(et)18 b(le)g(montant)h(de)e(la)g(TV)-5
b(A)19 b(est)f(de)f(20)h Fy(N)p FC(.)-38 425 y(P)n(our)f(avoir)g(le)h
(pr)q(ix)f(T)q(T)o(C)h(dans)f(notr)o(e)g(exemple)o(,)i(il)f(faut)g
(compl\351ter)h(le)f(sch\351ma)g(:)p 0 TeXcolorgray 0
TeXcolorgray 1613 589 2 2 v 1615 590 128 4 v 1743 589
2 2 v 1613 689 4 100 v 1745 689 V 1613 692 2 2 v 1615
693 128 4 v 1743 692 2 2 v 1639 664 a(80)p 1 0 0 TeXcolorrgb
1961 535 a Fp(\243)f Fv(1,20)p 0 TeXcolorgray 1769 588
4 4 v 1772 587 V 1775 585 V 1778 584 V 1781 583 V 1783
581 V 1786 580 V 1789 579 V 1792 578 V 1795 576 V 1798
575 V 1801 574 V 1803 573 V 1806 571 V 1809 570 V 1812
569 V 1815 568 V 1818 567 V 1820 566 V 1823 564 V 1826
563 V 1829 562 V 1832 561 V 1835 560 V 1838 559 V 1840
558 V 1843 557 V 1846 556 V 1849 555 V 1852 554 V 1855
553 V 1857 552 V 1860 551 V 1863 550 V 1866 549 V 1869
549 V 1872 548 V 1875 547 V 1877 546 V 1880 545 V 1883
544 V 1886 544 V 1889 543 V 1892 542 V 1894 541 V 1897
540 V 1900 540 V 1903 539 V 1906 538 V 1909 538 V 1912
537 V 1914 536 V 1917 536 V 1920 535 V 1923 534 V 1926
534 V 1929 533 V 1932 533 V 1934 532 V 1937 532 V 1940
531 V 1943 531 V 1946 530 V 1949 530 V 1951 529 V 1954
529 V 1957 528 V 2301 579 a Fo(\()p Fn(\()p 2128 528
V 2131 529 V 2134 529 V 2137 530 V 2139 530 V 2142 531
V 2145 531 V 2148 532 V 2151 532 V 2154 533 V 2156 533
V 2159 534 V 2162 534 V 2165 535 V 2168 536 V 2171 536
V 2174 537 V 2176 538 V 2179 538 V 2182 539 V 2185 540
V 2188 540 V 2191 541 V 2193 542 V 2196 543 V 2199 544
V 2202 544 V 2205 545 V 2208 546 V 2211 547 V 2213 548
V 2216 549 V 2219 549 V 2222 550 V 2225 551 V 2228 552
V 2231 553 V 2233 554 V 2236 555 V 2239 556 V 2242 557
V 2245 558 V 2248 559 V 2250 560 V 2253 561 V 2256 562
V 2259 563 V 2262 564 V 2265 566 V 2268 567 V 2270 568
V 2273 569 V 2276 570 V 2279 571 V 2282 573 V 2285 574
V 2287 575 V 2290 576 V 2293 578 V 2296 579 V 2299 580
V 2326 587 2 2 v 2327 588 162 4 v 2489 587 2 2 v 2325
690 4 103 v 2491 690 V 2326 693 2 2 v 2327 694 162 4
v 2489 693 2 2 v 2360 665 a FC(?)9 b(?)g(?)p 0 0 1 TeXcolorrgb
1549 866 a(pr)q(ix)17 b(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -38 1062 a(???)c
FB(\306)h FC(80)c FB(\243)g FC(1,)e(20)18 b FB(\306)c
FC(96,)k(donc)f(le)h(montant)h(T)q(T)o(C)f(est)g(de)f(96)h
Fy(N)p FC(.)-38 1216 y FE(R)o(emarque)c(:)j FC(Le)h(montant)h(de)e(la)g
(TV)-5 b(A)19 b(est)f(96)10 b FB(\241)g FC(80)16 b FB(\306)e
FC(16)19 b Fy(N)p FC(.)-38 1328 y(Il)e(ne)h(faut)g(pas)g(confondr)o(e)f
(ce)h(montant)h(\(16)f Fy(N)p FC(\))f(et)h(le)g(taux)g(de)f(TV)-5
b(A)19 b(\(ici)e(20)i(\045\).)e(Il)g(y)g(a)h(une)g(ambigu\357t\351)h
(lorsqu)n('on)f(parle)g(de)g(\253)c(TV)-5 b(A)14 b(\273)35
b(sans)-38 1427 y(pr\351ciser)18 b(s)m('il)g(s)m('agit)g(d)n('un)g
(montant)g(ou)g(d)n('un)g(taux.)-246 1507 y
SDict begin H.S end
 -246 1507
a -246 1507 a
SDict begin 12 H.A end
 -246 1507 a -246 1507 a
SDict begin [/View [/XYZ H.V]/Dest (exo.33) cvn /DEST pdfmark end
 -246 1507 a -246
1524 a
SDict begin H.S end
 -246 1524 a -246 1524 a
SDict begin 12 H.A end
 -246 1524 a -246 1524
a
SDict begin [/View [/XYZ H.V]/Dest (Item.101) cvn /DEST pdfmark end
 -246 1524 a 0 TeXcolorgray 127 x FE(Ex)o(er)o(cice)c(33)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(100)21 b(\045)11 b FB(\241)g FC(15)21 b(\045)16
b FB(\306)h FC(85)k(\045)16 b FB(\306)1221 1595 y FC(85)p
1201 1632 122 5 v 1201 1708 a(100)1349 1651 y FB(\306)g
FC(0,)8 b(85,)22 b(donc)d(pour)i(diminuer)f(un)h(nombr)o(e)e(de)h(15)g
(\045,)g(il)g(faut)h(le)f(multiplier)i(par)e(0,)8 b(85.)22
b(On)-38 1774 y(compl\350te)d(donc)e(le)h(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1401 1937 2 2 v 1402 1938
262 4 v 1664 1937 2 2 v 1400 2038 4 100 v 1666 2038 V
1401 2041 2 2 v 1402 2042 262 4 v 1664 2041 2 2 v 1426
2013 a(12)12 b(000)p 1 0 0 TeXcolorrgb 1943 1884 a Fp(\243)17
b Fv(0,85)p 0 TeXcolorgray 1690 1925 4 4 v 1692 1924
V 1694 1924 V 1696 1923 V 1698 1923 V 1700 1922 V 1701
1921 V 1703 1921 V 1705 1920 V 1707 1920 V 1709 1919
V 1711 1918 V 1713 1918 V 1715 1917 V 1717 1917 V 1719
1916 V 1721 1916 V 1723 1915 V 1725 1914 V 1727 1914
V 1728 1913 V 1730 1913 V 1732 1912 V 1734 1912 V 1736
1911 V 1738 1911 V 1740 1910 V 1742 1909 V 1744 1909
V 1746 1908 V 1748 1908 V 1750 1907 V 1752 1907 V 1753
1906 V 1755 1906 V 1757 1905 V 1759 1905 V 1761 1904
V 1763 1904 V 1765 1903 V 1767 1903 V 1769 1902 V 1771
1902 V 1773 1901 V 1775 1901 V 1777 1901 V 1778 1900
V 1780 1900 V 1782 1899 V 1784 1899 V 1786 1898 V 1788
1898 V 1790 1897 V 1792 1897 V 1794 1897 V 1796 1896
V 1798 1896 V 1800 1895 V 1802 1895 V 1804 1894 V 1805
1894 V 1807 1894 V 1809 1893 V 1811 1893 V 1813 1892
V 1815 1892 V 1817 1892 V 1819 1891 V 1821 1891 V 1823
1890 V 1825 1890 V 1827 1890 V 1829 1889 V 1830 1889
V 1832 1889 V 1834 1888 V 1836 1888 V 1838 1888 V 1840
1887 V 1842 1887 V 1844 1886 V 1846 1886 V 1848 1886
V 1850 1885 V 1852 1885 V 1854 1885 V 1856 1885 V 1857
1884 V 1859 1884 V 1861 1884 V 1863 1883 V 1865 1883
V 1867 1883 V 1869 1882 V 1871 1882 V 1873 1882 V 1875
1882 V 1877 1881 V 1879 1881 V 1881 1881 V 1882 1880
V 1884 1880 V 1886 1880 V 1888 1880 V 1890 1879 V 1892
1879 V 1894 1879 V 1896 1879 V 1898 1878 V 1900 1878
V 1902 1878 V 1904 1878 V 1906 1877 V 1907 1877 V 1909
1877 V 1911 1877 V 1913 1877 V 1915 1876 V 1917 1876
V 1919 1876 V 1921 1876 V 1923 1876 V 1925 1875 V 1927
1875 V 1929 1875 V 1931 1875 V 1933 1875 V 1934 1875
V 1936 1874 V 1938 1874 V 1940 1874 V 2412 1941 a Fo(\))p
Fn(\))p 2110 1874 V 2112 1874 V 2114 1874 V 2115 1875
V 2117 1875 V 2119 1875 V 2121 1875 V 2123 1875 V 2125
1875 V 2127 1876 V 2129 1876 V 2131 1876 V 2133 1876
V 2135 1876 V 2137 1877 V 2139 1877 V 2140 1877 V 2142
1877 V 2144 1877 V 2146 1878 V 2148 1878 V 2150 1878
V 2152 1878 V 2154 1879 V 2156 1879 V 2158 1879 V 2160
1879 V 2162 1880 V 2164 1880 V 2166 1880 V 2167 1880
V 2169 1881 V 2171 1881 V 2173 1881 V 2175 1882 V 2177
1882 V 2179 1882 V 2181 1882 V 2183 1883 V 2185 1883
V 2187 1883 V 2189 1884 V 2191 1884 V 2192 1884 V 2194
1885 V 2196 1885 V 2198 1885 V 2200 1885 V 2202 1886
V 2204 1886 V 2206 1886 V 2208 1887 V 2210 1887 V 2212
1888 V 2214 1888 V 2216 1888 V 2217 1889 V 2219 1889
V 2221 1889 V 2223 1890 V 2225 1890 V 2227 1890 V 2229
1891 V 2231 1891 V 2233 1892 V 2235 1892 V 2237 1892
V 2239 1893 V 2241 1893 V 2243 1894 V 2244 1894 V 2246
1894 V 2248 1895 V 2250 1895 V 2252 1896 V 2254 1896
V 2256 1897 V 2258 1897 V 2260 1897 V 2262 1898 V 2264
1898 V 2266 1899 V 2268 1899 V 2269 1900 V 2271 1900
V 2273 1901 V 2275 1901 V 2277 1901 V 2279 1902 V 2281
1902 V 2283 1903 V 2285 1903 V 2287 1904 V 2289 1904
V 2291 1905 V 2293 1905 V 2295 1906 V 2296 1906 V 2298
1907 V 2300 1907 V 2302 1908 V 2304 1908 V 2306 1909
V 2308 1909 V 2310 1910 V 2312 1911 V 2314 1911 V 2316
1912 V 2318 1912 V 2320 1913 V 2321 1913 V 2323 1914
V 2325 1914 V 2327 1915 V 2329 1916 V 2331 1916 V 2333
1917 V 2335 1917 V 2337 1918 V 2339 1918 V 2341 1919
V 2343 1920 V 2345 1920 V 2347 1921 V 2348 1921 V 2350
1922 V 2352 1923 V 2354 1923 V 2356 1924 V 2358 1924
V 2360 1925 V 2362 1926 V 2364 1926 V 2366 1927 V 2368
1928 V 2370 1928 V 2372 1929 V 2373 1930 V 2375 1930
V 2377 1931 V 2379 1932 V 2381 1932 V 2383 1933 V 2385
1934 V 2387 1934 V 2389 1935 V 2391 1936 V 2393 1936
V 2395 1937 V 2397 1938 V 2398 1938 V 2400 1939 V 2402
1940 V 2404 1940 V 2406 1941 V 2408 1942 V 2410 1943
V 2436 1936 2 2 v 2438 1937 162 4 v 2600 1936 2 2 v 2435
2039 4 103 v 2602 2039 V 2436 2042 2 2 v 2438 2043 162
4 v 2600 2042 2 2 v 2471 2014 a FC(?)9 b(?)g(?)p 0 0 1
TeXcolorrgb 1292 2217 a(pr)q(ix)17 b(de)g(d\351par)q(t)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2224 2216 a(pr)q(ix)g(apr\350s)h(r)o
(emise)p 0 TeXcolorgray -38 2414 a(???)13 b FB(\306)h
FC(12)8 b(000)i FB(\243)g FC(0,)e(85)19 b FB(\306)c FC(10)8
b(200,)20 b(donc)d(le)h(pr)q(ix)f(apr\350s)h(r)o(emise)g(est)g(de)f(10)
12 b(200)20 b Fy(N)p FC(.)-246 2443 y
SDict begin H.S end
 -246 2443 a -246
2443 a
SDict begin 12 H.A end
 -246 2443 a -246 2443 a
SDict begin [/View [/XYZ H.V]/Dest (Item.102) cvn /DEST pdfmark end
 -246 2443 a 0 TeXcolorgray
-141 2537 a FC(2.)p 0 TeXcolorgray 43 w(P)n(our)d(conna\356tr)o(e)g(le)
h(pour)o(centage)g(de)f(baisse)o(,)h(on)f(compl\350te)i(le)f(sch\351ma)
g(:)p 0 TeXcolorgray 0 TeXcolorgray 1426 2699 2 2 v 1428
2700 169 4 v 1597 2699 2 2 v 1426 2800 4 100 v 1599 2800
V 1426 2803 2 2 v 1428 2804 169 4 v 1597 2803 2 2 v 1452
2774 a(240)p 1 0 0 TeXcolorrgb 1973 2651 a Fp(\243)f
Fv(?)g(?)g(?)p 0 TeXcolorgray 1623 2707 4 4 v 1625 2706
V 1628 2705 V 1630 2705 V 1632 2704 V 1634 2703 V 1636
2702 V 1638 2702 V 1640 2701 V 1642 2700 V 1644 2700
V 1647 2699 V 1649 2698 V 1651 2698 V 1653 2697 V 1655
2696 V 1657 2696 V 1659 2695 V 1661 2694 V 1663 2694
V 1666 2693 V 1668 2692 V 1670 2692 V 1672 2691 V 1674
2690 V 1676 2690 V 1678 2689 V 1680 2688 V 1682 2688
V 1685 2687 V 1687 2686 V 1689 2686 V 1691 2685 V 1693
2685 V 1695 2684 V 1697 2683 V 1699 2683 V 1701 2682
V 1704 2682 V 1706 2681 V 1708 2680 V 1710 2680 V 1712
2679 V 1714 2679 V 1716 2678 V 1718 2678 V 1720 2677
V 1723 2676 V 1725 2676 V 1727 2675 V 1729 2675 V 1731
2674 V 1733 2674 V 1735 2673 V 1737 2673 V 1739 2672
V 1742 2671 V 1744 2671 V 1746 2670 V 1748 2670 V 1750
2669 V 1752 2669 V 1754 2668 V 1756 2668 V 1758 2667
V 1761 2667 V 1763 2666 V 1765 2666 V 1767 2665 V 1769
2665 V 1771 2664 V 1773 2664 V 1775 2663 V 1777 2663
V 1780 2663 V 1782 2662 V 1784 2662 V 1786 2661 V 1788
2661 V 1790 2660 V 1792 2660 V 1794 2659 V 1797 2659
V 1799 2658 V 1801 2658 V 1803 2658 V 1805 2657 V 1807
2657 V 1809 2656 V 1811 2656 V 1813 2656 V 1816 2655
V 1818 2655 V 1820 2654 V 1822 2654 V 1824 2654 V 1826
2653 V 1828 2653 V 1830 2652 V 1832 2652 V 1835 2652
V 1837 2651 V 1839 2651 V 1841 2651 V 1843 2650 V 1845
2650 V 1847 2649 V 1849 2649 V 1851 2649 V 1854 2648
V 1856 2648 V 1858 2648 V 1860 2647 V 1862 2647 V 1864
2647 V 1866 2646 V 1868 2646 V 1870 2646 V 1873 2646
V 1875 2645 V 1877 2645 V 1879 2645 V 1881 2644 V 1883
2644 V 1885 2644 V 1887 2644 V 1889 2643 V 1892 2643
V 1894 2643 V 1896 2642 V 1898 2642 V 1900 2642 V 1902
2642 V 1904 2641 V 1906 2641 V 1908 2641 V 1911 2641
V 1913 2640 V 1915 2640 V 1917 2640 V 1919 2640 V 1921
2639 V 1923 2639 V 1925 2639 V 1927 2639 V 1930 2639
V 1932 2638 V 1934 2638 V 1936 2638 V 1938 2638 V 1940
2638 V 1942 2637 V 1944 2637 V 1946 2637 V 1949 2637
V 1951 2637 V 1953 2637 V 1955 2636 V 1957 2636 V 1959
2636 V 1961 2636 V 1963 2636 V 1966 2636 V 1968 2635
V 1970 2635 V 2484 2706 a Fo(\))p Fn(\))p 2135 2635 V
2137 2635 V 2139 2636 V 2141 2636 V 2143 2636 V 2145
2636 V 2147 2636 V 2149 2636 V 2151 2637 V 2154 2637
V 2156 2637 V 2158 2637 V 2160 2637 V 2162 2637 V 2164
2638 V 2166 2638 V 2168 2638 V 2170 2638 V 2173 2638
V 2175 2639 V 2177 2639 V 2179 2639 V 2181 2639 V 2183
2639 V 2185 2640 V 2187 2640 V 2189 2640 V 2192 2640
V 2194 2641 V 2196 2641 V 2198 2641 V 2200 2641 V 2202
2642 V 2204 2642 V 2206 2642 V 2208 2642 V 2211 2643
V 2213 2643 V 2215 2643 V 2217 2644 V 2219 2644 V 2221
2644 V 2223 2644 V 2225 2645 V 2227 2645 V 2230 2645
V 2232 2646 V 2234 2646 V 2236 2646 V 2238 2646 V 2240
2647 V 2242 2647 V 2244 2647 V 2246 2648 V 2249 2648
V 2251 2648 V 2253 2649 V 2255 2649 V 2257 2649 V 2259
2650 V 2261 2650 V 2263 2651 V 2265 2651 V 2268 2651
V 2270 2652 V 2272 2652 V 2274 2652 V 2276 2653 V 2278
2653 V 2280 2654 V 2282 2654 V 2284 2654 V 2287 2655
V 2289 2655 V 2291 2656 V 2293 2656 V 2295 2656 V 2297
2657 V 2299 2657 V 2301 2658 V 2304 2658 V 2306 2658
V 2308 2659 V 2310 2659 V 2312 2660 V 2314 2660 V 2316
2661 V 2318 2661 V 2320 2662 V 2323 2662 V 2325 2663
V 2327 2663 V 2329 2663 V 2331 2664 V 2333 2664 V 2335
2665 V 2337 2665 V 2339 2666 V 2342 2666 V 2344 2667
V 2346 2667 V 2348 2668 V 2350 2668 V 2352 2669 V 2354
2669 V 2356 2670 V 2358 2670 V 2361 2671 V 2363 2671
V 2365 2672 V 2367 2673 V 2369 2673 V 2371 2674 V 2373
2674 V 2375 2675 V 2377 2675 V 2380 2676 V 2382 2676
V 2384 2677 V 2386 2678 V 2388 2678 V 2390 2679 V 2392
2679 V 2394 2680 V 2396 2680 V 2399 2681 V 2401 2682
V 2403 2682 V 2405 2683 V 2407 2683 V 2409 2684 V 2411
2685 V 2413 2685 V 2415 2686 V 2418 2686 V 2420 2687
V 2422 2688 V 2424 2688 V 2426 2689 V 2428 2690 V 2430
2690 V 2432 2691 V 2434 2692 V 2437 2692 V 2439 2693
V 2441 2694 V 2443 2694 V 2445 2695 V 2447 2696 V 2449
2696 V 2451 2697 V 2453 2698 V 2456 2698 V 2458 2699
V 2460 2700 V 2462 2700 V 2464 2701 V 2466 2702 V 2468
2702 V 2470 2703 V 2473 2704 V 2475 2705 V 2477 2705
V 2479 2706 V 2481 2707 V 2508 2699 2 2 v 2510 2700 169
4 v 2679 2699 2 2 v 2507 2800 4 100 v 2680 2800 V 2508
2803 2 2 v 2510 2804 169 4 v 2679 2803 2 2 v 2534 2774
a FC(228)p 0 0 1 TeXcolorrgb 1196 2975 a(\351missions)j(ann\351e)e(0)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 449 w(\351missions)i(ann\351e)e(1)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -29 3152 a(?)9 b(?)g(?)p
0 TeXcolorgray 12 w FB(\306)14 b FC(228)c FB(\245)g FC(240)18
b FB(\306)c FC(0,)8 b(95.)-38 3263 y(Or)17 b(0,)8 b(95)16
b FB(\306)326 3230 y Fv(95)p 310 3243 93 5 v 310 3292
a(100)427 3263 y FB(\306)e FC(95)k(\045,)g(donc)f(les)h(\351missions)h
(ont)f(baiss\351)g(de)f(5)h(\045.)f(A)n(utr)o(ement)h(dit,)g(le)g(taux)
f(d)n('\351volution)j(est)e FB(\241)p FC(5)f(\045.)-38
3417 y Fr(")p FC(N)n(e)g(pas)h(oublier)g(le)f(\253)d
FB(\241)g FC(\273)34 b(dans)17 b FB(\241)p FC(5)h(\045.)-246
3447 y
SDict begin H.S end
 -246 3447 a -246 3447 a
SDict begin 12 H.A end
 -246 3447 a -246 3447
a
SDict begin [/View [/XYZ H.V]/Dest (Item.103) cvn /DEST pdfmark end
 -246 3447 a 0 TeXcolorgray -141 3540 a FC(3.)p 0 TeXcolorgray
43 w(100)d(\045)r FB(\241)r FC(25)g(\045)f FB(\306)g
FC(75)h(\045)g FB(\306)730 3507 y Fv(75)p 715 3520 93
5 v 715 3569 a(100)831 3540 y FB(\306)f FC(0,)8 b(75,)16
b(donc)e(la)g(baisse)h(de)f(25)g(\045)g(\351quivaut)i(\340)d(une)i
(multiplication)i(par)d(0,75)i(et)e(on)g(peut)h(utiliser)h(le)e
(sch\351ma)h(:)p 0 TeXcolorgray 0 TeXcolorgray 1450 3714
2 2 v 1452 3715 162 4 v 1614 3714 2 2 v 1450 3818 4 103
v 1616 3818 V 1450 3821 2 2 v 1452 3822 162 4 v 1614
3821 2 2 v 1485 3792 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb
1920 3662 a Fp(\243)p Fv(0,75)p 0 TeXcolorgray 1640 3718
4 4 v 1642 3717 V 1644 3717 V 1645 3716 V 1647 3715 V
1649 3715 V 1651 3714 V 1653 3713 V 1654 3713 V 1656
3712 V 1658 3711 V 1660 3710 V 1662 3710 V 1663 3709
V 1665 3709 V 1667 3708 V 1669 3707 V 1671 3707 V 1672
3706 V 1674 3705 V 1676 3705 V 1678 3704 V 1680 3703
V 1681 3703 V 1683 3702 V 1685 3702 V 1687 3701 V 1689
3700 V 1690 3700 V 1692 3699 V 1694 3698 V 1696 3698
V 1698 3697 V 1699 3697 V 1701 3696 V 1703 3696 V 1705
3695 V 1707 3694 V 1708 3694 V 1710 3693 V 1712 3693
V 1714 3692 V 1716 3692 V 1717 3691 V 1719 3690 V 1721
3690 V 1723 3689 V 1725 3689 V 1726 3688 V 1728 3688
V 1730 3687 V 1732 3687 V 1734 3686 V 1735 3686 V 1737
3685 V 1739 3685 V 1741 3684 V 1743 3684 V 1744 3683
V 1746 3683 V 1748 3682 V 1750 3682 V 1752 3681 V 1753
3681 V 1755 3680 V 1757 3680 V 1759 3679 V 1761 3679
V 1762 3678 V 1764 3678 V 1766 3677 V 1768 3677 V 1770
3677 V 1771 3676 V 1773 3676 V 1775 3675 V 1777 3675
V 1779 3674 V 1780 3674 V 1782 3673 V 1784 3673 V 1786
3673 V 1788 3672 V 1789 3672 V 1791 3671 V 1793 3671
V 1795 3671 V 1797 3670 V 1798 3670 V 1800 3669 V 1802
3669 V 1804 3669 V 1806 3668 V 1807 3668 V 1809 3668
V 1811 3667 V 1813 3667 V 1815 3666 V 1816 3666 V 1818
3666 V 1820 3665 V 1822 3665 V 1824 3665 V 1825 3664
V 1827 3664 V 1829 3664 V 1831 3663 V 1833 3663 V 1834
3663 V 1836 3662 V 1838 3662 V 1840 3662 V 1842 3662
V 1843 3661 V 1845 3661 V 1847 3661 V 1849 3660 V 1851
3660 V 1852 3660 V 1854 3659 V 1856 3659 V 1858 3659
V 1860 3659 V 1861 3658 V 1863 3658 V 1865 3658 V 1867
3658 V 1869 3657 V 1870 3657 V 1872 3657 V 1874 3657
V 1876 3656 V 1878 3656 V 1879 3656 V 1881 3656 V 1883
3656 V 1885 3655 V 1887 3655 V 1888 3655 V 1890 3655
V 1892 3654 V 1894 3654 V 1896 3654 V 1897 3654 V 1899
3654 V 1901 3654 V 1903 3653 V 1905 3653 V 1906 3653
V 1908 3653 V 1910 3653 V 1912 3652 V 1914 3652 V 1915
3652 V 1917 3652 V 2365 3724 a Fo(\()p Fn(\()p 2068 3652
V 2070 3652 V 2072 3652 V 2074 3652 V 2076 3653 V 2077
3653 V 2079 3653 V 2081 3653 V 2083 3653 V 2085 3654
V 2086 3654 V 2088 3654 V 2090 3654 V 2092 3654 V 2094
3654 V 2095 3655 V 2097 3655 V 2099 3655 V 2101 3655
V 2103 3656 V 2104 3656 V 2106 3656 V 2108 3656 V 2110
3656 V 2112 3657 V 2113 3657 V 2115 3657 V 2117 3657
V 2119 3658 V 2121 3658 V 2122 3658 V 2124 3658 V 2126
3659 V 2128 3659 V 2130 3659 V 2131 3659 V 2133 3660
V 2135 3660 V 2137 3660 V 2139 3661 V 2140 3661 V 2142
3661 V 2144 3662 V 2146 3662 V 2148 3662 V 2149 3662
V 2151 3663 V 2153 3663 V 2155 3663 V 2157 3664 V 2158
3664 V 2160 3664 V 2162 3665 V 2164 3665 V 2166 3665
V 2167 3666 V 2169 3666 V 2171 3666 V 2173 3667 V 2175
3667 V 2176 3668 V 2178 3668 V 2180 3668 V 2182 3669
V 2184 3669 V 2185 3669 V 2187 3670 V 2189 3670 V 2191
3671 V 2193 3671 V 2194 3671 V 2196 3672 V 2198 3672
V 2200 3673 V 2202 3673 V 2203 3673 V 2205 3674 V 2207
3674 V 2209 3675 V 2211 3675 V 2212 3676 V 2214 3676
V 2216 3677 V 2218 3677 V 2220 3677 V 2221 3678 V 2223
3678 V 2225 3679 V 2227 3679 V 2229 3680 V 2230 3680
V 2232 3681 V 2234 3681 V 2236 3682 V 2238 3682 V 2239
3683 V 2241 3683 V 2243 3684 V 2245 3684 V 2247 3685
V 2248 3685 V 2250 3686 V 2252 3686 V 2254 3687 V 2256
3687 V 2257 3688 V 2259 3688 V 2261 3689 V 2263 3689
V 2265 3690 V 2266 3690 V 2268 3691 V 2270 3692 V 2272
3692 V 2274 3693 V 2275 3693 V 2277 3694 V 2279 3694
V 2281 3695 V 2283 3696 V 2284 3696 V 2286 3697 V 2288
3697 V 2290 3698 V 2292 3698 V 2293 3699 V 2295 3700
V 2297 3700 V 2299 3701 V 2301 3702 V 2302 3702 V 2304
3703 V 2306 3703 V 2308 3704 V 2310 3705 V 2311 3705
V 2313 3706 V 2315 3707 V 2317 3707 V 2319 3708 V 2320
3709 V 2322 3709 V 2324 3710 V 2326 3710 V 2328 3711
V 2329 3712 V 2331 3713 V 2333 3713 V 2335 3714 V 2337
3715 V 2338 3715 V 2340 3716 V 2342 3717 V 2344 3717
V 2346 3718 V 2347 3719 V 2349 3719 V 2351 3720 V 2353
3721 V 2355 3722 V 2356 3722 V 2358 3723 V 2360 3724
V 2362 3725 V 2389 3716 2 2 v 2391 3717 128 4 v 2519
3716 2 2 v 2388 3816 4 100 v 2521 3816 V 2389 3819 2
2 v 2391 3820 128 4 v 2519 3819 2 2 v 2415 3791 a FC(63)p
0 0 1 TeXcolorrgb 1356 3995 a(pr)q(ix)18 b(initial)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2159 3994 a(pr)q(ix)g(apr\350s)f(r)o
(emise)p 0 TeXcolorgray -38 4192 a(???)c FB(\306)h FC(63)c
FB(\245)g FC(0,)e(75)18 b FB(\306)c FC(84,)k(donc)f(le)h(pr)q(ix)g
(initial)g(\351tait)g(de)f(84)i Fy(N)p FC(.)-246 4271
y
SDict begin H.S end
 -246 4271 a -246 4271 a
SDict begin 12 H.A end
 -246 4271 a -246 4271 a
SDict begin [/View [/XYZ H.V]/Dest (exo.34) cvn /DEST pdfmark end
 -246
4271 a 0 TeXcolorgray 110 x FE(Ex)o(er)o(cice)14 b(34)p
0 TeXcolorgray 41 w FC(P)n(our)23 b(obtenir)h(le)g(pr)q(ix)f(T)q(T)o
(C,)i(on)e(augmente)i(le)f(pr)q(ix)f(HT)h(de)f(10)i(\045)9
b(;)23 b(autr)o(ement)h(dit,)g(on)g(le)g(multiplie)i(par)d(1,10.)j(On)d
(peut)i(ainsi)-246 4481 y(compl\351ter)19 b(le)f(sch\351ma)g(:)p
0 TeXcolorgray 0 TeXcolorgray 1493 4663 2 2 v 1494 4664
162 4 v 1656 4663 2 2 v 1492 4766 4 103 v 1658 4766 V
1493 4769 2 2 v 1494 4770 162 4 v 1656 4769 2 2 v 1527
4740 a(?)9 b(?)g(?)p 1 0 0 TeXcolorrgb 1857 4611 a Fp(\243)17
b Fv(1,10)p 0 TeXcolorgray 1682 4656 4 4 v 1685 4654
V 1688 4653 V 1691 4652 V 1694 4651 V 1697 4649 V 1700
4648 V 1702 4647 V 1705 4646 V 1708 4644 V 1711 4643
V 1714 4642 V 1717 4641 V 1720 4640 V 1722 4639 V 1725
4638 V 1728 4637 V 1731 4636 V 1734 4635 V 1737 4634
V 1739 4633 V 1742 4632 V 1745 4631 V 1748 4630 V 1751
4629 V 1754 4628 V 1757 4627 V 1759 4626 V 1762 4625
V 1765 4624 V 1768 4623 V 1771 4622 V 1774 4621 V 1776
4621 V 1779 4620 V 1782 4619 V 1785 4618 V 1788 4617
V 1791 4617 V 1794 4616 V 1796 4615 V 1799 4615 V 1802
4614 V 1805 4613 V 1808 4612 V 1811 4612 V 1813 4611
V 1816 4611 V 1819 4610 V 1822 4609 V 1825 4609 V 1828
4608 V 1831 4608 V 1833 4607 V 1836 4607 V 1839 4606
V 1842 4606 V 1845 4605 V 1848 4605 V 1851 4604 V 1853
4604 V 2184 4648 a Fo(\()p Fn(\()p 2024 4604 V 2027 4604
V 2030 4605 V 2033 4605 V 2036 4606 V 2038 4606 V 2041
4607 V 2044 4607 V 2047 4608 V 2050 4608 V 2053 4609
V 2056 4609 V 2058 4610 V 2061 4611 V 2064 4611 V 2067
4612 V 2070 4612 V 2073 4613 V 2075 4614 V 2078 4615
V 2081 4615 V 2084 4616 V 2087 4617 V 2090 4617 V 2093
4618 V 2095 4619 V 2098 4620 V 2101 4621 V 2104 4621
V 2107 4622 V 2110 4623 V 2113 4624 V 2115 4625 V 2118
4626 V 2121 4627 V 2124 4628 V 2127 4629 V 2130 4630
V 2132 4631 V 2135 4632 V 2138 4633 V 2141 4634 V 2144
4635 V 2147 4636 V 2150 4637 V 2152 4638 V 2155 4639
V 2158 4640 V 2161 4641 V 2164 4642 V 2167 4643 V 2169
4644 V 2172 4646 V 2175 4647 V 2178 4648 V 2181 4649
V 2208 4659 2 2 v 2210 4660 189 4 v 2399 4659 2 2 v 2207
4770 4 111 v 2401 4770 V 2208 4773 2 2 v 2210 4774 189
4 v 2399 4773 2 2 v 2234 4734 a FC(4,95)p 0 0 1 TeXcolorrgb
1445 4945 a(pr)q(ix)g(HT)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
449 w(pr)q(ix)g(T)q(T)o(C)p 0 TeXcolorgray -246 5172
a(C)o(onclusion)j(:)d(???)c FB(\306)i FC(4,)8 b(95)i
FB(\245)g FC(1,)e(10)18 b FB(\306)c FC(4,)8 b(50,)19
b(donc)e(le)h(pr)q(ix)f(HT)h(est)g(de)f(4,50)i Fy(N)9
b FC(;)17 b(et)g(le)h(montant)h(de)e(la)g(TV)-5 b(A)19
b(\(la)e(somme)i(qui)f(r)o(evient)g(\340)f(l)o('\311)o(tat\))h(est)802
5338 y(montant)g(TV)-5 b(A)16 b FB(\306)e FC(montant)19
b(T)q(T)o(C)10 b FB(\241)g FC(montant)19 b(HT)c FB(\306)f
FC(4,)8 b(95)i FB(\241)g FC(4,)e(50)18 b FB(\306)c FC(0,)8
b(45)19 b Fy(N)p FC(.)-246 5546 y FE(N.B.)f FC(Il)e(est)h(totalement)i
(faux)e(de)f(pr)o(endr)o(e)g(10)h(\045)g(de)f(4,)8 b(95)18
b(pour)f(obtenir)g(le)g(montant)h(de)e(la)h(TV)-5 b(A.)18
b(Il)d(faut)j(d)n('abor)o(d)d(se)h(r)o(amener)i(au)e(pr)q(ix)h(HT)-8
b(,)16 b(puis)-246 5646 y(pr)o(endr)o(e)h(10)h(\045)f(de)g(ce)h(pr)q
(ix)f(HT)-8 b(.)-246 5724 y
SDict begin H.S end
 -246 5724 a -246 5724 a
SDict begin 12 H.A end
 -246
5724 a -246 5724 a
SDict begin [/View [/XYZ H.V]/Dest (exo.35) cvn /DEST pdfmark end
 -246 5724 a 0 TeXcolorgray 1909 5895
a FC(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.104) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray 83 x FE(Ex)o(er)o(cice)14
b(35)p 0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0
TeXcolorgray 45 w Fz(v)448 -151 y Fv(0)497 -163 y FB(\306)g
FC(4)k(et)h Fz(q)h FB(\306)14 b FC(5.)1743 126 y Fz(v)1786
138 y Fv(1)1835 126 y FB(\306)g FC(4)c FB(\243)g FC(5)16
b FB(\306)e FC(20)1743 251 y Fz(v)1786 263 y Fv(2)1835
251 y FB(\306)g FC(20)c FB(\243)g FC(5)16 b FB(\306)e
FC(100)1743 375 y Fz(v)1786 387 y Fv(3)1835 375 y FB(\306)g
FC(100)c FB(\243)g FC(5)17 b FB(\306)d FC(500.)-246 482
y
SDict begin H.S end
 -246 482 a -246 482 a
SDict begin 12 H.A end
 -246 482 a -246 482 a
SDict begin [/View [/XYZ H.V]/Dest (Item.105) cvn /DEST pdfmark end
 -246 482
a 0 TeXcolorgray -141 565 a FC(2.)p 0 TeXcolorgray 45
w Fz(v)7 577 y Fv(0)56 565 y FB(\306)g FC(12)k(et)i Fz(q)g
FB(\306)14 b FC(0,)8 b(5.)1755 854 y Fz(v)1798 866 y
Fv(1)1847 854 y FB(\306)14 b FC(12)c FB(\243)g FC(0,)e(5)17
b FB(\306)d FC(6)1755 979 y Fz(v)1798 991 y Fv(2)1847
979 y FB(\306)g FC(6)c FB(\243)g FC(0,)e(5)17 b FB(\306)d
FC(3)1755 1103 y Fz(v)1798 1115 y Fv(3)1847 1103 y FB(\306)g
FC(3)c FB(\243)g FC(0,)e(5)17 b FB(\306)d FC(1,)8 b(5.)-246
1209 y
SDict begin H.S end
 -246 1209 a -246 1209 a
SDict begin 12 H.A end
 -246 1209 a -246 1209
a
SDict begin [/View [/XYZ H.V]/Dest (Item.106) cvn /DEST pdfmark end
 -246 1209 a 0 TeXcolorgray -141 1293 a FC(3.)p 0 TeXcolorgray
45 w Fz(v)7 1305 y Fv(1)56 1293 y FB(\306)14 b FC(5)k(et)h
Fz(v)310 1305 y Fv(2)359 1293 y FB(\306)14 b FC(20.)p
0 TeXcolorgray 0 TeXcolorgray 1280 1544 2 2 v 1282 1545
136 4 v 1418 1544 2 2 v 1280 1647 4 103 v 1420 1647 V
1280 1650 2 2 v 1282 1651 136 4 v 1418 1650 2 2 v 1306
1621 a(???)p 1 0 0 TeXcolorrgb 1542 1485 a Fp(\243)q
Fs(q)p 0 TeXcolorgray 1445 1519 4 4 v 1447 1518 V 1449
1517 V 1450 1516 V 1452 1515 V 1454 1514 V 1456 1513
V 1458 1512 V 1459 1511 V 1461 1510 V 1463 1509 V 1465
1508 V 1467 1507 V 1468 1506 V 1470 1505 V 1472 1504
V 1474 1503 V 1476 1502 V 1478 1502 V 1479 1501 V 1481
1500 V 1483 1499 V 1485 1498 V 1487 1498 V 1488 1497
V 1490 1496 V 1492 1496 V 1494 1495 V 1496 1494 V 1497
1493 V 1499 1493 V 1501 1492 V 1503 1492 V 1505 1491
V 1506 1490 V 1508 1490 V 1510 1489 V 1512 1489 V 1514
1488 V 1516 1488 V 1517 1487 V 1519 1487 V 1521 1486
V 1523 1486 V 1525 1485 V 1526 1485 V 1528 1484 V 1530
1484 V 1532 1483 V 1534 1483 V 1535 1483 V 1537 1482
V 1539 1482 V 1744 1534 a Fo($)p Fn($)p 1622 1482 V 1624
1482 V 1626 1483 V 1628 1483 V 1630 1483 V 1631 1484
V 1633 1484 V 1635 1485 V 1637 1485 V 1639 1486 V 1640
1486 V 1642 1487 V 1644 1487 V 1646 1488 V 1648 1488
V 1649 1489 V 1651 1489 V 1653 1490 V 1655 1490 V 1657
1491 V 1659 1492 V 1660 1492 V 1662 1493 V 1664 1493
V 1666 1494 V 1668 1495 V 1669 1496 V 1671 1496 V 1673
1497 V 1675 1498 V 1677 1498 V 1678 1499 V 1680 1500
V 1682 1501 V 1684 1502 V 1686 1502 V 1687 1503 V 1689
1504 V 1691 1505 V 1693 1506 V 1695 1507 V 1697 1508
V 1698 1509 V 1700 1510 V 1702 1511 V 1704 1512 V 1706
1513 V 1707 1514 V 1709 1515 V 1711 1516 V 1713 1517
V 1715 1518 V 1716 1519 V 1718 1520 V 1720 1521 V 1722
1522 V 1724 1523 V 1725 1524 V 1727 1526 V 1729 1527
V 1731 1528 V 1733 1529 V 1735 1530 V 1736 1532 V 1738
1533 V 1740 1534 V 1742 1535 V 1768 1545 2 2 v 1770 1546
88 4 v 1858 1545 2 2 v 1767 1646 4 100 v 1859 1646 V
1768 1649 2 2 v 1770 1650 88 4 v 1858 1649 2 2 v 1794
1620 a FC(5)p 1 0 0 TeXcolorrgb 2003 1485 a Fp(\243)q
Fs(q)p 0 TeXcolorgray 1884 1534 4 4 v 1886 1533 V 1888
1532 V 1889 1530 V 1891 1529 V 1893 1528 V 1895 1527
V 1897 1526 V 1898 1524 V 1900 1523 V 1902 1522 V 1904
1521 V 1906 1520 V 1907 1519 V 1909 1518 V 1911 1517
V 1913 1516 V 1915 1515 V 1916 1514 V 1918 1513 V 1920
1512 V 1922 1511 V 1924 1510 V 1925 1509 V 1927 1508
V 1929 1507 V 1931 1506 V 1933 1505 V 1934 1504 V 1936
1503 V 1938 1502 V 1940 1502 V 1942 1501 V 1943 1500
V 1945 1499 V 1947 1498 V 1949 1498 V 1950 1497 V 1952
1496 V 1954 1496 V 1956 1495 V 1958 1494 V 1959 1493
V 1961 1493 V 1963 1492 V 1965 1492 V 1967 1491 V 1968
1490 V 1970 1490 V 1972 1489 V 1974 1489 V 1976 1488
V 1977 1488 V 1979 1487 V 1981 1487 V 1983 1486 V 1985
1486 V 1986 1485 V 1988 1485 V 1990 1484 V 1992 1484
V 1994 1483 V 1995 1483 V 1997 1483 V 1999 1482 V 2001
1482 V 2183 1520 a Fo(\045)p Fn(\045)p 2083 1482 V 2085
1482 V 2087 1483 V 2089 1483 V 2090 1483 V 2092 1484
V 2094 1484 V 2096 1485 V 2098 1485 V 2099 1486 V 2101
1486 V 2103 1487 V 2105 1487 V 2107 1488 V 2108 1488
V 2110 1489 V 2112 1489 V 2114 1490 V 2116 1490 V 2117
1491 V 2119 1492 V 2121 1492 V 2123 1493 V 2125 1493
V 2126 1494 V 2128 1495 V 2130 1496 V 2132 1496 V 2133
1497 V 2135 1498 V 2137 1498 V 2139 1499 V 2141 1500
V 2142 1501 V 2144 1502 V 2146 1502 V 2148 1503 V 2150
1504 V 2151 1505 V 2153 1506 V 2155 1507 V 2157 1508
V 2159 1509 V 2160 1510 V 2162 1511 V 2164 1512 V 2166
1513 V 2168 1514 V 2169 1515 V 2171 1516 V 2173 1517
V 2175 1518 V 2177 1519 V 2178 1520 V 2180 1521 V 2207
1545 2 2 v 2209 1546 128 4 v 2337 1545 2 2 v 2206 1646
4 100 v 2339 1646 V 2207 1649 2 2 v 2209 1650 128 4 v
2337 1649 2 2 v 2233 1620 a FC(20)p 1 0 0 TeXcolorrgb
2475 1485 a Fp(\243)q Fs(q)p 0 TeXcolorgray 2362 1524
4 4 v 2364 1523 V 2366 1522 V 2368 1521 V 2370 1520 V
2372 1519 V 2374 1518 V 2376 1517 V 2377 1516 V 2379
1515 V 2381 1514 V 2383 1513 V 2385 1512 V 2387 1511
V 2389 1510 V 2391 1509 V 2393 1508 V 2394 1507 V 2396
1506 V 2398 1505 V 2400 1504 V 2402 1503 V 2404 1502
V 2406 1502 V 2408 1501 V 2410 1500 V 2411 1499 V 2413
1498 V 2415 1498 V 2417 1497 V 2419 1496 V 2421 1496
V 2423 1495 V 2425 1494 V 2427 1493 V 2428 1493 V 2430
1492 V 2432 1492 V 2434 1491 V 2436 1490 V 2438 1490
V 2440 1489 V 2442 1489 V 2444 1488 V 2445 1488 V 2447
1487 V 2449 1487 V 2451 1486 V 2453 1486 V 2455 1485
V 2457 1485 V 2459 1484 V 2461 1484 V 2462 1483 V 2464
1483 V 2466 1483 V 2468 1482 V 2470 1482 V 2472 1482
V 2662 1520 a Fo(&)p Fn(&)p 2555 1482 V 2557 1482 V 2559
1482 V 2561 1483 V 2563 1483 V 2564 1483 V 2566 1484
V 2568 1484 V 2570 1485 V 2572 1485 V 2574 1486 V 2576
1486 V 2578 1487 V 2580 1487 V 2581 1488 V 2583 1488
V 2585 1489 V 2587 1489 V 2589 1490 V 2591 1490 V 2593
1491 V 2595 1492 V 2597 1492 V 2598 1493 V 2600 1493
V 2602 1494 V 2604 1495 V 2606 1496 V 2608 1496 V 2610
1497 V 2612 1498 V 2614 1498 V 2615 1499 V 2617 1500
V 2619 1501 V 2621 1502 V 2623 1502 V 2625 1503 V 2627
1504 V 2629 1505 V 2631 1506 V 2632 1507 V 2634 1508
V 2636 1509 V 2638 1510 V 2640 1511 V 2642 1512 V 2644
1513 V 2646 1514 V 2648 1515 V 2649 1516 V 2651 1517
V 2653 1518 V 2655 1519 V 2657 1520 V 2659 1521 V 2661
1522 V 2687 1544 2 2 v 2688 1545 136 4 v 2824 1544 2
2 v 2686 1647 4 103 v 2826 1647 V 2687 1650 2 2 v 2688
1651 136 4 v 2824 1650 2 2 v 2712 1621 a FC(???)p 0 0 1
TeXcolorrgb 1313 1806 a Fz(v)1356 1818 y Fv(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1776 1806 a Fz(v)1819 1818 y Fv(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2235 1806 a Fz(v)2278
1818 y Fv(2)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2719 1806
a Fz(v)2762 1818 y Fv(3)p 0 TeXcolorgray -38 1949 a FC(D)o('apr\350s)j
(le)h(sch\351ma)g(ci-dessus)h(:)1818 2049 y Fz(q)h FB(\306)14
b FC(20)c FB(\245)g FC(5)16 b FB(\306)f FC(4.)-38 2207
y(On)i(en)h(d\351duit)f(:)1769 2497 y Fz(v)1812 2509
y Fv(3)1861 2497 y FB(\306)d FC(20)c FB(\243)g FC(4)16
b FB(\306)f FC(80)1769 2621 y Fz(v)1812 2633 y Fv(0)1861
2621 y FB(\306)f FC(5)c FB(\245)g FC(4)16 b FB(\306)e
FC(1,)8 b(25.)-246 2727 y
SDict begin H.S end
 -246 2727 a -246 2727 a
SDict begin 12 H.A end
 -246
2727 a -246 2727 a
SDict begin [/View [/XYZ H.V]/Dest (Item.107) cvn /DEST pdfmark end
 -246 2727 a 0 TeXcolorgray -141 2811
a FC(4.)p 0 TeXcolorgray 45 w Fz(v)7 2823 y Fv(0)56 2811
y FB(\306)14 b FC(10)k(et)i Fz(v)351 2823 y Fv(1)400
2811 y FB(\306)14 b FC(6.)p 0 TeXcolorgray 0 TeXcolorgray
1524 3063 2 2 v 1526 3064 128 4 v 1654 3063 2 2 v 1523
3164 4 100 v 1656 3164 V 1524 3167 2 2 v 1526 3168 128
4 v 1654 3167 2 2 v 1550 3138 a(10)p 1 0 0 TeXcolorrgb
1780 3003 a Fp(\243)q Fs(q)p 0 TeXcolorgray 1680 3039
4 4 v 1682 3038 V 1684 3037 V 1686 3036 V 1687 3035 V
1689 3034 V 1691 3033 V 1693 3032 V 1695 3031 V 1696
3030 V 1698 3029 V 1700 3028 V 1702 3027 V 1704 3026
V 1705 3025 V 1707 3024 V 1709 3023 V 1711 3022 V 1713
3021 V 1714 3021 V 1716 3020 V 1718 3019 V 1720 3018
V 1722 3017 V 1723 3017 V 1725 3016 V 1727 3015 V 1729
3014 V 1731 3014 V 1732 3013 V 1734 3012 V 1736 3012
V 1738 3011 V 1739 3010 V 1741 3010 V 1743 3009 V 1745
3008 V 1747 3008 V 1748 3007 V 1750 3007 V 1752 3006
V 1754 3006 V 1756 3005 V 1757 3005 V 1759 3004 V 1761
3004 V 1763 3003 V 1765 3003 V 1766 3002 V 1768 3002
V 1770 3002 V 1772 3001 V 1774 3001 V 1775 3000 V 1777
3000 V 1980 3052 a Fo($)p Fn($)p 1860 3000 V 1861 3000
V 1863 3001 V 1865 3001 V 1867 3002 V 1869 3002 V 1870
3002 V 1872 3003 V 1874 3003 V 1876 3004 V 1878 3004
V 1879 3005 V 1881 3005 V 1883 3006 V 1885 3006 V 1887
3007 V 1888 3007 V 1890 3008 V 1892 3008 V 1894 3009
V 1896 3010 V 1897 3010 V 1899 3011 V 1901 3012 V 1903
3012 V 1905 3013 V 1906 3014 V 1908 3014 V 1910 3015
V 1912 3016 V 1913 3017 V 1915 3017 V 1917 3018 V 1919
3019 V 1921 3020 V 1922 3021 V 1924 3021 V 1926 3022
V 1928 3023 V 1930 3024 V 1931 3025 V 1933 3026 V 1935
3027 V 1937 3028 V 1939 3029 V 1940 3030 V 1942 3031
V 1944 3032 V 1946 3033 V 1948 3034 V 1949 3035 V 1951
3036 V 1953 3037 V 1955 3038 V 1957 3039 V 1958 3040
V 1960 3041 V 1962 3042 V 1964 3044 V 1966 3045 V 1967
3046 V 1969 3047 V 1971 3048 V 1973 3050 V 1974 3051
V 1976 3052 V 2004 3063 2 2 v 2005 3064 88 4 v 2093 3063
2 2 v 2003 3164 4 100 v 2095 3164 V 2004 3167 2 2 v 2005
3168 88 4 v 2093 3167 2 2 v 2029 3138 a FC(6)p 1 0 0
TeXcolorrgb 2241 3003 a Fp(\243)q Fs(q)p 0 TeXcolorgray
2119 3053 4 4 v 2120 3052 V 2122 3051 V 2124 3050 V 2126
3048 V 2128 3047 V 2129 3046 V 2131 3045 V 2133 3044
V 2135 3042 V 2137 3041 V 2139 3040 V 2140 3039 V 2142
3038 V 2144 3037 V 2146 3036 V 2148 3035 V 2149 3034
V 2151 3033 V 2153 3032 V 2155 3031 V 2157 3030 V 2158
3029 V 2160 3028 V 2162 3027 V 2164 3026 V 2166 3025
V 2168 3024 V 2169 3023 V 2171 3022 V 2173 3021 V 2175
3021 V 2177 3020 V 2178 3019 V 2180 3018 V 2182 3017
V 2184 3017 V 2186 3016 V 2187 3015 V 2189 3014 V 2191
3014 V 2193 3013 V 2195 3012 V 2196 3012 V 2198 3011
V 2200 3010 V 2202 3010 V 2204 3009 V 2206 3008 V 2207
3008 V 2209 3007 V 2211 3007 V 2213 3006 V 2215 3006
V 2216 3005 V 2218 3005 V 2220 3004 V 2222 3004 V 2224
3003 V 2225 3003 V 2227 3002 V 2229 3002 V 2231 3002
V 2233 3001 V 2234 3001 V 2236 3000 V 2238 3000 V 2419
3036 a Fo(\045)p Fn(\045)p 2321 3000 V 2323 3000 V 2325
3001 V 2327 3001 V 2329 3002 V 2330 3002 V 2332 3002
V 2334 3003 V 2336 3003 V 2338 3004 V 2339 3004 V 2341
3005 V 2343 3005 V 2345 3006 V 2347 3006 V 2349 3007
V 2350 3007 V 2352 3008 V 2354 3008 V 2356 3009 V 2358
3010 V 2359 3010 V 2361 3011 V 2363 3012 V 2365 3012
V 2367 3013 V 2368 3014 V 2370 3014 V 2372 3015 V 2374
3016 V 2376 3017 V 2377 3017 V 2379 3018 V 2381 3019
V 2383 3020 V 2385 3021 V 2387 3021 V 2388 3022 V 2390
3023 V 2392 3024 V 2394 3025 V 2396 3026 V 2397 3027
V 2399 3028 V 2401 3029 V 2403 3030 V 2405 3031 V 2406
3032 V 2408 3033 V 2410 3034 V 2412 3035 V 2414 3036
V 2415 3037 V 2443 3062 2 2 v 2444 3063 136 4 v 2580
3062 2 2 v 2442 3165 4 103 v 2583 3165 V 2443 3168 2
2 v 2444 3169 136 4 v 2580 3168 2 2 v 2468 3139 a FC(???)p
0 0 1 TeXcolorrgb 1553 3324 a Fz(v)1596 3336 y Fv(0)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2012 3324 a Fz(v)2055
3336 y Fv(1)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2475 3324
a Fz(v)2518 3336 y Fv(2)p 0 TeXcolorgray -38 3467 a FC(D)o('apr\350s)j
(le)h(sch\351ma)g(ci-dessus)h(:)1784 3567 y Fz(q)h FB(\306)14
b FC(6)c FB(\245)g FC(10)16 b FB(\306)e FC(0,)8 b(6,)-38
3712 y(puis)1755 3812 y Fz(v)1798 3824 y Fv(2)1847 3812
y FB(\306)14 b FC(6)c FB(\243)g FC(0,)e(6)17 b FB(\306)d
FC(3,)8 b(6.)-246 3889 y
SDict begin H.S end
 -246 3889 a -246 3889 a
SDict begin 12 H.A end
 -246
3889 a -246 3889 a
SDict begin [/View [/XYZ H.V]/Dest (exo.36) cvn /DEST pdfmark end
 -246 3889 a 0 TeXcolorgray 118 x FE(Ex)o(er)o(cice)
14 b(36)p 0 TeXcolorgray 41 w FC(On)i(place)h(1)8 b(000)18
b Fy(N)31 b FC(sur)16 b(un)g(compte)h(au)f(taux)h(d)n('int\351r\352t)g
(annuel)g(de)f(5)g(\045.)g(On)g(note)i Fz(v)2737 4019
y Fs(n)2796 4007 y FC(la)e(somme)h(sur)f(le)h(compte)g(apr\350s)f
Fz(n)k FC(ann\351es)-246 4107 y(\226)e(on)f(a)g(donc)g(en)h(par)q
(ticulier)i Fz(v)695 4119 y Fv(0)744 4107 y FB(\306)14
b FC(1)8 b(000.)-246 4137 y
SDict begin H.S end
 -246 4137 a -246 4137 a
SDict begin 12 H.A end
 -246
4137 a -246 4137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.108) cvn /DEST pdfmark end
 -246 4137 a 0 TeXcolorgray -141 4233
a FC(1.)p 0 TeXcolorgray 43 w(A)n(ugmenter)18 b(un)g(nombr)o(e)f(de)g
(5)h(\045)f(r)o(evient)h(\340)f(le)h(multiplier)i(par)d(1,05.)i(On)e
(peut)i(donc)e(compl\351ter)i(le)f(sch\351ma)g(:)p 0
TeXcolorgray 0 TeXcolorgray 1118 4406 2 2 v 1120 4407
221 4 v 1341 4406 2 2 v 1117 4506 4 100 v 1343 4506 V
1118 4509 2 2 v 1120 4510 221 4 v 1341 4509 2 2 v 1144
4481 a(1)12 b(000)p 1 0 0 TeXcolorrgb 1616 4353 a Fp(\243)p
Fv(1,05)p 0 TeXcolorgray 1368 4397 4 4 v 1369 4396 V
1371 4396 V 1373 4395 V 1375 4394 V 1377 4394 V 1378
4393 V 1380 4392 V 1382 4392 V 1384 4391 V 1386 4391
V 1387 4390 V 1389 4389 V 1391 4389 V 1393 4388 V 1395
4388 V 1396 4387 V 1398 4386 V 1400 4386 V 1402 4385
V 1404 4385 V 1405 4384 V 1407 4384 V 1409 4383 V 1411
4382 V 1413 4382 V 1414 4381 V 1416 4381 V 1418 4380
V 1420 4380 V 1422 4379 V 1423 4379 V 1425 4378 V 1427
4378 V 1429 4377 V 1431 4377 V 1432 4376 V 1434 4376
V 1436 4375 V 1438 4375 V 1440 4374 V 1441 4373 V 1443
4373 V 1445 4373 V 1447 4372 V 1449 4372 V 1450 4371
V 1452 4371 V 1454 4370 V 1456 4370 V 1458 4369 V 1459
4369 V 1461 4368 V 1463 4368 V 1465 4367 V 1467 4367
V 1468 4366 V 1470 4366 V 1472 4366 V 1474 4365 V 1476
4365 V 1477 4364 V 1479 4364 V 1481 4363 V 1483 4363
V 1484 4363 V 1486 4362 V 1488 4362 V 1490 4361 V 1492
4361 V 1493 4361 V 1495 4360 V 1497 4360 V 1499 4359
V 1501 4359 V 1502 4359 V 1504 4358 V 1506 4358 V 1508
4358 V 1510 4357 V 1511 4357 V 1513 4356 V 1515 4356
V 1517 4356 V 1519 4355 V 1520 4355 V 1522 4355 V 1524
4354 V 1526 4354 V 1528 4354 V 1529 4353 V 1531 4353
V 1533 4353 V 1535 4353 V 1537 4352 V 1538 4352 V 1540
4352 V 1542 4351 V 1544 4351 V 1546 4351 V 1547 4350
V 1549 4350 V 1551 4350 V 1553 4350 V 1555 4349 V 1556
4349 V 1558 4349 V 1560 4349 V 1562 4348 V 1564 4348
V 1565 4348 V 1567 4348 V 1569 4347 V 1571 4347 V 1573
4347 V 1574 4347 V 1576 4346 V 1578 4346 V 1580 4346
V 1582 4346 V 1583 4345 V 1585 4345 V 1587 4345 V 1589
4345 V 1591 4345 V 1592 4344 V 1594 4344 V 1596 4344
V 1598 4344 V 1600 4344 V 1601 4344 V 1603 4343 V 1605
4343 V 1607 4343 V 1608 4343 V 1610 4343 V 1612 4343
V 1614 4342 V 2014 4396 a Fo(\))p Fn(\))p 1765 4342 V
1767 4343 V 1768 4343 V 1770 4343 V 1772 4343 V 1774
4343 V 1776 4343 V 1777 4344 V 1779 4344 V 1781 4344
V 1783 4344 V 1785 4344 V 1786 4344 V 1788 4345 V 1790
4345 V 1792 4345 V 1794 4345 V 1795 4345 V 1797 4346
V 1799 4346 V 1801 4346 V 1803 4346 V 1804 4347 V 1806
4347 V 1808 4347 V 1810 4347 V 1812 4348 V 1813 4348
V 1815 4348 V 1817 4348 V 1819 4349 V 1821 4349 V 1822
4349 V 1824 4349 V 1826 4350 V 1828 4350 V 1830 4350
V 1831 4350 V 1833 4351 V 1835 4351 V 1837 4351 V 1839
4352 V 1840 4352 V 1842 4352 V 1844 4353 V 1846 4353
V 1847 4353 V 1849 4353 V 1851 4354 V 1853 4354 V 1855
4354 V 1856 4355 V 1858 4355 V 1860 4355 V 1862 4356
V 1864 4356 V 1865 4356 V 1867 4357 V 1869 4357 V 1871
4358 V 1873 4358 V 1874 4358 V 1876 4359 V 1878 4359
V 1880 4359 V 1882 4360 V 1883 4360 V 1885 4361 V 1887
4361 V 1889 4361 V 1891 4362 V 1892 4362 V 1894 4363
V 1896 4363 V 1898 4363 V 1900 4364 V 1901 4364 V 1903
4365 V 1905 4365 V 1907 4366 V 1909 4366 V 1910 4366
V 1912 4367 V 1914 4367 V 1916 4368 V 1918 4368 V 1919
4369 V 1921 4369 V 1923 4370 V 1925 4370 V 1927 4371
V 1928 4371 V 1930 4372 V 1932 4372 V 1934 4373 V 1936
4373 V 1937 4373 V 1939 4374 V 1941 4375 V 1943 4375
V 1945 4376 V 1946 4376 V 1948 4377 V 1950 4377 V 1952
4378 V 1954 4378 V 1955 4379 V 1957 4379 V 1959 4380
V 1961 4380 V 1962 4381 V 1964 4381 V 1966 4382 V 1968
4382 V 1970 4383 V 1971 4384 V 1973 4384 V 1975 4385
V 1977 4385 V 1979 4386 V 1980 4386 V 1982 4387 V 1984
4388 V 1986 4388 V 1988 4389 V 1989 4389 V 1991 4390
V 1993 4391 V 1995 4391 V 1997 4392 V 1998 4392 V 2000
4393 V 2002 4394 V 2004 4394 V 2006 4395 V 2007 4396
V 2009 4396 V 2011 4397 V 2038 4406 2 2 v 2040 4407 221
4 v 2261 4406 2 2 v 2037 4506 4 100 v 2263 4506 V 2038
4509 2 2 v 2040 4510 221 4 v 2261 4509 2 2 v 2064 4481
a FC(1)g(050)p 1 0 0 TeXcolorrgb 2488 4353 a Fp(\243)p
Fv(1,05)p 0 TeXcolorgray 2288 4391 4 4 v 2289 4391 V
2291 4390 V 2292 4389 V 2294 4389 V 2296 4388 V 2297
4388 V 2299 4387 V 2300 4386 V 2302 4386 V 2304 4385
V 2305 4385 V 2307 4384 V 2308 4384 V 2310 4383 V 2312
4382 V 2313 4382 V 2315 4381 V 2317 4381 V 2318 4380
V 2320 4380 V 2321 4379 V 2323 4379 V 2325 4378 V 2326
4378 V 2328 4377 V 2329 4377 V 2331 4376 V 2333 4376
V 2334 4375 V 2336 4375 V 2337 4374 V 2339 4373 V 2341
4373 V 2342 4373 V 2344 4372 V 2345 4372 V 2347 4371
V 2349 4371 V 2350 4370 V 2352 4370 V 2353 4369 V 2355
4369 V 2357 4368 V 2358 4368 V 2360 4367 V 2362 4367
V 2363 4366 V 2365 4366 V 2366 4366 V 2368 4365 V 2370
4365 V 2371 4364 V 2373 4364 V 2374 4363 V 2376 4363
V 2378 4363 V 2381 4362 V 2384 4361 V 2387 4360 V 2390
4359 V 2394 4359 V 2397 4358 V 2400 4357 V 2403 4356
V 2406 4356 V 2410 4355 V 2413 4354 V 2416 4354 V 2419
4353 V 2423 4353 V 2426 4352 V 2429 4351 V 2432 4351
V 2435 4350 V 2439 4350 V 2442 4349 V 2445 4349 V 2448
4348 V 2451 4348 V 2455 4347 V 2458 4347 V 2461 4346
V 2464 4346 V 2468 4345 V 2471 4345 V 2474 4344 V 2477
4344 V 2480 4344 V 2484 4343 V 2794 4375 a Fo(*)p Fn(*)p
2638 4343 V 2641 4344 V 2644 4344 V 2648 4344 V 2651
4345 V 2654 4345 V 2657 4346 V 2660 4346 V 2664 4347
V 2667 4347 V 2670 4348 V 2673 4348 V 2676 4349 V 2680
4349 V 2683 4350 V 2686 4350 V 2689 4351 V 2693 4351
V 2696 4352 V 2699 4353 V 2702 4353 V 2705 4354 V 2709
4354 V 2712 4355 V 2715 4356 V 2718 4356 V 2721 4357
V 2725 4358 V 2728 4359 V 2731 4359 V 2734 4360 V 2738
4361 V 2741 4362 V 2744 4363 V 2746 4363 V 2747 4363
V 2749 4364 V 2750 4364 V 2752 4365 V 2754 4365 V 2755
4366 V 2757 4366 V 2758 4366 V 2760 4367 V 2762 4367
V 2763 4368 V 2765 4368 V 2766 4369 V 2768 4369 V 2770
4370 V 2771 4370 V 2773 4371 V 2775 4371 V 2776 4372
V 2778 4372 V 2779 4373 V 2781 4373 V 2783 4373 V 2784
4374 V 2786 4375 V 2787 4375 V 2789 4376 V 2791 4376
V 2792 4377 V 2810 4401 2 2 v 2812 4402 323 4 v 3135
4401 2 2 v 2809 4512 4 111 v 3136 4512 V 2810 4515 2
2 v 2812 4516 323 4 v 3135 4515 2 2 v 2836 4476 a FC(1)g(102,50)p
0 0 1 TeXcolorrgb 938 4696 a(Placement)18 b(initial)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 1972 4687 a(A)o(pr\350s)f(1)h(an)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 448 w(A)o(pr\350s)f(2)h(ans)p
0 TeXcolorgray -38 4895 a(C)o(onclusion)h(:)p 0 TeXcolorgray
7 5008 a(\225)p 0 TeXcolorgray 42 w(apr\350s)f(1)f(an,)h(on)f(a)h(1)12
b(050)19 b Fy(N)34 b FC(sur)18 b(le)f(compte)9 b(;)p
0 TeXcolorgray 7 5108 a(\225)p 0 TeXcolorgray 42 w(apr\350s)18
b(2)f(ans)o(,)h(on)g(a)f(1)12 b(102,50)21 b Fy(N)34 b
FC(sur)17 b(le)h(compte)o(.)-38 5221 y(A)-5 b(vec)17
b(les)h(notations)h(de)e(l)o('\351nonc\351)i(:)1828 5397
y Fz(v)1871 5409 y Fv(0)1920 5397 y FB(\306)14 b FC(1)8
b(000)1828 5521 y Fz(v)1871 5533 y Fv(1)1920 5521 y FB(\306)14
b FC(1)8 b(050)1828 5646 y Fz(v)1871 5658 y Fv(2)1920
5646 y FB(\306)14 b FC(1)8 b(102,)s(50.)p 0 TeXcolorgray
1909 5895 a(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.109) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(2.)p 0 TeXcolorgray 43 w(La)17 b(suite)k Fz(v)j
FC(est)18 b(une)g(suite)h(g\351om\351tr)q(ique)f(de)f(r)o(aison)j
Fz(q)g FB(\306)14 b FC(1,)8 b(05.)-38 -22 y FE(R)o(emarque)15
b(:)k FC(\300)e(la)i(question)h(\253)14 b(quelle)20 b(est)g(la)e(natur)
o(e)h(de)f(la)h(suite)9 b(?)15 b(\273,)j(il)h(faut)h(r\351pondr)o(e)e
(\253)c(ar)q(ithm\351tique)i(\273)37 b(ou)18 b(\253)c(g\351om\351tr)q
(ique)i(\273)36 b(selon)20 b(le)-38 77 y(cas)o(,)e(mais)g(aussi)g
(donner)f(sa)h(r)o(aison.)-246 95 y
SDict begin H.S end
 -246 95 a -246 95
a
SDict begin 12 H.A end
 -246 95 a -246 95 a
SDict begin [/View [/XYZ H.V]/Dest (Item.110) cvn /DEST pdfmark end
 -246 95 a 0 TeXcolorgray -141 192
a FC(3.)p 0 TeXcolorgray 43 w(Dans)f(la)g(cellule)i(C2,)f(il)g(faut)g
(r)o(entr)o(er)e(la)i(for)q(mule)1900 291 y(=B2*1,05)-246
327 y
SDict begin H.S end
 -246 327 a -246 327 a
SDict begin 12 H.A end
 -246 327 a -246 327 a
SDict begin [/View [/XYZ H.V]/Dest (Item.111) cvn /DEST pdfmark end
 -246
327 a 0 TeXcolorgray -141 424 a FC(4.)p 0 TeXcolorgray
43 w(On)f(d\351ter)q(mine)h(la)g(somme)h(sur)e(le)h(compte)g(apr\350s)g
(10)g(ans)g(de)f(deux)h(fa\347ons)g(diff\351r)o(entes)o(.)p
0 TeXcolorgray 7 531 a(\225)p 0 TeXcolorgray 42 w(A)-5
b(vec)23 b(le)i(tableur)f(:)g(on)f(\351tir)o(e)h(les)h(cellules)g(C1)g
(et)f(C2)g(vers)g(la)g(droite)f(jusqu)n('\340)i(L1)f(et)g(L2,)h(qui)f
(corr)o(espondent)h(\340)e(l)o('ann\351e)i Fz(n)g FB(\306)c
FC(10.)k(On)80 630 y(obtient)18 b(1)12 b(628,89)21 b
Fy(N)p FC(.)p 0 TeXcolorgray 0 TeXcolorgray 80 686 4066
4 v 80 786 4 100 v 223 786 V 527 756 a(A)p 876 786 V
604 w(B)p 1530 786 V 603 w(C)p 2183 786 V 583 w FB(\242)8
b(\242)g(\242)p 2836 786 V 593 w FC(K)p 3489 786 V 607
w(L)p 4142 786 V 80 789 4066 4 v 80 888 4 100 v 133 859
a(1)p 223 888 V 353 w Fz(n)p 876 888 V 611 w FC(0)p 1530
888 V 614 w(1)p 2183 888 V 589 w FB(\242)g(\242)g(\242)p
2836 888 V 598 w FC(9)p 3489 888 V 593 w(10)p 4142 888
V 80 892 4066 4 v 80 991 4 100 v 133 962 a(2)p 223 991
V 337 w Fz(v)553 974 y Fs(n)p 876 991 V 1124 962 a FC(1000)p
1530 991 V 493 w(1050)p 2183 991 V 530 w FB(\242)g(\242)g(\242)p
2836 991 V 487 w FC(1551,33)p 3489 991 V 393 w(1628,89)p
4142 991 V 80 995 4066 4 v 0 TeXcolorgray 7 1093 a(\225)p
0 TeXcolorgray 42 w(P)m(ar)17 b(le)g(calcul)h(:)g(la)f(somme)i(sur)f
(le)f(compte)i(apr\350s)f(10)g(ans)g(est)1026 1235 y
Fz(v)1069 1247 y Fv(10)1149 1235 y FB(\306)c FC(1)8 b(000)g
FB(\243)p FC(1,)g(05)i FB(\243)g FC(1,)e(05)j FB(\243)f(\242)e(\242)g
(\242)17 b(\243)10 b FC(1,)e(05)1394 1280 y Fm(|)p 1428
1280 337 10 v 337 w({z)p 1833 1280 V 337 w(})1717 1361
y Fv(10)13 b(fois)2221 1235 y FB(\306)h FC(1)8 b(000)i
FB(\243)g FC(1,)e(05)2681 1201 y Fv(10)2766 1235 y FB(\274)14
b FC(1)8 b(628,)r(89)18 b Fy(N)p FC(.)-246 1411 y
SDict begin H.S end
 -246
1411 a -246 1411 a
SDict begin 12 H.A end
 -246 1411 a -246 1411 a
SDict begin [/View [/XYZ H.V]/Dest (exo.37) cvn /DEST pdfmark end
 -246 1411
a -246 1436 a
SDict begin H.S end
 -246 1436 a -246 1436 a
SDict begin 12 H.A end
 -246 1436 a -246
1436 a
SDict begin [/View [/XYZ H.V]/Dest (Item.112) cvn /DEST pdfmark end
 -246 1436 a 0 TeXcolorgray 73 x FE(Ex)o(er)o(cice)c(37)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(100)19 b(\045)10 b FB(\241)g FC(12)18 b(\045)c FB(\306)g
FC(88)19 b(\045)14 b FB(\306)g FC(0,)8 b(88,)19 b(donc)e(pour)h
(diminuer)h(un)e(nombr)o(e)g(de)h(12)g(\045,)f(il)h(faut)g(le)g
(multiplier)i(par)d(0,88.)-38 1649 y(P)n(our)g(d\351ter)q(miner)h(le)f
(pr)q(ix)h(du)f(livr)o(e)h(en)f(2010)j(\(donc)c(apr\350s)i(5)g(ans\),)f
(on)h(peut)g(utiliser)h(un)f(diagr)o(amme)g(:)p 0 TeXcolorgray
0 TeXcolorgray 418 1798 2 2 v 419 1799 128 4 v 547 1798
2 2 v 417 1898 4 100 v 549 1898 V 418 1901 2 2 v 419
1902 128 4 v 547 1901 2 2 v 444 1873 a(50)p 1 0 0 TeXcolorrgb
723 1745 a Fp(\243)p Fv(0,88)p 0 TeXcolorgray 573 1791
4 4 v 576 1789 V 578 1788 V 580 1787 V 583 1786 V 585
1784 V 588 1783 V 590 1782 V 593 1781 V 595 1780 V 598
1778 V 600 1777 V 603 1776 V 605 1775 V 607 1774 V 610
1773 V 612 1772 V 615 1771 V 617 1770 V 620 1768 V 622
1767 V 625 1766 V 627 1765 V 630 1764 V 632 1763 V 634
1763 V 637 1762 V 639 1761 V 642 1760 V 644 1759 V 647
1758 V 649 1757 V 652 1756 V 654 1755 V 657 1755 V 659
1754 V 661 1753 V 664 1752 V 666 1751 V 669 1751 V 671
1750 V 674 1749 V 676 1748 V 679 1748 V 681 1747 V 684
1746 V 686 1746 V 688 1745 V 691 1744 V 693 1744 V 696
1743 V 698 1743 V 701 1742 V 703 1742 V 706 1741 V 708
1740 V 710 1740 V 713 1739 V 715 1739 V 718 1738 V 720
1738 V 1022 1789 a Fo(&)p Fn(&)p 872 1738 V 875 1738
V 877 1739 V 880 1739 V 882 1740 V 885 1740 V 887 1741
V 890 1742 V 892 1742 V 894 1743 V 897 1743 V 899 1744
V 902 1744 V 904 1745 V 907 1746 V 909 1746 V 912 1747
V 914 1748 V 917 1748 V 919 1749 V 921 1750 V 924 1751
V 926 1751 V 929 1752 V 931 1753 V 934 1754 V 936 1755
V 939 1755 V 941 1756 V 943 1757 V 946 1758 V 948 1759
V 951 1760 V 953 1761 V 956 1762 V 958 1763 V 961 1763
V 963 1764 V 966 1765 V 968 1766 V 970 1767 V 973 1768
V 975 1770 V 978 1771 V 980 1772 V 983 1773 V 985 1774
V 988 1775 V 990 1776 V 993 1777 V 995 1778 V 997 1780
V 1000 1781 V 1002 1782 V 1005 1783 V 1007 1784 V 1010
1786 V 1012 1787 V 1015 1788 V 1017 1789 V 1020 1791
V 1046 1798 2 2 v 1047 1799 128 4 v 1175 1798 2 2 v 1045
1898 4 100 v 1177 1898 V 1046 1901 2 2 v 1047 1902 128
4 v 1175 1901 2 2 v 1071 1873 a FC(44)p 1 0 0 TeXcolorrgb
1351 1745 a Fp(\243)p Fv(0,88)p 0 TeXcolorgray 1201 1791
4 4 v 1203 1789 V 1206 1788 V 1208 1787 V 1211 1786 V
1213 1784 V 1216 1783 V 1218 1782 V 1221 1781 V 1223
1780 V 1226 1778 V 1228 1777 V 1230 1776 V 1233 1775
V 1235 1774 V 1238 1773 V 1240 1772 V 1243 1771 V 1245
1770 V 1248 1768 V 1250 1767 V 1253 1766 V 1255 1765
V 1257 1764 V 1260 1763 V 1262 1763 V 1265 1762 V 1267
1761 V 1270 1760 V 1272 1759 V 1275 1758 V 1277 1757
V 1280 1756 V 1282 1755 V 1284 1755 V 1287 1754 V 1289
1753 V 1292 1752 V 1294 1751 V 1297 1751 V 1299 1750
V 1302 1749 V 1304 1748 V 1306 1748 V 1309 1747 V 1311
1746 V 1314 1746 V 1316 1745 V 1319 1744 V 1321 1744
V 1324 1743 V 1326 1743 V 1329 1742 V 1331 1742 V 1333
1741 V 1336 1740 V 1338 1740 V 1341 1739 V 1343 1739
V 1346 1738 V 1348 1738 V 1602 1767 a Fo(\()p Fn(\()p
1500 1738 V 1503 1738 V 1505 1739 V 1508 1739 V 1510
1740 V 1513 1740 V 1515 1741 V 1517 1742 V 1520 1742
V 1522 1743 V 1525 1743 V 1527 1744 V 1530 1744 V 1532
1745 V 1535 1746 V 1537 1746 V 1540 1747 V 1542 1748
V 1544 1748 V 1547 1749 V 1549 1750 V 1552 1751 V 1554
1751 V 1557 1752 V 1559 1753 V 1562 1754 V 1564 1755
V 1566 1755 V 1569 1756 V 1571 1757 V 1574 1758 V 1576
1759 V 1579 1760 V 1581 1761 V 1584 1762 V 1586 1763
V 1589 1763 V 1591 1764 V 1593 1765 V 1596 1766 V 1598
1767 V 1601 1768 V 1623 1793 2 2 v 1625 1794 229 4 v
1854 1793 2 2 v 1622 1904 4 111 v 1856 1904 V 1623 1907
2 2 v 1625 1908 229 4 v 1854 1907 2 2 v 1649 1868 a FC(38,72)p
1 0 0 TeXcolorrgb 1979 1745 a Fp(\243)p Fv(0,88)p 0 TeXcolorgray
1876 1768 4 4 v 1878 1767 V 1880 1766 V 1883 1765 V 1885
1764 V 1888 1763 V 1890 1763 V 1893 1762 V 1895 1761
V 1898 1760 V 1900 1759 V 1903 1758 V 1905 1757 V 1907
1756 V 1910 1755 V 1912 1755 V 1915 1754 V 1917 1753
V 1920 1752 V 1922 1751 V 1925 1751 V 1927 1750 V 1929
1749 V 1932 1748 V 1934 1748 V 1937 1747 V 1939 1746
V 1942 1746 V 1944 1745 V 1947 1744 V 1949 1744 V 1952
1743 V 1954 1743 V 1956 1742 V 1959 1742 V 1961 1741
V 1964 1740 V 1966 1740 V 1969 1739 V 1971 1739 V 1974
1738 V 1976 1738 V 2230 1767 a Fo(\()p Fn(\()p 2128 1738
V 2131 1738 V 2133 1739 V 2136 1739 V 2138 1740 V 2140
1740 V 2143 1741 V 2145 1742 V 2148 1742 V 2150 1743
V 2153 1743 V 2155 1744 V 2158 1744 V 2160 1745 V 2162
1746 V 2165 1746 V 2167 1747 V 2170 1748 V 2172 1748
V 2175 1749 V 2177 1750 V 2180 1751 V 2182 1751 V 2185
1752 V 2187 1753 V 2189 1754 V 2192 1755 V 2194 1755
V 2197 1756 V 2199 1757 V 2202 1758 V 2204 1759 V 2207
1760 V 2209 1761 V 2212 1762 V 2214 1763 V 2216 1763
V 2219 1764 V 2221 1765 V 2224 1766 V 2226 1767 V 2229
1768 V 2251 1793 2 2 v 2252 1794 229 4 v 2481 1793 2
2 v 2250 1904 4 111 v 2484 1904 V 2251 1907 2 2 v 2252
1908 229 4 v 2481 1907 2 2 v 2277 1868 a FC(34,07)p 1 0 0
TeXcolorrgb 2607 1745 a Fp(\243)p Fv(0,88)p 0 TeXcolorgray
2503 1768 4 4 v 2506 1767 V 2508 1766 V 2511 1765 V 2513
1764 V 2516 1763 V 2518 1763 V 2521 1762 V 2523 1761
V 2525 1760 V 2528 1759 V 2530 1758 V 2533 1757 V 2535
1756 V 2538 1755 V 2540 1755 V 2543 1754 V 2545 1753
V 2548 1752 V 2550 1751 V 2552 1751 V 2555 1750 V 2557
1749 V 2560 1748 V 2562 1748 V 2565 1747 V 2567 1746
V 2570 1746 V 2572 1745 V 2575 1744 V 2577 1744 V 2579
1743 V 2582 1743 V 2584 1742 V 2587 1742 V 2589 1741
V 2592 1740 V 2594 1740 V 2597 1739 V 2599 1739 V 2602
1738 V 2604 1738 V 2858 1767 a Fo(\()p Fn(\()p 2756 1738
V 2758 1738 V 2761 1739 V 2763 1739 V 2766 1740 V 2768
1740 V 2771 1741 V 2773 1742 V 2776 1742 V 2778 1743
V 2781 1743 V 2783 1744 V 2785 1744 V 2788 1745 V 2790
1746 V 2793 1746 V 2795 1747 V 2798 1748 V 2800 1748
V 2803 1749 V 2805 1750 V 2808 1751 V 2810 1751 V 2812
1752 V 2815 1753 V 2817 1754 V 2820 1755 V 2822 1755
V 2825 1756 V 2827 1757 V 2830 1758 V 2832 1759 V 2835
1760 V 2837 1761 V 2839 1762 V 2842 1763 V 2844 1763
V 2847 1764 V 2849 1765 V 2852 1766 V 2854 1767 V 2857
1768 V 2879 1793 2 2 v 2880 1794 229 4 v 3109 1793 2
2 v 2878 1904 4 111 v 3112 1904 V 2879 1907 2 2 v 2880
1908 229 4 v 3109 1907 2 2 v 2904 1868 a FC(29,98)p 1 0 0
TeXcolorrgb 3235 1745 a Fp(\243)p Fv(0,88)p 0 TeXcolorgray
3131 1768 4 4 v 3134 1767 V 3136 1766 V 3139 1765 V 3141
1764 V 3144 1763 V 3146 1763 V 3148 1762 V 3151 1761
V 3153 1760 V 3156 1759 V 3158 1758 V 3161 1757 V 3163
1756 V 3166 1755 V 3168 1755 V 3171 1754 V 3173 1753
V 3175 1752 V 3178 1751 V 3180 1751 V 3183 1750 V 3185
1749 V 3188 1748 V 3190 1748 V 3193 1747 V 3195 1746
V 3198 1746 V 3200 1745 V 3202 1744 V 3205 1744 V 3207
1743 V 3210 1743 V 3212 1742 V 3215 1742 V 3217 1741
V 3220 1740 V 3222 1740 V 3225 1739 V 3227 1739 V 3229
1738 V 3232 1738 V 3486 1767 a Fo(\()p Fn(\()p 3384 1738
V 3386 1738 V 3389 1739 V 3391 1739 V 3394 1740 V 3396
1740 V 3399 1741 V 3401 1742 V 3404 1742 V 3406 1743
V 3408 1743 V 3411 1744 V 3413 1744 V 3416 1745 V 3418
1746 V 3421 1746 V 3423 1747 V 3426 1748 V 3428 1748
V 3431 1749 V 3433 1750 V 3435 1751 V 3438 1751 V 3440
1752 V 3443 1753 V 3445 1754 V 3448 1755 V 3450 1755
V 3453 1756 V 3455 1757 V 3458 1758 V 3460 1759 V 3462
1760 V 3465 1761 V 3467 1762 V 3470 1763 V 3472 1763
V 3475 1764 V 3477 1765 V 3480 1766 V 3482 1767 V 3485
1768 V 3507 1793 2 2 v 3508 1794 229 4 v 3737 1793 2
2 v 3506 1904 4 111 v 3740 1904 V 3507 1907 2 2 v 3508
1908 229 4 v 3737 1907 2 2 v 3532 1868 a FC(26,39)p 0 0 1
TeXcolorrgb 344 2079 a(Ann\351e)g(0)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(1)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(2)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(3)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(4)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 349 w(Ann\351e)g(5)p 0 TeXcolorgray
-38 2232 a(Le)g(plus)g(r)o(apide)g(cependant,)h(c)n('est)e(de)h(fair)o
(e)f(dir)o(ectement)h(le)g(calcul)g(:)1207 2439 y(50)8
b FB(\243)p FC(0,)g(88)i FB(\243)g FC(0,)e(88)i FB(\243)g(\242)e(\242)g
(\242)17 b(\243)10 b FC(0,)e(88)1295 2484 y Fm(|)p 1329
2484 337 10 v 337 w({z)p 1734 2484 V 337 w(})1633 2564
y Fv(5)k(fois)2121 2439 y FB(\306)i FC(50)c FB(\243)g
FC(0,)e(88)2493 2404 y Fv(5)2546 2439 y FB(\274)14 b
FC(26,)8 b(39)19 b Fy(N)p FC(.)-38 2670 y(C)o(onclusion)g(:)f(le)f(pr)q
(ix)h(du)f(livr)o(e)h(en)f(2010)i(est)f(26,39)i Fy(N)p
FC(.)-246 2695 y
SDict begin H.S end
 -246 2695 a -246 2695 a
SDict begin 12 H.A end
 -246 2695 a
-246 2695 a
SDict begin [/View [/XYZ H.V]/Dest (Item.113) cvn /DEST pdfmark end
 -246 2695 a 0 TeXcolorgray -141 2785 a FC(2.)p
0 TeXcolorgray 43 w(On)g(r)o(entr)o(e)f(les)i(valeurs)g(initiales)h
(2005)h(et)d(50)h(dans)f(la)h(colonne)g(B)o(,)f(puis)h(on)g(r)o(entr)o
(e)e(les)i(for)q(mules)g(ci-dessous)h(dans)e(la)g(colonne)h(C,)g(que)
-38 2884 y(l)o('on)d(\351tir)o(e)g(vers)f(la)h(droite)o(.)p
0 TeXcolorgray 0 TeXcolorgray -38 2959 4184 4 v -38 3059
4 100 v 105 3059 V 587 3029 a(A)p 1115 3059 V 960 w(B)p
2124 3059 V 959 w(C)p 3133 3059 V 939 w FB(\242)8 b(\242)g(\242)p
4142 3059 V -38 3062 4184 4 v -38 3162 4 100 v 15 3132
a FC(1)p 105 3162 V 446 w(Ann\351e)p 1115 3162 V 818
w(2005)p 2124 3162 V 821 w(=B1+1)p 3133 3162 V 857 w
FB(\242)g(\242)g(\242)p 4142 3162 V -38 3165 4184 4 v
-38 3265 4 100 v 15 3235 a FC(2)p 105 3265 V 489 w(P)o(r)q(ix)p
1115 3265 V 901 w(50)p 2124 3265 V 817 w(=B2*0,88)p 3133
3265 V 814 w FB(\242)g(\242)g(\242)p 4142 3265 V -38
3268 4184 4 v -38 3396 a FC(On)17 b(\351tir)o(e)h(jusqu)n('\340)g
(obtenir)g(un)g(pr)q(ix)f(inf\351r)q(ieur)h(\340)f(10)h
Fy(N)f FC(:)p 0 TeXcolorgray 0 TeXcolorgray -38 3490
V -38 3589 4 100 v 105 3589 V 419 3559 a(A)p 778 3589
V 624 w(B)p 1451 3589 V 622 w(C)p 2124 3589 V 603 w FB(\242)8
b(\242)g(\242)p 2797 3589 V 608 w FC(N)p 3470 3589 V
613 w(O)p 4142 3589 V -38 3593 4184 4 v -38 3692 4 100
v 15 3662 a(1)p 105 3692 V 278 w(Ann\351e)p 778 3692
V 481 w(2005)p 1451 3692 V 513 w(2006)p 2124 3692 V 550
w FB(\242)g(\242)g(\242)p 2797 3692 V 557 w FC(2017)p
3470 3692 V 513 w(2018)p 4142 3692 V -38 3696 4184 4
v -38 3795 4 100 v 15 3765 a(2)p 105 3795 V 321 w(P)o(r)q(ix)p
778 3795 V 565 w(50)p 1451 3795 V 593 w(44)p 2124 3795
V 589 w FB(\242)g(\242)g(\242)p 2797 3795 V 547 w FC(10,78)p
3470 3795 V 513 w(9,49)p 4142 3795 V -38 3799 4184 4
v -38 3927 a(C)o(onclusion)19 b(:)f(c)n('est)f(en)h(2018)h(que)f(le)g
(pr)q(ix)f(du)h(livr)o(e)f(descendr)o(a)h(pour)f(la)h(pr)o(emi\350r)o
(e)f(fois)i(en-dessous)g(de)e(10)h Fy(N)p FC(.)-246 3998
y
SDict begin H.S end
 -246 3998 a -246 3998 a
SDict begin 12 H.A end
 -246 3998 a -246 3998 a
SDict begin [/View [/XYZ H.V]/Dest (exo.38) cvn /DEST pdfmark end
 -246
3998 a -246 4012 a
SDict begin H.S end
 -246 4012 a -246 4012 a
SDict begin 12 H.A end
 -246 4012
a -246 4012 a
SDict begin [/View [/XYZ H.V]/Dest (Item.114) cvn /DEST pdfmark end
 -246 4012 a 0 TeXcolorgray 89 x FE(Ex)o(er)o(cice)c(38)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(100)19 b(\045)10 b FB(\241)g FC(15)18 b(\045)c FB(\306)g
FC(85)19 b(\045)14 b FB(\306)g FC(0,)8 b(85,)19 b(donc)e(pour)h
(diminuer)h(un)e(nombr)o(e)g(de)h(15)g(\045,)f(il)h(faut)g(le)g
(multiplier)i(par)d(0,85.)-38 4208 y(Ainsi,)h(dans)f(le)h(sch\351ma)g
(ci-dessous)o(,)h(l)o('intensit\351)i(lumineuse)f(est-elle)f
(multipli\351e)h(par)d(0,85)i(\340)e(chaque)i(nouvelle)g(plaque)f(:)p
0 TeXcolorgray 0 TeXcolorgray 618 5646 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 345.90486 a add def
/d 0.0 a add neg def /h 166.50133 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 618 5646 a 832
5503 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
106.69777 149.37688 106.69777 106.69777 85.35822 0.0 85.35822  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.84
0.84 0.92  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave
2.0 SLW 0.2 0.2 0.6  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
64.01866 149.37688 64.01866 106.69777 42.67911 0.0 42.67911  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.84
0.84 0.92  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave
2.0 SLW 0.2 0.2 0.6  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.2 0.2 0.6  setrgbcolor  [ 42.67911
21.33955 149.37688 21.33955 106.69777 0.0 0.0 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.84 0.84 0.92  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 2.0 SLW 0.2 0.2 0.6  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 148.73248
76.91565 192.19046 76.91565   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
119.66118 191.83423 119.66118   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
33.81389 191.83423 34.1701   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 149.0887
-8.57541 192.19046 -8.2192   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 832 5503 a
tx@Dict begin { -20.2725 109.89856 } PutCoor PutBegin  end
 832
5503 a 0.2 0.2 0.6 TeXcolorrgb 57 x FC(1)872 5537 y Fq(r)o(e)934
5560 y FC(plaque)p 0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503
a 832 5503 a
tx@Dict begin { -20.2725 67.21945 } PutCoor PutBegin  end
 832 5503 a 0.2 0.2 0.6 TeXcolorrgb 57 x
FC(2)872 5537 y Fq(e)915 5560 y FC(plaque)p 0 TeXcolorgray
832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { -20.2725 24.54034 } PutCoor PutBegin  end
 832 5503 a 0.2 0.2 0.6
TeXcolorrgb 57 x FC(3)872 5537 y Fq(e)915 5560 y FC(plaque)p
0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.53381 123.76947 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Fz(v)877 5572 y Fv(0)926 5560 y FB(\306)c
FC(12)k(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.39087 81.09036 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Fz(v)877 5572 y Fv(1)926 5560 y FB(\306)c
FC(12)c FB(\243)g FC(0,)e(85)18 b FB(\306)c FC(10,)8
b(2)19 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503 a
tx@Dict begin { 197.39087 38.41125 } PutCoor PutBegin  end
 832 5503
a 834 5560 a Fz(v)877 5572 y Fv(2)926 5560 y FB(\306)14
b FC(10,)8 b(2)i FB(\243)g FC(0,)e(85)19 b FB(\306)14
b FC(8,)8 b(67)19 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832 5503 a 832 5503
a
tx@Dict begin { 197.39087 -4.26784 } PutCoor PutBegin  end
 832 5503 a 834 5560 a Fz(v)877 5572 y Fv(3)926 5560
y FB(\306)14 b FC(8,)8 b(67)i FB(\243)g FC(0,)e(85)19
b FB(\306)14 b FC(7,)8 b(3695)20 b(lm)832 5503 y
tx@Dict begin  PutEnd  end
 832
5503 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 96.02798 117.36754 96.02798
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 74.68843 117.36754 85.35822
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1 0  setcmykcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 117.36754 117.36754 106.69777
149.37688   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1 0  setcmykcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
832 5503 a
tx@Dict begin { 32.00932 135.05759 } PutCoor PutBegin  end
 832 5503 a 0 0 1 0 TeXcolorcmyk 57 x FC(lumi\350r)o(e)p
0 TeXcolorgray 832 5503 a
tx@Dict begin  PutEnd  end
 832 5503 a 3490 5646 a
currentpoint initclip moveto
 3490
5646 a 0 TeXcolorgray 1909 5895 a FC(21)p 0 TeXcolorgray
eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FE(R)o(emarque)16 b(:)k FC(Le)h(lumen)h(est)e
(une)h(unit\351)g(de)f(mesur)o(e)h(du)f(\003ux)g(lumineux,)i
(utilis\351e)g(notamment)g(pour)f(indiquer)g(la)f(capacit\351)g(d)n
('\351clair)o(e-)-38 -63 y(ment)e(des)g(ampoules)h(\351lectr)q(iques)o
(.)-246 -35 y
SDict begin H.S end
 -246 -35 a -246 -35 a
SDict begin 12 H.A end
 -246 -35 a -246 -35
a
SDict begin [/View [/XYZ H.V]/Dest (Item.115) cvn /DEST pdfmark end
 -246 -35 a 0 TeXcolorgray -141 59 a FC(2.)p 0 TeXcolorgray
43 w(La)e(suite)k Fz(v)j FC(est)18 b(une)g(suite)h(g\351om\351tr)q
(ique)f(de)f(r)o(aison)j Fz(q)g FB(\306)14 b FC(0,)8
b(85.)-246 89 y
SDict begin H.S end
 -246 89 a -246 89 a
SDict begin 12 H.A end
 -246 89 a -246 89
a
SDict begin [/View [/XYZ H.V]/Dest (Item.116) cvn /DEST pdfmark end
 -246 89 a 0 TeXcolorgray -141 180 a FC(3.)p 0 TeXcolorgray
43 w(L)-10 b('intensit\351)21 b(lumineuse)g(est)f(divis\351e)f(par)g
(10)g(lorsqu)n('on)h(descend)f(en)f(dessous)i(de)e(12)11
b FB(\245)g FC(10)17 b FB(\306)e FC(1,)8 b(2)20 b(lm.)g(P)n(our)e
(savoir)g(le)h(nombr)o(e)g(minimal)-38 280 y(de)g(plaques)i(\340)e
(superposer)i(pour)f(qu)n('il)g(en)f(soit)i(ainsi,)f(on)f(r)o(entr)o(e)
g(les)h(valeurs)g(initiales)h(0)f(et)g(12)g(dans)f(la)h(colonne)g(B)o
(,)f(puis)i(on)e(r)o(entr)o(e)g(les)-38 380 y(for)q(mules)e(ci-dessous)
f(dans)g(la)g(colonne)g(C,)g(que)g(l)o('on)h(\351tir)o(e)e(vers)h(la)g
(droite)f(jusqu)n('\340)i(obtenir)f(une)g(intensit\351)h(lumineuse)i
(inf\351r)q(ieur)o(e)d(\340)f(1,2.)p 0 TeXcolorgray 0
TeXcolorgray -38 496 4184 4 v -38 596 4 100 v 105 596
V 419 566 a(A)p 778 596 V 624 w(B)p 1451 596 V 622 w(C)p
2124 596 V 603 w FB(\242)8 b(\242)g(\242)p 2797 596 V
615 w FC(P)p 3470 596 V 620 w(Q)p 4142 596 V -38 599
4184 4 v -38 699 4 100 v 15 669 a(1)p 105 699 V 140 w(Nb)17
b(de)g(plaques)p 778 699 V 406 w(0)p 1451 699 V 544 w(=B1+1)p
2124 699 V 521 w FB(\242)8 b(\242)g(\242)p 2797 699 V
597 w FC(14)p 3470 699 V 593 w(15)p 4142 699 V -38 702
4184 4 v -38 802 4 100 v 15 772 a(2)p 105 802 V 154 w(I)o(ntensit\351)
19 b(\(lm\))p 778 802 V 398 w(12)p 1451 802 V 480 w(=B2*0,85)p
2124 802 V 478 w FB(\242)8 b(\242)g(\242)p 2797 802 V
563 w FC(1,)g(23)p 3470 802 V 525 w(1,)g(05)p 4142 802
V -38 805 4184 4 v -38 956 a(C)o(onclusion)19 b(:)f(il)f(faut)h
(superposer)h(au)f(moins)g(15)g(plaques)h(pour)f(que)g(l)o
('intensit\351)i(lumineuse)g(soit)e(divis\351e)h(par)e(10.)-246
1098 y
SDict begin H.S end
 -246 1098 a -246 1098 a
SDict begin 12 H.A end
 -246 1098 a -246 1098
a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -246 1098 a 132 x FF(6)105 b(D\351r)q(iv)n(ation)24
b(et)f(v)n(ar)q(iations)g(des)f(fonctions)i(du)f(2)2083
1198 y Ff(nd)2194 1230 y FF(degr\351)-246 1341 y
SDict begin H.S end
 -246
1341 a -246 1341 a
SDict begin 12 H.A end
 -246 1341 a -246 1341 a
SDict begin [/View [/XYZ H.V]/Dest (exo.39) cvn /DEST pdfmark end
 -246 1341
a 0 TeXcolorgray 73 x FE(Ex)o(er)o(cice)14 b(39)p 0 TeXcolorgray
41 w FC(La)k(fonction)26 b Fz(f)36 b FC(est)18 b(d\351\002nie)g(sur)f
(l)o('inter)q(valle)1559 1415 y([)1585 1414 y FB(\241)p
FC(1;)8 b(4)1748 1415 y(])1792 1414 y(par)1596 1613 y
Fz(f)19 b FC(\()r Fz(x)5 b FC(\))14 b FB(\306)h FC(0,)8
b(5)r Fz(x)1977 1578 y Fv(2)2024 1613 y FB(\241)i FC(2)r
Fz(x)15 b FB(\305)10 b FC(1.)-246 1658 y
SDict begin H.S end
 -246 1658 a
-246 1658 a
SDict begin 12 H.A end
 -246 1658 a -246 1658 a
SDict begin [/View [/XYZ H.V]/Dest (Item.117) cvn /DEST pdfmark end
 -246 1658 a 0 TeXcolorgray
-141 1750 a FC(1.)p 0 TeXcolorgray 51 w Fz(f)13 1720
y Fp(0)34 1750 y FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g
FC(0,)8 b(5)i FB(\243)g FC(2)r Fz(x)15 b FB(\241)10 b
FC(2)g FB(\243)g FC(1)g FB(\305)g FC(0)19 b FB(\306)e
Fz(x)e FB(\241)10 b FC(2.)-246 1780 y
SDict begin H.S end
 -246 1780 a -246
1780 a
SDict begin 12 H.A end
 -246 1780 a -246 1780 a
SDict begin [/View [/XYZ H.V]/Dest (Item.118) cvn /DEST pdfmark end
 -246 1780 a 0 TeXcolorgray
-141 1872 a FC(2.)p 0 TeXcolorgray 43 w(La)17 b(d\351r)q(iv\351e)h(est)
g(du)f(pr)o(emier)h(degr\351,)f(donc)g(il)h(faut)g(r\351soudr)o(e)f
(une)h(\351quation,)h(puis)f(r)o(egar)o(der)e(le)h(signe)h(de)h
Fz(a)36 b FC(:)1913 2034 y Fz(x)15 b FB(\241)10 b FC(2)15
b FB(\306)f FC(0)1797 2159 y Fz(x)h FB(\241)1916 2175
y Fe(\001)1916 2159 y FC(2)c FB(\305)2032 2175 y Fe(\001)2032
2159 y FC(2)k FB(\306)f FC(0)c FB(\305)g FC(2)2029 2283
y Fz(x)19 b FB(\306)14 b FC(2.)-36 2481 y Fz(a)k FB(\306)c
FC(1)k(\(puisque)j Fz(x)15 b FB(\241)10 b FC(2)18 b(signi\002e)p
1 0 0 TeXcolorrgb 18 w(1)p 0 TeXcolorgray 2 w Fz(x)d
FB(\241)10 b FC(2\),)21 b Fz(a)g FC(est)1371 2425 y Fm(L)1464
2481 y FC(donc)c(le)h(signe)g(est)g(de)f(la)g(for)q(me)46
b FB(\241)18 b Fd(\036)f FB(\305)p 2455 2399 262 4 v
2455 2523 4 127 v 2713 2523 V 2455 2525 262 4 v -38 2649
a FC(On)g(en)h(d\351duit)f(le)h(tableau)g(de)f(signe)h(de)25
b Fz(f)1238 2619 y Fp(0)1277 2649 y FC(et)17 b(le)h(tableau)g(de)f(var)
q(iations)h(de)25 b Fz(f)50 b FC(:)p 0 TeXcolorgray 0
TeXcolorgray 1203 2764 a

 1203 2764 a 1203 2764 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1203
2764 a
 0 setgray
 1203 2764 a 168 w Fz(x)1203 2764 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1203 2764 a
 0 setgray

1203 2764 a 111 w Fz(f)1357 2734 y Fp(0)1378 2764 y FC(\()r
Fz(x)5 b FC(\))1203 2764 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 1203 2764 a
 0 setgray
 1203 2764 a 122
w Fz(f)19 b FC(\()r Fz(x)5 b FC(\))1203 2764 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 50.96643 -14.40787 ] concat

 pgfs


 1203 2764
a
 0 setgray
 1203 2764 a FB(\241)p FC(1)1203 2764 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.40787 ] concat

 pgfs


 1203 2764 a
 0 setgray

1203 2764 a FC(2)1203 2764 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.40787 ] concat

 pgfs


 1203 2764 a
 0 setgray
 1203 2764 a
FC(4)1203 2764 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 1203 2764 a
 0 setgray
 1203 2764 a FB(\241)1203
2764 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1203 2764 a
 0 setgray
 1203 2764 a FC(0)1203 2764 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 1203
2764 a
 0 setgray
 1203 2764 a FB(\305)1203 2764 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 48.62695 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.6195 -57.47212 ] concat

 pgfs


 1203 2764 a
 /pgfsc{}def/pgffc{}def
 1203
2764 a 1203 2764 a
 0 setgray
 1203 2764 a FC(3.5)1203 2764 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 48.62695 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.6195 -57.47212 ] concat

 pgfs


 1203
2764 a
 /pgfsc{}def/pgffc{}def
 1203 2764 a 1203 2764 a
 0 setgray
 1203 2764 a FC(3.5)1203
2764 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.73721 ] concat

 pgfs


 1203 2764 a
 /pgfsc{}def/pgffc{}def
 1203 2764 a 1203 2764 a
 0 setgray
 1203 2764
a FB(\241)p FC(1)1203 2764 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 117.01184 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.0044 -84.73721 ] concat

 pgfs


 1203 2764 a
 /pgfsc{}def/pgffc{}def
 1203 2764 a
1203 2764 a
 0 setgray
 1203 2764 a FB(\241)p FC(1)1203 2764 y


 pgfr

 restore

 restore

 save
 0
TeXcolorgray
 68.61252 -59.21284 moveto

 110.95573 -76.16023 lineto

 pgfstr

 save

 [0.92838 -0.37157 0.37157 0.92838 110.95572 -76.16023 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 1203 2764 a
 /pgfsc{}def/pgffc{}def
 1203 2764 a 1203
2764 a
 0 setgray
 1203 2764 a FC(1)1203 2764 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 8.84691 188.3457 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -57.47212 ] concat

 pgfs


 1203 2764 a
 /pgfsc{}def/pgffc{}def
 1203
2764 a 1203 2764 a
 0 setgray
 1203 2764 a FC(1)1203 2764 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 136.30315 -77.04135 moveto

 182.2942 -58.60718 lineto

 pgfstr

 save

 [0.92818 0.37202 -0.37202 0.92818 182.29419 -58.60718 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 3707 a FE(R)o(emarque)14 b(:)j FC(P)n(our)g(les)h
(trois)f(valeurs)h(aux)g(extr\351mit\351s)h(des)f(\003\350ches)o(,)g
(on)g(utilise)h(le)e(tableau)h(de)f(valeurs)i(de)e(la)g(question)i
(suivante)o(.)-246 3735 y
SDict begin H.S end
 -246 3735 a -246 3735 a
SDict begin 12 H.A end
 -246
3735 a -246 3735 a
SDict begin [/View [/XYZ H.V]/Dest (Item.119) cvn /DEST pdfmark end
 -246 3735 a 0 TeXcolorgray -141 3829
a FC(3.)p 0 TeXcolorgray 43 w(R)o(appelons)g(la)f(m\351thode)g(pour)g
(obtenir)g(le)f(tableau)h(de)f(valeurs)i(avec)e(une)h(calculatr)q(ice)g
(:)p 0 TeXcolorgray 0 TeXcolorgray 266 4016 a FE(C)o(alculatr)q(ices)12
b(coll\350ge)p 0 TeXcolorgray 7 4418 a FC(\225)p 0 TeXcolorgray
70 w(MODE)p 80 4339 293 4 v 80 4446 4 109 v 369 4446
V 80 4448 293 4 v 46 w(ou)45 b(MENU)p 497 4339 295 4
v 497 4446 4 109 v 789 4446 V 497 4448 295 4 v 0 TeXcolorgray
7 4518 a(\225)p 0 TeXcolorgray 42 w(4)17 b(:)h(T)-5 b(ABLE)18
b(ou)g(4)f(:)h(T)-8 b(ableau)p 0 TeXcolorgray 7 4617
a(\225)p 0 TeXcolorgray 42 w(f\(X\)=0,)8 b(5X)406 4587
y Fv(2)451 4617 y FB(\241)i FC(2X)g FB(\305)g FC(1)46
b(EXE)p 737 4538 197 4 v 737 4644 4 108 v 931 4644 V
737 4646 197 4 v 80 4717 a(\(si)24 b(on)h(demande)g(g\(X\)=,)d(ne)j(r)q
(ien)f(r)o(en-)80 4816 y(tr)o(er\))p 0 TeXcolorgray 7
4916 a(\225)p 0 TeXcolorgray 42 w(D\351but)9 b(?)16 b
FB(\241)p FC(1)46 b(EXE)p 465 4837 V 465 4943 4 108 v
658 4943 V 465 4945 197 4 v 0 TeXcolorgray 7 5035 a(\225)p
0 TeXcolorgray 42 w(F)o(in)9 b(?)17 b(4)46 b(EXE)p 306
4956 V 306 5061 4 108 v 499 5061 V 306 5063 197 4 v 0
TeXcolorgray 7 5154 a(\225)p 0 TeXcolorgray 42 w(P)m(as)9
b(?)17 b(1)46 b(EXE)p 309 5075 V 309 5180 4 108 v 503
5180 V 309 5182 197 4 v 0 TeXcolorgray 1338 5182 9 1250
v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1806 4016
a FE(TI)16 b(graphiques)1384 4200 y FC(X)h(s)m('obtient)i(avec)e(la)g
(touche)49 b Fz(x)5 b FC(,)10 b Fz(t)e FC(,)g FA(\265)r
FC(,)g Fz(n)p 2277 4118 321 4 v 2277 4237 4 122 v 2594
4237 V 2277 4239 321 4 v 0 TeXcolorgray 1429 4335 a FC(\225)p
0 TeXcolorgray 78 w Fz(f)19 b FC(\()r Fz(x)5 b FC(\))p
1502 4253 208 4 v 1502 4381 4 129 v 1706 4381 V 1502
4383 208 4 v 0 TeXcolorgray 1429 4473 a(\225)p 0 TeXcolorgray
42 w(Y)1547 4485 y Fv(1)1596 4473 y FB(\306)14 b FC(0.5X)1814
4443 y Fv(2)1859 4473 y FB(\241)c FC(2X)h FB(\305)f FC(1)46
b(EXE)p 2146 4394 197 4 v 2146 4500 4 108 v 2339 4500
V 2146 4502 197 4 v 0 TeXcolorgray 1429 4595 a(\225)p
0 TeXcolorgray 70 w(2nde)p 1502 4513 230 4 v 1502 4622
4 111 v 1728 4622 V 1502 4624 230 4 v 75 w(d\351f)17
b(table)p 1748 4513 356 4 v 1748 4622 4 111 v 2100 4622
V 1748 4624 356 4 v 0 TeXcolorgray 1429 4714 a(\225)p
0 TeXcolorgray 42 w(D\351bT)-8 b(able=\()p FB(\241)p
FC(\)1)45 b(EXE)p 2042 4635 197 4 v 2042 4741 4 108 v
2236 4741 V 2042 4743 197 4 v 0 TeXcolorgray 1429 4833
a(\225)p 0 TeXcolorgray 42 w(P)m(asT)-8 b(able=1)47 b(EXE)p
1906 4754 V 1906 4859 4 108 v 2099 4859 V 1906 4861 197
4 v 1502 4932 a(ou)1502 5032 y Fc(\242)p FC(Tbl=1)f(EXE)p
1750 4953 V 1750 5059 4 108 v 1944 5059 V 1750 5061 197
4 v 0 TeXcolorgray 1429 5154 a(\225)p 0 TeXcolorgray
70 w(2nde)p 1502 5072 230 4 v 1502 5181 4 111 v 1728
5181 V 1502 5183 230 4 v 75 w(table)p 1748 5072 229 4
v 1748 5181 4 111 v 1974 5181 V 1748 5183 229 4 v 0 TeXcolorgray
2761 5182 9 1250 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3150 4016 a FE(CASIO)16 b(graphiques)2806 4190 y FC(X)h(s)m('obtient)i
(avec)e(la)h(touche)46 b(X,)8 b FA(\265)r FC(,)g(T)p
3699 4108 254 4 v 3699 4227 4 122 v 3949 4227 V 3699
4229 254 4 v 0 TeXcolorgray 2852 4320 a(\225)p 0 TeXcolorgray
70 w(MENU)p 2924 4241 295 4 v 2924 4348 4 109 v 3216
4348 V 2924 4350 295 4 v 45 w(puis)19 b(choisir)f(T)-5
b(ABLE)46 b(EXE)p 3902 4241 197 4 v 3902 4347 4 108 v
4095 4347 V 3902 4349 197 4 v 0 TeXcolorgray 2852 4440
a(\225)p 0 TeXcolorgray 41 w(Y)2969 4452 y Fv(1)3018
4440 y FC(:)15 b(0.5X)3202 4410 y Fv(2)3247 4440 y FB(\241)10
b FC(2X)g FB(\305)g FC(1)46 b(EXE)p 3533 4362 V 3533
4467 4 108 v 3727 4467 V 3533 4469 197 4 v 0 TeXcolorgray
2852 4559 a(\225)p 0 TeXcolorgray 70 w(F5)p 2924 4480
142 4 v 2924 4586 4 108 v 3062 4586 V 2924 4588 142 4
v 46 w(\(on)17 b(choisit)i(donc)e(SET)t(\))p 0 TeXcolorgray
2852 4678 a(\225)p 0 TeXcolorgray 41 w(S)n(tar)q(t)h(:\()p
FB(\241)p FC(\)1)45 b(EXE)p 3290 4600 197 4 v 3290 4705
4 108 v 3484 4705 V 3290 4707 197 4 v 0 TeXcolorgray
2852 4797 a(\225)p 0 TeXcolorgray 41 w(End)17 b(:4)47
b(EXE)p 3158 4718 V 3158 4824 4 108 v 3352 4824 V 3158
4826 197 4 v 0 TeXcolorgray 2852 4916 a(\225)p 0 TeXcolorgray
41 w(S)n(tep)19 b(:1)46 b(EXE)p 3171 4837 V 3171 4943
4 108 v 3364 4943 V 3171 4945 197 4 v 0 TeXcolorgray
2852 5035 a(\225)p 0 TeXcolorgray 70 w(EXIT)p 2924 4956
225 4 v 2924 5061 4 108 v 3145 5061 V 2924 5063 225 4
v 0 TeXcolorgray 2852 5154 a(\225)p 0 TeXcolorgray 70
w(F6)p 2924 5075 142 4 v 2924 5181 4 108 v 3062 5181
V 2924 5183 142 4 v 46 w(\(on)17 b(choisit)i(donc)e(T)-5
b(ABLE\))-38 5394 y FE(R)o(emarque)19 b(:)24 b FC(Les)g(calculatr)q
(ices)g FE(NUMW)o(ORKS)f FC(per)q(mettent)j(\351galement)f(de)e(fair)o
(e)g(ces)h(calculs)g(et)g(sont)g(d)n('un)f(usage)h(beaucoup)g(plus)-38
5493 y(intuitif.)-38 5646 y(On)17 b(obtient)h(\002nalement)h(le)f
(tableau)g(:)p 0 TeXcolorgray 1909 5895 a(22)p 0 TeXcolorgray
eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1309 -242
1490 4 v 1309 -143 4 100 v 1416 -173 a Fz(x)p 1563 -143
V 168 w FB(\241)p FC(1)p 1775 -143 V 110 w(0)p 1919 -143
V 166 w(1)p 2186 -143 V 193 w(2)p 2384 -143 V 192 w(3)p
2652 -143 V 166 w(4)p 2795 -143 V 1309 -139 1490 4 v
1309 -40 4 100 v 1370 -70 a Fz(f)19 b FC(\()r Fz(x)5
b FC(\))p 1563 -40 V 103 w(3,)j(5)p 1775 -40 V 104 w(1)p
1919 -40 V 104 w FB(\241)p FC(0,)g(5)p 2186 -40 V 104
w FB(\241)p FC(1)p 2384 -40 V 104 w FB(\241)p FC(0,)g(5)p
2652 -40 V 104 w(1)p 2795 -40 V 1309 -36 1490 4 v -246
7 a
SDict begin H.S end
 -246 7 a -246 7 a
SDict begin 12 H.A end
 -246 7 a -246 7 a
SDict begin [/View [/XYZ H.V]/Dest (Item.120) cvn /DEST pdfmark end
 -246 7 a 0 TeXcolorgray
-141 81 a FC(4.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1151 1642 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 217.37892 a add def
/d 0.0 a add neg def /h 179.8211 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1151 1642 a 1633 1245 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -28.45274 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 159.33553 0.0 -58.0434 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -56.90549 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 132.0207 0.0 -47.8004   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 159.33553  0 -58.0434  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -58.0434
 159.33553  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-47.8004  def /maxTickline 132.0207  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.33553
0.0 -58.0434 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 132.0207  0 -47.8004  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -47.8004
 132.0207  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-58.0434  def /maxTickline 159.33553  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 132.0207
0.0 -47.8004   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.33553
0.0 -58.0434 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1618 1342 a Fv(0)205
b(1)g(2)h(3)f(4)g(5)-1469 b Fp(\241)p Fv(1)-309 b Fp(\241)p
Fv(2)1544 1264 y(0)1503 1500 y Fp(\241)p Fv(1)1544 1028
y(1)1544 792 y(2)1544 555 y(3)1544 319 y(4)1633 1245
y
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 1633 1245 a 1633 1245 a
tx@Dict begin { 56.90549 -28.45274 } PutCoor PutBegin  end
 1633 1245 a 1633 1245 a
tx@Dict begin ps@rot  RotBegin  end
 1633
1245 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -3. def /x1
2. def /dx x1 x sub 49 div def /F@pstplot (x^2/2/1.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW 0.30196
0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1633 1245
a
tx@Dict begin RotEnd  end
 1633 1245 a 1633 1245 a
tx@Dict begin  PutEnd  end
 1633 1245 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ -28.45274 99.5846   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 -14.22636   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 -28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35823 -14.22636   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 28.45274   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2956 1642 a
currentpoint initclip moveto
 2956 1642 a -38
1849 a FE(R)o(emarque)18 b(:)23 b FC(La)g(courbe)f(r)o
(epr\351sentative)i(est)f(une)g(par)o(abole)o(,)g(puisque)h(la)f
(fonction)31 b Fz(f)41 b FC(est)24 b(du)e(2)2957 1826
y Fq(nd)3040 1849 y FC(degr\351)g(\(de)g(la)g(for)q(me)31
b Fz(f)19 b FC(\()r Fz(x)5 b FC(\))19 b FB(\306)i Fz(a)6
b(x)4043 1819 y Fv(2)4091 1849 y FB(\305)-38 1949 y Fz(b)g(x)15
b FB(\305)10 b Fz(c)5 b FC(\).)18 b(C)o(e)g(ser)o(a)g(le)f(cas)h(dans)f
(tous)h(les)g(exer)o(cices)g(du)f(chapitr)o(e)o(.)-246
2033 y
SDict begin H.S end
 -246 2033 a -246 2033 a
SDict begin 12 H.A end
 -246 2033 a -246 2033
a
SDict begin [/View [/XYZ H.V]/Dest (exo.40) cvn /DEST pdfmark end
 -246 2033 a 0 TeXcolorgray 115 x FE(Ex)o(er)o(cice)d(40)p
0 TeXcolorgray 41 w FC(La)k(fonction)i Fz(g)27 b FC(est)18
b(d\351\002nie)f(sur)h(l)o('inter)q(valle)1558 2149 y([)1583
2148 y(0;)8 b(5)1691 2149 y(])1735 2148 y(par)1618 2348
y Fz(g)i FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g(\241)r
Fz(x)1950 2313 y Fv(2)1996 2348 y FB(\305)c FC(5)r Fz(x)15
b FB(\241)10 b FC(2.)-246 2401 y
SDict begin H.S end
 -246 2401 a -246 2401
a
SDict begin 12 H.A end
 -246 2401 a -246 2401 a
SDict begin [/View [/XYZ H.V]/Dest (Item.121) cvn /DEST pdfmark end
 -246 2401 a 0 TeXcolorgray
-141 2497 a FC(1.)p 0 TeXcolorgray 45 w Fz(g)12 2467
y Fp(0)33 2497 y FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g(\241)p
FC(2)r Fz(x)h FB(\305)10 b FC(5)g FB(\243)g FC(1)g FB(\241)g
FC(0)17 b FB(\306)e(\241)p FC(2)r Fz(x)g FB(\305)10 b
FC(5.)-246 2530 y
SDict begin H.S end
 -246 2530 a -246 2530 a
SDict begin 12 H.A end
 -246 2530 a
-246 2530 a
SDict begin [/View [/XYZ H.V]/Dest (Item.122) cvn /DEST pdfmark end
 -246 2530 a 0 TeXcolorgray -141 2626 a FC(2.)p
0 TeXcolorgray 43 w(On)17 b(r\351sout)h(l)o('\351quation)i(:)1863
2808 y FB(\241)p FC(2)r Fz(x)15 b FB(\305)10 b FC(5)16
b FB(\306)e FC(0)1747 2933 y FB(\241)p FC(2)r Fz(x)h
FB(\305)1963 2949 y Fe(\001)1963 2933 y FC(5)d FB(\241)2080
2949 y Fe(\001)2080 2933 y FC(5)j FB(\306)f FC(0)c FB(\241)g
FC(5)1961 3052 y Fe(\010)1990 3038 y(\010)1969 3050 y
FB(\241)p FC(2)r Fz(x)p 1969 3087 142 5 v 1984 3165 a
Fe(\010)2013 3151 y(\010)1992 3163 y FB(\241)p FC(2)2135
3106 y FB(\306)2214 3050 y(\241)p FC(5)p 2214 3087 96
5 v 2214 3163 a FB(\241)p FC(2)2076 3266 y Fz(x)20 b
FB(\306)14 b FC(2,)8 b(5.)-36 3487 y Fz(a)18 b FB(\306)c(\241)p
FC(2,)20 b Fz(a)h FC(est)d Fb(\252)p FC(donc)f(le)h(signe)g(est)g(de)f
(la)g(for)q(me)46 b FB(\305)17 b Fd(\036)h FB(\241)p
1479 3405 262 4 v 1479 3529 4 127 v 1737 3529 V 1479
3531 262 4 v -38 3667 a FC(On)f(en)h(d\351duit)f(le)h(tableau)g(de)f
(signe)h(de)h Fz(g)1237 3637 y Fp(0)1275 3667 y FC(et)f(le)g(tableau)g
(de)f(var)q(iations)g(de)j Fz(g)40 b FC(:)p 0 TeXcolorgray
0 TeXcolorgray 1203 3804 a

 1203 3804 a 1203 3804 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1203
3804 a
 0 setgray
 1203 3804 a 168 w Fz(x)1203 3804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1203 3804 a
 0 setgray

1203 3804 a 106 w Fz(g)1357 3774 y Fp(0)1378 3804 y FC(\()r
Fz(x)5 b FC(\))1203 3804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.15324 ] concat

 pgfs


 1203 3804 a
 0 setgray
 1203 3804 a 117
w Fz(g)10 b FC(\()r Fz(x)5 b FC(\))1203 3804 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 1203 3804
a
 0 setgray
 1203 3804 a FC(0)1203 3804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.65038 -14.36803 ] concat

 pgfs


 1203 3804 a
 0 setgray
 1203 3804
a FC(2.5)1203 3804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 190.32938 -14.38297 ] concat

 pgfs


 1203 3804 a
 0 setgray
 1203 3804 a FC(5)1203
3804 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 1203 3804 a
 0 setgray
 1203 3804 a FB(\305)1203 3804 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1203
3804 a
 0 setgray
 1203 3804 a FC(0)1203 3804 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 1203 3804 a
 0 setgray
 1203
3804 a FB(\241)1203 3804 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 48.97566 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -84.73721 ] concat

 pgfs


 1203 3804 a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203
3804 a
 0 setgray
 1203 3804 a FB(\241)p FC(2)1203 3804 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 48.97566 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 50.96822 -84.73721 ] concat

 pgfs


 1203 3804
a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203 3804 a
 0 setgray
 1203 3804 a FB(\241)p FC(2)1203
3804 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 21.00146 114.23224 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 116.2248 -57.47212 ] concat

 pgfs


 1203 3804 a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203 3804 a
 0 setgray
 1203 3804
a FC(4.25)1203 3804 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 21.00146 114.23224 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 116.2248 -57.47212 ] concat

 pgfs


 1203 3804 a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203 3804
a
 0 setgray
 1203 3804 a FC(4.25)1203 3804 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 68.26376 -77.04729 moveto

 108.17603 -61.07187 lineto

 pgfstr

 save

 [0.92836 0.37158 -0.37158 0.92836 108.17603 -61.07188 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 185.04803 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 187.04059 -84.73721 ] concat

 pgfs



1203 3804 a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203 3804 a
 0 setgray
 1203 3804 a FB(\241)p
FC(2)1203 3804 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 15.44226 185.04803 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 187.04059 -84.73721 ] concat

 pgfs


 1203 3804 a
 /pgfsc{}def/pgffc{}def
 1203 3804 a 1203 3804 a
 0 setgray

1203 3804 a FB(\241)p FC(2)1203 3804 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 139.08331 -60.18549 moveto

 178.9955 -76.16023 lineto

 pgfstr

 save

 [0.92838 -0.37157 0.37157 0.92838 178.99548 -76.16023 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore

0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 4769 a FE(R)o(emarque)18 b(:)k FC(P)n(our)f
(compl\351ter)i(les)g(valeurs)g(aux)f(extr\351mit\351s)h(des)f
(\003\350ches)o(,)h(on)f(fait)g(un)g(tableau)h(de)e(valeurs)i(sur)3446
4770 y([)3471 4769 y(0;)8 b(5)3579 4770 y(])3627 4769
y(avec)22 b(un)g(pas)h(de)-38 4869 y(0,)8 b(5.)19 b(C)o(e)e(tableau)h
(a)f(deux)h(utilit\351s)h(:)p 0 TeXcolorgray 7 4983 a(\225)p
0 TeXcolorgray 42 w(en)e(pr)o(enant)h(les)g(valeurs)i
Fz(x)g FB(\306)14 b FC(0,)20 b Fz(x)g FB(\306)14 b FC(2,)8
b(5)18 b(et)i Fz(x)g FB(\306)14 b FC(5,)k(on)f(peut)i(compl\351ter)g
(notr)o(e)e(tableau)h(de)f(var)q(iations)9 b(;)p 0 TeXcolorgray
7 5083 a(\225)p 0 TeXcolorgray 42 w(en)17 b(pr)o(enant)h(les)g(valeurs)
i Fz(x)g FB(\306)14 b FC(0,)20 b Fz(x)g FB(\306)14 b
FC(1,)20 b Fz(x)f FB(\306)c FC(2,)20 b Fz(x)f FB(\306)14
b FC(3,)20 b Fz(x)g FB(\306)14 b FC(4)k(et)i Fz(x)f FB(\306)14
b FC(5,)k(on)g(obtient)g(le)g(tableau)g(de)f(valeurs)h(de)f(la)g
(question)i(suivante)o(.)-38 5197 y(Les)f(autr)o(es)g(valeurs)g(\()r
Fz(x)h FB(\306)14 b FC(0,)8 b(5,)21 b Fz(x)f FB(\306)14
b FC(1,)8 b(5,)21 b Fz(x)e FB(\306)14 b FC(3,)8 b(5)19
b(et)h Fz(x)f FB(\306)14 b FC(4,)8 b(5\))19 b(ne)e(nous)i(ser)q(vent)f
(\340)f(r)q(ien.)-246 5222 y
SDict begin H.S end
 -246 5222 a -246 5222 a
SDict begin 12 H.A end

-246 5222 a -246 5222 a
SDict begin [/View [/XYZ H.V]/Dest (Item.123) cvn /DEST pdfmark end
 -246 5222 a 0 TeXcolorgray -141
5326 a FC(3.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1441 5396 1227 4 v 1441 5496 4 100 v 1547 5466 a Fz(x)p
1693 5496 V 188 w FC(0)p 1891 5496 V 131 w(1)p 2035 5496
V 103 w(2)p 2178 5496 V 103 w(3)p 2322 5496 V 104 w(4)p
2465 5496 V 131 w(5)p 2664 5496 V 1441 5499 1227 4 v
1441 5599 4 100 v 1496 5569 a Fz(g)10 b FC(\()r Fz(x)5
b FC(\))p 1693 5599 V 102 w FB(\241)p FC(2)p 1891 5599
V 104 w(2)p 2035 5599 V 103 w(4)p 2178 5599 V 103 w(4)p
2322 5599 V 104 w(2)p 2465 5599 V 103 w FB(\241)p FC(2)p
2664 5599 V 1441 5602 1227 4 v 0 TeXcolorgray 1909 5895
a(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.124) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(4.)p 0 TeXcolorgray 43 w(P)n(our)16 b(constr)q(uir)o(e)h(la)g
(courbe)o(,)f(on)h(place)g(les)h(points)g(du)e(tableau)h(de)g(valeurs)o
(,)h(mais)f(aussi)h(le)f(point)h(obtenu)f(pour)j Fz(x)f
FB(\306)14 b FC(2,)8 b(5)18 b(\(maximum)h(du)-38 -63
y(tableau)f(de)f(var)q(iations\).)p 0 TeXcolorgray 0
TeXcolorgray 1133 1771 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 221.93147 a add def
/d 0.0 a add neg def /h 211.68803 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1133 1771 a 1392 1119 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 -56.90549 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 190.63329 0.0 -31.29819 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  -28.45274 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 133.15863 0.0 -78.5294   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 190.63329  0 -31.29819  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -31.29819
 190.63329  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-78.5294  def /maxTickline 133.15863  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.15863
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 190.63329
0.0 -31.29819 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 133.15863  0 -78.5294  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -78.5294
 133.15863  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-31.29819  def /maxTickline 190.63329  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 133.15863
0.0 -78.5294   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 190.63329
0.0 -31.29819 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1377 1216 a Fv(0)205 b(1)g(2)h(3)f(4)g(5)g(6)-1705 b
Fp(\241)p Fv(1)1303 1138 y(0)1262 1375 y Fp(\241)p Fv(1)1262
1611 y Fp(\241)p Fv(2)1303 902 y(1)1303 666 y(2)1303
430 y(3)1303 193 y(4)1392 1119 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1392 1119 a 1392 1119
a
tx@Dict begin { 71.13185 120.92415 } PutCoor PutBegin  end
 1392 1119 a 1392 1119 a
tx@Dict begin ps@rot  RotBegin  end
 1392 1119 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0.30196 0.30196 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def    /x -2.5 def
/x1 2.5 def /dx x1 x sub 49 div def /F@pstplot (x^2/2/0.5)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0.30196 0.30196 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 1392 1119 a
tx@Dict begin RotEnd  end
 1392 1119 a 1392 1119 a
tx@Dict begin  PutEnd  end
 1392
1119 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 0.0 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 56.90549 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 85.35823 113.81097   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 28.45274 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 71.13185 120.92415   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 113.81097 56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0.30196 0.30196 1  setrgbcolor
 [ 142.26372 -56.90549   false NArray  /DS 5.0 0. CLW mul add 2 div
def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 2975 1771 a
currentpoint initclip moveto
 2975
1771 a -246 1837 a
SDict begin H.S end
 -246 1837 a -246 1837 a
SDict begin 12 H.A end
 -246 1837
a -246 1837 a
SDict begin [/View [/XYZ H.V]/Dest (exo.41) cvn /DEST pdfmark end
 -246 1837 a 0 TeXcolorgray 133 x FE(Ex)o(er)o(cice)14
b(41)p 0 TeXcolorgray 41 w FC(On)26 b(mod\351lise)h(le)f(taux)g(d)n
('anticorps)g(\(en)g(g/l\))f(pr\351sents)i(dans)e(le)h(sang)g(d)n('un)g
(nourr)q(isson)g(en)g(fonction)g(de)g(l)o('\342ge)i Fz(t)33
b FC(\(en)26 b(mois\),)-246 2070 y(depuis)19 b(la)e(naissance)i(jusqu)n
('\340)f(l)o('\342ge)g(de)f(12)h(mois)o(,)h(par)f(la)f(for)q(mule)h
(suivante)h(:)1558 2252 y Fz(f)f FC(\()r Fz(t)8 b FC(\))14
b FB(\306)g FC(0,)8 b(1)r Fz(t)1917 2218 y Fv(2)1964
2252 y FB(\241)i FC(1,)e(6)r Fz(t)19 b FB(\305)10 b FC(12.)-246
2340 y
SDict begin H.S end
 -246 2340 a -246 2340 a
SDict begin 12 H.A end
 -246 2340 a -246 2340
a
SDict begin [/View [/XYZ H.V]/Dest (Item.125) cvn /DEST pdfmark end
 -246 2340 a 0 TeXcolorgray -141 2435 a FC(1.)p 0 TeXcolorgray
51 w Fz(f)13 2405 y Fp(0)34 2435 y FC(\()r Fz(t)e FC(\))14
b FB(\306)g FC(0,)8 b(1)i FB(\243)g FC(2)r Fz(t)20 b
FB(\241)10 b FC(1,)e(6)i FB(\243)g FC(1)g FB(\305)g FC(0)17
b FB(\306)d FC(0,)8 b(2)r Fz(t)20 b FB(\241)10 b FC(1,)e(6.)-38
2599 y FE(R)o(emarque)14 b(:)j FC(On)g(tr)o(aite)h(les)h(\253)d
Fz(t)21 b FC(\273)34 b(comme)18 b(s)m('il)h(s)m('agissait)f(de)f(\253)f
Fz(x)j FC(\273.)-246 2633 y
SDict begin H.S end
 -246 2633 a -246 2633 a
SDict begin 12 H.A end
 -246
2633 a -246 2633 a
SDict begin [/View [/XYZ H.V]/Dest (Item.126) cvn /DEST pdfmark end
 -246 2633 a 0 TeXcolorgray -141 2728
a FC(2.)p 0 TeXcolorgray 43 w(On)e(r\351sout)h(l)o('\351quation)i(:)
1827 2911 y(0,)8 b(2)r Fz(t)19 b FB(\241)10 b FC(1,)e(6)16
b FB(\306)e FC(0)1642 3035 y(0,)8 b(2)r Fz(t)20 b FB(\241)1855
3046 y Fe(\010)1897 3025 y(\010)1863 3035 y FC(1,)8 b(6)j
FB(\305)2039 3046 y Fe(\010)2082 3025 y(\010)2047 3035
y FC(1,)d(6)16 b FB(\306)e FC(0)c FB(\305)g FC(1,)e(6)1993
3161 y Fe(\010)2036 3140 y(\010)2002 3150 y FC(0,)g(2)s
Fz(t)p 2002 3187 146 5 v 2012 3274 a Fe(\010)2054 3253
y(\010)2019 3263 y FC(0,)g(2)2171 3206 y FB(\306)2250
3150 y FC(1,)g(6)p 2250 3187 110 5 v 2250 3263 a(0,)g(2)2123
3377 y Fz(t)22 b FB(\306)14 b FC(8.)-36 3598 y Fz(a)k
FB(\306)c FC(0,)8 b(2,)21 b Fz(a)g FC(est)423 3542 y
Fm(L)516 3598 y FC(donc)c(le)h(signe)g(est)g(de)f(la)h(for)q(me)46
b FB(\241)17 b Fd(\036)g FB(\305)p 1507 3516 262 4 v
1507 3641 4 127 v 1765 3641 V 1507 3643 262 4 v -38 3778
a FC(On)g(en)h(d\351duit)f(le)h(tableau)g(de)f(signe)h(de)25
b Fz(f)1238 3748 y Fp(0)1277 3778 y FC(et)17 b(le)h(tableau)g(de)f(var)
q(iations)h(de)25 b Fz(f)50 b FC(:)p 0 TeXcolorgray 0
TeXcolorgray 1203 3915 a

 1203 3915 a 1203 3915 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -14.12393 ] concat

 pgfs


 1203
3915 a
 0 setgray
 1203 3915 a 173 w Fz(t)1203 3915 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1203 3915 a
 0 setgray

1203 3915 a 117 w Fz(f)1363 3885 y Fp(0)1384 3915 y FC(\()r
Fz(t)8 b FC(\))1203 3915 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 1203 3915 a
 0 setgray
 1203 3915 a 127
w Fz(f)19 b FC(\()r Fz(t)8 b FC(\))1203 3915 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 1203 3915
a
 0 setgray
 1203 3915 a FC(0)1203 3915 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.29675 -14.38297 ] concat

 pgfs


 1203 3915 a
 0 setgray
 1203 3915
a FC(8)1203 3915 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 187.89845 -14.40787 ] concat

 pgfs


 1203 3915 a
 0 setgray
 1203 3915 a FC(12)1203
3915 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -35.44627 ] concat

 pgfs


 1203 3915 a
 0 setgray
 1203 3915 a FB(\241)1203 3915 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1203
3915 a
 0 setgray
 1203 3915 a FC(0)1203 3915 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -36.57706 ] concat

 pgfs


 1203 3915 a
 0 setgray
 1203
3915 a FB(\305)1203 3915 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 49.84242 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -57.47212 ] concat

 pgfs


 1203 3915 a
 /pgfsc{}def/pgffc{}def
 1203 3915 a 1203
3915 a
 0 setgray
 1203 3915 a FC(12)1203 3915 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.12213 13.70874 49.84242 -59.46468 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -57.47212 ] concat

 pgfs


 1203 3915 a
 /pgfsc{}def/pgffc{}def
 1203
3915 a 1203 3915 a
 0 setgray
 1203 3915 a FC(12)1203 3915 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 116.66313 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 118.65569 -84.65753 ] concat

 pgfs


 1203
3915 a
 /pgfsc{}def/pgffc{}def
 1203 3915 a 1203 3915 a
 0 setgray
 1203 3915 a FC(5.6)1203
3915 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 116.66313 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 118.65569 -84.65753 ] concat

 pgfs


 1203 3915 a
 /pgfsc{}def/pgffc{}def
 1203 3915 a 1203 3915 a
 0 setgray
 1203 3915
a FC(5.6)1203 3915 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 67.39696 -58.68741 moveto

 110.60707 -75.98108 lineto

 pgfstr

 save

 [0.92836 -0.37154 0.37154 0.92836 110.60707 -75.98106 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 184.69933 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 186.69188 -57.47212 ] concat

 pgfs


 1203
3915 a
 /pgfsc{}def/pgffc{}def
 1203 3915 a 1203 3915 a
 0 setgray
 1203 3915 a FC(7.2)1203
3915 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 16.13966 184.69933 -59.54436 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 186.69188 -57.47212 ] concat

 pgfs


 1203 3915 a
 /pgfsc{}def/pgffc{}def
 1203 3915 a 1203 3915 a
 0 setgray
 1203 3915
a FC(7.2)1203 3915 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 136.65265 -76.87387 moveto

 178.64598 -60.09157 lineto

 pgfstr

 save

 [0.92856 0.37108 -0.37108 0.92856 178.64597 -60.09158 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38
4880 a FE(R)o(emarque)16 b(:)k FC(P)n(our)f(compl\351ter)j(les)e
(valeurs)h(aux)f(extr\351mit\351s)i(des)e(\003\350ches)o(,)h(on)f(fait)
g(un)g(tableau)h(de)e(valeurs)i(sur)3413 4881 y([)3438
4880 y(0;)8 b(12)3586 4881 y(])3633 4880 y(avec)20 b(un)g(pas)h(de)-38
4980 y(1,)d(en)g(pr)o(enant)f(uniquement)j(les)e(valeurs)g(qui)g(nous)g
(int\351r)o(essent.)-246 5012 y
SDict begin H.S end
 -246 5012 a -246 5012
a
SDict begin 12 H.A end
 -246 5012 a -246 5012 a
SDict begin [/View [/XYZ H.V]/Dest (Item.127) cvn /DEST pdfmark end
 -246 5012 a 0 TeXcolorgray
-141 5109 a FC(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)f(le)h(tableau)g
(de)f(var)q(iations)o(,)h(le)g(taux)g(d)n('anticorps)g(est)g(minimal)h
(\340)e(l)o('\342ge)h(de)f(8)h(mois)o(.)-246 5194 y
SDict begin H.S end
 -246
5194 a -246 5194 a
SDict begin 12 H.A end
 -246 5194 a -246 5194 a
SDict begin [/View [/XYZ H.V]/Dest (exo.42) cvn /DEST pdfmark end
 -246 5194
a 0 TeXcolorgray 114 x FE(Ex)o(er)o(cice)c(42)p 0 TeXcolorgray
41 w FC(On)21 b(suppose)h(que)f(le)g(pour)o(centage)g(de)f(femmes)j
(fumant)f(du)e(tabac)g(quotidiennement)j(en)e(fonction)h(de)e(l)o
('\342ge)j Fz(x)j FC(\(en)20 b(ann\351es\),)-246 5408
y(depuis)f(15)f(ans)g(jusqu)n('\340)g(40)g(ans)o(,)h(est)f(le)f(nombr)o
(e)25 b Fz(f)19 b FC(\()r Fz(x)5 b FC(\))18 b(donn\351)f(par)g(la)h
(for)q(mule)g(suivante)h(:)1528 5607 y Fz(f)g FC(\()r
Fz(x)5 b FC(\))14 b FB(\306)h(\241)p FC(0,)8 b(05)r Fz(x)2004
5573 y Fv(2)2051 5607 y FB(\305)i FC(3)r Fz(x)15 b FB(\241)10
b FC(10.)p 0 TeXcolorgray 1909 5895 a(24)p 0 TeXcolorgray
eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.25) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.128) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(1.)p 0 TeXcolorgray 51 w Fz(f)13 -193 y Fp(0)34
-163 y FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g(\241)p FC(0,)8
b(05)i FB(\243)g FC(2)r Fz(x)15 b FB(\305)10 b FC(3)g
FB(\243)g FC(1)g FB(\241)g FC(0)20 b FB(\306)14 b(\241)p
FC(0,)8 b(1)r Fz(x)15 b FB(\305)10 b FC(3.)-246 -133
y
SDict begin H.S end
 -246 -133 a -246 -133 a
SDict begin 12 H.A end
 -246 -133 a -246 -133 a
SDict begin [/View [/XYZ H.V]/Dest (Item.129) cvn /DEST pdfmark end
 -246
-133 a 0 TeXcolorgray -141 -42 a FC(2.)p 0 TeXcolorgray
43 w(On)17 b(r\351sout)h(l)o('\351quation)i(:)1815 117
y FB(\241)p FC(0,)8 b(1)r Fz(x)15 b FB(\305)10 b FC(3)16
b FB(\306)e FC(0)1699 242 y FB(\241)p FC(0,)8 b(1)r Fz(x)15
b FB(\305)1983 258 y Fe(\001)1983 242 y FC(3)d FB(\241)2100
258 y Fe(\001)2100 242 y FC(3)j FB(\306)f FC(0)c FB(\241)g
FC(3)1912 358 y Fe(\030)1995 337 y(\030)2010 334 y(\030)1920
356 y FB(\241)p FC(0,)e(1)t Fz(x)p 1920 393 211 5 v 1935
471 a Fe(\030)2018 451 y(\030)2033 447 y(\030)1944 469
y FB(\241)p FC(0,)g(1)2155 412 y FB(\306)2269 356 y(\241)p
FC(3)p 2234 393 165 5 v 2234 469 a FB(\241)p FC(0,)g(1)2097
583 y Fz(x)19 b FB(\306)14 b FC(30.)-36 776 y Fz(a)k
FB(\306)c(\241)p FC(0,)8 b(1,)21 b Fz(a)g FC(est)d Fb(\252)p
FC(donc)f(le)h(signe)g(est)g(de)f(la)g(for)q(me)46 b
FB(\305)17 b Fd(\036)h FB(\241)p 1548 694 262 4 v 1548
819 4 127 v 1806 819 V 1548 821 262 4 v -38 942 a FC(On)f(en)h
(d\351duit)f(le)h(tableau)g(de)f(signe)h(de)25 b Fz(f)1238
912 y Fp(0)1277 942 y FC(et)17 b(le)h(tableau)g(de)f(var)q(iations)h
(de)25 b Fz(f)50 b FC(:)p 0 TeXcolorgray 0 TeXcolorgray
1203 1053 a

 1203 1053 a 1203 1053 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203
1053 a 168 w Fz(x)1203 1053 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203 1053 a
111 w Fz(f)1357 1023 y Fp(0)1378 1053 y FC(\()r Fz(x)5
b FC(\))1203 1053 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203 1053 a 122 w Fz(f)19
b FC(\()r Fz(x)5 b FC(\))1203 1053 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 51.83319 -14.38297 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203
1053 a FC(15)1203 1053 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 119.86583 -14.38297 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203 1053 a FC(30)1203
1053 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 187.89845 -14.38297 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203 1053 a FC(40)1203 1053 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 1203
1053 a
 0 setgray
 1203 1053 a FB(\305)1203 1053 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203
1053 a FC(0)1203 1053 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 1203 1053 a
 0 setgray
 1203 1053 a FB(\241)1203
1053 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 43.76514 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 45.75769 -84.65753 ] concat

 pgfs


 1203 1053 a
 /pgfsc{}def/pgffc{}def
 1203 1053 a 1203 1053 a
 0 setgray
 1203 1053
a FC(23.75)1203 1053 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.20183 25.8633 43.76514 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 45.75769 -84.65753 ] concat

 pgfs


 1203 1053 a
 /pgfsc{}def/pgffc{}def
 1203 1053 a 1203 1053
a
 0 setgray
 1203 1053 a FC(23.75)1203 1053 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 117.8786 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.87115 -57.47212 ] concat

 pgfs


 1203 1053 a
 /pgfsc{}def/pgffc{}def
 1203 1053
a 1203 1053 a
 0 setgray
 1203 1053 a FC(35)1203 1053 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 117.8786 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 119.87115 -57.47212 ] concat

 pgfs


 1203 1053
a
 /pgfsc{}def/pgffc{}def
 1203 1053 a 1203 1053 a
 0 setgray
 1203 1053 a FC(35)1203 1053
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 73.47475 -74.93263 moveto

 111.82219 -59.59431 lineto

 pgfstr

 save

 [0.92845 0.37135 -0.37135 0.92845 111.82217 -59.59433 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 185.9148 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 187.90735 -84.68742 ] concat

 pgfs


 1203 1053 a
 /pgfsc{}def/pgffc{}def
 1203 1053
a 1203 1053 a
 0 setgray
 1203 1053 a FC(30)1203 1053 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 185.9148 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 187.90735 -84.68742 ] concat

 pgfs


 1203 1053
a
 /pgfsc{}def/pgffc{}def
 1203 1053 a 1203 1053 a
 0 setgray
 1203 1053 a FC(30)1203 1053
y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 135.43681 -58.70796 moveto

 179.86217 -76.48358 lineto

 pgfstr

 save

 [0.9284 -0.37146 0.37146 0.9284 179.86215 -76.48357 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38 1993 a FE(R)o(emarque)14
b(:)k FC(P)n(our)g(compl\351ter)h(les)g(valeurs)g(aux)f
(extr\351mit\351s)i(des)e(\003\350ches)o(,)g(on)h(fait)f(un)g(tableau)h
(de)f(valeurs)g(sur)3380 1994 y([)3406 1993 y(15;)8 b(40)3594
1994 y(])3639 1993 y(avec)18 b(un)g(pas)h(de)-38 2092
y(5,)f(en)g(pr)o(enant)f(uniquement)j(les)e(valeurs)g(qui)g(nous)g
(int\351r)o(essent.)-246 2120 y
SDict begin H.S end
 -246 2120 a -246 2120
a
SDict begin 12 H.A end
 -246 2120 a -246 2120 a
SDict begin [/View [/XYZ H.V]/Dest (Item.130) cvn /DEST pdfmark end
 -246 2120 a 0 TeXcolorgray
-141 2213 a FC(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)f(le)h(tableau)g
(de)f(var)q(iations)o(,)h(c)n('est)g(chez)f(les)h(femmes)h(de)e(30)i
(ans)e(que)h(le)g(pour)o(centage)g(de)f(fumeuses)j(est)e(le)f(plus)i
(impor)q(tant.)-246 2291 y
SDict begin H.S end
 -246 2291 a -246 2291 a
SDict begin 12 H.A end
 -246
2291 a -246 2291 a
SDict begin [/View [/XYZ H.V]/Dest (exo.43) cvn /DEST pdfmark end
 -246 2291 a 0 TeXcolorgray 107 x FE(Ex)o(er)o(cice)
14 b(43)p 0 TeXcolorgray 41 w FC(On)27 b(dispose)g(d)n('une)h
(cl\364tur)o(e)e(de)h(100)g(m\350tr)o(es)h(de)e(long)h(pour)f
(d\351limiter)i(un)f(terr)o(ain)g(r)o(ectangulair)o(e)f(le)h(long)g(d)n
('une)g(r)q(ivi\350r)o(e)g(\(la)-246 2498 y(cl\364tur)o(e)18
b(est)g(en)g(pointill\351s)h(\227)f(on)f(ne)h(met)g(pas)g(de)f
(cl\364tur)o(e)h(le)g(long)f(de)g(la)h(r)q(ivi\350r)o(e\).)f(On)g(note)
j Fz(x)j FC(et)c Fz(x)2734 2468 y Fp(0)2773 2498 y FC(les)f(longueurs)h
(des)e(c\364t\351s)h(du)f(terr)o(ain.)p 0 TeXcolorgray
0 TeXcolorgray 1123 3765 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.1692 a add def
/d 0.0 a add neg def /h 142.26372 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1123 3765 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 1  setrgbcolor  [ 28.45274 85.35823
170.71646 85.35823 170.71646 113.81097 28.45274 113.81097  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.7
0.7 1  setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0  setrgbcolor  [ 142.26372 85.35823
142.26372 28.45274 56.90549 28.45274 56.90549 85.35823  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.7 1 0.7  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 0.0 SLW 0 1 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 28.45274 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 3.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
1123 3765 a
tx@Dict begin { 43.81703 56.90549 } PutCoor PutBegin  end
 1123 3765 a 1125 3803 a Fz(x)1123 3765 y
tx@Dict begin  PutEnd  end

1123 3765 a 1123 3765 a
tx@Dict begin { 146.24707 56.90549 } PutCoor PutBegin  end
 1123 3765 a 1125 3803 a Fz(x)1123
3765 y
tx@Dict begin  PutEnd  end
 1123 3765 a 1123 3765 a
tx@Dict begin { 95.60123 22.76227 } PutCoor PutBegin  end
 1123 3765 a 1125 3828
a Fz(x)1169 3798 y Fp(0)1123 3765 y
tx@Dict begin  PutEnd  end
 1123 3765 a 2777
3765 a
currentpoint initclip moveto
 2777 3765 a -246 3924 a FC(On)h(voudr)o(ait)f(d\351limiter)i(le)
f(terr)o(ain)g(le)f(plus)i(gr)o(and)e(possible)o(.)-246
3964 y
SDict begin H.S end
 -246 3964 a -246 3964 a
SDict begin 12 H.A end
 -246 3964 a -246 3964
a
SDict begin [/View [/XYZ H.V]/Dest (Item.131) cvn /DEST pdfmark end
 -246 3964 a -246 3964 a
SDict begin H.S end
 -246 3964 a -246 3964 a
SDict begin 12 H.A end
 -246
3964 a -246 3964 a
SDict begin [/View [/XYZ H.V]/Dest (Item.132) cvn /DEST pdfmark end
 -246 3964 a 0 TeXcolorgray -141 4055
a FC(1.)p 0 TeXcolorgray 0 TeXcolorgray 43 w(\(a\))p
0 TeXcolorgray 43 w Fz(x)23 b FC(est)c(une)g(longueur)-5
b(,)20 b(donc)h Fz(x)f FB(\270)15 b FC(0.)k(P)m(ar)g(ailleurs)o(,)h(la)
e(longueur)k Fz(x)h FC(appar)o(a\356t)d(deux)e(fois)i(sur)e(la)h
(\002gur)o(e)o(,)e(donc)j Fz(x)k FC(ne)18 b(peut)i(pas)f(d\351passer)97
4155 y(50)f(\(car)e(2)10 b FB(\243)g FC(50)16 b FB(\306)e
FC(100\).)97 4265 y(C)o(onclusion)19 b(:)e(on)h(a)f(l)o('encadr)o
(ement)1944 4365 y(0)d FB(\267)j Fz(x)i FB(\267)14 b
FC(50.)-246 4401 y
SDict begin H.S end
 -246 4401 a -246 4401 a
SDict begin 12 H.A end
 -246 4401
a -246 4401 a
SDict begin [/View [/XYZ H.V]/Dest (Item.133) cvn /DEST pdfmark end
 -246 4401 a 0 TeXcolorgray -44 4511 a FC(\(b\))p
0 TeXcolorgray 41 w(Le)j(p\351r)q(im\350tr)o(e)o(,)h(100)h(m,)f(s)m
('obtient)g(en)g(faisant)g(le)g(calcul)1957 4610 y Fz(x)d
FB(\305)d Fz(x)j FB(\305)d Fz(x)2243 4576 y Fp(0)2266
4610 y FC(,)97 4746 y(donc)1885 4845 y(2)r Fz(x)j FB(\305)d
Fz(x)2092 4811 y Fp(0)2129 4845 y FB(\306)i FC(100)19
b(;)97 4980 y(et)e(donc)1896 5080 y Fz(x)1940 5046 y
Fp(0)1975 5080 y FB(\306)e FC(100)10 b FB(\241)g FC(2)r
Fz(x)5 b FC(.)-246 5116 y
SDict begin H.S end
 -246 5116 a -246 5116 a
SDict begin 12 H.A end
 -246
5116 a -246 5116 a
SDict begin [/View [/XYZ H.V]/Dest (Item.134) cvn /DEST pdfmark end
 -246 5116 a 0 TeXcolorgray -36 5226
a FC(\(c\))p 0 TeXcolorgray 41 w(L)-10 b('air)o(e)17
b(du)g(terr)o(ain)h(est)941 5385 y Fz(x)d FB(\243)d Fz(x)1106
5351 y Fp(0)1143 5385 y FB(\306)k Fz(x)f FB(\243)1333
5386 y FC(\()1360 5385 y(100)10 b FB(\241)g FC(2)r Fz(x)1641
5386 y FC(\))2690 5385 y(\(car)19 b Fz(x)2888 5351 y
Fp(0)2923 5385 y FB(\306)c FC(100)10 b FB(\241)g FC(2)r
Fz(x)5 b FC(\))1143 5509 y FB(\306)16 b Fz(x)f FB(\243)10
b FC(100)g FB(\305)i Fz(x)j FB(\243)10 b FC(\()p FB(\241)p
FC(2)r Fz(x)5 b FC(\))846 b(\(on)17 b(d\351veloppe\))1143
5646 y FB(\306)d FC(100)r Fz(x)h FB(\241)10 b FC(2)r
Fz(x)1539 5611 y Fv(2)1577 5646 y FC(.)p 0 TeXcolorgray
1909 5895 a(25)p 0 TeXcolorgray eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.26) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.135) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(2.)p 0 TeXcolorgray 43 w(On)17 b(d\351\002nit)h(\340)f(pr\351sent)
h(la)g(fonction)26 b Fz(f)36 b FC(sur)1248 -162 y([)1273
-163 y(0;)8 b(50)1421 -162 y(])1465 -163 y(par)1752 -63
y Fz(f)19 b FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g FC(100)r
Fz(x)h FB(\241)10 b FC(2)r Fz(x)2305 -97 y Fv(2)2343
-63 y FC(.)-38 71 y(A)n(utr)o(ement)18 b(dit,)26 b Fz(f)18
b FC(\()r Fz(x)5 b FC(\))18 b(donne)f(l)o('air)o(e)h(du)f(terr)o(ain)h
(pour)g(une)g(valeur)f(donn\351e)h(de)i Fz(x)5 b FC(.)-246
95 y
SDict begin H.S end
 -246 95 a -246 95 a
SDict begin 12 H.A end
 -246 95 a -246 95 a
SDict begin [/View [/XYZ H.V]/Dest (Item.136) cvn /DEST pdfmark end
 -246 95
a 0 TeXcolorgray -38 186 a FC(\(a\))p 0 TeXcolorgray
49 w Fz(f)148 156 y Fp(0)169 186 y FC(\()r Fz(x)g FC(\))14
b FB(\306)g FC(100)c FB(\243)g FC(1)g FB(\241)g FC(2)g
FB(\243)g FC(2)r Fz(x)23 b FB(\306)15 b FC(100)10 b FB(\241)g
FC(4)r Fz(x)5 b FC(.)-246 215 y
SDict begin H.S end
 -246 215 a -246 215 a
SDict begin 12 H.A end

-246 215 a -246 215 a
SDict begin [/View [/XYZ H.V]/Dest (Item.137) cvn /DEST pdfmark end
 -246 215 a 0 TeXcolorgray -44 306
a FC(\(b\))p 0 TeXcolorgray 41 w(On)17 b(r\351sout)h(l)o('\351quation)h
(:)1917 463 y(100)10 b FB(\241)g FC(4)r Fz(x)22 b FB(\306)14
b FC(0)1712 597 y Fe(\010)1767 569 y(\010)1721 588 y
FC(100)d FB(\241)f FC(4)r Fz(x)15 b FB(\241)2070 597
y Fe(\010)2126 569 y(\010)2078 588 y FC(100)i FB(\306)d
FC(0)c FB(\241)g FC(100)2041 706 y Fe(\010)2070 692 y(\010)2049
704 y FB(\241)p FC(4)s Fz(x)p 2049 741 142 5 v 2064 820
a Fe(\010)2093 806 y(\010)2072 818 y FB(\241)p FC(4)2215
761 y FB(\306)2294 704 y(\241)p FC(100)p 2294 741 177
5 v 2335 818 a FB(\241)p FC(4)2157 921 y Fz(x)19 b FB(\306)14
b FC(25.)99 1112 y Fz(a)k FB(\306)c(\241)p FC(4)j(\()p
Fr(")p FC(on)h(pr)o(end)f(le)h(coef\002cient)g(devant)i
Fz(x)5 b FC(\),)19 b Fz(a)i FC(est)d Fb(\252)p FC(donc)f(le)h(signe)g
(est)g(de)f(la)h(for)q(me)45 b FB(\305)18 b Fd(\036)f
FB(\241)p 2867 1030 262 4 v 2867 1154 4 127 v 3125 1154
V 2867 1156 262 4 v 97 1277 a FC(On)g(en)g(d\351duit)h(le)g(tableau)g
(de)f(signe)h(de)25 b Fz(f)1373 1247 y Fp(0)1411 1277
y FC(et)18 b(le)g(tableau)g(de)f(var)q(iations)g(de)26
b Fz(f)50 b FC(:)p 0 TeXcolorgray 0 TeXcolorgray 1271
1386 a

 1271 1386 a 1271 1386 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386
a 167 w Fz(x)1271 1386 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386 a 111
w Fz(f)1425 1355 y Fp(0)1446 1386 y FC(\()r Fz(x)5 b
FC(\))1271 1386 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386 a 121 w Fz(f)19
b FC(\()r Fz(x)5 b FC(\))1271 1386 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271
1386 a FC(0)1271 1386 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 119.86583 -14.38297 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386 a FC(25)1271
1386 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 187.89845 -14.38297 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386 a FC(50)1271 1386 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 1271
1386 a
 0 setgray
 1271 1386 a FB(\305)1271 1386 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271
1386 a FC(0)1271 1386 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 1271 1386 a
 0 setgray
 1271 1386 a FB(\241)1271
1386 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 52.27333 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -84.68742 ] concat

 pgfs


 1271 1386 a
 /pgfsc{}def/pgffc{}def
 1271 1386 a 1271 1386 a
 0 setgray
 1271 1386
a FC(0)1271 1386 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 52.27333 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 54.26588 -84.68742 ] concat

 pgfs


 1271 1386 a
 /pgfsc{}def/pgffc{}def
 1271 1386 a 1271 1386
a
 0 setgray
 1271 1386 a FC(0)1271 1386 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 24.4065 112.52972 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 114.52228 -57.47212 ] concat

 pgfs


 1271 1386 a
 /pgfsc{}def/pgffc{}def
 1271 1386
a 1271 1386 a
 0 setgray
 1271 1386 a FC(1)j(250)1271 1386 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 24.4065 112.52972 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 114.52228 -57.47212 ] concat

 pgfs


 1271
1386 a
 /pgfsc{}def/pgffc{}def
 1271 1386 a 1271 1386 a
 0 setgray
 1271 1386 a FC(1)g(250)1271
1386 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 64.966 -78.34283 moveto

 106.47324 -61.7354 lineto

 pgfstr

 save

 [0.9284 0.37146 -0.37146 0.9284 106.47322 -61.73541 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 188.3457 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -84.68742 ] concat

 pgfs


 1271 1386 a
 /pgfsc{}def/pgffc{}def
 1271
1386 a 1271 1386 a
 0 setgray
 1271 1386 a FC(0)1271 1386 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 8.84691 188.3457 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 190.33826 -84.68742 ] concat

 pgfs


 1271
1386 a
 /pgfsc{}def/pgffc{}def
 1271 1386 a 1271 1386 a
 0 setgray
 1271 1386 a FC(0)1271
1386 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 140.78596 -60.84845 moveto

 182.29321 -77.45529 lineto

 pgfstr

 save

 [0.9284 -0.37144 0.37144 0.9284 182.2932 -77.45529 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 97 2323 a FE(R)o(emarque)14
b(:)19 b FC(P)n(our)f(compl\351ter)i(les)f(valeurs)g(aux)f
(extr\351mit\351s)j(des)d(\003\350ches)o(,)h(on)g(fait)g(un)g(tableau)g
(de)f(valeurs)h(sur)3522 2324 y([)3548 2323 y(0;)8 b(50)3696
2324 y(])3741 2323 y(avec)18 b(un)h(pas)97 2422 y(de)e(25.)-246
2433 y
SDict begin H.S end
 -246 2433 a -246 2433 a
SDict begin 12 H.A end
 -246 2433 a -246 2433
a
SDict begin [/View [/XYZ H.V]/Dest (Item.138) cvn /DEST pdfmark end
 -246 2433 a 0 TeXcolorgray -36 2542 a FC(\(c\))p 0
TeXcolorgray 41 w(D)o('apr\350s)g(le)g(tableau)h(de)f(var)q(iations)o
(,)i(l)o('air)o(e)e(du)h(terr)o(ain)f(est)h(maximale)h(lorsque)i
Fz(x)e FB(\306)14 b FC(25.)97 2691 y FE(R)o(emarque)19
b(:)k FC(N)n(otons)g(que)o(,)h(dans)f(ce)g(cas)o(,)j
Fz(x)1470 2661 y Fp(0)1512 2691 y FB(\306)20 b FC(100)12
b FB(\241)g FC(2)g FB(\243)g FC(25)24 b FB(\306)c FC(50.)25
b(Le)e(terr)o(ain)h(d)n('air)o(e)f(maximale)i(a)e(donc)g(un)g
(c\364t\351)h(adjacent)f(\340)g(la)97 2791 y(r)q(ivi\350r)o(e)17
b(de)g(25)h(m)g(de)f(long)g(et)h(un)g(c\364t\351)g(par)o(all\350le)h
(\340)e(la)g(r)q(ivi\350r)o(e)g(de)g(50)i(m)e(de)h(long.)-246
2869 y
SDict begin H.S end
 -246 2869 a -246 2869 a
SDict begin 12 H.A end
 -246 2869 a -246 2869
a
SDict begin [/View [/XYZ H.V]/Dest (exo.44) cvn /DEST pdfmark end
 -246 2869 a 0 TeXcolorgray 106 x FE(Ex)o(er)o(cice)c(44)p
0 TeXcolorgray 41 w FC(P)n(our)j(v\351r)q(i\002er)h(le)g
(fonctionnement)i(de)e(la)g(r\351gulation)g(de)g(la)f(glyc\351mie)h
(chez)g(un)g(individu,)h(on)e(lui)i(injecte)g(une)f(quantit\351)h
(impor)o(-)-246 3075 y(tante)f(de)g(glucose)g(:)f(on)h(mesur)o(e)g
(ensuite)h(la)e(concentr)o(ation)i(d)n('insuline)g(plasmatique)h
(pendant)e(70)g(minutes)o(.)-246 3174 y(La)k(concentr)o(ation)g(d)n
('insuline)i(plasmatique)g(\(unit\351)e(non)g(pr\351cis\351e\))g(en)f
(fonction)i(du)e(temps)k Fz(x)h FC(\(expr)q(im\351)c(en)g(minutes\),)h
(est)f(donn\351e)g(par)f(la)-246 3274 y(fonction)27 b
Fz(f)36 b FC(d\351\002nie)17 b(pour)j Fz(x)g FB(2)694
3275 y FC([)720 3274 y(0;)8 b(70)868 3275 y(])912 3274
y(par)1528 3374 y Fz(f)19 b FC(\()r Fz(x)5 b FC(\))14
b FB(\306)h(\241)p FC(0,)8 b(1)r Fz(x)1964 3339 y Fv(2)2010
3374 y FB(\305)i FC(10)r Fz(x)15 b FB(\305)10 b FC(35.)-246
3417 y
SDict begin H.S end
 -246 3417 a -246 3417 a
SDict begin 12 H.A end
 -246 3417 a -246 3417
a
SDict begin [/View [/XYZ H.V]/Dest (Item.139) cvn /DEST pdfmark end
 -246 3417 a 0 TeXcolorgray -141 3508 a FC(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1048 3560 2013 4 v 1048
3660 4 100 v 1155 3630 a Fz(x)p 1301 3660 V 181 w FC(0)p
1485 3660 V 144 w(10)p 1710 3660 V 144 w(20)p 1934 3660
V 145 w(30)p 2159 3660 V 144 w(40)p 2383 3660 V 145 w(50)p
2608 3660 V 144 w(60)p 2832 3660 V 145 w(70)p 3057 3660
V 1048 3663 2013 4 v 1048 3763 4 100 v 1109 3733 a Fz(f)19
b FC(\()r Fz(x)5 b FC(\))p 1301 3763 V 102 w(35)p 1485
3763 V 104 w(125)p 1710 3763 V 105 w(195)p 1934 3763
V 104 w(245)p 2159 3763 V 105 w(275)p 2383 3763 V 104
w(285)p 2608 3763 V 105 w(275)p 2832 3763 V 104 w(245)p
3057 3763 V 1048 3766 2013 4 v -246 3796 a
SDict begin H.S end
 -246 3796
a -246 3796 a
SDict begin 12 H.A end
 -246 3796 a -246 3796 a
SDict begin [/View [/XYZ H.V]/Dest (Item.140) cvn /DEST pdfmark end
 -246 3796 a 0 TeXcolorgray
-141 3866 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
861 4886 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 287.3994 a add def
/d 0.0 a add neg def /h 116.98798 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 861 4886 a 1026 4737 a @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 5 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 267.47171 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.43628
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 99.02512 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45444
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 267.47171  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 267.47171  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 99.02512  def /dT 1864790 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 2.84544  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.02512
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 267.47171
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 99.02512  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 99.02512  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 267.47171  def /dT 1863600 abs 65536 div viceversa
{ neg } if def /DT 100. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.28436  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.28436  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.02512
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 267.47171
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1011 4834 a Fv(0)190
b(10)174 b(20)g(30)g(40)h(50)f(60)g(70)g(80)937 4756
y(0)876 4520 y(100)876 4284 y(200)1026 4737 y
tx@Dict begin  gsave STV CP T /ps@rot -180. def grestore  end
 1026 4737
a 1026 4737 a
tx@Dict begin { 142.27219 81.0434 } PutCoor PutBegin  end
 1026 4737 a 1026 4737 a
tx@Dict begin ps@rot  RotBegin  end
 1026 4737 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -20. def /x1 50. def
/dx x1 x sub 49 div def /F@pstplot (x^2/2/5.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 2.84544 mul F@pstplot 0.28436 mul } def  /ps@Exit
false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30 0.28436
mul gt { moveto } { dup -1.e30 0.28436 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 0.28436 mul gt { moveto } { dup -1.e30 0.28436 mul lt { moveto
} { L } ifelse } ifelse  } if  gsave 2.0 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1026 4737 a
tx@Dict begin RotEnd  end
 1026 4737 a 1026
4737 a
tx@Dict begin  PutEnd  end
 1026 4737 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 195.50554 71.0907 0.0
71.0907   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 89.03882 0.0 89.03882
71.0907   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 195.50554 0.0 195.50554
71.0907   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 1026 4737 a
tx@Dict begin { 5.69089 96.68335 } PutCoor PutBegin  end
 1026 4737 a 54 x
FC(C)o(oncentr)o(ation)1026 4737 y
tx@Dict begin  PutEnd  end
 1026 4737 a 1026 4737
a
tx@Dict begin { 231.99036 24.17084 } PutCoor PutBegin  end
 1026 4737 a 47 x FC(temps)1026 4884 y(\(en)18 b(min\))1026
4737 y
tx@Dict begin  PutEnd  end
 1026 4737 a 3247 4886 a
currentpoint initclip moveto
 3247 4886 a -246 4917
a
SDict begin H.S end
 -246 4917 a -246 4917 a
SDict begin 12 H.A end
 -246 4917 a -246 4917 a
SDict begin [/View [/XYZ H.V]/Dest (Item.141) cvn /DEST pdfmark end
 -246
4917 a 0 TeXcolorgray -141 5026 a FC(3.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1203 5077 a

 1203 5077 a
1203 5077 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1203 5077 a
 0 setgray
 1203 5077 a 168 w Fz(x)1203 5077
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -47.65634 ] concat

 pgfs


 1203 5077 a
 0 setgray
 1203 5077 a 122 w Fz(f)h FC(\()r Fz(x)5
b FC(\))1203 5077 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -68.03616 moveto

 204.10854 -68.03616 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -68.03616 lineto

 204.10854 -68.03616 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -68.03616 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -68.03616 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 1203 5077 a
 0 setgray
 1203 5077 a FC(0)1203
5077 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 119.86583 -14.38297 ] concat

 pgfs


 1203 5077 a
 0 setgray
 1203 5077 a FC(50)1203 5077 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 187.89845 -14.38297 ] concat

 pgfs


 1203
5077 a
 0 setgray
 1203 5077 a FC(70)1203 5077 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 49.84242 -64.05106 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -62.0087 ] concat

 pgfs


 1203 5077 a
 /pgfsc{}def/pgffc{}def
 1203
5077 a 1203 5077 a
 0 setgray
 1203 5077 a FC(35)1203 5077 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 49.84242 -64.05106 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -62.0087 ] concat

 pgfs


 1203
5077 a
 /pgfsc{}def/pgffc{}def
 1203 5077 a 1203 5077 a
 0 setgray
 1203 5077 a FC(35)1203
5077 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 115.4477 -36.83575 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 117.44025 -34.7934 ] concat

 pgfs


 1203 5077 a
 /pgfsc{}def/pgffc{}def
 1203 5077 a 1203 5077 a
 0 setgray
 1203 5077
a FC(285)1203 5077 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 115.4477 -36.83575 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 117.44025 -34.7934 ] concat

 pgfs


 1203 5077 a
 /pgfsc{}def/pgffc{}def
 1203 5077 a 1203 5077
a
 0 setgray
 1203 5077 a FC(285)1203 5077 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 67.39705 -54.68999 moveto

 109.39136 -37.88834 lineto

 pgfstr

 save

 [0.9284 0.37143 -0.37143 0.9284 109.39134 -37.88835 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 183.48389 -64.05106 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 185.47644 -62.0087 ] concat

 pgfs



1203 5077 a
 /pgfsc{}def/pgffc{}def
 1203 5077 a 1203 5077 a
 0 setgray
 1203 5077 a FC(245)1203
5077 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 183.48389 -64.05106 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 185.47644 -62.0087 ] concat

 pgfs


 1203 5077 a
 /pgfsc{}def/pgffc{}def
 1203 5077 a 1203 5077 a
 0 setgray
 1203 5077
a FC(245)1203 5077 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 137.86784 -37.00285 moveto

 177.43115 -52.83197 lineto

 pgfstr

 save

 [0.9284 -0.37143 0.37143 0.9284 177.43114 -52.83195 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray 1909 5895 a FC(26)p 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.27) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.142) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -163
a FC(4.)p 0 TeXcolorgray 43 w(La)17 b(concentr)o(ation)i(d)n('insuline)
h(est)e(maximale)h(au)e(bout)g(de)h(50)g(min.)-246 -148
y
SDict begin H.S end
 -246 -148 a -246 -148 a
SDict begin 12 H.A end
 -246 -148 a -246 -148 a
SDict begin [/View [/XYZ H.V]/Dest (Item.143) cvn /DEST pdfmark end
 -246
-148 a 0 TeXcolorgray -141 -34 a FC(5.)p 0 TeXcolorgray
43 w(La)f(concentr)o(ation)i(d)n('insuline)h(est)e(sup\351r)q(ieur)o(e)
g(\340)f(250)i(de)e(32)h(\340)f(68)h(min)g(environ)g(\(voir)f
(pointill\351s)j(rouges\),)d(donc)g(pendant)i(36)f(min.)-246
0 y
SDict begin H.S end
 -246 0 a -246 0 a
SDict begin 12 H.A end
 -246 0 a -246 0 a
SDict begin [/View [/XYZ H.V]/Dest (Item.144) cvn /DEST pdfmark end
 -246 0 a 0 TeXcolorgray
-141 95 a FC(6.)p 0 TeXcolorgray 43 w(On)f(r)o(epr)o(end)g(les)h
(questions)h(3)f(et)f(4)h(\340)f(l)o('aide)h(de)f(la)h(d\351r)q
(ivation)f(:)1342 309 y Fz(f)1384 275 y Fp(0)1406 309
y FC(\()r Fz(x)5 b FC(\))14 b FB(\306)g(\241)p FC(0,)8
b(1)i FB(\243)g FC(2)r Fz(x)15 b FB(\305)10 b FC(10)g
FB(\243)g FC(1)g FB(\305)g FC(0)20 b FB(\306)14 b(\241)p
FC(0,)8 b(2)r Fz(x)15 b FB(\305)10 b FC(10.)-38 473 y(On)17
b(r\351sout)h(l)o('\351quation)i(:)1808 770 y FB(\241)p
FC(0,)8 b(2)r Fz(x)15 b FB(\305)10 b FC(10)18 b FB(\306)c
FC(0)1652 894 y FB(\241)p FC(0,)8 b(2)r Fz(x)15 b FB(\305)1928
906 y Fe(\032)1944 895 y(\032)1936 894 y FC(10)e FB(\241)2086
906 y Fe(\032)2101 895 y(\032)2094 894 y FC(10)j FB(\306)e
FC(0)c FB(\241)g FC(10)1946 1011 y Fe(\030)2029 990 y(\030)2044
987 y(\030)1955 1009 y FB(\241)p FC(0,)e(2)s Fz(x)p 1955
1046 211 5 v 1970 1124 a Fe(\030)2053 1103 y(\030)2067
1100 y(\030)1978 1122 y FB(\241)p FC(0,)g(2)2190 1065
y FB(\306)2283 1009 y(\241)p FC(10)p 2269 1046 165 5
v 2269 1122 a FB(\241)p FC(0,)g(2)2131 1236 y Fz(x)20
b FB(\306)14 b FC(50.)-36 1457 y Fz(a)k FB(\306)c(\241)p
FC(0,)8 b(2,)21 b Fz(a)g FC(est)d Fb(\252)p FC(donc)f(le)h(signe)g(est)
g(de)f(la)g(for)q(me)46 b FB(\305)17 b Fd(\036)h FB(\241)p
1548 1375 262 4 v 1548 1499 4 127 v 1806 1499 V 1548
1501 262 4 v -38 1637 a FC(On)f(en)h(d\351duit)f(le)h(tableau)g(de)f
(signe)h(de)25 b Fz(f)1238 1606 y Fp(0)1277 1637 y FC(et)17
b(le)h(tableau)g(de)f(var)q(iations)h(de)25 b Fz(f)50
b FC(:)p 0 TeXcolorgray 0 TeXcolorgray 1203 1774 a

 1203
1774 a 1203 1774 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -13.56602 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203 1774 a 168 w Fz(x)1203
1774 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -36.66914 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203 1774 a 111 w Fz(f)1357 1743 y
Fp(0)1378 1774 y FC(\()r Fz(x)5 b FC(\))1203 1774 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 0.00116 -70.33508 ] concat

 pgfs


 1203
1774 a
 0 setgray
 1203 1774 a 122 w Fz(f)19 b FC(\()r Fz(x)5 b FC(\))1203
1774 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 0.0 -22.6787 moveto

 204.10854 -22.6787 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -45.35742 moveto

 204.10854 -45.35742 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 -90.71487 moveto

 204.10854 -90.71487 lineto

 pgfstr

 restore

 save

 0.3985 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 -90.71487 lineto

 204.10854 -90.71487 lineto

 204.10854 0.0 lineto

 closepath

 204.10854 -90.71487 moveto

 pgfstr

 restore

 save

 0.3985 pgfw

 45.35742 0.0 moveto

 45.35742 -90.71487 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 54.26411 -14.38297 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203 1774 a FC(0)1203 1774 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 119.86583 -14.38297 ] concat

 pgfs


 1203
1774 a
 0 setgray
 1203 1774 a FC(50)1203 1774 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 187.89845 -14.38297 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203
1774 a FC(70)1203 1774 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.42673 -36.57706 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203 1774 a FB(\305)1203
1774 y


 pgfr

 restore

 restore

 save

 restore

 save

 0.3985 pgfw

 [ 0.3985 1.99255 ] 0.0 setdash

 /pgfsc{0 setgray}def

 124.73297 -22.6787 moveto

 124.73297 -45.35742 lineto

 gsave pgfsc pgfstr grestore newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 122.30862 -37.06345 ] concat

 pgfs


 1203 1774 a
 0 setgray
 1203 1774 a FC(0)1203 1774 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.4701 -35.44627 ] concat

 pgfs


 1203
1774 a
 0 setgray
 1203 1774 a FB(\241)1203 1774 y


 pgfr

 restore

 restore

 save

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 49.84242 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -84.68742 ] concat

 pgfs


 1203 1774 a
 /pgfsc{}def/pgffc{}def
 1203
1774 a 1203 1774 a
 0 setgray
 1203 1774 a FC(35)1203 1774 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 13.70874 49.84242 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 51.83498 -84.68742 ] concat

 pgfs


 1203
1774 a
 /pgfsc{}def/pgffc{}def
 1203 1774 a 1203 1774 a
 0 setgray
 1203 1774 a FC(35)1203
1774 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 115.4477 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 117.44025 -57.47212 ] concat

 pgfs


 1203 1774 a
 /pgfsc{}def/pgffc{}def
 1203 1774 a 1203 1774 a
 0 setgray
 1203 1774
a FC(285)1203 1774 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 115.4477 -59.51448 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 117.44025 -57.47212 ] concat

 pgfs


 1203 1774 a
 /pgfsc{}def/pgffc{}def
 1203 1774 a 1203 1774
a
 0 setgray
 1203 1774 a FC(285)1203 1774 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 67.39705 -77.37018 moveto

 109.39136 -60.56859 lineto

 pgfstr

 save

 [0.9284 0.37143 -0.37143 0.9284 109.39134 -60.5686 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 183.48389 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 185.47644 -84.68742 ] concat

 pgfs



1203 1774 a
 /pgfsc{}def/pgffc{}def
 1203 1774 a 1203 1774 a
 0 setgray
 1203 1774 a FC(245)1203
1774 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 10.17194 18.57054 183.48389 -86.72977 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 185.47644 -84.68742 ] concat

 pgfs


 1203 1774 a
 /pgfsc{}def/pgffc{}def
 1203 1774 a 1203 1774 a
 0 setgray
 1203 1774
a FC(245)1203 1774 y


 pgfr

 restore

 restore

 save
 0 TeXcolorgray
 137.86784 -59.68307 moveto

 177.43115 -75.51205 lineto

 pgfstr

 save

 [0.9284 -0.37143 0.37143 0.9284 177.43114 -75.51204 ] concat

 save 2.39102 0.0 moveto 1.39476 0.19925 -0.3985 0.59775 -1.59401 1.49438
curveto -0.59775 0.3985 -0.59775 -0.3985 -1.59401 -1.49438 curveto
-0.3985 -0.59775 1.39476 -0.19925 2.39102 0.0 curveto closepath pgffill
restore

 restore
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 -38
2739 a FC(La)17 b(concentr)o(ation)i(est)f(bien)g(maximale)h(apr\350s)f
(50)g(min.)-246 2884 y
SDict begin H.S end
 -246 2884 a -246 2884 a
SDict begin 12 H.A end
 -246 2884
a -246 2884 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 -246 2884 a 132 x FF(7)105 b(Arbr)n(es)23
b(de)g(pr)o(obabilit\351s)-246 3125 y
SDict begin H.S end
 -246 3125 a -246
3125 a
SDict begin 12 H.A end
 -246 3125 a -246 3125 a
SDict begin [/View [/XYZ H.V]/Dest (exo.45) cvn /DEST pdfmark end
 -246 3125 a -246 3110
a
SDict begin H.S end
 -246 3110 a -246 3110 a
SDict begin 12 H.A end
 -246 3110 a -246 3110 a
SDict begin [/View [/XYZ H.V]/Dest (Item.145) cvn /DEST pdfmark end
 -246
3110 a 0 TeXcolorgray 90 x FE(Ex)o(er)o(cice)14 b(45)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(On)24 b(par)q(t)f(de)h(100)h(co)n(yotes)o(.)e(C)o(omme)j(60)e
(\045)g(des)g(co)n(yotes)f(sont)i(malades)o(,)g(on)f(en)g(a)g(60)h
(malades)f(et)g(40)h(en)f(bonne)g(sant\351.)-38 3300
y(Ensuite)19 b(on)e(calcule)h(:)p 0 TeXcolorgray 7 3414
a(\225)p 0 TeXcolorgray 42 w(95)g(\045)f(de)g(60)i(valent)699
3381 y Fv(60)p Fp(\243)p Fv(95)p 699 3394 165 5 v 735
3443 a(100)888 3414 y FB(\306)14 b FC(57)k(;)p 0 TeXcolorgray
7 3523 a(\225)p 0 TeXcolorgray 42 w(90)g(\045)f(de)g(40)i(valent)699
3490 y Fv(40)p Fp(\243)p Fv(90)p 699 3503 V 735 3551
a(100)888 3523 y FB(\306)14 b FC(36.)-38 3637 y(On)j(peut)i(alors)e
(compl\351ter)i(le)f(tableau)g(:)p 0 TeXcolorgray 0 TeXcolorgray
901 3724 2305 4 v 901 3824 4 100 v 1477 3824 V 1530 3794
a(T)-8 b(est)1686 3738 y Fm(L)p 2052 3824 V 2105 3794
a FC(T)g(est)19 b Fb(\252)p 2628 3824 V 341 w FC(T)-8
b(otal)p 3203 3824 V 901 3827 2305 4 v 901 3927 4 100
v 954 3897 a(M)o(alades)p 1477 3927 V 286 w(57)p 2052
3927 V 495 w(3)p 2628 3927 V 536 w(60)p 3203 3927 V 901
3930 2305 4 v 901 4030 4 100 v 954 4000 a(S)o(ains)p
1477 4030 V 394 w(4)p 2052 4030 V 535 w(36)p 2628 4030
V 496 w(40)p 3203 4030 V 901 4033 2305 4 v 901 4133 4
100 v 954 4103 a(T)g(otal)p 1477 4133 V 406 w(61)p 2052
4133 V 495 w(39)p 2628 4133 V 496 w(100)p 3203 4133 V
901 4136 2305 4 v -246 4244 a
SDict begin H.S end
 -246 4244 a -246 4244 a
SDict begin 12 H.A end

-246 4244 a -246 4244 a
SDict begin [/View [/XYZ H.V]/Dest (Item.146) cvn /DEST pdfmark end
 -246 4244 a 0 TeXcolorgray -141
4339 a FC(2.)p 0 TeXcolorgray 43 w Fz(P)8 b FC(\()r Fz(M)18
b FB(\\)10 b Fz(T)i FC(\))i FB(\306)393 4306 y Fv(57)p
377 4319 93 5 v 377 4367 a(100)494 4339 y FB(\306)g FC(0,)8
b(57)19 b(et)f Fz(P)8 b FC(\()p Fz(T)k FC(\))i FB(\306)1088
4306 y Fv(61)p 1073 4319 V 1073 4367 a(100)1189 4339
y FB(\306)h FC(0,)8 b(61.)-246 4382 y
SDict begin H.S end
 -246 4382 a -246
4382 a
SDict begin 12 H.A end
 -246 4382 a -246 4382 a
SDict begin [/View [/XYZ H.V]/Dest (Item.147) cvn /DEST pdfmark end
 -246 4382 a 0 TeXcolorgray
-141 4468 a FC(3.)p 0 TeXcolorgray 43 w(On)17 b(r)o(epr\351sente)h(la)g
(situation)h(par)e(un)h(arbr)o(e)e(pond\351r\351)i(:)p
0 TeXcolorgray 0 TeXcolorgray 1331 5055 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 1331 5055 a
1999 4755 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1999 4755 a 2 w Fz(M)2039 4728 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039 4728
a 2039 4728 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2039 4728 a 1964 4754 a FC(0,)8 b(60)2039
4728 y
tx@Dict begin PutEnd  end
 2039 4728 a 2719 4605 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 4605 a Fz(T)2748
4578 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 4578 a 2748 4578 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2748 4578 a 2673 4604
a FC(0,)g(95)2748 4578 y
tx@Dict begin PutEnd  end
 2748 4578 a 2719 4917 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719
4917 a 2719 4850 59 5 v Fz(T)2748 4578 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 4578 a
2748 4578 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2748 4578 a 2673 4604 a FC(0,)g(05)2748 4578
y
tx@Dict begin PutEnd  end
 2748 4578 a 1999 5368 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 9.60999 4.805 4.55145
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1999 5368 a 1999 5301 80 5
v 2 w Fz(M)2039 5330 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039 5330 a 2039 5330 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2039 5330
a 1964 5355 a FC(0,)g(40)2039 5330 y
tx@Dict begin PutEnd  end
 2039 5330 a 2719
5206 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 5206 a Fz(T)2748 5180 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 5180 a 2748
5180 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2748 5180 a 2673 5205 a FC(0,)g(10)2748 5180 y
tx@Dict begin PutEnd  end

2748 5180 a 2719 5518 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 5518 a 2719 5451 59 5 v
Fz(T)2748 5180 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 5180 a 2748 5180 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2748 5180 a
2673 5205 a FC(0,)g(90)2748 5180 y
tx@Dict begin PutEnd  end
 2748 5180 a -38 5642
a FC(On)17 b(en)h(d\351duit)f(:)p 0 TeXcolorgray 1909
5895 a(27)p 0 TeXcolorgray eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.28) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 7 -163 a FC(\225)p 0 TeXcolorgray
42 w Fz(P)8 b FC(\()r Fz(M)18 b FB(\\)10 b Fz(T)i FC(\))i
FB(\306)g FC(0,)8 b(60)i FB(\243)g FC(0,)e(95)18 b FB(\306)d
FC(0,)8 b(57)19 b(;)p 0 TeXcolorgray 7 -63 a(\225)p 0
TeXcolorgray 42 w(D)o('apr\350s)e(la)g(for)q(mule)i(des)e
(probabilit\351s)h(totales)o(,)h(la)e(probabilit\351)h(que)g(le)g(test)
g(soit)g(positif)h(est)f(:)1448 134 y Fz(P)8 b FC(\()p
Fz(T)k FC(\))i FB(\306)g Fz(P)1761 135 y FC(\()1790 134
y Fz(M)k FB(\\)10 b Fz(T)2001 135 y FC(\))2039 134 y
FB(\305)g Fz(P)2167 47 y Fm(\263)p 2198 68 80 5 v 2200
134 a Fz(M)18 b FB(\\)10 b Fz(T)2411 47 y Fm(\264)1629
285 y FB(\306)k FC(0,)8 b(60)i FB(\243)g FC(0,)e(95)i
FB(\305)g FC(0,)e(40)j FB(\243)f FC(0,)f(10)21 b FB(\306)14
b FC(0,)8 b(61.)-38 515 y(On)17 b(r)o(etrouve)g(bien)h(les)g
(r\351sultats)h(de)e(la)g(question)i(2.)-246 599 y
SDict begin H.S end
 -246
599 a -246 599 a
SDict begin 12 H.A end
 -246 599 a -246 599 a
SDict begin [/View [/XYZ H.V]/Dest (exo.46) cvn /DEST pdfmark end
 -246 599 a -246
617 a
SDict begin H.S end
 -246 617 a -246 617 a
SDict begin 12 H.A end
 -246 617 a -246 617 a
SDict begin [/View [/XYZ H.V]/Dest (Item.148) cvn /DEST pdfmark end
 -246
617 a 0 TeXcolorgray 97 x FE(Ex)o(er)o(cice)14 b(46)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(On)j(r)o(epr\351sente)h(la)g(situation)h(par)e(un)h(arbr)o(e)e
(pond\351r\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1329
1300 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 1329 1300 a 2009 1001 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.84 3.42 3.21748 } false
/N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2009 1001 a 6 w Fz(A)2038
974 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2038 974 a 2038 974 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2038 974 a 1963 1000 a FC(0,)8
b(70)2038 974 y
tx@Dict begin PutEnd  end
 2038 974 a 2714 850 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.76 3.87999 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2714 850 a Fz(D)2746
824 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2746 824 a 2746 824 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2746 824 a 2671 849 a FC(0,)g(02)2746
824 y
tx@Dict begin PutEnd  end
 2746 824 a 2714 1162 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.76 3.87999 4.55145 }
false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2714 1162 a 2714 1095 65
5 v Fz(D)2746 824 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2746 824 a 2746 824 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2746 824 a
2671 849 a FC(0,)g(98)2746 824 y
tx@Dict begin PutEnd  end
 2746 824 a 2009 1613
a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 6.84 3.42 4.55145 } false
/N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2009 1613 a 2009 1546 57 5 v 6 w Fz(A)2038 1575 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2038
1575 a 2038 1575 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2038 1575 a 1963 1601 a FC(0,)g(30)2038
1575 y
tx@Dict begin PutEnd  end
 2038 1575 a 2714 1452 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.76 3.87999 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2714 1452 a Fz(D)2746
1425 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2746 1425 a 2746 1425 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2746 1425 a 2671 1451
a FC(0,)g(03)2746 1425 y
tx@Dict begin PutEnd  end
 2746 1425 a 2714 1764 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.76 3.87999 4.55145 }
false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2714
1764 a 2714 1697 65 5 v Fz(D)2746 1425 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2746 1425 a
2746 1425 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2746 1425 a 2671 1451 a FC(0,)g(97)2746 1425
y
tx@Dict begin PutEnd  end
 2746 1425 a -246 1807 a
SDict begin H.S end
 -246 1807 a -246 1807 a
SDict begin 12 H.A end
 -246
1807 a -246 1807 a
SDict begin [/View [/XYZ H.V]/Dest (Item.149) cvn /DEST pdfmark end
 -246 1807 a 0 TeXcolorgray -141 1920
a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 88 w(\225)p 0
TeXcolorgray 42 w Fz(P)143 1832 y Fm(\263)180 1920 y
Fz(A)13 b FB(\\)p 306 1853 65 5 v 10 w Fz(D)371 1832
y Fm(\264)417 1920 y FB(\306)h FC(0,)8 b(70)i FB(\243)g
FC(0,)e(98)18 b FB(\306)c FC(0,)8 b(686)20 b(;)p 0 TeXcolorgray
7 2032 a(\225)p 0 TeXcolorgray 42 w(d)n('apr\350s)e(la)f(for)q(mule)h
(des)g(probabilit\351s)g(totales)o(,)h(la)e(probabilit\351)h(que)g(la)f
(pi\350ce)h(ait)g(un)g(d\351faut)g(est)g(:)1425 2230
y Fz(P)8 b FC(\()p Fz(D)e FC(\))14 b FB(\306)g Fz(P)1744
2231 y FC(\()1777 2230 y Fz(A)f FB(\\)d Fz(D)1967 2231
y FC(\))2004 2230 y FB(\305)g Fz(P)2132 2142 y Fm(\263)p
2164 2163 57 5 v 2170 2230 a Fz(A)j FB(\\)d Fz(D)2360
2142 y Fm(\264)1612 2380 y FB(\306)k FC(0,)8 b(70)i FB(\243)g
FC(0,)e(02)i FB(\305)g FC(0,)e(30)j FB(\243)f FC(0,)f(03)21
b FB(\306)14 b FC(0,)8 b(023.)-246 2491 y
SDict begin H.S end
 -246 2491 a
-246 2491 a
SDict begin 12 H.A end
 -246 2491 a -246 2491 a
SDict begin [/View [/XYZ H.V]/Dest (exo.47) cvn /DEST pdfmark end
 -246 2491 a -38 2495
a
SDict begin H.S end
 -38 2495 a -38 2495 a
SDict begin 12 H.A end
 -38 2495 a -38 2495 a
SDict begin [/View [/XYZ H.V]/Dest (Item.150) cvn /DEST pdfmark end
 -38 2495
a 0 TeXcolorgray -246 2578 a FE(Ex)o(er)o(cice)14 b(47)p
0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(On)j(r)o(appelle)i(les)f(zones)f(de)h(tir)f(\340)g(2)h(et)g(3)f
(points)i(:)p 0 TeXcolorgray 0 TeXcolorgray 393 4247
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 143.0608 a add def
/d 0.0 a add neg def /h 193.82431 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 393 4247 a 511 3430 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  [ 0.0 -85.35823 113.81097
-85.35823 113.81097 85.35823 0.0 85.35823  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.7 0.7  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor   0.8 SLW 0
0 1  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def    /x 0. def /x1 2. def /dx x1
x sub 49 div def /F@pstplot (-sqrt(4.0-x^(2.0)))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if  56.90549 0.0 lineto  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { /lineto
load stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def
   /x 2. def /x1 0. def /dx x1 x sub 49 div def /F@pstplot (sqrt(4.0-x^(2.0)))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy /lineto load stopped { moveto
} if  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto
} { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  }
ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } if  0.0 -56.90549 lineto closepath gsave 0.7 0.7 1  setrgbcolor
 0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t -1.5707963267948966
def /t1 1.5707963267948966 def /dt t1 t sub 49 div def /F@pstplot (1.*2.*cos(t)+0.*2.*sin(t)+0.|0.*2.*cos(t)+1.*2.*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 85.35823 0.0 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 0.0 -85.35823 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 85.35823 0.0
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.81097 -85.35823 113.81097
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 -85.35823 113.81097
-85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 85.35823 0.0 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 8.83372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray   8.83372 0.0 2 copy moveto
4.31332 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 511 3430 a
tx@Dict begin { 6.77931 -25.08891 } PutCoor PutBegin  end
 511 3430 a 0 0 1
TeXcolorrgb 54 x FC(tir)f(\340)f(2)h(pts)p 0 TeXcolorgray
511 3430 a
tx@Dict begin  PutEnd  end
 511 3430 a 511 3430 a
tx@Dict begin { 54.97914 -60.46945 } PutCoor PutBegin  end
 511 3430 a 1 0 0 TeXcolorrgb
54 x FC(tir)g(\340)f(3)h(pts)p 0 TeXcolorgray 511 3430
a
tx@Dict begin  PutEnd  end
 511 3430 a 1581 4247 a
currentpoint initclip moveto
 1581 4247 a 0 TeXcolorgray 2050
4266 9 1771 v 0 TeXcolorgray 2095 2578 a FC(On)f(r)o(epr\351sente)i(la)
e(situation)i(par)f(un)f(arbr)o(e)f(pond\351r\351)i(:)p
0 TeXcolorgray 0 TeXcolorgray 2392 3403 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 2392 3403 a
3068 3104 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.76 3.87999 3.21748
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 3068 3104 a Fz(D)3101 3077 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 3101 3077 a
3101 3077 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 3101 3077 a 3026 3103 a FC(0,)8 b(53)3101
3077 y
tx@Dict begin PutEnd  end
 3101 3077 a 3769 2954 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 3769 2954 a 2 w Fz(M)3809
2927 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 3809 2927 a 3809 2927 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 3809 2927 a 3734 2952
a FC(0,)g(52)3809 2927 y
tx@Dict begin PutEnd  end
 3809 2927 a 3769 3265 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 9.60999 4.805 4.55145
} false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 3769
3265 a 3769 3199 80 5 v 2 w Fz(M)3809 2927 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 3809 2927
a 3809 2927 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 3809 2927 a 3734 2952 a FC(0,)g(48)3809
2927 y
tx@Dict begin PutEnd  end
 3809 2927 a 3068 3716 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.76 3.87999 4.55145 }
false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 3068 3716 a 3068 3650
65 5 v Fz(D)3101 3679 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 3101 3679 a 3101 3679 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 3101
3679 a 3026 3704 a FC(0,)g(47)3101 3679 y
tx@Dict begin PutEnd  end
 3101 3679 a
3769 3555 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 3769 3555 a 2 w Fz(M)3809 3528 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 3809 3528
a 3809 3528 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 3809 3528 a 3734 3554 a FC(0,)g(44)3809
3528 y
tx@Dict begin PutEnd  end
 3809 3528 a 3769 3867 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 9.60999 4.805 4.55145
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 3769 3867 a 3769 3800
80 5 v 2 w Fz(M)3809 3528 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 3809 3528 a 3809 3528 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 3809
3528 a 3734 3554 a FC(0,)g(56)3809 3528 y
tx@Dict begin PutEnd  end
 3809 3528 a
2095 4247 a FE(R)o(emarque)14 b(:)p 2521 4180 65 5 v
18 w Fz(D)23 b FC(signi\002e)18 b(\253)c(S)n(tephen)19
b(C)o(urr)q(y)e(tir)o(e)g(\340)g(3)h(points)c(\273.)-246
4332 y
SDict begin H.S end
 -246 4332 a -246 4332 a
SDict begin 12 H.A end
 -246 4332 a -246 4332
a
SDict begin [/View [/XYZ H.V]/Dest (Item.151) cvn /DEST pdfmark end
 -246 4332 a -38 4446 a FC(La)j(probabilit\351)h(que)g(S)n(tephen)h(C)
o(urr)q(y)e(tir)o(e)g(\340)g(2)h(points)h(et)f(marque)f(est)1493
4627 y Fz(P)8 b FC(\()p Fz(D)16 b FB(\\)c Fz(M)7 b FC(\))15
b FB(\306)g FC(0,)8 b(53)i FB(\243)g FC(0,)e(52)18 b
FB(\306)c FC(0,)8 b(2756.)-246 4720 y
SDict begin H.S end
 -246 4720 a -246
4720 a
SDict begin 12 H.A end
 -246 4720 a -246 4720 a
SDict begin [/View [/XYZ H.V]/Dest (Item.152) cvn /DEST pdfmark end
 -246 4720 a 0 TeXcolorgray
-141 4823 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray -60
w(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17 b(la)g(for)q(mule)i(des)e
(probabilit\351s)h(totales)o(,)h(la)e(probabilit\351)h(que)g(S)n
(tephen)h(C)o(urr)q(y)e(marque)h(est)g(:)1338 5118 y
Fz(P)8 b FC(\()r Fz(M)f FC(\))14 b FB(\306)h Fz(P)1673
5119 y FC(\()1700 5118 y Fz(D)h FB(\\)c Fz(M)1918 5119
y FC(\))1956 5118 y FB(\305)e Fz(P)2084 5031 y Fm(\263)p
2116 5052 65 5 v 2116 5118 a Fz(D)16 b FB(\\)c Fz(M)2334
5031 y Fm(\264)1540 5268 y FB(\306)j FC(0,)8 b(53)i FB(\243)g
FC(0,)e(52)i FB(\305)g FC(0,)e(47)i FB(\243)g FC(0)q(,)e(4)q(4)20
b FB(\306)14 b FC(0,)8 b(4824.)-246 5380 y
SDict begin H.S end
 -246 5380
a -246 5380 a
SDict begin 12 H.A end
 -246 5380 a -246 5380 a
SDict begin [/View [/XYZ H.V]/Dest (Item.153) cvn /DEST pdfmark end
 -246 5380 a 0 TeXcolorgray
-141 5464 a FC(4.)p 0 TeXcolorgray 43 w(On)17 b(sait)h(que)g(S)n
(tephen)h(C)o(urr)q(y)e(a)g(52)i(\045)e(de)g(r\351ussite)i(lorsqu)n
('il)f(tir)o(e)g(\340)f(2)g(points)o(,)j(donc)1809 5646
y Fz(P)1859 5658 y Fs(D)1912 5646 y FC(\()r Fz(M)7 b
FC(\))15 b FB(\306)f FC(0,)8 b(52.)p 0 TeXcolorgray 1909
5895 a(28)p 0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.29) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -38 -163 a FC(C)o(e)18 b(nombr)o(e)f(est)h(celui)g(qui)g
(appar)o(a\356t)g(sur)g(la)f(br)o(anche)h(en)f(haut)h(\340)f(droite)g
(de)g(l)o('arbr)o(e)o(.)g(P)m(ar)g(cons\351quent,)i(le)f(calcul)1661
8 y Fz(P)8 b FC(\()p Fz(D)16 b FB(\\)c Fz(M)7 b FC(\))15
b FB(\306)f FC(0,)8 b(53)i FB(\243)g FC(0,)e(52)-38 179
y(peut)18 b(se)g(r\351\351cr)q(ir)o(e)1596 279 y Fz(P)8
b FC(\()p Fz(D)16 b FB(\\)c Fz(M)7 b FC(\))15 b FB(\306)f
Fz(P)8 b FC(\()p Fz(D)e FC(\))k FB(\243)g Fz(P)2305 291
y Fs(D)2359 279 y FC(\()r Fz(M)d FC(\).)-38 578 y(D)o('une)17
b(mani\350r)o(e)h(g\351n\351r)o(ale)o(,)g(un)g(arbr)o(e)e
(pond\351r\351)i(est)g(toujours)g(de)f(la)h(for)q(me)p
0 TeXcolorgray 0 TeXcolorgray 836 1214 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 836 1214 a 1499
912 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 10.97998 5.48999 3.21748
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1499 912 a 24 w Fz(A)1545 885 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1545 885 a 1545
885 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.95998 def /r 9.95998 def /h 3.43002 def /d 4.24496 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 1545 885 a 1 0 0 TeXcolorrgb 1462 911 a Fz(P)8
b FC(\()e Fz(A)s FC(\))p 0 TeXcolorgray 1545 885 a
tx@Dict begin PutEnd  end
 1545
885 a 2208 756 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 10.88997 5.44498 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2208 756 a 18 w Fz(B)p 1 0 0 TeXcolorrgb
2443 755 a(P)i FC(\()e Fz(A)13 b FB(\\)d Fz(B)d FC(\))15
b FB(\306)g Fz(P)8 b FC(\()e Fz(A)s FC(\))k FB(\243)g
Fz(P)3119 767 y Fs(A)3162 755 y FC(\()p Fz(B)d FC(\))p
0 TeXcolorgray 2254 729 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2254 729 a 2254 729 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 12.46916 def /r 12.46916 def /h 3.43002 def /d 4.57996 def /flag
true def VPutAdjust LPutCoor end PutBegin  end
 2254
729 a 1 0 0 TeXcolorrgb 2150 755 a Fz(P)2204 767 y Fs(A)2248
755 y FC(\()p Fz(B)g FC(\))p 0 TeXcolorgray 2254 729
a
tx@Dict begin PutEnd  end
 2254 729 a 2209 1079 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 10.88997 5.44498 4.55145
} false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2209 1079 a 2226 1012 57 5 v
17 w Fz(B)p 1 0 0 TeXcolorrgb 0 TeXcolorgray 2254 729
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2254 729 a 2254 729 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 1.03499 def /r 1.03499 def /h -3.07997 def /d 3.07997 def /flag
false def VPutAdjust LPutCoor end PutBegin  end
 2254 729 a 2254 729 a
tx@Dict begin PutEnd  end
 2254 729
a 1499 1530 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 10.97998 5.48999 4.55145
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1499 1530 a 1517 1464 57 5 v 24 w Fz(A)1545
1492 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1545 1492 a 1545 1492 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 1.03499 def /r 1.03499 def /h -3.07997 def /d 3.07997 def /flag
false def VPutAdjust LPutCoor end PutBegin  end
 1545 1492 a 1545 1492
a
tx@Dict begin PutEnd  end
 1545 1492 a 2208 1369 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 10.88997 5.44498 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2208 1369 a 18 w Fz(B)p 1 0 0
TeXcolorrgb 0 TeXcolorgray 2254 1342 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2254 1342 a 2254
1342 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 1.03499 def /r 1.03499 def /h -3.07997 def /d 3.07997 def /flag
true def VPutAdjust LPutCoor end PutBegin  end
 2254 1342 a 2254 1342 a
tx@Dict begin PutEnd  end
 2254 1342 a 2209 1681
a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 10.88997 5.44498 4.55145
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2209 1681 a 2226 1614 57 5 v 17 w Fz(B)p 1 0 0 TeXcolorrgb
0 TeXcolorgray 2254 1342 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2254 1342 a 2254 1342 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 1.03499 def /r 1.03499 def /h -3.07997 def /d 3.07997 def /flag
false def VPutAdjust LPutCoor end PutBegin  end
 2254
1342 a 2254 1342 a
tx@Dict begin PutEnd  end
 2254 1342 a -38 1796 a FC(et)18 b(l)o('on)g(a)f
(donc)g(toujours)i Fz(P)8 b FC(\()e Fz(A)13 b FB(\\)d
Fz(B)d FC(\))15 b FB(\306)f Fz(P)8 b FC(\()e Fz(A)s FC(\))k
FB(\243)g Fz(P)1428 1808 y Fs(A)1471 1796 y FC(\()p Fz(B)d
FC(\).)18 b(On)f(en)h(d\351duit)f(la)h(r)o(elation)g(fondamentale)h
(\(hors-progr)o(amme\))e(:)1740 2033 y Fz(P)1794 2045
y Fs(A)1838 2033 y FC(\()p Fz(B)7 b FC(\))14 b FB(\306)2041
1977 y Fz(P)8 b FC(\()e Fz(A)13 b FB(\\)d Fz(B)d FC(\))p
2041 2014 297 5 v 2106 2090 a Fz(P)h FC(\()e Fz(A)s FC(\))2347
2033 y(.)p 1712 1898 684 4 v 1712 2126 4 231 v 2392 2126
V 1712 2128 684 4 v -246 2199 a
SDict begin H.S end
 -246 2199 a -246 2199
a
SDict begin 12 H.A end
 -246 2199 a -246 2199 a
SDict begin [/View [/XYZ H.V]/Dest (Item.154) cvn /DEST pdfmark end
 -246 2199 a 0 TeXcolorgray
-141 2289 a FC(5.)p 0 TeXcolorgray 43 w(P)n(our)17 b(calculer)h
Fz(P)485 2301 y Fs(M)549 2289 y FC(\()p Fz(D)6 b FC(\),)17
b(on)g(utilise)j(la)d(for)q(mule)h(encadr\351e)g(ci-dessus)o(,)h(avec)k
Fz(A)17 b FB(\306)f Fz(M)25 b FC(et)18 b Fz(B)k FB(\306)14
b Fz(D)38 b FC(:)p 0 0 1 TeXcolorrgb 2865 2289 a
SDict begin H.S end
 2865
2289 a -30 x Fv(6)2900 2289 y
SDict begin 12 H.L end
 2900 2289 a 2900 2289 a
SDict begin [/Subtype /Link/Dest (Hfootnote.6) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end

2900 2289 a 0 TeXcolorgray 1428 2491 a Fz(P)1479 2503
y Fs(M)1543 2491 y FC(\()p Fz(D)6 b FC(\))14 b FB(\306)1754
2435 y Fz(P)8 b FC(\()r Fz(M)18 b FB(\\)10 b Fz(D)c FC(\))p
1754 2472 329 5 v 1824 2548 a Fz(P)i FC(\()r Fz(M)f FC(\))2106
2491 y FB(\306)2185 2435 y FC(0,)h(2756)p 2185 2472 231
5 v 2185 2548 a(0,)g(4824)2440 2491 y FB(\274)15 b FC(0,)8
b(57.)-38 2708 y(C)o(onclusion)19 b(:)f(sachant)g(qu)n('il)g(a)f
(marqu\351,)h(il)f(y)g(a)g(environ)h(57)h(\045)e(de)g(chances)h(que)g
(S)n(tephen)h(C)o(urr)q(y)e(ait)h(tir\351)f(\340)h(2)f(points)o(.)-246
2790 y
SDict begin H.S end
 -246 2790 a -246 2790 a
SDict begin 12 H.A end
 -246 2790 a -246 2790
a
SDict begin [/View [/XYZ H.V]/Dest (exo.48) cvn /DEST pdfmark end
 -246 2790 a -246 2807 a
SDict begin H.S end
 -246 2807 a -246 2807 a
SDict begin 12 H.A end
 -246
2807 a -246 2807 a
SDict begin [/View [/XYZ H.V]/Dest (Item.155) cvn /DEST pdfmark end
 -246 2807 a 0 TeXcolorgray 93 x FE(Ex)o(er)o(cice)d
(48)p 0 TeXcolorgray 0 TeXcolorgray 146 w FC(1.)p 0 TeXcolorgray
43 w(On)j(r)o(epr\351sente)h(la)g(situation)h(par)e(un)h(arbr)o(e)e
(pond\351r\351)i(:)p 0 TeXcolorgray 0 TeXcolorgray 1331
3479 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 1331 3479 a 2007 3180 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.76 3.87999 3.21748
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2007 3180 a Fz(D)2039
3153 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039 3153 a 2039 3153 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2039 3153 a 1964 3178
a FC(0,)8 b(08)2039 3153 y
tx@Dict begin PutEnd  end
 2039 3153 a 2719 3029 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719
3029 a Fz(T)2748 3002 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 3002 a 2748 3002 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2748
3002 a 2673 3028 a FC(0,)g(98)2748 3002 y
tx@Dict begin PutEnd  end
 2748 3002 a
2719 3341 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 3341 a 2719 3274 59 5 v Fz(T)2748 3002
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 3002 a 2748 3002 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2748 3002 a 2673 3028 a FC(0,)g(02)2748
3002 y
tx@Dict begin PutEnd  end
 2748 3002 a 2007 3792 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.76 3.87999 4.55145 }
false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2007 3792 a 2007 3725
65 5 v Fz(D)2039 3754 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039 3754 a 2039 3754 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 9.02885 def /r 9.02885 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2039
3754 a 1964 3780 a FC(0,)g(92)2039 3754 y
tx@Dict begin PutEnd  end
 2039 3754 a
2719 3631 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 3631 a Fz(T)2748 3604 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 3604 a
2748 3604 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 11.46886 def /r 11.46886 def /h 3.08002 def /d 4.37996 def /flag
true def VPutAdjust LPutCoor end PutBegin  end
 2748 3604 a 2653 3630 a FC(0,)g(005)2748
3604 y
tx@Dict begin PutEnd  end
 2748 3604 a 2719 3942 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 3942 a 2719 3876
59 5 v Fz(T)2748 3604 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 3604 a 2748 3604 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 11.46886 def /r 11.46886 def /h 3.08002 def /d 4.37996 def /flag
false def VPutAdjust LPutCoor end PutBegin  end
 2748
3604 a 2653 3630 a FC(0,)g(995)2748 3604 y
tx@Dict begin PutEnd  end
 2748 3604
a -246 3980 a
SDict begin H.S end
 -246 3980 a -246 3980 a
SDict begin 12 H.A end
 -246 3980 a -246
3980 a
SDict begin [/View [/XYZ H.V]/Dest (Item.156) cvn /DEST pdfmark end
 -246 3980 a 0 TeXcolorgray -141 4055 a FC(2.)p
0 TeXcolorgray 43 w Fz(P)g FC(\()p Fz(D)16 b FB(\\)10
b Fz(T)i FC(\))j FB(\306)f FC(0,)8 b(08)i FB(\243)g FC(0,)e(98)18
b FB(\306)c FC(0,)8 b(0784.)-246 4078 y
SDict begin H.S end
 -246 4078 a -246
4078 a
SDict begin 12 H.A end
 -246 4078 a -246 4078 a
SDict begin [/View [/XYZ H.V]/Dest (Item.157) cvn /DEST pdfmark end
 -246 4078 a 0 TeXcolorgray
-141 4180 a FC(3.)p 0 TeXcolorgray 43 w(D)o('apr\350s)17
b(la)g(for)q(mule)i(des)e(probabilit\351s)h(totales)o(,)h(la)e
(probabilit\351)h(que)g(le)g(test)g(soit)g(positif)h(est)f(:)1349
4463 y Fz(P)8 b FC(\()p Fz(T)k FC(\))i FB(\306)g Fz(P)1662
4464 y FC(\()1689 4463 y Fz(D)i FB(\\)10 b Fz(T)1886
4464 y FC(\))1924 4463 y FB(\305)g Fz(P)2052 4376 y Fm(\263)p
2084 4396 65 5 v 2084 4463 a Fz(D)16 b FB(\\)10 b Fz(T)2281
4376 y Fm(\264)1530 4613 y FB(\306)k FC(0,)8 b(08)i FB(\243)g
FC(0,)e(98)i FB(\305)g FC(0,)e(92)i FB(\243)g FC(0)q(,)e(0)q(05)21
b FB(\306)14 b FC(0,)8 b(083.)-246 4714 y
SDict begin H.S end
 -246 4714 a
-246 4714 a
SDict begin 12 H.A end
 -246 4714 a -246 4714 a
SDict begin [/View [/XYZ H.V]/Dest (Item.158) cvn /DEST pdfmark end
 -246 4714 a 0 TeXcolorgray
-141 4796 a FC(4.)p 0 TeXcolorgray 43 w(On)17 b(utilise)i(\340)e
(nouveau)h(la)f(for)q(mule)i(encadr\351e)e(de)g(l)o('exer)o(cice)h
(pr\351c\351dent)g(:)f(sachant)h(qu)n('un)g(athl\350te)h(pr\351sente)f
(un)g(test)g(positif,)h(la)e(proba-)-38 4896 y(bilit\351)h(qu)n('il)g
(soit)g(dop\351)g(est)1447 5032 y Fz(P)1497 5044 y Fs(T)1545
5032 y FC(\()p Fz(D)6 b FC(\))14 b FB(\306)1757 4975
y Fz(P)8 b FC(\()p Fz(T)22 b FB(\\)10 b Fz(D)c FC(\))p
1757 5012 307 5 v 1826 5089 a Fz(P)i FC(\()p Fz(T)k FC(\))2087
5032 y FB(\306)2166 4975 y FC(0,)c(0784)p 2166 5012 231
5 v 2187 5089 a(0,)g(083)2422 5032 y FB(\274)14 b FC(0,)8
b(94.)-246 5162 y
SDict begin H.S end
 -246 5162 a -246 5162 a
SDict begin 12 H.A end
 -246 5162 a
-246 5162 a
SDict begin [/View [/XYZ H.V]/Dest (exo.49) cvn /DEST pdfmark end
 -246 5162 a -246 5179 a
SDict begin H.S end
 -246 5179 a -246
5179 a
SDict begin 12 H.A end
 -246 5179 a -246 5179 a
SDict begin [/View [/XYZ H.V]/Dest (Item.159) cvn /DEST pdfmark end
 -246 5179 a 0 TeXcolorgray
78 x FE(Ex)o(er)o(cice)14 b(49)p 0 TeXcolorgray 0 TeXcolorgray
146 w FC(1.)p 0 TeXcolorgray 43 w(On)i(commence)h(par)f(fair)o(e)g(un)g
(arbr)o(e)f(pond\351r\351.)i(C)o(omme)g(un)g(appar)o(eil)g(en)f(par)q
(fait)g(\351tat)h(de)f(fonctionnement)j(est)d(toujours)-38
5357 y(accept\351)j(\340)f(l)o('issue)j(du)d(test,)i(il)e(y)g(a)h(un)f
(1)h(et)g(un)g(0)g(sur)f(les)h(br)o(anches)g(en)g(haut)g(\340)f(droite)
o(.)g(N)n(otons)h(par)f(ailleurs)i(que)f(nous)g(sommes)h(oblig\351s)-38
5457 y(de)d(conser)q(ver)h(les)g(fr)o(actions)o(,)h(par)o(ce)e(que)h
(les)g(r\351sultats)h(\253)14 b(ne)j(tombent)i(pas)e(juste)d(\273.)p
0 TeXcolorgray -246 5569 1757 4 v -154 5646 a Fu(6)q(.)p
0 TeXcolorgray -76 5646 a
SDict begin H.S end
 -76 5646 a -76 5646 a
SDict begin H.R end
 -76 5646
a -76 5646 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.6) cvn /DEST pdfmark
end
 -76 5646 a 0 TeXcolorgray Fu(On)f(a)h(d\351j\340)g
(calcul\351)g Fk(P)7 b Fu(\()q Fk(M)15 b Fj(\\)8 b Fk(D)d
Fu(\))14 b(et)g Fk(P)7 b Fu(\()q Fk(M)f Fu(\))14 b(dans)f(les)h
(questions)f(pr\351c\351dentes)o(.)p 0 TeXcolorgray 0
TeXcolorgray 1909 5895 a FC(29)p 0 TeXcolorgray eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.30) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1331 258
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 1331 258 a 2012 -42 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.47 3.235 3.21748 }
false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2012 -42 a Fz(F)2039 -69 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039
-69 a 2039 -69 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 4.9088 def /r 4.9088 def /h 5.54161 def /d 6.56795 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2039 -69 a 2024 -76 a Fv(9)p 2008 -63
62 5 v 2008 -14 a(10)2039 -69 y
tx@Dict begin PutEnd  end
 2039 -69 a 2719 -192
a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 -192 a Fz(T)2748 -219 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 -219 a 2748 -219
a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 2.43999 def /r 2.43999 def /h 3.08002 def /d 3.07997 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2748 -219 a 2728 -193 a FC(1)2748 -219 y
tx@Dict begin PutEnd  end
 2748 -219
a 2719 120 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 120 a 2719 53 59 5 v Fz(T)2748 -219
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 -219 a 2748 -219 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 2.43999 def /r 2.43999 def /h 3.08002 def /d 3.12996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2748 -219 a 2728 -193 a FC(0)2748
-219 y
tx@Dict begin PutEnd  end
 2748 -219 a 2012 571 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 6.47 3.235 4.55145 } false
/N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2012 571 a 2012 504 54
5 v Fz(F)2039 533 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2039 533 a 2039 533 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 4.9088 def /r 4.9088 def /h 5.54161 def /d 6.56795 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2039 533 a
2024 526 a Fv(1)p 2008 539 62 5 v 2008 587 a(10)2039
533 y
tx@Dict begin PutEnd  end
 2039 533 a 2719 409 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 7.01999 3.51 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 409 a Fz(T)2748 382
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748 382 a 2748 382 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 4.9088 def /r 4.9088 def /h 5.54161 def /d 6.52997 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2748 382 a 2733 375 a Fv(1)p
2717 388 62 5 v 2717 437 a(11)2748 382 y
tx@Dict begin PutEnd  end
 2748 382 a 2719
721 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 7.01999 3.51 4.55145 }
false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2719 721 a 2719 654 59 5 v Fz(T)2748 382 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2748
382 a 2748 382 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 4.9088 def /r 4.9088 def /h 5.54161 def /d 6.52997 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2748 382 a 2717 375 a Fv(10)p 2717 388
62 5 v 2717 437 a(11)2748 382 y
tx@Dict begin PutEnd  end
 2748 382 a -38 895 a
FC(On)17 b(en)h(vient)g(au)g(calcul)g(des)f(probabilit\351s)h
(demand\351)g(par)f(l)o('\351nonc\351)i(:)p 0 TeXcolorgray
7 1025 a(\225)p 0 TeXcolorgray 42 w Fz(P)143 938 y Fm(\263)p
174 958 54 5 v 87 x Fz(F)h FB(\\)10 b Fz(T)361 938 y
Fm(\264)407 1025 y FB(\306)502 992 y Fv(1)p 487 1005
62 5 v 487 1053 a(10)568 1025 y FB(\243)659 992 y Fv(1)p
643 1005 V 643 1053 a(11)729 1025 y FB(\306)839 992 y
Fv(1)p 808 1005 93 5 v 808 1053 a(110)928 1025 y FC(;)p
0 TeXcolorgray 7 1137 a(\225)p 0 TeXcolorgray 42 w(d)n('apr\350s)18
b(la)f(for)q(mule)h(des)g(probabilit\351s)g(totales)g(:)679
1353 y Fz(P)8 b FC(\()p Fz(T)k FC(\))i FB(\306)g Fz(P)992
1354 y FC(\()1019 1353 y Fz(F)20 b FB(\\)10 b Fz(T)1206
1354 y FC(\))1243 1353 y FB(\305)g Fz(P)1371 1266 y Fm(\263)p
1403 1286 54 5 v 1403 1353 a Fz(F)20 b FB(\\)10 b Fz(T)1590
1266 y Fm(\264)1636 1353 y FB(\306)1735 1297 y FC(9)p
1715 1334 82 5 v 1715 1410 a(10)1816 1353 y FB(\243)g
FC(1)g FB(\305)2027 1297 y FC(1)p 2007 1334 V 2007 1410
a(10)2108 1353 y FB(\243)2204 1297 y FC(1)p 2183 1334
V 2183 1410 a(11)2289 1353 y FB(\306)2388 1297 y FC(9)p
2368 1334 V 2368 1410 a(10)2469 1353 y FB(\305)2584 1297
y FC(1)p 2544 1334 122 5 v 2544 1410 a(110)2690 1353
y FB(\306)2789 1297 y FC(99)p 2769 1334 V 2769 1410 a(110)2910
1353 y FB(\305)3026 1297 y FC(1)p 2986 1334 V 2986 1410
a(110)3131 1353 y FB(\306)3210 1297 y FC(100)p 3210 1334
V 3210 1410 a(110)3356 1353 y FB(\306)3435 1297 y FC(10)p
3435 1334 82 5 v 3435 1410 a(11)3526 1353 y(.)-246 1479
y
SDict begin H.S end
 -246 1479 a -246 1479 a
SDict begin 12 H.A end
 -246 1479 a -246 1479 a
SDict begin [/View [/XYZ H.V]/Dest (Item.160) cvn /DEST pdfmark end
 -246
1479 a 0 TeXcolorgray -141 1559 a FC(2.)p 0 TeXcolorgray
43 w(S)o(achant)18 b(qu)n('un)g(appar)o(eil)g(a)f(\351t\351)h
(accept\351)g(\340)f(l)o('issue)i(du)f(test,)g(la)f(probabilit\351)h
(qu)n('il)g(ne)g(fonctionne)h(pas)f(par)q(faitement)h(est)1170
1842 y Fz(P)1220 1854 y Fs(T)1277 1754 y Fm(\263)p 1308
1775 54 5 v 88 x Fz(F)1362 1754 y Fm(\264)1408 1842 y
FB(\306)1487 1757 y Fz(P)1550 1670 y Fm(\263)1582 1757
y Fz(T)j FB(\\)p 1715 1691 V 10 w Fz(F)1769 1670 y Fm(\264)p
1487 1822 314 5 v 1560 1899 a Fz(P)8 b FC(\()p Fz(T)k
FC(\))1825 1842 y FB(\306)1944 1743 y Fv(1)p 1914 1756
93 5 v 1914 1804 a(110)p 1904 1822 113 5 v 1929 1874
a(10)p 1929 1887 62 5 v 1929 1936 a(11)2040 1842 y FB(\306)2160
1785 y FC(1)p 2119 1822 122 5 v 2119 1899 a(110)2261
1842 y FB(\243)2336 1785 y FC(11)p 2336 1822 82 5 v 2336
1899 a(10)2441 1842 y FB(\306)2561 1785 y FC(11)p 2520
1822 163 5 v 2520 1899 a(1100)2707 1842 y FB(\306)2826
1785 y FC(1)p 2786 1822 122 5 v 2786 1899 a(100)2917
1842 y(.)-246 2019 y
SDict begin H.S end
 -246 2019 a -246 2019 a
SDict begin 12 H.A end
 -246 2019
a -246 2019 a
SDict begin [/View [/XYZ H.V]/Dest (exo.50) cvn /DEST pdfmark end
 -246 2019 a -246 2021 a
SDict begin H.S end
 -246 2021 a -246
2021 a
SDict begin 12 H.A end
 -246 2021 a -246 2021 a
SDict begin [/View [/XYZ H.V]/Dest (Item.161) cvn /DEST pdfmark end
 -246 2021 a 0 TeXcolorgray
80 x FE(Ex)o(er)o(cice)i(50)p 0 TeXcolorgray 0 TeXcolorgray
146 w FC(1.)p 0 TeXcolorgray 43 w(On)27 b(r)o(epr\351sente)h(la)f
(situation)i(par)e(un)g(arbr)o(e)f(pond\351r\351.)h(Les)h
(probabilit\351s)g(sont)f(les)h(m\352mes)h(sur)e(toutes)h(les)g(br)o
(anches)-38 2200 y(\(0,7/0,3\),)18 b(car)e(chaque)g(jour)h(J)m(ustin)g
(a)f(70)h(\045)e(de)h(chances)h(d)n('avoir)f(des)g(spams)h(\226)f(et)h
(ce)f(ind\351pendamment)i(de)e(ce)g(qu)n('il)h(s)m('est)g(pass\351)g(l)
o('autr)o(e)-38 2300 y(jour)-5 b(.)p 0 TeXcolorgray 0
TeXcolorgray 1325 2939 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 1325 2939 a 2010 2639 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 5.62999 2.81499 3.21748
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2010
2639 a Fz(L)2034 2612 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2034 2612 a 2034 2612 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2034
2612 a 1979 2638 a FC(0,)8 b(7)2034 2612 y
tx@Dict begin PutEnd  end
 2034 2612
a 2703 2489 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2703 2489 a 2 w Fz(M)2742 2462 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2742 2462
a 2742 2462 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2742 2462 a 2687 2488 a FC(0,)g(7)2742
2462 y
tx@Dict begin PutEnd  end
 2742 2462 a 2702 2801 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 9.60999 4.805 4.55145
} false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2702 2801 a 2702 2734
80 5 v 2 w Fz(M)2742 2462 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2742 2462 a 2742 2462 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2742
2462 a 2687 2488 a FC(0,)g(3)2742 2462 y
tx@Dict begin PutEnd  end
 2742 2462 a
2010 3252 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 5.62999 2.81499 4.55145
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2010 3252 a 2010 3185 47 5 v Fz(L)2034 3214
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2034 3214 a 2034 3214 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2034 3214 a 1979 3239 a FC(0,)g(3)2034
3214 y
tx@Dict begin PutEnd  end
 2034 3214 a 2703 3090 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2703 3090 a 2 w Fz(M)2742
3063 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2742 3063 a 2742 3063 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2742 3063 a 2687 3089
a FC(0,)g(7)2742 3063 y
tx@Dict begin PutEnd  end
 2742 3063 a 2702 3402 a
tx@Dict begin  tx@NodeDict begin {9.1029 0.0 9.60999 4.805 4.55145
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2702
3402 a 2702 3335 80 5 v 2 w Fz(M)2742 3063 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2742 3063
a 2742 3063 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2742 3063 a 2687 3089 a FC(0,)g(3)2742
3063 y
tx@Dict begin PutEnd  end
 2742 3063 a -246 3446 a
SDict begin H.S end
 -246 3446 a -246 3446
a
SDict begin 12 H.A end
 -246 3446 a -246 3446 a
SDict begin [/View [/XYZ H.V]/Dest (Item.162) cvn /DEST pdfmark end
 -246 3446 a 0 TeXcolorgray
-141 3526 a FC(2.)p 0 TeXcolorgray 0 TeXcolorgray 88
w(\225)p 0 TeXcolorgray 42 w(La)17 b(probabilit\351)h(que)g(J)m(ustin)g
(ait)g(des)f(spams)i(lundi)f(et)g(mar)o(di)e(est)1518
3708 y Fz(P)8 b FC(\()e Fz(A)s FC(\))13 b FB(\306)h Fz(P)8
b FC(\()p Fz(L)14 b FB(\\)e Fz(M)7 b FC(\))15 b FB(\306)f
FC(0,)8 b(7)i FB(\243)g FC(0,)e(7)17 b FB(\306)e FC(0,)8
b(49.)p 0 TeXcolorgray 7 3891 a(\225)p 0 TeXcolorgray
42 w(La)17 b(probabilit\351)h(que)g(J)m(ustin)g(n)-6
b('ait)18 b(des)g(spams)g(qu)n('une)h(seule)f(fois)p
0 0 1 TeXcolorrgb 2080 3891 a
SDict begin H.S end
 2080 3891 a -30 x Fv(7)2116
3891 y
SDict begin 12 H.L end
 2116 3891 a 2116 3891 a
SDict begin [/Subtype /Link/Dest (Hfootnote.7) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2116 3891 a 0 TeXcolorgray
18 w FC(est)1123 4090 y Fz(P)8 b FC(\()p Fz(B)f FC(\))15
b FB(\306)f Fz(P)1434 4002 y Fm(\263)1466 4090 y Fz(L)g
FB(\\)p 1588 4023 80 5 v 12 w Fz(M)1667 4002 y Fm(\264)1709
4090 y FB(\305)c Fz(P)1837 4002 y Fm(\263)p 1869 4023
47 5 v 1869 4090 a Fz(L)k FB(\\)e Fz(M)2070 4002 y Fm(\264)2116
4090 y FB(\306)j FC(0,)8 b(7)i FB(\243)g FC(0,)e(3)i
FB(\305)g FC(0,)e(3)i FB(\243)g FC(0,)e(7)20 b FB(\306)14
b FC(0,)8 b(42.)-246 4220 y
SDict begin H.S end
 -246 4220 a -246 4220 a
SDict begin 12 H.A end
 -246
4220 a -246 4220 a
SDict begin [/View [/XYZ H.V]/Dest (exo.51) cvn /DEST pdfmark end
 -246 4220 a -246 4222 a
SDict begin H.S end
 -246 4222
a -246 4222 a
SDict begin 12 H.A end
 -246 4222 a -246 4222 a
SDict begin [/View [/XYZ H.V]/Dest (Item.163) cvn /DEST pdfmark end
 -246 4222 a 0 TeXcolorgray
80 x FE(Ex)o(er)o(cice)14 b(51)p 0 TeXcolorgray 0 TeXcolorgray
146 w FC(1.)p 0 TeXcolorgray 43 w(On)h(r)o(epr\351sente)i(la)f
(situation)i(par)d(un)h(arbr)o(e)f(pond\351r\351,)h(avec)g(de)g(gauche)
g(\340)f(droite)h(le)g(r\351sultat)h(du)e(1)3390 4278
y Fq(er)3451 4302 y FC(tir)-5 b(,)17 b(du)e(2)3708 4278
y Fq(e)3750 4302 y FC(et)h(du)g(3)3979 4278 y Fq(e)4005
4302 y FC(.)g(On)-38 4401 y(note)g Fz(R)21 b FC(pour)16
b(\253)c(r\351ussi)g(\273,)19 b Fz(M)k FC(pour)16 b(\253)c(manqu\351)g
(\273.)17 b(C)o(omme)g(dans)e(l)o('exer)o(cice)i(pr\351c\351dent,)f
(les)g(tirs)g(sont)g(ind\351pendants)h(et)f(R\351my)g(a)f(toujours)-38
4501 y(80)j(\045)f(de)g(chances)h(de)f(toucher)h(le)g(centr)o(e)g(de)f
(la)g(cible)o(,)g(donc)h(les)g(probabilit\351s)f(sont)h(les)g(m\352mes)
h(sur)f(toutes)h(les)f(br)o(anches)f(\(0,8/0,2\).)p 0
TeXcolorgray -246 4621 1757 4 v -154 4698 a Fu(7)q(.)p
0 TeXcolorgray -76 4698 a
SDict begin H.S end
 -76 4698 a -76 4698 a
SDict begin H.R end
 -76 4698
a -76 4698 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.7) cvn /DEST pdfmark
end
 -76 4698 a 0 TeXcolorgray Fu(Donc)d(il)g(en)g(a)f(le)i
(lundi,)e(mais)g(pas)h(le)g(mar)o(di)7 b(;)13 b(ou)h(bien)f(le)i(mar)o
(di,)e(mais)g(pas)h(le)g(lundi.)p 0 TeXcolorgray 0 TeXcolorgray
1909 5895 a FC(30)p 0 TeXcolorgray eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.31) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 721 828
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 3.07997 } false /N@T-0
16 {InitRnode } /NodeScale {} def NewNode end  end
 721 828 a 1402 247 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1402 247 a Fz(R)1430 220 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1430
220 a 1430 220 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 1430 220 a 1375 245 a FC(0,)8 b(8)1430
220 y
tx@Dict begin PutEnd  end
 1430 220 a 2111 -45 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2111 -45 a Fz(R)2138 -71
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2138 -71 a 2138 -71 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2138 -71 a 2083 -46 a FC(0,)g(8)2138
-71 y
tx@Dict begin PutEnd  end
 2138 -71 a 2820 -190 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2820 -190 a Fz(R)p 1 0 0
TeXcolorrgb 2950 -192 a FC(3)18 b(tirs)g(r\351ussis)p
0 TeXcolorgray 2847 -217 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 -217 a 2847 -217 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2847
-217 a 2792 -192 a FC(0,)8 b(8)2847 -217 y
tx@Dict begin PutEnd  end
 2847 -217
a 2807 101 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2807 101 a 2 w Fz(M)p 0 0 1 TeXcolorrgb
2963 100 a FC(2)17 b(tirs)h(r\351ussis)p 0 TeXcolorgray
2847 -217 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 -217 a 2847 -217 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2847 -217 a 2792
-192 a FC(0,)8 b(2)2847 -217 y
tx@Dict begin PutEnd  end
 2847 -217 a 2098 538 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end

2098 538 a 2 w Fz(M)2138 511 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2138 511 a 2138 511 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end

2138 511 a 2083 537 a FC(0,)g(2)2138 511 y
tx@Dict begin PutEnd  end
 2138 511 a
2820 392 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2820 392 a Fz(R)p 0 0 1 TeXcolorrgb 2950 391
a FC(2)18 b(tirs)g(r\351ussis)p 0 TeXcolorgray 2847 366
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 366 a 2847 366 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2847 366 a 2792 391 a FC(0,)8
b(8)2847 366 y
tx@Dict begin PutEnd  end
 2847 366 a 2807 684 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2807 684 a 2 w Fz(M)p
0 1 0 TeXcolorrgb 2963 683 a FC(1)17 b(tir)h(r\351ussi)p
0 TeXcolorgray 2847 366 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 366 a 2847 366 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2847
366 a 2792 391 a FC(0,)8 b(2)2847 366 y
tx@Dict begin PutEnd  end
 2847 366 a 1390
1412 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1390 1412 a 2 w Fz(M)1430 1386 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1430 1386 a 1430
1386 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 1430 1386 a 1375 1411 a FC(0,)g(2)1430 1386 y
tx@Dict begin PutEnd  end

1430 1386 a 2111 1121 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2111 1121 a Fz(R)2138 1094 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end

2138 1094 a 2138 1094 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2138 1094 a 2083 1120 a FC(0,)g(8)2138
1094 y
tx@Dict begin PutEnd  end
 2138 1094 a 2820 975 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-1-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2820 975 a Fz(R)p 0 0 1
TeXcolorrgb 2950 974 a FC(2)18 b(tirs)g(r\351ussis)p
0 TeXcolorgray 2847 948 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1-0 /N@T-0-1-0-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 948 a 2847 948 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2847
948 a 2792 974 a FC(0,)8 b(8)2847 948 y
tx@Dict begin PutEnd  end
 2847 948 a 2807
1267 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1-0-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2807 1267 a 2 w Fz(M)p 0 1 0 TeXcolorrgb 2963
1265 a FC(1)17 b(tir)h(r\351ussi)p 0 TeXcolorgray 2847
948 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1-0 /N@T-0-1-0-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 948 a 2847 948 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2847 948 a 2792 974 a FC(0,)8
b(2)2847 948 y
tx@Dict begin PutEnd  end
 2847 948 a 2098 1704 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 2098 1704 a 2 w
Fz(M)2138 1677 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2138 1677 a 2138 1677 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2138 1677 a
2083 1703 a FC(0,)g(2)2138 1677 y
tx@Dict begin PutEnd  end
 2138 1677 a 2820 1558
a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 6.61 3.305 3.21748 }
false /N@T-0-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2820 1558 a Fz(R)p 0 1 0 TeXcolorrgb 2950 1557 a FC(1)18
b(tir)f(r\351ussi)p 0 TeXcolorgray 2847 1531 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-0 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 1531
a 2847 1531 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag true
def VPutAdjust LPutCoor end PutBegin  end
 2847 1531 a 2792 1557 a FC(0,)8 b(8)2847
1531 y
tx@Dict begin PutEnd  end
 2847 1531 a 2807 1849 a
tx@Dict begin  tx@NodeDict begin {6.43498 0.0 9.60999 4.805 3.21748
} false /N@T-0-1-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2807 1849 a 2 w Fz(M)p
0.5 TeXcolorgray 2963 1848 a FC(0)17 b(tir)h(r\351ussi)p
0 TeXcolorgray 2847 1531 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-1 InitNC { NCCoor tx@Dict
begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED
x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.
 def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2847 1531 a 2847 1531 a
tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y exch def /X exch def /NAngle 0 def /NCLW 0 def
} ifelse /Sin NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def
/l 6.58887 def /r 6.58887 def /h 3.08002 def /d 4.37996 def /flag false
def VPutAdjust LPutCoor end PutBegin  end
 2847
1531 a 2792 1557 a FC(0,)8 b(2)2847 1531 y
tx@Dict begin PutEnd  end
 2847 1531
a -38 2023 a FC(On)20 b(a)h(indiqu\351)h(le)f(nombr)o(e)f(de)h(tirs)g
(r\351ussis)h(\340)e(l)o('extr\351mit\351)k(droite)c(de)g(l)o('arbr)o
(e)o(,)g(avec)h(une)g(couleur)h(diff\351r)o(ente)g(en)f(fonction)h(du)e
(r\351sultat.)-38 2123 y(P)m(ar)d(exemple)o(,)i(lorsqu)n('on)f(suit)h
(le)e(chemin)i(tout)f(en)g(haut,)g(R\351my)g(r\351ussit)g(le)g(1)2312
2099 y Fq(er)2357 2123 y FC(,)g(le)g(2)2513 2099 y Fq(e)2556
2123 y FC(et)g(le)f(3)2756 2099 y Fq(e)2800 2123 y FC(tirs)o(,)h(donc)f
(on)g(a)h(indiqu\351)p 1 0 0 TeXcolorrgb 18 w(3)g(tirs)f(r\351ussis)p
0 TeXcolorgray(.)-246 2156 y
SDict begin H.S end
 -246 2156 a -246 2156 a
SDict begin 12 H.A end

-246 2156 a -246 2156 a
SDict begin [/View [/XYZ H.V]/Dest (Item.164) cvn /DEST pdfmark end
 -246 2156 a 0 TeXcolorgray -141
2251 a FC(2.)p 0 TeXcolorgray 43 w(P)n(our)h(gagner)f(un)i(panda)g(en)f
(peluche)o(,)i(R\351my)f(doit)f(toucher)h(2)g(fois)g(le)g(centr)o(e)f
(de)g(la)h(cible)o(.)f(C)o(ela)h(corr)o(espond)f(aux)h(trois)f(chemins)
i(qui)f(se)-38 2351 y(ter)q(minent)g(par)p 0 0 1 TeXcolorrgb
17 w(2)f(tirs)f(r\351ussis)p 0 TeXcolorgray(.)i(On)e(a)g(donc)989
2534 y Fz(P)8 b FC(\()e Fz(A)s FC(\))14 b FB(\306)g FC(0,)8
b(8)i FB(\243)g FC(0,)e(8)i FB(\243)g FC(0,)e(2)i FB(\305)g
FC(0,)e(8)i FB(\243)g FC(0)q(,)e(2)j FB(\243)f FC(0)q(,)e(8)j
FB(\305)f FC(0,)f(2)h FB(\243)g FC(0)q(,)e(8)j FB(\243)f
FC(0)q(,)e(8)21 b FB(\306)14 b FC(0,)8 b(384.)-246 2672
y
SDict begin H.S end
 -246 2672 a -246 2672 a
SDict begin 12 H.A end
 -246 2672 a -246 2672 a
SDict begin [/View [/XYZ H.V]/Dest (section.8) cvn /DEST pdfmark end
 -246
2672 a 139 x FF(8)105 b(S)m(uites)23 b(d\351\002nies)g(par)g(r\351curr)
n(ence)-246 2920 y
SDict begin H.S end
 -246 2920 a -246 2920 a
SDict begin 12 H.A end
 -246 2920
a -246 2920 a
SDict begin [/View [/XYZ H.V]/Dest (exo.52) cvn /DEST pdfmark end
 -246 2920 a 0 TeXcolorgray 75 x FE(Ex)o(er)o(cice)14
b(52)p 0 TeXcolorgray 41 w FC(L)-10 b('\351nonc\351)19
b(demande)f(de)f(\253)d(calculer)j(les)h(pr)o(emiers)g(ter)q(mes)c
(\273,)k(ce)g(qui)g(est)g(impr\351cis)o(.)g(Dans)f(chaque)h(cas)o(,)g
(nous)g(irons)f(jusqu)n('\340)i Fz(u)4063 3007 y Fv(3)4098
2995 y FC(.)-246 3043 y
SDict begin H.S end
 -246 3043 a -246 3043 a
SDict begin 12 H.A end
 -246
3043 a -246 3043 a
SDict begin [/View [/XYZ H.V]/Dest (Item.165) cvn /DEST pdfmark end
 -246 3043 a 0 TeXcolorgray -141 3138
a FC(1.)p 0 TeXcolorgray 43 w Fz(u)11 3150 y Fv(0)61
3138 y FB(\306)14 b FC(1)k(et)1825 3238 y Fz(u)1874 3250
y Fs(n)s Fp(\305)p Fv(1)2005 3238 y FB(\306)c Fz(u)2123
3250 y Fs(n)2177 3238 y FB(\305)c FC(2)-38 3387 y(pour)18
b(tout)g(entier)g(natur)o(el)g Fz(n)t FC(.)1820 3684
y Fz(u)1869 3696 y Fv(0)1918 3684 y FB(\306)d FC(1)1820
3809 y Fz(u)1869 3821 y Fv(1)1918 3809 y FB(\306)g FC(1)10
b FB(\305)g FC(2)15 b FB(\306)f FC(3)1820 3933 y Fz(u)1869
3945 y Fv(2)1918 3933 y FB(\306)h FC(3)10 b FB(\305)g
FC(2)15 b FB(\306)f FC(5)1820 4058 y Fz(u)1869 4070 y
Fv(3)1918 4058 y FB(\306)h FC(5)10 b FB(\305)g FC(2)15
b FB(\306)f FC(7.)-38 4305 y(La)j(suite)i Fz(u)j FC(est)c(ar)q
(ithm\351tique)h(de)e(r)o(aison)h Fz(r)25 b FB(\306)14
b FC(2.)-246 4336 y
SDict begin H.S end
 -246 4336 a -246 4336 a
SDict begin 12 H.A end
 -246 4336
a -246 4336 a
SDict begin [/View [/XYZ H.V]/Dest (Item.166) cvn /DEST pdfmark end
 -246 4336 a 0 TeXcolorgray -141 4434 a
FC(2.)p 0 TeXcolorgray 45 w Fz(v)7 4446 y Fv(0)56 4434
y FB(\306)g FC(2)k(et)1832 4533 y Fz(v)1875 4545 y Fs(n)s
Fp(\305)p Fv(1)2005 4533 y FB(\306)c FC(3)c FB(\243)i
Fz(v)2234 4545 y Fs(n)-38 4683 y FC(pour)18 b(tout)g(entier)g(natur)o
(el)g Fz(n)t FC(.)1784 4979 y Fz(v)1827 4991 y Fv(0)1875
4979 y FB(\306)d FC(2)1784 5104 y Fz(v)1827 5116 y Fv(1)1875
5104 y FB(\306)g FC(3)10 b FB(\243)g FC(2)15 b FB(\306)f
FC(6)1784 5229 y Fz(v)1827 5241 y Fv(2)1875 5229 y FB(\306)h
FC(3)10 b FB(\243)g FC(6)15 b FB(\306)f FC(18)1784 5353
y Fz(v)1827 5365 y Fv(3)1875 5353 y FB(\306)h FC(3)10
b FB(\243)g FC(18)16 b FB(\306)e FC(54.)-38 5600 y(La)j(suite)k
Fz(v)j FC(est)18 b(g\351om\351tr)q(ique)g(de)g(r)o(aison)i
Fz(q)g FB(\306)14 b FC(3.)p 0 TeXcolorgray 1909 5895
a(31)p 0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray -254 -561 a
SDict begin H.S end
 -254 -561 a -254 -561 a
SDict begin H.R end
 -254
-561 a -254 -561 a
SDict begin [/View [/XYZ H.V]/Dest (page.32) cvn /DEST pdfmark end
 -254 -561 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -246 -246 a
SDict begin H.S end
 -246 -246 a -246 -246 a
SDict begin 12 H.A end
 -246
-246 a -246 -246 a
SDict begin [/View [/XYZ H.V]/Dest (Item.167) cvn /DEST pdfmark end
 -246 -246 a 0 TeXcolorgray -141 -105
a FC(3.)p 0 TeXcolorgray -38 -238 a Fm(\()19 -162 y Fz(w)83
-150 y Fv(0)271 -162 y FB(\306)15 b FC(2)19 -42 y Fz(w)83
-30 y Fs(n)s Fp(\305)p Fv(1)271 -42 y FB(\306)g FC(5)10
b FB(\241)i Fz(w)522 -30 y Fs(n)600 -42 y FC(pour)17
b(tout)h Fz(n)h FB(2)c Fa(N)p FC(.)1814 192 y Fz(w)1878
204 y Fv(0)1926 192 y FB(\306)g FC(2)1814 317 y Fz(w)1878
329 y Fv(1)1926 317 y FB(\306)g FC(5)10 b FB(\241)g FC(2)15
b FB(\306)f FC(3)1814 441 y Fz(w)1878 453 y Fv(2)1926
441 y FB(\306)h FC(5)10 b FB(\241)g FC(3)15 b FB(\306)f
FC(2)1814 566 y Fz(w)1878 578 y Fv(3)1926 566 y FB(\306)h
FC(5)10 b FB(\241)g FC(2)15 b FB(\306)f FC(3.)-38 813
y(C)o(ela)k(va)f(continuer)h(ainsi)h(ind\351\002niment)g(:)e(2,)h(3,)g
(2,)g(3,)g(2,)g(3,)g(etc)o(.)g(On)f(dit)g(que)h(la)g(suite)i
Fz(w)25 b FC(est)18 b(p\351r)q(iodique)o(.)-246 845 y
SDict begin H.S end

-246 845 a -246 845 a
SDict begin 12 H.A end
 -246 845 a -246 845 a
SDict begin [/View [/XYZ H.V]/Dest (Item.168) cvn /DEST pdfmark end
 -246 845
a 0 TeXcolorgray -141 942 a FC(4.)p 0 TeXcolorgray 45
w Fz(x)5 954 y Fv(0)55 942 y FB(\306)c FC(3)j(et)1775
1041 y Fz(x)1816 1053 y Fs(n)s Fp(\305)p Fv(1)1947 1041
y FB(\306)d FC(2)c FB(\243)i Fz(x)2174 1053 y Fs(n)2229
1041 y FB(\241)e FC(1)-38 1191 y(pour)18 b(tout)g(entier)g(natur)o(el)g
Fz(n)t FC(.)1746 1488 y Fz(x)1787 1500 y Fv(0)1837 1488
y FB(\306)c FC(3)1746 1612 y Fz(x)1787 1624 y Fv(1)1837
1612 y FB(\306)g FC(2)c FB(\243)g FC(3)g FB(\241)g FC(1)17
b FB(\306)d FC(5)1746 1737 y Fz(x)1787 1749 y Fv(2)1837
1737 y FB(\306)g FC(2)c FB(\243)g FC(5)g FB(\241)g FC(1)17
b FB(\306)d FC(9)1746 1861 y Fz(x)1787 1873 y Fv(3)1837
1861 y FB(\306)g FC(2)c FB(\243)g FC(9)g FB(\241)g FC(1)17
b FB(\306)d FC(17.)-246 1974 y
SDict begin H.S end
 -246 1974 a -246 1974
a
SDict begin 12 H.A end
 -246 1974 a -246 1974 a
SDict begin [/View [/XYZ H.V]/Dest (Item.169) cvn /DEST pdfmark end
 -246 1974 a 0 TeXcolorgray
-141 2059 a FC(5.)p 0 TeXcolorgray 47 w Fz(y)5 2071 y
Fv(0)54 2059 y FB(\306)g FC(4)k(et)1815 2158 y Fz(y)1854
2170 y Fs(n)s Fp(\305)p Fv(1)1984 2158 y FB(\306)d FC(10)10
b FB(\241)k Fz(y)2252 2170 y Fs(n)-38 2308 y FC(pour)k(tout)g
Fz(n)g FB(2)d Fa(N)p FC(.)1807 2605 y Fz(y)1846 2617
y Fv(0)1895 2605 y FB(\306)f FC(4)1807 2729 y Fz(y)1846
2741 y Fv(1)1895 2729 y FB(\306)g FC(10)c FB(\241)g FC(4)16
b FB(\306)e FC(6)1807 2854 y Fz(y)1846 2866 y Fv(2)1895
2854 y FB(\306)g FC(10)c FB(\241)g FC(6)16 b FB(\306)e
FC(4)1807 2978 y Fz(y)1846 2990 y Fv(3)1895 2978 y FB(\306)g
FC(10)c FB(\241)g FC(4)16 b FB(\306)e FC(6.)-38 3225
y(La)j(suite)23 b Fz(y)h FC(est)18 b(p\351r)q(iodique)o(.)-246
3259 y
SDict begin H.S end
 -246 3259 a -246 3259 a
SDict begin 12 H.A end
 -246 3259 a -246 3259
a
SDict begin [/View [/XYZ H.V]/Dest (Item.170) cvn /DEST pdfmark end
 -246 3259 a 0 TeXcolorgray -141 3354 a FC(6.)p 0 TeXcolorgray
45 w Fz(z)2 3366 y Fv(0)51 3354 y FB(\306)c FC(4)k(et)1744
3454 y Fz(z)1782 3466 y Fs(n)s Fp(\305)p Fv(1)1912 3454
y FB(\306)d FC(1,)8 b(5)i FB(\243)i Fz(z)2205 3466 y
Fs(n)2259 3454 y FB(\241)e FC(2)-38 3603 y(pour)18 b(tout)g(entier)g
(natur)o(el)g Fz(n)t FC(.)1734 3900 y Fz(z)1772 3912
y Fv(0)1821 3900 y FB(\306)c FC(4)1734 4025 y Fz(z)1772
4037 y Fv(1)1821 4025 y FB(\306)g FC(1,)8 b(5)i FB(\243)g
FC(4)g FB(\241)g FC(2)18 b FB(\306)c FC(4)1734 4149 y
Fz(z)1772 4161 y Fv(2)1821 4149 y FB(\306)g FC(1,)8 b(5)i
FB(\243)g FC(4)g FB(\241)g FC(2)18 b FB(\306)c FC(4)1734
4274 y Fz(z)1772 4286 y Fv(3)1821 4274 y FB(\306)g FC(1,)8
b(5)i FB(\243)g FC(4)g FB(\241)g FC(2)18 b FB(\306)c
FC(4.)-38 4471 y(On)j(dit)g(que)h(la)g(suite)i Fz(z)i
FC(est)c(constante)o(.)p 0 TeXcolorgray 1909 5895 a(32)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
